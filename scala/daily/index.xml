<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-15T02:59:05Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Philippus/elastic4s</title>
    <updated>2024-04-15T02:59:05Z</updated>
    <id>tag:github.com,2024-04-15:/Philippus/elastic4s</id>
    <link href="https://github.com/Philippus/elastic4s" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Elasticsearch Scala Client - Reactive, Non Blocking, Type Safe, HTTP Client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;elastic4s - Elasticsearch Scala Client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/sksamuel/elastic4s/workflows/master/badge.svg?sanitize=true&#34; alt=&#34;master&#34;&gt; &lt;a href=&#34;https://index.scala-lang.org/sksamuel/elastic4s/elastic4s-core&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/sksamuel/elastic4s/elastic4s-core/latest-by-scala-version.svg?sanitize=true&#34; alt=&#34;elastic4s-core Scala version support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/com/sksamuel/elastic4s/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nexus/s/https/oss.sonatype.org/com.sksamuel.elastic4s/elastic4s-core_2.13.svg?label=latest%20snapshot&amp;amp;style=plastic&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is a community project - PRs will be accepted and releases published by the maintainer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Elastic4s is a concise, idiomatic, reactive, type safe Scala client for Elasticsearch. The official Elasticsearch Java client can of course be used in Scala, but due to Java&#39;s syntax it is more verbose and it naturally doesn&#39;t support classes in the core Scala core library nor Scala idioms such as typeclass support.&lt;/p&gt; &#xA;&lt;p&gt;Elastic4s&#39;s DSL allows you to construct your requests programatically, with syntactic and semantic errors manifested at compile time, and uses standard Scala futures to enable you to easily integrate into an asynchronous workflow. The aim of the DSL is that requests are written in a builder-like way, while staying broadly similar to the Java API or Rest API. Each request is an immutable object, so you can create requests and safely reuse them, or further copy them for derived requests. Because each request is strongly typed your IDE or editor can use the type information to show you what operations are available for any request type.&lt;/p&gt; &#xA;&lt;p&gt;Elastic4s supports Scala collections so you don&#39;t have to do tedious conversions from your Scala domain classes into Java collections. It also allows you to index and read classes directly using typeclasses so you don&#39;t have to set fields or json documents manually. These typeclasses are generated using your favourite json library - modules exist for Jackson, Circe, Json4s, PlayJson and Spray Json. The client also uses standard Scala durations to avoid the use of strings or primitives for duration lengths.&lt;/p&gt; &#xA;&lt;h4&gt;Key points&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type safe concise DSL&lt;/li&gt; &#xA; &lt;li&gt;Integrates with standard Scala futures or other effects libraries&lt;/li&gt; &#xA; &lt;li&gt;Uses Scala collections library over Java collections&lt;/li&gt; &#xA; &lt;li&gt;Returns &lt;code&gt;Option&lt;/code&gt; where the java methods would return null&lt;/li&gt; &#xA; &lt;li&gt;Uses Scala &lt;code&gt;Duration&lt;/code&gt;s instead of strings/longs for time values&lt;/li&gt; &#xA; &lt;li&gt;Supports typeclasses for indexing, updating, and search backed by Jackson, Circe, Json4s, PlayJson and Spray Json implementations&lt;/li&gt; &#xA; &lt;li&gt;Supports Java and Scala HTTP clients such as Akka-Http&lt;/li&gt; &#xA; &lt;li&gt;Provides &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/#elastic-reactive-streams&#34;&gt;reactive-streams&lt;/a&gt; implementation&lt;/li&gt; &#xA; &lt;li&gt;Provides a testkit subproject ideal for your tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Release&lt;/h3&gt; &#xA;&lt;p&gt;Current Elastic4s versions support Scala 2.12 and 2.13. Scala 2.10 support has been dropped starting with 5.0.x and Scala 2.11 has been dropped starting with 7.2.0. For releases that are compatible with earlier versions of Elasticsearch, &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.sksamuel.elastic4s%22&#34;&gt;search maven central&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Elastic Version&lt;/th&gt; &#xA;   &lt;th&gt;Scala 2.12&lt;/th&gt; &#xA;   &lt;th&gt;Scala 2.13&lt;/th&gt; &#xA;   &lt;th&gt;Scala 3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.11.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.11.svg?label=latest%208.11%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.11.svg?label=latest%208.11%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.11.svg?label=latest%208.11%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.10.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.10.svg?label=latest%208.10%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.10.svg?label=latest%208.10%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.10.svg?label=latest%208.10%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.9.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.9.svg?label=latest%208.9%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.9.svg?label=latest%208.9%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.9.svg?label=latest%208.9%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.8.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.8.svg?label=latest%208.8%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.8.svg?label=latest%208.8%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.8.svg?label=latest%208.8%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.7.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.7.svg?label=latest%208.7%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.7.svg?label=latest%208.7%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.7.svg?label=latest%208.7%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.6.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.6.svg?label=latest%208.6%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.6.svg?label=latest%208.6%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.6.svg?label=latest%208.6%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.5.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.5.svg?label=latest%208.5%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.5.svg?label=latest%208.5%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.5.svg?label=latest%208.5%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.4.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.4.svg?label=latest%208.4%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.4.svg?label=latest%208.4%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_3&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_3/8.4.svg?label=latest%208.4%20release%20for%203&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.3.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.3.svg?label=latest%208.3%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.3.svg?label=latest%208.3%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.2.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.2.svg?label=latest%208.2%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.2.svg?label=latest%208.2%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.1.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v.svg?label=latest%208.1%20release%20for%202.12&amp;amp;metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fsksamuel%2Felastic4s%2Felastic4s-core_2.12%2Fmaven-metadata.xml&amp;amp;versionPrefix=8.1.&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v.svg?label=latest%208.1%20release%20for%202.13&amp;amp;metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fsksamuel%2Felastic4s%2Felastic4s-core_2.13%2Fmaven-metadata.xml&amp;amp;versionPrefix=8.1.&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8.0.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/8.0.svg?label=latest%208.0%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/8.0.svg?label=latest%208.0%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.17.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.17.svg?label=latest%207.17%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.17.svg?label=latest%207.17%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.16.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.16.svg?label=latest%207.16%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.16.svg?label=latest%207.16%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.15.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.15.svg?label=latest%207.15%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.15.svg?label=latest%207.15%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.14.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.14.svg?label=latest%207.14%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.14.svg?label=latest%207.14%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.13.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.13.svg?label=latest%207.13%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.13.svg?label=latest%207.13%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.12.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.12.svg?label=latest%207.12%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.12.svg?label=latest%207.12%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.11.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.11.svg?label=latest%207.11%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.11.svg?label=latest%207.11%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.10.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.10.svg?label=latest%207.10%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.10.svg?label=latest%207.10%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.9.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.9.svg?label=latest%207.9%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.9.svg?label=latest%207.9%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.8.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.8.svg?label=latest%207.8%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.8.svg?label=latest%207.8%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.7.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.7.svg?label=latest%207.7%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.7.svg?label=latest%207.7%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.6.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.6.svg?label=latest%207.6%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.6.svg?label=latest%207.6%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.5.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.5.svg?label=latest%207.5%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.5.svg?label=latest%207.5%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.4.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.4.svg?label=latest%207.4%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.4.svg?label=latest%207.4%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.3.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.3.svg?label=latest%207.3%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.3.svg?label=latest%207.3%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.2.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.2.svg?label=latest%207.2%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.2.svg?label=latest%207.2%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.1.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v.svg?label=latest%207.1%20release%20for%202.12&amp;amp;metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fsksamuel%2Felastic4s%2Felastic4s-core_2.12%2Fmaven-metadata.xml&amp;amp;versionPrefix=7.1.&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v.svg?label=latest%207.1%20release%20for%202.13&amp;amp;metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fsksamuel%2Felastic4s%2Felastic4s-core_2.13%2Fmaven-metadata.xml&amp;amp;versionPrefix=7.1.&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.0.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.12%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.12/7.0.svg?label=latest%207.0%20release%20for%202.12&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elastic4s-core_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.sksamuel.elastic4s/elastic4s-core_2.13/7.0.svg?label=latest%207.0%20release%20for%202.13&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For releases prior to 7.0 &lt;a href=&#34;https://search.maven.org/search?q=elastic4s&#34;&gt;search maven central&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;We have created sample projects in both sbt, maven and gradle. Check them out here: &lt;a href=&#34;https://github.com/sksamuel/elastic4s/tree/master/samples&#34;&gt;https://github.com/sksamuel/elastic4s/tree/master/samples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To get started you will need to add a dependency:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/com.sksamuel.elastic4s/a:elastic4s-client-esjava&#34;&gt;elastic4s-client-esjava&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;// major.minor are in sync with the elasticsearch releases&#xA;val elastic4sVersion = &#34;x.x.x&#34;&#xA;libraryDependencies ++= Seq(&#xA;  // recommended client for beginners&#xA;  &#34;com.sksamuel.elastic4s&#34; %% &#34;elastic4s-client-esjava&#34; % elastic4sVersion,&#xA;  // test kit&#xA;  &#34;com.sksamuel.elastic4s&#34; %% &#34;elastic4s-testkit&#34; % elastic4sVersion % &#34;test&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The basic usage is that you create an instance of a client and then invoke the &lt;code&gt;execute&lt;/code&gt; method with the requests you want to perform. The execute method is asynchronous and will return a standard Scala &lt;code&gt;Future[T]&lt;/code&gt; (or use one of the &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/#alternative-executors&#34;&gt;Alternative executors&lt;/a&gt;) where T is the response type appropriate for your request type. For example a &lt;em&gt;search&lt;/em&gt; request will return a response of type &lt;code&gt;SearchResponse&lt;/code&gt; which contains the results of the search.&lt;/p&gt; &#xA;&lt;p&gt;To create an instance of the HTTP client, use the &lt;code&gt;ElasticClient&lt;/code&gt; companion object methods. Requests are created using the elastic4s DSL. For example to create a search request, you would do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;search(&#34;index&#34;).query(&#34;findthistext&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The DSL methods are located in the &lt;code&gt;ElasticDsl&lt;/code&gt; trait which needs to be imported or extended.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.sksamuel.elastic4s.ElasticDsl._&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating a Client&lt;/h2&gt; &#xA;&lt;p&gt;The entry point in elastic4s is an instance of &lt;code&gt;ElasticClient&lt;/code&gt;. This class is used to execute requests, such as &lt;code&gt;SearchRequest&lt;/code&gt;, against an Elasticsearch cluster and returns a response type such as &lt;code&gt;SearchResponse&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ElasticClient&lt;/code&gt; takes care of transforming the requests and responses, and handling success and failure, but the actual HTTP functions are delegated to a HTTP library. One such library is &lt;code&gt;JavaClient&lt;/code&gt; which uses the http client provided by the offical Java elasticsearch library.&lt;/p&gt; &#xA;&lt;p&gt;So, to connect to an ElasticSearch cluster, pass an instance of &lt;code&gt;JavaClient&lt;/code&gt; to an &lt;code&gt;ElasticClient&lt;/code&gt;. &lt;code&gt;JavaClient&lt;/code&gt; is configured using &lt;code&gt;ElasticProperties&lt;/code&gt; in which you can specify protocol, host, and port in a single string.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val props = ElasticProperties(&#34;http://host1:9200&#34;)&#xA;val client = ElasticClient(JavaClient(props))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For multiple nodes you can pass a comma-separated list of endpoints in a single string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val nodes = ElasticProperties(&#34;http://host1:9200,host2:9200,host3:9200&#34;)&#xA;val client = ElasticClient(JavaClient(nodes))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are several http libraries to choose from, or you can wrap any HTTP library you wish. For further details, and information on how to specify credentials and other options, see &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/clients.md&#34;&gt;the full client documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example Application&lt;/h2&gt; &#xA;&lt;p&gt;An example is worth 1000 characters so here is a quick example of how to connect to a node with a client, create an index and index a one field document. Then we will search for that document using a simple text query.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of version &lt;code&gt;0.7.x&lt;/code&gt; the &lt;code&gt;LocalNode&lt;/code&gt; functionality has been removed. It is recommended that you stand up a local ElasticSearch Docker container for development. This is the same strategy used in the &lt;a href=&#34;https://github.com/sksamuel/elastic4s/raw/master/elastic4s-testkit/src/main/scala/com/sksamuel/elastic4s/testkit/DockerTests.scala&#34;&gt;tests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.sksamuel.elastic4s.fields.TextField&#xA;import com.sksamuel.elastic4s.http.JavaClient&#xA;import com.sksamuel.elastic4s.requests.common.RefreshPolicy&#xA;import com.sksamuel.elastic4s.requests.searches.SearchResponse&#xA;&#xA;object ArtistIndex extends App {&#xA;&#xA;  // in this example we create a client to a local Docker container at localhost:9200&#xA;  val client = ElasticClient(JavaClient(ElasticProperties(s&#34;http://${sys.env.getOrElse(&#34;ES_HOST&#34;, &#34;127.0.0.1&#34;)}:${sys.env.getOrElse(&#34;ES_PORT&#34;, &#34;9200&#34;)}&#34;)))&#xA;&#xA;  // we must import the dsl&#xA;  import com.sksamuel.elastic4s.ElasticDsl._&#xA;&#xA;  // Next we create an index in advance ready to receive documents.&#xA;  // await is a helper method to make this operation synchronous instead of async&#xA;  // You would normally avoid doing this in a real program as it will block&#xA;  // the calling thread but is useful when testing&#xA;  client.execute {&#xA;    createIndex(&#34;artists&#34;).mapping(&#xA;      properties(&#xA;        TextField(&#34;name&#34;)&#xA;      )&#xA;    )&#xA;  }.await&#xA;&#xA;  // Next we index a single document which is just the name of an Artist.&#xA;  // The RefreshPolicy.Immediate means that we want this document to flush to the disk immediately.&#xA;  // see the section on Eventual Consistency.&#xA;  client.execute {&#xA;    indexInto(&#34;artists&#34;).fields(&#34;name&#34; -&amp;gt; &#34;L.S. Lowry&#34;).refresh(RefreshPolicy.Immediate)&#xA;  }.await&#xA;&#xA;  // now we can search for the document we just indexed&#xA;  val resp = client.execute {&#xA;    search(&#34;artists&#34;).query(&#34;lowry&#34;)&#xA;  }.await&#xA;&#xA;  // resp is a Response[+U] ADT consisting of either a RequestFailure containing the&#xA;  // Elasticsearch error details, or a RequestSuccess[U] that depends on the type of request.&#xA;  // In this case it is a RequestSuccess[SearchResponse]&#xA;&#xA;  println(&#34;---- Search Results ----&#34;)&#xA;  resp match {&#xA;    case failure: RequestFailure =&amp;gt; println(&#34;We failed &#34; + failure.error)&#xA;    case results: RequestSuccess[SearchResponse] =&amp;gt; println(results.result.hits.hits.toList)&#xA;    case results: RequestSuccess[_] =&amp;gt; println(results.result)&#xA;  }&#xA;&#xA;  // Response also supports familiar combinators like map / flatMap / foreach:&#xA;  resp foreach (search =&amp;gt; println(s&#34;There were ${search.totalHits} total hits&#34;))&#xA;&#xA;  client.close()&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Alternative Executors&lt;/h2&gt; &#xA;&lt;p&gt;By default, elastic4s uses scala &lt;code&gt;Future&lt;/code&gt;s when returning responses, but any effect type can be supported.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use ZIO, Cats-Effect, Monix or Scalaz, then read this page on &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/effects.md&#34;&gt;alternative effects&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Index Refreshing&lt;/h2&gt; &#xA;&lt;p&gt;When you index a document in Elasticsearch, usually it is not immediately available to be searched, as a &lt;em&gt;refresh&lt;/em&gt; has to happen to make it visible to the search API.&lt;/p&gt; &#xA;&lt;p&gt;By default a refresh occurs every second but this can be changed if needed. Note that this only impacts the visibility of newly indexed documents and has nothing to do with data consistency and durability.&lt;/p&gt; &#xA;&lt;p&gt;This setting can be &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/refresh.md&#34;&gt;controlled&lt;/a&gt; when creating an index or when indexed documents.&lt;/p&gt; &#xA;&lt;h2&gt;Create Index&lt;/h2&gt; &#xA;&lt;p&gt;All documents in Elasticsearch are stored in an index. We do not need to tell Elasticsearch in advance what an index will look like (eg what fields it will contain) as Elasticsearch will adapt the index dynamically as more documents are added, but we must at least create the index first.&lt;/p&gt; &#xA;&lt;p&gt;To create an index called &#34;places&#34; that is fully dynamic we can simply use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  createIndex(&#34;places&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can optionally set the number of shards and/or replicas&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  createIndex(&#34;places&#34;).shards(3).replicas(2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes we want to specify the properties of the fields in the index in advance. This allows us to manually set the type of the field (where Elasticsearch might infer something else) or set the analyzer used, or multiple other options&lt;/p&gt; &#xA;&lt;p&gt;To do this we add mappings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;    createIndex(&#34;cities&#34;).mapping(&#xA;        properties(&#xA;            keywordField(&#34;id&#34;),&#xA;            textField(&#34;name&#34;).boost(4),&#xA;            textField(&#34;content&#34;),&#xA;            keywordField(&#34;country&#34;),&#xA;            keywordField(&#34;continent&#34;)&#xA;        )&#xA;    )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then Elasticsearch is preconfigured with those mappings for those fields. It is still fully dynamic and other fields will be created as needed with default options. Only the fields specified will have their type preset.&lt;/p&gt; &#xA;&lt;p&gt;More examples on the create index syntax can be &lt;a href=&#34;https://sksamuel.github.io/elastic4s/docs/indices/createindex.html&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Analyzers&lt;/h2&gt; &#xA;&lt;p&gt;Analyzers control how Elasticsearch parses the fields for indexing. For example, you might decide that you want whitespace to be important, so that &#34;band of brothers&#34; is indexed as a single &#34;word&#34; rather than the default which is to split on whitespace. There are many advanced options available in analayzers. Elasticsearch also allows us to create custom analyzers. For more details &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/analysis.md&#34;&gt;see the documentation on analyzers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Indexing&lt;/h2&gt; &#xA;&lt;p&gt;To index a document we need to specify the index and type and optionally we can set an id. If we don&#39;t include an id then elasticsearch will generate one for us. We must also include at least one field. Fields are specified as standard tuples.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  indexInto(&#34;cities&#34;).id(&#34;123&#34;).fields(&#xA;    &#34;name&#34; -&amp;gt; &#34;London&#34;,&#xA;    &#34;country&#34; -&amp;gt; &#34;United Kingdom&#34;,&#xA;    &#34;continent&#34; -&amp;gt; &#34;Europe&#34;,&#xA;    &#34;status&#34; -&amp;gt; &#34;Awesome&#34;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are many additional options we can set such as routing, version, parent, timestamp and op type. See &lt;a href=&#34;http://www.elasticsearch.org/guide/reference/api/index_/&#34;&gt;official documentation&lt;/a&gt; for additional options, all of which exist in the DSL as keywords that reflect their name in the official API.&lt;/p&gt; &#xA;&lt;h2&gt;Indexable Typeclass&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes it is useful to create documents directly from your domain model instead of manually creating maps of fields. To achieve this, elastic4s provides the &lt;code&gt;Indexable&lt;/code&gt; typeclass.&lt;/p&gt; &#xA;&lt;p&gt;If you provide an implicit instance of &lt;code&gt;Indexable[T]&lt;/code&gt; in scope for any class T that you wish to index, and then you can invoke &lt;code&gt;doc(t)&lt;/code&gt; on the &lt;code&gt;IndexRequest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;// a simple example of a domain model&#xA;case class Character(name: String, location: String)&#xA;&#xA;// turn instances of characters into json&#xA;implicit object CharacterIndexable extends Indexable[Character] {&#xA;  override def json(t: Character): String = s&#34;&#34;&#34; { &#34;name&#34; : &#34;${t.name}&#34;, &#34;location&#34; : &#34;${t.location}&#34; } &#34;&#34;&#34;&#xA;}&#xA;&#xA;// now index requests can directly use characters as docs&#xA;val jonsnow = Character(&#34;jon snow&#34;, &#34;the wall&#34;)&#xA;client.execute {&#xA;  indexInto(&#34;gameofthrones&#34;).doc(jonsnow)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some people prefer to write typeclasses manually for the types they need to support. Other people like to just have it done automagically. For the latter, elastic4s provides extensions for the well known Scala Json libraries that can be used to generate Json generically.&lt;/p&gt; &#xA;&lt;p&gt;To use this, add the import for your chosen library below and bring the implicits into scope. Then you can pass any case class instance to &lt;code&gt;doc&lt;/code&gt; and an &lt;code&gt;Indexable&lt;/code&gt; will be derived automatically.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th&gt;Elastic4s Module&lt;/th&gt; &#xA;   &lt;th&gt;Import&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/FasterXML/jackson-module-scala&#34;&gt;Jackson&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-jackson&#34;&gt;elastic4s-json-jackson&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import ElasticJackson.Implicits._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://json4s.org/&#34;&gt;Json4s&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-json4s&#34;&gt;elastic4s-json-json4s&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import ElasticJson4s.Implicits._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/travisbrown/circe&#34;&gt;Circe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-circe&#34;&gt;elastic4s-json-circe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import io.circe.generic.auto._ &lt;br&gt;import com.sksamuel.elastic4s.circe._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/playframework/play-json&#34;&gt;PlayJson&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-play&#34;&gt;elastic4s-json-play&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import com.sksamuel.elastic4s.playjson._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/spray/spray-json&#34;&gt;Spray Json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-spray&#34;&gt;elastic4s-json-spray&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import com.sksamuel.elastic4s.sprayjson._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zio/zio-json&#34;&gt;ZIO 1.0 Json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-zio-1&#34;&gt;elastic4s-json-zio-1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import com.sksamuel.elastic4s.ziojson._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zio/zio-json&#34;&gt;ZIO 2.0 Json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Celastic4s-json-zio&#34;&gt;elastic4s-json-zio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;import com.sksamuel.elastic4s.ziojson._&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Searching&lt;/h2&gt; &#xA;&lt;p&gt;To execute a &lt;a href=&#34;http://www.elasticsearch.org/guide/reference/api/search/&#34;&gt;search&lt;/a&gt; in elastic4s, we need to pass an instance of &lt;code&gt;SearchRequest&lt;/code&gt; to our client.&lt;/p&gt; &#xA;&lt;p&gt;One way to do this is to invoke &lt;code&gt;search&lt;/code&gt; and pass in the index name. From there, you can call &lt;code&gt;query&lt;/code&gt; and pass in the type of query you want to perform.&lt;/p&gt; &#xA;&lt;p&gt;For example, to perform a simple text search, where the query is parsed from a single string we can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  search(&#34;cities&#34;).query(&#34;London&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For full details on creating queries and other search capabilities such source filtering and aggregations, please read &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/search.md&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Multisearch&lt;/h2&gt; &#xA;&lt;p&gt;Multiple search requests can be executed in a single call using the &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/multisearch.md&#34;&gt;multisearch&lt;/a&gt; request type. This is the search equivilent of the bulk request.&lt;/p&gt; &#xA;&lt;h2&gt;HitReader Typeclass&lt;/h2&gt; &#xA;&lt;p&gt;By default Elasticsearch search responses contain an array of &lt;code&gt;SearchHit&lt;/code&gt; instances which contain things like the id, index, type, version, etc as well as the document source as a string or map. Elastic4s provides a means to convert these back to meaningful domain types quite easily using the &lt;code&gt;HitReader[T]&lt;/code&gt; typeclass.&lt;/p&gt; &#xA;&lt;p&gt;Provide an implementation of this typeclass, as an in scope implicit, for whatever type you wish to marshall search responses into, and then you can call &lt;code&gt;to[T]&lt;/code&gt; or &lt;code&gt;safeTo[T]&lt;/code&gt; on the response. The difference between &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;safeTo&lt;/code&gt; is that &lt;code&gt;to&lt;/code&gt; will drop any errors and just return successful conversions, whereas safeTo returns a sequence of &lt;code&gt;Either[Throwable, T]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A full example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;case class Character(name: String, location: String)&#xA;&#xA;implicit object CharacterHitReader extends HitReader[Character] {&#xA;  override def read(hit: Hit): Either[Throwable, Character] = {&#xA;    val source = hit.sourceAsMap&#xA;    Right(Character(source(&#34;name&#34;).toString, source(&#34;location&#34;).toString))&#xA;  }&#xA;}&#xA;&#xA;val resp = client.execute {&#xA;  search(&#34;gameofthrones&#34;).query(&#34;kings landing&#34;)&#xA;}.await // don&#39;t block in real code&#xA;&#xA;// .to[Character] will look for an implicit HitReader[Character] in scope&#xA;// and then convert all the hits into Characters for us.&#xA;val characters: Seq[Character] = resp.result.to[Character]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is basically the inverse of the &lt;code&gt;Indexable&lt;/code&gt; typeclass. And just like Indexable, the json modules provide implementations out of the box for any types. The imports are the same as for the Indexable typeclasses.&lt;/p&gt; &#xA;&lt;p&gt;As a bonus feature of the Jackson implementation, if your domain object has fields called &lt;code&gt;_timestamp&lt;/code&gt;, &lt;code&gt;_id&lt;/code&gt;, &lt;code&gt;_type&lt;/code&gt;, &lt;code&gt;_index&lt;/code&gt;, or &lt;code&gt;_version&lt;/code&gt; then those special fields will be automatically populated as well.&lt;/p&gt; &#xA;&lt;h2&gt;Highlighting&lt;/h2&gt; &#xA;&lt;p&gt;Elasticsearch can annotate results to show which part of the results matched the queries by using highlighting. Just think when you&#39;re in google and you see the snippets underneath your results - that&#39;s what highlighting does.&lt;/p&gt; &#xA;&lt;p&gt;We can use this very easily, just add a highlighting definition to your search request, where you set the field or fields to be highlighted. Viz:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;search(&#34;music&#34;).query(&#34;kate bush&#34;).highlighting (&#xA;  highlight(&#34;body&#34;).fragmentSize(20)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All very straightforward. There are many options you can use to tweak the results. In the example above I have simply set the snippets to be taken from the field called &#34;body&#34; and to have max length 20. You can set the number of fragments to return, seperate queries to generate them and other things. See the elasticsearch page on &lt;a href=&#34;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-highlighting.html&#34;&gt;highlighting&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Get / Multiget&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/get.md&#34;&gt;get&lt;/a&gt; request allows us to retrieve a document directly by id.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  get(&#34;bands&#34;, &#34;coldplay&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can fetch multiple documents at once using the &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/multiget.md&#34;&gt;multiget&lt;/a&gt; request.&lt;/p&gt; &#xA;&lt;h2&gt;Deleting&lt;/h2&gt; &#xA;&lt;p&gt;In elasticsearch we can delete based on an id, or based on a query (which can match multiple documents).&lt;/p&gt; &#xA;&lt;p&gt;See more about &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/delete.md&#34;&gt;delete&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;We can update existing documents without having to do a full index, by updating a partial set of fields. We can &lt;em&gt;update-by-id&lt;/em&gt; or &lt;em&gt;update-by-query&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more details see the &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/update.md&#34;&gt;update&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;More like this&lt;/h2&gt; &#xA;&lt;p&gt;If you want to return documents that are &#34;similar&#34; to a current document we can do that very easily with the more like this query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  search(&#34;drinks&#34;).query {&#xA;    moreLikeThisQuery(&#34;name&#34;).likeTexts(&#34;coors&#34;, &#34;beer&#34;, &#34;molson&#34;).minTermFreq(1).minDocFreq(1)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all the options see &lt;a href=&#34;http://www.elasticsearch.org/guide/reference/query-dsl/mlt-query/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Count&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/count.md&#34;&gt;count request&lt;/a&gt; executes a query and returns a count of the number of matching documents for that query.&lt;/p&gt; &#xA;&lt;h2&gt;Bulk Operations&lt;/h2&gt; &#xA;&lt;p&gt;Elasticsearch is fast. Roundtrips are not. Sometimes we want to wrestle every last inch of performance and a useful way to do this is to batch up requests. We can do this in elasticsearch via the bulk API. A bulk request wraps index, delete and update requests in a single request.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;client.execute {&#xA;  bulk(&#xA;    indexInto(&#34;bands&#34;).fields(&#34;name&#34; -&amp;gt; &#34;coldplay&#34;), // one index request&#xA;    deleteById(&#34;bands&#34;, &#34;123&#34;), // a delete by id request&#xA;    indexInto(&#34;bands&#34;).fields( // second index request&#xA;      &#34;name&#34; -&amp;gt; &#34;elton john&#34;,&#xA;      &#34;best_album&#34; -&amp;gt; &#34;tumbleweed connection&#34;&#xA;    )&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A single HTTP request is now needed for 3 operations. In addition Elasticsearch can now optimize the requests, by combining inserts or using aggressive caching.&lt;/p&gt; &#xA;&lt;p&gt;For full details see the &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/bulk.md&#34;&gt;docs on bulk operations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Show Query JSON&lt;/h2&gt; &#xA;&lt;p&gt;It can be useful to see the json output of requests in case you wish to tinker with the request in a REST client or your browser. It can be much easier to tweak a complicated query when you have the instant feedback of the HTTP interface.&lt;/p&gt; &#xA;&lt;p&gt;Elastic4s makes it easy to get this json where possible. Simply invoke the &lt;code&gt;show&lt;/code&gt; method on the client with a request to get back a json string. Eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val json = client.show {&#xA;  search(&#34;music&#34;).query(&#34;coldplay&#34;)&#xA;}&#xA;println(json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Not all requests have a json body. For example &lt;em&gt;get-by-id&lt;/em&gt; is modelled purely by http query parameters, there is no json body to output. And some requests aren&#39;t supported by the show method - you will get an implicit not found error during compliation if that is the case&lt;/p&gt; &#xA;&lt;h2&gt;Aliases&lt;/h2&gt; &#xA;&lt;p&gt;An &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html&#34;&gt;index alias&lt;/a&gt; is a logical name used to reference one or more indices. Most Elasticsearch APIs accept an index alias in place of an index name.&lt;/p&gt; &#xA;&lt;p&gt;For elastic4s syntax for aliases &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/alias.md&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Explain&lt;/h2&gt; &#xA;&lt;p&gt;An &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html&#34;&gt;explain request&lt;/a&gt; computes a score explanation for a query and a specific document. This can give useful feedback whether a document matches or didn’t match a specific query.&lt;/p&gt; &#xA;&lt;p&gt;For elastic4s syntax for explain &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/explain.md&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Validate Query&lt;/h2&gt; &#xA;&lt;p&gt;The validate query request type allows you to check a query is valid before executing it.&lt;/p&gt; &#xA;&lt;p&gt;See the syntax &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/validate.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Force Merge&lt;/h2&gt; &#xA;&lt;p&gt;Merging reduces the number of segments in each shard by merging some of them together, and also frees up the space used by deleted documents. Merging normally happens automatically, but sometimes it is useful to trigger a merge manually.&lt;/p&gt; &#xA;&lt;p&gt;See the syntax &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/force_merge.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Cluster APIs&lt;/h2&gt; &#xA;&lt;p&gt;Elasticsearch supports querying the state of the cluster itself, to find out information on nodes, shards, indices, tasks and so on. See the range of cluster APIs &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/cluster.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Search Iterator&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you may wish to iterate over all the results in a search, without worrying too much about handling futures, and re-requesting via a scroll. The &lt;code&gt;SearchIterator&lt;/code&gt; will do this for you, although it will block between requests. A search iterator is just an implementation of &lt;code&gt;scala.collection.Iterator&lt;/code&gt; backed by elasticsearch queries.&lt;/p&gt; &#xA;&lt;p&gt;To create one, use the iterate method on the companion object, passing in the http client, and a search request to execute. The search request must specify a keep alive value (which is used by elasticsearch for scrolling).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;implicit val reader : HitReader[MyType] =  ...&#xA;val iterator = SearchIterator.iterate[MyType](client, search(index).matchAllQuery.keepAlive(&#34;1m&#34;).size(50))&#xA;iterator.foreach(println)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For instance, in the above we are bringing back all documents in the index, 50 results at a time, marshalled into instances of &lt;code&gt;MyType&lt;/code&gt; using the implicit &lt;code&gt;HitReader&lt;/code&gt; (see the section on HitReaders). If you want just the raw elasticsearch &lt;code&gt;Hit&lt;/code&gt; object, then use &lt;code&gt;SearchIterator.hits&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: Whenever the results in a particular batch have been iterated on, the &lt;code&gt;SearchIterator&lt;/code&gt; will then execute another query for the next batch and block waiting on that query. So if you are looking for a pure non blocking solution, consider the reactive streams implementation. However, if you just want a quick and simple way to iterate over some data without bringing back all the results at once &lt;code&gt;SearchIterator&lt;/code&gt; is perfect.&lt;/p&gt; &#xA;&lt;h2&gt;Elastic Reactive Streams&lt;/h2&gt; &#xA;&lt;p&gt;Elastic4s has an implementation of the &lt;a href=&#34;http://www.reactive-streams.org&#34;&gt;reactive streams&lt;/a&gt; api for both publishing and subscribing that is built using Akka. To use this, you need to add a dependency on the elastic4s-streams module.&lt;/p&gt; &#xA;&lt;p&gt;There are two things you can do with the reactive streams implementation. You can create an elastic subscriber, and have that stream data from some publisher into elasticsearch. Or you can create an elastic publisher and have documents streamed out to subscribers.&lt;/p&gt; &#xA;&lt;p&gt;For full details read the &lt;a href=&#34;https://raw.githubusercontent.com/Philippus/elastic4s/master/docs/streams.md&#34;&gt;streams documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using Elastic4s in your project&lt;/h2&gt; &#xA;&lt;p&gt;For gradle users, add (replace 2.12 with 2.13 for Scala 2.13):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;compile &#39;com.sksamuel.elastic4s:elastic4s-core_2.12:x.x.x&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For SBT users simply add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies += &#34;com.sksamuel.elastic4s&#34; %% &#34;elastic4s-core&#34; % &#34;x.x.x&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Maven users simply add (replace 2.12 with 2.13 for Scala 2.13):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.sksamuel.elastic4s&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;elastic4s-core_2.12&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;x.x.x&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check for the latest released versions on &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.sksamuel.elastic4s%22&#34;&gt;maven central&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building and Testing&lt;/h2&gt; &#xA;&lt;p&gt;This project is built with SBT. So to build with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sbt compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sbt test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The project is currently &lt;a href=&#34;https://www.scala-sbt.org/1.x/docs/Cross-Build.html&#34;&gt;cross-built&lt;/a&gt; against Scala 2.12 and 2.13, when preparing a pull request the above commands should be run with the &lt;code&gt;sbt&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; modifier to compile and test against both versions. For example: &lt;code&gt;sbt +compile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the tests to work you will need to run a local elastic instance on port 39227, &lt;em&gt;with security enabled&lt;/em&gt;. One easy way of doing this is to use docker (via docker-compose): &lt;code&gt;docker-compose up&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Used By&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Barclays Bank&lt;/li&gt; &#xA; &lt;li&gt;HSBC&lt;/li&gt; &#xA; &lt;li&gt;Shazaam&lt;/li&gt; &#xA; &lt;li&gt;Lenses&lt;/li&gt; &#xA; &lt;li&gt;Iterable&lt;/li&gt; &#xA; &lt;li&gt;Graphflow&lt;/li&gt; &#xA; &lt;li&gt;Hotel Urbano&lt;/li&gt; &#xA; &lt;li&gt;Immobilien Scout&lt;/li&gt; &#xA; &lt;li&gt;Deutsche Bank&lt;/li&gt; &#xA; &lt;li&gt;Goldman Sachs&lt;/li&gt; &#xA; &lt;li&gt;HMRC&lt;/li&gt; &#xA; &lt;li&gt;Canal+&lt;/li&gt; &#xA; &lt;li&gt;AOE&lt;/li&gt; &#xA; &lt;li&gt;Starmind&lt;/li&gt; &#xA; &lt;li&gt;ShopRunner&lt;/li&gt; &#xA; &lt;li&gt;Soundcloud&lt;/li&gt; &#xA; &lt;li&gt;Rostelecom-Solar&lt;/li&gt; &#xA; &lt;li&gt;Shoprunner&lt;/li&gt; &#xA; &lt;li&gt;Twitter&lt;/li&gt; &#xA; &lt;li&gt;bluerootlabs.io&lt;/li&gt; &#xA; &lt;li&gt;mapp.com&lt;/li&gt; &#xA; &lt;li&gt;Jusbrasil&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Raise a PR to add your company here&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.yourkit.com/images/yklogo.png&#34; alt=&#34;youkit logo&#34;&gt; YourKit supports open source projects with its full-featured Java Profiler. YourKit, LLC is the creator of &lt;a href=&#34;https://www.yourkit.com/java/profiler/index.jsp&#34;&gt;YourKit Java Profiler&lt;/a&gt; and &lt;a href=&#34;https://www.yourkit.com/.net/profiler/index.jsp&#34;&gt;YourKit .NET Profiler&lt;/a&gt;, innovative and intelligent tools for profiling Java and .NET applications.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to elastic4s are always welcome. Good ways to contribute include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raising bugs and feature requests&lt;/li&gt; &#xA; &lt;li&gt;Fixing bugs and enhancing the DSL&lt;/li&gt; &#xA; &lt;li&gt;Improving the performance of elastic4s&lt;/li&gt; &#xA; &lt;li&gt;Adding to the documentation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This software is licensed under the Apache 2 license, quoted below.&#xA;&#xA;Copyright 2013-2016 Stephen Samuel&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not&#xA;use this file except in compliance with the License. You may obtain a copy of&#xA;the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT&#xA;WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the&#xA;License for the specific language governing permissions and limitations under&#xA;the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>scalalandio/chimney</title>
    <updated>2024-04-15T02:59:05Z</updated>
    <id>tag:github.com,2024-04-15:/scalalandio/chimney</id>
    <link href="https://github.com/scalalandio/chimney" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scala library for boilerplate-free, type-safe data transformations&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/scalalandio/chimney/master/gfx/chimney-logo-circle-matching.svg?sanitize=true&#34; alt=&#34;Chimney logo&#34; height=&#34;250px&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Chimney&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://index.scala-lang.org/scalalandio/chimney/chimney&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/scalalandio/chimney/chimney/latest.svg?sanitize=true&#34; alt=&#34;Chimney Scala version support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/scalalandio/chimney/actions&#34;&gt;&lt;img src=&#34;https://github.com/scalalandio/chimney/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;CI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://codecov.io/github/scalalandio/chimney?branch=master&#34;&gt;&lt;img src=&#34;http://codecov.io/github/scalalandio/chimney/coverage.svg?branch=master&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-Apache%202-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/scalalandio/chimney/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/scalalandio/chimney&#34; alt=&#34;Join the discussions at https://github.com/scalalandio/chimney/discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://readthedocs.org/projects/chimney/builds/&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/chimney/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://javadoc.io/doc/io.scalaland/chimney_2.11&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/io.scalaland/chimney_2.11/scaladoc%202.11.svg?sanitize=true&#34; alt=&#34;Scaladoc 2.11&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://javadoc.io/doc/io.scalaland/chimney_2.12&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/io.scalaland/chimney_2.12/scaladoc%202.12.svg?sanitize=true&#34; alt=&#34;Scaladoc 2.12&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://javadoc.io/doc/io.scalaland/chimney_2.13&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/io.scalaland/chimney_2.13/scaladoc%202.13.svg?sanitize=true&#34; alt=&#34;Scaladoc 2.13&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://javadoc.io/doc/io.scalaland/chimney_3&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/io.scalaland/chimney_3/scaladoc%203.svg?sanitize=true&#34; alt=&#34;Scaladoc 3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The battle-tested Scala library for data transformations. Supported for (2.12, 2.13, 3.3+) x (JVM, Scala.js, Scala Native).&lt;/p&gt; &#xA;&lt;p&gt;Chimney documentation is available at &lt;a href=&#34;https://chimney.readthedocs.io&#34;&gt;https://chimney.readthedocs.io&lt;/a&gt;. Read the Docs keeps it versioned in case you need to access documentation for older versions.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking to up-to-date artifacts versions ready to copy-paste into your build tool, we recommend &lt;a href=&#34;https://index.scala-lang.org/scalalandio/chimney/artifacts/chimney&#34;&gt;Scaladex&lt;/a&gt; or &lt;a href=&#34;https://mvnrepository.com/search?q=chimney&#34;&gt;Maven Repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;A way to get started is described in &lt;a href=&#34;https://raw.githubusercontent.com/scalalandio/chimney/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and the general overview of the architecture is given in &lt;a href=&#34;https://raw.githubusercontent.com/scalalandio/chimney/master/DESIGN.md&#34;&gt;DESIGN.md&lt;/a&gt; and in &lt;a href=&#34;https://chimney.readthedocs.io/under-the-hood/&#34;&gt;Under the hood&lt;/a&gt; section of the documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>unibo-pps/pps-23-24-lab04</title>
    <updated>2024-04-15T02:59:05Z</updated>
    <id>tag:github.com,2024-04-15:/unibo-pps/pps-23-24-lab04</id>
    <link href="https://github.com/unibo-pps/pps-23-24-lab04" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;sbt project compiled with Scala 3&lt;/h2&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;This is a normal sbt project. You can compile code with &lt;code&gt;sbt compile&lt;/code&gt;, run it with &lt;code&gt;sbt run&lt;/code&gt;, and &lt;code&gt;sbt console&lt;/code&gt; will start a Scala 3 REPL.&lt;/p&gt; &#xA;&lt;p&gt;For more information on the sbt-dotty plugin, see the &lt;a href=&#34;https://github.com/scala/scala3-example-project/raw/main/README.md&#34;&gt;scala3-example-project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage with VSCode&lt;/h3&gt; &#xA;&lt;p&gt;Be sure you have installed VSCode extensions for Scala (Metals) and Scala syntax (official).&lt;/p&gt; &#xA;&lt;p&gt;Upon opening the project, a prompt will appear in the bottom right corner requesting to Import build. Please select this option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mviroli/mviroli-public-pps-code-scala/assets/23448811/c40a235b-4b53-4f51-8e60-8f13eb74c367&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Following this, a notification indicating that the sbt project is importing will appear.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mviroli/mviroli-public-pps-code-scala/assets/23448811/2807fe6d-afdd-42ca-9fb1-357ed3d02920&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, navigate to a Scala file that extends App. For example, by opening the Values file and clicking the run button located at the top of the file, you will initiate the execution of the code. The output of this operation can be observed in the bottom section of VSCode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mviroli/mviroli-public-pps-code-scala/assets/23448811/14bb0cff-b3d1-4548-bbab-558d754b2124&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally, access the test file located at src/test/scala/u02/TuplesTest.scala. Here, you will find a green arrow on the left side, enabling you to run the tests. Initiating the first test will execute all the tests, and the results will be displayed accordingly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mviroli/mviroli-public-pps-code-scala/assets/23448811/96559a7c-f072-405d-9fdd-4dbd0a399d14&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mviroli/mviroli-public-pps-code-scala/assets/23448811/84049cfe-10d4-40f2-b7f1-fa9d9c3ed100&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>