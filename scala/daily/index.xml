<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-12T01:56:13Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>twitter/finatra</title>
    <updated>2022-07-12T01:56:13Z</updated>
    <id>tag:github.com,2022-07-12:/twitter/finatra</id>
    <link href="https://github.com/twitter/finatra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, testable, Scala services built on TwitterServer and Finagle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Finatra&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/twitter/finatra/actions?query=workflow%3A%22continuous+integration%22+branch%3Adevelop&#34;&gt;&lt;img src=&#34;https://github.com/twitter/finatra/workflows/continuous%20integration/badge.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/twitter/finatra?branch=develop&#34;&gt;&lt;img src=&#34;https://codecov.io/github/twitter/finatra/coverage.svg?branch=develop&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/twitter/finatra/develop/#status&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-active-brightgreen.svg?sanitize=true&#34; alt=&#34;Project status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.twitter%22%20AND%20%28a%3A%22finatra-http_2.12%22%20OR%20a%3A%22finatra-thrift_2.12%22%29&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.twitter/finatra-http-server_2.12/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/twitter/finatra&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This project is used in production at Twitter (and many other organizations), and is being actively developed and maintained.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/twitter/finatra/develop/finatra_logo_text.png&#34; title=&#34;Finatra Logo&#34; alt=&#34;Finatra Logo&#34; height=&#34;394&#34; width=&#34;679/&#34;&gt; &#xA;&lt;p&gt;Finatra is a lightweight framework for building fast, testable, scala applications on top of &lt;a href=&#34;https://github.com/twitter/twitter-server&#34;&gt;TwitterServer&lt;/a&gt; and &lt;a href=&#34;https://github.com/twitter/finagle&#34;&gt;Finagle&lt;/a&gt;. Finatra provides an easy-to-use API for creating and &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/testing/index.html&#34;&gt;testing&lt;/a&gt; &lt;a href=&#34;https://twitter.github.io/finagle/guide/Servers.html&#34;&gt;Finagle servers&lt;/a&gt; and &lt;a href=&#34;https://twitter.github.io/util/docs/#com.twitter.app.App&#34;&gt;apps&lt;/a&gt; as well as powerful JSON support, modern logging via &lt;a href=&#34;https://www.slf4j.org/manual.html&#34;&gt;SLF4J&lt;/a&gt;, &lt;a href=&#34;https://twitter.github.io/finagle/guide/Clients.html&#34;&gt;Finagle client&lt;/a&gt; utilities, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Getting involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://twitter.github.io/finatra/&#34;&gt;https://twitter.github.io/finatra/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Latest news: &lt;a href=&#34;https://finagle.github.io/blog/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github Source: &lt;a href=&#34;https://github.com/twitter/finatra/&#34;&gt;https://github.com/twitter/finatra/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitter: &lt;a href=&#34;https://gitter.im/twitter/finatra&#34;&gt;https://gitter.im/twitter/finatra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing List: &lt;a href=&#34;https://groups.google.com/forum/#!forum/finatra-users&#34;&gt;finatra-users@googlegroups.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Production use &lt;a href=&#34;https://twitter.com/&#34;&gt;@Twitter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;~50 times faster than v1.6 in several benchmarks.&lt;/li&gt; &#xA; &lt;li&gt;Powerful Feature and Integration test support.&lt;/li&gt; &#xA; &lt;li&gt;Optional JSR-330 Dependency Injection using &lt;a href=&#34;https://github.com/google/guice&#34;&gt;Google Guice&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FasterXML/jackson&#34;&gt;Jackson&lt;/a&gt;-based JSON parsing supporting required fields, default values, and &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/json/validations.html&#34;&gt;validations&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://logback.qos.ch/&#34;&gt;Logback&lt;/a&gt; &lt;a href=&#34;https://logback.qos.ch/manual/mdc.html&#34;&gt;MDC&lt;/a&gt; integration with &lt;a href=&#34;https://github.com/twitter/util/raw/release/util-core/src/main/scala/com/twitter/util/Local.scala&#34;&gt;com.twitter.util.Local&lt;/a&gt; for contextual logging across &lt;a href=&#34;https://twitter.github.io/util/guide/util-cookbook/futures.html&#34;&gt;futures&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To get started, see the &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/index.html#getting-started&#34;&gt;Getting Started&lt;/a&gt; section of our &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/index.html&#34;&gt;User Guide&lt;/a&gt; to get up and running. Or check out the specific sections for building &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/http/server.html&#34;&gt;HTTP&lt;/a&gt; or &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/thrift/server.html&#34;&gt;Thrift&lt;/a&gt; servers.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;An HTTP controller and server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.twitter.finatra.http._&#xA;&#xA;@Singleton&#xA;class ExampleController extends Controller {&#xA;  get(&#34;/&#34;) { request: Request =&amp;gt;&#xA;    &#34;&amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.twitter.finatra.http._&#xA;&#xA;class ExampleServer extends HttpServer {&#xA;  override def configureHttp(router: HttpRouter): Unit = {&#xA;    router&#xA;      .filter[CommonFilters]&#xA;      .add[ExampleController]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A Thrift controller and server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.twitter.finatra.thrift._&#xA;import com.twitter.scrooge.{Request, Response}&#xA;&#xA;@Singleton&#xA;class ExampleThriftController&#xA;  extends Controller(MyThriftService) {&#xA;&#xA;  handle(MyFunction).withFn { request: Request[MyFunction.Args] =&amp;gt;&#xA;    ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import com.twitter.finatra.thrift._&#xA;&#xA;class ExampleServer extends ThriftServer {&#xA;  override def configureThrift(router: ThriftRouter): Unit = {&#xA;    router&#xA;      .add[ExampleThriftController]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example Projects&lt;/h2&gt; &#xA;&lt;p&gt;Finatra includes working examples which highlight various features of the framework and include tests. These examples are included in the root &lt;a href=&#34;https://www.scala-sbt.org/&#34;&gt;sbt&lt;/a&gt; build and are thus buildable as part of the entire project.&lt;/p&gt; &#xA;&lt;p&gt;Please take a look through the &lt;a href=&#34;https://raw.githubusercontent.com/twitter/finatra/develop/examples&#34;&gt;examples&lt;/a&gt; for more detailed information on features, testing, building, and running.&lt;/p&gt; &#xA;&lt;h2&gt;Latest version&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/twitter/finatra/tree/release&#34;&gt;release branch&lt;/a&gt; in Github tracks the latest stable &lt;a href=&#34;https://github.com/twitter/finatra/releases&#34;&gt;release&lt;/a&gt;, which is currently:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.twitter%22%20AND%20%28a%3A%22finatra-http_2.12%22%20OR%20a%3A%22finatra-thrift_2.12%22%29&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.twitter/finatra-http_2.12/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;available on Maven Central. See the &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/getting-started/basics.html#first-steps&#34;&gt;First Steps&lt;/a&gt; section in the &lt;a href=&#34;https://twitter.github.io/finatra/user-guide/index.html&#34;&gt;User Guide&lt;/a&gt; for how to add dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Releases are done on an approximately monthly schedule. While &lt;a href=&#34;https://semver.org/&#34;&gt;semver&lt;/a&gt; is not followed, the &lt;a href=&#34;https://raw.githubusercontent.com/twitter/finatra/develop/CHANGELOG.rst&#34;&gt;changelogs&lt;/a&gt; are detailed and include sections on public API breaks and changes in runtime behavior.&lt;/p&gt; &#xA;&lt;h2&gt;Development version&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/twitter/finatra/tree/develop&#34;&gt;develop branch&lt;/a&gt; in Github tracks the latest code which is updated every week. If you want to contribute a patch or fix, please use this branch as the basis of your &lt;a href=&#34;https://help.github.com/articles/creating-a-pull-request/&#34;&gt;Pull Request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We feel that a welcoming community is important and we ask that you follow Twitter&#39;s &lt;a href=&#34;https://github.com/twitter/.github/raw/main/code-of-conduct.md&#34;&gt;Open Source Code of Conduct&lt;/a&gt; in all interactions with the community. For more information on providing contributions, please see our &lt;a href=&#34;https://raw.githubusercontent.com/twitter/finatra/develop/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Presentations&lt;/h2&gt; &#xA;&lt;p&gt;Check out our list of presentations: &lt;a href=&#34;https://twitter.github.io/finatra/presentations/&#34;&gt;Finatra Presentations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Steve Cosenza &lt;a href=&#34;https://github.com/scosenza&#34;&gt;https://github.com/scosenza&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Christopher Coco &lt;a href=&#34;https://github.com/cacoco&#34;&gt;https://github.com/cacoco&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A full list of &lt;a href=&#34;https://github.com/twitter/finatra/graphs/contributors?type=a&#34;&gt;contributors&lt;/a&gt; can be found on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/finatra&#34;&gt;@finatra&lt;/a&gt; on Twitter for updates.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013 Twitter, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>optics-dev/Monocle</title>
    <updated>2022-07-12T01:56:13Z</updated>
    <id>tag:github.com,2022-07-12:/optics-dev/Monocle</id>
    <link href="https://github.com/optics-dev/Monocle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Optics library for Scala&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/optics-dev/Monocle/master/logo/full-logo/m-transparent-color-file.png&#34; alt=&#34;Monocle Logo&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;All documentation is available on &lt;a href=&#34;https://www.optics.dev/Monocle/&#34;&gt;Monocle&lt;/a&gt; website.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ValeLang/Vale</title>
    <updated>2022-07-12T01:56:13Z</updated>
    <id>tag:github.com,2022-07-12:/ValeLang/Vale</id>
    <link href="https://github.com/ValeLang/Vale" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compiler for the Vale programming language - http://vale.dev/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vale&lt;/h1&gt; &#xA;&lt;p&gt;Vale is a programming language that&#39;s aims to be not only &lt;strong&gt;fast&lt;/strong&gt; and &lt;strong&gt;memory-safe&lt;/strong&gt;, but also &lt;strong&gt;easy and flexible&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast:&lt;/strong&gt; Vale is AOT compiled to LLVM, statically-typed, and uses the new &lt;a href=&#34;https://verdagon.dev/blog/generational-references&#34;&gt;generational references&lt;/a&gt; technique for memory safety with speed and flexibility, and will soon have &lt;a href=&#34;https://verdagon.dev/blog/zero-cost-refs-regions&#34;&gt;region borrow checking&lt;/a&gt; to make it even faster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Safe:&lt;/strong&gt; It is the &lt;a href=&#34;https://vale.dev/memory-safe&#34;&gt;safest native language&lt;/a&gt;, thanks to &lt;a href=&#34;https://verdagon.dev/blog/generational-references&#34;&gt;generational references&lt;/a&gt; and &lt;a href=&#34;https://verdagon.dev/blog/fearless-ffi&#34;&gt;Fearless FFI&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy:&lt;/strong&gt; Vale has memory-safe single ownership without garbage collection or a borrow checker, which makes it easy to write safe, fast code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://vale.dev/&#34;&gt;http://vale.dev/&lt;/a&gt; for more information on the language. We&#39;re also open for &lt;a href=&#34;https://github.com/sponsors/ValeLang&#34;&gt;sponsorship&lt;/a&gt;, thank you to all our sponsors for enabling our ambitious endeavor!&lt;/p&gt; &#xA;&lt;p&gt;See also our &lt;a href=&#34;https://github.com/Ivo-Balbaert/Vale_Examples&#34;&gt;treasure trove of working examples&lt;/a&gt;, grouped by functionality.&lt;/p&gt; &#xA;&lt;h2&gt;Building a Vale Program&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest binary from &lt;a href=&#34;https://github.com/ValeLang/Vale/releases&#34;&gt;https://github.com/ValeLang/Vale/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip it into, for example, &lt;code&gt;~/Vale&lt;/code&gt;, and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/li&gt; &#xA; &lt;li&gt;Make a file &lt;code&gt;hello.vale&lt;/code&gt; containing some vale code, like &lt;code&gt;exported func main() { println(&#34;Hello world!&#34;); }&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile a program: &lt;code&gt;build mymod=hello.vale --output_dir target&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the program: &lt;code&gt;target/main&lt;/code&gt;, and you should see the output &lt;code&gt;Hello world!&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Learning Vale&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://vale.dev/guide/introduction&#34;&gt;the Guide&lt;/a&gt; for how to use Vale.&lt;/p&gt; &#xA;&lt;h2&gt;Building the compiler itself&lt;/h2&gt; &#xA;&lt;p&gt;For instructions for building the compiler itself, see &lt;a href=&#34;https://raw.githubusercontent.com/ValeLang/Vale/master/build-compiler.md&#34;&gt;Building the Compiler&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For an overview of the project structure, see &lt;a href=&#34;https://raw.githubusercontent.com/ValeLang/Vale/master/compiler-overview.md&#34;&gt;Compiler Overview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Editor plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=pacifio.vale-lang&#34;&gt;VSCode plugin&lt;/a&gt;: Syntax-highlighting and basic autocompletion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jfecher/vale.vim&#34;&gt;Vim plugin&lt;/a&gt;: Syntax-highlighting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Thank you to all of our sponsors!&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aweagel&#34;&gt;Arthur Weagel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linkmonitor&#34;&gt;Joseph Jaoudi (linkmonitor)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tootoobeepbeep&#34;&gt;Jonathan Zielinski (tootoobeepbeep)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tstack&#34;&gt;Tim Stack (tstack)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kripken&#34;&gt;Alon Zakai (kripken)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rovaughn&#34;&gt;Alec Newman (rovaughn)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shnatsel&#34;&gt;Sergey Davidoff (schnatsel)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxy&#34;&gt;Ian (linuxy)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ivo-Balbaert/&#34;&gt;Ivo Balbaert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solstice333/&#34;&gt;Kevin Navero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ilya Seletsky&lt;/li&gt; &#xA; &lt;li&gt;Jean Juang&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Posnet&#34;&gt;Posnet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kim Shook&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elimisteve&#34;&gt;Steve Phillips&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;p&gt;Vale started in January 2013, and back then we called it &#34;VLang&#34;, though there&#39;s now another language with that name. We then called it GelLLVM, in honor of Gel, the first language to offer constraint references. Since then, we&#39;ve settled on the name &#34;Vale&#34;. Note that Vale and Vala are two different languages.&lt;/p&gt;</summary>
  </entry>
</feed>