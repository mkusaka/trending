<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-27T01:34:13Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>typelevel/cats-effect-testing</title>
    <updated>2024-02-27T01:34:13Z</updated>
    <id>tag:github.com,2024-02-27:/typelevel/cats-effect-testing</id>
    <link href="https://github.com/typelevel/cats-effect-testing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Integration between cats-effect and test frameworks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cats-effect-testing&lt;/h1&gt; &#xA;&lt;p&gt;A quickie little utility which makes it easier to write tests using &lt;a href=&#34;https://specs2.org&#34;&gt;specs2&lt;/a&gt; (mutable or functional), &lt;a href=&#34;http://scalatest.org&#34;&gt;scalatest&lt;/a&gt;, &lt;a href=&#34;https://github.com/lihaoyi/utest&#34;&gt;µTest&lt;/a&gt; or &lt;a href=&#34;https://github.com/monix/minitest&#34;&gt;minitest&lt;/a&gt; where the examples are effectful within &lt;code&gt;cats.effect.IO&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Specs2&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import cats.effect.IO&#xA;import cats.effect.testing.specs2.CatsEffect&#xA;import org.specs2.mutable.Specification&#xA;&#xA;// for some reason, only class works here; object will not be detected by sbt&#xA;class ExampleSpec extends Specification with CatsEffect {&#xA;  &#34;examples&#34; should {&#xA;    &#34;do the things&#34; in IO {&#xA;      true must beTrue&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above compiles and runs exactly as you would expect.&lt;/p&gt; &#xA;&lt;p&gt;By default, tests run with a 10 second timeout. If you wish to override this, simply override the inherited &lt;code&gt;Timeout&lt;/code&gt; val:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;override val Timeout = 5.seconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need an &lt;code&gt;ExecutionContext&lt;/code&gt;, one is available in the &lt;code&gt;executionContext&lt;/code&gt; val.&lt;/p&gt; &#xA;&lt;p&gt;And if you need to share Cats Effect&#39;s Resource between test examples you can extend &lt;code&gt;CatsResource&lt;/code&gt;, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import cats.effect.{IO, Ref, Resource}&#xA;import org.specs2.mutable.SpecificationLike&#xA;&#xA;class CatsResourceSpecs extends CatsResource[IO, Ref[IO, Int]] with SpecificationLike {&#xA;  sequential&#xA;&#xA;  val resource: Resource[IO, Ref[IO, Int]] =&#xA;    Resource.make(Ref[IO].of(0))(_.set(Int.MinValue))&#xA;&#xA;  &#34;cats resource support&#34; should {&#xA;    &#34;run a resource modification&#34; in withResource { ref =&amp;gt;&#xA;      ref.modify{ a =&amp;gt;&#xA;        (a + 1, a)&#xA;      }.map(&#xA;        _ must_=== 0&#xA;      )&#xA;    }&#xA;&#xA;    &#34;be shared between tests&#34; in withResource { ref =&amp;gt;&#xA;      ref.modify{ a =&amp;gt;&#xA;        (a + 1, a)&#xA;      }.map(&#xA;        _ must_=== 1&#xA;      )&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Resource is acquired before the tests are run and released afterwards. A more realistic example would be to share a Resource that takes a long time to start up.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sbt&#34;&gt;libraryDependencies += &#34;org.typelevel&#34; %% &#34;cats-effect-testing-specs2&#34; % &#34;&amp;lt;version&amp;gt;&#34; % Test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Published for Scala 3.1+, 2.13, 2.12, as well as ScalaJS 1.7+. Depends on Cats Effect 3.1+ and Specs2 4.13.x. Specs2 5.0 is not yet supported.&lt;/p&gt; &#xA;&lt;p&gt;Early versions (&lt;code&gt;0.x.y&lt;/code&gt;) were published under the &lt;code&gt;com.codecommit&lt;/code&gt; groupId.&lt;/p&gt; &#xA;&lt;h2&gt;ScalaTest&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import cats.effect._&#xA;import cats.effect.testing.scalatest.AsyncIOSpec&#xA;import org.scalatest.matchers.should.Matchers&#xA;import org.scalatest.freespec.AsyncFreeSpec&#xA;&#xA;class MySpec extends AsyncFreeSpec with AsyncIOSpec with Matchers {&#xA;&#xA;  &#34;My Code &#34; - {&#xA;    &#34;works&#34; in {&#xA;      IO(1).asserting(_ shouldBe 1)&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sbt&#34;&gt;libraryDependencies += &#34;org.typelevel&#34; %% &#34;cats-effect-testing-scalatest&#34; % &#34;&amp;lt;version&amp;gt;&#34; % Test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Published for Scala 3.1+, 2.13, 2.12, as well as ScalaJS 1.7.x. Depends on Cats Effect 3.1+ and scalatest 3.2.6.&lt;/p&gt; &#xA;&lt;p&gt;Early versions (&lt;code&gt;0.x.y&lt;/code&gt;) were published under the &lt;code&gt;com.codecommit&lt;/code&gt; groupId.&lt;/p&gt; &#xA;&lt;h2&gt;µTest&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import scala.concurrent.duration._&#xA;import utest._&#xA;import cats.implicits._&#xA;import cats.effect.IO&#xA;import cats.effect.testing.utest.IOTestSuite&#xA;&#xA;object SimpleSuite extends IOTestSuite {&#xA;  override val timeout = 1.second // Default timeout is 10 seconds&#xA;&#xA;  val tests = Tests {&#xA;    test(&#34;do the thing&#34;) {&#xA;      IO(assert(true))&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sbt&#34;&gt;libraryDependencies += &#34;org.typelevel&#34; %% &#34;cats-effect-testing-utest&#34; % &#34;&amp;lt;version&amp;gt;&#34; % Test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Published for Scala 3.1+, 2.13, 2.12, as well as ScalaJS 1.7.x. Depends on Cats Effect 3.1+ and µTest 0.7.9.&lt;/p&gt; &#xA;&lt;p&gt;Early versions (&lt;code&gt;0.x.y&lt;/code&gt;) were published under the &lt;code&gt;com.codecommit&lt;/code&gt; groupId.&lt;/p&gt; &#xA;&lt;h2&gt;Minitest&lt;/h2&gt; &#xA;&lt;p&gt;Minitest is very similar to uTest, but being strongly typed, there&#39;s no need to support non-IO tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;import scala.concurrent.duration._&#xA;import cats.implicits._&#xA;import cats.effect.IO&#xA;import cats.effect.testing.minitest.IOTestSuite&#xA;&#xA;object SimpleSuite extends IOTestSuite {&#xA;  override val timeout = 1.second // Default timeout is 10 seconds&#xA;&#xA;  test(&#34;do the thing&#34;) {&#xA;    IO(assert(true))&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sbt&#34;&gt;libraryDependencies += &#34;org.typelevel&#34; %% &#34;cats-effect-testing-minitest&#34; % &#34;&amp;lt;version&amp;gt;&#34; % Test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Published for Scala 3.1+, 2.13, 2.12, as well as ScalaJS 1.7.x. Depends on Cats Effect 3.1+ and minitest 2.9.5.&lt;/p&gt; &#xA;&lt;p&gt;Early versions (&lt;code&gt;0.x.y&lt;/code&gt;) were published under the &lt;code&gt;com.codecommit&lt;/code&gt; groupId.&lt;/p&gt; &#xA;&lt;h2&gt;Similar projects&lt;/h2&gt; &#xA;&lt;h3&gt;scalacheck-effect&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/typelevel/scalacheck-effect&#34;&gt;scalacheck-effect&lt;/a&gt; is a library that extends the functionality of &lt;a href=&#34;https://scalacheck.org&#34;&gt;ScalaCheck&lt;/a&gt; to support &#34;effectful&#34; properties. An effectful property is one that evaluates each sample in some type constructor &lt;code&gt;F[_]&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>