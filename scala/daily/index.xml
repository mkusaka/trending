<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-21T01:43:28Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rockthejvm/scala-problems-interviews</title>
    <updated>2023-07-21T01:43:28Z</updated>
    <id>tag:github.com,2023-07-21:/rockthejvm/scala-problems-interviews</id>
    <link href="https://github.com/rockthejvm/scala-problems-interviews" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official repository for the Scala &amp; Functional Programming Practice course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The official repository for the Rock the JVM Scala &amp;amp; Functional Programming practice course&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the code we wrote during &lt;a href=&#34;https://rockthejvm.com/course/scala-functional-programming-practice&#34;&gt;Rock the JVM&#39;s Scala &amp;amp; Functional Programming Practice&lt;/a&gt; course. Unless explicitly mentioned, the code in this repository is exactly what was caught on camera.&lt;/p&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install IntelliJ IDEA from &lt;a href=&#34;https://jetbrains.com&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;open with IntelliJ as an SBT project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to start&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository and checkout the &lt;code&gt;start&lt;/code&gt; tag by running the following in the repo folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to see the final code&lt;/h3&gt; &#xA;&lt;p&gt;Checkout the master branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to run an intermediate state&lt;/h3&gt; &#xA;&lt;p&gt;The repository was built while recording the lectures. Prior to each lecture, I tagged each commit so you can easily go back to an earlier state of the repo!&lt;/p&gt; &#xA;&lt;p&gt;The tags are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;graphs-coloring&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;graphs-find-paths&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;graphs-intro&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;graphs-make-undirected&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;graphs-paths&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-append&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-big-3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-duplicate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-get-kth&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-insert-sort&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-length&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-merge-sort&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-prep&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-quick-sort&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-random-sample&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-remove-kth&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-reverse&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-rle&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lists-rotate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;misc-eval&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;misc-n-queens&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;misc-sierpinski&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numbers-approximate-pi&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numbers-decompose&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numbers-enhancing&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numbers-primes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numbers-recurring-decimals&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;strings-anagram-checks&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;strings-count-chars&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;strings-generate-parentheses&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;strings-justify&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;strings-valid-parentheses&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trees-collect-nodes-at-level&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trees-intro&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trees-leaves&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trees-mirror&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trees-same-shape&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trees-size&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When you watch a lecture, you can &lt;code&gt;git checkout&lt;/code&gt; the appropriate tag and the repo will go back to the exact code I had when I started the lecture.&lt;/p&gt; &#xA;&lt;h3&gt;For questions or suggestions&lt;/h3&gt; &#xA;&lt;p&gt;If you have changes to suggest to this repo, either&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;submit a GitHub issue&lt;/li&gt; &#xA; &lt;li&gt;tell me in the course Q/A forum&lt;/li&gt; &#xA; &lt;li&gt;submit a pull request!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>