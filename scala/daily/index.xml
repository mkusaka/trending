<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-28T01:34:34Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hydrolix/trino-connector</title>
    <updated>2024-04-28T01:34:34Z</updated>
    <id>tag:github.com,2024-04-28:/hydrolix/trino-connector</id>
    <link href="https://github.com/hydrolix/trino-connector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Query Hydrolix tables from the Trino query engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hydrolix Trino Connector&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This is a Trino plugin that allows Trino to access data stored in &lt;a href=&#34;https://hydrolix.io/&#34;&gt;Hydrolix&lt;/a&gt; clusters directly, without ETL.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on &lt;a href=&#34;https://github.com/hydrolix/connectors-core/&#34;&gt;connectors-core&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Currently targets version 435 of the Trino SPI. Other Trino versions, or Presto, might come later; Trino/Presto break binary compatibility constantly! If you need a specific version, let us know and we can probably make it happen quickly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Trino 435&lt;/li&gt; &#xA; &lt;li&gt;Worker nodes must be recent (&amp;gt;=2022) x64 Linux. For local development on other machines, you can try Docker, using &lt;a href=&#34;https://github.com/hydrolix/connectors-core?tab=readme-ov-file#configuration&#34;&gt;this configuration parameter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://scala-sbt.org/&#34;&gt;SBT&lt;/a&gt; in whatever way makes sense for your OS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone git@github.com:hydrolix/trino-connector.git hydrolix-trino-connector &amp;amp;&amp;amp; cd hydrolix-trino-connector&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sbt +assembly&lt;/code&gt; will produce &lt;a href=&#34;https://raw.githubusercontent.com/hydrolix/trino-connector/main/target/scala-2.13/hydrolix-trino-connector-assembly-0.1.0-SNAPSHOT.jar&#34;&gt;./target/scala-2.13/hydrolix-trino-connector-assembly-0.1.0-SNAPSHOT.jar&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Symlink the JAR that was built by the previous step into the right place in the trino-server directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ~/dev/trino-server-435/plugin&#xA;mkdir hydrolix &amp;amp;&amp;amp; cd hydrolix&#xA;ln -s ~/dev/hydrolix-trino-connector/target/scala-2.13/hydrolix-trino-connector-assembly-0.1.0-SNAPSHOT.jar .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a Hydrolix catalog configuration file to your Trino server:&lt;/p&gt; &lt;p&gt;&lt;code&gt;cat ~/dev/trino-server-435/etc/catalog/hydrolix.properties&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;connector.name=hydrolix&#xA;&#xA;jdbc_url=jdbc:clickhouse://my-hdx-cluster.net:8088/_local?ssl=true&#xA;api_url=https://my-hdx-cluster.net/config/v1/&#xA;&#xA;username=hdx_user&#xA;password=hdx_password&#xA;&#xA;### For GCS:&#xA;# cloud_cred_1=&amp;lt;base64(gzip(service account JSON key file))&amp;gt;&#xA;&#xA;### For AWS:&#xA;# cloud_cred_1=&amp;lt;AWS access key ID&amp;gt;&#xA;# cloud_cred_2=&amp;lt;AWS secret key&amp;gt;  &#xA;&#xA;### For local dev in Docker&#xA;# turbine_cmd_docker=my_image_name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run your Trino server:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ~/dev/trino-server-435&#xA;bin/launcher run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or, if you want to attach a debugger:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ~/dev/trino-server-435&#xA;bin/launcher \&#xA;    -J-Xdebug \&#xA;    -J-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 \&#xA;    run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect a Trino client and run a query!&lt;/p&gt; &lt;pre&gt;&lt;code&gt;java -jar trino-cli-435-executable.jar --catalog=hydrolix --user=admin&#xA;&#xA;trino&amp;gt; select count(*), min(timestamp), max(timestamp) from hydro.logs where timestamp &amp;gt; now() - (interval &#39;5&#39; minute);&#xA; _col0 |          _col1          |          _col2          &#xA;-------+-------------------------+-------------------------&#xA; 29699 | 2024-01-11 21:55:00.061 | 2024-01-11 22:04:01.245 &#xA;(1 row)&#xA;&#xA;Query 20240111_220408_00000_dctfe, FINISHED, 1 node&#xA;Splits: 17 total, 17 done (100.00%)&#xA;8.63 [29.7K rows, 261KB] [3.44K rows/s, 30.3KB/s] &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Feature Set&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/hydrolix/connectors-core/?tab=readme-ov-file#feature-set&#34;&gt;connectors-core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;h3&gt;0.1.0&lt;/h3&gt; &#xA;&lt;p&gt;Initial release!&lt;/p&gt;</summary>
  </entry>
</feed>