<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-16T01:53:30Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SharpData/SharpETL</title>
    <updated>2022-07-16T01:53:30Z</updated>
    <id>tag:github.com,2022-07-16:/SharpData/SharpETL</id>
    <link href="https://github.com/SharpData/SharpETL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Write ETL using your favorite SQL dialects&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Sharp ETL&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SharpData/SharpETL/actions/workflows/push.yml&#34;&gt;&lt;img src=&#34;https://github.com/SharpData/SharpETL/actions/workflows/push.yml/badge.svg?branch=main&#34; alt=&#34;Sharp ETL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SharpData/SharpETL/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/SharpData/SharpETL&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SharpData/SharpETL/branch/main/graph/badge.svg?token=299D3CIJ7Y&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Project%20Stage-Production%20Ready-brightgreen.svg?sanitize=true&#34; alt=&#34;stage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sharp ETL is a ETL framework that simplifies writing and executing ETLs by simply writing SQL workflow files. The SQL workflow file format is combined your favourite SQL dialects with just a little bit of configurations.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Let&#39;s run a sharp etl mysql db first&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --name sharp_etl_db -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=sharp_etl mysql:5.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;build from source or download jar from &lt;a href=&#34;https://github.com/SharpData/SharpETL/releases&#34;&gt;releases&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew buildJars -PscalaVersion=2.12 -PsparkVersion=3.3.0 -PscalaCompt=2.12.15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;take a look at &lt;code&gt;hello_world.sql&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat spark/src/main/resources/tasks/hello_world.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you will see the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- workflow=hello_world&#xA;--  loadType=incremental&#xA;--  logDrivenType=timewindow&#xA;&#xA;-- step=define variable&#xA;-- source=temp&#xA;-- target=variables&#xA;&#xA;SELECT &#39;RESULT&#39; AS `OUTPUT_COL`;&#xA;&#xA;-- step=print SUCCESS to console&#xA;-- source=temp&#xA;-- target=console&#xA;&#xA;SELECT &#39;SUCCESS&#39; AS `${OUTPUT_COL}`;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;run and check the console output&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;spark-submit --master local --class com.github.sharpdata.sharpetl.spark.Entrypoint spark/build/libs/sharp-etl-spark-standalone-3.3.0_2.12-0.1.0.jar single-job --name=hello_world --period=1440 --default-start-time=&#34;2022-07-01 00:00:00&#34; --once --local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you will see the output like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;== Physical Plan ==&#xA;*(1) Project [SUCCESS AS RESULT#17167]&#xA;+- Scan OneRowRelation[]&#xA;root&#xA; |-- RESULT: string (nullable = false)&#xA;&#xA;+-------+&#xA;|RESULT |&#xA;+-------+&#xA;|SUCCESS|&#xA;+-------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versions and dependencies&lt;/h2&gt; &#xA;&lt;p&gt;The compatible versions of &lt;a href=&#34;http://spark.apache.org/&#34;&gt;Spark&lt;/a&gt; are as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Spark&lt;/th&gt; &#xA;   &lt;th&gt;Scala&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.3.x&lt;/td&gt; &#xA;   &lt;td&gt;2.11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.4.x&lt;/td&gt; &#xA;   &lt;td&gt;2.11 / 2.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0.x&lt;/td&gt; &#xA;   &lt;td&gt;2.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.1.x&lt;/td&gt; &#xA;   &lt;td&gt;2.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.2.x&lt;/td&gt; &#xA;   &lt;td&gt;2.12 / 2.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.3.x&lt;/td&gt; &#xA;   &lt;td&gt;2.12 / 2.13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>typelevel/fs2</title>
    <updated>2022-07-16T01:53:30Z</updated>
    <id>tag:github.com,2022-07-16:/typelevel/fs2</id>
    <link href="https://github.com/typelevel/fs2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compositional, streaming I/O library for Scala&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FS2: Functional Streams for Scala&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/functional-streams-for-scala/fs2/actions?query=workflow%3A%22Continuous+Integration%22&#34;&gt;&lt;img src=&#34;https://github.com/functional-streams-for-scala/fs2/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/9V8FZTVZ9R&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/632277896739946517.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=404244&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/co.fs2/fs2-core_2.13&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/co.fs2/fs2-core_2.13&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;FS2 is a library for purely functional, effectful, and polymorphic stream processing library in the &lt;a href=&#34;https://scala-lang.org&#34;&gt;Scala programming language&lt;/a&gt;. Its design goals are compositionality, expressiveness, resource safety, and speed. The name is a modified acronym for &lt;strong&gt;F&lt;/strong&gt;unctional &lt;strong&gt;S&lt;/strong&gt;treams for &lt;strong&gt;Scala&lt;/strong&gt; (FSS, or FS2).&lt;/p&gt; &#xA;&lt;p&gt;FS2 is available for Scala 2.12, Scala 2.13, Scala 3, and &lt;a href=&#34;http://www.scala-js.org/&#34;&gt;Scala.js&lt;/a&gt;. FS2 is built upon two major functional libraries for Scala, &lt;a href=&#34;https://typelevel.org/cats/&#34;&gt;Cats&lt;/a&gt;, and &lt;a href=&#34;https://typelevel.org/cats-effect/&#34;&gt;Cats-Effect&lt;/a&gt;. Regardless of those dependencies, FS2 core types (streams and pulls) are polymorphic in the effect type (as long as it is compatible with &lt;code&gt;cats-effect&lt;/code&gt; typeclasses), and thus FS2 can be used with other effect libraries, such as &lt;a href=&#34;https://monix.io/&#34;&gt;Monix&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Quick links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://fs2.io&#34;&gt;Microsite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/fs2/main/#about&#34;&gt;About the library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fs2.io/#/getstarted/install&#34;&gt;How to get latest version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.javadoc.io/doc/co.fs2/fs2-docs_2.13/latest/fs2/index.html&#34;&gt;API docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typelevel/fs2/main/#docs&#34;&gt;Docs and getting help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;docs&#34;&gt;&lt;/a&gt;Documentation and getting help&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are Scaladoc API documentations for [the core library][core-api], which defines and implements the core types for streams and pulls, as well as the type aliases for pipes and sinks. &lt;a href=&#34;https://oss.sonatype.org/service/local/repositories/releases/archive/co/fs2/fs2-io_2.13/3.1.0/fs2-io_2.13-3.1.0-javadoc.jar/!/fs2/io/index.html&#34;&gt;The &lt;code&gt;io&lt;/code&gt; library&lt;/a&gt; provides FS2 bindings for NIO-based file I/O and TCP/UDP networking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fs2.io/#/guide&#34;&gt;The official guide&lt;/a&gt; is a good starting point for learning more about the library.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://fs2.io/#/documentation&#34;&gt;documentation page&lt;/a&gt; is intended to serve as a list of all references, including conference presentation recordings, academic papers, and blog posts, on the use and implementation of &lt;code&gt;fs2&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fs2.io/#/faq&#34;&gt;The FAQ&lt;/a&gt; has frequently asked questions. Feel free to open issues or PRs with additions to the FAQ!&lt;/li&gt; &#xA; &lt;li&gt;Also feel free to come discuss and ask/answer questions in &lt;a href=&#34;https://discord.gg/9V8FZTVZ9R&#34;&gt;the Typelevel Discord channel&lt;/a&gt; and/or on StackOverflow using &lt;a href=&#34;http://stackoverflow.com/tags/fs2&#34;&gt;the tag FS2&lt;/a&gt;. Discord will generally get you a quicker answer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Projects using FS2&lt;/h3&gt; &#xA;&lt;p&gt;You can find a list of libraries and integrations with data stores built on top of FS2 here: &lt;a href=&#34;https://fs2.io/#/ecosystem&#34;&gt;https://fs2.io/#/ecosystem&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a project you&#39;d like to include in this list, please open a PR or let us know in &lt;a href=&#34;https://discord.gg/9V8FZTVZ9R&#34;&gt;the Discord channel&lt;/a&gt; and we&#39;ll add a link to it.&lt;/p&gt; &#xA;&lt;h3&gt;Acknowledgments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yourkit.com/&#34;&gt;&lt;img src=&#34;https://www.yourkit.com/images/yklogo.png&#34; alt=&#34;YourKit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://www.yourkit.com/&#34;&gt;YourKit&lt;/a&gt; for supporting this project&#39;s ongoing performance tuning efforts with licenses to their excellent product.&lt;/p&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/functional-streams-for-scala/fs2/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lhartikk/ArnoldC</title>
    <updated>2022-07-16T01:53:30Z</updated>
    <id>tag:github.com,2022-07-16:/lhartikk/ArnoldC</id>
    <link href="https://github.com/lhartikk/ArnoldC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Arnold Schwarzenegger based programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ArnoldC&lt;/h1&gt; &#xA;&lt;p&gt;Programming language based on the one-liners of Arnold Schwarzenegger.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Although the one-liners of Arnold Schwarzenegger are fairly well known the true semantics of the uttering is yet to be understood. This project tries to discover new meanings from the Arnold movies with the means of computer science.&lt;/p&gt; &#xA;&lt;h2&gt;HelloWorld.arnoldc&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;IT&#39;S SHOWTIME&#xA;TALK TO THE HAND &#34;hello world&#34;&#xA;YOU HAVE BEEN TERMINATED&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget http://lhartikk.github.io/ArnoldC.jar&#xA;echo -e &#34;IT&#39;S SHOWTIME\nTALK TO THE HAND \&#34;hello world\&#34;\nYOU HAVE BEEN TERMINATED&#34; &amp;gt; hello.arnoldc&#xA;java -jar ArnoldC.jar hello.arnoldc&#xA;java hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create some &#34;audible&#34; output you can try the -declaim option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -jar ArnoldC.jar -declaim hello.arnoldc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Brief overview of the keywords&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;http://github.com/lhartikk/ArnoldC/wiki/ArnoldC&#34;&gt;wiki&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=_wk-jT9rn-8&#34;&gt;False&lt;/a&gt; &lt;code&gt;I LIED&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=CtNb1dnEaSQ&#34;&gt;True&lt;/a&gt; &lt;code&gt;NO PROBLEMO&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=MiB7GLyvvJQ&#34;&gt;If&lt;/a&gt; &lt;code&gt;BECAUSE I&#39;M GOING TO SAY PLEASE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=c4psKYpfnYs&#34;&gt;Else&lt;/a&gt; &lt;code&gt;BULLSHIT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://youtu.be/uGstM8QMCjQ?t=1m23s&#34;&gt;EndIf&lt;/a&gt; &lt;code&gt;YOU HAVE NO RESPECT FOR LOGIC&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=wDztrw_0N8M&#34;&gt;While&lt;/a&gt; &lt;code&gt;STICK AROUND&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=R39e30FL37U&#34;&gt;EndWhile&lt;/a&gt; &lt;code&gt;CHILL&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;PlusOperator &lt;code&gt;GET UP&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=7Ox0Ehq-FRQ&#34;&gt;MinusOperator&lt;/a&gt; &lt;code&gt;GET DOWN&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=lf3Kyv_iaNs&#34;&gt;MultiplicationOperator&lt;/a&gt; &lt;code&gt;YOU&#39;RE FIRED&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=9VHtuqXZQeo&#34;&gt;DivisionOperator&lt;/a&gt; &lt;code&gt;HE HAD TO SPLIT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=ybJWKZB0Erk&amp;amp;feature=youtu.be&amp;amp;t=6m59s&#34;&gt;ModuloOperator&lt;/a&gt; &lt;code&gt;I LET HIM GO&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=A1-wUV0-_JY&#34;&gt;EqualTo&lt;/a&gt; &lt;code&gt;YOU ARE NOT YOU YOU ARE ME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=19R2fDXCzcM&#34;&gt;GreaterThan&lt;/a&gt; &lt;code&gt;LET OFF SOME STEAM BENNET&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=RYtQMhnBtTw&#34;&gt;Or&lt;/a&gt; &lt;code&gt;CONSIDER THAT A DIVORCE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=ZQ_Q2b_aXjk&#34;&gt;And&lt;/a&gt; &lt;code&gt;KNOCK KNOCK&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=uCwrOpnyXeo&#34;&gt;DeclareMethod&lt;/a&gt; &lt;code&gt;LISTEN TO ME VERY CAREFULLY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=WANa9Oku-JM&#34;&gt;NonVoidMethod&lt;/a&gt; &lt;code&gt;GIVE THESE PEOPLE AIR&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=FWmH9ylqYYQ&#34;&gt;MethodArguments&lt;/a&gt; &lt;code&gt;I NEED YOUR CLOTHES YOUR BOOTS AND YOUR MOTORCYCLE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=-YEG9DgRHhA&#34;&gt;Return&lt;/a&gt; &lt;code&gt;I&#39;LL BE BACK&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Hhm7aWp8gvc&#34;&gt;EndMethodDeclaration&lt;/a&gt; &lt;code&gt;HASTA LA VISTA, BABY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=HGhP3p6lI3U&#34;&gt;CallMethod&lt;/a&gt; &lt;code&gt;DO IT NOW&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=HkkibBYm2WI&#34;&gt;AssignVariableFromMethodCall&lt;/a&gt; &lt;code&gt;GET YOUR ASS TO MARS&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=PZwwqjcEDUQ&#34;&gt;DeclareInt&lt;/a&gt; &lt;code&gt;HEY CHRISTMAS TREE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=lwqzA6F7nws&#34;&gt;SetInitialValue&lt;/a&gt; &lt;code&gt;YOU SET US UP&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=TKTL2EDTFSo&#34;&gt;BeginMain&lt;/a&gt; &lt;code&gt;IT&#39;S SHOWTIME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=iy_BBBGBpqA&#34;&gt;EndMain&lt;/a&gt; &lt;code&gt;YOU HAVE BEEN TERMINATED&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=dQ6m8ztEzfA&#34;&gt;Print&lt;/a&gt; &lt;code&gt;TALK TO THE HAND&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1mC9eOqsyTg&#34;&gt;ReadInteger&lt;/a&gt; &lt;code&gt;I WANT TO ASK YOU A BUNCH OF QUESTIONS AND I WANT TO HAVE THEM ANSWERED IMMEDIATELY&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=-9-Te-DPbSE&#34;&gt;AssignVariable&lt;/a&gt; &lt;code&gt;GET TO THE CHOPPER&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=RrPXRkJ_P90&#34;&gt;SetValue&lt;/a&gt; &lt;code&gt;HERE IS MY INVITATION&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=rk9WHasIZk0&#34;&gt;EndAssignVariable&lt;/a&gt; &lt;code&gt;ENOUGH TALK&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=oGcRTJK43OM&#34;&gt;ParseError&lt;/a&gt; &lt;code&gt;WHAT THE FUCK DID I DO WRONG&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>