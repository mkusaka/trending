<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-09T01:41:16Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>guardian/frontend</title>
    <updated>2022-11-09T01:41:16Z</updated>
    <id>tag:github.com,2022-11-09:/guardian/frontend</id>
    <link href="https://github.com/guardian/frontend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Guardian DotCom.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;We&#39;re hiring!&lt;/h2&gt; &#xA;&lt;p&gt;Ever thought about joining us? &lt;a href=&#34;https://workforus.theguardian.com/careers/product-engineering/&#34;&gt;https://workforus.theguardian.com/careers/product-engineering/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Frontend&lt;/h1&gt; &#xA;&lt;p&gt;The Guardian website frontend.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For everybody who engages with our journalism, &lt;a href=&#34;https://www.theguardian.com&#34;&gt;theguardian.com&lt;/a&gt; is an industry-best news website that is fast, accessible and easy to use. Unlike other ways of developing products, ours puts the audience first.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Frontend is &lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs/02-architecture/01-applications-architecture.md&#34;&gt;a set of Play Framework 2 Scala applications&lt;/a&gt;. It is built in two parts, using &lt;code&gt;make&lt;/code&gt; for the client side asset build and SBT for the Play Framework backend.&lt;/p&gt; &#xA;&lt;p&gt;For Articles, Frontend&#39;s responsiblity is to build JSON to pass to the modern rendering service, &lt;a href=&#34;https://github.com/guardian/dotcom-rendering&#34;&gt;Dotcom Rendering&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Core Development Principles (lines in the sand)&lt;/h1&gt; &#xA;&lt;p&gt;These principles apply to all requests on &lt;code&gt;www.theguardian.com&lt;/code&gt; and &lt;code&gt;api.nextgen.guardianapps.co.uk&lt;/code&gt; (our Ajax URL)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every request can be cached and has an appropriate Cache-Control header set.&lt;/li&gt; &#xA; &lt;li&gt;Each request may only perform one I/O operation on the backend. (you cannot make two calls to the content API or any other 3rd party)&lt;/li&gt; &#xA; &lt;li&gt;The average response time of any endpoint is less than 500ms.&lt;/li&gt; &#xA; &lt;li&gt;Requests that take longer than two seconds will be terminated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs&#34;&gt;All documentation notes and useful items can be found in the &lt;code&gt;docs&lt;/code&gt; folder&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;New developers&lt;/h1&gt; &#xA;&lt;p&gt;Welcome! &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs/01-start-here&#34;&gt;How to set up and run frontend&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To get set up, please follow &lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs/01-start-here/01-installation-steps.md&#34;&gt;the installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Fixes for common problems can be found &lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs/01-start-here/04-troubleshooting.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs/01-start-here/05-development-tips.md&#34;&gt;development tips&lt;/a&gt; document to learn about more about development process.&lt;/p&gt; &#xA;&lt;p&gt;For our deployment process, see &lt;a href=&#34;https://raw.githubusercontent.com/guardian/frontend/main/docs/01-start-here/03-how-to-deploy.md&#34;&gt;how to deploy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>broadinstitute/firecloud-orchestration</title>
    <updated>2022-11-09T01:41:16Z</updated>
    <id>tag:github.com,2022-11-09:/broadinstitute/firecloud-orchestration</id>
    <link href="https://github.com/broadinstitute/firecloud-orchestration" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/broadinstitute/firecloud-orchestration?branch=develop&#34;&gt;&lt;img src=&#34;https://travis-ci.org/broadinstitute/firecloud-orchestration.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/broadinstitute/firecloud-orchestration?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/broadinstitute/firecloud-orchestration/badge.svg?branch=develop&amp;amp;service=github&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;FireCloud-Orchestration&lt;/h1&gt; &#xA;&lt;p&gt;FireCloud Orchestration Service&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;URL: &lt;a href=&#34;https://firecloud-orchestration.dsde-dev.broadinstitute.org/&#34;&gt;https://firecloud-orchestration.dsde-dev.broadinstitute.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://broadinstitute.atlassian.net/wiki/display/DSDE/Silver+Team&#34;&gt;https://broadinstitute.atlassian.net/wiki/display/DSDE/Silver+Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github Repository: &lt;a href=&#34;https://github.com/broadinstitute/firecloud-orchestration/&#34;&gt;https://github.com/broadinstitute/firecloud-orchestration/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IntelliJ Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IntelliJ IDEA can be downloaded here : &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;https://www.jetbrains.com/idea/&lt;/a&gt; . It is an &#39;Intelligent Java IDE&#39;&lt;/li&gt; &#xA; &lt;li&gt;Configure the SBT plugin. &#34;IntelliJ IDEA&#34; -&amp;gt; &#34;Preferences&#34; -&amp;gt; &#34;Plugins&#34; can be used to do so (download, install)&lt;/li&gt; &#xA; &lt;li&gt;After running IntelliJ, open this source directory with File -&amp;gt; Open&lt;/li&gt; &#xA; &lt;li&gt;In the Import Project dialog, check &#34;Create directories for empty content roots automatically&#34; and set your Project SDK to 11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;spray-routing&lt;/li&gt; &#xA; &lt;li&gt;spray-json&lt;/li&gt; &#xA; &lt;li&gt;sbt-assembly&lt;/li&gt; &#xA; &lt;li&gt;sbt-revolver&lt;/li&gt; &#xA; &lt;li&gt;mock-server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt; (4GB+, 8GB recommended)&lt;/li&gt; &#xA; &lt;li&gt;Broad internal internet connection (or VPN, non-split recommended)&lt;/li&gt; &#xA; &lt;li&gt;Render the local configuration files. From the root of the &lt;a href=&#34;https://github.com/broadinstitute/firecloud-develop&#34;&gt;firecloud-develop&lt;/a&gt; repo, run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sh run-context/local/scripts/firecloud-setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: this script will offer to set up configuration for several other services as well. You can skip those if you only want to set up configuration for Orch. If this is your first time running Orch or rendering configuration files, you will want to run through the &#34;Setup vault&#34; step.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;/etc/hosts&lt;/code&gt; file on your machine must contain this entry (for calling Orch endpoints):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;127.0.0.1&#x9;local.broadinstitute.org&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running:&lt;/h3&gt; &#xA;&lt;p&gt;After satisfying the above requirements, execute the following command from the root of the firecloud-orchestration repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./config/docker-rsync-local-orch.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If Orch successfully starts up, you can now access the Orch Swagger page: &lt;a href=&#34;https://local.broadinstitute.org:10443/&#34;&gt;https://local.broadinstitute.org:10443/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We push new features to a feature-branch and make pull requests against master.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Run the assembly task to build a fat jar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&#xA;&amp;gt; assembly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For development, you can have sbt recompile and restart the server whenever a file changes on disk:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&#xA;&amp;gt; ~ reStart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Integration Testing&lt;/h2&gt; &#xA;&lt;p&gt;Start an Elasticsearch server in a docker container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./docker/run-es.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run integration tests. You can re-run tests multiple times against the same running Elasticsearch container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sbt it:test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stop the Elasticsearch server once you are done with your tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./docker/run-es.sh stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you find that &lt;code&gt;./docker/run-es.sh start&lt;/code&gt; fails silently, fails mysteriously, or fails while attempting to pre-populate data, you may be running into RAM limits where the Elasticsearh image cannot get enough memory to run. Try increasing &lt;a href=&#34;https://docs.docker.com/docker-for-mac/#resources&#34;&gt;Docker&#39;s RAM allocation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;To build the orch jar with docker, and then build the orch docker image, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./script/build.sh jar -d build &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;Remote debugging is enabled for firecloud-orchestration on port 5051.&lt;/p&gt;</summary>
  </entry>
</feed>