<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-31T01:37:05Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>outr/scribe</title>
    <updated>2022-12-31T01:37:05Z</updated>
    <id>tag:github.com,2022-12-31:/outr/scribe</id>
    <link href="https://github.com/outr/scribe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The fastest logging library in the world. Built from scratch in Scala and programmatically configurable.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scribe&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/outr/scribe/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/outr/scribe/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/outr/scribe/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=outr/scribe&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/f333f6b110974985b2d1dbea39665e9e&#34; alt=&#34;Codacy Grade&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/outr/scribe/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=outr/scribe&amp;amp;utm_campaign=Badge_Coverage&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Coverage/f333f6b110974985b2d1dbea39665e9e&#34; alt=&#34;Codacy Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/outr/scribe&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.outr/scribe_2.13&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.outr/scribe_2.13/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://index.scala-lang.org/outr/scribe&#34;&gt;&lt;img src=&#34;https://index.scala-lang.org/outr/scribe/scribe/latest.svg?sanitize=true&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://javadoc.io/doc/com.outr/scribe_2.13&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge/com.outr/scribe_2.13.svg?sanitize=true&#34; alt=&#34;Javadocs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scribe is a completely different way of thinking about logging. Instead of wrapping around existing logging frameworks and bearing their performance and design flaws, Scribe is built from the ground up to provide fast and effective logging in Scala, Scala.js, and Scala Native without the need of configuration files or additional dependencies. All management of logging can be handled programmatically (of course, classic logging configuration can be utilized as well if desired) in Scala itself, giving the developer the freedom to use whatever configuration framework, if any, they should choose to use.&lt;/p&gt; &#xA;&lt;h2&gt;Availability&lt;/h2&gt; &#xA;&lt;p&gt;Scribe is available on the JVM, Scala.js, and ScalaNative with cross-compiling for Scala 2.12, 2.13, and 3&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;For people that want to skip the explanations and see it action, this is the place to start!&lt;/p&gt; &#xA;&lt;h3&gt;Dependency Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies += &#34;com.outr&#34; %% &#34;scribe&#34; % &#34;3.10.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Cross-Platform projects (JVM, JS, and/or Native):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies += &#34;com.outr&#34; %%% &#34;scribe&#34; % &#34;3.10.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you want interoperability with SLF4J (to allow better interoperability with existing libraries using other loggers):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;libraryDependencies += &#34;com.outr&#34; %% &#34;scribe-slf4j&#34; % &#34;3.10.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;scribe.info(&#34;Yes, it&#39;s that simple!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why Another Logging Framework&lt;/h2&gt; &#xA;&lt;p&gt;Yes, we know there are too many Java logging frameworks to count, and a large number of decent logging frameworks in Scala, so why did we write yet another logging framework? Nearly every Scala logging framework is mostly just a wrapper around Java logging frameworks (usually SLF4J, Log4J, or Logback). This comes with a few problems:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;No support for Scala.js&lt;/li&gt; &#xA; &lt;li&gt;No support for Scala Native&lt;/li&gt; &#xA; &lt;li&gt;Performance cost (Blog Post: &lt;a href=&#34;https://matthicks.com/2018/02/06/scribe-2-0-fastest-jvm-logger-in-the-world/&#34;&gt;https://matthicks.com/2018/02/06/scribe-2-0-fastest-jvm-logger-in-the-world/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Additional dependencies&lt;/li&gt; &#xA; &lt;li&gt;Substantial cost logging method and line numbers&lt;/li&gt; &#xA; &lt;li&gt;Lack of programmatic configuration support&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;A few of the main features that Scribe offers (&lt;a href=&#34;https://github.com/outr/scribe/wiki/Features&#34;&gt;for a complete list&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Performance is a critical consideration. We leverage Macros to handle optimization of everything possible at compile-time to avoid logging slowing down your production application. As far as we are aware, Scribe is the fastest logging framework on the JVM.&lt;/li&gt; &#xA; &lt;li&gt;Programmatic configuration. No need to be bound to configuration files to configure your logging. This means you can rely on any configuration framework or you can configure real-time changes to your logging in your production environment. This particularly comes in handy if you need to enable debug logging on something going wrong in production. No need to restart your server, simply provide a mechanism to modify the logging configuration in real-time.&lt;/li&gt; &#xA; &lt;li&gt;Clean logging. Macros allow us to introduce logging into a class via an import instead of a mix-in or unnecessary setup code.&lt;/li&gt; &#xA; &lt;li&gt;Zero cost class, method, and line number logging built-in. Never worry about your logger working up the stack to figure out the position of the logging statement at runtime. With Macros we determine that information at compile-time to avoid any runtime cost.&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous logging support. Scribe&#39;s logger is very fast, but if real-time performance is critical, the asynchronous logging support completely removes logging impact from your application&#39;s thread impact.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/outr/scribe/wiki&#34;&gt;Check out the wiki for complete documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;The best way to receive immediate feedback for any questions is via our &lt;a href=&#34;https://gitter.im/outr/scribe&#34;&gt;Gitter channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;YourKit supports open source projects with its full-featured Java Profiler. YourKit, LLC is the creator of &lt;a href=&#34;https://www.yourkit.com/java/profiler/&#34;&gt;YourKit Java Profiler&lt;/a&gt; and &lt;a href=&#34;https://www.yourkit.com/.net/profiler/&#34;&gt;YourKit .NET Profiler&lt;/a&gt;, innovative and intelligent tools for profiling Java and .NET applications.&lt;/p&gt;</summary>
  </entry>
</feed>