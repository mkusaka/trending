<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-14T01:37:27Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wartremover/wartremover</title>
    <updated>2024-02-14T01:37:27Z</updated>
    <id>tag:github.com,2024-02-14:/wartremover/wartremover</id>
    <link href="https://github.com/wartremover/wartremover" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexible Scala code linting tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WartRemover&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://javadoc.io/doc/org.wartremover/wartremover_2.13/latest/org/wartremover/warts/index.html&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/org.wartremover/wartremover_2.13/javadoc.svg?sanitize=true&#34; alt=&#34;scaladoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:%22org.wartremover%22%20AND%20a:%22wartremover_2.13%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.wartremover/wartremover_2.13?label=Maven%20Central&amp;amp;color=%236DBE42&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/wartremover/Lobby&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/repo.svg?sanitize=true&#34; alt=&#34;Join us on gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;WartRemover is a flexible Scala code linting tool.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for Wartremover is available &lt;a href=&#34;https://www.wartremover.org&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s very useful to get the tree expanded by the Scala compiler, rather than the original source. Adding the &lt;code&gt;-Xprint:typer&lt;/code&gt; flag to the Scala compiler will show code like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;// println(&#34;Hello world&#34;)&#xA;package $line4 {&#xA;  object $read extends scala.AnyRef {&#xA;    def &amp;lt;init&amp;gt;(): $line4.$read.type = {&#xA;      $read.super.&amp;lt;init&amp;gt;();&#xA;      ()&#xA;    };&#xA;    object $iw extends scala.AnyRef {&#xA;      def &amp;lt;init&amp;gt;(): type = {&#xA;        $iw.super.&amp;lt;init&amp;gt;();&#xA;        ()&#xA;      };&#xA;      object $iw extends scala.AnyRef {&#xA;        def &amp;lt;init&amp;gt;(): type = {&#xA;          $iw.super.&amp;lt;init&amp;gt;();&#xA;          ()&#xA;        };&#xA;        private[this] val res1: Unit = scala.this.Predef.println(&#34;Hello world&#34;);&#xA;        &amp;lt;stable&amp;gt; &amp;lt;accessor&amp;gt; def res1: Unit = $iw.this.res1&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adding the generated code to an issue is very useful for debugging.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;The Apache Software License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hausdorff/slda</title>
    <updated>2024-02-14T01:37:27Z</updated>
    <id>tag:github.com,2024-02-14:/hausdorff/slda</id>
    <link href="https://github.com/hausdorff/slda" rel="alternate"></link>
    <summary type="html">&lt;p&gt;scalable implementation of latent dirichlet allocation&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>