<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-20T01:40:33Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>VirtusLab/besom</title>
    <updated>2023-09-20T01:40:33Z</updated>
    <id>tag:github.com,2023-09-20:/VirtusLab/besom</id>
    <link href="https://github.com/VirtusLab/besom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Besom - a broom made of twigs tied round a stick. Brooms and besoms are used for protection, to ward off evil spirits, and cleansing of ritual spaces. Also, an experimental pulumi-scala implementation, incidentally.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Besom&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Besom&lt;/strong&gt; - a broom made of twigs tied around a stick. Brooms and besoms are used for protection, to ward off evil spirits, and cleansing of ritual spaces. Also, an experimental pulumi-scala implementation, incidentally.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VirtusLab/besom/develop/website/static/img/Besom_logo_full_color.png&#34; alt=&#34;Besom logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Publish necessary packages&lt;/h3&gt; &#xA;&lt;p&gt;Prerequisites: &lt;a href=&#34;https://www.pulumi.com/docs/install/&#34;&gt;pulumi&lt;/a&gt;, &lt;a href=&#34;https://github.com/casey/just#installation&#34;&gt;just&lt;/a&gt;, &lt;a href=&#34;https://scala-cli.virtuslab.org/install/&#34;&gt;scala-cli&lt;/a&gt;, java, &lt;a href=&#34;https://go.dev/doc/install&#34;&gt;go&lt;/a&gt;, &lt;a href=&#34;https://grpc.io/docs/protoc-installation/&#34;&gt;protoc&lt;/a&gt;, git, unzip,&lt;/p&gt; &#xA;&lt;p&gt;Publish locally and install necessary Besom packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;just publish-local-core&#xA;just publish-local-compiler-plugin&#xA;just install-language-plugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Publish additional SDKs&lt;/h3&gt; &#xA;&lt;p&gt;You have to generate an SDK for a provider of your choice, to do that run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;just generate-provider-sdk ${provider_name} ${provider_version}&#xA;just publish-local-provider-sdk ${provider_name} ${provider_version}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;just generate-provider-sdk kubernetes 4.2.0&#xA;just publish-local-provider-sdk kubernetes 4.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Initialize your code with a template&lt;/h3&gt; &#xA;&lt;p&gt;You can start writing your code at this point but to help you set up Besom comes with Pulumi templates. More information about templates in &lt;a href=&#34;https://raw.githubusercontent.com/VirtusLab/besom/develop/template/README&#34;&gt;./template/README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To initialize your project with chosen template run this in an empty folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pulumi new ${path_to_the_template}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd ..&#xA;mkdir infra&#xA;cd infra&#xA;pulumi new ../besom/template/kubernetes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Explaining the file structure&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Pulumi.yaml&lt;/code&gt; is your main Pulumi file, explained &lt;a href=&#34;https://www.pulumi.com/docs/concepts/projects/project-file/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;project.scala&lt;/code&gt; is the file containing your dependencies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Main.scala&lt;/code&gt; is the entry point for your infrastructure as code. Resources created in &lt;code&gt;Pulumi.run{ ... }&lt;/code&gt; block will be created by Pulumi.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up the code editor&lt;/h2&gt; &#xA;&lt;p&gt;If you are using IntelliJ:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;install scala plugin&lt;/li&gt; &#xA; &lt;li&gt;use BSP (&lt;a href=&#34;https://www.jetbrains.com/help/idea/bsp-support.html&#34;&gt;documentation&lt;/a&gt;), hint: once you have &lt;code&gt;.bsp&lt;/code&gt; directories you can import modules one by one&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are using VSCode:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;install Metals&lt;/li&gt; &#xA; &lt;li&gt;open the folder with your infrastructure and start Metals.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This might not be enough if your infrastructure is just a part (a module) of your existing scala project. For this to work you have to make your build tool aware of the infrastructure code, for &lt;strong&gt;sbt&lt;/strong&gt; create a corresponding module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;lazy val infra = project.in(file(&#34;infrastructure&#34;)).settings(&#xA;libraryDependencies ++= Seq(&#xA;&#34;org.virtuslab&#34; %% &#34;besom-kubernetes&#34; % &#34;0.0.1-SNAPSHOT&#34;, // or any other sdk you are using&#xA;&#34;org.virtuslab&#34; %% &#34;besom-core&#34; % &#34;0.0.1-SNAPSHOT&#34;&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This just informs your IDE about the existence of the infrastructure module, DO NOT remove dependencies from &lt;code&gt;project.scala&lt;/code&gt;, because they are necessary in both places.&lt;/p&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pass &lt;code&gt;Context&lt;/code&gt; everywhere you are using Pulumi, for example when you are creating a resource.&lt;/li&gt; &#xA; &lt;li&gt;Resources are initialized lazily. To make them appear in your physical infrastructure make sure their evaluation is triggered directly or transitively from the main for-comprehension block of your Pulumi program.&lt;/li&gt; &#xA; &lt;li&gt;Use whatever scala concepts you are familiar with, infrastructure as code in Besom is still a scala program, so you have the full potential of the language to work with.&lt;/li&gt; &#xA; &lt;li&gt;Pay attention to the types. You will be instantiating case classes to pass parameters, note their package of origin.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>