<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-26T01:43:22Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PurpleKingdomGames/indigo</title>
    <updated>2023-04-26T01:43:22Z</updated>
    <id>tag:github.com,2023-04-26:/PurpleKingdomGames/indigo</id>
    <link href="https://github.com/PurpleKingdomGames/indigo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An FP game engine for Scala.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tterb/atomic-design-ui/raw/master/LICENSEs&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PurpleKingdomGames/indigo?color=indigo&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpleKingdomGames/indigo/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?color=purple&amp;amp;label=latest%20release&amp;amp;query=%24%5B0%5D.name&amp;amp;url=https%3A%2F%2Fapi.github.com%2Frepos%2FPurpleKingdomGames%2Findigo%2Ftags&#34; alt=&#34;Latest Tagged Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/b5CD47g&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/716435281208672356?color=blue&amp;amp;label=discord&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Purple-Kingdom-Games/Indigo?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Purple-Kingdom-Games/Indigo.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/Purple-Kingdom-Games/Indigo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpleKingdomGames/indigo/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleKingdomGames/indigo/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Indigo&lt;/h1&gt; &#xA;&lt;p&gt;Indigo is a game engine written in Scala for functional programmers. It allows game developers to build games using a set of purely functional APIs that are focused on productivity and testing.&lt;/p&gt; &#xA;&lt;p&gt;Indigo is built entirely on Scala.js + WebGL, but it&#39;s sbt and Mill plugins will export games for web, desktop (via Electron), and mobile (via Cordova). Hypothetically consoles could also be supported.&lt;/p&gt; &#xA;&lt;p&gt;Documentation can be found on &lt;a href=&#34;https://indigoengine.io&#34;&gt;indigoengine.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Full local build and test instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Using Nix&lt;/h3&gt; &#xA;&lt;p&gt;The root of the project contains a very very simple &lt;code&gt;flake.nix&lt;/code&gt; file that, if you have nix installed and flakes enabled, will give you all the tools you need to build Indigo by running &lt;code&gt;nix develop&lt;/code&gt; in the root directory.&lt;/p&gt; &#xA;&lt;h3&gt;Build requirements&lt;/h3&gt; &#xA;&lt;p&gt;You will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mill&lt;/li&gt; &#xA; &lt;li&gt;SBT&lt;/li&gt; &#xA; &lt;li&gt;JDK (Update: 8 works, 17 is used in Indigo&#39;s development)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the build&lt;/h3&gt; &#xA;&lt;p&gt;On Mac / Linux, from the repo root to do a full build and test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows, open up powershell and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;&amp;amp; build.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is also another script which is a bit faster since it doesn&#39;t build the examples or demos.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash localpublish.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Software requirements for running games&lt;/h2&gt; &#xA;&lt;p&gt;The list above covers the software needed to build Indigo itself, but to run a game you may also need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NPM and/or Yarn&lt;/li&gt; &#xA; &lt;li&gt;NodeJS&lt;/li&gt; &#xA; &lt;li&gt;Electron&lt;/li&gt; &#xA; &lt;li&gt;An http server that will serve static from a directory (suggestions: &lt;code&gt;http-server&lt;/code&gt; via npm, or Python&#39;s &lt;code&gt;SimpleHTTPServer&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;A frontend packaging tool such as Parcel.js&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nbd-wtf/soma</title>
    <updated>2023-04-26T01:43:22Z</updated>
    <id>tag:github.com,2023-04-26:/nbd-wtf/soma</id>
    <link href="https://github.com/nbd-wtf/soma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a spacechain on signet with anyprevout&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spacechain-inspired Open Market for Assets&lt;/h1&gt; &#xA;&lt;p&gt;This is a demo Spacechain. &lt;a href=&#34;https://gist.github.com/RubenSomsen/c9f0a92493e06b0e29acced61ca9f49a#spacechains&#34;&gt;Spacechains&lt;/a&gt; can be used for all your wild ideas that need a blockchain, as long as they don&#39;t require a native currency (such as a bitcoin). In this demo, we have in our hands a fully-fledged blockchain that does one very boring thing: let&#39;s you issue and transfer non-fungible assets, each having a deterministically-generated unique identifier.&lt;/p&gt; &#xA;&lt;p&gt;To run the demo, start your Soma toolkit by running &lt;code&gt;docker run -it -p 8080:8080 -p 39735:39735 -p 9036:9036 -v ~/soma:/root --name soma --rm fiatjaf/soma&lt;/code&gt;. This will start a container running &lt;code&gt;bitcoind&lt;/code&gt; on signet, and ready to start a CLN &lt;code&gt;lightningd&lt;/code&gt; node and a &lt;code&gt;soma&lt;/code&gt; node daemon. The data will be saved at &lt;code&gt;~/soma&lt;/code&gt;, in case you want to delete it later.&lt;/p&gt; &#xA;&lt;p&gt;After starting, you&#39;ll be dropped in a &lt;code&gt;tmux&lt;/code&gt; interface. It has a bunch of pre-created tabs and you can use your mouse to click around. The first tab will have &lt;code&gt;bitcoind&lt;/code&gt;. You should wait for it to stop syncing before you start &lt;code&gt;lightningd&lt;/code&gt; on the second tab (the command will be prefilled so you just have to press enter). The same is valid for the third tab, where you can start the &lt;code&gt;soma&lt;/code&gt; daemon.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up your Lightning node&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;code&gt;lightningd&lt;/code&gt; running you can jump to the next tab and run some commands to get a Lightning channel to one of the Spacechain miners.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;First you&#39;ll need to get some signet coins: &lt;code&gt;cln newaddr&lt;/code&gt; will print an address, take it and paste it on &lt;a href=&#34;https://signetfaucet.com/&#34;&gt;https://signetfaucet.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;After you got the coins, connect and open a channel to this miner (or use some other miner if you know any): &lt;code&gt;cln connect 035aa926b4b467fc89819cade52f2639abe9d3909f0d0d6282d34bd3e068d78110@198.98.50.157:39735 &amp;amp;&amp;amp; cln fundchannel 035aa926b4b467fc89819cade52f2639abe9d3909f0d0d6282d34bd3e068d78110 all 1500perkb&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;While the channel is being published we can explore other things.&lt;/p&gt; &#xA;&lt;h2&gt;Exploring the spacechain&lt;/h2&gt; &#xA;&lt;p&gt;Your container should have been running a server hosting a simple chain explorer page for the spacechain. You can open your browser at &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; to see it. That explorer fetches data directly from your &lt;code&gt;soma&lt;/code&gt; daemon. There is a public explorer at &lt;a href=&#34;http://198.98.50.157:8080/&#34;&gt;http://198.98.50.157:8080/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Minting an asset&lt;/h2&gt; &#xA;&lt;p&gt;Just call &lt;code&gt;sw mint&lt;/code&gt;, this will create a keypair for you and print a transaction, hex-encoded, minting an asset to it. That transaction is not mined on the spacechain yet, for that it must be given to a miner to include it in a block. To do that, run the following command: &lt;code&gt;cln commando 035aa926b4b467fc89819cade52f2639abe9d3909f0d0d6282d34bd3e068d78110 soma-invoice &#39;{&#34;tx&#34;: &#34;&amp;lt;paste-tx-hex-here&amp;gt;&#34;, &#34;amount_msat&#34;: 500000}&#39; 1WlbzV1PyJI0rs-EPUZUpOCNudFQVaqmD2CIcFX9Mow9MiZtZXRob2Q9c29tYS1pbnZvaWNl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will ask the specific miner you&#39;re connected to (change if necessary) to give you a 500sat invoice for mining the spacechain transaction. You can change the amount you want to pay. The miner doesn&#39;t care, it will accept any amount. It will aggregate amounts from all pending transactions it has, so if there are a lot of people mining transaction you can probably get away paying very little, but 500sat is fine for the test.&lt;/p&gt; &#xA;&lt;p&gt;After calling that you will receive an invoice back, which you can just pay with &lt;code&gt;cln pay &amp;lt;invoice&amp;gt;&lt;/code&gt;. The payment will be pending while the miner tries to publish your transaction. If it fails -- or if it is published by another miner -- the miner will politely fail the payment so you don&#39;t lose any money. You can attempt to mine the same transaction in multiple different miners.&lt;/p&gt; &#xA;&lt;h2&gt;Sending an asset to someone else&lt;/h2&gt; &#xA;&lt;p&gt;Just like you did with &lt;code&gt;sw mint&lt;/code&gt;, you can use &lt;code&gt;sw send&lt;/code&gt; to build a transaction sending an asset you own to someone else.&lt;/p&gt; &#xA;&lt;p&gt;To check what assets you own you can call &lt;code&gt;soma getaccountassets pubkey=&amp;lt;your-pubkey&amp;gt;&lt;/code&gt;. To get your pubkey do &lt;code&gt;sw info&lt;/code&gt;. (You can also list all assets that exist with &lt;code&gt;soma listallassets&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;After confirming that you own an asset you&#39;ll also need its current &lt;code&gt;counter&lt;/code&gt; -- which you can get from the &lt;code&gt;getaccountassets&lt;/code&gt; call above, it is just a dummy number -- then call &lt;code&gt;sw send &amp;lt;asset-id&amp;gt; &amp;lt;counter&amp;gt; &amp;lt;target-pubkey&amp;gt;&lt;/code&gt;. This will give you a transaction encoded as hex, which you can mine in the same way as above.&lt;/p&gt; &#xA;&lt;h2&gt;Cheatsheet of useful commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sw mint&lt;/code&gt; generates a transaction that mints an asset.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sw send &amp;lt;asset&amp;gt; &amp;lt;counter&amp;gt; &amp;lt;target-pubkey&amp;gt;&lt;/code&gt; generates a transaction that sends an existing asset from you to someone else.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;soma getaccountassets pubkey=&amp;lt;your-pubkey&amp;gt;&lt;/code&gt; lists all your assets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;soma listallassets&lt;/code&gt; lists all assets that exist.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sw decode &amp;lt;tx&amp;gt;&lt;/code&gt; decodes transactions from hex into meaningful JSON.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;soma info&lt;/code&gt; displays the current state of the chain and of the merge-mining.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;I hate &lt;code&gt;tmux&lt;/code&gt;!&lt;/h2&gt; &#xA;&lt;p&gt;You can call commands from outside the container, from any terminal -- just don&#39;t close the terminal that is running the thing. Open a new terminal and type:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker exec soma sw mint&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker exec soma sw info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker exec soma soma info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker exec soma soma listallassets&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and so on and so forth.&lt;/p&gt; &#xA;&lt;h2&gt;Talking to a human&lt;/h2&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://t.me/spacechains&#34;&gt;https://t.me/spacechains&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>codacy/codacy-stylelint</title>
    <updated>2023-04-26T01:43:22Z</updated>
    <id>tag:github.com,2023-04-26:/codacy/codacy-stylelint</id>
    <link href="https://github.com/codacy/codacy-stylelint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Codacy Tool for Stylelint&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;codacy-stylelint&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codacy.com/gh/codacy/codacy-stylelint?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=codacy/codacy-stylelint&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/80607506ff8c4a7f826bbe0b643ba16d&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/codacy/codacy-stylelint?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=codacy/codacy-stylelint&amp;amp;utm_campaign=Badge_Coverage&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Coverage/80607506ff8c4a7f826bbe0b643ba16d&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/codacy/codacy-stylelint&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/codacy/codacy-stylelint.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/codacy/codacy-stylelint&#34; title=&#34;Get your own version badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/version/codacy/codacy-stylelint.svg?sanitize=true&#34; alt=&#34;Docker Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docker engine to allow Codacy to have &lt;a href=&#34;https://github.com/stylelint/stylelint&#34;&gt;stylelint&lt;/a&gt; support.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can create the docker by following these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate base image:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t codacy-stylelint-base .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Generate tool image:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt docker:publishLocal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The docker is ran with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it -v $srcDir:/src  &amp;lt;DOCKER_NAME&amp;gt;:&amp;lt;DOCKER_VERSION&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://support.codacy.com/hc/en-us/articles/207994725-Tool-Developer-Guide&#34;&gt;Tool Developer Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://support.codacy.com/hc/en-us/articles/207280379-Tool-Developer-Guide-Using-Scala&#34;&gt;Tool Developer Guide - Using Scala&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;p&gt;We use the &lt;a href=&#34;https://github.com/codacy/codacy-plugins-test&#34;&gt;codacy-plugins-test&lt;/a&gt; to test our external tools integration. You can follow the instructions there to make sure your tool is working as expected.&lt;/p&gt; &#xA;&lt;h2&gt;Update tool version&lt;/h2&gt; &#xA;&lt;p&gt;The tool is dependabot friendly, so it is automatically updated.&lt;/p&gt; &#xA;&lt;h2&gt;Generate Docs&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sbt &#34;doc-generator/run&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is Codacy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codacy.com/&#34;&gt;Codacy&lt;/a&gt; is an Automated Code Review Tool that monitors your technical debt, helps you improve your code quality, teaches best practices to your developers, and helps you save time in Code Reviews.&lt;/p&gt; &#xA;&lt;h3&gt;Among Codacy’s features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Identify new Static Analysis issues&lt;/li&gt; &#xA; &lt;li&gt;Commit and Pull Request Analysis with GitHub, BitBucket/Stash, GitLab (and also direct git repositories)&lt;/li&gt; &#xA; &lt;li&gt;Auto-comments on Commits and Pull Requests&lt;/li&gt; &#xA; &lt;li&gt;Integrations with Slack, HipChat, Jira, YouTrack&lt;/li&gt; &#xA; &lt;li&gt;Track issues in Code Style, Security, Error Proneness, Performance, Unused Code and other categories&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Codacy also helps keep track of Code Coverage, Code Duplication, and Code Complexity.&lt;/p&gt; &#xA;&lt;p&gt;Codacy supports PHP, Python, Ruby, Java, JavaScript, and Scala, among others.&lt;/p&gt; &#xA;&lt;h3&gt;Free for Open Source&lt;/h3&gt; &#xA;&lt;p&gt;Codacy is free for Open Source projects.&lt;/p&gt;</summary>
  </entry>
</feed>