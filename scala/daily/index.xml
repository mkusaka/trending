<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Scala Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-25T01:53:08Z</updated>
  <subtitle>Daily Trending of Scala in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lichess-org/scalachess</title>
    <updated>2022-07-25T01:53:08Z</updated>
    <id>tag:github.com,2022-07-25:/lichess-org/scalachess</id>
    <link href="https://github.com/lichess-org/scalachess" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chess API written in scala. Immutable and free of side effects.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ornicar/scalachess/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/ornicar/scalachess/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chess API written in scala for &lt;a href=&#34;https://lichess.org&#34;&gt;lichess.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is entirely functional, immutable, and free of side effects.&lt;/p&gt; &#xA;&lt;h2&gt;INSTALL&lt;/h2&gt; &#xA;&lt;p&gt;Clone scalachess&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git://github.com/ornicar/scalachess&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get latest sbt on &lt;a href=&#34;http://www.scala-sbt.org/download.html&#34;&gt;http://www.scala-sbt.org/download.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start sbt in scalachess directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sbt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the sbt shell, to compile scalachess, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the tests (with coverage):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;clean coverage test&#xA;coverageReport&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Code formatting&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://scalameta.org/scalafmt/&#34;&gt;scalafmt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://scalameta.org/scalafmt/docs/installation.html&#34;&gt;install it for your code editor&lt;/a&gt; if you&#39;re going to contribute to this project.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t install it, please run &lt;code&gt;scalafmtAll&lt;/code&gt; in the sbt console before committing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>scalatest/scalatest</title>
    <updated>2022-07-25T01:53:08Z</updated>
    <id>tag:github.com,2022-07-25:/scalatest/scalatest</id>
    <link href="https://github.com/scalatest/scalatest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A testing tool for Scala and Java developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ScalaTest&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/scalatest/scalatest&#34;&gt;&lt;img src=&#34;https://travis-ci.org/scalatest/scalatest.png?branch=3.1.x&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ScalaTest is a free, open-source testing toolkit for Scala and Java programmers.&lt;/p&gt; &#xA;&lt;p&gt;Official Website: &lt;a href=&#34;http://www.scalatest.org/&#34;&gt;http://www.scalatest.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using ScalaTest&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://www.scala-sbt.org/1.x/docs/Setup.html&#34;&gt;Download and Setup&lt;/a&gt; for download and setup instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;http://www.scalatest.org/quick_start&#34;&gt;Quick Start&lt;/a&gt; for steps to get started quickly.&lt;/p&gt; &#xA;&lt;h2&gt;Building ScalaTest&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-Requisites&lt;/h3&gt; &#xA;&lt;p&gt;The followings are needed for building ScalaTest:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 8&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.scala-sbt.org/1.x/docs/Setup.html&#34;&gt;SBT 1.3.13&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;use the following SBT options instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SBT_OPTS=&#34;-Xms512M -Xmx3000M -Xss1M -XX:NewRatio=8&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building and Running Tests&lt;/h3&gt; &#xA;&lt;p&gt;This command will build and run the regular tests:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ sbt test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To include flicker tests, you&#39;ll need to set environment variable SCALATEST_RUN_FLICKER_TESTS=true:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; export SCALATEST_RUN_FLICKER_TESTS=true&#xA;&amp;gt; sbt test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run generated all tests, you&#39;ll need to increase maximum heap size to at least -Xmx5000M, and use this command instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rm -rf gentests&#xA;$ sbt gentests/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run different groups generated tests separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rm -rf gentests&#xA;$ sbt genMustMatchersTests1/test&#xA;$ sbt genMustMatchersTests2/test&#xA;$ sbt genMustMatchersTests3/test&#xA;$ sbt genMustMatchersTests4/test&#xA;$ sbt genGenTests/test&#xA;$ sbt genTablesTests/test&#xA;$ sbt genInspectorsTests/test&#xA;$ sbt genInspectorsShorthandsTests1/test&#xA;$ sbt genInspectorsShorthandsTests2/test&#xA;$ sbt genTheyTests/test&#xA;$ sbt genContainTests1/test&#xA;$ sbt genContainTests2/test&#xA;$ sbt genSortedTests/test&#xA;$ sbt genLoneElementTests/test&#xA;$ sbt genEmptyTests/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;What it does is simply switch to gentests project and run test.&lt;/p&gt; &#xA;&lt;p&gt;To run scala-js tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sbt scalatestAppJS/clean&#xA;$ sbt scalacticTestJS/test:compile&#xA;$ sbt scalacticTestJS/test&#xA;$ sbt scalatestTestJS/test:compile&#xA;$ sbt scalatestTestJS/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run scala-native tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sbt -Dscalatest.skip.jdk.check=true ++2.11.12 scalatestAppNative/clean&#xA;$ sbt -Dscalatest.skip.jdk.check=true ++2.11.12 scalacticTestNative/test:compile&#xA;$ sbt -Dscalatest.skip.jdk.check=true ++2.11.12 scalacticTestNative/test&#xA;$ sbt -Dscalatest.skip.jdk.check=true ++2.11.12 scalatestTestNative/test:compile&#xA;$ sbt -Dscalatest.skip.jdk.check=true ++2.11.12 scalatestTestNative/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building Examples&lt;/h3&gt; &#xA;&lt;p&gt;You can build examples project using this command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ sbt examples/compile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Packaging&lt;/h3&gt; &#xA;&lt;p&gt;You can package the ScalaTest JAR file using this command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ sbt package&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The resulting JAR file will be produced in target/scala-2.11/.&lt;/p&gt; &#xA;&lt;p&gt;You can also publish it to your local Ivy repository using this command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ sbt publishLocal&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or publish it to local maven repository using this command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ sbt publishM2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Publishing&lt;/h3&gt; &#xA;&lt;p&gt;To publish to Sonatype, you first need to make sure you have the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GPG client is installed on your command line path. For more information, please refer to &lt;a href=&#34;http://www.gnupg.org/&#34;&gt;GNU Privacy Guard Website&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You have created your GPG keys and distributed your public key to hkp://pool.sks-keyservers.net/. For more information, please refer to &lt;a href=&#34;https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven&#34;&gt;How To Generate PGP Signatures With Maven&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You have been granted the right to publish using org.scalatest and org.scalactic domain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, ScalaTest build will read your Sonatype credentials from ~/.ivy2/.credentials, which is a properties file that looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;realm=Sonatype Nexus Repository Manager&#xA;host=oss.sonatype.org&#xA;user=xxxxxxxx&#xA;password=xxxxxxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use SCALATEST_NEXUS_LOGIN and SCALATEST_NEXUS_PASSWORD environment variables to override Sonatype credentials.&lt;/p&gt; &#xA;&lt;p&gt;For signing, ScalaTest build will use ~/.gnupg/secring.gpg by default and prompt for GPG passphase if required. Alternatively you can use SCALATEST_GPG_FILE to use a different GPG file, and use SCALATEST_GPG_PASSPHASE to provide GPG passphase to avoid input prompt.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to export a particular private key into a separate GPG file, you can use the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ gpg --export-secret-keys example@example.com &amp;gt; example-secret-key.gpg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;With Sonatype credentials and GPG file in place, you can now publish to Sonatype.&lt;/p&gt; &#xA;&lt;p&gt;Before publishing any patch release, binary compatibility with previous version should be checked:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sbt ++2.11.12 scalactic/package scalactic/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestCore/package scalatestCore/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFeatureSpec/package scalatestFeatureSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFlatSpec/package scalatestFlatSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFreeSpec/package scalatestFreeSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFunSuite/package scalatestFunSuite/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFunSpec/package scalatestFunSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestPropSpec/package scalatestPropSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestRefSpec/package scalatestRefSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestWordSpec/package scalatestWordSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestDiagrams/package scalatestDiagrams/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestMatchersCore/package scalatestMatchersCore/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestShouldMatchers/package scalatestShouldMatchers/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestMustMatchers/package scalatestMustMatchers/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalacticJS/package scalacticJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestCoreJS/package scalatestCoreJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFeatureSpecJS/package scalatestFeatureSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFlatSpecJS/package scalatestFlatSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFreeSpecJS/package scalatestFreeSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFunSuiteJS/package scalatestFunSuiteJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestFunSpecJS/package scalatestFunSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestPropSpecJS/package scalatestPropSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestWordSpecJS/package scalatestWordSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestDiagramsJS/package scalatestDiagramsJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestMatchersCoreJS/package scalatestMatchersCoreJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestShouldMatchersJS/package scalatestShouldMatchersJS/mimaReportBinaryIssues&#xA;$ sbt ++2.11.12 scalatestMustMatchersJS/package scalatestMustMatchersJS/mimaReportBinaryIssues&#xA;&#xA;$ sbt ++2.12.15 scalactic/package scalactic/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestCore/package scalatestCore/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFeatureSpec/package scalatestFeatureSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFlatSpec/package scalatestFlatSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFreeSpec/package scalatestFreeSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFunSuite/package scalatestFunSuite/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFunSpec/package scalatestFunSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestPropSpec/package scalatestPropSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestRefSpec/package scalatestRefSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestWordSpec/package scalatestWordSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestDiagrams/package scalatestDiagrams/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestMatchersCore/package scalatestMatchersCore/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestShouldMatchers/package scalatestShouldMatchers/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestMustMatchers/package scalatestMustMatchers/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalacticJS/package scalacticJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestCoreJS/package scalatestCoreJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFeatureSpecJS/package scalatestFeatureSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFlatSpecJS/package scalatestFlatSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFreeSpecJS/package scalatestFreeSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFunSuiteJS/package scalatestFunSuiteJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestFunSpecJS/package scalatestFunSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestPropSpecJS/package scalatestPropSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestWordSpecJS/package scalatestWordSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestDiagramsJS/package scalatestDiagramsJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestMatchersCoreJS/package scalatestMatchersCoreJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestShouldMatchersJS/package scalatestShouldMatchersJS/mimaReportBinaryIssues&#xA;$ sbt ++2.12.15 scalatestMustMatchersJS/package scalatestMustMatchersJS/mimaReportBinaryIssues&#xA;&#xA;$ sbt ++2.13.8 scalactic/package scalactic/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestCore/package scalatestCore/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFeatureSpec/package scalatestFeatureSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFlatSpec/package scalatestFlatSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFreeSpec/package scalatestFreeSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFunSuite/package scalatestFunSuite/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFunSpec/package scalatestFunSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestPropSpec/package scalatestPropSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestRefSpec/package scalatestRefSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestWordSpec/package scalatestWordSpec/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestDiagrams/package scalatestDiagrams/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestMatchersCore/package scalatestMatchersCore/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestShouldMatchers/package scalatestShouldMatchers/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestMustMatchers/package scalatestMustMatchers/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalacticJS/package scalacticJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestCoreJS/package scalatestCoreJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFeatureSpecJS/package scalatestFeatureSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFlatSpecJS/package scalatestFlatSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFreeSpecJS/package scalatestFreeSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFunSuiteJS/package scalatestFunSuiteJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestFunSpecJS/package scalatestFunSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestPropSpecJS/package scalatestPropSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestWordSpecJS/package scalatestWordSpecJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestDiagramsJS/package scalatestDiagramsJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestMatchersCoreJS/package scalatestMatchersCoreJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestShouldMatchersJS/package scalatestShouldMatchersJS/mimaReportBinaryIssues&#xA;$ sbt ++2.13.8 scalatestMustMatchersJS/package scalatestMustMatchersJS/mimaReportBinaryIssues&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To publish scalatest modules for jvm, js, native and dotty, use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./publish.sh&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>nymanjens/quizmaster</title>
    <updated>2022-07-25T01:53:08Z</updated>
    <id>tag:github.com,2022-07-25:/nymanjens/quizmaster</id>
    <link href="https://github.com/nymanjens/quizmaster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web-app for conducting a quiz over the internet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quizmaster&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nymanjens/quizmaster/actions&#34;&gt;&lt;img src=&#34;https://github.com/nymanjens/quizmaster/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A web-app for conducting a quiz, including a page for players to enter their answers. Lots of question types are suported, which are configured in a YAML file.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nymanjens/quizmaster/master/screenshot.png&#34; alt=&#34;screenshot&#34; title=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;From prebuilt release in zip file (recommended)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/nymanjens/quizmaster/releases&#34;&gt;latest release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unpack the archive and open a terminal in the unpacked folder&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bin/server&lt;/code&gt; (UNIX) or &lt;code&gt;bin/server.bat&lt;/code&gt; (Windows)&lt;/li&gt; &#xA; &lt;li&gt;Browse to &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using a prebuilt docker image&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/nymanjens/quizmaster.git&#xA;cd quizmaster&#xA;docker-compose --file=docker-compose-prebuilt.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse to &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building and running your own release with Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following commands:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/nymanjens/quizmaster.git&#xA;cd quizmaster&#xA;docker-compose --file=docker-compose-build-locally.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse to &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;conf/quiz/quiz-config.yml&lt;/code&gt;:&lt;br&gt; Configure your quiz here (questions, choices, answers, images, ...). The existing one in the release is a demo config that contains most of the options.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Play&lt;/h2&gt; &#xA;&lt;h3&gt;How to set up&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to host a quiz:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make your own quiz by editing &lt;code&gt;conf/quiz/quiz-config.yml&lt;/code&gt;. You can test your quiz by starting a local server with it (see the installation section above)&lt;/li&gt; &#xA; &lt;li&gt;Host the server somewhere accessible to all players&lt;/li&gt; &#xA; &lt;li&gt;During a quiz, share the link to your server with all players. You can go to the same page and unlock the master controls via the padlock icon (if you configured a &lt;code&gt;masterSecret&lt;/code&gt; in &lt;code&gt;quiz-config.yml&lt;/code&gt;). The important pages during the quiz: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The player&#39;s answer submission page: This is what players use to input their answers.&lt;/li&gt; &#xA;   &lt;li&gt;The quiz page: This is the screen to show to all players. It shows the questions, player scores and plays audio and video.&lt;/li&gt; &#xA;   &lt;li&gt;The master page: This is a screen only for the quizmaster. It allows you to score player answers and generally control the quiz flow.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Shortcuts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Quiz navigation&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;left/right&lt;/code&gt;: Go to the previous/next step of the question&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;alt + left/right&lt;/code&gt;: Go to the previous/next question&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;alt + shift + left/right&lt;/code&gt;: Go to the previous/next round&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tools during question&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;spacebar&lt;/code&gt;: Pause and resume the timer&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shift + r&lt;/code&gt;: Play the current audio/video file from the beginning&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shift + -/o&lt;/code&gt;: Subtract 30 seconds from the current timer&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shift + =/+/p&lt;/code&gt;: Add 30 seconds from the current timer&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;alt + enter&lt;/code&gt;: Toggle enlarged image (if there is a visible image)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;a&lt;/code&gt;: toggle the answer to be visible in the master view (&lt;a href=&#34;http://localhost:9000/app/master&#34;&gt;http://localhost:9000/app/master&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>