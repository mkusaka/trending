<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-05T02:00:55Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>basecamp/kamal-skiff</title>
    <updated>2023-11-05T02:00:55Z</updated>
    <id>tag:github.com,2023-11-05:/basecamp/kamal-skiff</id>
    <link href="https://github.com/basecamp/kamal-skiff" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deploy static sites using nginx + SSI with Kamal&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Skiff&lt;/h1&gt; &#xA;&lt;p&gt;Skiff uses &lt;a href=&#34;https://kamal-deploy.org&#34;&gt;Kamal&lt;/a&gt; to deploy static sites using nginx with Server-Side Includes (SSI).&lt;/p&gt; &#xA;&lt;p&gt;Understand the why and the how in this introduction video: &lt;a href=&#34;https://www.youtube.com/watch?v=YoabUEzpM6k&#34;&gt;https://www.youtube.com/watch?v=YoabUEzpM6k&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Local development&lt;/h2&gt; &#xA;&lt;p&gt;If you have a Ruby environment available, you can install Skiff globally with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem install kamal-skiff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;skiff dev&lt;/code&gt; to start the development server.&lt;/p&gt; &#xA;&lt;p&gt;...otherwise, you can run a dockerized version via an alias (add this to your .bashrc or similar to simplify re-use). On macOS, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias skiff-dev=&#34;docker build -t skiff-site . &amp;amp;&amp;amp; docker run -it --rm -p 4000:80 -v ./public:/site/public --name skiff-site skiff-site nginx &#39;-g daemon off;&#39;&#34;&#xA;alias skiff=&#34;docker run -it --rm -v &#39;${PWD}:/workdir&#39; -v /run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock -e SSH_AUTH_SOCK=&#39;/run/host-services/ssh-auth.sock&#39; -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/basecamp/kamal-skiff:latest&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;skiff-dev&lt;/code&gt; to start the development server, and use &lt;code&gt;skiff [command]&lt;/code&gt; for everything else.&lt;/p&gt; &#xA;&lt;h2&gt;Deploying the site for the first time&lt;/h2&gt; &#xA;&lt;p&gt;First ensure that you&#39;ve set &lt;code&gt;GIT_URL&lt;/code&gt; to a repository address with a valid access token embedded in the &lt;code&gt;.env&lt;/code&gt; file. This access token must have access to pull from the git repository in question (see &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens&#34;&gt;personal access tokens for GitHub&lt;/a&gt; for an example).&lt;/p&gt; &#xA;&lt;p&gt;Then you must also setup an access token for your Docker image repository (see &lt;a href=&#34;https://docs.docker.com/security/for-developers/access-tokens/&#34;&gt;Create and manage access tokens for Docker Hub&lt;/a&gt; for an example).&lt;/p&gt; &#xA;&lt;p&gt;Finally, you must add the server address into &lt;code&gt;config/deploy.yml&lt;/code&gt;, and ensure that the image and repository configurations are correct.&lt;/p&gt; &#xA;&lt;p&gt;Now you&#39;re ready to run &lt;code&gt;skiff deploy&lt;/code&gt; to deploy your site to the server. This will install Docker on your server (using &lt;code&gt;apt-get&lt;/code&gt;), if it isn&#39;t already available.&lt;/p&gt; &#xA;&lt;h2&gt;Deploying changes to production&lt;/h2&gt; &#xA;&lt;p&gt;Changes checked into git are automatically pulled onto the Skiff server every 10 seconds. So all you have to do is checkin your changes and push them.&lt;/p&gt; &#xA;&lt;p&gt;If you need to change the nginx configuration in &lt;code&gt;config/server.conf&lt;/code&gt;, make your changes to that file, check them into git and push, and then run &lt;code&gt;skiff restart&lt;/code&gt; to test the configuration file and restart the server if it&#39;s valid.&lt;/p&gt; &#xA;&lt;h2&gt;Deploying changes to staging first&lt;/h2&gt; &#xA;&lt;p&gt;To use a staging server, you must set &lt;code&gt;GIT_BRANCH&lt;/code&gt; in .env to the branch you&#39;re using for staging. Then you can deploy the site to a staging server using &lt;code&gt;skiff deploy --staging&lt;/code&gt;, which will use the configuration in &lt;code&gt;config/deploy.staging.yml&lt;/code&gt;, and start pulling updates from the branch specified.&lt;/p&gt; &#xA;&lt;h2&gt;Flushing etag caches after changing include files&lt;/h2&gt; &#xA;&lt;p&gt;Skiff uses &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_ssi_module.html&#34;&gt;Server Side Includes&lt;/a&gt;, which can change independently of your individual HTML files. When that happens, the caching etags for those latter files will not be updated automatically to reflect the change. You can run &lt;code&gt;skiff flush&lt;/code&gt; to touch all the public HTML files, which will flush the etag cache.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Skiff is released under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hypomodern/rduration</title>
    <updated>2023-11-05T02:00:55Z</updated>
    <id>tag:github.com,2023-11-05:/hypomodern/rduration</id>
    <link href="https://github.com/hypomodern/rduration" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple utility for parsing durations from strings and comparing them. Basic math is also supported.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Duration&lt;/h1&gt; &#xA;&lt;p&gt;Provides simple (somewhat naive) Duration parsing from strings. Allows you to compare and modify durations.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;rduration&#39;, :require =&amp;gt; &#39;duration&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install it yourself as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install rduration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;duration_spec.rb&lt;/code&gt; has more details about the types of strings this can handle, but here&#39;s brief overview:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;a = Duration.new(&#34;01:46:00&#34;)&#xA;b = Duration.new(&#34;25 minutes 17 seconds&#34;)&#xA;a &amp;gt; b # =&amp;gt; true&#xA;a - b # =&amp;gt; #&amp;lt;Duration:2164349940 @raw=&#34;4843&#34;&amp;gt;&#xA;[b, a].sort # =&amp;gt; [a, b]&#xA;&#xA;b.to_clock_format # =&amp;gt; &#34;25:17&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you require &#39;duration/string_ext&#39; then strings gain a new method: &lt;code&gt;#to_duration&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;&#34;35m 5s&#34;.to_duration # =&amp;gt; NoMethodError: undefined method `to_duration&#39; for &#34;35m 5s&#34;:String&#xA;&#xA;require &#39;duration/string_ext&#39;&#xA;&#34;35m 5s&#34;.to_duration # =&amp;gt; #&amp;lt;Duration:2151903540 @raw=&#34;35m 5s&#34;&amp;gt;&#xA;&#xA;# once you&#39;ve done this, the arithmetic and comparison stuff works too&#xA;&#34;35m 5s&#34;.to_duration &amp;gt; &#34;10m&#34; # =&amp;gt; true&#xA;&#34;35m 5s&#34;.to_duration &amp;gt; &#34;50m&#34; # =&amp;gt; false&#xA;&#34;35m 5s&#34;.to_duration + &#34;10m&#34; # =&amp;gt; #&amp;lt;Duration:2156162420 @raw=&#34;2705&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Formats&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s a list of formats that will parse:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Duration&#xA;  #parse&#xA;    parses &#34;0&#34; as 0 seconds&#xA;    parses &#34;00:00&#34; as 0 seconds&#xA;    parses &#34;0 seconds&#34; as 0 seconds&#xA;    parses nil as 0 seconds&#xA;    parses &#34;45s&#34; as 45 seconds&#xA;    parses &#34;45 seconds&#34; as 45 seconds&#xA;    parses &#34;00:00:45&#34; as 45 seconds&#xA;    parses &#34;45&#34; as 45 seconds&#xA;    parses &#34;137s&#34; as 137 seconds&#xA;    parses &#34;2m17s&#34; as 137 seconds&#xA;    parses &#34;2 minutes 17 seconds&#34; as 137 seconds&#xA;    parses &#34;02:17&#34; as 137 seconds&#xA;    parses &#34;2:17&#34; as 137 seconds&#xA;    parses &#34;1h32m07s&#34; as 5527 seconds&#xA;    parses &#34;1:32:07&#34; as 5527 seconds&#xA;    parses &#34;92 minutes and 7 seconds&#34; as 5527 seconds&#xA;    parses &#34;3d10h15m&#34; as 296100 seconds&#xA;    parses &#34;3:10:15:00&#34; as 296100 seconds&#xA;    parses &#34;82 hours 15 minutes&#34; as 296100 seconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interesting Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;#to_clock_format&lt;/code&gt; leverages &lt;code&gt;#to_s&lt;/code&gt;&#39;s newfound proc handling powers to format the output. Speaking of...&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#to_s&lt;/code&gt; takes a proc, and yields the duration in seconds to it. This is useful for output.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CHANGELOG&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;v0.0.2 Speling And Hashify&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Corrected spelling (thanks @czarneckiD) and killed an extraneous method.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;v0.0.1 Hello World&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Handles all of my use cases. Could be better at everything, though :).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors (Thanks!)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/czarneckiD&#34;&gt;czarneckiD&lt;/a&gt; fixed an odd spelling mishap.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Added some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2012 Matt Wilson. See LICENSE for details, but it&#39;s MIT.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rubysec/ruby-advisory-db</title>
    <updated>2023-11-05T02:00:55Z</updated>
    <id>tag:github.com,2023-11-05:/rubysec/ruby-advisory-db</id>
    <link href="https://github.com/rubysec/ruby-advisory-db" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A database of vulnerable Ruby Gems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Advisory Database&lt;/h1&gt; &#xA;&lt;p&gt;The Ruby Advisory Database is a community effort to compile all security advisories that are relevant to Ruby libraries.&lt;/p&gt; &#xA;&lt;p&gt;You can check your own Gemfile.locks against this database by using &lt;a href=&#34;https://github.com/rubysec/bundler-audit&#34;&gt;bundler-audit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Ruby security!&lt;/h2&gt; &#xA;&lt;p&gt;Do you know about a vulnerability that isn&#39;t listed in this database? Open an issue or submit a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;The database is a list of directories that match the names of Ruby libraries on &lt;a href=&#34;https://rubygems.org/&#34;&gt;rubygems.org&lt;/a&gt;. Within each directory are one or more advisory files for the Ruby library. These advisory files are named using the advisories&#39; &lt;a href=&#34;https://cve.mitre.org/&#34;&gt;CVE&lt;/a&gt; identifier number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gems/:&#xA;  actionpack/:&#xA;    CVE-2014-0130.yml  CVE-2014-7818.yml  CVE-2014-7829.yml  CVE-2015-7576.yml&#xA;    CVE-2015-7581.yml  CVE-2016-0751.yml  CVE-2016-0752.yml&#xA;rubies/:&#xA;  jruby/:&#xA;    ...&#xA;  mruby/:&#xA;    ...&#xA;  ruby/:&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;gems/&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;gems/&lt;/code&gt; directory contains sub-directories that match the names of the Ruby libraries on &lt;a href=&#34;https://rubygems.org/&#34;&gt;rubygems.org&lt;/a&gt;. Within each directory are one or more advisory files for the Ruby library. These advisory files are named using the advisories&#39; &lt;a href=&#34;https://cve.mitre.org/&#34;&gt;CVE&lt;/a&gt; or &lt;a href=&#34;https://help.github.com/en/articles/about-maintainer-security-advisories&#34;&gt;GHSA&lt;/a&gt; ID.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;rubies/&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;rubies/&lt;/code&gt; directory contains sub-directories for each Ruby implementation. Within each directory are one or more advisory files for the Ruby implementation. These advisory files are named using the advisories&#39; &lt;a href=&#34;https://cve.mitre.org/&#34;&gt;CVE&lt;/a&gt; or &lt;a href=&#34;https://help.github.com/en/articles/about-maintainer-security-advisories&#34;&gt;GHSA&lt;/a&gt; ID.&lt;/p&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;p&gt;Each advisory file contains the advisory information in &lt;a href=&#34;http://www.yaml.org/&#34;&gt;YAML&lt;/a&gt; format. Here are some example advisories:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;gems/actionpack/CVE-2023-22795.yml&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;gem: actionpack&#xA;cve: 2023-22795&#xA;ghsa: 8xww-x3g3-6jcv&#xA;url: https://github.com/rails/rails/releases/tag/v7.0.4.1&#xA;title: ReDoS based DoS vulnerability in Action Dispatch&#xA;date: 2023-01-18&#xA;description: |&#xA;  There is a possible regular expression based DoS vulnerability in Action&#xA;  Dispatch related to the If-None-Match header. This vulnerability has been&#xA;  assigned the CVE identifier CVE-2023-22795.&#xA;&#xA;  Versions Affected: All&#xA;  Not affected: None&#xA;  Fixed Versions: 5.2.8.15 (Rails LTS), 6.1.7.1, 7.0.4.1&#xA;&#xA;  # Impact&#xA;&#xA;  A specially crafted HTTP If-None-Match header can cause the regular&#xA;  expression engine to enter a state of catastrophic backtracking, when on a&#xA;  version of Ruby below 3.2.0. This can cause the process to use large amounts&#xA;  of CPU and memory, leading to a possible DoS vulnerability All users running&#xA;  an affected release should either upgrade or use one of the workarounds&#xA;  immediately.&#xA;&#xA;  # Workarounds&#xA;&#xA;  We recommend that all users upgrade to one of the FIXED versions. In the&#xA;  meantime, users can mitigate this vulnerability by using a load balancer or&#xA;  other device to filter out malicious If-None-Match headers before they reach&#xA;  the application.&#xA;&#xA;  Users on Ruby 3.2.0 or greater are not affected by this vulnerability.&#xA;patched_versions:&#xA;  - &#34;~&amp;gt; 5.2.8, &amp;gt;= 5.2.8.15&#34;  # Rails LTS&#xA;  - &#34;~&amp;gt; 6.1.7, &amp;gt;= 6.1.7.1&#34;&#xA;  - &#34;&amp;gt;= 7.0.4.1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;rubies/ruby/CVE-2022-28739.yml&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;engine: ruby&#xA;cve: 2022-28739&#xA;url: https://www.ruby-lang.org/en/news/2022/04/12/buffer-overrun-in-string-to-float-cve-2022-28739/&#xA;title: Buffer overrun in String-to-Float conversion&#xA;date: 2022-04-12&#xA;description: |&#xA;  A buffer-overrun vulnerability is discovered in a conversion algorithm from a String to a Float. This vulnerability has been assigned the CVE identifier CVE-2022-28739. We strongly recommend upgrading Ruby.&#xA;&#xA;  Due to a bug in an internal function that converts a String to a Float, some convertion methods like Kernel#Float and String#to_f could cause buffer over-read. A typical consequence is a process termination due to segmentation fault, but in a limited circumstances, it may be exploitable for illegal memory read.&#xA;&#xA;  Please update Ruby to 2.6.10, 2.7.6, 3.0.4, or 3.1.2.&#xA;patched_versions:&#xA;  - ~&amp;gt; 2.6.10&#xA;  - ~&amp;gt; 2.7.6&#xA;  - ~&amp;gt; 3.0.4&#xA;  - &#39;&amp;gt;= 3.1.2&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Schema&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;gems&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gem&lt;/code&gt; [String] (required): Name of the affected gem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;library&lt;/code&gt; [String] (optional): Name of the ruby library which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;framework&lt;/code&gt; [String] (optional): Name of the framework which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;platform&lt;/code&gt; [String] (optional): If this vulnerability is platform-specific, name of platform this vulnerability affects (e.g. jruby)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cve&lt;/code&gt; [String] (optional): Common Vulnerabilities and Exposures (CVE) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;osvdb&lt;/code&gt; [Integer] (optional): Open Sourced Vulnerability Database (OSVDB) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghsa&lt;/code&gt; [String] (optional): GitHub Security Advisory (GHSA) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; [String] (required): The URL to the full advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; [String] (required): The title of the advisory or individual vulnerability. It must be a single line sentence.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt; [Date] (required): The public disclosure date of the advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; [String] (required): One or more paragraphs describing the vulnerability. It may contain multiple paragraphs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v2&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v2/guide&#34;&gt;CVSSv2&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v3&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v3.1/user-guide&#34;&gt;CVSSv3&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v4&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v4.0/user-guide&#34;&gt;CVSSv4&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unaffected_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the unaffected versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;patched_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the patched versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;related&lt;/code&gt; [Hash&amp;lt;Array&amp;lt;String&amp;gt;&amp;gt;] (optional): Sometimes an advisory references many urls and other identifiers. Supported keys: &lt;code&gt;cve&lt;/code&gt;, &lt;code&gt;ghsa&lt;/code&gt;, &lt;code&gt;osvdb&lt;/code&gt;, and &lt;code&gt;url&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;notes&lt;/code&gt; [String] (optional): Internal notes regarding the vulnerability&#39;s inclusion in this database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;rubies&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;engine&lt;/code&gt; [&lt;code&gt;ruby&lt;/code&gt; | &lt;code&gt;mruby&lt;/code&gt; | &lt;code&gt;jruby&lt;/code&gt; | &lt;code&gt;truffleruby&lt;/code&gt;] (required): Name of the affected Ruby implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;platform&lt;/code&gt; [String] (optional): If this vulnerability is platform-specific, name of platform this vulnerability affects (e.g. jruby)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cve&lt;/code&gt; [String] (optional): Common Vulnerabilities and Exposures (CVE) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;osvdb&lt;/code&gt; [Integer] (optional): Open Sourced Vulnerability Database (OSVDB) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghsa&lt;/code&gt; [String] (optional): GitHub Security Advisory (GHSA) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; [String] (required): The URL to the full advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; [String] (required): The title of the advisory or individual vulnerability. It must be a single line sentence.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt; [Date] (required): The public disclosure date of the advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; [String] (required): One or more paragraphs describing the vulnerability. It may contain multiple paragraphs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v2&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v2/guide&#34;&gt;CVSSv2&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v3&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v3.1/user-guide&#34;&gt;CVSSv3&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v4&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v4.0/user-guide&#34;&gt;CVSSv4&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unaffected_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the unaffected versions of the Ruby implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;patched_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the patched versions of the Ruby implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;related&lt;/code&gt; [Hash&amp;lt;Array&amp;lt;String&amp;gt;&amp;gt;] (optional): Sometimes an advisory references many urls and other identifiers. Supported keys: &lt;code&gt;cve&lt;/code&gt;, &lt;code&gt;ghsa&lt;/code&gt;, &lt;code&gt;osvdb&lt;/code&gt;, and &lt;code&gt;url&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;notes&lt;/code&gt; [String] (optional): Internal notes regarding the vulnerability&#39;s inclusion in this database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Prior to submitting a pull request, run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Advisory Sync&lt;/h3&gt; &#xA;&lt;p&gt;There is a script that will create initial yaml files for RubyGem advisories which are in the &lt;a href=&#34;https://developer.github.com/v4/object/securityadvisory/&#34;&gt;GitHub Security Advisory API&lt;/a&gt;, but are not already in this dataset. This script can be periodically run to ensure this repo has all the data that is present in the GitHub Advisory data.&lt;/p&gt; &#xA;&lt;p&gt;The GitHub Advisory API requires a token to access it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It can be a completely scopeless token (recommended); it does not require any permissions at all.&lt;/li&gt; &#xA; &lt;li&gt;Get yours at &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;https://github.com/settings/tokens&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the GitHub Advisory sync to retrieve all advisories, start by executing the rake task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GH_API_TOKEN=&amp;lt;your GitHub API Token&amp;gt; bundle exec rake sync_github_advisories&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, to only retrieve advisories for a single gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GH_API_TOKEN=&amp;lt;your GitHub API Token&amp;gt; bundle exec rake sync_github_advisories[gem_name]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The rake task will write yaml files for any missing advisories.&lt;/li&gt; &#xA; &lt;li&gt;Those files must be further edited. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;cvss_v3&lt;/code&gt; field by following the CVE link and getting it from page&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;cvss_v4&lt;/code&gt; field by following the CVE link and getting it from page&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;patched_versions&lt;/code&gt; field, using the comments at the bottom of the file&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;unaffected_versions&lt;/code&gt;, optional, if there are unaffected_versions&lt;/li&gt; &#xA;   &lt;li&gt;delete the GitHub data at the bottom of the yaml file&lt;/li&gt; &#xA;   &lt;li&gt;double check all the data, commit it, and make a PR &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;The GitHub Advisory data is structured opposite of RubySec unfortunately: GitHub identifies version range which are vulnerable; RubySec identifies version ranges which are not vulnerable. This is why some manual work to translate is needed.&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/rubysec/ruby-advisory-db/raw/master/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This database also includes data from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Source_Vulnerability_Database&#34;&gt;Open Sourced Vulnerability Database&lt;/a&gt; developed by the Open Security Foundation (OSF) and its contributors.&lt;/p&gt;</summary>
  </entry>
</feed>