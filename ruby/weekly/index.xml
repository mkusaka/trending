<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T02:01:08Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rails-api/active_model_serializers</title>
    <updated>2022-06-03T02:01:08Z</updated>
    <id>tag:github.com,2022-06-03:/rails-api/active_model_serializers</id>
    <link href="https://github.com/rails-api/active_model_serializers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ActiveModel::Serializer implementation and Rails hooks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ActiveModelSerializers&lt;/h1&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;ActiveModelSerializers is undergoing some renovations. See &lt;a href=&#34;https://raw.githubusercontent.com/rails-api/active_model_serializers/master/#status-of-ams&#34;&gt;Development Status&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug, please report an &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/issues/new&#34;&gt;Issue&lt;/a&gt; and see our &lt;a href=&#34;https://raw.githubusercontent.com/rails-api/active_model_serializers/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a question, please &lt;a href=&#34;http://stackoverflow.com/questions/tagged/active-model-serializers&#34;&gt;post to Stack Overflow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to chat, we have a &lt;a href=&#34;http://amserializers.herokuapp.com&#34;&gt;community slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re reading this at &lt;a href=&#34;https://github.com/rails-api/active_model_serializers&#34;&gt;https://github.com/rails-api/active_model_serializers&lt;/a&gt; you are reading documentation for our &lt;code&gt;master&lt;/code&gt;, which is not yet released.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/tree/0-10-stable&#34;&gt;0.10 (0-10-stable) Documentation &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;http://www.rubydoc.info/gems/active_model_serializers/0.10.6&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/yard-docs-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/tree/v0.10.6/docs&#34;&gt; Guides &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/tree/0-9-stable&#34;&gt;0.9 (0-9-stable) Documentation &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;http://www.rubydoc.info/github/rails-api/active_model_serializers/0-9-stable&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/yard-docs-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/tree/0-8-stable&#34;&gt;0.8 (0-8-stable) Documentation &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;http://www.rubydoc.info/github/rails-api/active_model_serializers/0-8-stable&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/yard-docs-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Status of AMS&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;em&gt;Status&lt;/em&gt;:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ùóÔ∏è All existing PRs against master will need to be closed and re-opened against 0-10-stable, if so desired&lt;/li&gt; &#xA; &lt;li&gt;‚ùóÔ∏è Master, for the moment, won&#39;t have any released version of AMS on it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üëÄ&lt;/span&gt; See below for &lt;a href=&#34;https://raw.githubusercontent.com/rails-api/active_model_serializers/master/#alternatives&#34;&gt;alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;em&gt;Changes to 0.10.x maintenance&lt;/em&gt;:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The 0.10.x version has become a huge maintenance version. We had hoped to get it in shape for a 1.0 release, but it is clear that isn&#39;t going to happen. Almost none of the maintainers from 0.8, 0.9, or earlier 0.10 are still working on AMS. We&#39;ll continue to maintain 0.10.x on the 0-10-stable branch, but maintainers won&#39;t otherwise be actively developing on it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We may choose to make a 0.11.x ( 0-11-stable) release based on 0-10-stable that just removes the deprecations.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;em&gt;What&#39;s happening to AMS&lt;/em&gt;:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There&#39;s been a lot of churn around AMS since it began back in &lt;a href=&#34;https://raw.githubusercontent.com/rails-api/active_model_serializers/master/CHANGELOG-prehistory.md&#34;&gt;Rails 3.2&lt;/a&gt; and a lot of new libraries are around and the JSON:API spec has reached 1.0.&lt;/li&gt; &#xA; &lt;li&gt;If there is to be a 1.0 release of AMS, it will need to address the general needs of serialization in much the way ActiveJob can be used with different workers.&lt;/li&gt; &#xA; &lt;li&gt;The next major release &lt;em&gt;is&lt;/em&gt; in development. We&#39;re starting simple and avoiding, at least at the outset, all the complications in AMS version, especially all the implicit behavior from guessing the serializer, to the association&#39;s serializer, to the serialization type, etc.&lt;/li&gt; &#xA; &lt;li&gt;The basic idea is that models to serializers are a one to many relationship. Everything will need to be explicit. If you want to serialize a User with a UserSerializer, you&#39;ll need to call it directly. The serializer will essentially be for defining a basic JSON:API resource object: id, type, attributes, and relationships. The serializer will have an as_json method and can be told which fields (attributes/relationships) to serialize to JSON and will likely &lt;em&gt;not&lt;/em&gt; know serialize any more than the relations id and type. Serializing anything more about the relations would require code that called a serializer. (This is still somewhat in discussion).&lt;/li&gt; &#xA; &lt;li&gt;If this works out, the idea is to get something into Rails that existing libraries can use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/pull/2121&#34;&gt;PR 2121&lt;/a&gt; where these changes were introduced for more information and any discussion.&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jsonapi-rb.org/&#34;&gt;jsonapi-rb&lt;/a&gt; is a &lt;a href=&#34;https://gist.github.com/NullVoxPopuli/748e89ddc1732b42fdf42435d773734a&#34;&gt;highly performant&lt;/a&gt; and modular JSON:API-only implementation. There&#39;s a vibrant community around it that has produced projects such as &lt;a href=&#34;https://jsonapi-suite.github.io/jsonapi_suite/&#34;&gt;JSON:API Suite&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fast-jsonapi/fast_jsonapi&#34;&gt;fast_jsonapi&lt;/a&gt; is a lightning fast JSON:API serializer for Ruby Objects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cerebris/jsonapi-resources&#34;&gt;jsonapi-resources&lt;/a&gt; is a popular resource-focused framework for implementing JSON:API servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/procore/blueprinter&#34;&gt;blueprinter&lt;/a&gt; is a fast, declarative, and API spec agnostic serializer that uses composable views to reduce duplication. From your friends at Procore.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For benchmarks against alternatives, see &lt;a href=&#34;https://github.com/rails-api/active_model_serializers/tree/benchmarks&#34;&gt;https://github.com/rails-api/active_model_serializers/tree/benchmarks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Semantic Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This project adheres to &lt;a href=&#34;http://semver.org/&#34;&gt;semver&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rails-api/active_model_serializers/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>activeadmin/activeadmin</title>
    <updated>2022-06-03T02:01:08Z</updated>
    <id>tag:github.com,2022-06-03:/activeadmin/activeadmin</id>
    <link href="https://github.com/activeadmin/activeadmin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The administration framework for Ruby on Rails applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Active Admin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://activeadmin.info&#34;&gt;Active Admin&lt;/a&gt; is a Ruby on Rails framework for creating elegant backends for website administration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/activeadmin&#34;&gt;&lt;img src=&#34;http://img.shields.io/gem/v/activeadmin.svg?sanitize=true&#34; alt=&#34;Version         &#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/activeadmin/activeadmin/actions&#34;&gt;&lt;img src=&#34;https://github.com/activeadmin/activeadmin/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;Github Actions  &#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/activeadmin/activeadmin/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/779e407d22bacff19733/test_coverage&#34; alt=&#34;Coverage        &#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tidelift.com/subscription/pkg/rubygems-activeadmin?utm_source=rubygems-activeadmin&amp;amp;utm_medium=readme&#34;&gt;&lt;img src=&#34;https://tidelift.com/badges/github/activeadmin/activeadmin&#34; alt=&#34;Tidelift        &#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://inch-ci.org/github/activeadmin/activeadmin&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/activeadmin/activeadmin.svg?branch=master&#34; alt=&#34;Inch CI         &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable developers to quickly create good-looking administration interfaces.&lt;/li&gt; &#xA; &lt;li&gt;Build a DSL for developers and an interface for businesses.&lt;/li&gt; &#xA; &lt;li&gt;Ensure that developers can easily customize every nook and cranny.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;http://activeadmin.info/0-installation.html&#34;&gt;the docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Try the &lt;a href=&#34;http://demo.activeadmin.info/admin&#34;&gt;live demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/activeadmin/activeadmin/wiki&#34;&gt;wiki&lt;/a&gt; includes links to tutorials, articles and sample projects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Active Admin for enterprise is available via the Tidelift subscription. &lt;a href=&#34;https://tidelift.com/subscription/pkg/rubygems-activeadmin?utm_source=rubygems-activeadmin&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&#34;&gt;Learn More&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/activeadmin&#34;&gt;StackOverflow&lt;/a&gt; for help requests and how-to questions.&lt;/p&gt; &#xA;&lt;p&gt;Please open GitHub issues for bugs and enhancements only, not general help requests. Please search previous issues (and Google and StackOverflow) before creating a new issue.&lt;/p&gt; &#xA;&lt;p&gt;Google Groups, IRC #activeadmin and Gitter are not actively monitored.&lt;/p&gt; &#xA;&lt;h2&gt;Want to contribute?&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute through code or documentation, the &lt;a href=&#34;https://github.com/activeadmin/activeadmin/raw/master/CONTRIBUTING.md&#34;&gt;Contributing guide is the best place to start&lt;/a&gt;. If you have questions, feel free to ask.&lt;/p&gt; &#xA;&lt;h2&gt;Want to support us?&lt;/h2&gt; &#xA;&lt;p&gt;If you want to support us financially, you can &lt;a href=&#34;https://tidelift.com/subscription/pkg/rubygems-activeadmin?utm_source=rubygems-activeadmin&amp;amp;utm_medium=referral&amp;amp;utm_campaign=github&amp;amp;utm_content=support&#34;&gt;help fund the project through a Tidelift subscription&lt;/a&gt;. By buying a Tidelift subscription you make sure your whole dependency stack is properly maintained, while also getting a comprehensive view of outdated dependencies, new releases, security alerts, and licensing compatibility issues.&lt;/p&gt; &#xA;&lt;p&gt;You can also support us with a weekly tip via &lt;a href=&#34;https://liberapay.com/Active-Admin/donate&#34;&gt;Liberapay&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, we have an &lt;a href=&#34;https://opencollective.com/activeadmin&#34;&gt;Open Collective&lt;/a&gt; where you can become a backer or sponsor for the project, and also submit expenses to it.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;We try not to reinvent the wheel, so Active Admin is built with other open source projects:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/activeadmin/arbre&#34;&gt;Arbre&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ruby -&amp;gt; HTML, just like that.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/plataformatec/devise&#34;&gt;Devise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Powerful, extensible user authentication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/justinfrench/formtastic&#34;&gt;Formtastic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Rails form builder plugin with semantically rich and accessible markup&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/activeadmin/inherited_resources&#34;&gt;Inherited Resources&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Simplifies controllers with pre-built RESTful controller actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kaminari/kaminari&#34;&gt;Kaminari&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Elegant pagination for any sort of collection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/activerecord-hackery/ransack&#34;&gt;Ransack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides a simple search API to query your data&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Security contact information&lt;/h2&gt; &#xA;&lt;p&gt;Please use the Tidelift security contact to &lt;a href=&#34;https://tidelift.com/security&#34;&gt;report a security vulnerability&lt;/a&gt;. Tidelift will coordinate the fix and disclosure.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/gregbell&#34;&gt;Greg Bell&lt;/a&gt; for creating and sharing this project with the open source community.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/activeadmin/activeadmin/graphs/contributors&#34;&gt;all the people that ever contributed through code&lt;/a&gt; or other means such as bug reports, issue triaging, feature suggestions, code snippet tips, Slack discussions and so on.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://tidelift.com/subscription/pkg/rubygems-activeadmin?utm_source=rubygems-activeadmin&amp;amp;utm_medium=readme&#34;&gt;Tidelift&lt;/a&gt; and all our Tidelift subscribers.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://opencollective.com/activeadmin#contributors&#34;&gt;Open Collective&lt;/a&gt; and all our Open Collective contributors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/ansible-beats</title>
    <updated>2022-06-03T02:01:08Z</updated>
    <id>tag:github.com,2022-06-03:/elastic/ansible-beats</id>
    <link href="https://github.com/elastic/ansible-beats" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ansible Beats Role&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ARCHIVED&lt;/h1&gt; &#xA;&lt;p&gt;This project is no longer maintained. For alternative getting started experiences, you may want to try one of these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start a &lt;a href=&#34;https://www.elastic.co/cloud/elasticsearch-service/signup&#34;&gt;free trial on Elastic Cloud&lt;/a&gt;, our hosted service.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at &lt;a href=&#34;https://elastic.co/guide/en/cloud-on-k8s/current/k8s-quickstart.html&#34;&gt;Elastic Cloud on Kubernetes (ECK)&lt;/a&gt; for launching the stack via Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;Read our &lt;a href=&#34;https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-docker.html&#34;&gt;Running the Elastic Stack on Docker&lt;/a&gt; guide.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at the &lt;a href=&#34;https://github.com/elastic/terraform-provider-elasticstack&#34;&gt;Elastic Stack Terraform provider.&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ansible-beats&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://devops-ci.elastic.co/job/elastic+ansible-beats+main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/devops-ci.elastic.co/job/elastic+ansible-beats+main.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://galaxy.ansible.com/elastic/beats/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ansible--galaxy-elastic.beats-blue.svg?sanitize=true&#34; alt=&#34;Ansible Galaxy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This role provides a generic means of installing Elastic supported Beats&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tested Beats&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filebeat&lt;/li&gt; &#xA; &lt;li&gt;MetricBeat (TopBeat in 1.x)&lt;/li&gt; &#xA; &lt;li&gt;Packetbeat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tested Versions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7.x&lt;/li&gt; &#xA; &lt;li&gt;6.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tested Platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 16.04&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 18.04&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04&lt;/li&gt; &#xA; &lt;li&gt;Debian 8&lt;/li&gt; &#xA; &lt;li&gt;Debian 9&lt;/li&gt; &#xA; &lt;li&gt;Debian 10&lt;/li&gt; &#xA; &lt;li&gt;CentOS 7&lt;/li&gt; &#xA; &lt;li&gt;Amazon Linux 2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create your Ansible playbook with your own tasks, and include the role beats. You will have to have this repository accessible within the context of playbook.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ansible-galaxy install elastic.beats,v7.17.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create your playbook yaml adding the role beats. The application of the beats role results in the installation of a node on a host.&lt;/p&gt; &#xA;&lt;p&gt;The simplest configuration therefore consists of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  hosts: localhost&#xA;  roles:&#xA;    - role: elastic.beats&#xA;  vars:&#xA;    beats_version: 7.17.0&#xA;    beat: filebeat&#xA;    beat_conf:&#xA;      filebeat:&#xA;        inputs:&#xA;          - type: log&#xA;            enabled: true&#xA;            paths:&#xA;              - /var/log/*.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above installs Filebeat 7.17.0 on the hosts &#39;localhost&#39;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Beats default version is described in &lt;a href=&#34;https://github.com/elastic/ansible-beats/raw/main/defaults/main.yml#L4&#34;&gt;&lt;code&gt;beats_version&lt;/code&gt;&lt;/a&gt;. You can override this variable in your playbook to install another version. While we are testing this role only with one 7.x and one 6.x version (respectively &lt;a href=&#34;https://github.com/elastic/ansible-beats/raw/main/defaults/main.yml#L4&#34;&gt;7.17.0&lt;/a&gt; and &lt;a href=&#34;https://github.com/elastic/ansible-beats/raw/main/test/integration/standard-6x.yml#L7&#34;&gt;6.8.23&lt;/a&gt; at the time of writing), this role should work with others version also in most cases.&lt;/li&gt; &#xA; &lt;li&gt;Beat product is described in &lt;code&gt;beat&lt;/code&gt; variable. While currently tested Beats are Filebeat, Metricbeat &amp;amp; Packetbeat, this role should work also with other member of &lt;a href=&#34;https://www.elastic.co/products/beats&#34;&gt;The Beats Family&lt;/a&gt; in most cases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;This playbook uses &lt;a href=&#34;https://kitchen.ci/&#34;&gt;Kitchen&lt;/a&gt; for CI and local testing.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Bundler&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Make&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the tests&lt;/h3&gt; &#xA;&lt;p&gt;To converge an Ubuntu 18.04 host&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To list all of the different test suits&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default test suite is Ubuntu 18.04. If you want to test another suite you can override this with the &lt;code&gt;PATTERN&lt;/code&gt; variable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge PATTERN=standard-centos-7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;PATTERN&lt;/code&gt; is a kitchen pattern which can match multiple suites. To run all tests for CentOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge PATTERN=centos-7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you are finished testing you can clean up everything with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make destroy-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic Beats configuration&lt;/h3&gt; &#xA;&lt;p&gt;All Beats configuration parameters are supported. This is achieved using a configuration map parameter &lt;code&gt;beat_conf&lt;/code&gt; which is serialized into the &lt;code&gt;${beat}.yml&lt;/code&gt; file. The use of a map ensures the Ansible playbook does not need to be updated to reflect new/deprecated/plugin configuration parameters.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the &lt;code&gt;beat_conf&lt;/code&gt; map, several other parameters are supported for additional functions e.g. script installation. These can be found in the role&#39;s &lt;code&gt;defaults/main.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The following illustrates applying configuration parameters to Packetbeat instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Example playbook for installing packetbeat&#xA;  hosts: localhost&#xA;  roles:&#xA;    - { role: beats, beat: &#34;packetbeat&#34;,&#xA;        beat_conf: {&#xA;          &#34;interfaces&#34;: {&#34;device&#34;:&#34;any&#34;},&#xA;          &#34;protocols&#34;: {&#xA;            &#34;dns&#34;: {&#xA;              &#34;ports&#34;: [53],&#xA;              &#34;include_authorities&#34;:true&#xA;            },&#xA;            &#34;http&#34;: {&#xA;              &#34;ports&#34;: [80, 8080, 8000, 5000, 8002]&#xA;            },&#xA;            &#34;memcache&#34;: {&#xA;              &#34;ports&#34;: [11211]&#xA;            },&#xA;            &#34;mysql&#34;: {&#xA;              &#34;ports&#34;: [3306]&#xA;            },&#xA;            &#34;pgsql&#34;: {&#xA;              &#34;ports&#34;: [5432]&#xA;            },&#xA;            &#34;redis&#34;: {&#xA;              &#34;ports&#34;: [6379]&#xA;            },&#xA;            &#34;thrift&#34;: {&#xA;              &#34;ports&#34;: [9090]&#xA;            },&#xA;            &#34;mongodb&#34;: {&#xA;              &#34;ports&#34;: [27017]&#xA;            }&#xA;          }&#xA;        },&#xA;        output_conf : {&#xA;          &#34;elasticsearch&#34;: {&#xA;            &#34;hosts&#34;: [&#34;localhost:9200&#34;]&#xA;          }&#xA;        }&#xA;    }&#xA;  vars:&#xA;    use_repository: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Additional Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Supported variables are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;beat&lt;/strong&gt; (&lt;em&gt;MANDATORY&lt;/em&gt;): Beat product. Supported values are: &#34;filebeat&#34;, &#34;metricbeat&#34; &amp;amp; &#34;packetbeat&#34; (others beats from &lt;a href=&#34;https://www.elastic.co/products/beats&#34;&gt;The Beats Family&lt;/a&gt; should work in most cases but aren&#39;t currently tested).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beat_conf&lt;/strong&gt; (&lt;em&gt;MANDATORY&lt;/em&gt;): Beat Configuration. Should be defined as a map.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beats_version&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;7.17.0&lt;/code&gt;&lt;/em&gt;): Beats version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;version_lock&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;false&lt;/code&gt;&lt;/em&gt;): Locks the installed version if set to true, thus preventing other processes from updating. This will not impact the roles ability to update the beat on subsequent runs (it unlocks and re-locks if required).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;use_repository&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/em&gt;): Use elastic repo for yum or apt if true. If false, a custom custom_package_url must be provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beats_add_repository&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;{use_repository}&lt;/code&gt;&lt;/em&gt;): Install elastic repo for yum or apt if true. If false, the present repositories will be used. Useful if you already have beats packages in your repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;start_service&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/em&gt;): service will be started if true, false otherwise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;restart_on_change&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/em&gt;): Changes to configuration or installed versions, will result in a restart if true.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;daemon_args&lt;/strong&gt; (&lt;em&gt;Applicable to version 1.x of beats&lt;/em&gt;): Allows run time params to be passed to beats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;logging_conf&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;{&#34;files&#34;:{&#34;rotateeverybytes&#34;:10485760}}&lt;/code&gt;&lt;/em&gt;): Logging configuration. Should be defined as a map. Map is serialized into logging section of beat config.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;shipper_conf&lt;/strong&gt; (&lt;em&gt;Applicable to version 1.x of beats&lt;/em&gt;): Shipper configuration. Should be defined as a map . Map is serialized into shipper section of beat config.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;output_conf&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;{&#34;elasticsearch&#34;:{&#34;hosts&#34;:[&#34;localhost:9200&#34;]}}&lt;/code&gt;&lt;/em&gt;): Output configuration. Map is serialized into output section of beat config.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beats_pid_dir&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;/var/run&lt;/code&gt;&lt;/em&gt;): Location of beats pid file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beats_conf_dir&lt;/strong&gt; (&lt;em&gt;Defaults to &lt;code&gt;/etc/{beat}&lt;/code&gt;&lt;/em&gt;): Location of conf directory for beats configuration file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;default_ilm_policy&lt;/strong&gt; (&lt;em&gt;Defaults undefined&lt;/em&gt;): local path to default policy if any custom one is defined&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Focus on ILM&lt;/h3&gt; &#xA;&lt;p&gt;By default, &lt;em&gt;beat&lt;/em&gt; will create a default policy defined as part of the beat being deployed. You can override default ILM setup by defining ILM conf as part of &lt;em&gt;beat_conf&lt;/em&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- role: ansible-beats&#xA;  beat: metricbeat&#xA;  beat_conf:&#xA;    setup:&#xA;      ilm:&#xA;        policy_file: /etc/filebeat/policies/my-default-metricbeat.json&#xA;        overwrite: true&#xA;      metricbeat.modules:&#xA;        ...&#xA;  default_ilm_policy: conf/my-default-metricbeat.json&#xA;  become: yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will copy &lt;em&gt;conf/my-default-filebeat.json&lt;/em&gt; to &lt;em&gt;/etc/filebeat/policies/my-default-filebeat.json&lt;/em&gt;. This policy will be used as default one for this beat.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache 2.0&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Multiple instances of the same beat cannot be installed on the same target server.&lt;/p&gt; &#xA;&lt;h2&gt;Questions on Usage&lt;/h2&gt; &#xA;&lt;p&gt;We welcome questions on how to use the role. However, in order to keep the GitHub issues list focused on &#34;issues&#34; we ask the community to raise questions at &lt;a href=&#34;https://discuss.elastic.co/c/beats&#34;&gt;https://discuss.elastic.co/c/beats&lt;/a&gt;. This is monitored by the maintainers.&lt;/p&gt; &#xA;&lt;p&gt;Community Contributions always appreciated and welcome! Please ensure all contributions include tests as appropriate.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>varvet/pundit</title>
    <updated>2022-06-03T02:01:08Z</updated>
    <id>tag:github.com,2022-06-03:/varvet/pundit</id>
    <link href="https://github.com/varvet/pundit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minimal authorization through OO design and pure Ruby classes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pundit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/varvet/pundit&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/varvet/pundit.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/varvet/pundit&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/varvet/pundit.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://inch-ci.org/github/varvet/pundit&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/varvet/pundit.svg?branch=master&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/rb/pundit&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/pundit.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pundit provides a set of helpers which guide you in leveraging regular Ruby classes and object oriented design patterns to build a simple, robust and scalable authorization system.&lt;/p&gt; &#xA;&lt;p&gt;Links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/gems/pundit&#34;&gt;API documentation for the most recent version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sponsored by:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.varvet.com&#34;&gt;&lt;img src=&#34;https://www.varvet.com/images/wordmark-red.svg?sanitize=true&#34; alt=&#34;Varvet&#34; height=&#34;50px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt; that the README on GitHub is accurate with the &lt;em&gt;latest code on GitHub&lt;/em&gt;. You are most likely using a released version of Pundit, so please refer to the &lt;a href=&#34;https://www.rubydoc.info/gems/pundit&#34;&gt;documentation for the latest released version of Pundit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle add pundit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Include &lt;code&gt;Pundit::Authorization&lt;/code&gt; in your application controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can run the generator, which will set up an application policy with some useful defaults for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rails g pundit:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After generating your application policy, restart the Rails server so that Rails can pick up any classes in the new &lt;code&gt;app/policies/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Policies&lt;/h2&gt; &#xA;&lt;p&gt;Pundit is focused around the notion of policy classes. We suggest that you put these classes in &lt;code&gt;app/policies&lt;/code&gt;. This is a simple example that allows updating a post if the user is an admin, or if the post is unpublished:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy&#xA;  attr_reader :user, :post&#xA;&#xA;  def initialize(user, post)&#xA;    @user = user&#xA;    @post = post&#xA;  end&#xA;&#xA;  def update?&#xA;    user.admin? || !post.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, this is just a plain Ruby class. Pundit makes the following assumptions about this class:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The class has the same name as some kind of model class, only suffixed with the word &#34;Policy&#34;.&lt;/li&gt; &#xA; &lt;li&gt;The first argument is a user. In your controller, Pundit will call the &lt;code&gt;current_user&lt;/code&gt; method to retrieve what to send into this argument&lt;/li&gt; &#xA; &lt;li&gt;The second argument is some kind of model object, whose authorization you want to check. This does not need to be an ActiveRecord or even an ActiveModel object, it can be anything really.&lt;/li&gt; &#xA; &lt;li&gt;The class implements some kind of query method, in this case &lt;code&gt;update?&lt;/code&gt;. Usually, this will map to the name of a particular controller action.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That&#39;s it really.&lt;/p&gt; &#xA;&lt;p&gt;Usually you&#39;ll want to inherit from the application policy created by the generator, or set up your own base class to inherit from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def update?&#xA;    user.admin? or not record.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the generated &lt;code&gt;ApplicationPolicy&lt;/code&gt;, the model object is called &lt;code&gt;record&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Supposing that you have an instance of class &lt;code&gt;Post&lt;/code&gt;, Pundit now lets you do this in your controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def update&#xA;  @post = Post.find(params[:id])&#xA;  authorize @post&#xA;  if @post.update(post_params)&#xA;    redirect_to @post&#xA;  else&#xA;    render :edit&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The authorize method automatically infers that &lt;code&gt;Post&lt;/code&gt; will have a matching &lt;code&gt;PostPolicy&lt;/code&gt; class, and instantiates this class, handing in the current user and the given record. It then infers from the action name, that it should call &lt;code&gt;update?&lt;/code&gt; on this instance of the policy. In this case, you can imagine that &lt;code&gt;authorize&lt;/code&gt; would have done something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;unless PostPolicy.new(current_user, @post).update?&#xA;  raise Pundit::NotAuthorizedError, &#34;not allowed to update? this #{@post.inspect}&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass a second argument to &lt;code&gt;authorize&lt;/code&gt; if the name of the permission you want to check doesn&#39;t match the action name. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def publish&#xA;  @post = Post.find(params[:id])&#xA;  authorize @post, :update?&#xA;  @post.publish!&#xA;  redirect_to @post&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass an argument to override the policy class if necessary. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def create&#xA;  @publication = find_publication # assume this method returns any model that behaves like a publication&#xA;  # @publication.class =&amp;gt; Post&#xA;  authorize @publication, policy_class: PublicationPolicy&#xA;  @publication.publish!&#xA;  redirect_to @publication&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have an instance for the first argument to &lt;code&gt;authorize&lt;/code&gt;, then you can pass the class. For example:&lt;/p&gt; &#xA;&lt;p&gt;Policy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def admin_list?&#xA;    user.admin?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def admin_list&#xA;  authorize Post # we don&#39;t have a particular post to authorize&#xA;  # Rest of controller action&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;authorize&lt;/code&gt; returns the instance passed to it, so you can chain it like this:&lt;/p&gt; &#xA;&lt;p&gt;Controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def show&#xA;  @user = authorize User.find(params[:id])&#xA;end&#xA;&#xA;# return the record even for namespaced policies&#xA;def show&#xA;  @user = authorize [:admin, User.find(params[:id])]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can easily get a hold of an instance of the policy through the &lt;code&gt;policy&lt;/code&gt; method in both the view and controller. This is especially useful for conditionally showing links or buttons in the view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;% if policy(@post).update? %&amp;gt;&#xA;  &amp;lt;%= link_to &#34;Edit post&#34;, edit_post_path(@post) %&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Headless policies&lt;/h2&gt; &#xA;&lt;p&gt;Given there is a policy without a corresponding model / ruby class, you can retrieve it by passing a symbol.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/policies/dashboard_policy.rb&#xA;class DashboardPolicy&#xA;  attr_reader :user&#xA;&#xA;  # _record in this example will just be :dashboard&#xA;  def initialize(user, _record)&#xA;    @user = user&#xA;  end&#xA;&#xA;  def show?&#xA;    user.admin?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the headless policy still needs to accept two arguments. The second argument will just be the symbol &lt;code&gt;:dashboard&lt;/code&gt; in this case which is what is passed as the record to &lt;code&gt;authorize&lt;/code&gt; below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# In controllers&#xA;def show&#xA;  authorize :dashboard, :show?&#xA;  ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;# In views&#xA;&amp;lt;% if policy(:dashboard).show? %&amp;gt;&#xA;  &amp;lt;%= link_to &#39;Dashboard&#39;, dashboard_path %&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scopes&lt;/h2&gt; &#xA;&lt;p&gt;Often, you will want to have some kind of view listing records which a particular user has access to. When using Pundit, you are expected to define a class called a policy scope. It can look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  class Scope&#xA;    def initialize(user, scope)&#xA;      @user  = user&#xA;      @scope = scope&#xA;    end&#xA;&#xA;    def resolve&#xA;      if user.admin?&#xA;        scope.all&#xA;      else&#xA;        scope.where(published: true)&#xA;      end&#xA;    end&#xA;&#xA;    private&#xA;&#xA;    attr_reader :user, :scope&#xA;  end&#xA;&#xA;  def update?&#xA;    user.admin? or not record.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pundit makes the following assumptions about this class:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The class has the name &lt;code&gt;Scope&lt;/code&gt; and is nested under the policy class.&lt;/li&gt; &#xA; &lt;li&gt;The first argument is a user. In your controller, Pundit will call the &lt;code&gt;current_user&lt;/code&gt; method to retrieve what to send into this argument.&lt;/li&gt; &#xA; &lt;li&gt;The second argument is a scope of some kind on which to perform some kind of query. It will usually be an ActiveRecord class or a &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;, but it could be something else entirely.&lt;/li&gt; &#xA; &lt;li&gt;Instances of this class respond to the method &lt;code&gt;resolve&lt;/code&gt;, which should return some kind of result which can be iterated over. For ActiveRecord classes, this would usually be an &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll probably want to inherit from the application policy scope generated by the generator, or create your own base class to inherit from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  class Scope &amp;lt; Scope&#xA;    def resolve&#xA;      if user.admin?&#xA;        scope.all&#xA;      else&#xA;        scope.where(published: true)&#xA;      end&#xA;    end&#xA;  end&#xA;&#xA;  def update?&#xA;    user.admin? or not record.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now use this class from your controller via the &lt;code&gt;policy_scope&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @posts = policy_scope(Post)&#xA;end&#xA;&#xA;def show&#xA;  @post = policy_scope(Post).find(params[:id])&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like with the authorize method, you can also override the policy scope class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  # publication_class =&amp;gt; Post&#xA;  @publications = policy_scope(publication_class, policy_scope_class: PublicationPolicy::Scope)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case it is a shortcut for doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @publications = PublicationPolicy::Scope.new(current_user, Post).resolve&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can, and are encouraged to, use this method in views:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;% policy_scope(@user.posts).each do |post| %&amp;gt;&#xA;  &amp;lt;p&amp;gt;&amp;lt;%= link_to post.title, post_path(post) %&amp;gt;&amp;lt;/p&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ensuring policies and scopes are used&lt;/h2&gt; &#xA;&lt;p&gt;When you are developing an application with Pundit it can be easy to forget to authorize some action. People are forgetful after all. Since Pundit encourages you to add the &lt;code&gt;authorize&lt;/code&gt; call manually to each controller action, it&#39;s really easy to miss one.&lt;/p&gt; &#xA;&lt;p&gt;Thankfully, Pundit has a handy feature which reminds you in case you forget. Pundit tracks whether you have called &lt;code&gt;authorize&lt;/code&gt; anywhere in your controller action. Pundit also adds a method to your controllers called &lt;code&gt;verify_authorized&lt;/code&gt;. This method will raise an exception if &lt;code&gt;authorize&lt;/code&gt; has not yet been called. You should run this method in an &lt;code&gt;after_action&lt;/code&gt; hook to ensure that you haven&#39;t forgotten to authorize the action. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;  after_action :verify_authorized&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Likewise, Pundit also adds &lt;code&gt;verify_policy_scoped&lt;/code&gt; to your controller. This will raise an exception similar to &lt;code&gt;verify_authorized&lt;/code&gt;. However, it tracks if &lt;code&gt;policy_scope&lt;/code&gt; is used instead of &lt;code&gt;authorize&lt;/code&gt;. This is mostly useful for controller actions like &lt;code&gt;index&lt;/code&gt; which find collections with a scope and don&#39;t authorize individual instances.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;  after_action :verify_authorized, except: :index&#xA;  after_action :verify_policy_scoped, only: :index&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This verification mechanism only exists to aid you while developing your application, so you don&#39;t forget to call &lt;code&gt;authorize&lt;/code&gt;. It is not some kind of failsafe mechanism or authorization mechanism. You should be able to remove these filters without affecting how your app works in any way.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some people have found this feature confusing, while many others find it extremely helpful. If you fall into the category of people who find it confusing then you do not need to use it. Pundit will work just fine without using &lt;code&gt;verify_authorized&lt;/code&gt; and &lt;code&gt;verify_policy_scoped&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Conditional verification&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;code&gt;verify_authorized&lt;/code&gt; in your controllers but need to conditionally bypass verification, you can use &lt;code&gt;skip_authorization&lt;/code&gt;. For bypassing &lt;code&gt;verify_policy_scoped&lt;/code&gt;, use &lt;code&gt;skip_policy_scope&lt;/code&gt;. These are useful in circumstances where you don&#39;t want to disable verification for the entire action, but have some cases where you intend to not authorize.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def show&#xA;  record = Record.find_by(attribute: &#34;value&#34;)&#xA;  if record.present?&#xA;    authorize record&#xA;  else&#xA;    skip_authorization&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manually specifying policy classes&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you might want to explicitly declare which policy to use for a given class, instead of letting Pundit infer it. This can be done like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post&#xA;  def self.policy_class&#xA;    PostablePolicy&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can declare an instance method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post&#xA;  def policy_class&#xA;    PostablePolicy&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Just plain old Ruby&lt;/h2&gt; &#xA;&lt;p&gt;As you can see, Pundit doesn&#39;t do anything you couldn&#39;t have easily done yourself. It&#39;s a very small library, it just provides a few neat helpers. Together these give you the power of building a well structured, fully working authorization system without using any special DSLs or funky syntax or anything.&lt;/p&gt; &#xA;&lt;p&gt;Remember that all of the policy and scope classes are just plain Ruby classes, which means you can use the same mechanisms you always use to DRY things up. Encapsulate a set of permissions into a module and include them in multiple policies. Use &lt;code&gt;alias_method&lt;/code&gt; to make some permissions behave the same as others. Inherit from a base set of permissions. Use metaprogramming if you really have to.&lt;/p&gt; &#xA;&lt;h2&gt;Generator&lt;/h2&gt; &#xA;&lt;p&gt;Use the supplied generator to generate policies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rails g pundit:policy post&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Closed systems&lt;/h2&gt; &#xA;&lt;p&gt;In many applications, only logged in users are really able to do anything. If you&#39;re building such a system, it can be kind of cumbersome to check that the user in a policy isn&#39;t &lt;code&gt;nil&lt;/code&gt; for every single permission. Aside from policies, you can add this check to the base class for scopes.&lt;/p&gt; &#xA;&lt;p&gt;We suggest that you define a filter that redirects unauthenticated users to the login page. As a secondary defence, if you&#39;ve defined an ApplicationPolicy, it might be a good idea to raise an exception if somehow an unauthenticated user got through. This way you can fail more gracefully.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationPolicy&#xA;  def initialize(user, record)&#xA;    raise Pundit::NotAuthorizedError, &#34;must be logged in&#34; unless user&#xA;    @user   = user&#xA;    @record = record&#xA;  end&#xA;&#xA;  class Scope&#xA;    attr_reader :user, :scope&#xA;&#xA;    def initialize(user, scope)&#xA;      raise Pundit::NotAuthorizedError, &#34;must be logged in&#34; unless user&#xA;      @user = user&#xA;      @scope = scope&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NilClassPolicy&lt;/h2&gt; &#xA;&lt;p&gt;To support a &lt;a href=&#34;https://en.wikipedia.org/wiki/Null_Object_pattern&#34;&gt;null object pattern&lt;/a&gt; you may find that you want to implement a &lt;code&gt;NilClassPolicy&lt;/code&gt;. This might be useful where you want to extend your ApplicationPolicy to allow some tolerance of, for example, associations which might be &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class NilClassPolicy &amp;lt; ApplicationPolicy&#xA;  class Scope &amp;lt; Scope&#xA;    def resolve&#xA;      raise Pundit::NotDefinedError, &#34;Cannot scope NilClass&#34;&#xA;    end&#xA;  end&#xA;&#xA;  def show?&#xA;    false # Nobody can see nothing&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Rescuing a denied Authorization in Rails&lt;/h2&gt; &#xA;&lt;p&gt;Pundit raises a &lt;code&gt;Pundit::NotAuthorizedError&lt;/code&gt; you can &lt;a href=&#34;http://guides.rubyonrails.org/action_controller_overview.html#rescue-from&#34;&gt;rescue_from&lt;/a&gt; in your &lt;code&gt;ApplicationController&lt;/code&gt;. You can customize the &lt;code&gt;user_not_authorized&lt;/code&gt; method in every controller.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;&#xA;  rescue_from Pundit::NotAuthorizedError, with: :user_not_authorized&#xA;&#xA;  private&#xA;&#xA;  def user_not_authorized&#xA;    flash[:alert] = &#34;You are not authorized to perform this action.&#34;&#xA;    redirect_back(fallback_location: root_path)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can globally handle Pundit::NotAuthorizedError&#39;s by having rails handle them as a 403 error and serving a 403 error page. Add the following to application.rb:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;config.action_dispatch.rescue_responses[&#34;Pundit::NotAuthorizedError&#34;] = :forbidden&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Creating custom error messages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;NotAuthorizedError&lt;/code&gt;s provide information on what query (e.g. &lt;code&gt;:create?&lt;/code&gt;), what record (e.g. an instance of &lt;code&gt;Post&lt;/code&gt;), and what policy (e.g. an instance of &lt;code&gt;PostPolicy&lt;/code&gt;) caused the error to be raised.&lt;/p&gt; &#xA;&lt;p&gt;One way to use these &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;record&lt;/code&gt;, and &lt;code&gt;policy&lt;/code&gt; properties is to connect them with &lt;code&gt;I18n&lt;/code&gt; to generate error messages. Here&#39;s how you might go about doing that.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA; rescue_from Pundit::NotAuthorizedError, with: :user_not_authorized&#xA;&#xA; private&#xA;&#xA; def user_not_authorized(exception)&#xA;   policy_name = exception.policy.class.to_s.underscore&#xA;&#xA;   flash[:error] = t &#34;#{policy_name}.#{exception.query}&#34;, scope: &#34;pundit&#34;, default: :default&#xA;   redirect_back(fallback_url: root_path)&#xA; end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA; pundit:&#xA;   default: &#39;You cannot perform this action.&#39;&#xA;   post_policy:&#xA;     update?: &#39;You cannot edit this post!&#39;&#xA;     create?: &#39;You cannot create posts!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, this is just an example. Pundit is agnostic as to how you implement your error messaging.&lt;/p&gt; &#xA;&lt;h2&gt;Manually retrieving policies and scopes&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you want to retrieve a policy for a record outside the controller or view. For example when you delegate permissions from one policy to another.&lt;/p&gt; &#xA;&lt;p&gt;You can easily retrieve policies and scopes like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Pundit.policy!(user, post)&#xA;Pundit.policy(user, post)&#xA;&#xA;Pundit.policy_scope!(user, Post)&#xA;Pundit.policy_scope(user, Post)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bang methods will raise an exception if the policy does not exist, whereas those without the bang will return nil.&lt;/p&gt; &#xA;&lt;h2&gt;Customize Pundit user&lt;/h2&gt; &#xA;&lt;p&gt;In some cases your controller might not have access to &lt;code&gt;current_user&lt;/code&gt;, or your &lt;code&gt;current_user&lt;/code&gt; is not the method that should be invoked by Pundit. Simply define a method in your controller called &lt;code&gt;pundit_user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def pundit_user&#xA;  User.find_by_other_means&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Policy Namespacing&lt;/h2&gt; &#xA;&lt;p&gt;In some cases it might be helpful to have multiple policies that serve different contexts for a resource. A prime example of this is the case where User policies differ from Admin policies. To authorize with a namespaced policy, pass the namespace into the &lt;code&gt;authorize&lt;/code&gt; helper in an array:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;authorize(post)                   # =&amp;gt; will look for a PostPolicy&#xA;authorize([:admin, post])         # =&amp;gt; will look for an Admin::PostPolicy&#xA;authorize([:foo, :bar, post])     # =&amp;gt; will look for a Foo::Bar::PostPolicy&#xA;&#xA;policy_scope(Post)                # =&amp;gt; will look for a PostPolicy::Scope&#xA;policy_scope([:admin, Post])      # =&amp;gt; will look for an Admin::PostPolicy::Scope&#xA;policy_scope([:foo, :bar, Post])  # =&amp;gt; will look for a Foo::Bar::PostPolicy::Scope&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using namespaced policies for something like Admin views, it can be useful to override the &lt;code&gt;policy_scope&lt;/code&gt; and &lt;code&gt;authorize&lt;/code&gt; helpers in your &lt;code&gt;AdminController&lt;/code&gt; to automatically apply the namespacing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AdminController &amp;lt; ApplicationController&#xA;  def policy_scope(scope)&#xA;    super([:admin, scope])&#xA;  end&#xA;&#xA;  def authorize(record, query = nil)&#xA;    super([:admin, record], query)&#xA;  end&#xA;end&#xA;&#xA;class Admin::PostController &amp;lt; AdminController&#xA;  def index&#xA;    policy_scope(Post)&#xA;  end&#xA;&#xA;  def show&#xA;    post = authorize Post.find(params[:id])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional context&lt;/h2&gt; &#xA;&lt;p&gt;Pundit strongly encourages you to model your application in such a way that the only context you need for authorization is a user object and a domain model that you want to check authorization for. If you find yourself needing more context than that, consider whether you are authorizing the right domain model, maybe another domain model (or a wrapper around multiple domain models) can provide the context you need.&lt;/p&gt; &#xA;&lt;p&gt;Pundit does not allow you to pass additional arguments to policies for precisely this reason.&lt;/p&gt; &#xA;&lt;p&gt;However, in very rare cases, you might need to authorize based on more context than just the currently authenticated user. Suppose for example that authorization is dependent on IP address in addition to the authenticated user. In that case, one option is to create a special class which wraps up both user and IP and passes it to the policy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class UserContext&#xA;  attr_reader :user, :ip&#xA;&#xA;  def initialize(user, ip)&#xA;    @user = user&#xA;    @ip   = ip&#xA;  end&#xA;end&#xA;&#xA;class ApplicationController&#xA;  include Pundit::Authorization&#xA;&#xA;  def pundit_user&#xA;    UserContext.new(current_user, request.ip)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Strong parameters&lt;/h2&gt; &#xA;&lt;p&gt;In Rails, mass-assignment protection is handled in the controller. With Pundit you can control which attributes a user has access to update via your policies. You can set up a &lt;code&gt;permitted_attributes&lt;/code&gt; method in your policy like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/policies/post_policy.rb&#xA;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def permitted_attributes&#xA;    if user.admin? || user.owner_of?(post)&#xA;      [:title, :body, :tag_list]&#xA;    else&#xA;      [:tag_list]&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now retrieve these attributes from the policy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/posts_controller.rb&#xA;class PostsController &amp;lt; ApplicationController&#xA;  def update&#xA;    @post = Post.find(params[:id])&#xA;    if @post.update_attributes(post_params)&#xA;      redirect_to @post&#xA;    else&#xA;      render :edit&#xA;    end&#xA;  end&#xA;&#xA;  private&#xA;&#xA;  def post_params&#xA;    params.require(:post).permit(policy(@post).permitted_attributes)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, this is a bit cumbersome, so Pundit provides a convenient helper method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/posts_controller.rb&#xA;class PostsController &amp;lt; ApplicationController&#xA;  def update&#xA;    @post = Post.find(params[:id])&#xA;    if @post.update_attributes(permitted_attributes(@post))&#xA;      redirect_to @post&#xA;    else&#xA;      render :edit&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to permit different attributes based on the current action, you can define a &lt;code&gt;permitted_attributes_for_#{action}&lt;/code&gt; method on your policy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/policies/post_policy.rb&#xA;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def permitted_attributes_for_create&#xA;    [:title, :body]&#xA;  end&#xA;&#xA;  def permitted_attributes_for_edit&#xA;    [:body]&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have defined an action-specific method on your policy for the current action, the &lt;code&gt;permitted_attributes&lt;/code&gt; helper will call it instead of calling &lt;code&gt;permitted_attributes&lt;/code&gt; on your controller.&lt;/p&gt; &#xA;&lt;p&gt;If you need to fetch parameters based on namespaces different from the suggested one, override the below method, in your controller, and return an instance of &lt;code&gt;ActionController::Parameters&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def pundit_params_for(record)&#xA;  params.require(PolicyFinder.new(record).param_key)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# If you don&#39;t want to use require&#xA;def pundit_params_for(record)&#xA;  params.fetch(PolicyFinder.new(record).param_key, {})&#xA;end&#xA;&#xA;# If you are using something like the JSON API spec&#xA;def pundit_params_for(_record)&#xA;  params.fetch(:data, {}).fetch(:attributes, {})&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;RSpec&lt;/h2&gt; &#xA;&lt;h3&gt;Policy Specs&lt;/h3&gt; &#xA;&lt;p&gt;Pundit includes a mini-DSL for writing expressive tests for your policies in RSpec. Require &lt;code&gt;pundit/rspec&lt;/code&gt; in your &lt;code&gt;spec_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;pundit/rspec&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then put your policy specs in &lt;code&gt;spec/policies&lt;/code&gt;, and make them look somewhat like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe PostPolicy do&#xA;  subject { described_class }&#xA;&#xA;  permissions :update?, :edit? do&#xA;    it &#34;denies access if post is published&#34; do&#xA;      expect(subject).not_to permit(User.new(admin: false), Post.new(published: true))&#xA;    end&#xA;&#xA;    it &#34;grants access if post is published and user is an admin&#34; do&#xA;      expect(subject).to permit(User.new(admin: true), Post.new(published: true))&#xA;    end&#xA;&#xA;    it &#34;grants access if post is unpublished&#34; do&#xA;      expect(subject).to permit(User.new(admin: false), Post.new(published: false))&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An alternative approach to Pundit policy specs is scoping them to a user context as outlined in this &lt;a href=&#34;http://thunderboltlabs.com/blog/2013/03/27/testing-pundit-policies-with-rspec/&#34;&gt;excellent post&lt;/a&gt; and implemented in the third party &lt;a href=&#34;https://github.com/chrisalley/pundit-matchers&#34;&gt;pundit-matchers&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;h3&gt;Scope Specs&lt;/h3&gt; &#xA;&lt;p&gt;Pundit does not provide a DSL for testing scopes. Just test it like a regular Ruby class!&lt;/p&gt; &#xA;&lt;h1&gt;External Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RailsApps/rails-devise-pundit&#34;&gt;RailsApps Example Application: Pundit and Devise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.carbonfive.com/2013/10/21/migrating-to-pundit-from-cancan/&#34;&gt;Migrating to Pundit from CanCan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thunderboltlabs.com/blog/2013/03/27/testing-pundit-policies-with-rspec/&#34;&gt;Testing Pundit Policies with RSpec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/issues/204#issuecomment-60166450&#34;&gt;Testing Pundit with Minitest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/pull/136&#34;&gt;Using Pundit outside of a Rails controller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sitepoint.com/straightforward-rails-authorization-with-pundit/&#34;&gt;Straightforward Rails Authorization with Pundit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other implementations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anurag90x/flask-pundit&#34;&gt;Flask-Pundit&lt;/a&gt; (Python) is a &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; extension &#34;heavily inspired by&#34; Pundit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Licensed under the MIT license, see the separate LICENSE.txt file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/ansible-elasticsearch</title>
    <updated>2022-06-03T02:01:08Z</updated>
    <id>tag:github.com,2022-06-03:/elastic/ansible-elasticsearch</id>
    <link href="https://github.com/elastic/ansible-elasticsearch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ansible playbook for Elasticsearch&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ARCHIVED&lt;/h1&gt; &#xA;&lt;p&gt;This project is no longer maintained. For alternative getting started experiences, you may want to try one of these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start a &lt;a href=&#34;https://www.elastic.co/cloud/elasticsearch-service/signup&#34;&gt;free trial on Elastic Cloud&lt;/a&gt;, our hosted service.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at &lt;a href=&#34;https://elastic.co/guide/en/cloud-on-k8s/current/k8s-quickstart.html&#34;&gt;Elastic Cloud on Kubernetes (ECK)&lt;/a&gt; for launching the stack via Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;Read our &lt;a href=&#34;https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-docker.html&#34;&gt;Running the Elastic Stack on Docker&lt;/a&gt; guide.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at the &lt;a href=&#34;https://github.com/elastic/terraform-provider-elasticstack&#34;&gt;Elastic Stack Terraform provider.&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ansible-elasticsearch&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://devops-ci.elastic.co/job/elastic+ansible-elasticsearch+main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/devops-ci.elastic.co/job/elastic+ansible-elasticsearch+main.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://galaxy.ansible.com/elastic/elasticsearch/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ansible--galaxy-elastic.elasticsearch-blue.svg?sanitize=true&#34; alt=&#34;Ansible Galaxy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;THIS ROLE IS FOR 7.x &amp;amp; 6.x&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ansible role for 7.x/6.x Elasticsearch. Currently this works on Debian and RedHat based linux systems. Tested platforms are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 16.04&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 18.04&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04&lt;/li&gt; &#xA; &lt;li&gt;Debian 8&lt;/li&gt; &#xA; &lt;li&gt;Debian 9&lt;/li&gt; &#xA; &lt;li&gt;Debian 10&lt;/li&gt; &#xA; &lt;li&gt;CentOS 7&lt;/li&gt; &#xA; &lt;li&gt;Amazon Linux 2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The latest Elasticsearch versions of 7.x &amp;amp; 6.x are actively tested.&lt;/p&gt; &#xA;&lt;h2&gt;BREAKING CHANGES&lt;/h2&gt; &#xA;&lt;h3&gt;Notice about multi-instance support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you use only one instance but want to upgrade from an older ansible-elasticsearch version, follow &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/docs/multi-instance.md#upgrade-procedure&#34;&gt;upgrade procedure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you install more than one instance of Elasticsearch on the same host (with different ports, directory and config files), &lt;strong&gt;do not update to ansible-elasticsearch &amp;gt;= 7.1.1&lt;/strong&gt;, please follow this &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/docs/multi-instance.md#workaround&#34;&gt;workaround&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;For multi-instances use cases, we are now recommending Docker containers using our official images (&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Removing the MAX_THREAD settings&lt;/h3&gt; &#xA;&lt;p&gt;Ansible-elasticsearch 7.5.2 is removing the option to customize the maximum number of threads the process can start in &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/pull/637/files#diff-04c6e90faac2675aa89e2176d2eec7d8L408&#34;&gt;#637&lt;/a&gt;. We discovered that this option wasn&#39;t working anymore since multi-instance support removal in ansible-elasticsearch 7.1.1. This option will be added back in a following release if it&#39;s still relevant regarding latest Elasticsearch evolutions.&lt;/p&gt; &#xA;&lt;h3&gt;Changes about configuration files&lt;/h3&gt; &#xA;&lt;p&gt;Ansible-elasticsearch 7.5.2 is updating the configuration files provided by this role in &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/pull/637&#34;&gt;#637&lt;/a&gt; which contained some options deprecated in 6.x and 7.x:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/etc/default/elasticsearch&lt;/code&gt;|&lt;code&gt;/etc/sysconfig/elasticsearch&lt;/code&gt;: the new template reflect the configuration file provided by Elasticsearch &amp;gt;= 6.x, the parameters we removed were already not used in 6.x and 7.x&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/etc/elasticsearch/jvm.options&lt;/code&gt;: the new template reflect the configuration files provided by Elasticsearch &amp;gt;= 6.x&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/etc/elasticsearch/log4j2.properties&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We removed &lt;code&gt;log4j2.properties.j2&lt;/code&gt; template from this Ansible role as it was a static file not bringing any customization specific to some ansible variable.&lt;/li&gt; &#xA;   &lt;li&gt;Deployment of this Ansible role on new servers will get the default &lt;code&gt;log4j2.properties&lt;/code&gt; provided by Elasticsearch without any override.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: For upgrade scenarios where this file was already managed by previous versions of ansible-elasticsearch, this file will become unmanaged and won&#39;t be updated by default. If you wish to update it to 7.5 version, you can retrieve it &lt;a href=&#34;https://github.com/elastic/elasticsearch/raw/7.5/distribution/src/config/log4j2.properties&#34;&gt;here&lt;/a&gt; and use this file with &lt;code&gt;es_config_log4j2&lt;/code&gt; Ansible variable (see below).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Removing OSS distribution for versions &amp;gt;= 7.11.0&lt;/h3&gt; &#xA;&lt;p&gt;Starting from Elasticsearch 7.11.0, OSS distributions will no longer be provided following the recent Elasticsearch license change.&lt;/p&gt; &#xA;&lt;p&gt;This Ansible role will fail if &lt;code&gt;oss_version&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;es_version&lt;/code&gt; is greater than &lt;code&gt;7.11.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.elastic.co/blog/licensing-change&#34;&gt;Doubling down on open, Part II&lt;/a&gt; blog post for more details.&lt;/p&gt; &#xA;&lt;h4&gt;How to override configuration files provided by ansible-elasticsearch?&lt;/h4&gt; &#xA;&lt;p&gt;You can now override the configuration files with your own versions by using the following Ansible variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config_default: &#34;elasticsearch.j2&#34;&lt;/code&gt;: replace &lt;code&gt;elasticsearch.j2&lt;/code&gt; by your own template to use a custom &lt;code&gt;/etc/default/elasticsearch&lt;/code&gt;|&lt;code&gt;/etc/sysconfig/elasticsearch&lt;/code&gt; configuration file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config_jvm: &#34;jvm.options.j2&#34;&lt;/code&gt;: replace &lt;code&gt;jvm.options.j2&lt;/code&gt; by your own template to use a custom &lt;code&gt;/etc/elasticsearch/jvm.options&lt;/code&gt; configuration file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config_log4j2: &#34;&#34;&lt;/code&gt;: set this variable to the path of your own template to use a custom &lt;code&gt;/etc/elasticsearch/log4j2.properties&lt;/code&gt; configuration file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependency&lt;/h2&gt; &#xA;&lt;p&gt;This role uses the json_query filter which &lt;a href=&#34;https://github.com/ansible/ansible/issues/24319&#34;&gt;requires jmespath&lt;/a&gt; on the local machine.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create your Ansible playbook with your own tasks, and include the role elasticsearch. You will have to have this repository accessible within the context of playbook.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ansible-galaxy install elastic.elasticsearch,v7.17.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create your playbook yaml adding the role elasticsearch. The application of the elasticsearch role results in the installation of a node on a host.&lt;/p&gt; &#xA;&lt;p&gt;The simplest configuration therefore consists of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Simple Example&#xA;  hosts: localhost&#xA;  roles:&#xA;    - role: elastic.elasticsearch&#xA;  vars:&#xA;    es_version: 7.17.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above installs Elasticsearch 7.17.0 in a single node &#39;node1&#39; on the hosts &#39;localhost&#39;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Elasticsearch default version is described in &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/defaults/main.yml#L2&#34;&gt;&lt;code&gt;es_version&lt;/code&gt;&lt;/a&gt;. You can override this variable in your playbook to install another version. While we are testing this role only with one 7.x and one 6.x version (respectively &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/defaults/main.yml#L2&#34;&gt;7.17.0&lt;/a&gt; and &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/.kitchen.yml#L22&#34;&gt;6.8.23&lt;/a&gt; at the time of writing), this role should work with other versions also in most cases.&lt;/p&gt; &#xA;&lt;p&gt;This role also uses &lt;a href=&#34;https://docs.ansible.com/ansible/2.9/user_guide/playbooks_tags.html&#34;&gt;Ansible tags&lt;/a&gt;. Run your playbook with the &lt;code&gt;--list-tasks&lt;/code&gt; flag for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;This playbook uses &lt;a href=&#34;https://kitchen.ci/&#34;&gt;Kitchen&lt;/a&gt; for CI and local testing.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Bundler&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Make&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the tests&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure you have checked out this repository to &lt;code&gt;elasticsearch&lt;/code&gt;, not &lt;code&gt;ansible-elasticsearch&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t have a Gold or Platinum license to test with you can run the trial versions of the &lt;code&gt;xpack-upgrade&lt;/code&gt; suites by appending &lt;code&gt;-trial&lt;/code&gt; to the &lt;code&gt;PATTERN&lt;/code&gt; variable.&lt;/li&gt; &#xA; &lt;li&gt;You may need to explicitly specify &lt;code&gt;VERSION=7.x&lt;/code&gt; if some suites are failing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install the ruby dependencies with bundler&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to test X-Pack features with a license you will first need to export the &lt;code&gt;ES_XPACK_LICENSE_FILE&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export ES_XPACK_LICENSE_FILE=&#34;$(pwd)/license.json&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To converge an Ubuntu 16.04 host running X-Pack&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To list all of the different test suits&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default test suite is Ubuntu 16.04 with X-Pack. If you want to test another suite you can override this with the &lt;code&gt;PATTERN&lt;/code&gt; variable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge PATTERN=security-centos-7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;PATTERN&lt;/code&gt; is a kitchen pattern which can match multiple suites. To run all tests for CentOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge PATTERN=centos-7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default version is 7.x. If you want to test 6.x you can override it with the &lt;code&gt;VERSION&lt;/code&gt; variable, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make converge VERSION=6.x PATTERN=security-centos-7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you are finished testing you can clean up everything with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ make destroy-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic Elasticsearch Configuration&lt;/h3&gt; &#xA;&lt;p&gt;All Elasticsearch configuration parameters are supported. This is achieved using a configuration map parameter &#39;es_config&#39; which is serialized into the elasticsearch.yml file. The use of a map ensures the Ansible playbook does not need to be updated to reflect new/deprecated/plugin configuration parameters.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the es_config map, several other parameters are supported for additional functions e.g. script installation. These can be found in the role&#39;s defaults/main.yml file.&lt;/p&gt; &#xA;&lt;p&gt;The following illustrates applying configuration parameters to an Elasticsearch instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Elasticsearch with custom configuration&#xA;  hosts: localhost&#xA;  roles:&#xA;    - role: elastic.elasticsearch&#xA;  vars:&#xA;    es_data_dirs:&#xA;      - &#34;/opt/elasticsearch/data&#34;&#xA;    es_log_dir: &#34;/opt/elasticsearch/logs&#34;&#xA;    es_config:&#xA;      node.name: &#34;node1&#34;&#xA;      cluster.name: &#34;custom-cluster&#34;&#xA;      discovery.seed_hosts: &#34;localhost:9301&#34;&#xA;      http.port: 9201&#xA;      transport.port: 9301&#xA;      node.data: false&#xA;      node.master: true&#xA;      bootstrap.memory_lock: true&#xA;    es_heap_size: 1g&#xA;    es_api_port: 9201&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Whilst the role installs Elasticsearch with the default configuration parameters, the following should be configured to ensure a cluster successfully forms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config[&#39;http.port&#39;]&lt;/code&gt; - the http port for the node&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config[&#39;transport.port&#39;]&lt;/code&gt; - the transport port for the node&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config[&#39;discovery.seed_hosts&#39;]&lt;/code&gt; - the unicast discovery list, in the comma separated format &lt;code&gt;&#34;&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;,&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;&#34;&lt;/code&gt; (typically the clusters dedicated masters)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config[&#39;cluster.initial_master_nodes&#39;]&lt;/code&gt; - for 7.x and above the list of master-eligible nodes to boostrap the cluster, in the comma separated format &lt;code&gt;&#34;&amp;lt;node.name&amp;gt;:&amp;lt;port&amp;gt;,&amp;lt;node.name&amp;gt;:&amp;lt;port&amp;gt;&#34;&lt;/code&gt; (typically the node names of the clusters dedicated masters)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_config[&#39;network.host&#39;]&lt;/code&gt; - sets both network.bind_host and network.publish_host to the same host value. The network.bind_host setting allows to control the host different network components will bind on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;network.publish_host&lt;/code&gt; setting allows to control the host the node will publish itself within the cluster so other nodes will be able to connect to it.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html&lt;/a&gt; for further details on default binding behavior and available options. The role makes no attempt to enforce the setting of these are requires users to specify them appropriately. It is recommended master nodes are listed and thus deployed first where possible.&lt;/p&gt; &#xA;&lt;p&gt;A more complex example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Elasticsearch with custom configuration&#xA;  hosts: localhost&#xA;  roles:&#xA;    - role: elastic.elasticsearch&#xA;  vars:&#xA;    es_data_dirs:&#xA;      - &#34;/opt/elasticsearch/data&#34;&#xA;    es_log_dir: &#34;/opt/elasticsearch/logs&#34;&#xA;    es_config:&#xA;      node.name: &#34;node1&#34;&#xA;      cluster.name: &#34;custom-cluster&#34;&#xA;      discovery.seed_hosts: &#34;localhost:9301&#34;&#xA;      http.port: 9201&#xA;      transport.port: 9301&#xA;      node.data: false&#xA;      node.master: true&#xA;      bootstrap.memory_lock: true&#xA;    es_heap_size: 1g&#xA;    es_start_service: false&#xA;    es_api_port: 9201&#xA;    es_plugins:&#xA;      - plugin: ingest-attachment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Important Notes&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;The role uses es_api_host and es_api_port to communicate with the node for actions only achievable via http e.g. to install templates and to check the NODE IS ACTIVE. These default to &#34;localhost&#34; and 9200 respectively. If the node is deployed to bind on either a different host or port, these must be changed.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Only use es_data_dirs and es_log_dir for customizing the data and log dirs respectively. When using together with &lt;code&gt;es_config[&#39;path.data&#39;]&lt;/code&gt; and &lt;code&gt;es_config[&#39;path.logs&#39;]&lt;/code&gt; it would result in generating duplicate data- and logs-keys in &lt;code&gt;elasticsearch.yml&lt;/code&gt; and thus let fail to start elasticsearch.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Multi Node Server Installations&lt;/h3&gt; &#xA;&lt;p&gt;The application of the elasticsearch role results in the installation of a node on a host. Specifying the role multiple times for a host therefore results in the installation of multiple nodes for the host.&lt;/p&gt; &#xA;&lt;p&gt;An example of a three server deployment is shown below. The first server holds the master and is thus declared first. Whilst not mandatory, this is recommended in any multi node cluster configuration. The two others servers hosts data nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that we do not support anymore installation of more than one node in the same host&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- hosts: master_node&#xA;  roles:&#xA;    - role: elastic.elasticsearch&#xA;  vars:&#xA;    es_heap_size: &#34;1g&#34;&#xA;    es_config:&#xA;      cluster.name: &#34;test-cluster&#34;&#xA;      cluster.initial_master_nodes: &#34;elastic02&#34;&#xA;      discovery.seed_hosts: &#34;elastic02:9300&#34;&#xA;      http.host: 0.0.0.0&#xA;      http.port: 9200&#xA;      node.data: false&#xA;      node.master: true&#xA;      transport.host: 0.0.0.0&#xA;      transport.port: 9300&#xA;      bootstrap.memory_lock: false&#xA;    es_plugins:&#xA;     - plugin: ingest-attachment&#xA;&#xA;- hosts: data_node_1&#xA;  roles:&#xA;    - role: elastic.elasticsearch&#xA;  vars:&#xA;    es_data_dirs:&#xA;      - &#34;/opt/elasticsearch&#34;&#xA;    es_config:&#xA;      cluster.name: &#34;test-cluster&#34;&#xA;      cluster.initial_master_nodes: &#34;elastic02&#34;&#xA;      discovery.seed_hosts: &#34;elastic02:9300&#34;&#xA;      http.host: 0.0.0.0&#xA;      http.port: 9200&#xA;      node.data: true&#xA;      node.master: false&#xA;      transport.host: 0.0.0.0&#xA;      transport.port: 9300&#xA;      bootstrap.memory_lock: false&#xA;    es_plugins:&#xA;      - plugin: ingest-attachment&#xA;&#xA;- hosts: data_node_2&#xA;  roles:&#xA;    - role: elastic.elasticsearch&#xA;  vars:&#xA;    es_config:&#xA;      cluster.name: &#34;test-cluster&#34;&#xA;      discovery.seed_hosts: &#34;elastic02:9300&#34;&#xA;      http.host: 0.0.0.0&#xA;      http.port: 9200&#xA;      node.data: true&#xA;      node.master: false&#xA;      transport.host: 0.0.0.0&#xA;      transport.port: 9300&#xA;      bootstrap.memory_lock: false&#xA;    es_plugins:&#xA;      - plugin: ingest-attachment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters can additionally be assigned to hosts using the inventory file if desired.&lt;/p&gt; &#xA;&lt;p&gt;Make sure your hosts are defined in your &lt;code&gt;inventory&lt;/code&gt; file with the appropriate &lt;code&gt;ansible_ssh_host&lt;/code&gt;, &lt;code&gt;ansible_ssh_user&lt;/code&gt; and &lt;code&gt;ansible_ssh_private_key_file&lt;/code&gt; values.&lt;/p&gt; &#xA;&lt;p&gt;Then run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ansible-playbook -i hosts ./your-playbook.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installing X-Pack Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_role_mapping&lt;/code&gt; Role mappings file declared as yml as described &lt;a href=&#34;https://www.elastic.co/guide/en/x-pack/current/mapping-roles.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;es_role_mapping:&#xA;  power_user:&#xA;    - &#34;cn=admins,dc=example,dc=com&#34;&#xA;  user:&#xA;    - &#34;cn=users,dc=example,dc=com&#34;&#xA;    - &#34;cn=admins,dc=example,dc=com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_users&lt;/code&gt; - Users can be declared here as yml. Two sub keys &#39;native&#39; and &#39;file&#39; determine the realm under which the user is created. Beneath each of these keys users should be declared as yml entries. e.g.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;es_users:&#xA;  native:&#xA;    kibana4_server:&#xA;      password: changeMe&#xA;      roles:&#xA;        - kibana4_server&#xA;  file:&#xA;    es_admin:&#xA;      password: changeMe&#xA;      roles:&#xA;        - admin&#xA;    testUser:&#xA;      password: changeMeAlso!&#xA;      roles:&#xA;        - power_user&#xA;        - user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_roles&lt;/code&gt; - Elasticsearch roles can be declared here as yml. Two sub keys &#39;native&#39; and &#39;file&#39; determine how the role is created i.e. either through a file or http(native) call. Beneath each key list the roles with appropriate permissions, using the file based format described &lt;a href=&#34;https://www.elastic.co/guide/en/x-pack/current/file-realm.html&#34;&gt;here&lt;/a&gt; e.g.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;es_roles:&#xA;  file:&#xA;    admin:&#xA;      cluster:&#xA;        - all&#xA;      indices:&#xA;        - names: &#39;*&#39;&#xA;          privileges:&#xA;            - all&#xA;    power_user:&#xA;      cluster:&#xA;        - monitor&#xA;      indices:&#xA;        - names: &#39;*&#39;&#xA;          privileges:&#xA;            - all&#xA;    user:&#xA;      indices:&#xA;        - names: &#39;*&#39;&#xA;          privileges:&#xA;            - read&#xA;    kibana4_server:&#xA;      cluster:&#xA;          - monitor&#xA;      indices:&#xA;        - names: &#39;.kibana&#39;&#xA;          privileges:&#xA;            - all&#xA;  native:&#xA;    logstash:&#xA;      cluster:&#xA;        - manage_index_templates&#xA;      indices:&#xA;        - names: &#39;logstash-*&#39;&#xA;          privileges:&#xA;            - write&#xA;            - delete&#xA;            - create_index&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_xpack_license&lt;/code&gt; - X-Pack license. The license is a json blob. Set the variable directly (possibly protected by Ansible vault) or from a file in the Ansible project on the control machine via a lookup:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;es_xpack_license: &#34;{{ lookup(&#39;file&#39;, playbook_dir + &#39;/files/&#39; + es_cluster_name + &#39;/license.json&#39;) }}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have a license you can enable the 30-day trial by setting &lt;code&gt;es_xpack_trial&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;X-Pack configuration parameters can be added to the elasticsearch.yml file using the normal &lt;code&gt;es_config&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;p&gt;For a full example see &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/test/integration/xpack-upgrade.yml&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Important Note for Native Realm Configuration&lt;/h4&gt; &#xA;&lt;p&gt;In order for native users and roles to be configured, the role calls the Elasticsearch API. Given security is installed this requires definition of two parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_api_basic_auth_username&lt;/code&gt; - admin username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_api_basic_auth_password&lt;/code&gt; - admin password&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These can either be set to a user declared in the file based realm, with admin permissions, or the default &#34;elastic&#34; superuser (default password is changeme).&lt;/p&gt; &#xA;&lt;h4&gt;X-Pack Security SSL/TLS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To configure your cluster with SSL/TLS for HTTP and/or transport communications follow the &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/raw/main/docs/ssl-tls-setup.md&#34;&gt;SSL/TLS setup procedure&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional Configuration&lt;/h3&gt; &#xA;&lt;p&gt;In addition to es_config, the following parameters allow the customization of the Java and Elasticsearch versions as well as the role behavior. Options include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;oss_version&lt;/code&gt; Default &lt;code&gt;false&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; will install the oss release of Elasticsearch (for version &amp;lt;7.11.0 only).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_xpack_trial&lt;/code&gt; Default &lt;code&gt;false&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; will start the 30-day trail once the cluster starts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_version&lt;/code&gt; (e.g. &#34;7.17.0&#34;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_api_host&lt;/code&gt; The host name used for actions requiring HTTP e.g. installing templates. Defaults to &#34;localhost&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_api_port&lt;/code&gt; The port used for actions requiring HTTP e.g. installing templates. Defaults to 9200. &lt;strong&gt;CHANGE IF THE HTTP PORT IS NOT 9200&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_api_basic_auth_username&lt;/code&gt; The Elasticsearch username for making admin changing actions. Used if Security is enabled. Ensure this user is admin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_api_basic_auth_password&lt;/code&gt; The password associated with the user declared in &lt;code&gt;es_api_basic_auth_username&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_delete_unmanaged_file&lt;/code&gt; Default &lt;code&gt;true&lt;/code&gt;. Set to false to keep file realm users that have been added outside of ansible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_delete_unmanaged_native&lt;/code&gt; Default &lt;code&gt;true&lt;/code&gt;. Set to false to keep native realm users that have been added outside of ansible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_start_service&lt;/code&gt; (true (default) or false)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_plugins_reinstall&lt;/code&gt; (true or false (default) )&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_plugins&lt;/code&gt; an array of plugin definitions e.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  es_plugins:&#xA;    - plugin: ingest-attachment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_path_repo&lt;/code&gt; Sets the whitelist for allowing local back-up repositories&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_action_auto_create_index&lt;/code&gt; Sets the value for auto index creation, use the syntax below for specifying indexes (else true/false): es_action_auto_create_index: &#39;[&#34;.watches&#34;, &#34;.triggered_watches&#34;, &#34;.watcher-history-*&#34;]&#39;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_allow_downgrades&lt;/code&gt; For development purposes only. (true or false (default) )&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_java_install&lt;/code&gt; If set to true, Java will be installed. (false (default for 7.x) or true (default for 6.x))&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;update_java&lt;/code&gt; Updates Java to the latest version. (true or false (default))&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_max_map_count&lt;/code&gt; maximum number of VMA (Virtual Memory Areas) a process can own. Defaults to 262144.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_max_open_files&lt;/code&gt; the maximum file descriptor number that can be opened by this process. Defaults to 65536.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_debian_startup_timeout&lt;/code&gt; how long Debian-family SysV init scripts wait for the service to start, in seconds. Defaults to 10 seconds.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_use_repository&lt;/code&gt; Setting this to &lt;code&gt;false&lt;/code&gt; will stop Ansible from using the official Elastic package from any repository configured on the system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_add_repository&lt;/code&gt; Setting this to &lt;code&gt;false&lt;/code&gt; will stop Ansible to add the official Elastic package repositories (if es_use_repository is true) if you want to use a repo already present.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;es_custom_package_url&lt;/code&gt; the URL to the rpm or deb package for Ansible to install. When using this you will also need to set &lt;code&gt;es_use_repository: false&lt;/code&gt; and make sure that the &lt;code&gt;es_version&lt;/code&gt; matches the version being installed from your custom URL. E.g. &lt;code&gt;es_custom_package_url: https://downloads.example.com/elasticsearch.rpm&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Earlier examples illustrate the installation of plugins using &lt;code&gt;es_plugins&lt;/code&gt;. For officially supported plugins no version or source delimiter is required. The plugin script will determine the appropriate plugin version based on the target Elasticsearch version. For community based plugins include the full url. This approach should NOT be used for the X-Pack plugin. See X-Pack below for details here.&lt;/p&gt; &#xA;&lt;p&gt;If installing Monitoring or Alerting, ensure the license plugin is also specified. Security configuration currently has limited support, but more support is planned for later versions.&lt;/p&gt; &#xA;&lt;p&gt;To configure X-pack to send mail, the following configuration can be added to the role. When require_auth is true, you will also need to provide the user and password. If not these can be removed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    es_mail_config:&#xA;        account: &amp;lt;functional name&amp;gt;&#xA;        profile: standard&#xA;        from: &amp;lt;from address&amp;gt;&#xA;        require_auth: &amp;lt;true or false&amp;gt;&#xA;        host: &amp;lt;mail domain&amp;gt;&#xA;        port: &amp;lt;port number&amp;gt;&#xA;        user: &amp;lt;e-mail address&amp;gt; --optional&#xA;        pass: &amp;lt;password&amp;gt; --optional&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_user&lt;/code&gt; - defaults to elasticsearch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_group&lt;/code&gt; - defaults to elasticsearch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_user_id&lt;/code&gt; - default is undefined.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_group_id&lt;/code&gt; - default is undefined.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both &lt;code&gt;es_user_id&lt;/code&gt; and &lt;code&gt;es_group_id&lt;/code&gt; must be set for the user and group ids to be set.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_restart_on_change&lt;/code&gt; - defaults to true. If false, changes will not result in Elasticsearch being restarted.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_plugins_reinstall&lt;/code&gt; - defaults to false. If true, all currently installed plugins will be removed from a node. Listed plugins will then be re-installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add, update or remove elasticsearch.keystore entries, use the following variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# state is optional and defaults to present&#xA;es_keystore_entries:&#xA;- key: someKeyToAdd&#xA;  value: someValue&#xA;  state: present&#xA;&#xA;- key: someKeyToUpdate&#xA;  value: newValue&#xA;  # state: present&#xA;  force: Yes&#xA;&#xA;- key: someKeyToDelete&#xA;  state: absent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This role ships with sample templates located in the &lt;a href=&#34;https://github.com/elastic/ansible-elasticsearch/tree/main/test/integration/files/templates-7.x&#34;&gt;test/integration/files/templates-7.x&lt;/a&gt; directory. &lt;code&gt;es_templates_fileglob&lt;/code&gt; variable is used with the Ansible &lt;a href=&#34;http://docs.ansible.com/ansible/playbooks_loops.html#id4&#34;&gt;with_fileglob&lt;/a&gt; loop. When setting the globs, be sure to use an absolute path.&lt;/p&gt; &#xA;&lt;h3&gt;Proxy&lt;/h3&gt; &#xA;&lt;p&gt;To define proxy globally, set the following variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;es_proxy_host&lt;/code&gt; - global proxy host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;es_proxy_port&lt;/code&gt; - global proxy port&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The role assumes the user/group exists on the server. The elasticsearch packages create the default elasticsearch user. If this needs to be changed, ensure the user exists.&lt;/li&gt; &#xA; &lt;li&gt;The playbook relies on the inventory_name of each host to ensure its directories are unique&lt;/li&gt; &#xA; &lt;li&gt;KitchenCI has been used for testing. This is used to confirm images reach the correct state after a play is first applied. We currently test the latest version of 7.x and 6.x on all supported platforms.&lt;/li&gt; &#xA; &lt;li&gt;The role aims to be idempotent. Running the role multiple times, with no changes, should result in no state change on the server. If the configuration is changed, these will be applied and Elasticsearch restarted where required.&lt;/li&gt; &#xA; &lt;li&gt;In order to run x-pack tests a license file with security enabled is required. Set the environment variable &lt;code&gt;ES_XPACK_LICENSE_FILE&lt;/code&gt; to the full path of the license file prior to running tests. A trial license is appropriate and can be used by setting &lt;code&gt;es_xpack_trial&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IMPORTANT NOTES RE PLUGIN MANAGEMENT&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If the ES version is changed, all plugins will be removed. Those listed in the playbook will be re-installed. This is behavior is required in ES 6.x.&lt;/li&gt; &#xA; &lt;li&gt;If no plugins are listed in the playbook for a node, all currently installed plugins will be removed.&lt;/li&gt; &#xA; &lt;li&gt;The role supports automatic detection of differences between installed and listed plugins - installing those listed but not installed, and removing those installed but not listed. Should users wish to re-install plugins they should set es_plugins_reinstall to true. This will cause all currently installed plugins to be removed and those listed to be installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Questions on Usage&lt;/h2&gt; &#xA;&lt;p&gt;We welcome questions on how to use the role. However, in order to keep the GitHub issues list focused on &#34;issues&#34; we ask the community to raise questions at &lt;a href=&#34;https://discuss.elastic.co/c/elasticsearch&#34;&gt;https://discuss.elastic.co/c/elasticsearch&lt;/a&gt;. This is monitored by the maintainers.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>instructure/canvas-lms</title>
    <updated>2022-06-03T02:01:08Z</updated>
    <id>tag:github.com,2022-06-03:/instructure/canvas-lms</id>
    <link href="https://github.com/instructure/canvas-lms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open LMS by Instructure, Inc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Canvas LMS&lt;/h1&gt; &#xA;&lt;p&gt;Canvas is a modern, open-source &lt;a href=&#34;https://en.wikipedia.org/wiki/Learning_management_system&#34;&gt;LMS&lt;/a&gt; developed and maintained by &lt;a href=&#34;https://www.instructure.com/&#34;&gt;Instructure Inc.&lt;/a&gt; It is released under the AGPLv3 license for use by anyone interested in learning more about or using learning management systems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://github.com/instructure/canvas-lms/wiki&#34;&gt;Please see our main wiki page for more information&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Detailed instructions for installation and configuration of Canvas are provided on our wiki.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/instructure/canvas-lms/wiki/Quick-Start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/instructure/canvas-lms/wiki/Production-Start&#34;&gt;Production Start&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>