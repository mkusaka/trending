<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T02:02:24Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>heartcombo/devise</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/heartcombo/devise</id>
    <link href="https://github.com/heartcombo/devise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexible authentication solution for Rails with Warden.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/heartcombo/devise/main/devise.png&#34; alt=&#34;Devise Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeclimate.com/github/heartcombo/devise&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/heartcombo/devise.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Devise is a flexible authentication solution for Rails based on Warden. It:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is Rack based;&lt;/li&gt; &#xA; &lt;li&gt;Is a complete MVC solution based on Rails engines;&lt;/li&gt; &#xA; &lt;li&gt;Allows you to have multiple models signed in at the same time;&lt;/li&gt; &#xA; &lt;li&gt;Is based on a modularity concept: use only what you really need.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s composed of 10 modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/DatabaseAuthenticatable&#34;&gt;Database Authenticatable&lt;/a&gt;: hashes and stores a password in the database to validate the authenticity of a user while signing in. The authentication can be done both through POST requests or HTTP Basic Authentication.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Omniauthable&#34;&gt;Omniauthable&lt;/a&gt;: adds OmniAuth (&lt;a href=&#34;https://github.com/omniauth/omniauth&#34;&gt;https://github.com/omniauth/omniauth&lt;/a&gt;) support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Confirmable&#34;&gt;Confirmable&lt;/a&gt;: sends emails with confirmation instructions and verifies whether an account is already confirmed during sign in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Recoverable&#34;&gt;Recoverable&lt;/a&gt;: resets the user password and sends reset instructions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Registerable&#34;&gt;Registerable&lt;/a&gt;: handles signing up users through a registration process, also allowing them to edit and destroy their account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Rememberable&#34;&gt;Rememberable&lt;/a&gt;: manages generating and clearing a token for remembering the user from a saved cookie.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Trackable&#34;&gt;Trackable&lt;/a&gt;: tracks sign in count, timestamps and IP address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Timeoutable&#34;&gt;Timeoutable&lt;/a&gt;: expires sessions that have not been active in a specified period of time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Validatable&#34;&gt;Validatable&lt;/a&gt;: provides validations of email and password. It&#39;s optional and can be customized, so you&#39;re able to define your own validations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Lockable&#34;&gt;Lockable&lt;/a&gt;: locks an account after a specified number of failed sign-in attempts. Can unlock via email or after a specified time period.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- TOC depthFrom:1 depthTo:6 withLinks:1 orderedList:0 --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#information&#34;&gt;Information&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#the-devise-wiki&#34;&gt;The Devise wiki&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#bug-reports&#34;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#stackoverflow-and-mailing-list&#34;&gt;StackOverflow and Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#rdocs&#34;&gt;RDocs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#example-applications&#34;&gt;Example applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#starting-with-rails&#34;&gt;Starting with Rails?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#controller-filters-and-helpers&#34;&gt;Controller filters and helpers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-models&#34;&gt;Configuring Models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#strong-parameters&#34;&gt;Strong Parameters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-views&#34;&gt;Configuring views&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-controllers&#34;&gt;Configuring controllers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-routes&#34;&gt;Configuring routes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#i18n&#34;&gt;I18n&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#test-helpers&#34;&gt;Test helpers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#controller-tests&#34;&gt;Controller tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#integration-tests&#34;&gt;Integration tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#omniauth&#34;&gt;OmniAuth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-multiple-models&#34;&gt;Configuring multiple models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#activejob-integration&#34;&gt;ActiveJob Integration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#password-reset-tokens-and-rails-logs&#34;&gt;Password reset tokens and Rails logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#other-orms&#34;&gt;Other ORMs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#rails-api-mode&#34;&gt;Rails API mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#additional-information&#34;&gt;Additional information&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#warden&#34;&gt;Warden&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h2&gt;Information&lt;/h2&gt; &#xA;&lt;h3&gt;The Devise wiki&lt;/h3&gt; &#xA;&lt;p&gt;The Devise Wiki has lots of additional information about Devise including many &#34;how-to&#34; articles and answers to the most frequently asked questions. Please browse the Wiki after finishing this README:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki&#34;&gt;https://github.com/heartcombo/devise/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bug reports&lt;/h3&gt; &#xA;&lt;p&gt;If you discover a problem with Devise, we would like to know about it. However, we ask that you please review these guidelines before submitting a bug report:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Bug-reports&#34;&gt;https://github.com/heartcombo/devise/wiki/Bug-reports&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have discovered a security related bug, please do &lt;em&gt;NOT&lt;/em&gt; use the GitHub issue tracker. Send an email to &lt;a href=&#34;mailto:heartcombo@googlegroups.com&#34;&gt;heartcombo@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;StackOverflow and Mailing List&lt;/h3&gt; &#xA;&lt;p&gt;If you have any questions, comments, or concerns, please use StackOverflow instead of the GitHub issue tracker:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/devise&#34;&gt;http://stackoverflow.com/questions/tagged/devise&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The deprecated mailing list can still be read on&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/group/plataformatec-devise&#34;&gt;https://groups.google.com/group/plataformatec-devise&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RDocs&lt;/h3&gt; &#xA;&lt;p&gt;You can view the Devise documentation in RDoc format here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://rubydoc.info/github/heartcombo/devise/main/frames&#34;&gt;http://rubydoc.info/github/heartcombo/devise/main/frames&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you need to use Devise with previous versions of Rails, you can always run &#34;gem server&#34; from the command line after you install the gem to access the old documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Example applications&lt;/h3&gt; &#xA;&lt;p&gt;There are a few example applications available on GitHub that demonstrate various features of Devise with different versions of Rails. You can view them here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Example-Applications&#34;&gt;https://github.com/heartcombo/devise/wiki/Example-Applications&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extensions&lt;/h3&gt; &#xA;&lt;p&gt;Our community has created a number of extensions that add functionality above and beyond what is included with Devise. You can view a list of available extensions and add your own here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Extensions&#34;&gt;https://github.com/heartcombo/devise/wiki/Extensions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We hope that you will consider contributing to Devise. Please read this short overview for some information about how to get started:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Contributing&#34;&gt;https://github.com/heartcombo/devise/wiki/Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will usually want to write tests for your changes. To run the test suite, go into Devise&#39;s top-level directory and run &lt;code&gt;bundle install&lt;/code&gt; and &lt;code&gt;bin/test&lt;/code&gt;. Devise works with multiple Ruby and Rails versions, and ActiveRecord and Mongoid ORMs, which means you can run the test suite with some modifiers: &lt;code&gt;DEVISE_ORM&lt;/code&gt; and &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;DEVISE_ORM&lt;/h3&gt; &#xA;&lt;p&gt;Since Devise supports both Mongoid and ActiveRecord, we rely on this variable to run specific code for each ORM. The default value of &lt;code&gt;DEVISE_ORM&lt;/code&gt; is &lt;code&gt;active_record&lt;/code&gt;. To run the tests for Mongoid, you can pass &lt;code&gt;mongoid&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DEVISE_ORM=mongoid bin/test&#xA;&#xA;==&amp;gt; Devise.orm = :mongoid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running the tests for Mongoid, you will need to have a MongoDB server (version 2.0 or newer) running on your system.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the command output will show the variable value being used.&lt;/p&gt; &#xA;&lt;h3&gt;BUNDLE_GEMFILE&lt;/h3&gt; &#xA;&lt;p&gt;We can use this variable to tell bundler what Gemfile it should use (instead of the one in the current directory). Inside the &lt;a href=&#34;https://github.com/heartcombo/devise/tree/main/gemfiles&#34;&gt;gemfiles&lt;/a&gt; directory, we have one for each version of Rails we support. When you send us a pull request, it may happen that the test suite breaks using some of them. If that&#39;s the case, you can simulate the same environment using the &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt; variable. For example, if the tests broke using Ruby 2.4.2 and Rails 4.1, you can do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rbenv shell 2.4.2 # or rvm use 2.4.2&#xA;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bundle install&#xA;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bin/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also combine both of them if the tests broke for Mongoid:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bundle install&#xA;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable DEVISE_ORM=mongoid bin/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;p&gt;Devise uses &lt;a href=&#34;https://github.com/seattlerb/minitest&#34;&gt;Mini Test&lt;/a&gt; as test framework.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running all tests:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running tests for an specific file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/test test/models/trackable_test.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running a specific test given a regex:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/test test/models/trackable_test.rb:16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Starting with Rails?&lt;/h2&gt; &#xA;&lt;p&gt;If you are building your first Rails application, we recommend you &lt;em&gt;do not&lt;/em&gt; use Devise. Devise requires a good understanding of the Rails Framework. In such cases, we advise you to start a simple authentication system from scratch. Here&#39;s a few resources that should help you get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Michael Hartl&#39;s online book: &lt;a href=&#34;https://www.railstutorial.org/book/modeling_users&#34;&gt;https://www.railstutorial.org/book/modeling_users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ryan Bates&#39; Railscasts: &lt;a href=&#34;http://railscasts.com/episodes/250-authentication-from-scratch&#34;&gt;http://railscasts.com/episodes/250-authentication-from-scratch&lt;/a&gt; and &lt;a href=&#34;http://railscasts.com/episodes/250-authentication-from-scratch-revised&#34;&gt;http://railscasts.com/episodes/250-authentication-from-scratch-revised&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codecademy&#39;s Ruby on Rails: Authentication and Authorization: &lt;a href=&#34;https://www.codecademy.com/learn/rails-auth&#34;&gt;https://www.codecademy.com/learn/rails-auth&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have solidified your understanding of Rails and authentication mechanisms, we assure you Devise will be very pleasant to work with. &lt;span&gt;😃&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Devise 4.0 works with Rails 4.1 onwards. Add the following line to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;devise&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you need to run the generator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, a number of instructions will appear in the console. Among these instructions, you&#39;ll need to set up the default URL options for the Devise mailer in each environment. Here is a possible configuration for &lt;code&gt;config/environments/development.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.action_mailer.default_url_options = { host: &#39;localhost&#39;, port: 3000 }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generator will install an initializer which describes ALL of Devise&#39;s configuration options. It is &lt;em&gt;imperative&lt;/em&gt; that you take a look at it. When you are done, you are ready to add Devise to any of your models using the generator.&lt;/p&gt; &#xA;&lt;p&gt;In the following command you will replace &lt;code&gt;MODEL&lt;/code&gt; with the class name used for the application’s users (it’s frequently &lt;code&gt;User&lt;/code&gt; but could also be &lt;code&gt;Admin&lt;/code&gt;). This will create a model (if one does not exist) and configure it with the default Devise modules. The generator also configures your &lt;code&gt;config/routes.rb&lt;/code&gt; file to point to the Devise controller.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise MODEL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, check the MODEL for any additional configuration options you might want to add, such as confirmable or lockable. If you add an option, be sure to inspect the migration file (created by the generator if your ORM supports them) and uncomment the appropriate section. For example, if you add the confirmable option in the model, you&#39;ll need to uncomment the Confirmable section in the migration.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should restart your application after changing Devise&#39;s configuration options (this includes stopping spring). Otherwise, you will run into strange errors, for example, users being unable to login and route helpers being undefined.&lt;/p&gt; &#xA;&lt;h3&gt;Controller filters and helpers&lt;/h3&gt; &#xA;&lt;p&gt;Devise will create some helpers to use inside your controllers and views. To set up a controller with user authentication, just add this before_action (assuming your devise model is &#39;User&#39;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;before_action :authenticate_user!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 5, note that &lt;code&gt;protect_from_forgery&lt;/code&gt; is no longer prepended to the &lt;code&gt;before_action&lt;/code&gt; chain, so if you have set &lt;code&gt;authenticate_user&lt;/code&gt; before &lt;code&gt;protect_from_forgery&lt;/code&gt;, your request will result in &#34;Can&#39;t verify CSRF token authenticity.&#34; To resolve this, either change the order in which you call them, or use &lt;code&gt;protect_from_forgery prepend: true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your devise model is something other than User, replace &#34;_user&#34; with &#34;_yourmodel&#34;. The same logic applies to the instructions below.&lt;/p&gt; &#xA;&lt;p&gt;To verify if a user is signed in, use the following helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user_signed_in?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the current signed-in user, this helper is available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;current_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can access the session for this scope:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user_session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After signing in a user, confirming the account or updating the password, Devise will look for a scoped root path to redirect to. For instance, when using a &lt;code&gt;:user&lt;/code&gt; resource, the &lt;code&gt;user_root_path&lt;/code&gt; will be used if it exists; otherwise, the default &lt;code&gt;root_path&lt;/code&gt; will be used. This means that you need to set the root inside your routes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;root to: &#39;home#index&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also override &lt;code&gt;after_sign_in_path_for&lt;/code&gt; and &lt;code&gt;after_sign_out_path_for&lt;/code&gt; to customize your redirect hooks.&lt;/p&gt; &#xA;&lt;p&gt;Notice that if your Devise model is called &lt;code&gt;Member&lt;/code&gt; instead of &lt;code&gt;User&lt;/code&gt;, for example, then the helpers available are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;before_action :authenticate_member!&#xA;&#xA;member_signed_in?&#xA;&#xA;current_member&#xA;&#xA;member_session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring Models&lt;/h3&gt; &#xA;&lt;p&gt;The Devise method in your models also accepts some options to configure its modules. For example, you can choose the cost of the hashing algorithm with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise :database_authenticatable, :registerable, :confirmable, :recoverable, stretches: 13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Besides &lt;code&gt;:stretches&lt;/code&gt;, you can define &lt;code&gt;:pepper&lt;/code&gt;, &lt;code&gt;:encryptor&lt;/code&gt;, &lt;code&gt;:confirm_within&lt;/code&gt;, &lt;code&gt;:remember_for&lt;/code&gt;, &lt;code&gt;:timeout_in&lt;/code&gt;, &lt;code&gt;:unlock_in&lt;/code&gt; among other options. For more details, see the initializer file that was created when you invoked the &#34;devise:install&#34; generator described above. This file is usually located at &lt;code&gt;/config/initializers/devise.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Strong Parameters&lt;/h3&gt; &#xA;&lt;p&gt;The Parameter Sanitizer API has changed for Devise 4 &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For previous Devise versions see &lt;a href=&#34;https://github.com/heartcombo/devise/tree/3-stable#strong-parameters&#34;&gt;https://github.com/heartcombo/devise/tree/3-stable#strong-parameters&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;When you customize your own views, you may end up adding new attributes to forms. Rails 4 moved the parameter sanitization from the model to the controller, causing Devise to handle this concern at the controller as well.&lt;/p&gt; &#xA;&lt;p&gt;There are just three actions in Devise that allow any set of parameters to be passed down to the model, therefore requiring sanitization. Their names and default permitted parameters are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sign_in&lt;/code&gt; (&lt;code&gt;Devise::SessionsController#create&lt;/code&gt;) - Permits only the authentication keys (like &lt;code&gt;email&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sign_up&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#create&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_confirmation&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;account_update&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#update&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;password_confirmation&lt;/code&gt; and &lt;code&gt;current_password&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case you want to permit additional parameters (the lazy way™), you can do so using a simple before action in your &lt;code&gt;ApplicationController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  before_action :configure_permitted_parameters, if: :devise_controller?&#xA;&#xA;  protected&#xA;&#xA;  def configure_permitted_parameters&#xA;    devise_parameter_sanitizer.permit(:sign_up, keys: [:username])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above works for any additional fields where the parameters are simple scalar types. If you have nested attributes (say you&#39;re using &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;), then you will need to tell devise about those nestings and types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  before_action :configure_permitted_parameters, if: :devise_controller?&#xA;&#xA;  protected&#xA;&#xA;  def configure_permitted_parameters&#xA;    devise_parameter_sanitizer.permit(:sign_up, keys: [:first_name, :last_name, address_attributes: [:country, :state, :city, :area, :postal_code]])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Devise allows you to completely change Devise defaults or invoke custom behavior by passing a block:&lt;/p&gt; &#xA;&lt;p&gt;To permit simple scalar values for username and email, use this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def configure_permitted_parameters&#xA;  devise_parameter_sanitizer.permit(:sign_in) do |user_params|&#xA;    user_params.permit(:username, :email)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have some checkboxes that express the roles a user may take on registration, the browser will send those selected checkboxes as an array. An array is not one of Strong Parameters&#39; permitted scalars, so we need to configure Devise in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def configure_permitted_parameters&#xA;  devise_parameter_sanitizer.permit(:sign_up) do |user_params|&#xA;    user_params.permit({ roles: [] }, :email, :password, :password_confirmation)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the list of permitted scalars, and how to declare permitted keys in nested hashes and arrays, see&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rails/strong_parameters#nested-parameters&#34;&gt;https://github.com/rails/strong_parameters#nested-parameters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have multiple Devise models, you may want to set up a different parameter sanitizer per model. In this case, we recommend inheriting from &lt;code&gt;Devise::ParameterSanitizer&lt;/code&gt; and adding your own logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User::ParameterSanitizer &amp;lt; Devise::ParameterSanitizer&#xA;  def initialize(*)&#xA;    super&#xA;    permit(:sign_up, keys: [:username, :email])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then configure your controllers to use it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  protected&#xA;&#xA;  def devise_parameter_sanitizer&#xA;    if resource_class == User&#xA;      User::ParameterSanitizer.new(User, :user, params)&#xA;    else&#xA;      super # Use the default one&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example above overrides the permitted parameters for the user to be both &lt;code&gt;:username&lt;/code&gt; and &lt;code&gt;:email&lt;/code&gt;. The non-lazy way to configure parameters would be by defining the before filter above in a custom controller. We detail how to configure and customize controllers in some sections below.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring views&lt;/h3&gt; &#xA;&lt;p&gt;We built Devise to help you quickly develop an application that uses authentication. However, we don&#39;t want to be in your way when you need to customize it.&lt;/p&gt; &#xA;&lt;p&gt;Since Devise is an engine, all its views are packaged inside the gem. These views will help you get started, but after some time you may want to change them. If this is the case, you just need to invoke the following generator, and it will copy all views to your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:views&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have more than one Devise model in your application (such as &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Admin&lt;/code&gt;), you will notice that Devise uses the same views for all models. Fortunately, Devise offers an easy way to customize views. All you need to do is set &lt;code&gt;config.scoped_views = true&lt;/code&gt; inside the &lt;code&gt;config/initializers/devise.rb&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;After doing so, you will be able to have views based on the role like &lt;code&gt;users/sessions/new&lt;/code&gt; and &lt;code&gt;admins/sessions/new&lt;/code&gt;. If no view is found within the scope, Devise will use the default view at &lt;code&gt;devise/sessions/new&lt;/code&gt;. You can also use the generator to generate scoped views:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:views users&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to generate only a few sets of views, like the ones for the &lt;code&gt;registerable&lt;/code&gt; and &lt;code&gt;confirmable&lt;/code&gt; module, you can pass a list of modules to the generator with the &lt;code&gt;-v&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:views -v registrations confirmations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring controllers&lt;/h3&gt; &#xA;&lt;p&gt;If the customization at the views level is not enough, you can customize each controller by following these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create your custom controllers using the generator which requires a scope:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:controllers [scope]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you specify &lt;code&gt;users&lt;/code&gt; as the scope, controllers will be created in &lt;code&gt;app/controllers/users/&lt;/code&gt;. And the sessions controller will look like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController&#xA;  # GET /resource/sign_in&#xA;  # def new&#xA;  #   super&#xA;  # end&#xA;  ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Use the -c flag to specify a controller, for example: &lt;code&gt;rails generate devise:controllers users -c=sessions&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tell the router to use this controller:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_for :users, controllers: { sessions: &#39;users/sessions&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the views from &lt;code&gt;devise/sessions&lt;/code&gt; to &lt;code&gt;users/sessions&lt;/code&gt;. Since the controller was changed, it won&#39;t use the default views located in &lt;code&gt;devise/sessions&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, change or extend the desired controller actions.&lt;/p&gt; &lt;p&gt;You can completely override a controller action:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController&#xA;  def create&#xA;    # custom sign-in code&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or you can simply add new behavior to it:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController&#xA;  def create&#xA;    super do |resource|&#xA;      BackgroundWorker.trigger(resource)&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for triggering background jobs or logging events during certain actions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Remember that Devise uses flash messages to let users know if sign in was successful or unsuccessful. Devise expects your application to call &lt;code&gt;flash[:notice]&lt;/code&gt; and &lt;code&gt;flash[:alert]&lt;/code&gt; as appropriate. Do not print the entire flash hash, print only specific keys. In some circumstances, Devise adds a &lt;code&gt;:timedout&lt;/code&gt; key to the flash hash, which is not meant for display. Remove this key from the hash if you intend to print the entire hash.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring routes&lt;/h3&gt; &#xA;&lt;p&gt;Devise also ships with default routes. If you need to customize them, you should probably be able to do it through the devise_for method. It accepts several options like :class_name, :path_prefix and so on, including the possibility to change path names for I18n:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_for :users, path: &#39;auth&#39;, path_names: { sign_in: &#39;login&#39;, sign_out: &#39;logout&#39;, password: &#39;secret&#39;, confirmation: &#39;verification&#39;, unlock: &#39;unblock&#39;, registration: &#39;register&#39;, sign_up: &#39;cmon_let_me_in&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to check &lt;code&gt;devise_for&lt;/code&gt; &lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/ActionDispatch/Routing/Mapper%3Adevise_for&#34;&gt;documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;If you have the need for more deep customization, for instance to also allow &#34;/sign_in&#34; besides &#34;/users/sign_in&#34;, all you need to do is create your routes normally and wrap them in a &lt;code&gt;devise_scope&lt;/code&gt; block in the router:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_scope :user do&#xA;  get &#39;sign_in&#39;, to: &#39;devise/sessions#new&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way, you tell Devise to use the scope &lt;code&gt;:user&lt;/code&gt; when &#34;/sign_in&#34; is accessed. Notice &lt;code&gt;devise_scope&lt;/code&gt; is also aliased as &lt;code&gt;as&lt;/code&gt; in your router.&lt;/p&gt; &#xA;&lt;p&gt;Please note: You will still need to add &lt;code&gt;devise_for&lt;/code&gt; in your routes in order to use helper methods such as &lt;code&gt;current_user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_for :users, skip: :all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;I18n&lt;/h3&gt; &#xA;&lt;p&gt;Devise uses flash messages with I18n, in conjunction with the flash keys :notice and :alert. To customize your app, you can set up your locale file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  devise:&#xA;    sessions:&#xA;      signed_in: &#39;Signed in successfully.&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create distinct messages based on the resource you&#39;ve configured using the singular name given in routes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  devise:&#xA;    sessions:&#xA;      user:&#xA;        signed_in: &#39;Welcome user, you are signed in.&#39;&#xA;      admin:&#xA;        signed_in: &#39;Hello admin!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Devise mailer uses a similar pattern to create subject messages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  devise:&#xA;    mailer:&#xA;      confirmation_instructions:&#xA;        subject: &#39;Hello everybody!&#39;&#xA;        user_subject: &#39;Hello User! Please confirm your email&#39;&#xA;      reset_password_instructions:&#xA;        subject: &#39;Reset instructions&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at our locale file to check all available messages. You may also be interested in one of the many translations that are available on our wiki:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/I18n&#34;&gt;https://github.com/heartcombo/devise/wiki/I18n&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Caution: Devise Controllers inherit from ApplicationController. If your app uses multiple locales, you should be sure to set I18n.locale in ApplicationController.&lt;/p&gt; &#xA;&lt;h3&gt;Test helpers&lt;/h3&gt; &#xA;&lt;p&gt;Devise includes some test helpers for controller and integration tests. In order to use them, you need to include the respective module in your test cases/specs.&lt;/p&gt; &#xA;&lt;h3&gt;Controller tests&lt;/h3&gt; &#xA;&lt;p&gt;Controller tests require that you include &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; on your test case or its parent &lt;code&gt;ActionController::TestCase&lt;/code&gt; superclass. For Rails versions prior to 5, include &lt;code&gt;Devise::Test::ControllerHelpers&lt;/code&gt; instead, since the superclass for controller tests was changed to ActionDispatch::IntegrationTest (for more details, see the &lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#integration-tests&#34;&gt;Integration tests&lt;/a&gt; section).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsControllerTest &amp;lt; ActionController::TestCase&#xA;  include Devise::Test::IntegrationHelpers # Rails &amp;gt;= 5&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsControllerTest &amp;lt; ActionController::TestCase&#xA;  include Devise::Test::ControllerHelpers # Rails &amp;lt; 5&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using RSpec, you can put the following inside a file named &lt;code&gt;spec/support/devise.rb&lt;/code&gt; or in your &lt;code&gt;spec/spec_helper.rb&lt;/code&gt; (or &lt;code&gt;spec/rails_helper.rb&lt;/code&gt; if you are using &lt;code&gt;rspec-rails&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include Devise::Test::ControllerHelpers, type: :controller&#xA;  config.include Devise::Test::ControllerHelpers, type: :view&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just be sure that this inclusion is made &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;require &#39;rspec/rails&#39;&lt;/code&gt; directive.&lt;/p&gt; &#xA;&lt;p&gt;Now you are ready to use the &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods on your controller tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;sign_in @user&#xA;sign_in @user, scope: :admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are testing Devise internal controllers or a controller that inherits from Devise&#39;s, you need to tell Devise which mapping should be used before a request. This is necessary because Devise gets this information from the router, but since controller tests do not pass through the router, it needs to be stated explicitly. For example, if you are testing the user scope, simply use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;test &#39;GET new&#39; do&#xA;  # Mimic the router behavior of setting the Devise scope through the env.&#xA;  @request.env[&#39;devise.mapping&#39;] = Devise.mappings[:user]&#xA;&#xA;  # Use the sign_in helper to sign in a fixture `User` record.&#xA;  sign_in users(:alice)&#xA;&#xA;  get :new&#xA;&#xA;  # assert something&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration tests&lt;/h3&gt; &#xA;&lt;p&gt;Integration test helpers are available by including the &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; module.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsTests &amp;lt; ActionDispatch::IntegrationTest&#xA;  include Devise::Test::IntegrationHelpers&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can use the following &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods in your integration tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;sign_in users(:bob)&#xA;sign_in users(:bob), scope: :admin&#xA;&#xA;sign_out :user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RSpec users can include the &lt;code&gt;IntegrationHelpers&lt;/code&gt; module on their &lt;code&gt;:feature&lt;/code&gt; specs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include Devise::Test::IntegrationHelpers, type: :feature&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unlike controller tests, integration tests do not need to supply the &lt;code&gt;devise.mapping&lt;/code&gt; &lt;code&gt;env&lt;/code&gt; value, as the mapping can be inferred by the routes that are executed in your tests.&lt;/p&gt; &#xA;&lt;p&gt;You can read more about testing your Rails 3 - Rails 4 controllers with RSpec in the wiki:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&#34;&gt;https://github.com/heartcombo/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OmniAuth&lt;/h3&gt; &#xA;&lt;p&gt;Devise comes with OmniAuth support out of the box to authenticate with other providers. To use it, simply specify your OmniAuth configuration in &lt;code&gt;config/initializers/devise.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.omniauth :github, &#39;APP_ID&#39;, &#39;APP_SECRET&#39;, scope: &#39;user,public_repo&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can read more about OmniAuth support in the wiki:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview&#34;&gt;https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuring multiple models&lt;/h3&gt; &#xA;&lt;p&gt;Devise allows you to set up as many Devise models as you want. If you want to have an Admin model with just authentication and timeout features, in addition to the User model above, just run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Create a migration with the required fields&#xA;create_table :admins do |t|&#xA;  t.string :email&#xA;  t.string :encrypted_password&#xA;  t.timestamps null: false&#xA;end&#xA;&#xA;# Inside your Admin model&#xA;devise :database_authenticatable, :timeoutable&#xA;&#xA;# Inside your routes&#xA;devise_for :admins&#xA;&#xA;# Inside your protected controller&#xA;before_action :authenticate_admin!&#xA;&#xA;# Inside your controllers and views&#xA;admin_signed_in?&#xA;current_admin&#xA;admin_session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can simply run the Devise generator.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that those models will have completely different routes. They &lt;strong&gt;do not&lt;/strong&gt; and &lt;strong&gt;cannot&lt;/strong&gt; share the same controller for sign in, sign out and so on. In case you want to have different roles sharing the same actions, we recommend that you use a role-based approach, by either providing a role column or using a dedicated gem for authorization.&lt;/p&gt; &#xA;&lt;h3&gt;ActiveJob Integration&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Rails 4.2 and ActiveJob to deliver ActionMailer messages in the background through a queuing back-end, you can send Devise emails through your existing queue by overriding the &lt;code&gt;send_devise_notification&lt;/code&gt; method in your model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def send_devise_notification(notification, *args)&#xA;  devise_mailer.send(notification, self, *args).deliver_later&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Password reset tokens and Rails logs&lt;/h3&gt; &#xA;&lt;p&gt;If you enable the &lt;a href=&#34;http://rubydoc.info/github/heartcombo/devise/main/Devise/Models/Recoverable&#34;&gt;Recoverable&lt;/a&gt; module, note that a stolen password reset token could give an attacker access to your application. Devise takes effort to generate random, secure tokens, and stores only token digests in the database, never plaintext. However the default logging behavior in Rails can cause plaintext tokens to leak into log files:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Action Mailer logs the entire contents of all outgoing emails to the DEBUG level. Password reset tokens delivered to users in email will be leaked.&lt;/li&gt; &#xA; &lt;li&gt;Active Job logs all arguments to every enqueued job at the INFO level. If you configure Devise to use &lt;code&gt;deliver_later&lt;/code&gt; to send password reset emails, password reset tokens will be leaked.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Rails sets the production logger level to INFO by default. Consider changing your production logger level to WARN if you wish to prevent tokens from being leaked into your logs. In &lt;code&gt;config/environments/production.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.log_level = :warn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other ORMs&lt;/h3&gt; &#xA;&lt;p&gt;Devise supports ActiveRecord (default) and Mongoid. To select another ORM, simply require it in the initializer file.&lt;/p&gt; &#xA;&lt;h3&gt;Rails API Mode&lt;/h3&gt; &#xA;&lt;p&gt;Rails 5+ has a built-in &lt;a href=&#34;https://edgeguides.rubyonrails.org/api_app.html&#34;&gt;API Mode&lt;/a&gt; which optimizes Rails for use as an API (only). Devise is &lt;em&gt;somewhat&lt;/em&gt; able to handle applications that are built in this mode without additional modifications in the sense that it should not raise exceptions and the like. But some issues may still arise during &lt;code&gt;development&lt;/code&gt;/&lt;code&gt;testing&lt;/code&gt;, as we still don&#39;t know the full extent of this compatibility. (For more information, see &lt;a href=&#34;https://github.com/heartcombo/devise/issues/4947/&#34;&gt;issue #4947&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h4&gt;Supported Authentication Strategies&lt;/h4&gt; &#xA;&lt;p&gt;API-only applications don&#39;t support browser-based authentication via cookies, which is devise&#39;s default. Yet, devise can still provide authentication out of the box in those cases with the &lt;code&gt;http_authenticatable&lt;/code&gt; strategy, which uses HTTP Basic Auth and authenticates the user on each request. (For more info, see this wiki article for &lt;a href=&#34;https://github.com/heartcombo/devise/wiki/How-To:-Use-HTTP-Basic-Authentication&#34;&gt;How To: Use HTTP Basic Authentication&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;The devise default for HTTP Auth is disabled, so it will need to be enabled in the devise initializer for the database strategy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.http_authenticatable = [:database]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This restriction does not limit you from implementing custom warden strategies, either in your application or via gem-based extensions for devise. A common authentication strategy for APIs is token-based authentication. For more information on extending devise to support this type of authentication and others, see the wiki article for &lt;a href=&#34;https://github.com/heartcombo/devise/wiki/How-To:-Simple-Token-Authentication-Example#alternatives&#34;&gt;Simple Token Authentication Examples and alternatives&lt;/a&gt; or this blog post on &lt;a href=&#34;http://blog.plataformatec.com.br/2019/01/custom-authentication-methods-with-devise/&#34;&gt;Custom authentication methods with Devise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Testing&lt;/h4&gt; &#xA;&lt;p&gt;API Mode changes the order of the middleware stack, and this can cause problems for &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt;. This problem usually surfaces as an &lt;code&gt;undefined method `[]=&#39; for nil:NilClass&lt;/code&gt; error when using integration test helpers, such as &lt;code&gt;#sign_in&lt;/code&gt;. The solution is simply to reorder the middlewares by adding the following to test.rb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rails.application.config.middleware.insert_before Warden::Manager, ActionDispatch::Cookies&#xA;Rails.application.config.middleware.insert_before Warden::Manager, ActionDispatch::Session::CookieStore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a deeper understanding of this, review &lt;a href=&#34;https://github.com/heartcombo/devise/issues/4696&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally be mindful that without views supported, some email-based flows from Confirmable, Recoverable and Lockable are not supported directly at this time.&lt;/p&gt; &#xA;&lt;h2&gt;Additional information&lt;/h2&gt; &#xA;&lt;h3&gt;Warden&lt;/h3&gt; &#xA;&lt;p&gt;Devise is based on Warden, which is a general Rack authentication framework created by Daniel Neighman. We encourage you to read more about Warden here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wardencommunity/warden&#34;&gt;https://github.com/wardencommunity/warden&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;We have a long list of valued contributors. Check them all at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/graphs/contributors&#34;&gt;https://github.com/heartcombo/devise/graphs/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License. Copyright 2020 Rafael França, Leonardo Tegon, Carlos Antônio da Silva. Copyright 2009-2019 Plataformatec.&lt;/p&gt; &#xA;&lt;p&gt;The Devise logo is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rack/rack</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/rack/rack</id>
    <link href="https://github.com/rack/rack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modular Ruby web server interface.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;= \Rack, a modular Ruby webserver interface&lt;/p&gt; &#xA;&lt;p&gt;{&lt;img src=&#34;https://rack.github.io/logo.png&#34; width=&#34;400&#34; alt=&#34;rack powers web applications&#34;&gt;}[https://rack.github.io/]&lt;/p&gt; &#xA;&lt;p&gt;{&lt;img src=&#34;https://github.com/rack/rack/workflows/Development/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions status&#34;&gt;}[https://github.com/rack/rack/actions?query=workflow%3ADevelopment] {&lt;img src=&#34;https://badge.fury.io/rb/rack.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;}[http://badge.fury.io/rb/rack] {&lt;img src=&#34;https://api.dependabot.com/badges/compatibility_score?dependency-name=rack&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver&#34; alt=&#34;SemVer Stability&#34;&gt;}[https://dependabot.com/compatibility-score.html?dependency-name=rack&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver] {&lt;img src=&#34;http://inch-ci.org/github/rack/rack.svg?branch=master&#34; alt=&#34;Inline docs&#34;&gt;}[http://inch-ci.org/github/rack/rack]&lt;/p&gt; &#xA;&lt;p&gt;\Rack provides a minimal, modular, and adaptable interface for developing web applications in Ruby. By wrapping HTTP requests and responses in the simplest way possible, it unifies and distills the API for web servers, web frameworks, and software in between (the so-called middleware) into a single method call.&lt;/p&gt; &#xA;&lt;p&gt;The exact details of this are described in the {\Rack specification}[rdoc-ref:SPEC.rdoc], which all \Rack applications should conform to.&lt;/p&gt; &#xA;&lt;p&gt;== Supported web servers&lt;/p&gt; &#xA;&lt;p&gt;The included &lt;em&gt;handlers&lt;/em&gt; can connect these web servers to \Rack:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WEBrick[https://github.com/ruby/webrick]&lt;/li&gt; &#xA; &lt;li&gt;CGI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These web servers include \Rack handlers in their distributions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Agoo[https://github.com/ohler55/agoo]&lt;/li&gt; &#xA; &lt;li&gt;Falcon[https://github.com/socketry/falcon]&lt;/li&gt; &#xA; &lt;li&gt;Iodine[https://github.com/boazsegev/iodine]&lt;/li&gt; &#xA; &lt;li&gt;{NGINX Unit}[https://unit.nginx.org/]&lt;/li&gt; &#xA; &lt;li&gt;{Phusion Passenger}[https://www.phusionpassenger.com/] (which is mod_rack for Apache and for nginx)&lt;/li&gt; &#xA; &lt;li&gt;Puma[https://puma.io/]&lt;/li&gt; &#xA; &lt;li&gt;Thin[https://rubygems.org/gems/thin]&lt;/li&gt; &#xA; &lt;li&gt;Unicorn[https://yhbt.net/unicorn/]&lt;/li&gt; &#xA; &lt;li&gt;uWSGI[https://uwsgi-docs.readthedocs.io/en/latest/]&lt;/li&gt; &#xA; &lt;li&gt;Lamby[https://lamby.custominktech.com] (for AWS Lambda)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any valid \Rack app will run the same on all these handlers, without changing anything.&lt;/p&gt; &#xA;&lt;p&gt;== Supported web frameworks&lt;/p&gt; &#xA;&lt;p&gt;These frameworks and many others support the \Rack API:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Camping[http://www.ruby-camping.com/]&lt;/li&gt; &#xA; &lt;li&gt;Coset[http://leahneukirchen.org/repos/coset/]&lt;/li&gt; &#xA; &lt;li&gt;Hanami[https://hanamirb.org/]&lt;/li&gt; &#xA; &lt;li&gt;Padrino[http://padrinorb.com/]&lt;/li&gt; &#xA; &lt;li&gt;Ramaze[http://ramaze.net/]&lt;/li&gt; &#xA; &lt;li&gt;Roda[https://github.com/jeremyevans/roda]&lt;/li&gt; &#xA; &lt;li&gt;{Ruby on Rails}[https://rubyonrails.org/]&lt;/li&gt; &#xA; &lt;li&gt;Rum[https://github.com/leahneukirchen/rum]&lt;/li&gt; &#xA; &lt;li&gt;Sinatra[http://sinatrarb.com/]&lt;/li&gt; &#xA; &lt;li&gt;Utopia[https://github.com/socketry/utopia]&lt;/li&gt; &#xA; &lt;li&gt;WABuR[https://github.com/ohler55/wabur]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;== Available middleware shipped with \Rack&lt;/p&gt; &#xA;&lt;p&gt;Between the server and the framework, \Rack can be customized to your applications needs using middleware. \Rack itself ships with the following middleware:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rack::Chunked, for streaming responses using chunked encoding.&lt;/li&gt; &#xA; &lt;li&gt;Rack::CommonLogger, for creating Apache-style logfiles.&lt;/li&gt; &#xA; &lt;li&gt;Rack::ConditionalGet, for returning not modified responses when the response has not changed.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Config, for modifying the environment before processing the request.&lt;/li&gt; &#xA; &lt;li&gt;Rack::ContentLength, for setting content-length header based on body size.&lt;/li&gt; &#xA; &lt;li&gt;Rack::ContentType, for setting default content-type header for responses.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Deflater, for compressing responses with gzip.&lt;/li&gt; &#xA; &lt;li&gt;Rack::ETag, for setting ETag header on string bodies.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Events, for providing easy hooks when a request is received and when the response is sent.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Files, for serving static files.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Head, for returning an empty body for HEAD requests.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Lint, for checking conformance to the \Rack API.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Lock, for serializing requests using a mutex.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Logger, for setting a logger to handle logging errors.&lt;/li&gt; &#xA; &lt;li&gt;Rack::MethodOverride, for modifying the request method based on a submitted parameter.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Recursive, for including data from other paths in the application, and for performing internal redirects.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Reloader, for reloading files if they have been modified.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Runtime, for including a response header with the time taken to process the request.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Sendfile, for working with web servers that can use optimized file serving for file system paths.&lt;/li&gt; &#xA; &lt;li&gt;Rack::ShowException, for catching unhandled exceptions and presenting them in a nice and helpful way with clickable backtrace.&lt;/li&gt; &#xA; &lt;li&gt;Rack::ShowStatus, for using nice error pages for empty client error responses.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Static, for more configurable serving of static files.&lt;/li&gt; &#xA; &lt;li&gt;Rack::TempfileReaper, for removing temporary files creating during a request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All these components use the same interface, which is described in detail in the \Rack specification. These optional components can be used in any way you wish.&lt;/p&gt; &#xA;&lt;p&gt;== Convenience&lt;/p&gt; &#xA;&lt;p&gt;If you want to develop outside of existing frameworks, implement your own ones, or develop middleware, \Rack provides many helpers to create \Rack applications quickly and without doing the same web stuff all over:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rack::Request, which also provides query string parsing and multipart handling.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Response, for convenient generation of HTTP replies and cookie handling.&lt;/li&gt; &#xA; &lt;li&gt;Rack::MockRequest and Rack::MockResponse for efficient and quick testing of \Rack application without real HTTP round-trips.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Cascade, for trying additional \Rack applications if an application returns a not found or method not supported response.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Directory, for serving files under a given directory, with directory indexes.&lt;/li&gt; &#xA; &lt;li&gt;Rack::MediaType, for parsing content-type headers.&lt;/li&gt; &#xA; &lt;li&gt;Rack::Mime, for determining content-type based on file extension.&lt;/li&gt; &#xA; &lt;li&gt;Rack::RewindableInput, for making any IO object rewindable, using a temporary file buffer.&lt;/li&gt; &#xA; &lt;li&gt;Rack::URLMap, to route to multiple applications inside the same process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;== rack-contrib&lt;/p&gt; &#xA;&lt;p&gt;The plethora of useful middleware created the need for a project that collects fresh \Rack middleware. rack-contrib includes a variety of add-on components for \Rack and it is easy to contribute new modules.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rack/rack-contrib&#34;&gt;https://github.com/rack/rack-contrib&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;== rackup&lt;/p&gt; &#xA;&lt;p&gt;rackup is a useful tool for running \Rack applications, which uses the Rack::Builder DSL to configure middleware and build up applications easily.&lt;/p&gt; &#xA;&lt;p&gt;rackup automatically figures out the environment it is run in, and runs your application as FastCGI, CGI, or WEBrick---all from the same configuration.&lt;/p&gt; &#xA;&lt;p&gt;== Quick start&lt;/p&gt; &#xA;&lt;p&gt;Try the lobster!&lt;/p&gt; &#xA;&lt;p&gt;Either with the embedded WEBrick starter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ruby -Ilib lib/rack/lobster.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with rackup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/rackup -Ilib example/lobster.ru&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the lobster is found at &lt;a href=&#34;http://localhost:9292&#34;&gt;http://localhost:9292&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;== Installing with RubyGems&lt;/p&gt; &#xA;&lt;p&gt;A Gem of \Rack is available at {rubygems.org}[https://rubygems.org/gems/rack]. You can install it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install rack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;== Usage&lt;/p&gt; &#xA;&lt;p&gt;You should require the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;require &#39;rack&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;\Rack uses autoload to automatically load other files \Rack ships with on demand, so you should not need require paths under +rack+. If you require paths under +rack+ without requiring +rack+ itself, things may not work correctly.&lt;/p&gt; &#xA;&lt;p&gt;== Configuration&lt;/p&gt; &#xA;&lt;p&gt;Several parameters can be modified on Rack::Utils to configure \Rack behaviour.&lt;/p&gt; &#xA;&lt;p&gt;e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Rack::Utils.param_depth_limit = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;=== param_depth_limit&lt;/p&gt; &#xA;&lt;p&gt;The maximum amount of nesting allowed in parameters. For example, if set to 3, this query string would be allowed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;?a[b][c]=d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;but this query string would not be allowed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;?a[b][c][d]=e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Limiting the depth prevents a possible stack overflow when parsing parameters.&lt;/p&gt; &#xA;&lt;p&gt;Defaults to 32.&lt;/p&gt; &#xA;&lt;p&gt;=== multipart_part_limit&lt;/p&gt; &#xA;&lt;p&gt;The maximum number of parts a request can contain. Accepting too many part can lead to the server running out of file handles.&lt;/p&gt; &#xA;&lt;p&gt;The default is 128, which means that a single request can&#39;t upload more than 128 files at once.&lt;/p&gt; &#xA;&lt;p&gt;Set to 0 for no limit.&lt;/p&gt; &#xA;&lt;p&gt;Can also be set via the +RACK_MULTIPART_PART_LIMIT+ environment variable.&lt;/p&gt; &#xA;&lt;p&gt;=== key_space_limit&lt;/p&gt; &#xA;&lt;p&gt;No longer has an effect, deprecated.&lt;/p&gt; &#xA;&lt;p&gt;== Changelog&lt;/p&gt; &#xA;&lt;p&gt;See {CHANGELOG.md}[https://github.com/rack/rack/blob/master/CHANGELOG.md].&lt;/p&gt; &#xA;&lt;p&gt;== Contributing&lt;/p&gt; &#xA;&lt;p&gt;See {CONTRIBUTING.md}[https://github.com/rack/rack/blob/master/CONTRIBUTING.md].&lt;/p&gt; &#xA;&lt;p&gt;== Contact&lt;/p&gt; &#xA;&lt;p&gt;Please post bugs, suggestions and patches to the bug tracker at {issues}[https://github.com/rack/rack/issues].&lt;/p&gt; &#xA;&lt;p&gt;Please post security related bugs and suggestions to the core team at &lt;a href=&#34;https://groups.google.com/forum/#!forum/rack-core&#34;&gt;https://groups.google.com/forum/#!forum/rack-core&lt;/a&gt; or &lt;a href=&#34;mailto:rack-core@googlegroups.com&#34;&gt;rack-core@googlegroups.com&lt;/a&gt;. This list is not public. Due to wide usage of the library, it is strongly preferred that we manage timing in order to provide viable patches at the time of disclosure. Your assistance in this matter is greatly appreciated.&lt;/p&gt; &#xA;&lt;p&gt;Mailing list archives are available at &lt;a href=&#34;https://groups.google.com/forum/#!forum/rack-devel&#34;&gt;https://groups.google.com/forum/#!forum/rack-devel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Git repository (send Git patches to the mailing list):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rack/rack&#34;&gt;https://github.com/rack/rack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You are also welcome to join the #rack channel on irc.freenode.net.&lt;/p&gt; &#xA;&lt;p&gt;== Thanks&lt;/p&gt; &#xA;&lt;p&gt;The \Rack Core Team, consisting of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Aaron Patterson (tenderlove[https://github.com/tenderlove])&lt;/li&gt; &#xA; &lt;li&gt;Samuel Williams (ioquatix[https://github.com/ioquatix])&lt;/li&gt; &#xA; &lt;li&gt;Jeremy Evans (jeremyevans[https://github.com/jeremyevans])&lt;/li&gt; &#xA; &lt;li&gt;Eileen Uchitelle (eileencodes[https://github.com/eileencodes])&lt;/li&gt; &#xA; &lt;li&gt;Matthew Draper (matthewd[https://github.com/matthewd])&lt;/li&gt; &#xA; &lt;li&gt;Rafael França (rafaelfranca[https://github.com/rafaelfranca])&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and the \Rack Alumni&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ryan Tomayko (rtomayko[https://github.com/rtomayko])&lt;/li&gt; &#xA; &lt;li&gt;Scytrin dai Kinthra (scytrin[https://github.com/scytrin])&lt;/li&gt; &#xA; &lt;li&gt;Leah Neukirchen (leahneukirchen[https://github.com/leahneukirchen])&lt;/li&gt; &#xA; &lt;li&gt;James Tucker (raggi[https://github.com/raggi])&lt;/li&gt; &#xA; &lt;li&gt;Josh Peek (josh[https://github.com/josh])&lt;/li&gt; &#xA; &lt;li&gt;José Valim (josevalim[https://github.com/josevalim])&lt;/li&gt; &#xA; &lt;li&gt;Michael Fellinger (manveru[https://github.com/manveru])&lt;/li&gt; &#xA; &lt;li&gt;Santiago Pastorino (spastorino[https://github.com/spastorino])&lt;/li&gt; &#xA; &lt;li&gt;Konstantin Haase (rkh[https://github.com/rkh])&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;would like to thank:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adrian Madrid, for the LiteSpeed handler.&lt;/li&gt; &#xA; &lt;li&gt;Christoffer Sawicki, for the first Rails adapter and Rack::Deflater.&lt;/li&gt; &#xA; &lt;li&gt;Tim Fletcher, for the HTTP authentication code.&lt;/li&gt; &#xA; &lt;li&gt;Luc Heinrich for the Cookie sessions, the static file handler and bugfixes.&lt;/li&gt; &#xA; &lt;li&gt;Armin Ronacher, for the logo and racktools.&lt;/li&gt; &#xA; &lt;li&gt;Alex Beregszaszi, Alexander Kahn, Anil Wadghule, Aredridel, Ben Alpert, Dan Kubb, Daniel Roethlisberger, Matt Todd, Tom Robinson, Phil Hagelberg, S. Brent Faulkner, Bosko Milekic, Daniel Rodríguez Troitiño, Genki Takiuchi, Geoffrey Grosenbach, Julien Sanchez, Kamal Fariz Mahyuddin, Masayoshi Takahashi, Patrick Aljordm, Mig, Kazuhiro Nishiyama, Jon Bardin, Konstantin Haase, Larry Siden, Matias Korhonen, Sam Ruby, Simon Chiang, Tim Connor, Timur Batyrshin, and Zach Brock for bug fixing and other improvements.&lt;/li&gt; &#xA; &lt;li&gt;Eric Wong, Hongli Lai, Jeremy Kemper for their continuous support and API improvements.&lt;/li&gt; &#xA; &lt;li&gt;Yehuda Katz and Carl Lerche for refactoring rackup.&lt;/li&gt; &#xA; &lt;li&gt;Brian Candler, for Rack::ContentType.&lt;/li&gt; &#xA; &lt;li&gt;Graham Batty, for improved handler loading.&lt;/li&gt; &#xA; &lt;li&gt;Stephen Bannasch, for bug reports and documentation.&lt;/li&gt; &#xA; &lt;li&gt;Gary Wright, for proposing a better Rack::Response interface.&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Buch, for improvements regarding Rack::Response.&lt;/li&gt; &#xA; &lt;li&gt;Armin Röhrl, for tracking down bugs in the Cookie generator.&lt;/li&gt; &#xA; &lt;li&gt;Alexander Kellett for testing the Gem and reviewing the announcement.&lt;/li&gt; &#xA; &lt;li&gt;Marcus Rückert, for help with configuring and debugging lighttpd.&lt;/li&gt; &#xA; &lt;li&gt;The WSGI team for the well-done and documented work they&#39;ve done and \Rack builds up on.&lt;/li&gt; &#xA; &lt;li&gt;All bug reporters and patch contributors not mentioned above.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;== Links&lt;/p&gt; &#xA;&lt;p&gt;\Rack:: &lt;a href=&#34;https://rack.github.io/&#34;&gt;https://rack.github.io/&lt;/a&gt; Official \Rack repositories:: &lt;a href=&#34;https://github.com/rack&#34;&gt;https://github.com/rack&lt;/a&gt; \Rack Bug Tracking:: &lt;a href=&#34;https://github.com/rack/rack/issues&#34;&gt;https://github.com/rack/rack/issues&lt;/a&gt; rack-devel mailing list:: &lt;a href=&#34;https://groups.google.com/forum/#!forum/rack-devel&#34;&gt;https://groups.google.com/forum/#!forum/rack-devel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;== License&lt;/p&gt; &#xA;&lt;p&gt;\Rack is released under the {MIT License}[https://opensource.org/licenses/MIT].&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rapid7/metasploit-framework</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/rapid7/metasploit-framework</id>
    <link href="https://github.com/rapid7/metasploit-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit &lt;a href=&#34;https://travis-ci.org/rapid7/metasploit-framework&#34;&gt;&lt;img src=&#34;https://travis-ci.org/rapid7/metasploit-framework.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/metasploitframework/metasploit-framework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/metasploitframework/metasploit-framework.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The Metasploit Framework is released under a BSD-style license. See &lt;a href=&#34;https://raw.githubusercontent.com/rapid7/metasploit-framework/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of this software is available from: &lt;a href=&#34;https://metasploit.com&#34;&gt;https://metasploit.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bug tracking and development information can be found at: &lt;a href=&#34;https://github.com/rapid7/metasploit-framework&#34;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;New bugs and feature requests should be directed to: &lt;a href=&#34;https://r-7.co/MSF-BUGv1&#34;&gt;https://r-7.co/MSF-BUGv1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;API documentation for writing modules can be found at: &lt;a href=&#34;https://rapid7.github.io/metasploit-framework/api&#34;&gt;https://rapid7.github.io/metasploit-framework/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Questions and suggestions can be sent to: Freenode IRC channel or e-mail the metasploit-hackers mailing list&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Generally, you should use &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers&#34;&gt;the free installer&lt;/a&gt;, which contains all of the dependencies and will get you up and running with a few clicks. See the &lt;a href=&#34;https://r-7.co/MSF-DEV&#34;&gt;Dev Environment Setup&lt;/a&gt; if you&#39;d like to deal with dependencies on your own.&lt;/p&gt; &#xA;&lt;h2&gt;Using Metasploit&lt;/h2&gt; &#xA;&lt;p&gt;Metasploit can do all sorts of things. The first thing you&#39;ll want to do is start &lt;code&gt;msfconsole&lt;/code&gt;, but after that, you&#39;ll probably be best served by reading &lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/&#34; title=&#34;Metasploit Unleashed&#34;&gt;Metasploit Unleashed&lt;/a&gt;, the &lt;a href=&#34;https://metasploit.github.io&#34;&gt;great community resources&lt;/a&gt;, or the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Setting-Up-a-Metasploit-Development-Environment&#34; title=&#34;Metasploit Development Environment Setup&#34;&gt;Dev Environment Setup&lt;/a&gt; guide on GitHub, which will walk you through the whole process from installing all the dependencies, to cloning the repository, and finally to submitting a pull request. For slightly more information, see &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fastlane/fastlane</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/fastlane/fastlane</id>
    <link href="https://github.com/fastlane/fastlane" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 The easiest way to automate building and releasing your iOS and Android apps&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png&#34;&gt; &lt;img src=&#34;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png?raw=true&#34; alt=&#34;fastlane Logo&#34; width=&#34;500&#34;&gt; &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/FastlaneTools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contact-@FastlaneTools-blue.svg?style=flat&#34; alt=&#34;Twitter: @FastlaneTools&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/fastlane&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/fastlane.svg?style=flat&#34; alt=&#34;Gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/fastlane&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/fastlane.json&amp;amp;query=$.versions.stable&amp;amp;label=homebrew&#34; alt=&#34;Homebrew&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/fastlane/fastlane&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/fastlane/fastlane/master.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs welcome!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; is a tool for iOS and Android developers to automate tedious tasks like generating screenshots, dealing with provisioning profiles, and releasing your application.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; ✨ All fastlane docs were moved to &lt;a href=&#34;https://docs.fastlane.tools/&#34;&gt;docs.fastlane.tools&lt;/a&gt; ✨ &lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;Before submitting a new GitHub issue, please make sure to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://docs.fastlane.tools&#34;&gt;docs.fastlane.tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search for &lt;a href=&#34;https://github.com/fastlane/fastlane/issues&#34;&gt;existing GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the above doesn&#39;t help, please &lt;a href=&#34;https://github.com/fastlane/fastlane/issues&#34;&gt;submit an issue&lt;/a&gt; on GitHub and provide information about your setup, in particular the output of the &lt;code&gt;fastlane env&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to report a regression in &lt;em&gt;fastlane&lt;/em&gt; (something that has worked before, but broke with a new release), please mark your issue title as such using &lt;code&gt;[Regression] Your title here&lt;/code&gt;. This enables us to quickly detect and fix regressions.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;fastlane&lt;/em&gt; team&lt;/h2&gt; &#xA;&lt;!-- This table is regenerated and resorted on each release --&gt; &#xA;&lt;table id=&#34;team&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;olivier-halligon&#34;&gt; &lt;a href=&#34;https://github.com/AliSoftware&#34;&gt; &lt;img src=&#34;https://github.com/AliSoftware.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/aligatr&#34;&gt;Olivier Halligon&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;maksym-grebenets&#34;&gt; &lt;a href=&#34;https://github.com/mgrebenets&#34;&gt; &lt;img src=&#34;https://github.com/mgrebenets.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mgrebenets&#34;&gt;Maksym Grebenets&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;iulian-onofrei&#34;&gt; &lt;a href=&#34;https://github.com/revolter&#34;&gt; &lt;img src=&#34;https://github.com/revolter.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Revolt666&#34;&gt;Iulian Onofrei&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;satoshi-namai&#34;&gt; &lt;a href=&#34;https://github.com/ainame&#34;&gt; &lt;img src=&#34;https://github.com/ainame.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ainame&#34;&gt;Satoshi Namai&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;stefan-natchev&#34;&gt; &lt;a href=&#34;https://github.com/snatchev&#34;&gt; &lt;img src=&#34;https://github.com/snatchev.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/snatchev&#34;&gt;Stefan Natchev&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;jimmy-dee&#34;&gt; &lt;a href=&#34;https://github.com/jdee&#34;&gt; &lt;img src=&#34;https://github.com/jdee.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;Jimmy Dee&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;andrew-mcburney&#34;&gt; &lt;a href=&#34;https://github.com/armcburney&#34;&gt; &lt;img src=&#34;https://github.com/armcburney.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/armcburney&#34;&gt;Andrew McBurney&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;luka-mirosevic&#34;&gt; &lt;a href=&#34;https://github.com/lmirosevic&#34;&gt; &lt;img src=&#34;https://github.com/lmirosevic.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/lmirosevic&#34;&gt;Luka Mirosevic&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;jorge-revuelta-h&#34;&gt; &lt;a href=&#34;https://github.com/minuscorp&#34;&gt; &lt;img src=&#34;https://github.com/minuscorp.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/minuscorp&#34;&gt;Jorge Revuelta H&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;aaron-brager&#34;&gt; &lt;a href=&#34;https://github.com/getaaron&#34;&gt; &lt;img src=&#34;https://github.com/getaaron.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/getaaron&#34;&gt;Aaron Brager&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;joshua-liebowitz&#34;&gt; &lt;a href=&#34;https://github.com/taquitos&#34;&gt; &lt;img src=&#34;https://github.com/taquitos.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/taquitos&#34;&gt;Joshua Liebowitz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;danielle-tomlinson&#34;&gt; &lt;a href=&#34;https://github.com/endocrimes&#34;&gt; &lt;img src=&#34;https://github.com/endocrimes.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/endocrimes&#34;&gt;Danielle Tomlinson&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;jérôme-lacoste&#34;&gt; &lt;a href=&#34;https://github.com/lacostej&#34;&gt; &lt;img src=&#34;https://github.com/lacostej.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/lacostej&#34;&gt;Jérôme Lacoste&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;josh-holtz&#34;&gt; &lt;a href=&#34;https://github.com/joshdholtz&#34;&gt; &lt;img src=&#34;https://github.com/joshdholtz.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/joshdholtz&#34;&gt;Josh Holtz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;jan-piotrowski&#34;&gt; &lt;a href=&#34;https://github.com/janpio&#34;&gt; &lt;img src=&#34;https://github.com/janpio.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Sujan&#34;&gt;Jan Piotrowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;max-ott&#34;&gt; &lt;a href=&#34;https://github.com/max-ott&#34;&gt; &lt;img src=&#34;https://github.com/max-ott.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ott_max&#34;&gt;Max Ott&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;daniel-jankowski&#34;&gt; &lt;a href=&#34;https://github.com/mollyIV&#34;&gt; &lt;img src=&#34;https://github.com/mollyIV.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mollyIV&#34;&gt;Daniel Jankowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;roger-oba&#34;&gt; &lt;a href=&#34;https://github.com/rogerluan&#34;&gt; &lt;img src=&#34;https://github.com/rogerluan.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/rogerluan_&#34;&gt;Roger Oba&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;helmut-januschka&#34;&gt; &lt;a href=&#34;https://github.com/hjanuschka&#34;&gt; &lt;img src=&#34;https://github.com/hjanuschka.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/hjanuschka&#34;&gt;Helmut Januschka&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;fumiya-nakamura&#34;&gt; &lt;a href=&#34;https://github.com/nafu&#34;&gt; &lt;img src=&#34;https://github.com/nafu.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/nafu003&#34;&gt;Fumiya Nakamura&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;łukasz-grabowski&#34;&gt; &lt;a href=&#34;https://github.com/lucgrabowski&#34;&gt; &lt;img src=&#34;https://github.com/lucgrabowski.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;Łukasz Grabowski&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;manu-wallner&#34;&gt; &lt;a href=&#34;https://github.com/milch&#34;&gt; &lt;img src=&#34;https://github.com/milch.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/acrooow&#34;&gt;Manu Wallner&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;matthew-ellis&#34;&gt; &lt;a href=&#34;https://github.com/matthewellis&#34;&gt; &lt;img src=&#34;https://github.com/matthewellis.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mellis1995&#34;&gt;Matthew Ellis&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;manish-rathi&#34;&gt; &lt;a href=&#34;https://github.com/crazymanish&#34;&gt; &lt;img src=&#34;https://github.com/crazymanish.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/iammanishrathi&#34;&gt;Manish Rathi&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;kohki-miki&#34;&gt; &lt;a href=&#34;https://github.com/giginet&#34;&gt; &lt;img src=&#34;https://github.com/giginet.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/giginet&#34;&gt;Kohki Miki&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;felix-krause&#34;&gt; &lt;a href=&#34;https://github.com/KrauseFx&#34;&gt; &lt;img src=&#34;https://github.com/KrauseFx.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/KrauseFx&#34;&gt;Felix Krause&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Special thanks to all &lt;a href=&#34;https://github.com/fastlane/fastlane/graphs/contributors&#34;&gt;contributors&lt;/a&gt; for extending and improving &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to &lt;em&gt;fastlane&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/fastlane/fastlane/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Help us keep &lt;em&gt;fastlane&lt;/em&gt; open and inclusive. Please read and follow our &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Metrics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The number of &lt;em&gt;fastlane&lt;/em&gt; runs&lt;/li&gt; &#xA; &lt;li&gt;A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of &lt;em&gt;fastlane&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can easily opt-out of metrics collection by adding &lt;code&gt;opt_out_usage&lt;/code&gt; at the top of your &lt;code&gt;Fastfile&lt;/code&gt; or by setting the environment variable &lt;code&gt;FASTLANE_OPT_OUT_USAGE&lt;/code&gt;. &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane_core/lib/fastlane_core/analytics&#34;&gt;Check out the metrics code on GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license. See the &lt;a href=&#34;https://raw.githubusercontent.com/fastlane/fastlane/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This project and all fastlane tools are in no way affiliated with Apple Inc. This project is open source under the MIT license, which means you have full access to the source code and can modify it to fit your own needs. All fastlane tools run on your own computer or server, so your credentials or other sensitive information will never leave your own computer. You are responsible for how you use fastlane tools.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; ✨ All fastlane docs were moved to &lt;a href=&#34;https://docs.fastlane.tools/&#34;&gt;docs.fastlane.tools&lt;/a&gt; ✨ &lt;/h2&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/vagrant</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/hashicorp/vagrant</id>
    <link href="https://github.com/hashicorp/vagrant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vagrant&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;https://www.vagrantup.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/hashicorp/vagrant&#34;&gt;https://github.com/hashicorp/vagrant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HashiCorp Discuss: &lt;a href=&#34;https://discuss.hashicorp.com/c/vagrant/24&#34;&gt;https://discuss.hashicorp.com/c/vagrant/24&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt; &#xA;&lt;p&gt;Development environments managed by Vagrant can run on local virtualized platforms such as VirtualBox or VMware, in the cloud via AWS or OpenStack, or in containers such as with Docker or raw LXC.&lt;/p&gt; &#xA;&lt;p&gt;Vagrant provides the framework and configuration format to create and manage complete portable development environments. These development environments can live on your computer or in the cloud, and are portable between Windows, Mac OS X, and Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Package dependencies: Vagrant requires &lt;code&gt;bsdtar&lt;/code&gt; and &lt;code&gt;curl&lt;/code&gt; to be available on your system PATH to run successfully.&lt;/p&gt; &#xA;&lt;p&gt;For the quick-start, we&#39;ll bring up a development machine on &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; because it is free and works on all major platforms. Vagrant can, however, work with almost any system such as &lt;a href=&#34;https://www.openstack.org/&#34;&gt;OpenStack&lt;/a&gt;, &lt;a href=&#34;https://www.vmware.com/&#34;&gt;VMware&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/&#34;&gt;Docker&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;First, make sure your development machine has &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; installed. After this, &lt;a href=&#34;https://www.vagrantup.com/downloads.html&#34;&gt;download and install the appropriate Vagrant package for your OS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build your first virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vagrant init hashicorp/bionic64&#xA;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The above &lt;code&gt;vagrant up&lt;/code&gt; command will also trigger Vagrant to download the &lt;code&gt;bionic64&lt;/code&gt; box via the specified URL. Vagrant only does this if it detects that the box doesn&#39;t already exist on your system.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started Guide&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to build a fully functional development environment, follow the &lt;a href=&#34;https://www.vagrantup.com/docs/getting-started&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing from Source&lt;/h2&gt; &#xA;&lt;p&gt;If you want the bleeding edge version of Vagrant, we try to keep main pretty stable and you&#39;re welcome to give it a shot. Please review the installation page &lt;a href=&#34;https://www.vagrantup.com/docs/installation/source&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Vagrant&lt;/h2&gt; &#xA;&lt;p&gt;Please take time to read the &lt;a href=&#34;https://www.hashicorp.com/community-guidelines&#34;&gt;HashiCorp Community Guidelines&lt;/a&gt; and the &lt;a href=&#34;https://github.com/hashicorp/vagrant/raw/main/.github/CONTRIBUTING.md&#34;&gt;Vagrant Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then you&#39;re good to go!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thoughtbot/shoulda-matchers</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/thoughtbot/shoulda-matchers</id>
    <link href="https://github.com/thoughtbot/shoulda-matchers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple one-liner tests for common Rails functionality&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shoulda Matchers &lt;a href=&#34;https://rubygems.org/gems/shoulda-matchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/shoulda-matchers.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/thoughtbot/shoulda-matchers/Test&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/shoulda-matchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/shoulda-matchers.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/shoulda-matchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dtv/shoulda-matchers.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matchers.shoulda.io/&#34;&gt;&lt;img src=&#34;https://matchers.shoulda.io/images/shoulda-matchers-logo.png&#34; alt=&#34;shoulda-matchers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Shoulda Matchers provides RSpec- and Minitest-compatible one-liners to test common Rails functionality that, if written by hand, would be much longer, more complex, and error-prone.&lt;/p&gt; &#xA;&lt;h2&gt;Quick links&lt;/h2&gt; &#xA;&lt;p&gt;📖 &lt;strong&gt;&lt;a href=&#34;https://matchers.shoulda.io/docs&#34;&gt;Read the documentation for the latest version&lt;/a&gt;.&lt;/strong&gt; 📢 &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/CHANGELOG.md&#34;&gt;See what&#39;s changed in recent versions&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#rspec&#34;&gt;RSpec&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#minitest&#34;&gt;Minitest&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#on-the-subject-of-subject&#34;&gt;On the subject of &lt;code&gt;subject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#availability-of-rspec-matchers-in-example-groups&#34;&gt;Availability of RSpec matchers in example groups&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#should-vs-is_expectedto&#34;&gt;&lt;code&gt;should&lt;/code&gt; vs &lt;code&gt;is_expected.to&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#matchers&#34;&gt;Matchers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activemodel-matchers&#34;&gt;ActiveModel matchers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activerecord-matchers&#34;&gt;ActiveRecord matchers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#actioncontroller-matchers&#34;&gt;ActionController matchers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#independent-matchers&#34;&gt;Independent matchers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#compatibility&#34;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#versioning&#34;&gt;Versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#team&#34;&gt;Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#copyright-license&#34;&gt;Copyright/License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#about-thoughtbot&#34;&gt;About thoughtbot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;RSpec&lt;/h3&gt; &#xA;&lt;p&gt;Start by including &lt;code&gt;shoulda-matchers&lt;/code&gt; in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :test do&#xA;  gem &#39;shoulda-matchers&#39;, &#39;~&amp;gt; 5.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you need to configure the gem by telling it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;which matchers you want to use in your tests&lt;/li&gt; &#xA; &lt;li&gt;that you&#39;re using RSpec so that it can make those matchers available in your example groups&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re working on a Rails app, simply place this at the bottom of &lt;code&gt;spec/rails_helper.rb&lt;/code&gt; (or in a support file if you so choose):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :rspec&#xA;    with.library :rails&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Non-Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re not working on a Rails app, but you still make use of ActiveRecord or ActiveModel in your project, you can still use this gem too! In that case, you&#39;ll want to place the following configuration at the bottom of &lt;code&gt;spec/spec_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :rspec&#xA;&#xA;    # Keep as many of these lines as are necessary:&#xA;    with.library :active_record&#xA;    with.library :active_model&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minitest&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using our umbrella gem &lt;a href=&#34;https://github.com/thoughtbot/shoulda&#34;&gt;Shoulda&lt;/a&gt;, then make sure that you&#39;re using the latest version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :test do&#xA;  gem &#39;shoulda&#39;, &#39;~&amp;gt; 4.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise, add &lt;code&gt;shoulda-matchers&lt;/code&gt; to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :test do&#xA;  gem &#39;shoulda-matchers&#39;, &#39;~&amp;gt; 4.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you need to configure the gem by telling it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;which matchers you want to use in your tests&lt;/li&gt; &#xA; &lt;li&gt;that you&#39;re using Minitest so that it can make those matchers available in your test case classes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re working on a Rails app, simply place this at the bottom of &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :minitest&#xA;    with.library :rails&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Non-Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re not working on a Rails app, but you still make use of ActiveRecord or ActiveModel in your project, you can still use this gem too! In that case, you&#39;ll want to place the following configuration at the bottom of &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :minitest&#xA;&#xA;    # Keep as many of these lines as are necessary:&#xA;    with.library :active_record&#xA;    with.library :active_model&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Most of the matchers provided by this gem are useful in a Rails context, and as such, can be used for different parts of a Rails app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activemodel-matchers&#34;&gt;database models backed by ActiveRecord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activerecord-matchers&#34;&gt;non-database models, form objects, etc. backed by ActiveModel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#actioncontroller-matchers&#34;&gt;controllers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#routing-matchers&#34;&gt;routes&lt;/a&gt; (RSpec only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#independent-matchers&#34;&gt;Rails-specific features like &lt;code&gt;delegate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As the name of the gem indicates, most matchers are designed to be used in &#34;one-liner&#34; form using the &lt;code&gt;should&lt;/code&gt; macro, a special directive available in both RSpec and &lt;a href=&#34;https://github.com/thoughtbot/shoulda&#34;&gt;Shoulda&lt;/a&gt;. For instance, a model test case may look something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# RSpec&#xA;RSpec.describe MenuItem, type: :model do&#xA;  describe &#39;associations&#39; do&#xA;    it { should belong_to(:category).class_name(&#39;MenuCategory&#39;) }&#xA;  end&#xA;&#xA;  describe &#39;validations&#39; do&#xA;    it { should validate_presence_of(:name) }&#xA;    it { should validate_uniqueness_of(:name).scoped_to(:category_id) }&#xA;  end&#xA;end&#xA;&#xA;# Minitest (Shoulda)&#xA;class MenuItemTest &amp;lt; ActiveSupport::TestCase&#xA;  context &#39;associations&#39; do&#xA;    should belong_to(:category).class_name(&#39;MenuCategory&#39;)&#xA;  end&#xA;&#xA;  context &#39;validations&#39; do&#xA;    should validate_presence_of(:name)&#xA;    should validate_uniqueness_of(:name).scoped_to(:category_id)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#matchers&#34;&gt;See below&lt;/a&gt; for the full set of matchers that you can use.&lt;/p&gt; &#xA;&lt;h3&gt;On the subject of &lt;code&gt;subject&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;For both RSpec and Shoulda, the &lt;strong&gt;subject&lt;/strong&gt; is an implicit reference to the object under test, and through the use of &lt;code&gt;should&lt;/code&gt; as demonstrated above, all of the matchers make use of &lt;code&gt;subject&lt;/code&gt; internally when they are run. A &lt;code&gt;subject&lt;/code&gt; is always set automatically by your test framework in any given test case; however, in certain cases it can be advantageous to override it. For instance, when testing validations in a model, it is customary to provide a valid model instead of a fresh one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# RSpec&#xA;RSpec.describe Post, type: :model do&#xA;  describe &#39;validations&#39; do&#xA;    # Here we&#39;re using FactoryBot, but you could use anything&#xA;    subject { build(:post) }&#xA;&#xA;    it { should validate_presence_of(:title) }&#xA;  end&#xA;end&#xA;&#xA;# Minitest (Shoulda)&#xA;class PostTest &amp;lt; ActiveSupport::TestCase&#xA;  context &#39;validations&#39; do&#xA;    subject { build(:post) }&#xA;&#xA;    should validate_presence_of(:title)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When overriding the subject in this manner, then, it&#39;s important to provide the correct object. &lt;strong&gt;When in doubt, provide an instance of the class under test.&lt;/strong&gt; This is particularly necessary for controller tests, where it is easy to accidentally write something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe PostsController, type: :controller do&#xA;  describe &#39;GET #index&#39; do&#xA;    subject { get :index }&#xA;&#xA;    # This may work...&#xA;    it { should have_http_status(:success) }&#xA;    # ...but this will not!&#xA;    it { should permit(:title, :body).for(:post) }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, you would want to use &lt;code&gt;before&lt;/code&gt; rather than &lt;code&gt;subject&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe PostsController, type: :controller do&#xA;  describe &#39;GET #index&#39; do&#xA;    before { get :index }&#xA;&#xA;    # Notice that we have to assert have_http_status on the response here...&#xA;    it { expect(response).to have_http_status(:success) }&#xA;    # ...but we do not have to provide a subject for render_template&#xA;    it { should render_template(&#39;index&#39;) }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Availability of RSpec matchers in example groups&lt;/h3&gt; &#xA;&lt;h4&gt;Rails projects&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re using RSpec, then you&#39;re probably familiar with the concept of example groups. Example groups can be assigned tags order to assign different behavior to different kinds of example groups. This comes into play especially when using &lt;code&gt;rspec-rails&lt;/code&gt;, where, for instance, controller example groups, tagged with &lt;code&gt;type: :controller&lt;/code&gt;, are written differently than request example groups, tagged with &lt;code&gt;type: :request&lt;/code&gt;. This difference in writing style arises because &lt;code&gt;rspec-rails&lt;/code&gt; mixes different behavior and methods into controller example groups vs. request example groups.&lt;/p&gt; &#xA;&lt;p&gt;Relying on this behavior, Shoulda Matchers automatically makes certain matchers available in certain kinds of example groups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ActiveRecord and ActiveModel matchers are available only in model example groups, i.e., those tagged with &lt;code&gt;type: :model&lt;/code&gt; or in files located under &lt;code&gt;spec/models&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;ActionController matchers are available only in controller example groups, i.e., those tagged with &lt;code&gt;type: :controller&lt;/code&gt; or in files located under &lt;code&gt;spec/controllers&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;route&lt;/code&gt; matcher is available in routing example groups, i.e., those tagged with &lt;code&gt;type: :routing&lt;/code&gt; or in files located under &lt;code&gt;spec/routing&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Independent matchers are available in all example groups.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As long as you&#39;re using Rails, you don&#39;t need to worry about these details — everything should &#34;just work&#34;.&lt;/p&gt; &#xA;&lt;h4&gt;Non-Rails projects&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;What if you are using ActiveModel or ActiveRecord outside of Rails, however, and you want to use model matchers in a certain example group?&lt;/strong&gt; Then you&#39;ll need to manually include the module that holds those matchers into that example group. For instance, you might have to say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe MySpecialModel do&#xA;  include Shoulda::Matchers::ActiveModel&#xA;  include Shoulda::Matchers::ActiveRecord&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a lot of similar example groups in which you need to do this, then you might find it more helpful to tag your example groups appropriately, then instruct RSpec to mix these modules into any example groups that have that tag. For instance, you could add this to your &lt;code&gt;rails_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include(Shoulda::Matchers::ActiveModel, type: :model)&#xA;  config.include(Shoulda::Matchers::ActiveRecord, type: :model)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And from then on, you could say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe MySpecialModel, type: :model do&#xA;  # ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;should&lt;/code&gt; vs &lt;code&gt;is_expected.to&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In this README and throughout the documentation, you&#39;ll notice that we use the &lt;code&gt;should&lt;/code&gt; form of RSpec&#39;s one-liner syntax over &lt;code&gt;is_expected.to&lt;/code&gt;. Beside being the namesake of the gem itself, this is our preferred syntax as it&#39;s short and sweet. But if you prefer to use &lt;code&gt;is_expected.to&lt;/code&gt;, you can do that too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe Person, type: :model do&#xA;  it { is_expected.to validate_presence_of(:name) }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Matchers&lt;/h2&gt; &#xA;&lt;p&gt;Here is the full list of matchers that ship with this gem. If you need details about any of them, make sure to &lt;a href=&#34;https://matchers.shoulda.io/docs&#34;&gt;consult the documentation&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;ActiveModel matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/allow_value_matcher.rb&#34;&gt;allow_value&lt;/a&gt;&lt;/strong&gt; tests that an attribute is valid or invalid if set to one or more values. &lt;em&gt;(Aliased as #allow_values.)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/have_secure_password_matcher.rb&#34;&gt;have_secure_password&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;has_secure_password&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_absence_of_matcher.rb&#34;&gt;validate_absence_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_absence_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_acceptance_of_matcher.rb&#34;&gt;validate_acceptance_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_acceptance_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_confirmation_of_matcher.rb&#34;&gt;validate_confirmation_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_confirmation_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_exclusion_of_matcher.rb&#34;&gt;validate_exclusion_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_exclusion_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_inclusion_of_matcher.rb&#34;&gt;validate_inclusion_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_inclusion_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_length_of_matcher.rb&#34;&gt;validate_length_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_length_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_numericality_of_matcher.rb&#34;&gt;validate_numericality_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_numericality_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_presence_of_matcher.rb&#34;&gt;validate_presence_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_presence_of&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ActiveRecord matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/accept_nested_attributes_for_matcher.rb&#34;&gt;accept_nested_attributes_for&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb&#34;&gt;belong_to&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;belongs_to&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/define_enum_for_matcher.rb&#34;&gt;define_enum_for&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;enum&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb#L827&#34;&gt;have_and_belong_to_many&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_db_column_matcher.rb&#34;&gt;have_db_column&lt;/a&gt;&lt;/strong&gt; tests that the table that backs your model has a specific column.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_db_index_matcher.rb&#34;&gt;have_db_index&lt;/a&gt;&lt;/strong&gt; tests that the table that backs your model has an index on a specific column.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_implicit_order_column.rb&#34;&gt;have_implicit_order_column&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;implicit_order_column&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb#L328&#34;&gt;have_many&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_many&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_attached_matcher.rb&#34;&gt;have_many_attached&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_many_attached&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb#L598&#34;&gt;have_one&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_one&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_attached_matcher.rb&#34;&gt;have_one_attached&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_one_attached&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_readonly_attribute_matcher.rb&#34;&gt;have_readonly_attribute&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;attr_readonly&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_rich_text_matcher.rb&#34;&gt;have_rich_text&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_rich_text&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/serialize_matcher.rb&#34;&gt;serialize&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;serialize&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/validate_uniqueness_of_matcher.rb&#34;&gt;validate_uniqueness_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_uniqueness_of&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ActionController matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/filter_param_matcher.rb&#34;&gt;filter_param&lt;/a&gt;&lt;/strong&gt; tests parameter filtering configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/permit_matcher.rb&#34;&gt;permit&lt;/a&gt;&lt;/strong&gt; tests that an action places a restriction on the &lt;code&gt;params&lt;/code&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/redirect_to_matcher.rb&#34;&gt;redirect_to&lt;/a&gt;&lt;/strong&gt; tests that an action redirects to a certain location.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/render_template_matcher.rb&#34;&gt;render_template&lt;/a&gt;&lt;/strong&gt; tests that an action renders a template.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/render_with_layout_matcher.rb&#34;&gt;render_with_layout&lt;/a&gt;&lt;/strong&gt; tests that an action is rendered with a certain layout.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/rescue_from_matcher.rb&#34;&gt;rescue_from&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;rescue_from&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/respond_with_matcher.rb&#34;&gt;respond_with&lt;/a&gt;&lt;/strong&gt; tests that an action responds with a certain status code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/route_matcher.rb&#34;&gt;route&lt;/a&gt;&lt;/strong&gt; tests your routes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/set_session_matcher.rb&#34;&gt;set_session&lt;/a&gt;&lt;/strong&gt; makes assertions on the &lt;code&gt;session&lt;/code&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/set_flash_matcher.rb&#34;&gt;set_flash&lt;/a&gt;&lt;/strong&gt; makes assertions on the &lt;code&gt;flash&lt;/code&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/callback_matcher.rb#L29&#34;&gt;use_after_action&lt;/a&gt;&lt;/strong&gt; tests that an &lt;code&gt;after_action&lt;/code&gt; callback is defined in your controller.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/callback_matcher.rb#L75&#34;&gt;use_around_action&lt;/a&gt;&lt;/strong&gt; tests that an &lt;code&gt;around_action&lt;/code&gt; callback is defined in your controller.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/callback_matcher.rb#L4&#34;&gt;use_before_action&lt;/a&gt;&lt;/strong&gt; tests that a &lt;code&gt;before_action&lt;/code&gt; callback is defined in your controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Routing matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/route_matcher.rb&#34;&gt;route&lt;/a&gt;&lt;/strong&gt; tests your routes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Independent matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/independent/delegate_method_matcher.rb&#34;&gt;delegate_method&lt;/a&gt;&lt;/strong&gt; tests that an object forwards messages to other, internal objects by way of delegation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;Over time our community has created extensions to Shoulda Matchers. If you&#39;ve created something that you want to share, please &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/issues/new&#34;&gt;let us know&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/majioa/shoulda-matchers-cucumber&#34;&gt;shoulda-matchers-cucumber&lt;/a&gt;&lt;/strong&gt; – Adds support for using Shoulda Matchers in Cucumber tests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have a fix for a problem you&#39;ve been running into or an idea for a new feature you think would be useful? Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/CONTRIBUTING.md&#34;&gt;Contributing document&lt;/a&gt; for instructions on setting up the repo on your machine, understanding the codebase, and creating a good pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers is tested and supported against Ruby 2.6+, Rails 5.2+, RSpec 3.x, and Minitest 5.x.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Ruby &amp;lt; 2.4 and Rails &amp;lt; 4.1 compatibility, please use &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/tree/v3.1.3&#34;&gt;v3.1.3&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For Ruby &amp;lt; 3.0 and Rails &amp;lt; 6.1 compatibility, please use &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/tree/v4.5.1&#34;&gt;v4.5.1&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers follows Semantic Versioning 2.0 as defined at &lt;a href=&#34;https://semver.org&#34;&gt;https://semver.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Team&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers is maintained by &lt;a href=&#34;https://github.com/mcmire&#34;&gt;Elliot Winkler&lt;/a&gt; and &lt;a href=&#34;https://github.com/guialbuk&#34;&gt;Gui Albuk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright/License&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers is copyright © 2006-2022 Tammer Saleh and &lt;a href=&#34;https://thoughtbot.com&#34;&gt;thoughtbot, inc&lt;/a&gt;. It is free and opensource software and may be redistributed under the terms specified in the &lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;About thoughtbot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://presskit.thoughtbot.com/images/thoughtbot-logo-for-readmes.svg?sanitize=true&#34; alt=&#34;thoughtbot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The names and logos for thoughtbot are trademarks of thoughtbot, inc.&lt;/p&gt; &#xA;&lt;p&gt;We are passionate about open source software. See &lt;a href=&#34;https://thoughtbot.com/community?utm_source=github&#34;&gt;our other projects&lt;/a&gt;. We are &lt;a href=&#34;https://thoughtbot.com?utm_source=github&#34;&gt;available for hire&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>varvet/pundit</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/varvet/pundit</id>
    <link href="https://github.com/varvet/pundit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minimal authorization through OO design and pure Ruby classes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pundit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/varvet/pundit&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/varvet/pundit.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/varvet/pundit&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/varvet/pundit.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://inch-ci.org/github/varvet/pundit&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/varvet/pundit.svg?branch=master&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/rb/pundit&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/pundit.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pundit provides a set of helpers which guide you in leveraging regular Ruby classes and object oriented design patterns to build a simple, robust and scalable authorization system.&lt;/p&gt; &#xA;&lt;p&gt;Links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/gems/pundit&#34;&gt;API documentation for the most recent version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sponsored by:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.varvet.com&#34;&gt;&lt;img src=&#34;https://www.varvet.com/images/wordmark-red.svg?sanitize=true&#34; alt=&#34;Varvet&#34; height=&#34;50px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt; that the README on GitHub is accurate with the &lt;em&gt;latest code on GitHub&lt;/em&gt;. You are most likely using a released version of Pundit, so please refer to the &lt;a href=&#34;https://www.rubydoc.info/gems/pundit&#34;&gt;documentation for the latest released version of Pundit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle add pundit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Include &lt;code&gt;Pundit::Authorization&lt;/code&gt; in your application controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can run the generator, which will set up an application policy with some useful defaults for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rails g pundit:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After generating your application policy, restart the Rails server so that Rails can pick up any classes in the new &lt;code&gt;app/policies/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Policies&lt;/h2&gt; &#xA;&lt;p&gt;Pundit is focused around the notion of policy classes. We suggest that you put these classes in &lt;code&gt;app/policies&lt;/code&gt;. This is a simple example that allows updating a post if the user is an admin, or if the post is unpublished:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy&#xA;  attr_reader :user, :post&#xA;&#xA;  def initialize(user, post)&#xA;    @user = user&#xA;    @post = post&#xA;  end&#xA;&#xA;  def update?&#xA;    user.admin? || !post.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, this is just a plain Ruby class. Pundit makes the following assumptions about this class:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The class has the same name as some kind of model class, only suffixed with the word &#34;Policy&#34;.&lt;/li&gt; &#xA; &lt;li&gt;The first argument is a user. In your controller, Pundit will call the &lt;code&gt;current_user&lt;/code&gt; method to retrieve what to send into this argument&lt;/li&gt; &#xA; &lt;li&gt;The second argument is some kind of model object, whose authorization you want to check. This does not need to be an ActiveRecord or even an ActiveModel object, it can be anything really.&lt;/li&gt; &#xA; &lt;li&gt;The class implements some kind of query method, in this case &lt;code&gt;update?&lt;/code&gt;. Usually, this will map to the name of a particular controller action.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That&#39;s it really.&lt;/p&gt; &#xA;&lt;p&gt;Usually you&#39;ll want to inherit from the application policy created by the generator, or set up your own base class to inherit from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def update?&#xA;    user.admin? or not record.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the generated &lt;code&gt;ApplicationPolicy&lt;/code&gt;, the model object is called &lt;code&gt;record&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Supposing that you have an instance of class &lt;code&gt;Post&lt;/code&gt;, Pundit now lets you do this in your controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def update&#xA;  @post = Post.find(params[:id])&#xA;  authorize @post&#xA;  if @post.update(post_params)&#xA;    redirect_to @post&#xA;  else&#xA;    render :edit&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The authorize method automatically infers that &lt;code&gt;Post&lt;/code&gt; will have a matching &lt;code&gt;PostPolicy&lt;/code&gt; class, and instantiates this class, handing in the current user and the given record. It then infers from the action name, that it should call &lt;code&gt;update?&lt;/code&gt; on this instance of the policy. In this case, you can imagine that &lt;code&gt;authorize&lt;/code&gt; would have done something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;unless PostPolicy.new(current_user, @post).update?&#xA;  raise Pundit::NotAuthorizedError, &#34;not allowed to update? this #{@post.inspect}&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass a second argument to &lt;code&gt;authorize&lt;/code&gt; if the name of the permission you want to check doesn&#39;t match the action name. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def publish&#xA;  @post = Post.find(params[:id])&#xA;  authorize @post, :update?&#xA;  @post.publish!&#xA;  redirect_to @post&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass an argument to override the policy class if necessary. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def create&#xA;  @publication = find_publication # assume this method returns any model that behaves like a publication&#xA;  # @publication.class =&amp;gt; Post&#xA;  authorize @publication, policy_class: PublicationPolicy&#xA;  @publication.publish!&#xA;  redirect_to @publication&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have an instance for the first argument to &lt;code&gt;authorize&lt;/code&gt;, then you can pass the class. For example:&lt;/p&gt; &#xA;&lt;p&gt;Policy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def admin_list?&#xA;    user.admin?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def admin_list&#xA;  authorize Post # we don&#39;t have a particular post to authorize&#xA;  # Rest of controller action&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;authorize&lt;/code&gt; returns the instance passed to it, so you can chain it like this:&lt;/p&gt; &#xA;&lt;p&gt;Controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def show&#xA;  @user = authorize User.find(params[:id])&#xA;end&#xA;&#xA;# return the record even for namespaced policies&#xA;def show&#xA;  @user = authorize [:admin, User.find(params[:id])]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can easily get a hold of an instance of the policy through the &lt;code&gt;policy&lt;/code&gt; method in both the view and controller. This is especially useful for conditionally showing links or buttons in the view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;% if policy(@post).update? %&amp;gt;&#xA;  &amp;lt;%= link_to &#34;Edit post&#34;, edit_post_path(@post) %&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Headless policies&lt;/h2&gt; &#xA;&lt;p&gt;Given there is a policy without a corresponding model / ruby class, you can retrieve it by passing a symbol.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/policies/dashboard_policy.rb&#xA;class DashboardPolicy&#xA;  attr_reader :user&#xA;&#xA;  # _record in this example will just be :dashboard&#xA;  def initialize(user, _record)&#xA;    @user = user&#xA;  end&#xA;&#xA;  def show?&#xA;    user.admin?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the headless policy still needs to accept two arguments. The second argument will just be the symbol &lt;code&gt;:dashboard&lt;/code&gt; in this case which is what is passed as the record to &lt;code&gt;authorize&lt;/code&gt; below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# In controllers&#xA;def show&#xA;  authorize :dashboard, :show?&#xA;  ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;# In views&#xA;&amp;lt;% if policy(:dashboard).show? %&amp;gt;&#xA;  &amp;lt;%= link_to &#39;Dashboard&#39;, dashboard_path %&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Scopes&lt;/h2&gt; &#xA;&lt;p&gt;Often, you will want to have some kind of view listing records which a particular user has access to. When using Pundit, you are expected to define a class called a policy scope. It can look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  class Scope&#xA;    def initialize(user, scope)&#xA;      @user  = user&#xA;      @scope = scope&#xA;    end&#xA;&#xA;    def resolve&#xA;      if user.admin?&#xA;        scope.all&#xA;      else&#xA;        scope.where(published: true)&#xA;      end&#xA;    end&#xA;&#xA;    private&#xA;&#xA;    attr_reader :user, :scope&#xA;  end&#xA;&#xA;  def update?&#xA;    user.admin? or not record.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pundit makes the following assumptions about this class:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The class has the name &lt;code&gt;Scope&lt;/code&gt; and is nested under the policy class.&lt;/li&gt; &#xA; &lt;li&gt;The first argument is a user. In your controller, Pundit will call the &lt;code&gt;current_user&lt;/code&gt; method to retrieve what to send into this argument.&lt;/li&gt; &#xA; &lt;li&gt;The second argument is a scope of some kind on which to perform some kind of query. It will usually be an ActiveRecord class or a &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;, but it could be something else entirely.&lt;/li&gt; &#xA; &lt;li&gt;Instances of this class respond to the method &lt;code&gt;resolve&lt;/code&gt;, which should return some kind of result which can be iterated over. For ActiveRecord classes, this would usually be an &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll probably want to inherit from the application policy scope generated by the generator, or create your own base class to inherit from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  class Scope &amp;lt; Scope&#xA;    def resolve&#xA;      if user.admin?&#xA;        scope.all&#xA;      else&#xA;        scope.where(published: true)&#xA;      end&#xA;    end&#xA;  end&#xA;&#xA;  def update?&#xA;    user.admin? or not record.published?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now use this class from your controller via the &lt;code&gt;policy_scope&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @posts = policy_scope(Post)&#xA;end&#xA;&#xA;def show&#xA;  @post = policy_scope(Post).find(params[:id])&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like with the authorize method, you can also override the policy scope class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  # publication_class =&amp;gt; Post&#xA;  @publications = policy_scope(publication_class, policy_scope_class: PublicationPolicy::Scope)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case it is a shortcut for doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @publications = PublicationPolicy::Scope.new(current_user, Post).resolve&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can, and are encouraged to, use this method in views:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;% policy_scope(@user.posts).each do |post| %&amp;gt;&#xA;  &amp;lt;p&amp;gt;&amp;lt;%= link_to post.title, post_path(post) %&amp;gt;&amp;lt;/p&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ensuring policies and scopes are used&lt;/h2&gt; &#xA;&lt;p&gt;When you are developing an application with Pundit it can be easy to forget to authorize some action. People are forgetful after all. Since Pundit encourages you to add the &lt;code&gt;authorize&lt;/code&gt; call manually to each controller action, it&#39;s really easy to miss one.&lt;/p&gt; &#xA;&lt;p&gt;Thankfully, Pundit has a handy feature which reminds you in case you forget. Pundit tracks whether you have called &lt;code&gt;authorize&lt;/code&gt; anywhere in your controller action. Pundit also adds a method to your controllers called &lt;code&gt;verify_authorized&lt;/code&gt;. This method will raise an exception if &lt;code&gt;authorize&lt;/code&gt; has not yet been called. You should run this method in an &lt;code&gt;after_action&lt;/code&gt; hook to ensure that you haven&#39;t forgotten to authorize the action. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;  after_action :verify_authorized&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Likewise, Pundit also adds &lt;code&gt;verify_policy_scoped&lt;/code&gt; to your controller. This will raise an exception similar to &lt;code&gt;verify_authorized&lt;/code&gt;. However, it tracks if &lt;code&gt;policy_scope&lt;/code&gt; is used instead of &lt;code&gt;authorize&lt;/code&gt;. This is mostly useful for controller actions like &lt;code&gt;index&lt;/code&gt; which find collections with a scope and don&#39;t authorize individual instances.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;  after_action :verify_authorized, except: :index&#xA;  after_action :verify_policy_scoped, only: :index&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This verification mechanism only exists to aid you while developing your application, so you don&#39;t forget to call &lt;code&gt;authorize&lt;/code&gt;. It is not some kind of failsafe mechanism or authorization mechanism. You should be able to remove these filters without affecting how your app works in any way.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some people have found this feature confusing, while many others find it extremely helpful. If you fall into the category of people who find it confusing then you do not need to use it. Pundit will work just fine without using &lt;code&gt;verify_authorized&lt;/code&gt; and &lt;code&gt;verify_policy_scoped&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Conditional verification&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;code&gt;verify_authorized&lt;/code&gt; in your controllers but need to conditionally bypass verification, you can use &lt;code&gt;skip_authorization&lt;/code&gt;. For bypassing &lt;code&gt;verify_policy_scoped&lt;/code&gt;, use &lt;code&gt;skip_policy_scope&lt;/code&gt;. These are useful in circumstances where you don&#39;t want to disable verification for the entire action, but have some cases where you intend to not authorize.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def show&#xA;  record = Record.find_by(attribute: &#34;value&#34;)&#xA;  if record.present?&#xA;    authorize record&#xA;  else&#xA;    skip_authorization&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manually specifying policy classes&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you might want to explicitly declare which policy to use for a given class, instead of letting Pundit infer it. This can be done like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post&#xA;  def self.policy_class&#xA;    PostablePolicy&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can declare an instance method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post&#xA;  def policy_class&#xA;    PostablePolicy&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Just plain old Ruby&lt;/h2&gt; &#xA;&lt;p&gt;As you can see, Pundit doesn&#39;t do anything you couldn&#39;t have easily done yourself. It&#39;s a very small library, it just provides a few neat helpers. Together these give you the power of building a well structured, fully working authorization system without using any special DSLs or funky syntax or anything.&lt;/p&gt; &#xA;&lt;p&gt;Remember that all of the policy and scope classes are just plain Ruby classes, which means you can use the same mechanisms you always use to DRY things up. Encapsulate a set of permissions into a module and include them in multiple policies. Use &lt;code&gt;alias_method&lt;/code&gt; to make some permissions behave the same as others. Inherit from a base set of permissions. Use metaprogramming if you really have to.&lt;/p&gt; &#xA;&lt;h2&gt;Generator&lt;/h2&gt; &#xA;&lt;p&gt;Use the supplied generator to generate policies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rails g pundit:policy post&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Closed systems&lt;/h2&gt; &#xA;&lt;p&gt;In many applications, only logged in users are really able to do anything. If you&#39;re building such a system, it can be kind of cumbersome to check that the user in a policy isn&#39;t &lt;code&gt;nil&lt;/code&gt; for every single permission. Aside from policies, you can add this check to the base class for scopes.&lt;/p&gt; &#xA;&lt;p&gt;We suggest that you define a filter that redirects unauthenticated users to the login page. As a secondary defence, if you&#39;ve defined an ApplicationPolicy, it might be a good idea to raise an exception if somehow an unauthenticated user got through. This way you can fail more gracefully.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationPolicy&#xA;  def initialize(user, record)&#xA;    raise Pundit::NotAuthorizedError, &#34;must be logged in&#34; unless user&#xA;    @user   = user&#xA;    @record = record&#xA;  end&#xA;&#xA;  class Scope&#xA;    attr_reader :user, :scope&#xA;&#xA;    def initialize(user, scope)&#xA;      raise Pundit::NotAuthorizedError, &#34;must be logged in&#34; unless user&#xA;      @user = user&#xA;      @scope = scope&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NilClassPolicy&lt;/h2&gt; &#xA;&lt;p&gt;To support a &lt;a href=&#34;https://en.wikipedia.org/wiki/Null_Object_pattern&#34;&gt;null object pattern&lt;/a&gt; you may find that you want to implement a &lt;code&gt;NilClassPolicy&lt;/code&gt;. This might be useful where you want to extend your ApplicationPolicy to allow some tolerance of, for example, associations which might be &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class NilClassPolicy &amp;lt; ApplicationPolicy&#xA;  class Scope &amp;lt; Scope&#xA;    def resolve&#xA;      raise Pundit::NotDefinedError, &#34;Cannot scope NilClass&#34;&#xA;    end&#xA;  end&#xA;&#xA;  def show?&#xA;    false # Nobody can see nothing&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Rescuing a denied Authorization in Rails&lt;/h2&gt; &#xA;&lt;p&gt;Pundit raises a &lt;code&gt;Pundit::NotAuthorizedError&lt;/code&gt; you can &lt;a href=&#34;http://guides.rubyonrails.org/action_controller_overview.html#rescue-from&#34;&gt;rescue_from&lt;/a&gt; in your &lt;code&gt;ApplicationController&lt;/code&gt;. You can customize the &lt;code&gt;user_not_authorized&lt;/code&gt; method in every controller.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  include Pundit::Authorization&#xA;&#xA;  rescue_from Pundit::NotAuthorizedError, with: :user_not_authorized&#xA;&#xA;  private&#xA;&#xA;  def user_not_authorized&#xA;    flash[:alert] = &#34;You are not authorized to perform this action.&#34;&#xA;    redirect_back(fallback_location: root_path)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can globally handle Pundit::NotAuthorizedError&#39;s by having rails handle them as a 403 error and serving a 403 error page. Add the following to application.rb:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;config.action_dispatch.rescue_responses[&#34;Pundit::NotAuthorizedError&#34;] = :forbidden&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Creating custom error messages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;NotAuthorizedError&lt;/code&gt;s provide information on what query (e.g. &lt;code&gt;:create?&lt;/code&gt;), what record (e.g. an instance of &lt;code&gt;Post&lt;/code&gt;), and what policy (e.g. an instance of &lt;code&gt;PostPolicy&lt;/code&gt;) caused the error to be raised.&lt;/p&gt; &#xA;&lt;p&gt;One way to use these &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;record&lt;/code&gt;, and &lt;code&gt;policy&lt;/code&gt; properties is to connect them with &lt;code&gt;I18n&lt;/code&gt; to generate error messages. Here&#39;s how you might go about doing that.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA; rescue_from Pundit::NotAuthorizedError, with: :user_not_authorized&#xA;&#xA; private&#xA;&#xA; def user_not_authorized(exception)&#xA;   policy_name = exception.policy.class.to_s.underscore&#xA;&#xA;   flash[:error] = t &#34;#{policy_name}.#{exception.query}&#34;, scope: &#34;pundit&#34;, default: :default&#xA;   redirect_back(fallback_url: root_path)&#xA; end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA; pundit:&#xA;   default: &#39;You cannot perform this action.&#39;&#xA;   post_policy:&#xA;     update?: &#39;You cannot edit this post!&#39;&#xA;     create?: &#39;You cannot create posts!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, this is just an example. Pundit is agnostic as to how you implement your error messaging.&lt;/p&gt; &#xA;&lt;h2&gt;Manually retrieving policies and scopes&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you want to retrieve a policy for a record outside the controller or view. For example when you delegate permissions from one policy to another.&lt;/p&gt; &#xA;&lt;p&gt;You can easily retrieve policies and scopes like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Pundit.policy!(user, post)&#xA;Pundit.policy(user, post)&#xA;&#xA;Pundit.policy_scope!(user, Post)&#xA;Pundit.policy_scope(user, Post)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bang methods will raise an exception if the policy does not exist, whereas those without the bang will return nil.&lt;/p&gt; &#xA;&lt;h2&gt;Customize Pundit user&lt;/h2&gt; &#xA;&lt;p&gt;In some cases your controller might not have access to &lt;code&gt;current_user&lt;/code&gt;, or your &lt;code&gt;current_user&lt;/code&gt; is not the method that should be invoked by Pundit. Simply define a method in your controller called &lt;code&gt;pundit_user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def pundit_user&#xA;  User.find_by_other_means&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Policy Namespacing&lt;/h2&gt; &#xA;&lt;p&gt;In some cases it might be helpful to have multiple policies that serve different contexts for a resource. A prime example of this is the case where User policies differ from Admin policies. To authorize with a namespaced policy, pass the namespace into the &lt;code&gt;authorize&lt;/code&gt; helper in an array:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;authorize(post)                   # =&amp;gt; will look for a PostPolicy&#xA;authorize([:admin, post])         # =&amp;gt; will look for an Admin::PostPolicy&#xA;authorize([:foo, :bar, post])     # =&amp;gt; will look for a Foo::Bar::PostPolicy&#xA;&#xA;policy_scope(Post)                # =&amp;gt; will look for a PostPolicy::Scope&#xA;policy_scope([:admin, Post])      # =&amp;gt; will look for an Admin::PostPolicy::Scope&#xA;policy_scope([:foo, :bar, Post])  # =&amp;gt; will look for a Foo::Bar::PostPolicy::Scope&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using namespaced policies for something like Admin views, it can be useful to override the &lt;code&gt;policy_scope&lt;/code&gt; and &lt;code&gt;authorize&lt;/code&gt; helpers in your &lt;code&gt;AdminController&lt;/code&gt; to automatically apply the namespacing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AdminController &amp;lt; ApplicationController&#xA;  def policy_scope(scope)&#xA;    super([:admin, scope])&#xA;  end&#xA;&#xA;  def authorize(record, query = nil)&#xA;    super([:admin, record], query)&#xA;  end&#xA;end&#xA;&#xA;class Admin::PostController &amp;lt; AdminController&#xA;  def index&#xA;    policy_scope(Post)&#xA;  end&#xA;&#xA;  def show&#xA;    post = authorize Post.find(params[:id])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional context&lt;/h2&gt; &#xA;&lt;p&gt;Pundit strongly encourages you to model your application in such a way that the only context you need for authorization is a user object and a domain model that you want to check authorization for. If you find yourself needing more context than that, consider whether you are authorizing the right domain model, maybe another domain model (or a wrapper around multiple domain models) can provide the context you need.&lt;/p&gt; &#xA;&lt;p&gt;Pundit does not allow you to pass additional arguments to policies for precisely this reason.&lt;/p&gt; &#xA;&lt;p&gt;However, in very rare cases, you might need to authorize based on more context than just the currently authenticated user. Suppose for example that authorization is dependent on IP address in addition to the authenticated user. In that case, one option is to create a special class which wraps up both user and IP and passes it to the policy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class UserContext&#xA;  attr_reader :user, :ip&#xA;&#xA;  def initialize(user, ip)&#xA;    @user = user&#xA;    @ip   = ip&#xA;  end&#xA;end&#xA;&#xA;class ApplicationController&#xA;  include Pundit::Authorization&#xA;&#xA;  def pundit_user&#xA;    UserContext.new(current_user, request.ip)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Strong parameters&lt;/h2&gt; &#xA;&lt;p&gt;In Rails, mass-assignment protection is handled in the controller. With Pundit you can control which attributes a user has access to update via your policies. You can set up a &lt;code&gt;permitted_attributes&lt;/code&gt; method in your policy like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/policies/post_policy.rb&#xA;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def permitted_attributes&#xA;    if user.admin? || user.owner_of?(post)&#xA;      [:title, :body, :tag_list]&#xA;    else&#xA;      [:tag_list]&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now retrieve these attributes from the policy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/posts_controller.rb&#xA;class PostsController &amp;lt; ApplicationController&#xA;  def update&#xA;    @post = Post.find(params[:id])&#xA;    if @post.update_attributes(post_params)&#xA;      redirect_to @post&#xA;    else&#xA;      render :edit&#xA;    end&#xA;  end&#xA;&#xA;  private&#xA;&#xA;  def post_params&#xA;    params.require(:post).permit(policy(@post).permitted_attributes)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, this is a bit cumbersome, so Pundit provides a convenient helper method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/controllers/posts_controller.rb&#xA;class PostsController &amp;lt; ApplicationController&#xA;  def update&#xA;    @post = Post.find(params[:id])&#xA;    if @post.update_attributes(permitted_attributes(@post))&#xA;      redirect_to @post&#xA;    else&#xA;      render :edit&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to permit different attributes based on the current action, you can define a &lt;code&gt;permitted_attributes_for_#{action}&lt;/code&gt; method on your policy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/policies/post_policy.rb&#xA;class PostPolicy &amp;lt; ApplicationPolicy&#xA;  def permitted_attributes_for_create&#xA;    [:title, :body]&#xA;  end&#xA;&#xA;  def permitted_attributes_for_edit&#xA;    [:body]&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have defined an action-specific method on your policy for the current action, the &lt;code&gt;permitted_attributes&lt;/code&gt; helper will call it instead of calling &lt;code&gt;permitted_attributes&lt;/code&gt; on your controller.&lt;/p&gt; &#xA;&lt;p&gt;If you need to fetch parameters based on namespaces different from the suggested one, override the below method, in your controller, and return an instance of &lt;code&gt;ActionController::Parameters&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def pundit_params_for(record)&#xA;  params.require(PolicyFinder.new(record).param_key)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# If you don&#39;t want to use require&#xA;def pundit_params_for(record)&#xA;  params.fetch(PolicyFinder.new(record).param_key, {})&#xA;end&#xA;&#xA;# If you are using something like the JSON API spec&#xA;def pundit_params_for(_record)&#xA;  params.fetch(:data, {}).fetch(:attributes, {})&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;RSpec&lt;/h2&gt; &#xA;&lt;h3&gt;Policy Specs&lt;/h3&gt; &#xA;&lt;p&gt;Pundit includes a mini-DSL for writing expressive tests for your policies in RSpec. Require &lt;code&gt;pundit/rspec&lt;/code&gt; in your &lt;code&gt;spec_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;pundit/rspec&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then put your policy specs in &lt;code&gt;spec/policies&lt;/code&gt;, and make them look somewhat like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe PostPolicy do&#xA;  subject { described_class }&#xA;&#xA;  permissions :update?, :edit? do&#xA;    it &#34;denies access if post is published&#34; do&#xA;      expect(subject).not_to permit(User.new(admin: false), Post.new(published: true))&#xA;    end&#xA;&#xA;    it &#34;grants access if post is published and user is an admin&#34; do&#xA;      expect(subject).to permit(User.new(admin: true), Post.new(published: true))&#xA;    end&#xA;&#xA;    it &#34;grants access if post is unpublished&#34; do&#xA;      expect(subject).to permit(User.new(admin: false), Post.new(published: false))&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An alternative approach to Pundit policy specs is scoping them to a user context as outlined in this &lt;a href=&#34;http://thunderboltlabs.com/blog/2013/03/27/testing-pundit-policies-with-rspec/&#34;&gt;excellent post&lt;/a&gt; and implemented in the third party &lt;a href=&#34;https://github.com/chrisalley/pundit-matchers&#34;&gt;pundit-matchers&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;h3&gt;Scope Specs&lt;/h3&gt; &#xA;&lt;p&gt;Pundit does not provide a DSL for testing scopes. Just test it like a regular Ruby class!&lt;/p&gt; &#xA;&lt;h1&gt;External Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RailsApps/rails-devise-pundit&#34;&gt;RailsApps Example Application: Pundit and Devise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.carbonfive.com/2013/10/21/migrating-to-pundit-from-cancan/&#34;&gt;Migrating to Pundit from CanCan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thunderboltlabs.com/blog/2013/03/27/testing-pundit-policies-with-rspec/&#34;&gt;Testing Pundit Policies with RSpec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/issues/204#issuecomment-60166450&#34;&gt;Testing Pundit with Minitest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/varvet/pundit/pull/136&#34;&gt;Using Pundit outside of a Rails controller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sitepoint.com/straightforward-rails-authorization-with-pundit/&#34;&gt;Straightforward Rails Authorization with Pundit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other implementations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anurag90x/flask-pundit&#34;&gt;Flask-Pundit&lt;/a&gt; (Python) is a &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; extension &#34;heavily inspired by&#34; Pundit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Licensed under the MIT license, see the separate LICENSE.txt file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gitlabhq/gitlabhq</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/gitlabhq/gitlabhq</id>
    <link href="https://github.com/gitlabhq/gitlabhq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitLab CE Mirror | Please open new issues in our issue tracker on GitLab.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitLab&lt;/h1&gt; &#xA;&lt;h2&gt;Canonical source&lt;/h2&gt; &#xA;&lt;p&gt;The canonical source of GitLab where all development takes place is &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab&#34;&gt;hosted on GitLab.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to clone a copy of GitLab without proprietary code, you can use the read-only mirror of GitLab located at &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab-foss/&#34;&gt;https://gitlab.com/gitlab-org/gitlab-foss/&lt;/a&gt;. However, please do not submit any issues and/or merge requests to that project.&lt;/p&gt; &#xA;&lt;h2&gt;Free trial&lt;/h2&gt; &#xA;&lt;p&gt;You can request a free trial of GitLab Ultimate &lt;a href=&#34;https://about.gitlab.com/free-trial/&#34;&gt;on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Open source software to collaborate on code&lt;/h2&gt; &#xA;&lt;p&gt;To see how GitLab looks please see the &lt;a href=&#34;https://about.gitlab.com/features/&#34;&gt;features page on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manage Git repositories with fine grained access controls that keep your code secure&lt;/li&gt; &#xA; &lt;li&gt;Perform code reviews and enhance collaboration with merge requests&lt;/li&gt; &#xA; &lt;li&gt;Complete continuous integration (CI) and continuous deployment/delivery (CD) pipelines to build, test, and deploy your applications&lt;/li&gt; &#xA; &lt;li&gt;Each project can also have an issue tracker, issue board, and a wiki&lt;/li&gt; &#xA; &lt;li&gt;Used by more than 100,000 organizations, GitLab is the most popular solution to manage Git repositories on-premises&lt;/li&gt; &#xA; &lt;li&gt;Completely free and open source (MIT Expat license)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Editions&lt;/h2&gt; &#xA;&lt;p&gt;There are three editions of GitLab:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitLab Community Edition (CE) is available freely under the MIT Expat license.&lt;/li&gt; &#xA; &lt;li&gt;GitLab Enterprise Edition (EE) includes &lt;a href=&#34;https://about.gitlab.com/pricing/#compare-options&#34;&gt;extra features&lt;/a&gt; that are more useful for organizations with more than 100 users. To use EE and get official support please &lt;a href=&#34;https://about.gitlab.com/pricing/&#34;&gt;become a subscriber&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;JiHu Edition (JH) tailored specifically for the &lt;a href=&#34;https://about.gitlab.cn/&#34;&gt;Chinese market&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/gitlabhq/gitlabhq/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for licensing information as it pertains to files in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Hiring&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re hiring developers, support people, and production engineers all the time, please see our &lt;a href=&#34;https://about.gitlab.com/jobs/&#34;&gt;jobs page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;p&gt;On &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;about.gitlab.com&lt;/a&gt; you can find more information about:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/pricing/&#34;&gt;Subscriptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/consultancy/&#34;&gt;Consultancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/community/&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/gitlab-com/&#34;&gt;Hosted GitLab.com&lt;/a&gt; use GitLab as a free service&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/features/#enterprise&#34;&gt;GitLab Enterprise Edition&lt;/a&gt; with additional features aimed at larger organizations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/gitlab-ci/&#34;&gt;GitLab CI&lt;/a&gt; a continuous integration (CI) server that is easy to integrate with GitLab.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/gitlabhq/gitlabhq/master/doc/install/requirements.md&#34;&gt;requirements documentation&lt;/a&gt; for system requirements and more information about the supported operating systems.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to install GitLab is with the &lt;a href=&#34;https://about.gitlab.com/downloads/&#34;&gt;Omnibus packages&lt;/a&gt; on our package server. Compared to an installation from source, this is faster and less error prone. Just select your operating system, download the respective package (Debian or RPM) and install it using the system&#39;s package manager.&lt;/p&gt; &#xA;&lt;p&gt;There are various other options to install GitLab, please refer to the &lt;a href=&#34;https://about.gitlab.com/installation/&#34;&gt;installation page on the GitLab website&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;GitLab is an open source project and we are very happy to accept community contributions. Please refer to &lt;a href=&#34;https://about.gitlab.com/contributing/&#34;&gt;Contributing to GitLab page&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Install a development environment&lt;/h2&gt; &#xA;&lt;p&gt;To work on GitLab itself, we recommend setting up your development environment with &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab-development-kit&#34;&gt;the GitLab Development Kit&lt;/a&gt;. If you do not use the GitLab Development Kit you need to install and configure all the dependencies yourself, this is a lot of work and error prone. One small thing you also have to do when installing it yourself is to copy the example development Puma configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp config/puma.example.development.rb config/puma.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instructions on how to start GitLab and how to run the tests can be found in the &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab-development-kit#getting-started&#34;&gt;getting started section of the GitLab Development Kit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Software stack&lt;/h2&gt; &#xA;&lt;p&gt;GitLab is a Ruby on Rails application that runs on the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu/Debian/CentOS/RHEL/OpenSUSE&lt;/li&gt; &#xA; &lt;li&gt;Ruby (MRI) 2.7.5&lt;/li&gt; &#xA; &lt;li&gt;Git 2.33+&lt;/li&gt; &#xA; &lt;li&gt;Redis 5.0+&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information please see the &lt;a href=&#34;https://docs.gitlab.com/ee/development/architecture.html&#34;&gt;architecture&lt;/a&gt; and &lt;a href=&#34;https://docs.gitlab.com/ee/install/requirements.html&#34;&gt;requirements&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;UX design&lt;/h2&gt; &#xA;&lt;p&gt;Please adhere to the &lt;a href=&#34;https://design.gitlab.com/&#34;&gt;UX Guide&lt;/a&gt; when creating designs and implementing code.&lt;/p&gt; &#xA;&lt;h2&gt;Third-party applications&lt;/h2&gt; &#xA;&lt;p&gt;There are a lot of &lt;a href=&#34;https://about.gitlab.com/applications/&#34;&gt;third-party applications integrating with GitLab&lt;/a&gt;. These include GUI Git clients, mobile applications and API wrappers for various languages.&lt;/p&gt; &#xA;&lt;h2&gt;GitLab release cycle&lt;/h2&gt; &#xA;&lt;p&gt;For more information about the release process see the &lt;a href=&#34;https://gitlab.com/gitlab-org/release-tools/blob/master/README.md&#34;&gt;release documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;For upgrading information please see our &lt;a href=&#34;https://about.gitlab.com/update/&#34;&gt;update page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All documentation can be found on &lt;a href=&#34;https://docs.gitlab.com&#34;&gt;https://docs.gitlab.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://about.gitlab.com/getting-help/&#34;&gt;Getting help for GitLab&lt;/a&gt; on our website for the many options to get help.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/why/&#34;&gt;Read here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Is it any good?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/is-it-any-good/&#34;&gt;Yes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Is it awesome?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/gitlab/followers&#34;&gt;These people&lt;/a&gt; seem to like it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>puma/puma</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/puma/puma</id>
    <link href="https://github.com/puma/puma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby/Rack web server built for parallelism&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://puma.io/images/logos/puma-logo-large.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Puma: A Ruby Web Server Built For Parallelism&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/puma/puma/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/puma/puma/workflows/Tests/badge.svg?branch=master&#34; alt=&#34;Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/puma/puma&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/puma/puma.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/puma&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-Puma-blue.svg?sanitize=true&#34; alt=&#34;StackOverflow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Puma is a &lt;strong&gt;simple, fast, multi-threaded, and highly parallel HTTP 1.1 server for Ruby/Rack applications&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Built For Speed &amp;amp; Parallelism&lt;/h2&gt; &#xA;&lt;p&gt;Puma processes requests using a C-optimized Ragel extension (inherited from Mongrel) that provides fast, accurate HTTP 1.1 protocol parsing in a portable way. Puma then serves the request using a thread pool. Each request is served in a separate thread, so truly parallel Ruby implementations (JRuby, Rubinius) will use all available CPU cores.&lt;/p&gt; &#xA;&lt;p&gt;Originally designed as a server for &lt;a href=&#34;https://github.com/rubinius/rubinius&#34;&gt;Rubinius&lt;/a&gt;, Puma also works well with Ruby (MRI) and JRuby.&lt;/p&gt; &#xA;&lt;p&gt;On MRI, there is a Global VM Lock (GVL) that ensures only one thread can run Ruby code at a time. But if you&#39;re doing a lot of blocking IO (such as HTTP calls to external APIs like Twitter), Puma still improves MRI&#39;s throughput by allowing IO waiting to be done in parallel.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install puma&#xA;$ puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without arguments, puma will look for a rackup (.ru) file in working directory called &lt;code&gt;config.ru&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SSL Connection Support&lt;/h2&gt; &#xA;&lt;p&gt;Puma will install/compile with support for ssl sockets, assuming OpenSSL development files are installed on the system.&lt;/p&gt; &#xA;&lt;p&gt;If the system does not have OpenSSL development files installed, Puma will install/compile, but it will not allow ssl connections.&lt;/p&gt; &#xA;&lt;h2&gt;Frameworks&lt;/h2&gt; &#xA;&lt;h3&gt;Rails&lt;/h3&gt; &#xA;&lt;p&gt;Puma is the default server for Rails, included in the generated Gemfile.&lt;/p&gt; &#xA;&lt;p&gt;Start your server with the &lt;code&gt;rails&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rails server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Many configuration options and Puma features are not available when using &lt;code&gt;rails server&lt;/code&gt;. It is recommended that you use Puma&#39;s executable instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sinatra&lt;/h3&gt; &#xA;&lt;p&gt;You can run your Sinatra application with Puma from the command line like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ruby app.rb -s Puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to actually configure Puma using a config file, like &lt;code&gt;puma.rb&lt;/code&gt;, however, you need to use the &lt;code&gt;puma&lt;/code&gt; executable. To do this, you must add a rackup file to your Sinatra app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config.ru&#xA;require &#39;./app&#39;&#xA;run Sinatra::Application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then start your application using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Puma provides numerous options. Consult &lt;code&gt;puma -h&lt;/code&gt; (or &lt;code&gt;puma --help&lt;/code&gt;) for a full list of CLI options, or see &lt;code&gt;Puma::DSL&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/dsl.rb&#34;&gt;dsl.rb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also find several configuration examples as part of the &lt;a href=&#34;https://github.com/puma/puma/tree/master/test/config&#34;&gt;test&lt;/a&gt; suite.&lt;/p&gt; &#xA;&lt;p&gt;For debugging purposes, you can set the environment variable &lt;code&gt;PUMA_LOG_CONFIG&lt;/code&gt; with a value and the loaded configuration will be printed as part of the boot process.&lt;/p&gt; &#xA;&lt;h3&gt;Thread Pool&lt;/h3&gt; &#xA;&lt;p&gt;Puma uses a thread pool. You can set the minimum and maximum number of threads that are available in the pool with the &lt;code&gt;-t&lt;/code&gt; (or &lt;code&gt;--threads&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -t 8:32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Puma will automatically scale the number of threads, from the minimum until it caps out at the maximum, based on how much traffic is present. The current default is &lt;code&gt;0:16&lt;/code&gt; and on MRI is &lt;code&gt;0:5&lt;/code&gt;. Feel free to experiment, but be careful not to set the number of maximum threads to a large number, as you may exhaust resources on the system (or cause contention for the Global VM Lock, when using MRI).&lt;/p&gt; &#xA;&lt;p&gt;Be aware that additionally Puma creates threads on its own for internal purposes (e.g. handling slow clients). So, even if you specify -t 1:1, expect around 7 threads created in your application.&lt;/p&gt; &#xA;&lt;h3&gt;Clustered mode&lt;/h3&gt; &#xA;&lt;p&gt;Puma also offers &#34;clustered mode&#34;. Clustered mode &lt;code&gt;fork&lt;/code&gt;s workers from a master process. Each child process still has its own thread pool. You can tune the number of workers with the &lt;code&gt;-w&lt;/code&gt; (or &lt;code&gt;--workers&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -t 8:32 -w 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with the &lt;code&gt;WEB_CONCURRENCY&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ WEB_CONCURRENCY=3 puma -t 8:32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that threads are still used in clustered mode, and the &lt;code&gt;-t&lt;/code&gt; thread flag setting is per worker, so &lt;code&gt;-w 2 -t 16:16&lt;/code&gt; will spawn 32 threads in total, with 16 in each worker process.&lt;/p&gt; &#xA;&lt;p&gt;In clustered mode, Puma can &#34;preload&#34; your application. This loads all the application code &lt;em&gt;prior&lt;/em&gt; to forking. Preloading reduces total memory usage of your application via an operating system feature called &lt;a href=&#34;https://en.wikipedia.org/wiki/Copy-on-write&#34;&gt;copy-on-write&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;WEB_CONCURRENCY&lt;/code&gt; environment variable is set to a value &amp;gt; 1 (and &lt;code&gt;--prune-bundler&lt;/code&gt; has not been specified), preloading will be enabled by default. Otherwise, you can use the &lt;code&gt;--preload&lt;/code&gt; flag from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -w 3 --preload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you&#39;re using a configuration file, you can use the &lt;code&gt;preload_app!&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/puma.rb&#xA;workers 3&#xA;preload_app!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Preloading can’t be used with phased restart, since phased restart kills and restarts workers one-by-one, and preloading copies the code of master into the workers.&lt;/p&gt; &#xA;&lt;p&gt;When using clustered mode, you can specify a block in your configuration file that will be run on boot of each worker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/puma.rb&#xA;on_worker_boot do&#xA;  # configuration here&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code can be used to setup the process before booting the application, allowing you to do some Puma-specific things that you don&#39;t want to embed in your application. For instance, you could fire a log notification that a worker booted or send something to statsd. This can be called multiple times.&lt;/p&gt; &#xA;&lt;p&gt;Constants loaded by your application (such as &lt;code&gt;Rails&lt;/code&gt;) will not be available in &lt;code&gt;on_worker_boot&lt;/code&gt; unless preloading is enabled.&lt;/p&gt; &#xA;&lt;p&gt;You can also specify a block to be run before workers are forked, using &lt;code&gt;before_fork&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/puma.rb&#xA;before_fork do&#xA;  # configuration here&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Error handling&lt;/h3&gt; &#xA;&lt;p&gt;If puma encounters an error outside of the context of your application, it will respond with a 500 and a simple textual error message (see &lt;code&gt;Puma::Server#lowlevel_error&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/server.rb&#34;&gt;server.rb&lt;/a&gt;). You can specify custom behavior for this scenario. For example, you can report the error to your third-party error-tracking service (in this example, &lt;a href=&#34;https://rollbar.com&#34;&gt;rollbar&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;lowlevel_error_handler do |e|&#xA;  Rollbar.critical(e)&#xA;  [500, {}, [&#34;An error has occurred, and engineers have been informed. Please reload the page. If you continue to have problems, contact support@example.com\n&#34;]]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Binding TCP / Sockets&lt;/h3&gt; &#xA;&lt;p&gt;Bind Puma to a socket with the &lt;code&gt;-b&lt;/code&gt; (or &lt;code&gt;--bind&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b tcp://127.0.0.1:9292&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a UNIX Socket instead of TCP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b unix:///var/run/puma.sock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to change the permissions of the UNIX socket, just add a umask parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;unix:///var/run/puma.sock?umask=0111&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Need a bit of security? Use SSL sockets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Self-signed SSL certificates (via the &lt;a href=&#34;https://github.com/socketry/localhost&#34;&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt; gem, for development use):&lt;/h4&gt; &#xA;&lt;p&gt;Puma supports the &lt;a href=&#34;https://github.com/socketry/localhost&#34;&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt; gem for self-signed certificates. This is particularly useful if you want to use Puma with SSL locally, and self-signed certificates will work for your use-case. Currently, the integration can only be used in MRI.&lt;/p&gt; &#xA;&lt;p&gt;Puma automatically configures SSL when the &lt;a href=&#34;https://github.com/socketry/localhost&#34;&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt; gem is loaded in a &lt;code&gt;development&lt;/code&gt; environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Add the gem to your Gemfile&#xA;group(:development) do&#xA;  gem &#39;localhost&#39;&#xA;end&#xA;&#xA;# And require it implicitly using bundler&#xA;require &#34;bundler&#34;&#xA;Bundler.require(:default, ENV[&#34;RACK_ENV&#34;].to_sym)&#xA;&#xA;# Alternatively, you can require the gem in config.ru:&#xA;require &#39;./app&#39;&#xA;require &#39;localhost&#39;&#xA;run Sinatra::Application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, Puma must be listening to an SSL socket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ puma -b &#39;ssl://localhost:9292&#39; config.ru&#xA;&#xA;# The following options allow you to reach Puma over HTTP as well:&#xA;$ puma -b ssl://localhost:9292 -b tcp://localhost:9393 config.ru&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Controlling SSL Cipher Suites&lt;/h4&gt; &#xA;&lt;p&gt;To use or avoid specific SSL cipher suites, use &lt;code&gt;ssl_cipher_filter&lt;/code&gt; or &lt;code&gt;ssl_cipher_list&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;h5&gt;Ruby:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;ssl_cipher_filter=!aNULL:AES+SHA&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;JRuby:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?keystore=path_to_keystore&amp;amp;keystore-pass=keystore_password&amp;amp;ssl_cipher_list=TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.openssl.org/docs/man1.1.1/man1/ciphers.html&#34;&gt;https://www.openssl.org/docs/man1.1.1/man1/ciphers.html&lt;/a&gt; for cipher filter format and full list of cipher suites.&lt;/p&gt; &#xA;&lt;p&gt;Disable TLS v1 with the &lt;code&gt;no_tlsv1&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;no_tlsv1=true&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Controlling OpenSSL Verification Flags&lt;/h4&gt; &#xA;&lt;p&gt;To enable verification flags offered by OpenSSL, use &lt;code&gt;verification_flags&lt;/code&gt; (not available for JRuby):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;verification_flags=PARTIAL_CHAIN&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also set multiple verification flags (by separating them with coma):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;verification_flags=PARTIAL_CHAIN,CRL_CHECK&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List of available flags: &lt;code&gt;USE_CHECK_TIME&lt;/code&gt;, &lt;code&gt;CRL_CHECK&lt;/code&gt;, &lt;code&gt;CRL_CHECK_ALL&lt;/code&gt;, &lt;code&gt;IGNORE_CRITICAL&lt;/code&gt;, &lt;code&gt;X509_STRICT&lt;/code&gt;, &lt;code&gt;ALLOW_PROXY_CERTS&lt;/code&gt;, &lt;code&gt;POLICY_CHECK&lt;/code&gt;, &lt;code&gt;EXPLICIT_POLICY&lt;/code&gt;, &lt;code&gt;INHIBIT_ANY&lt;/code&gt;, &lt;code&gt;INHIBIT_MAP&lt;/code&gt;, &lt;code&gt;NOTIFY_POLICY&lt;/code&gt;, &lt;code&gt;EXTENDED_CRL_SUPPORT&lt;/code&gt;, &lt;code&gt;USE_DELTAS&lt;/code&gt;, &lt;code&gt;CHECK_SS_SIGNATURE&lt;/code&gt;, &lt;code&gt;TRUSTED_FIRST&lt;/code&gt;, &lt;code&gt;SUITEB_128_LOS_ONLY&lt;/code&gt;, &lt;code&gt;SUITEB_192_LOS&lt;/code&gt;, &lt;code&gt;SUITEB_128_LOS&lt;/code&gt;, &lt;code&gt;PARTIAL_CHAIN&lt;/code&gt;, &lt;code&gt;NO_ALT_CHAINS&lt;/code&gt;, &lt;code&gt;NO_CHECK_TIME&lt;/code&gt; (see &lt;a href=&#34;https://www.openssl.org/docs/manmaster/man3/X509_VERIFY_PARAM_set_hostflags.html#VERIFICATION-FLAGS&#34;&gt;https://www.openssl.org/docs/manmaster/man3/X509_VERIFY_PARAM_set_hostflags.html#VERIFICATION-FLAGS&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Control/Status Server&lt;/h3&gt; &#xA;&lt;p&gt;Puma has a built-in status and control app that can be used to query and control Puma.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma --control-url tcp://127.0.0.1:9293 --control-token foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Puma will start the control server on localhost port 9293. All requests to the control server will need to include control token (in this case, &lt;code&gt;token=foo&lt;/code&gt;) as a query parameter. This allows for simple authentication. Check out &lt;code&gt;Puma::App::Status&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/app/status.rb&#34;&gt;status.rb&lt;/a&gt; to see what the status app has available.&lt;/p&gt; &#xA;&lt;p&gt;You can also interact with the control server via &lt;code&gt;pumactl&lt;/code&gt;. This command will restart Puma:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pumactl --control-url &#39;tcp://127.0.0.1:9293&#39; --control-token foo restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see a list of &lt;code&gt;pumactl&lt;/code&gt; options, use &lt;code&gt;pumactl --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration File&lt;/h3&gt; &#xA;&lt;p&gt;You can also provide a configuration file with the &lt;code&gt;-C&lt;/code&gt; (or &lt;code&gt;--config&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -C /path/to/config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If no configuration file is specified, Puma will look for a configuration file at &lt;code&gt;config/puma.rb&lt;/code&gt;. If an environment is specified (via the &lt;code&gt;--environment&lt;/code&gt; flag or through the &lt;code&gt;APP_ENV&lt;/code&gt;, &lt;code&gt;RACK_ENV&lt;/code&gt;, or &lt;code&gt;RAILS_ENV&lt;/code&gt; environment variables) Puma looks for a configuration file at &lt;code&gt;config/puma/&amp;lt;environment_name&amp;gt;.rb&lt;/code&gt; and then falls back to &lt;code&gt;config/puma.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to prevent Puma from looking for a configuration file in those locations, include the &lt;code&gt;--no-config&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma --no-config&#xA;&#xA;# or&#xA;&#xA;$ puma -C &#34;-&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The other side-effects of setting the environment are whether to show stack traces (in &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;), and setting RACK_ENV may potentially affect middleware looking for this value to change their behavior. The default puma RACK_ENV value is &lt;code&gt;development&lt;/code&gt;. You can see all config default values in &lt;code&gt;Puma::Configuration#puma_default_options&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/61c6213fbab/lib/puma/configuration.rb#L182-L204&#34;&gt;configuration.rb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;code&gt;Puma::DSL&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/dsl.rb&#34;&gt;dsl.rb&lt;/a&gt; to see all available options.&lt;/p&gt; &#xA;&lt;h2&gt;Restart&lt;/h2&gt; &#xA;&lt;p&gt;Puma includes the ability to restart itself. When available (MRI, Rubinius, JRuby), Puma performs a &#34;hot restart&#34;. This is the same functionality available in &lt;em&gt;Unicorn&lt;/em&gt; and &lt;em&gt;NGINX&lt;/em&gt; which keep the server sockets open between restarts. This makes sure that no pending requests are dropped while the restart is taking place.&lt;/p&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/restart.md&#34;&gt;Restart documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Signals&lt;/h2&gt; &#xA;&lt;p&gt;Puma responds to several signals. A detailed guide to using UNIX signals with Puma can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/signals.md&#34;&gt;Signals documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Constraints&lt;/h2&gt; &#xA;&lt;p&gt;Some platforms do not support all Puma features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;JRuby&lt;/strong&gt;, &lt;strong&gt;Windows&lt;/strong&gt;: server sockets are not seamless on restart, they must be closed and reopened. These platforms have no way to pass descriptors into a new process that is exposed to Ruby. Also, cluster mode is not supported due to a lack of fork(2).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Cluster mode is not supported due to a lack of fork(2).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;: The way Kubernetes handles pod shutdowns interacts poorly with server processes implementing graceful shutdown, like Puma. See the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/kubernetes.md&#34;&gt;kubernetes section of the documentation&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Bugs&lt;/h2&gt; &#xA;&lt;p&gt;For MRI versions 2.2.7, 2.2.8, 2.2.9, 2.2.10, 2.3.4 and 2.4.1, you may see &lt;code&gt;stream closed in another thread (IOError)&lt;/code&gt;. It may be caused by a &lt;a href=&#34;https://bugs.ruby-lang.org/issues/13632&#34;&gt;Ruby bug&lt;/a&gt;. It can be fixed with the gem &lt;a href=&#34;https://rubygems.org/gems/stopgap_13632&#34;&gt;https://rubygems.org/gems/stopgap_13632&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;if %w(2.2.7 2.2.8 2.2.9 2.2.10 2.3.4 2.4.1).include? RUBY_VERSION&#xA;  begin&#xA;    require &#39;stopgap_13632&#39;&#xA;  rescue LoadError&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Puma has support for Capistrano with an &lt;a href=&#34;https://github.com/seuros/capistrano-puma&#34;&gt;external gem&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is common to use process monitors with Puma. Modern process monitors like systemd or rc.d provide continuous monitoring and restarts for increased reliability in production environments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/jungle/rc.d/README.md&#34;&gt;rc.d&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/systemd.md&#34;&gt;systemd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Community guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/anon987654321/4532cf8d6c59c1f43ec8973faa031103&#34;&gt;Deploying Puma on OpenBSD using relayd and httpd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Extensions&lt;/h2&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/harmjanblok/puma-metrics&#34;&gt;puma-metrics&lt;/a&gt; —&amp;nbsp;export Puma metrics to Prometheus&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yob/puma-plugin-statsd&#34;&gt;puma-plugin-statsd&lt;/a&gt; —&amp;nbsp;send Puma metrics to statsd&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sj26/puma-plugin-systemd&#34;&gt;puma-plugin-systemd&lt;/a&gt; —&amp;nbsp;deeper integration with systemd for notify, status and watchdog&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ylecuyer/puma-status&#34;&gt;puma-status&lt;/a&gt; —&amp;nbsp;Monitor CPU/Mem/Load of running puma instances from the CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Find details for contributing in the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Puma is copyright Evan Phoenix and contributors, licensed under the BSD 3-Clause license. See the included LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rails/rails</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/rails/rails</id>
    <link href="https://github.com/rails/rails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby on Rails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Rails&lt;/h1&gt; &#xA;&lt;h2&gt;What&#39;s Rails?&lt;/h2&gt; &#xA;&lt;p&gt;Rails is a web-application framework that includes everything needed to create database-backed web applications according to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Model-view-controller&#34;&gt;Model-View-Controller (MVC)&lt;/a&gt; pattern.&lt;/p&gt; &#xA;&lt;p&gt;Understanding the MVC pattern is key to understanding Rails. MVC divides your application into three layers: Model, View, and Controller, each with a specific responsibility.&lt;/p&gt; &#xA;&lt;h2&gt;Model layer&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Model layer&lt;/strong&gt;&lt;/em&gt; represents the domain model (such as Account, Product, Person, Post, etc.) and encapsulates the business logic specific to your application. In Rails, database-backed model classes are derived from &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&#34;&gt;Active Record&lt;/a&gt; allows you to present the data from database rows as objects and embellish these data objects with business logic methods. Although most Rails models are backed by a database, models can also be ordinary Ruby classes, or Ruby classes that implement a set of interfaces as provided by the &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&#34;&gt;Active Model&lt;/a&gt; module.&lt;/p&gt; &#xA;&lt;h2&gt;View layer&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;&lt;strong&gt;View layer&lt;/strong&gt;&lt;/em&gt; is composed of &#34;templates&#34; that are responsible for providing appropriate representations of your application&#39;s resources. Templates can come in a variety of formats, but most view templates are HTML with embedded Ruby code (ERB files). Views are typically rendered to generate a controller response or to generate the body of an email. In Rails, View generation is handled by &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&#34;&gt;Action View&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Controller layer&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Controller layer&lt;/strong&gt;&lt;/em&gt; is responsible for handling incoming HTTP requests and providing a suitable response. Usually, this means returning HTML, but Rails controllers can also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and manipulate models, and render view templates in order to generate the appropriate HTTP response. In Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and controller classes are derived from &lt;code&gt;ActionController::Base&lt;/code&gt;. Action Dispatch and Action Controller are bundled together in &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&#34;&gt;Action Pack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Frameworks and libraries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&#34;&gt;Active Record&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&#34;&gt;Active Model&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&#34;&gt;Action Pack&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&#34;&gt;Action View&lt;/a&gt; can each be used independently outside Rails.&lt;/p&gt; &#xA;&lt;p&gt;In addition to that, Rails also comes with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actionmailer/README.rdoc&#34;&gt;Action Mailer&lt;/a&gt;, a library to generate and send emails&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actionmailbox/README.md&#34;&gt;Action Mailbox&lt;/a&gt;, a library to receive emails within a Rails application&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activejob/README.md&#34;&gt;Active Job&lt;/a&gt;, a framework for declaring jobs and making them run on a variety of queuing backends&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actioncable/README.md&#34;&gt;Action Cable&lt;/a&gt;, a framework to integrate WebSockets with a Rails application&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activestorage/README.md&#34;&gt;Active Storage&lt;/a&gt;, a library to attach cloud and local files to Rails applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/actiontext/README.md&#34;&gt;Action Text&lt;/a&gt;, a library to handle rich text content&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/rails/main/activesupport/README.rdoc&#34;&gt;Active Support&lt;/a&gt;, a collection of utility classes and standard library extensions that are useful for Rails, and may also be used independently outside Rails&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Rails at the command prompt if you haven&#39;t yet:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ gem install rails&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;At the command prompt, create a new Rails application:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ rails new myapp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where &#34;myapp&#34; is the application name.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change directory to &lt;code&gt;myapp&lt;/code&gt; and start the web server:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ cd myapp&#xA; $ bin/rails server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Run with &lt;code&gt;--help&lt;/code&gt; or &lt;code&gt;-h&lt;/code&gt; for options.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;http://localhost:3000&lt;/code&gt; and you&#39;ll see the Rails bootscreen with your Rails and Ruby versions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the guidelines to start developing your application. You may find the following resources handy:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/getting_started.html&#34;&gt;Getting Started with Rails&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org&#34;&gt;Ruby on Rails Guides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://api.rubyonrails.org&#34;&gt;The API Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to contribute to Ruby on Rails! Please check out the &lt;a href=&#34;https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html&#34;&gt;Contributing to Ruby on Rails guide&lt;/a&gt; for guidelines about how to proceed. &lt;a href=&#34;https://contributors.rubyonrails.org&#34;&gt;Join us!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trying to report a possible security vulnerability in Rails? Please check out our &lt;a href=&#34;https://rubyonrails.org/security&#34;&gt;security policy&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; &#xA;&lt;p&gt;Everyone interacting in Rails and its sub-projects&#39; codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails &lt;a href=&#34;https://rubyonrails.org/conduct&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Ruby on Rails is released under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spree/spree</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/spree/spree</id>
    <link href="https://github.com/spree/spree" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source multi-language/multi-currency/multi-store eCommerce platform&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spree/spree-dev-docs/54abf615c5280eda8f2308de96d6290f72c1fb1b/spree_vendo_user_doc.png&#34; alt=&#34;Spree Commerce - a headless open-source ecommerce platform for multi-store, marketplace, or B2B global brands&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://spreecommerce.org&#34;&gt;Spree Commerce&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/spree&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/spree.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/spree/spree/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/8277fc2bb0b1f777084f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spree&lt;/strong&gt; is a headless open source e-commerce platform for global brands.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spreecommerce.org/stories/&#34;&gt;Success Stories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spreecommerce.org/integrations/&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spree/spree/milestones?direction=asc&amp;amp;sort=due_date&amp;amp;state=open&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.spreecommerce.org/&#34;&gt;Join our Slack community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/headless-ecommerce-api/&#34;&gt;Headless Commerce&lt;/a&gt;&lt;/strong&gt; - build mobile apps or custom storefronts in any technology, &lt;a href=&#34;https://github.com/spree/spree-storefront-api-v2-js-sdk&#34;&gt;JS/TS SDK available&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/spree-pwa-progressive-web-application/&#34;&gt;PWA&lt;/a&gt;&lt;/strong&gt; - offline shopping experiences like native mobile apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/international-sales-demo/&#34;&gt;Global Commerce&lt;/a&gt;&lt;/strong&gt; - multi currency and multi language support out of the box, different shipping methods / costs for different regions, advanced tax calculation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Store&lt;/strong&gt; - host multiple brands / stores on one Spree instance with different branding, configuration, payment methods, shipping options, product catalogs etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/multi-vendor-marketplace-demo/&#34;&gt;Multi-vendor marketplace&lt;/a&gt;&lt;/strong&gt; - run your own marketplace with multiple suppliers with dedicated Supplier Dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Responsive Admin Panel&lt;/strong&gt; - manage and curate products, users, orders, returns, shipments &amp;amp; more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt; - robust system for orders, shipments, returns and refunds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Carts&lt;/strong&gt; - comprehensive and advanced discounts system&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - over 30 payment provider integration out of the box plus API to integrate any other gateway&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run everywhere&lt;/strong&gt; - cloud, VPS, Docker, Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battle Tested&lt;/strong&gt; - used by thousands of merchants around the globe in all categories since 2007!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully customizable&lt;/strong&gt; - pick and choose parts you want to use and customize everything else (storefront, order processing, API, etc) to create unique solutions that your business requires&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;More features available via extensions&lt;/strong&gt; - dozens of extensions built by community, ready for use for free!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsored by&lt;/h2&gt; &#xA;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spree/spree-dev-docs/master/.gitbook/assets/spree_vendo_user_doc_2.png&#34; a&gt; &lt;/a&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt;Vendo&lt;/a&gt; is a great fit for marketplaces of all sizes - either with own fulfillment and multiple warehouses or in a dropshipping model. Vendo &lt;strong&gt;automates everything&lt;/strong&gt; from &lt;strong&gt;vendor onboarding&lt;/strong&gt;, accepting buyer &lt;strong&gt;payments in over 135 currencies&lt;/strong&gt;, to supplier &lt;strong&gt;payouts in 50 countries&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Vendo ensures excellent buyer experience with smooth product discovery and search, a multitude of payment methods and optimal shipping cost calculation. Vendo keeps suppliers happy with easy onboarding, automated products sync using their preferred method and easy payouts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.getvendo.com/users/new?typeform-source=spree_github&#34;&gt;Start your 14-day free trial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev-docs.spreecommerce.org/getting-started/installation&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev-docs.spreecommerce.org/&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.spreecommerce.org/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spree/spree-storefront-api-v2-js-sdk&#34;&gt;JavaScript / TypeScript SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Spree is an open source project and we love contributions in any form - pull requests, issues, feature ideas!&lt;/p&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;https://dev-docs.spreecommerce.org/contributing/index&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Spree is released under the &lt;a href=&#34;https://github.com/spree/spree/raw/main/license.md&#34;&gt;New BSD License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>solidusio/solidus</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/solidusio/solidus</id>
    <link href="https://github.com/solidusio/solidus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🛒Solidus, Rails eCommerce System&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/logo.svg?sanitize=true&#34; alt=&#34;Solidus logo&#34;&gt; &#xA;&lt;h1&gt;Solidus&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/solidusio/solidus/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/solidusio/solidus/tree/master.svg?style=shield&#34; alt=&#34;Circle CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/solidus&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/solidus.svg?sanitize=true&#34; alt=&#34;Gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/LICENSE.md&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-BSD-yellowgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34; alt=&#34;Reviewed by Hound&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/supporter/badge.svg?label=Supporters&amp;amp;color=brightgree&#34; alt=&#34;Supporters on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/bronze/badge.svg?label=Bronze%C2%A0Partners&amp;amp;color=brightgree&#34; alt=&#34;Bronze Partners on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/silver/badge.svg?label=Silver%C2%A0Partners&amp;amp;color=brightgree&#34; alt=&#34;Silver Partners on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/gold/badge.svg?label=Gold%C2%A0Partners&amp;amp;color=brightgree&#34; alt=&#34;Gold Partners on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/solidusio/solidus&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/solidusio/solidus/badges/users.svg?sanitize=true&#34; alt=&#34;Open Source Helpers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://slack.solidus.io&#34;&gt;&lt;img src=&#34;http://slack.solidus.io/badge.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A free, open-source ecommerce platform that gives you complete control over your store.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visit our website&lt;/strong&gt;: &lt;a href=&#34;https://solidus.io/&#34;&gt;https://solidus.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read our Community Guidelines&lt;/strong&gt;: &lt;a href=&#34;https://solidus.io/community-guidelines/&#34;&gt;https://solidus.io/community-guidelines/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read our guides&lt;/strong&gt;: &lt;a href=&#34;https://guides.solidus.io/developers/&#34;&gt;https://guides.solidus.io/developers/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Join our Slack&lt;/strong&gt;: &lt;a href=&#34;http://slack.solidus.io/&#34;&gt;http://slack.solidus.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Solidus Security&lt;/strong&gt;: &lt;a href=&#34;https://groups.google.com/forum/#!forum/solidus-security&#34;&gt;mailing list&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#supporting-solidus&#34;&gt;Supporting Solidus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#installation-options&#34;&gt;Installation Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#developing-solidus&#34;&gt;Developing Solidus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supporting Solidus&lt;/h2&gt; &#xA;&lt;p&gt;As a community-driven project, Solidus relies on funds and time donated by developers and stakeholders who use Solidus for their businesses. If you&#39;d like to help Solidus keep growing, please consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/raw/master/CONTRIBUTING.md&#34;&gt;Contribute to the project&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Main Contributor &amp;amp; Director&lt;/h3&gt; &#xA;&lt;p&gt;At present, Nebulab is the main code contributor and director of Solidus, providing technical guidance and coordinating community efforts and activities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nebulab.com/&#34;&gt;&lt;img src=&#34;https://nebulab.com/assets/img/logo-nebulab_gh-dark-light-mode.svg?sanitize=true&#34; alt=&#34;Nebulab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ambassadors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a Solidus Ambassador. Your logo will show up here with a link to your website. &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;Become an Ambassador&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://supergood.software/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/supergoodsoft/f720462/logo/100.png&#34; alt=&#34;Super Good Software&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://karmacreative.io/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fopencollective-production.s3-us-west-1.amazonaws.com%2Fab94d2a0-7253-11e9-a366-37673cc38cee.png&amp;amp;height=100&#34; alt=&#34;Karma Creative&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.moddedeuros.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fimages.opencollective.com%2Fmodded-euros%2Ff1a80ae%2Flogo.png&amp;amp;height=100&#34; alt=&#34;ModdedEuros&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;Solidus is a complete open source ecommerce solution built with Ruby on Rails. It is a fork of &lt;a href=&#34;https://spreecommerce.org&#34;&gt;Spree&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://docs.solidus.io&#34;&gt;Solidus class documentation&lt;/a&gt; and the &lt;a href=&#34;https://guides.solidus.io&#34;&gt;Solidus Guides&lt;/a&gt; for information about the functionality that Solidus provides.&lt;/p&gt; &#xA;&lt;p&gt;Solidus consists of several gems. When you require the &lt;code&gt;solidus&lt;/code&gt; gem in your &lt;code&gt;Gemfile&lt;/code&gt;, Bundler will install all of the gems maintained in this repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/api&#34;&gt;&lt;code&gt;solidus_api&lt;/code&gt;&lt;/a&gt; (RESTful API)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/frontend&#34;&gt;&lt;code&gt;solidus_frontend&lt;/code&gt;&lt;/a&gt; (Cart and storefront)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/backend&#34;&gt;&lt;code&gt;solidus_backend&lt;/code&gt;&lt;/a&gt; (Admin area)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/core&#34;&gt;&lt;code&gt;solidus_core&lt;/code&gt;&lt;/a&gt; (Essential models, mailers, and classes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/sample&#34;&gt;&lt;code&gt;solidus_sample&lt;/code&gt;&lt;/a&gt; (Sample data)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of the gems are designed to work together to provide a fully functional ecommerce platform. However, you may only want to use the &lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/core&#34;&gt;&lt;code&gt;solidus_core&lt;/code&gt;&lt;/a&gt; gem combine it with your own custom frontend, admin interface, and API.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can try the live Solidus demo &lt;a href=&#34;http://demo.solidus.io/&#34;&gt;here.&lt;/a&gt; The admin section can be accessed &lt;a href=&#34;http://demo.solidus.io/admin&#34;&gt;here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also try out Solidus with one-click on Heroku:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/solidusio/solidus-example-app&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can use Docker to run a demo on your local machine. Run the following command to download the image and run it at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -it -p 3000:3000 solidusio/solidus-demo:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The admin interface can be accessed at &lt;a href=&#34;http://localhost:3000/admin/&#34;&gt;http://localhost:3000/admin/&lt;/a&gt;, the default credentials are &lt;code&gt;admin@example.com&lt;/code&gt; and &lt;code&gt;test123&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Begin by making sure you have &lt;a href=&#34;http://imagemagick.org/script/download.php&#34;&gt;Imagemagick&lt;/a&gt; installed, which is required for Paperclip. (You can install it using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; if you&#39;re on a Mac.)&lt;/p&gt; &#xA;&lt;p&gt;To add Solidus, begin with a Rails 5.2, 6 or 6.1 application and a database configured and created.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Solidus&lt;/h3&gt; &#xA;&lt;p&gt;In your application&#39;s root folder run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle add solidus&#xA;bin/rails g solidus:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And follow the prompt&#39;s instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Accessing Solidus Store&lt;/h3&gt; &#xA;&lt;p&gt;Start the Rails server with the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/frontend&#34;&gt;&lt;code&gt;solidus_frontend&lt;/code&gt;&lt;/a&gt; storefront will be accessible at &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; and the admin can be found at &lt;a href=&#34;http://localhost:3000/admin/&#34;&gt;http://localhost:3000/admin/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For information on how to customize your store, check out the &lt;a href=&#34;https://guides.solidus.io/developers/customizations/overview.html&#34;&gt;customization guides&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Default Username/Password&lt;/h3&gt; &#xA;&lt;p&gt;As part of running the above installation steps, you will be asked to set an admin email/password combination. The default values are &lt;code&gt;admin@example.com&lt;/code&gt; and &lt;code&gt;test123&lt;/code&gt;, respectively.&lt;/p&gt; &#xA;&lt;h3&gt;Questions?&lt;/h3&gt; &#xA;&lt;p&gt;The best way to ask questions is to &lt;a href=&#34;http://slack.solidus.io/&#34;&gt;join the Solidus Slack&lt;/a&gt; and join the &lt;a href=&#34;https://solidusio.slack.com/messages/support/details/&#34;&gt;#support channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation options&lt;/h2&gt; &#xA;&lt;p&gt;Instead of a stable build, if you want to use the bleeding edge version of Solidus, use this line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;solidus&#39;, github: &#39;solidusio/solidus&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: The master branch is not guaranteed to ever be in a fully functioning state. It is too risky to use this branch in production.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, the installation generator (&lt;code&gt;solidus:install&lt;/code&gt;) will run migrations as well as adding seed and sample data. This can be disabled using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails g solidus:install --migrate=false --sample=false --seed=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can always perform any of these steps later by using these commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails railties:install:migrations&#xA;bin/rails db:migrate&#xA;bin/rails db:seed&#xA;bin/rails spree_sample:load&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also options and rake tasks provided by &lt;a href=&#34;https://github.com/solidusio/solidus_auth_devise&#34;&gt;solidus_auth_devise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;You may notice that your Solidus store runs slowly in development mode. This can be because in development each CSS and JavaScript is loaded as a separate include. This can be disabled by adding the following to &lt;code&gt;config/environments/development.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.assets.debug = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Turbolinks&lt;/h3&gt; &#xA;&lt;p&gt;To gain some extra speed you may enable Turbolinks inside of Solidus admin.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;code&gt;gem &#39;turbolinks&#39;, &#39;~&amp;gt; 5.0.0&#39;&lt;/code&gt; into your &lt;code&gt;Gemfile&lt;/code&gt; (if not already present) and change &lt;code&gt;vendor/assets/javascripts/spree/backend/all.js&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require turbolinks&#xA;//&#xA;// ... current file content&#xA;//&#xA;//= require spree/backend/turbolinks-integration.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Please be aware that Turbolinks can break extensions and/or customizations to the Solidus admin. Use at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Solidus&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Git repo&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git://github.com/solidusio/solidus.git&#xA;cd solidus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Without Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the gem dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you&#39;re using PostgreSQL or MySQL, you&#39;ll need to install those gems through the DB environment variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# PostgreSQL&#xA;export DB=postgresql&#xA;bin/setup&#xA;&#xA;# MySQL&#xA;export DB=mysql&#xA;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for all the gems to be installed (progress can be checked through &lt;code&gt;docker-compose logs -f app&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can provide the ruby version you want your image to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose build --build-arg RUBY_VERSION=2.6 app&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The rails version can be customized at runtime through &lt;code&gt;RAILS_VERSION&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RAILS_VERSION=&#39;~&amp;gt; 5.0&#39; docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# sqlite&#xA;docker-compose exec app bin/rspec&#xA;# postgres&#xA;docker-compose exec app env DB=postgres bin/rspec&#xA;# mysql&#xA;docker-compose exec app env DB=mysql bin/rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Accessing the databases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# sqlite&#xA;docker-compose exec app sqlite3 /path/to/db&#xA;# postgres&#xA;docker-compose exec app env PGPASSWORD=password psql -U root -h postgres&#xA;# mysql&#xA;docker-compose exec app mysql -u root -h mysql -ppassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to be able to access the &lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#sandbox&#34;&gt;sandbox application&lt;/a&gt;, just make sure to provide the appropriate &lt;code&gt;--binding&lt;/code&gt; option to &lt;code&gt;rails server&lt;/code&gt;. By default, port &lt;code&gt;3000&lt;/code&gt; is exposed, but you can change it through &lt;code&gt;SANDBOX_PORT&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SANDBOX_PORT=4000 docker-compose up -d&#xA;docker-compose exec app bin/sandbox&#xA;docker-compose exec app bin/rails server --binding 0.0.0.0 --port 4000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sandbox&lt;/h3&gt; &#xA;&lt;p&gt;Solidus is meant to be run within the context of Rails application. You can easily create a sandbox application inside of your cloned source directory for testing purposes.&lt;/p&gt; &#xA;&lt;p&gt;This sandbox includes solidus_auth_devise and generates with seed and sample data already loaded.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the sandbox application&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can create a sandbox with PostgreSQL or MySQL by setting the DB environment variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# PostgreSQL&#xA;export DB=postgresql&#xA;bin/sandbox&#xA;&#xA;# MySQL&#xA;export DB=mysql&#xA;bin/sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need to create a Rails 5.2 application for your sandbox, for example if you are still using Ruby 2.4 which is not supported by Rails 6, you can use the &lt;code&gt;RAILS_VERSION&lt;/code&gt; environment variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  export RAILS_VERSION=&#39;~&amp;gt; 5.2.0&#39;&#xA;  bin/setup&#xA;  bin/sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the server (&lt;code&gt;bin/rails&lt;/code&gt; will forward any argument to the sandbox)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Solidus uses &lt;a href=&#34;http://rspec.info&#34;&gt;RSpec&lt;/a&gt; for tests. Refer to its documentation for more information about the testing library.&lt;/p&gt; &#xA;&lt;h4&gt;CircleCI&lt;/h4&gt; &#xA;&lt;p&gt;We use CircleCI to run the tests for Solidus as well as all incoming pull requests. All pull requests must pass to be merged.&lt;/p&gt; &#xA;&lt;p&gt;You can see the build statuses at &lt;a href=&#34;https://circleci.com/gh/solidusio/solidus&#34;&gt;https://circleci.com/gh/solidusio/solidus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Run all tests&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sites.google.com/a/chromium.org/chromedriver/home&#34;&gt;ChromeDriver&lt;/a&gt; is required to run the frontend and backend test suites.&lt;/p&gt; &#xA;&lt;p&gt;To execute all of the test specs, run the &lt;code&gt;bin/build&lt;/code&gt; script at the root of the Solidus project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;createuser --superuser --echo postgres # only the first time&#xA;bin/build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;bin/build&lt;/code&gt; script runs using PostgreSQL by default, but it can be overridden by setting the DB environment variable to &lt;code&gt;DB=sqlite&lt;/code&gt; or &lt;code&gt;DB=mysql&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env DB=mysql bin/build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the command fails with MySQL related errors you can try creating a user with this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Creates a user with the same name as the current user and no restrictions.&#xA;mysql --user=&#34;root&#34; --execute=&#34;CREATE USER &#39;$USER&#39;@&#39;localhost&#39;; GRANT ALL PRIVILEGES ON * . * TO &#39;$USER&#39;@&#39;localhost&#39;;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run an individual test suite&lt;/h4&gt; &#xA;&lt;p&gt;Each gem contains its own series of tests. To run the tests for the core project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd core&#xA;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;rspec&lt;/code&gt; runs the tests for SQLite 3. If you would like to run specs against another database you may specify the database in the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env DB=postgresql bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Code coverage reports&lt;/h4&gt; &#xA;&lt;p&gt;If you want to run the &lt;a href=&#34;https://github.com/colszowka/simplecov&#34;&gt;SimpleCov&lt;/a&gt; code coverage report:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;COVERAGE=true bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extensions&lt;/h3&gt; &#xA;&lt;p&gt;In addition to core functionality provided in Solidus, there are a number of ways to add features to your store that are not (or not yet) part of the core project.&lt;/p&gt; &#xA;&lt;p&gt;A list can be found at &lt;a href=&#34;http://extensions.solidus.io/&#34;&gt;extensions.solidus.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to write an extension for Solidus, you can use the &lt;a href=&#34;https://github.com/solidusio/solidus_dev_support.git&#34;&gt;solidus_dev_support&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Solidus is an open source project and we encourage contributions. Please read &lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; before contributing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mperham/sidekiq</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/mperham/sidekiq</id>
    <link href="https://github.com/mperham/sidekiq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple, efficient background processing for Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sidekiq&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/sidekiq&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/sidekiq.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/mperham/sidekiq/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, efficient background processing for Ruby.&lt;/p&gt; &#xA;&lt;p&gt;Sidekiq uses threads to handle many jobs at the same time in the same process. It does not require Rails but will integrate tightly with Rails to make background processing dead simple.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Latency&lt;/th&gt; &#xA;   &lt;th&gt;Garbage created for 10k jobs&lt;/th&gt; &#xA;   &lt;th&gt;Time to process 100k jobs&lt;/th&gt; &#xA;   &lt;th&gt;Throughput&lt;/th&gt; &#xA;   &lt;th&gt;Ruby&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 6.0.2&lt;/td&gt; &#xA;   &lt;td&gt;3 ms&lt;/td&gt; &#xA;   &lt;td&gt;156 MB&lt;/td&gt; &#xA;   &lt;td&gt;14.0 sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;7100 jobs/sec&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MRI 2.6.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 6.0.0&lt;/td&gt; &#xA;   &lt;td&gt;3 ms&lt;/td&gt; &#xA;   &lt;td&gt;156 MB&lt;/td&gt; &#xA;   &lt;td&gt;19 sec&lt;/td&gt; &#xA;   &lt;td&gt;5200 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;MRI 2.6.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 4.0.0&lt;/td&gt; &#xA;   &lt;td&gt;10 ms&lt;/td&gt; &#xA;   &lt;td&gt;151 MB&lt;/td&gt; &#xA;   &lt;td&gt;22 sec&lt;/td&gt; &#xA;   &lt;td&gt;4500 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 3.5.1&lt;/td&gt; &#xA;   &lt;td&gt;22 ms&lt;/td&gt; &#xA;   &lt;td&gt;1257 MB&lt;/td&gt; &#xA;   &lt;td&gt;125 sec&lt;/td&gt; &#xA;   &lt;td&gt;800 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resque 1.25.2&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;420 sec&lt;/td&gt; &#xA;   &lt;td&gt;240 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DelayedJob 4.1.1&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;465 sec&lt;/td&gt; &#xA;   &lt;td&gt;215 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This benchmark can be found in &lt;code&gt;bin/sidekiqload&lt;/code&gt; and assumes a Redis network latency of 1ms.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redis: 4.0+&lt;/li&gt; &#xA; &lt;li&gt;Ruby: MRI 2.5+ or JRuby 9.2+.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sidekiq 6.0 supports Rails 5.0+ but does not require it.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle add sidekiq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki/Getting-Started&#34;&gt;Getting Started wiki page&lt;/a&gt; and follow the simple setup process. You can watch &lt;a href=&#34;https://www.youtube.com/playlist?list=PLjeHh2LSCFrWGT5uVjUuFKAcrcj5kSai1&#34;&gt;this YouTube playlist&lt;/a&gt; to learn all about Sidekiq and see its features in action. Here&#39;s the Web UI:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mperham/sidekiq/raw/main/examples/web-ui.png&#34; alt=&#34;Web UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Want to Upgrade?&lt;/h2&gt; &#xA;&lt;p&gt;I also sell Sidekiq Pro and Sidekiq Enterprise, extensions to Sidekiq which provide more features, a commercial-friendly license and allow you to support high quality open source development all at the same time. Please see the &lt;a href=&#34;https://sidekiq.org/&#34;&gt;Sidekiq&lt;/a&gt; homepage for more detail.&lt;/p&gt; &#xA;&lt;p&gt;Subscribe to the &lt;strong&gt;&lt;a href=&#34;https://tinyletter.com/sidekiq&#34;&gt;quarterly newsletter&lt;/a&gt;&lt;/strong&gt; to stay informed about the latest features and changes to Sidekiq and its bigger siblings.&lt;/p&gt; &#xA;&lt;h2&gt;Problems?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please do not directly email any Sidekiq committers with questions or problems.&lt;/strong&gt; A community is best served when discussions are held in public.&lt;/p&gt; &#xA;&lt;p&gt;If you have a problem, please review the &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; and &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki/Problems-and-Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; wiki pages. Searching the &lt;a href=&#34;https://github.com/mperham/sidekiq/issues&#34;&gt;issues&lt;/a&gt; for your problem is also a good idea.&lt;/p&gt; &#xA;&lt;p&gt;Sidekiq Pro and Sidekiq Enterprise customers get private email support. You can purchase at &lt;a href=&#34;https://sidekiq.org&#34;&gt;https://sidekiq.org&lt;/a&gt;; email &lt;a href=&#34;mailto:support@contribsys.com&#34;&gt;support@contribsys.com&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;Useful resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Product documentation is in the &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Occasional announcements are made to the &lt;a href=&#34;https://twitter.com/sidekiq&#34;&gt;@sidekiq&lt;/a&gt; Twitter account.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://stackoverflow.com/questions/tagged/sidekiq&#34;&gt;Sidekiq tag&lt;/a&gt; on Stack Overflow has lots of useful Q &amp;amp; A.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Every Friday morning is Sidekiq happy hour: I video chat and answer questions. See the &lt;a href=&#34;https://sidekiq.org/support.html&#34;&gt;Sidekiq support page&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/mperham/sidekiq/raw/main/.github/contributing.md&#34;&gt;the contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/mperham/sidekiq/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for licensing details.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Mike Perham, &lt;a href=&#34;https://twitter.com/getajobmike&#34;&gt;@getajobmike&lt;/a&gt; / &lt;a href=&#34;https://twitter.com/sidekiq&#34;&gt;@sidekiq&lt;/a&gt;, &lt;a href=&#34;https://www.mikeperham.com&#34;&gt;https://www.mikeperham.com&lt;/a&gt; / &lt;a href=&#34;https://www.contribsys.com&#34;&gt;https://www.contribsys.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/logstash</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/elastic/logstash</id>
    <link href="https://github.com/elastic/logstash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Logstash - transport and process your logs, events, or other data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logstash&lt;/h1&gt; &#xA;&lt;p&gt;Logstash is part of the &lt;a href=&#34;https://www.elastic.co/products&#34;&gt;Elastic Stack&lt;/a&gt; along with Beats, Elasticsearch and Kibana. Logstash is a server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite &#34;stash.&#34; (Ours is Elasticsearch, naturally.). Logstash has over 200 plugins, and you can write your own very easily as well.&lt;/p&gt; &#xA;&lt;p&gt;For more info, see &lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;https://www.elastic.co/products/logstash&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for Logstash on the &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html&#34;&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For information about building the documentation, see the README in &lt;a href=&#34;https://github.com/elastic/docs&#34;&gt;https://github.com/elastic/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;You can download officially released Logstash binaries, as well as debian/rpm packages for the supported platforms, from &lt;a href=&#34;https://www.elastic.co/downloads/logstash&#34;&gt;downloads page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.elastic.co/c/logstash&#34;&gt;Logstash Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/index.html&#34;&gt;Logstash Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.freenode.net/?channels=logstash&#34;&gt;#logstash on freenode IRC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;Logstash Product Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/subscriptions&#34;&gt;Elastic Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logstash Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Logstash plugins are hosted in separate repositories under the &lt;a href=&#34;https://github.com/logstash-plugins&#34;&gt;logstash-plugins&lt;/a&gt; github organization. Each plugin is a self-contained Ruby gem which gets published to RubyGems.org.&lt;/p&gt; &#xA;&lt;h3&gt;Writing your own Plugin&lt;/h3&gt; &#xA;&lt;p&gt;Logstash is known for its extensibility. There are hundreds of plugins for Logstash and you can write your own very easily! For more info on developing and testing these plugins, please see the &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/contributing-to-logstash.html&#34;&gt;working with plugins section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Plugin Issues and Pull Requests&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please open new issues and pull requests for plugins under its own repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, if you have to report an issue/enhancement for the Elasticsearch output, please do so &lt;a href=&#34;https://github.com/logstash-plugins/logstash-output-elasticsearch/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Logstash core will continue to exist under this repository and all related issues and pull requests can be submitted here.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Logstash Core&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install JDK version 11 or 17. Make sure to set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable to the path to your JDK installation directory. For example &lt;code&gt;set JAVA_HOME=&amp;lt;JDK_PATH&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install JRuby 9.2.x It is recommended to use a Ruby version manager such as &lt;a href=&#34;https://rvm.io/&#34;&gt;RVM&lt;/a&gt; or &lt;a href=&#34;https://github.com/sstephenson/rbenv&#34;&gt;rbenv&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;rake&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; tool using &lt;code&gt;gem install rake&lt;/code&gt; and &lt;code&gt;gem install bundler&lt;/code&gt; respectively.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RVM install (optional)&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use rvm (ruby version manager) to manage Ruby versions on your machine, follow these directions. In the Logstash folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3&#xA;\curl -sSL https://get.rvm.io | bash -s stable --ruby=$(cat .ruby-version)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Check Ruby version&lt;/h3&gt; &#xA;&lt;p&gt;Before you proceed, please check your ruby version by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ruby -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The printed version should be the same as in the &lt;code&gt;.ruby-version&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Building Logstash&lt;/h3&gt; &#xA;&lt;p&gt;The Logstash project includes the source code for all of Logstash, including the Elastic-Licensed X-Pack features and functions; to run Logstash from source using only the OSS-licensed code, export the &lt;code&gt;OSS&lt;/code&gt; environment variable with a value of &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export OSS=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up the location of the source code to build&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export LOGSTASH_SOURCE=1&#xA;export LOGSTASH_PATH=/YOUR/LOGSTASH/DIRECTORY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run Logstash from the repo you must first bootstrap the environment:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can then use &lt;code&gt;bin/logstash&lt;/code&gt; to start Logstash, but there are no plugins installed. To install default plugins, you can run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake plugin:install-default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the 80+ default plugins which makes Logstash ready to connect to multiple data sources, perform transformations and send the results to Elasticsearch and other destinations.&lt;/p&gt; &#xA;&lt;p&gt;To verify your environment, run the following to send your first event:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/logstash -e &#39;input { stdin { } } output { stdout {} }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should start Logstash with stdin input waiting for you to enter an event&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hello world&#xA;2016-11-11T01:22:14.405+0000 0.0.0.0 hello world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advanced: Drip Launcher&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ninjudd/drip&#34;&gt;Drip&lt;/a&gt; is a tool that solves the slow JVM startup problem while developing Logstash. The drip script is intended to be a drop-in replacement for the java command. We recommend using drip during development, in particular for running tests. Using drip, the first invocation of a command will not be faster but the subsequent commands will be swift.&lt;/p&gt; &#xA;&lt;p&gt;To tell logstash to use drip, set the environment variable &lt;code&gt;JAVACMD=`which drip`&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example (but see the &lt;em&gt;Testing&lt;/em&gt; section below before running rspec for the first time):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JAVACMD=`which drip` bin/rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caveats&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Drip does not work with STDIN. You cannot use drip for running configs which use the stdin plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Building Logstash Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To build the Logstash Reference (open source content only) on your local machine, clone the following repos:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/logstash&#34;&gt;logstash&lt;/a&gt; - contains main docs about core features&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/logstash-docs&#34;&gt;logstash-docs&lt;/a&gt; - contains generated plugin docs&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/docs&#34;&gt;docs&lt;/a&gt; - contains doc build files&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have the same branch checked out in &lt;code&gt;logstash&lt;/code&gt; and &lt;code&gt;logstash-docs&lt;/code&gt;. Check out &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;docs&lt;/code&gt; repo.&lt;/p&gt; &#xA;&lt;p&gt;Run the doc build script from within the &lt;code&gt;docs&lt;/code&gt; repo. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build_docs.pl --doc ../logstash/docs/index.asciidoc --chunk=1 -open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Most of the unit tests in Logstash are written using &lt;a href=&#34;http://rspec.info/&#34;&gt;rspec&lt;/a&gt; for the Ruby parts. For the Java parts, we use junit. For testing you can use the &lt;em&gt;test&lt;/em&gt; &lt;code&gt;rake&lt;/code&gt; tasks and the &lt;code&gt;bin/rspec&lt;/code&gt; command, see instructions below:&lt;/p&gt; &#xA;&lt;h3&gt;Core tests&lt;/h3&gt; &#xA;&lt;p&gt;1- To run the core tests you can use the Gradle task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use the &lt;code&gt;rspec&lt;/code&gt; tool to run all tests or run a specific test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/rspec&#xA;bin/rspec spec/foo/bar_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that before running the &lt;code&gt;rspec&lt;/code&gt; command for the first time you need to set up the RSpec test dependencies by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2- To run the subset of tests covering the Java codebase only run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew javaTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3- To execute the complete test-suite including the integration tests run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4- To execute a single Ruby test run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SPEC_OPTS=&#34;-fd -P logstash-core/spec/logstash/api/commands/default_metadata_spec.rb&#34; ./gradlew :logstash-core:rubyTests --tests org.logstash.RSpecTests    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5- To execute single spec for integration test, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew integrationTests -PrubyIntegrationSpecs=specs/slowlog_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes you might find a change to a piece of Logstash code causes a test to hang. These can be hard to debug.&lt;/p&gt; &#xA;&lt;p&gt;If you set &lt;code&gt;LS_JAVA_OPTS=&#34;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&#34;&lt;/code&gt; you can connect to a running Logstash with your IDEs debugger which can be a great way of finding the issue.&lt;/p&gt; &#xA;&lt;h3&gt;Plugins tests&lt;/h3&gt; &#xA;&lt;p&gt;To run the tests of all currently installed plugins:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:plugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the default set of plugins included in the logstash package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:install-default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Note that if a plugin is installed using the plugin manager &lt;code&gt;bin/logstash-plugin install ...&lt;/code&gt; do not forget to also install the plugins development dependencies using the following command after the plugin installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/logstash-plugin install --development&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building Artifacts&lt;/h2&gt; &#xA;&lt;p&gt;Built artifacts will be placed in the &lt;code&gt;LS_HOME/build&lt;/code&gt; directory, and will create the directory if it is not already present.&lt;/p&gt; &#xA;&lt;p&gt;You can build a Logstash snapshot package as tarball or zip file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleTarDistribution&#xA;./gradlew assembleZipDistribution&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OSS-only artifacts can similarly be built with their own gradle tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleOssTarDistribution&#xA;./gradlew assembleOssZipDistribution&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build .rpm and .deb, but the &lt;a href=&#34;https://github.com/jordansissel/fpm&#34;&gt;fpm&lt;/a&gt; tool is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake artifact:rpm&#xA;rake artifact:deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake artifact:rpm_oss&#xA;rake artifact:deb_oss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using a Custom JRuby Distribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want the build to use a custom JRuby you can do so by setting a path to a custom JRuby distribution&#39;s source root via the &lt;code&gt;custom.jruby.path&lt;/code&gt; Gradle property.&lt;/p&gt; &#xA;&lt;p&gt;E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew clean test -Pcustom.jruby.path=&#34;/path/to/jruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project Principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community: If a newbie has a bad time, it&#39;s a bug.&lt;/li&gt; &#xA; &lt;li&gt;Software: Make it work, then make it right, then make it fast.&lt;/li&gt; &#xA; &lt;li&gt;Technology: If it doesn&#39;t do a thing today, we can make it do it tomorrow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome: ideas, patches, documentation, bug reports, complaints, and even something you drew up on a napkin.&lt;/p&gt; &#xA;&lt;p&gt;Programming is not a required skill. Whatever you&#39;ve seen about open source and maintainers or community members saying &#34;send patches or die&#34; - you will not see that here.&lt;/p&gt; &#xA;&lt;p&gt;It is more important to me that you are able to contribute.&lt;/p&gt; &#xA;&lt;p&gt;For more information about contributing, see the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/logstash/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Homebrew/homebrew-core</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/Homebrew/homebrew-core</id>
    <link href="https://github.com/Homebrew/homebrew-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🍻 Default formulae for the missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Core&lt;/h1&gt; &#xA;&lt;p&gt;Core formulae for the Homebrew package manager.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orgs/Homebrew/discussions&#34;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How do I install these formulae?&lt;/h2&gt; &#xA;&lt;p&gt;Just &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. This is the default tap for Homebrew and is installed by default.&lt;/p&gt; &#xA;&lt;h2&gt;More Documentation, Troubleshooting, Contributing, Security, Community, Donations, License and Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;See these sections in &lt;a href=&#34;https://github.com/Homebrew/brew#homebrew&#34;&gt;Homebrew/brew&#39;s README&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kaminari/kaminari</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/kaminari/kaminari</id>
    <link href="https://github.com/kaminari/kaminari" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡ A Scope &amp; Engine based, clean, powerful, customizable and sophisticated paginator for Ruby webapps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kaminari &lt;a href=&#34;https://github.com/kaminari/kaminari/actions&#34;&gt;&lt;img src=&#34;https://github.com/kaminari/kaminari/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/kaminari/kaminari&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/kaminari/kaminari/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A Scope &amp;amp; Engine based, clean, powerful, customizable and sophisticated paginator for modern web app frameworks and ORMs&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Clean&lt;/h3&gt; &#xA;&lt;p&gt;Does not globally pollute &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt; or &lt;code&gt;AR::Base&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Easy to Use&lt;/h3&gt; &#xA;&lt;p&gt;Just bundle the gem, then your models are ready to be paginated. No configuration required. Don&#39;t have to define anything in your models or helpers.&lt;/p&gt; &#xA;&lt;h3&gt;Simple Scope-based API&lt;/h3&gt; &#xA;&lt;p&gt;Everything is method chainable with less &#34;Hasheritis&#34;. You know, that&#39;s the modern Rails way. No special collection class or anything for the paginated values, instead using a general &lt;code&gt;AR::Relation&lt;/code&gt; instance. So, of course you can chain any other conditions before or after the paginator scope.&lt;/p&gt; &#xA;&lt;h3&gt;Customizable Engine-based I18n-aware Helpers&lt;/h3&gt; &#xA;&lt;p&gt;As the whole pagination helper is basically just a collection of links and non-links, Kaminari renders each of them through its own partial template inside the Engine. So, you can easily modify their behaviour, style or whatever by overriding partial templates.&lt;/p&gt; &#xA;&lt;h3&gt;ORM &amp;amp; Template Engine Agnostic&lt;/h3&gt; &#xA;&lt;p&gt;Kaminari supports multiple ORMs (ActiveRecord, DataMapper, Mongoid, MongoMapper) multiple web frameworks (Rails, Sinatra, Grape), and multiple template engines (ERB, Haml, Slim).&lt;/p&gt; &#xA;&lt;h3&gt;Modern&lt;/h3&gt; &#xA;&lt;p&gt;The pagination helper outputs the HTML5 &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag by default. Plus, the helper supports Rails unobtrusive Ajax.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 3.0, 3.1, 3.2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rails 4.1, 4.2, 5.0, 5.1, 5.2, 6.0, 6.1, 7.0, 7.1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sinatra 1.4, 2.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Haml 3+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mongoid 3+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoMapper 0.9+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DataMapper 1.1.0+&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install kaminari on the default Rails stack, just put this line in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then bundle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re building non-Rails of non-ActiveRecord app and want the pagination feature on it, please take a look at &lt;a href=&#34;https://raw.githubusercontent.com/kaminari/kaminari/master/#other-frameworklibrary-support&#34;&gt;Other Framework/Library Support&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Query Basics&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;code&gt;page&lt;/code&gt; Scope&lt;/h3&gt; &#xA;&lt;p&gt;To fetch the 7th page of users (default &lt;code&gt;per_page&lt;/code&gt; is 25)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.page(7)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: pagination starts at page 1, not at page 0 (page(0) will return the same results as page(1)).&lt;/p&gt; &#xA;&lt;p&gt;Kaminari does not add an &lt;code&gt;order&lt;/code&gt; to queries. To avoid surprises, you should generally include an order in paginated queries. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.order(:name).page(7)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get page numbers or page conditions by using below methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.count                     #=&amp;gt; 1000&#xA;User.page(1).limit_value       #=&amp;gt; 20&#xA;User.page(1).total_pages       #=&amp;gt; 50&#xA;User.page(1).current_page      #=&amp;gt; 1&#xA;User.page(1).next_page         #=&amp;gt; 2&#xA;User.page(2).prev_page         #=&amp;gt; 1&#xA;User.page(1).first_page?       #=&amp;gt; true&#xA;User.page(50).last_page?       #=&amp;gt; true&#xA;User.page(100).out_of_range?   #=&amp;gt; true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;per&lt;/code&gt; Scope&lt;/h3&gt; &#xA;&lt;p&gt;To show a lot more users per each page (change the &lt;code&gt;per&lt;/code&gt; value)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.order(:name).page(7).per(50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;per&lt;/code&gt; scope is not directly defined on the models but is just a method defined on the page scope. This is absolutely reasonable because you will never actually use &lt;code&gt;per&lt;/code&gt; without specifying the &lt;code&gt;page&lt;/code&gt; number.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that &lt;code&gt;per&lt;/code&gt; internally utilizes &lt;code&gt;limit&lt;/code&gt; and so it will override any &lt;code&gt;limit&lt;/code&gt; that was set previously. And if you want to get the size for all request records you can use &lt;code&gt;total_count&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.count                     #=&amp;gt; 1000&#xA;a = User.limit(5); a.count     #=&amp;gt; 5&#xA;a.page(1).per(20).size         #=&amp;gt; 20&#xA;a.page(1).per(20).total_count  #=&amp;gt; 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;padding&lt;/code&gt; Scope&lt;/h3&gt; &#xA;&lt;p&gt;Occasionally you need to pad a number of records that is not a multiple of the page size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.order(:name).page(7).per(50).padding(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;padding&lt;/code&gt; scope also is not directly defined on the models.&lt;/p&gt; &#xA;&lt;h3&gt;Unscoping&lt;/h3&gt; &#xA;&lt;p&gt;If for some reason you need to unscope &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;per&lt;/code&gt; methods you can call &lt;code&gt;except(:limit, :offset)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;users = User.order(:name).page(7).per(50)&#xA;unpaged_users = users.except(:limit, :offset) # unpaged_users will not use the kaminari scopes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuring Kaminari&lt;/h2&gt; &#xA;&lt;h3&gt;General Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;You can configure the following default values by overriding these values using &lt;code&gt;Kaminari.configure&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;default_per_page      # 25 by default&#xA;max_per_page          # nil by default&#xA;max_pages             # nil by default&#xA;window                # 4 by default&#xA;outer_window          # 0 by default&#xA;left                  # 0 by default&#xA;right                 # 0 by default&#xA;page_method_name      # :page by default&#xA;param_name            # :page by default&#xA;params_on_first_page  # false by default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s a handy generator that generates the default configuration file into config/initializers directory. Run the following generator command, then edit the generated file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing &lt;code&gt;page_method_name&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can change the method name &lt;code&gt;page&lt;/code&gt; to &lt;code&gt;bonzo&lt;/code&gt; or &lt;code&gt;plant&lt;/code&gt; or whatever you like, in order to play nice with existing &lt;code&gt;page&lt;/code&gt; method or association or scope or any other plugin that defines &lt;code&gt;page&lt;/code&gt; method on your models.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring Default per_page Value for Each Model by &lt;code&gt;paginates_per&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify default &lt;code&gt;per_page&lt;/code&gt; value per each model using the following declarative DSL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ActiveRecord::Base&#xA;  paginates_per 50&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring Max per_page Value for Each Model by &lt;code&gt;max_paginates_per&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify max &lt;code&gt;per_page&lt;/code&gt; value per each model using the following declarative DSL. If the variable that specified via &lt;code&gt;per&lt;/code&gt; scope is more than this variable, &lt;code&gt;max_paginates_per&lt;/code&gt; is used instead of it. Default value is nil, which means you are not imposing any max &lt;code&gt;per_page&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ActiveRecord::Base&#xA;  max_paginates_per 100&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring max_pages Value for Each Model by &lt;code&gt;max_pages&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify &lt;code&gt;max_pages&lt;/code&gt; value per each model using the following declarative DSL. This value restricts the total number of pages that can be returned. Useful for setting limits on large collections.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ActiveRecord::Base&#xA;  max_pages 100&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring params_on_first_page when using ransack_memory&lt;/h3&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://github.com/richardrails/ransack_memory&#34;&gt;the &lt;code&gt;ransack_memory&lt;/code&gt; gem&lt;/a&gt; and experience problems navigating back to the previous or first page, set the &lt;code&gt;params_on_first_page&lt;/code&gt; setting to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Controllers&lt;/h2&gt; &#xA;&lt;h3&gt;The Page Parameter Is in &lt;code&gt;params[:page]&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Typically, your controller code will look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@users = User.order(:name).page params[:page]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Views&lt;/h2&gt; &#xA;&lt;h3&gt;The Same Old Helper Method&lt;/h3&gt; &#xA;&lt;p&gt;Just call the &lt;code&gt;paginate&lt;/code&gt; helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will render several &lt;code&gt;?page=N&lt;/code&gt; pagination links surrounded by an HTML5 &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;h2&gt;Helpers&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;code&gt;paginate&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output several pagination links such as &lt;code&gt;« First ‹ Prev ... 2 3 4 5 6 7 8 9 10 ... Next › Last »&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Specifying the &#34;inner window&#34; Size (4 by default)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, window: 2 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output something like &lt;code&gt;... 5 6 7 8 9 ...&lt;/code&gt; when 7 is the current page.&lt;/p&gt; &#xA;&lt;h3&gt;Specifying the &#34;outer window&#34; Size (0 by default)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, outer_window: 3 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output something like &lt;code&gt;1 2 3 ...(snip)... 18 19 20&lt;/code&gt; while having 20 pages in total.&lt;/p&gt; &#xA;&lt;h3&gt;Outer Window Can Be Separately Specified by left, right (0 by default)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, left: 1, right: 3 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output something like &lt;code&gt;1 ...(snip)... 18 19 20&lt;/code&gt; while having 20 pages in total.&lt;/p&gt; &#xA;&lt;h3&gt;Changing the Parameter Name (&lt;code&gt;:param_name&lt;/code&gt;) for the Links&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, param_name: :pagina %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would modify the query parameter name on each links.&lt;/p&gt; &#xA;&lt;h3&gt;Extra Parameters (&lt;code&gt;:params&lt;/code&gt;) for the Links&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, params: {controller: &#39;foo&#39;, action: &#39;bar&#39;, format: :turbo_stream} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would modify each link&#39;s &lt;code&gt;url_option&lt;/code&gt;. :&lt;code&gt;controller&lt;/code&gt; and :&lt;code&gt;action&lt;/code&gt; might be the keys in common.&lt;/p&gt; &#xA;&lt;h3&gt;Ajax Links (crazy simple, but works perfectly!)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, remote: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would add &lt;code&gt;data-remote=&#34;true&#34;&lt;/code&gt; to all the links inside.&lt;/p&gt; &#xA;&lt;h3&gt;Specifying an Alternative Views Directory (default is kaminari/)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, views_prefix: &#39;templates&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would search for partials in &lt;code&gt;app/views/templates/kaminari&lt;/code&gt;. This option makes it easier to do things like A/B testing pagination templates/themes, using new/old templates at the same time as well as better integration with other gems such as &lt;a href=&#34;https://github.com/apotonick/cells&#34;&gt;cells&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;link_to_next_page&lt;/code&gt; and &lt;code&gt;link_to_previous_page&lt;/code&gt; (aliased to &lt;code&gt;link_to_prev_page&lt;/code&gt;) Helper Methods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= link_to_next_page @items, &#39;Next Page&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This simply renders a link to the next page. This would be helpful for creating a Twitter-like pagination feature.&lt;/p&gt; &#xA;&lt;p&gt;The helper methods support a &lt;code&gt;params&lt;/code&gt; option to further specify the link. If &lt;code&gt;format&lt;/code&gt; needs to be set, inlude it in the &lt;code&gt;params&lt;/code&gt; hash.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= link_to_next_page @items, &#39;Next Page&#39;, params: {controller: &#39;foo&#39;, action: &#39;bar&#39;, format: :turbo_stream} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;page_entries_info&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= page_entries_info @posts %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This renders a helpful message with numbers of displayed vs. total entries.&lt;/p&gt; &#xA;&lt;p&gt;By default, the message will use the humanized class name of objects in collection: for instance, &#34;project types&#34; for ProjectType models. The namespace will be cut out and only the last name will be used. Override this with the &lt;code&gt;:entry_name&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= page_entries_info @posts, entry_name: &#39;item&#39; %&amp;gt;&#xA;#=&amp;gt; Displaying items 6 - 10 of 26 in total&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;rel_next_prev_link_tags&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= rel_next_prev_link_tags @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This renders the rel next and prev link tags for the head.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;path_to_next_page&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= path_to_next_page @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This returns the server relative path to the next page.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;path_to_prev_page&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= path_to_prev_page @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This returns the server relative path to the previous page.&lt;/p&gt; &#xA;&lt;h2&gt;I18n and Labels&lt;/h2&gt; &#xA;&lt;p&gt;The default labels for &#39;first&#39;, &#39;last&#39;, &#39;previous&#39;, &#39;...&#39; and &#39;next&#39; are stored in the I18n yaml inside the engine, and rendered through I18n API. You can switch the label value per I18n.locale for your internationalized application. Keys and the default values are the following. You can override them by adding to a YAML file in your &lt;code&gt;Rails.root/config/locales&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  views:&#xA;    pagination:&#xA;      first: &#34;&amp;amp;laquo; First&#34;&#xA;      last: &#34;Last &amp;amp;raquo;&#34;&#xA;      previous: &#34;&amp;amp;lsaquo; Prev&#34;&#xA;      next: &#34;Next &amp;amp;rsaquo;&#34;&#xA;      truncate: &#34;&amp;amp;hellip;&#34;&#xA;  helpers:&#xA;    page_entries_info:&#xA;      one_page:&#xA;        display_entries:&#xA;          zero: &#34;No %{entry_name} found&#34;&#xA;          one: &#34;Displaying &amp;lt;b&amp;gt;1&amp;lt;/b&amp;gt; %{entry_name}&#34;&#xA;          other: &#34;Displaying &amp;lt;b&amp;gt;all %{count}&amp;lt;/b&amp;gt; %{entry_name}&#34;&#xA;      more_pages:&#xA;        display_entries: &#34;Displaying %{entry_name} &amp;lt;b&amp;gt;%{first}&amp;amp;nbsp;-&amp;amp;nbsp;%{last}&amp;lt;/b&amp;gt; of &amp;lt;b&amp;gt;%{total}&amp;lt;/b&amp;gt; in total&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use non-English localization see &lt;a href=&#34;https://github.com/svenfuchs/i18n/raw/master/test/test_data/locales/plurals.rb&#34;&gt;i18n rules&lt;/a&gt; for changing &lt;code&gt;one_page:display_entries&lt;/code&gt; block.&lt;/p&gt; &#xA;&lt;h2&gt;Customizing the Pagination Helper&lt;/h2&gt; &#xA;&lt;p&gt;Kaminari includes a handy template generator.&lt;/p&gt; &#xA;&lt;h3&gt;To Edit Your Paginator&lt;/h3&gt; &#xA;&lt;p&gt;Run the generator first,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then edit the partials in your app&#39;s &lt;code&gt;app/views/kaminari/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;For Haml/Slim Users&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://github.com/haml/html2haml&#34;&gt;html2haml gem&lt;/a&gt; or the &lt;a href=&#34;https://github.com/slim-template/html2slim&#34;&gt;html2slim gem&lt;/a&gt; to convert erb templates. The kaminari gem will automatically pick up haml/slim templates if you place them in &lt;code&gt;app/views/kaminari/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Templates&lt;/h3&gt; &#xA;&lt;p&gt;In case you need different templates for your paginator (for example public and admin), you can pass &lt;code&gt;--views-prefix directory&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views default --views-prefix admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;that will generate partials in &lt;code&gt;app/views/admin/kaminari/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;The generator has the ability to fetch several sample template themes from the external repository (&lt;a href=&#34;https://github.com/amatsuda/kaminari_themes&#34;&gt;https://github.com/amatsuda/kaminari_themes&lt;/a&gt;) in addition to the bundled &#34;default&#34; one, which will help you creating a nice looking paginator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views THEME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the full list of available themes, take a look at the themes repository, or just hit the generator without specifying &lt;code&gt;THEME&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple Themes&lt;/h3&gt; &#xA;&lt;p&gt;To utilize multiple themes from within a single application, create a directory within the app/views/kaminari/ and move your custom template files into that directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views default (skip if you have existing kaminari views)&#xA;% cd app/views/kaminari&#xA;% mkdir my_custom_theme&#xA;% cp _*.html.* my_custom_theme/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, reference that directory when calling the &lt;code&gt;paginate&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, theme: &#39;my_custom_theme&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Customize away!&lt;/p&gt; &#xA;&lt;p&gt;Note: if the theme isn&#39;t present or none is specified, kaminari will default back to the views included within the gem.&lt;/p&gt; &#xA;&lt;h2&gt;Paginating Without Issuing SELECT COUNT Query&lt;/h2&gt; &#xA;&lt;p&gt;Generally the paginator needs to know the total number of records to display the links, but sometimes we don&#39;t need the total number of records and just need the &#34;previous page&#34; and &#34;next page&#34; links. For such use case, Kaminari provides &lt;code&gt;without_count&lt;/code&gt; mode that creates a paginatable collection without counting the number of all records. This may be helpful when you&#39;re dealing with a very large dataset because counting on a big table tends to become slow on RDBMS.&lt;/p&gt; &#xA;&lt;p&gt;Just add &lt;code&gt;.without_count&lt;/code&gt; to your paginated object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.page(3).without_count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your view file, you can only use simple helpers like the following instead of the full-featured &lt;code&gt;paginate&lt;/code&gt; helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= link_to_prev_page @users, &#39;Previous Page&#39; %&amp;gt;&#xA;&amp;lt;%= link_to_next_page @users, &#39;Next Page&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Paginating a Generic Array object&lt;/h2&gt; &#xA;&lt;p&gt;Kaminari provides an Array wrapper class that adapts a generic Array object to the &lt;code&gt;paginate&lt;/code&gt; view helper. However, the &lt;code&gt;paginate&lt;/code&gt; helper doesn&#39;t automatically handle your Array object (this is intentional and by design). &lt;code&gt;Kaminari::paginate_array&lt;/code&gt; method converts your Array object into a paginatable Array that accepts &lt;code&gt;page&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@paginatable_array = Kaminari.paginate_array(my_array_object).page(params[:page]).per(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can specify the &lt;code&gt;total_count&lt;/code&gt; value through options Hash. This would be helpful when handling an Array-ish object that has a different &lt;code&gt;count&lt;/code&gt; value from actual &lt;code&gt;count&lt;/code&gt; such as RSolr search result or when you need to generate a custom pagination. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@paginatable_array = Kaminari.paginate_array([], total_count: 145).page(params[:page]).per(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, in the case of using an external API to source the page of data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;page_size = 10&#xA;one_page = get_page_of_data params[:page], page_size&#xA;@paginatable_array = Kaminari.paginate_array(one_page.data, total_count: one_page.total_count).page(params[:page]).per(page_size)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating Friendly URLs and Caching&lt;/h2&gt; &#xA;&lt;p&gt;Because of the &lt;code&gt;page&lt;/code&gt; parameter and Rails routing, you can easily generate SEO and user-friendly URLs. For any resource you&#39;d like to paginate, just add the following to your &lt;code&gt;routes.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;resources :my_resources do&#xA;  get &#39;page/:page&#39;, action: :index, on: :collection&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using Rails 4 or later, you can simplify route definitions by using &lt;code&gt;concern&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;concern :paginatable do&#xA;  get &#39;(page/:page)&#39;, action: :index, on: :collection, as: &#39;&#39;&#xA;end&#xA;&#xA;resources :my_resources, concerns: :paginatable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create URLs like &lt;code&gt;/my_resources/page/33&lt;/code&gt; instead of &lt;code&gt;/my_resources?page=33&lt;/code&gt;. This is now a friendly URL, but it also has other added benefits...&lt;/p&gt; &#xA;&lt;p&gt;Because the &lt;code&gt;page&lt;/code&gt; parameter is now a URL segment, we can leverage on Rails page &lt;a href=&#34;http://guides.rubyonrails.org/caching_with_rails.html#page-caching&#34;&gt;caching&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;NOTE: In this example, I&#39;ve pointed the route to my &lt;code&gt;:index&lt;/code&gt; action. You may have defined a custom pagination action in your controller - you should point &lt;code&gt;action: :your_custom_action&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Other Framework/Library Support&lt;/h2&gt; &#xA;&lt;h3&gt;The kaminari gem&lt;/h3&gt; &#xA;&lt;p&gt;Technically, the kaminari gem consists of 3 individual components:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kaminari-core: the core pagination logic&#xA;kaminari-activerecord: Active Record adapter&#xA;kaminari-actionview: Action View adapter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, bundling &lt;code&gt;gem &#39;kaminari&#39;&lt;/code&gt; is equivalent to the following 2 lines (kaminari-core is referenced from the adapters):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari-activerecord&#39;&#xA;gem &#39;kaminari-actionview&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For Other ORM Users&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use other supported ORMs instead of ActiveRecord, for example Mongoid, bundle its adapter instead of kaminari-activerecord.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari-mongoid&#39;&#xA;gem &#39;kaminari-actionview&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kaminari currently provides adapters for the following ORMs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Active Record: &lt;a href=&#34;https://github.com/kaminari/kaminari/tree/master/kaminari-activerecord&#34;&gt;https://github.com/kaminari/kaminari/tree/master/kaminari-activerecord&lt;/a&gt; (included in this repo)&lt;/li&gt; &#xA; &lt;li&gt;Mongoid: &lt;a href=&#34;https://github.com/kaminari/kaminari-mongoid&#34;&gt;https://github.com/kaminari/kaminari-mongoid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MongoMapper: &lt;a href=&#34;https://github.com/kaminari/kaminari-mongo_mapper&#34;&gt;https://github.com/kaminari/kaminari-mongo_mapper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DataMapper: &lt;a href=&#34;https://github.com/kaminari/kaminari-data_mapper&#34;&gt;https://github.com/kaminari/kaminari-data_mapper&lt;/a&gt; (would not work on kaminari 1.0.x)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For Other Web Framework Users&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use other web frameworks instead of Rails + Action View, for example Sinatra, bundle its adapter instead of kaminari-actionview.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari-activerecord&#39;&#xA;gem &#39;kaminari-sinatra&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kaminari currently provides adapters for the following web frameworks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Action View: &lt;a href=&#34;https://github.com/kaminari/kaminari/tree/master/kaminari-actionview&#34;&gt;https://github.com/kaminari/kaminari/tree/master/kaminari-actionview&lt;/a&gt; (included in this repo)&lt;/li&gt; &#xA; &lt;li&gt;Sinatra: &lt;a href=&#34;https://github.com/kaminari/kaminari-sinatra&#34;&gt;https://github.com/kaminari/kaminari-sinatra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grape: &lt;a href=&#34;https://github.com/kaminari/kaminari-grape&#34;&gt;https://github.com/kaminari/kaminari-grape&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For More Information&lt;/h2&gt; &#xA;&lt;p&gt;Check out Kaminari recipes on the GitHub Wiki for more advanced tips and techniques. &lt;a href=&#34;https://github.com/kaminari/kaminari/wiki/Kaminari-recipes&#34;&gt;https://github.com/kaminari/kaminari/wiki/Kaminari-recipes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Questions, Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to message me on Github (amatsuda) or Twitter (&lt;a href=&#34;https://twitter.com/a_matsuda&#34;&gt;@a_matsuda&lt;/a&gt;) ☇☇☇ :)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Kaminari&lt;/h2&gt; &#xA;&lt;p&gt;Fork, fix, then send a pull request.&lt;/p&gt; &#xA;&lt;p&gt;To run the test suite locally against all supported frameworks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% bundle install&#xA;% rake test:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To target the test suite against one framework:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rake test:active_record_50&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find a list of supported test tasks by running &lt;code&gt;rake -T&lt;/code&gt;. You may also find it useful to run a specific test for a specific framework. To do so, you&#39;ll have to first make sure you have bundled everything for that configuration, then you can run the specific test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% BUNDLE_GEMFILE=&#39;gemfiles/active_record_50.gemfile&#39; bundle install&#xA;% BUNDLE_GEMFILE=&#39;gemfiles/active_record_50.gemfile&#39; TEST=kaminari-core/test/requests/navigation_test.rb bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2011- Akira Matsuda. See MIT-LICENSE for further details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>freeCodeCamp/how-to-contribute-to-open-source</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/freeCodeCamp/how-to-contribute-to-open-source</id>
    <link href="https://github.com/freeCodeCamp/how-to-contribute-to-open-source" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A guide to contributing to open source&lt;/p&gt;&lt;hr&gt;&lt;details&gt; &#xA; &lt;summary&gt; &lt;strong&gt; Read this guide in other languages &lt;/strong&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README.md&#34;&gt; English &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-MR.md&#34;&gt; मराठी &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-BN.md&#34;&gt; বাংলা &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-CN.md&#34;&gt; 中文 &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-RU.md&#34;&gt; русский &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-RO.md&#34;&gt; Românesc &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-IT.md&#34;&gt; Italiano &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-ES.md&#34;&gt; Español &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-pt-BR.md&#34;&gt; Português (BR) &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-DE.md&#34;&gt; Deutsch &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-HE.md&#34;&gt; עברית &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-GR.md&#34;&gt; Ελληνικά &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-FR.md&#34;&gt; Français &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-TR.md&#34;&gt; Turkish &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-KO.md&#34;&gt; 한국어 &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-JA.md&#34;&gt; 日本語 &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-HI.md&#34;&gt; हिंदी &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/README-FA.md&#34;&gt; فارسی &lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- Do not translate this --&gt; &#xA;&lt;h1&gt;Welcome newbie Open Source contributors!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&#34; alt=&#34;Pull Requests Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.firsttimersonly.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true&#34; alt=&#34;first-timers-only Friendly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/freeCodeCamp/how-to-contribute-to-open-source&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/freeCodeCamp/how-to-contribute-to-open-source.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a list of resources for people who are new to contributing to Open Source.&lt;/p&gt; &#xA;&lt;p&gt;If you find additional resources, please contribute a pull request.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions or comments, please create an issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#contributing-to-open-source-in-general&#34;&gt;Contributing to Open Source in general&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#direct-github-searches&#34;&gt;Direct GitHub searches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#mozillas-contributor-ecosystem&#34;&gt;Mozilla&#39;s contributor ecosystem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#useful-articles-for-new-open-source-contributors&#34;&gt;Useful articles for new Open Source contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#using-version-control&#34;&gt;Using Version Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#open-source-books&#34;&gt;Open Source books&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#open-source-contribution-initiatives&#34;&gt;Open Source contribution initiatives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#open-source-programs-to-participate-in&#34;&gt;Open Source programs to participate in&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freeCodeCamp/how-to-contribute-to-open-source/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to Open Source in general&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/the-definitive-guide-to-contributing-to-open-source-900d5f9f2282/&#34;&gt;The Definitive Guide to Contributing to Open Source&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/DoomHammerNG&#34;&gt;@DoomHammerNG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorial_series/an-introduction-to-open-source&#34;&gt;An Intro to Open Source&lt;/a&gt; - Tutorials by DigitalOcean to guide you on your way to contribution success here on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codetriage.com/&#34;&gt;Code Triage&lt;/a&gt; - another, really nice, tool for finding popular repositories and issues filtered by language.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fossforge.com&#34;&gt;Forge Your Future with Open Source&lt;/a&gt; ($) - Book devoted to explaining open source, how to find a project, and how to start contributing. Inclusive of all roles in software development, not just programmers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MunGell/awesome-for-beginners&#34;&gt;Awesome-for-beginners&lt;/a&gt; - a GitHub repo that amasses projects with good bugs for new contributors, and applies labels to describe them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensource.guide/&#34;&gt;Open Source Guides&lt;/a&gt; - Collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an Open Source project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/45-github-issues-dos-and-donts-dfec9ab4b612&#34;&gt;45 Github Issues Dos and Don’ts&lt;/a&gt; - Do&#39;s and Don&#39;ts on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.github.com/&#34;&gt;GitHub Guides&lt;/a&gt; - basic guides on how to use GitHub effectively.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danthareja/contribute-to-open-source&#34;&gt;Contribute to Open Source&lt;/a&gt; - Learn the GitHub workflow by contributing code to a simulation project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linuxfoundation.org/resources/open-source-guides/&#34;&gt;Linux Foundation&#39;s Open Source Guides for the Enterprise&lt;/a&gt; - The Linux Foundation&#39;s guides to Open Source projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/open-source-etiquette-guidebook/&#34;&gt;CSS Tricks An Open Source Etiquette Guidebook&lt;/a&gt; - An Open Source Etiquette Guidebook, written by Kent C. Dodds And Sarah Drasner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dipakkr/A-to-Z-Resources-for-Students&#34;&gt;A to Z Resources for Students&lt;/a&gt; - Curated list of resources and opportunities for college students to learn a new coding language.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.pullrequestroulette.com/&#34;&gt;Pull Request Roulette&lt;/a&gt; - This site has a list of pull requests submitted for review belonging to Open Source projects hosted on Github.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github&#34;&gt;&#34;How to Contribute to an Open Source Project on GitHub&#34; by Egghead.io&lt;/a&gt; - A step-by-step video guide of how to start contributing to Open Source projects on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@kevinjin/contributing-to-open-source-walkthrough-part-0-b3dc43e6b720&#34;&gt;Contributing to Open Source: A Live Walkthrough from Beginning to End&lt;/a&gt; - This walkthrough of an open source contribution covers everything from picking a suitable project, working on an issue, to getting the PR merged in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/how-to-contribute-to-an-open-source-project/&#34;&gt;&#34;How to Contribute to Open Source Project&#34; by Sarah Drasner&lt;/a&gt; - They are focusing on the nitty-gritty of contributing a pull request (PR) to someone else’s project on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerearth.com:443/getstarted-opensource/&#34;&gt;&#34;How to get started with Open Source&#34; by Sayan Chowdhury&lt;/a&gt; - This article covers the resources for contributing to open source for beginners based on their favorite language interest.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.blog/2020-01-22-browse-good-first-issues-to-start-contributing-to-open-source/&#34;&gt;&#34;Browse good first issues to start contributing to open source&#34;&lt;/a&gt; - GitHub now helps you find good first issues to start contributing to open source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubygarage.org/blog/how-contribute-to-open-source-projects&#34;&gt;&#34;How to Contribute to Open Source Project&#34; by Maryna Z&lt;/a&gt; - This comprehensive article is directed towards businesses (but still useful for individual contributors) where it talks about why, how, and what open-source projects to contribute to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zero-to-mastery/start-here-guidelines&#34;&gt;&#34;start-here-guidelines&#34; by Andrei&lt;/a&gt; - Lets Git started in the world of opensource, starting in the opensource playground. Especially designed for education and practical experience purposes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/numfocus/getting-started-with-open-source&#34;&gt;&#34;Getting Started with Open Source&#34; by NumFocus&lt;/a&gt; - a GitHub repo that helps contributors overcome barriers to entry in open-source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chryz-hub/opensource-4-everyone&#34;&gt;&#34;Opensoure-4-everyone&#34; by Chryz-hub&lt;/a&gt; - A repository on everything related to open source. This is a project to help with GitHub membership visibility, practice with basic and advance git commands, getting started with open source, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://open-advice.org/&#34;&gt;&#34;Open Advice&#34;&lt;/a&gt; - Knowledge collection from a wide variety of Free Software projects. It answers the question what 42 prominent contributors would have liked to know when they started so you can get a head-start no matter how and where you contribute.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lab.github.com/&#34;&gt;&#34;GitHub Learning Lab&#34;&lt;/a&gt; - Level up your skills with GitHub Learning Lab. Our friendly bot will take you through a series of fun, practical projects to learn the skills you need in no time—and share helpful feedback along the way.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi.org/10.1371/journal.pcbi.1007296&#34;&gt;&#34;Ten simple rules for helping newcomers become contributors to open projects&#34;&lt;/a&gt; - This article covers rules based on studies of many communities and experiences of members, leaders, and observers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dataschool.io/how-to-contribute-on-github/&#34;&gt;&#34;Step-by-Step guide to contributing on GitHub&#34;&lt;/a&gt; - a step-by-step guide with supporting visuals and links regarding the whole process of contributing to an open source project.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Direct GitHub searches&lt;/h2&gt; &#xA;&lt;p&gt;Search links that point directly to suitable issues to contribute to on GitHub.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Abeginner&amp;amp;type=issues&#34;&gt;is:issue is:open label:beginner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Aeasy&amp;amp;type=issues&#34;&gt;is:issue is:open label:easy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Afirst-timers-only&amp;amp;type=issues&#34;&gt;is:issue is:open label:first-timers-only&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Agood-first-bug&amp;amp;type=issues&#34;&gt;is:issue is:open label:good-first-bug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&amp;amp;type=issues&#34;&gt;is:issue is:open label:&#34;good first issue&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Astarter&amp;amp;type=issues&#34;&gt;is:issue is:open label:starter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Aup-for-grabs&amp;amp;type=issues&#34;&gt;is:issue is:open label:up-for-grabs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Aeasy-fix&amp;amp;type=issues&#34;&gt;is:issue is:open label:easy-fix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3A%22beginner+friendly%22&amp;amp;type=issues&#34;&gt;is:issue is:open label:&#34;beginner friendly&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/search?q=is%3Aissue+is%3Aopen+label%3Ayour-first-pr&amp;amp;type=issues&#34;&gt;is:issue is:open label:your-first-pr&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mozilla&#39;s contributor ecosystem&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/buglist.cgi?quicksearch=good-first-bug&#34;&gt;Good First Bugs&lt;/a&gt; - bugs that developers have identified as a good introduction to the project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/MDN/Contribute&#34;&gt;MDN Web Docs&lt;/a&gt; - help the MDN Web Docs team in documenting the web platform by fixing content issues and platform bugs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/buglist.cgi?quicksearch=mentor%3A%40&#34;&gt;Mentored Bugs&lt;/a&gt; - bugs that have a mentor assigned who will be there on IRC to help you when you get stuck while working on a fix.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.joshmatthews.net/bugsahoy/&#34;&gt;Bugs Ahoy&lt;/a&gt; - a site dedicated to finding bugs on Bugzilla.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firefox-dev.tools/&#34;&gt;Firefox DevTools&lt;/a&gt; - a site dedicated to bugs filed for the developer tools in the Firefox browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whatcanidoformozilla.org/&#34;&gt;What Can I Do For Mozilla&lt;/a&gt; - figure out what you can work on by answering a bunch of questions about your skill set and interests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/StartMozilla&#34;&gt;Start Mozilla&lt;/a&gt; - a Twitter account that tweets about issues fit for contributors new to the Mozilla ecosystem.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful articles for new Open Source contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/collections/choosing-projects&#34;&gt;How to choose (and contribute to) your first Open Source project&lt;/a&gt; by &lt;a href=&#34;https://github.com/github&#34;&gt;@GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/finding-your-first-open-source-project-or-bug-to-work-on-1712f651e5ba/&#34;&gt;How to find your first Open Source bug to fix&lt;/a&gt; by &lt;a href=&#34;https://github.com/Shubheksha&#34;&gt;@Shubheksha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kentcdodds.com/blog/first-timers-only/&#34;&gt;First Timers Only&lt;/a&gt; by &lt;a href=&#34;https://github.com/kentcdodds&#34;&gt;@kentcdodds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20201009150545/https://www.hanselman.com/blog/bring-kindness-back-to-open-source&#34;&gt;Bring Kindness Back to Open Source&lt;/a&gt; by &lt;a href=&#34;https://github.com/shanselman&#34;&gt;@shanselman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nearform.com/blog/getting-into-open-source-for-the-first-time/&#34;&gt;Getting into Open Source for the First Time&lt;/a&gt; by &lt;a href=&#34;https://github.com/mcdonnelldean&#34;&gt;@mcdonnelldean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensource.guide/how-to-contribute/&#34;&gt;How to Contribute to Open Source&lt;/a&gt; by &lt;a href=&#34;https://github.com/github&#34;&gt;@GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://8thlight.com/blog/doug-bradbury/2016/06/29/how-to-find-bug-in-your-code.html&#34;&gt;How to Find a Bug in Your Code&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/dougbradbury&#34;&gt;@dougbradbury&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;Mastering Markdown&lt;/a&gt; by &lt;a href=&#34;https://github.com/github&#34;&gt;@GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@forCrowd/first-mission-contributors-page-df24e6e70705#.2v2g0no29&#34;&gt;First mission: Contributors page&lt;/a&gt; by &lt;a href=&#34;https://github.com/forCrowd&#34;&gt;@forCrowd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/how-to-make-your-first-open-source-contribution-in-just-5-minutes-aaad1fc59c9a/&#34;&gt;How to make your first Open Source contribution in just 5 minutes&lt;/a&gt; by &lt;a href=&#34;https://github.com/Roshanjossey/&#34;&gt;@roshanjossey&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/i-just-got-my-free-hacktoberfest-shirt-heres-a-quick-way-you-can-get-yours-fa78d6e24307/&#34;&gt;I just got my free Hacktoberfest shirt. Here’s a quick way you can get yours.&lt;/a&gt; by &lt;a href=&#34;https://www.freecodecamp.org/news/author/quincylarson/&#34;&gt;@quincylarson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/codezillas/a-bitter-guide-to-open-source-a8e3b6a3c1c4&#34;&gt;A Bitter Guide To Open Source&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@ken_wheeler&#34;&gt;@ken_wheeler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/contributing-to-open-source-the-sharks-are-photoshopped-47e22db1ab86&#34;&gt;A junior developer’s step-by-step guide to contributing to Open Source for the first time&lt;/a&gt; by &lt;a href=&#34;https://hackernoon.com/u/letakeane&#34;&gt;@LetaKeane&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/illumination/path-to-learning-git-and-github-be93518e06dc&#34;&gt;Learn Git and GitHub Step By Step (on Windows)&lt;/a&gt; by &lt;a href=&#34;https://ows-ali.medium.com/&#34;&gt;@ows-ali&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://careerkarma.com/blog/open-source-projects-for-beginners/&#34;&gt;Why Open Source and How?&lt;/a&gt; by &lt;a href=&#34;https://careerkarma.com/blog/author/jamesgallagher/&#34;&gt;@james-gallagher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackerearth.com/getstarted-opensource/&#34;&gt;How to get started with Open Source - By Sayan Chowdhury&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kentcdodds.com/blog/what-open-source-project-should-i-contribute-to/&#34;&gt;What open-source should I contribute to&lt;/a&gt; by &lt;a href=&#34;https://github.com/kentcdodds&#34;&gt;@kentcdodds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developeraspire.hashnode.dev/an-immersive-introductory-guide-to-open-source&#34;&gt;An immersive introductory guide to Open-source&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/DeveloperAspire&#34;&gt;Franklin Okolie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.blog/2020/08/03/getting-started-with-contributing-to-open-source/&#34;&gt;Getting started with contributing to open source&lt;/a&gt; by &lt;a href=&#34;https://stackoverflow.blog/author/zara-cooper/&#34;&gt;Zara Cooper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://workat.tech/general/article/open-source-contribution-guide-xmhf1k601vdj&#34;&gt;Beginner&#39;s guide to open-source contribution&lt;/a&gt; by &lt;a href=&#34;https://github.com/pydevsg&#34;&gt;Sudipto Ghosh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensource.com/life/16/1/8-ways-contribute-open-source-without-writing-code&#34;&gt;8 non-code ways to contribute to open source&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/OpenSourceWay&#34;&gt;OpenSource&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/what-is-open-source-software-explained-in-plain-english/&#34;&gt;What is Open Source Software? OSS Explained in Plain English&lt;/a&gt; by &lt;a href=&#34;https://www.freecodecamp.org/news/author/jessica-wilkins/&#34;&gt;Jessica Wilkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/how-to-start-an-open-source-project-on-github-tips-from-building-my-trending-repo/&#34;&gt;How to Start an Open Source Project on GitHub – Tips from Building My Trending Repo&lt;/a&gt; by &lt;a href=&#34;https://github.com/Rishit-dagli&#34;&gt;@Rishit-dagli&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using Version Control&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://think-like-a-git.net/&#34;&gt;Think Like (a) Git&lt;/a&gt; - Git introduction for &#34;advanced beginners&#34;, but are still struggling, in order to give you a simple strategy to safely experiment with git.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://try.github.io/&#34;&gt;Try Git&lt;/a&gt; - Learn Git in 15 minutes from within your browser for free.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/giteveryday&#34;&gt;Everyday Git&lt;/a&gt; - A useful minimum set of commands for Everyday Git.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ohshitgit.com/&#34;&gt;Oh shit, git!&lt;/a&gt; - how to get out of common &lt;code&gt;git&lt;/code&gt; mistakes described in plain English; also see &lt;a href=&#34;https://dangitgit.com/&#34;&gt;Dangit, git!&lt;/a&gt; for the page without swears.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials&#34;&gt;Atlassian Git Tutorials&lt;/a&gt; - various tutorials on using &lt;code&gt;git&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://education.github.com/git-cheat-sheet-education.pdf&#34;&gt;GitHub Git Cheat Sheet&lt;/a&gt; (PDF)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.freecodecamp.org/t/wiki-git-resources/13136&#34;&gt;freeCodeCamp&#39;s Wiki on Git Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=juLIxo42A_s&#34;&gt;GitHub Flow&lt;/a&gt; (42:06) - GitHub talk on how to make a pull request.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/github/getting-started-with-github/git-and-github-learning-resources&#34;&gt;GitHub Learning Resources&lt;/a&gt; - Git and GitHub learning resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Pro Git&lt;/a&gt; - The entire Pro Git book, written by Scott Chacon and Ben Straub and published by Apress.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jlord/git-it-electron&#34;&gt;Git-it&lt;/a&gt; - Step by step Git tutorial desktop app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/k88hudson/git-flight-rules&#34;&gt;Flight Rules for Git&lt;/a&gt; - A guide about what to do when things go wrong.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platzi.github.io/git-slides/#/&#34;&gt;Git Guide for Beginners in Spanish&lt;/a&gt; - A complete guide of slides about git and GitHub explained in Spanish. Una guía completa de diapositivas sobre git y GitHub explicadas en Español.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gitkraken.com/git-client&#34;&gt;Git Kraken&lt;/a&gt; - Visual, cross-platform, and interactive &lt;code&gt;git&lt;/code&gt; desktop application for version control.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/git-tips/tips&#34;&gt;Git Tips&lt;/a&gt; - Collection of most commonly used git tips and tricks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sethrobertson.github.io/GitBestPractices/&#34;&gt;Git Best Practices&lt;/a&gt; - Commit Often, Perfect Later, Publish Once: Git Best Practices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/&#34;&gt;Git Interactive Tutorial&lt;/a&gt; - Learn Git in the most visual and interactive way.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=apGV9Kg7ics&#34;&gt;Complete Git and GitHub Tutorial&lt;/a&gt; (1:12:39) - Full Git and GitHub walkthrough by &lt;a href=&#34;https://www.youtube.com/channel/UCBGOUQHNNtNGcGzVq5rIXjw&#34;&gt;Kunal Kushwaha&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source books&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://producingoss.com/&#34;&gt;Producing Open Source Software&lt;/a&gt; - Producing Open Source Software is a book about the human side of Open Source development. It describes how successful projects operate, the expectations of users and developers, and the culture of free software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensource.com/resources/ebooks&#34;&gt;Open Source Book Series&lt;/a&gt; - Learn more about Open Source and the growing Open Source movement with a comprehensive list of free eBooks from &lt;a href=&#34;https://opensource.com&#34;&gt;https://opensource.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tldp.org/HOWTO/Software-Release-Practice-HOWTO/&#34;&gt;Software Release Practice HOWTO&lt;/a&gt; - This HOWTO describes good release practices for Linux and other Open-Source projects. By following these practices, you will make it as easy as possible for users to build your code and use it, and for other developers to understand your code and cooperate with you to improve it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archive.org/details/opensources2.000diborich&#34;&gt;Open Sources 2.0 : The Continuing Evolution&lt;/a&gt; (2005) - Open Sources 2.0 is a collection of insightful and thought-provoking essays from today&#39;s technology leaders that continues painting the evolutionary picture that developed in the 1999 book, Open Sources: Voices from the Revolution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.aosabook.org/en/git.html&#34;&gt;The Architecture of Open Source Applications&lt;/a&gt; - Show how various aspects of Git work under the covers to enable distributed workflows, and how it differs from other version control systems (VCSs).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/openbook/opensources/book/&#34;&gt;Open Sources: Voices from the Open Source Revolution&lt;/a&gt; - Essays from open-source pioneers such as Linus Torvalds (Linux), Larry Wall (Perl), and Richard Stallman (GNU).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source contribution initiatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://up-for-grabs.net/&#34;&gt;Up For Grabs&lt;/a&gt; - Contains projects with beginner-friendly issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.firsttimersonly.com/&#34;&gt;First Timers Only&lt;/a&gt; - A list of bugs that are labelled &#34;first-timers-only&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firstcontributions.github.io/&#34;&gt;First Contributions&lt;/a&gt; - Make your first Open Source contribution in 5 minutes. A tool and tutorial to help beginners get started with contributions. &lt;a href=&#34;https://github.com/firstcontributions/first-contributions&#34;&gt;Here&lt;/a&gt; is the GitHub source code for the site and opportunity to make a contribution to the repository itself.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;Hacktoberfest&lt;/a&gt; - A program to encourage Open Source contributions. Earn gifts like t-shirts and stickers by making at least 4 pull requests in the month of October.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://24pullrequests.com&#34;&gt;24 Pull Requests&lt;/a&gt; - 24 Pull Requests is a project to promote Open Source collaboration during the month of December.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ovio.org&#34;&gt;Ovio&lt;/a&gt; - A platform with a curated selection of contributor-friendly projects. It has a &lt;a href=&#34;https://ovio.org/issues&#34;&gt;powerful issue search tool&lt;/a&gt; and let&#39;s you save projects and issues for later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://summerofcode.withgoogle.com/&#34;&gt;Google Summer of Code&lt;/a&gt; - An annually run paid program by Google focused on bringing more student developers into open-source software development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://railsgirlssummerofcode.org/&#34;&gt;Rails Girls Summer of Code&lt;/a&gt; - A global fellowship program for women and non-binary coders where they work on existing open-source projects and expand their skillset.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fellowship.mlh.io/&#34;&gt;Major League Hacking Fellowship&lt;/a&gt; - A remote internship alternative for aspiring technologists where they build, or contribute to open-source projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gssoc.girlscript.tech/&#34;&gt;Girlscript Summer of Code&lt;/a&gt; - A three-month-long Open-Source Program conducted every summer by the Girlscript Foundation. With constant efforts, participants contribute to numerous projects under the extreme guidance of skilled mentors over these months. With such exposure, students begin to contribute to real-world projects from the comfort of their homes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source programs to participate in&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://summerofcode.withgoogle.com&#34;&gt;Google Summer of Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fossasia.org&#34;&gt;FossAsia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fellowship.mlh.io&#34;&gt;MLH Fellowship&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.outreachy.org&#34;&gt;Outreachy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hacktoberfest.digitalocean.com&#34;&gt;Hacktoberfest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/&#34;&gt;CNCF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/research/academic-program/rl-open-source-fest/&#34;&gt;Microsoft Reinforcement learning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://licensebuttons.net/l/by-sa/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;This work is licensed under a &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/linguist</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/github/linguist</id>
    <link href="https://github.com/github/linguist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Language Savant. If your repository&#39;s language is being reported incorrectly, send us a pull request!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linguist&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/github/linguist/actions&#34;&gt;&lt;img src=&#34;https://github.com/github/linguist/workflows/Run%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library is used on GitHub.com to detect blob languages, ignore binary or vendored files, suppress generated files in diffs, and generate language breakdown graphs.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/docs/how-linguist-works.md&#34;&gt;How Linguist works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/docs/overrides.md&#34;&gt;Change Linguist&#39;s behaviour with overrides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/docs/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/CONTRIBUTING.md&#34;&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem install github-linguist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Linguist is a Ruby library so you will need a recent version of Ruby installed. There are known problems with the macOS/XCode supplied version of Ruby that causes problems installing some of the dependencies. Accordingly, we highly recommend you install a version of Ruby using Homebrew, &lt;code&gt;rbenv&lt;/code&gt;, &lt;code&gt;rvm&lt;/code&gt;, &lt;code&gt;ruby-build&lt;/code&gt;, &lt;code&gt;asdf&lt;/code&gt; or other packaging system, before attempting to install Linguist and the dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Linguist uses &lt;a href=&#34;https://github.com/brianmario/charlock_holmes&#34;&gt;&lt;code&gt;charlock_holmes&lt;/code&gt;&lt;/a&gt; for character encoding and &lt;a href=&#34;https://github.com/libgit2/rugged&#34;&gt;&lt;code&gt;rugged&lt;/code&gt;&lt;/a&gt; for libgit2 bindings for Ruby. These components have their own dependencies.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;charlock_holmes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;cmake&lt;/li&gt; &#xA;   &lt;li&gt;pkg-config&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://site.icu-project.org/&#34;&gt;ICU&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://zlib.net/&#34;&gt;zlib&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;rugged &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://curl.haxx.se/libcurl/&#34;&gt;libcurl&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.openssl.org&#34;&gt;OpenSSL&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You may need to install missing dependencies before you can install Linguist. For example, on macOS with &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install cmake pkg-config icu4c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install cmake pkg-config libicu-dev zlib1g-dev libcurl4-openssl-dev libssl-dev ruby-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Application usage&lt;/h3&gt; &#xA;&lt;p&gt;Linguist can be used in your application as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;rugged&#39;&#xA;require &#39;linguist&#39;&#xA;&#xA;repo = Rugged::Repository.new(&#39;.&#39;)&#xA;project = Linguist::Repository.new(repo, repo.head.target_id)&#xA;project.language       #=&amp;gt; &#34;Ruby&#34;&#xA;project.languages      #=&amp;gt; { &#34;Ruby&#34; =&amp;gt; 119387 }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command line usage&lt;/h3&gt; &#xA;&lt;h4&gt;Git Repository&lt;/h4&gt; &#xA;&lt;p&gt;A repository&#39;s languages stats can also be assessed from the command line using the &lt;code&gt;github-linguist&lt;/code&gt; executable. Without any options, &lt;code&gt;github-linguist&lt;/code&gt; will output the language breakdown by percentage and file size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path-to-repository&#xA;github-linguist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can try running &lt;code&gt;github-linguist&lt;/code&gt; on the root directory in this repository itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ github-linguist&#xA;66.84%  264519     Ruby&#xA;24.68%  97685      C&#xA;6.57%   25999      Go&#xA;1.29%   5098       Lex&#xA;0.32%   1257       Shell&#xA;0.31%   1212       Dockerfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Additional options&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;code&gt;--breakdown&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;code&gt;--breakdown&lt;/code&gt; or &lt;code&gt;-b&lt;/code&gt; flag will additionally show the breakdown of files by language.&lt;/p&gt; &#xA;&lt;p&gt;You can try running &lt;code&gt;github-linguist&lt;/code&gt; on the root directory in this repository itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ github-linguist --breakdown&#xA;66.84%  264519     Ruby&#xA;24.68%  97685      C&#xA;6.57%   25999      Go&#xA;1.29%   5098       Lex&#xA;0.32%   1257       Shell&#xA;0.31%   1212       Dockerfile&#xA;&#xA;Ruby:&#xA;Gemfile&#xA;Rakefile&#xA;bin/git-linguist&#xA;bin/github-linguist&#xA;ext/linguist/extconf.rb&#xA;github-linguist.gemspec&#xA;lib/linguist.rb&#xA;…&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;--json&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;code&gt;--json&lt;/code&gt; or &lt;code&gt;-j&lt;/code&gt; flag output the data into JSON format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ github-linguist --json&#xA;{&#34;Dockerfile&#34;:{&#34;size&#34;:1212,&#34;percentage&#34;:&#34;0.31&#34;},&#34;Ruby&#34;:{&#34;size&#34;:264519,&#34;percentage&#34;:&#34;66.84&#34;},&#34;C&#34;:{&#34;size&#34;:97685,&#34;percentage&#34;:&#34;24.68&#34;},&#34;Lex&#34;:{&#34;size&#34;:5098,&#34;percentage&#34;:&#34;1.29&#34;},&#34;Shell&#34;:{&#34;size&#34;:1257,&#34;percentage&#34;:&#34;0.32&#34;},&#34;Go&#34;:{&#34;size&#34;:25999,&#34;percentage&#34;:&#34;6.57&#34;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This option can be used in conjunction with &lt;code&gt;--breakdown&lt;/code&gt; to get a full list of files along with the size and percentage data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ github-linguist --breakdown --json&#xA;{&#34;Dockerfile&#34;:{&#34;size&#34;:1212,&#34;percentage&#34;:&#34;0.31&#34;,&#34;files&#34;:[&#34;Dockerfile&#34;,&#34;tools/grammars/Dockerfile&#34;]},&#34;Ruby&#34;:{&#34;size&#34;:264519,&#34;percentage&#34;:&#34;66.84&#34;,&#34;files&#34;:[&#34;Gemfile&#34;,&#34;Rakefile&#34;,&#34;bin/git-linguist&#34;,&#34;bin/github-linguist&#34;,&#34;ext/linguist/extconf.rb&#34;,&#34;github-linguist.gemspec&#34;,&#34;lib/linguist.rb&#34;,...]}}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Single file&lt;/h4&gt; &#xA;&lt;p&gt;Alternatively you can find stats for a single file using the &lt;code&gt;github-linguist&lt;/code&gt; executable.&lt;/p&gt; &#xA;&lt;p&gt;You can try running &lt;code&gt;github-linguist&lt;/code&gt; on files in this repository itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ github-linguist grammars.yml&#xA;grammars.yml: 884 lines (884 sloc)&#xA;  type:      Text&#xA;  mime type: text/x-yaml&#xA;  language:  YAML&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;If you have Docker installed you can build an image and run Linguist within a container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t linguist .&#xA;$ docker run --rm -v $(pwd):$(pwd) -w $(pwd) -t linguist&#xA;66.84%  264519     Ruby&#xA;24.68%  97685      C&#xA;6.57%   25999      Go&#xA;1.29%   5098       Lex&#xA;0.32%   1257       Shell&#xA;0.31%   1212       Dockerfile&#xA;$ docker run --rm -v $(pwd):$(pwd) -w $(pwd) -t linguist github-linguist --breakdown&#xA;66.84%  264519     Ruby&#xA;24.68%  97685      C&#xA;6.57%   25999      Go&#xA;1.29%   5098       Lex&#xA;0.32%   1257       Shell&#xA;0.31%   1212       Dockerfile&#xA;&#xA;Ruby:&#xA;Gemfile&#xA;Rakefile&#xA;bin/git-linguist&#xA;bin/github-linguist&#xA;ext/linguist/extconf.rb&#xA;github-linguist.gemspec&#xA;lib/linguist.rb&#xA;…&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please check out our &lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The language grammars included in this gem are covered by their repositories&#39; respective licenses. &lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/vendor/README.md&#34;&gt;&lt;code&gt;vendor/README.md&lt;/code&gt;&lt;/a&gt; lists the repository for each grammar.&lt;/p&gt; &#xA;&lt;p&gt;All other files are covered by the MIT license, see &lt;a href=&#34;https://raw.githubusercontent.com/github/linguist/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tradingview/charting-library-examples</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/tradingview/charting-library-examples</id>
    <link href="https://github.com/tradingview/charting-library-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Examples of Charting Library integrations with other libraries, frameworks and data transports&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TradingView Charting Library Integration Examples&lt;/h1&gt; &#xA;&lt;h2&gt;What is Charting Library&lt;/h2&gt; &#xA;&lt;p&gt;Charting Library is a standalone solution for displaying charts. This free, downloadable library is hosted on your servers and is connected to your data feed to be used in your website or app. &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Learn more and download&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;h3&gt;android&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; integration into Android WebView&lt;/p&gt; &#xA;&lt;h3&gt;angular5&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;https://angular.io/&#34;&gt;Angular 5&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;ios-swift&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; integration into iOS WKWebView&lt;/p&gt; &#xA;&lt;h3&gt;nextjs-javascript&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;nuxtjs&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;https://nuxtjs.org/&#34;&gt;Nuxt.js&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;react-javascript&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;react-native&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;https://facebook.github.io/react-native/&#34;&gt;React Native&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;react-typescript&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt;, &lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt; and &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;ruby-on-rails&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby-on-Rails&lt;/a&gt; Integration Example&lt;/p&gt; &#xA;&lt;h3&gt;vuejs&lt;/h3&gt; &#xA;&lt;p&gt;TradingView &lt;a href=&#34;https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/&#34;&gt;Charting Library&lt;/a&gt; and &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; Integration Example&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruby/ruby</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/ruby/ruby</id>
    <link href="https://github.com/ruby/ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Ruby Programming Language [mirror]&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MinGW%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MinGW/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MinGW&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MJIT%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MJIT/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MJIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Ubuntu%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Windows%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Windows/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/ruby/ruby/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0sy8rrxut4o0k960/branch/master?svg=true&#34; alt=&#34;AppVeyor status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/ruby/ruby&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/ruby/ruby.svg?branch=master&#34; alt=&#34;Travis Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/ruby/ruby/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/ruby/ruby.svg?sanitize=true&#34; alt=&#34;Cirrus Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Ruby?&lt;/h1&gt; &#xA;&lt;p&gt;Ruby is an interpreted object-oriented programming language often used for web development. It also offers many scripting features to process plain text and serialized files, or manage system tasks. It is simple, straightforward, and extensible.&lt;/p&gt; &#xA;&lt;h2&gt;Features of Ruby&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Normal&lt;/strong&gt; Object-oriented Features (e.g. class, method calls)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; Object-oriented Features (e.g. mix-in, singleton-method)&lt;/li&gt; &#xA; &lt;li&gt;Operator Overloading&lt;/li&gt; &#xA; &lt;li&gt;Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Iterators and Closures&lt;/li&gt; &#xA; &lt;li&gt;Garbage Collection&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Loading of Object Files (on some architectures)&lt;/li&gt; &#xA; &lt;li&gt;Highly Portable (works on many Unix-like/POSIX compatible platforms as well as Windows, macOS, etc.) cf. &lt;a href=&#34;https://github.com/ruby/ruby/raw/master/doc/maintainers.rdoc#label-Platform+Maintainers&#34;&gt;https://github.com/ruby/ruby/blob/master/doc/maintainers.rdoc#label-Platform+Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to get Ruby with Git&lt;/h2&gt; &#xA;&lt;p&gt;For a complete list of ways to install Ruby, including using third-party tools like rvm, see:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/downloads/&#34;&gt;https://www.ruby-lang.org/en/downloads/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The mirror of the Ruby source tree can be checked out with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some other branches under development. Try the following command to see the list of branches:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git ls-remote https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also want to use &lt;a href=&#34;https://git.ruby-lang.org/ruby.git&#34;&gt;https://git.ruby-lang.org/ruby.git&lt;/a&gt; (actual master of Ruby source) if you are a committer.&lt;/p&gt; &#xA;&lt;h2&gt;Ruby home page&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/en/master/index.html&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/ja/master/index.html&#34;&gt;Japanese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mailing list&lt;/h2&gt; &#xA;&lt;p&gt;There is a mailing list to discuss Ruby. To subscribe to this list, please send the following phrase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;subscribe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in the mail body (not subject) to the address &lt;a href=&#34;mailto:ruby-talk-request@ruby-lang.org?subject=Join%20Ruby%20Mailing%20List&amp;amp;body=subscribe&#34;&gt;ruby-talk-request@ruby-lang.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copying&lt;/h2&gt; &#xA;&lt;p&gt;See the file &lt;a href=&#34;rdoc-ref:COPYING&#34;&gt;COPYING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Questions about the Ruby language can be asked on the &lt;a href=&#34;https://www.ruby-lang.org/en/community/mailing-lists&#34;&gt;Ruby-Talk&lt;/a&gt; mailing list or on websites like &lt;a href=&#34;https://stackoverflow.com&#34;&gt;https://stackoverflow.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bugs should be reported at &lt;a href=&#34;https://bugs.ruby-lang.org&#34;&gt;https://bugs.ruby-lang.org&lt;/a&gt;. Read &lt;a href=&#34;https://docs.ruby-lang.org/en/master/reporting_issues_md.html&#34;&gt;&#34;Reporting Issues&#34;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.ruby-lang.org/en/master/contributing_md.html&#34;&gt;&#34;Contributing to Ruby&#34;&lt;/a&gt;, which includes setup and build instructions.&lt;/p&gt; &#xA;&lt;h2&gt;The Author&lt;/h2&gt; &#xA;&lt;p&gt;Ruby was originally designed and developed by Yukihiro Matsumoto (Matz) in 1995.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:matz@ruby-lang.org&#34;&gt;matz@ruby-lang.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>faker-ruby/faker</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/faker-ruby/faker</id>
    <link href="https://github.com/faker-ruby/faker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library for generating fake data such as names, addresses, and phone numbers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/36028424/40263395-4318481e-5b44-11e8-92e5-3dcc1ce169b3.png&#34; alt=&#34;logotype a happy-07&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Faker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/faker-ruby/faker/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/faker-ruby/faker/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/faker&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/faker.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://inch-ci.org/github/faker-ruby/faker&#34;&gt;&lt;img src=&#34;https://inch-ci.org/github/faker-ruby/faker.svg?branch=master&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/stympy/faker/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/ef54c7f9df86e965d64b/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/stympy/faker/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/ef54c7f9df86e965d64b/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dependabot.com/compatibility-score.html?dependency-name=faker&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver&#34;&gt;&lt;img src=&#34;https://api.dependabot.com/badges/compatibility_score?dependency-name=faker&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver&#34; alt=&#34;SemVer compatibility&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This gem is a port of &lt;a href=&#34;https://metacpan.org/pod/Data::Faker&#34;&gt;Perl&#39;s Data::Faker library&lt;/a&gt; that generates fake data.&lt;/p&gt; &#xA;&lt;p&gt;It comes in very handy for taking screenshots (taking screenshots for my project, &lt;a href=&#34;http://catchthebest.com/&#34;&gt;Catch the Best&lt;/a&gt; was the original impetus for the creation of this gem), having real-looking test data, and having your database populated with more than one or two records while you&#39;re doing development.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#faker&#34;&gt;Faker&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#note&#34;&gt;NOTE&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#cli&#34;&gt;CLI&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#ensuring-unique-values&#34;&gt;Ensuring unique values&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#deterministic-random&#34;&gt;Deterministic Random&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#generators&#34;&gt;Generators&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#default&#34;&gt;Default&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#blockchain&#34;&gt;Blockchain&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#fantasy&#34;&gt;Fantasy&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#creature&#34;&gt;Creature&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#games&#34;&gt;Games&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#japanese-media&#34;&gt;Japanese Media&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#movies&#34;&gt;Movies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#music&#34;&gt;Music&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#quotes&#34;&gt;Quotes&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#sports&#34;&gt;Sports&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#tv-shows&#34;&gt;Tv Shows&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#customization&#34;&gt;Customization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NOTE&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;While Faker generates data at random, returned values are not guaranteed to be unique by default. You must explicitly specify when you require unique values, see &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#ensuring-unique-values&#34;&gt;details&lt;/a&gt;. Values also can be deterministic if you use the deterministic feature, see &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/#deterministic-random&#34;&gt;details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;This is the &lt;code&gt;master&lt;/code&gt; branch of Faker and may contain changes that are not yet released. Please refer the README of your version for the available methods. List of all versions is &lt;a href=&#34;https://github.com/stympy/faker/releases&#34;&gt;available here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem install faker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: if you are getting a &lt;code&gt;uninitialized constant Faker::[some_class]&lt;/code&gt; error, your version of the gem is behind the one documented here. To make sure that your gem is the one documented here, change the line in your Gemfile to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;faker&#39;, :git =&amp;gt; &#39;https://github.com/faker-ruby/faker.git&#39;, :branch =&amp;gt; &#39;master&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;faker&#39;&#xA;&#xA;Faker::Name.name      #=&amp;gt; &#34;Christophe Bartell&#34;&#xA;&#xA;Faker::Internet.email #=&amp;gt; &#34;kirsten.greenholt@corkeryfisher.info&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;p&gt;Instructions are available in the &lt;a href=&#34;https://github.com/faker-ruby/faker-bot&#34;&gt;faker-bot README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ensuring unique values&lt;/h3&gt; &#xA;&lt;p&gt;Prefix your method call with &lt;code&gt;unique&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Name.unique.name # This will return a unique name every time it is called&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If too many unique values are requested from a generator that has a limited number of potential values, a &lt;code&gt;Faker::UniqueGenerator::RetryLimitExceeded&lt;/code&gt; exception may be raised. It is possible to clear the record of unique values that have been returned, for example between tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Name.unique.clear # Clears used values for Faker::Name&#xA;Faker::UniqueGenerator.clear # Clears used values for all generators&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You also can give some already used values to the unique generator if you have collisions with the generated data (i.e: using FactoryBot with random and manually set values).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Usage:&#xA;# Faker::&amp;lt;generator&amp;gt;.unique.exclude(method, arguments, list)&#xA;&#xA;# Add &#39;azerty&#39; and &#39;wxcvbn&#39; to the string generator with 6 char length&#xA;Faker::Lorem.unique.exclude :string, [number: 6], %w[azerty wxcvbn]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deterministic Random&lt;/h3&gt; &#xA;&lt;p&gt;Faker supports seeding of its pseudo-random number generator (PRNG) to provide deterministic output of repeated method calls.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Config.random = Random.new(42)&#xA;Faker::Company.bs #=&amp;gt; &#34;seize collaborative mindshare&#34;&#xA;Faker::Company.bs #=&amp;gt; &#34;engage strategic platforms&#34;&#xA;Faker::Config.random = Random.new(42)&#xA;Faker::Company.bs #=&amp;gt; &#34;seize collaborative mindshare&#34;&#xA;Faker::Company.bs #=&amp;gt; &#34;engage strategic platforms&#34;&#xA;&#xA;Faker::Config.random = nil # seeds the PRNG using default entropy sources&#xA;Faker::Config.random.seed #=&amp;gt; 185180369676275068918401850258677722187&#xA;Faker::Company.bs #=&amp;gt; &#34;cultivate viral synergies&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Generators&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: Some of the generators below aren&#39;t released yet. If you want to use them, change the line in your gemfile to:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;faker&#39;, :git =&amp;gt; &#39;https://github.com/faker-ruby/faker.git&#39;, :branch =&amp;gt; &#39;master&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Default&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/address.md&#34;&gt;Faker::Address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/alphanumeric.md&#34;&gt;Faker::Alphanumeric&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/ancient.md&#34;&gt;Faker::Ancient&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/app.md&#34;&gt;Faker::App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/appliance.md&#34;&gt;Faker::Appliance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/artist.md&#34;&gt;Faker::Artist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/avatar.md&#34;&gt;Faker::Avatar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/bank.md&#34;&gt;Faker::Bank&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/barcode.md&#34;&gt;Faker::Barcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/beer.md&#34;&gt;Faker::Beer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/blood.md&#34;&gt;Faker::Blood&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/boolean.md&#34;&gt;Faker::Boolean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/bossa_nova.md&#34;&gt;Faker::BossaNova&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/business.md&#34;&gt;Faker::Business&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/camera.md&#34;&gt;Faker::Camera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/cannabis.md&#34;&gt;Faker::Cannabis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/chile_rut.md&#34;&gt;Faker::ChileRut&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/chuck_norris.md&#34;&gt;Faker::ChuckNorris&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/code.md&#34;&gt;Faker::Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/coffee.md&#34;&gt;Faker::Coffee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/coin.md&#34;&gt;Faker::Coin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/color.md&#34;&gt;Faker::Color&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/commerce.md&#34;&gt;Faker::Commerce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/company.md&#34;&gt;Faker::Company&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/compass.md&#34;&gt;Faker::Compass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/computer.md&#34;&gt;Faker::Computer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/construction.md&#34;&gt;Faker::Construction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/cosmere.md&#34;&gt;Faker::Cosmere&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/crypto.md&#34;&gt;Faker::Crypto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/crypto_coin.md&#34;&gt;Faker::CryptoCoin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/currency.md&#34;&gt;Faker::Currency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/date.md&#34;&gt;Faker::Date&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/dc_comics.md&#34;&gt;Faker::DcComics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/demographic.md&#34;&gt;Faker::Demographic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/dessert.md&#34;&gt;Faker::Dessert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/device.md&#34;&gt;Faker::Device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/driving_licence.md&#34;&gt;Faker::DrivingLicence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/drone/drone.md&#34;&gt;Faker::Drone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/educator.md&#34;&gt;Faker::Educator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/electrical_components.md&#34;&gt;Faker::ElectricalComponents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/emotion.md&#34;&gt;Faker::Emotion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/esport.md&#34;&gt;Faker::Esport&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/file.md&#34;&gt;Faker::File&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/fillmurray.md&#34;&gt;Faker::Fillmurray&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/finance.md&#34;&gt;Faker::Finance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/food.md&#34;&gt;Faker::Food&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/funny_name.md&#34;&gt;Faker::FunnyName&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/gender.md&#34;&gt;Faker::Gender&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/greek_philosophers.md&#34;&gt;Faker::GreekPhilosophers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/hacker.md&#34;&gt;Faker::Hacker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/hipster.md&#34;&gt;Faker::Hipster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/hobby.md&#34;&gt;Faker::Hobby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/house.md&#34;&gt;Faker::House&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/id_number.md&#34;&gt;Faker::IDNumber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/industry_segments.md&#34;&gt;Faker::IndustrySegments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/internet.md&#34;&gt;Faker::Internet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/invoice.md&#34;&gt;Faker::Invoice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/job.md&#34;&gt;Faker::Job&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/json.md&#34;&gt;Faker::Json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/kpop.md&#34;&gt;Faker::Kpop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/lorem.md&#34;&gt;Faker::Lorem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/lorem_flickr.md&#34;&gt;Faker::LoremFlickr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/lorem_pixel.md&#34;&gt;Faker::LoremPixel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/markdown.md&#34;&gt;Faker::Markdown&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/marketing.md&#34;&gt;Faker::Marketing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/measurement.md&#34;&gt;Faker::Measurement&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/military.md&#34;&gt;Faker::Military&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/mountain.md&#34;&gt;Faker::Mountain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/name.md&#34;&gt;Faker::Name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/nation.md&#34;&gt;Faker::Nation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/nato_phonetic_alphabet.md&#34;&gt;Faker::NatoPhoneticAlphabet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/national_health_service.md&#34;&gt;Faker::NationalHealthService&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/number.md&#34;&gt;Faker::Number&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/omniauth.md&#34;&gt;Faker::Omniauth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/phone_number.md&#34;&gt;Faker::PhoneNumber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/placeholdit.md&#34;&gt;Faker::Placeholdit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/programming_language.md&#34;&gt;Faker::ProgrammingLanguage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/relationship.md&#34;&gt;Faker::Relationship&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/restaurant.md&#34;&gt;Faker::Restaurant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/science.md&#34;&gt;Faker::Science&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/slack_emoji.md&#34;&gt;Faker::SlackEmoji&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/source.md&#34;&gt;Faker::Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/south_africa.md&#34;&gt;Faker::SouthAfrica&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/space.md&#34;&gt;Faker::Space&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/string.md&#34;&gt;Faker::String&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/stripe.md&#34;&gt;Faker::Stripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/subscription.md&#34;&gt;Faker::Subscription&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/superhero.md&#34;&gt;Faker::Superhero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/tea.md&#34;&gt;Faker::Tea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/team.md&#34;&gt;Faker::Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/time.md&#34;&gt;Faker::Time&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/twitter.md&#34;&gt;Faker::Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/types.md&#34;&gt;Faker::Types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/university.md&#34;&gt;Faker::University&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/vehicle.md&#34;&gt;Faker::Vehicle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/verbs.md&#34;&gt;Faker::Verbs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/default/world_cup.md&#34;&gt;Faker::WorldCup&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Blockchain&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/blockchain/aeternity.md&#34;&gt;Faker::Blockchain::Aeternity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/blockchain/bitcoin.md&#34;&gt;Faker::Blockchain::Bitcoin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/blockchain/ethereum.md&#34;&gt;Faker::Blockchain::Ethereum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/blockchain/tezos.md&#34;&gt;Faker::Blockchain::Tezos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Books&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/books/book.md&#34;&gt;Faker::Book&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/books/culture_series.md&#34;&gt;Faker::Books::CultureSeries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/books/dune.md&#34;&gt;Faker::Books::Dune&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/books/lovecraft.md&#34;&gt;Faker::Books::Lovecraft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/books/the_kingkiller_chronicle.md&#34;&gt;Faker::Books::TheKingkillerChronicle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fantasy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/fantasy/tolkien.md&#34;&gt;Faker::Fantasy::Tolkien&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Creature&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/creature/animal.md&#34;&gt;Faker::Creature::Animal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/creature/bird.md&#34;&gt;Faker::Creature::Bird&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/creature/cat.md&#34;&gt;Faker::Creature::Cat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/creature/dog.md&#34;&gt;Faker::Creature::Dog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/creature/horse.md&#34;&gt;Faker::Creature::Horse&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Games&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/game.md&#34;&gt;Faker::Game&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/clash_of_clans.md&#34;&gt;Faker::Games::ClashOfClans&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/dnd.md&#34;&gt;Faker::Games::DnD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/dota.md&#34;&gt;Faker::Games::Dota&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/elder_scrolls.md&#34;&gt;Faker::Games::ElderScrolls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/fallout.md&#34;&gt;Faker::Games::Fallout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/half_life.md&#34;&gt;Faker::Games::HalfLife&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/heroes.md&#34;&gt;Faker::Games::Heroes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/heroes_of_the_storm.md&#34;&gt;Faker::Games::HeroesOfTheStorm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/league_of_legends.md&#34;&gt;Faker::Games::LeagueOfLegends&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/minecraft.md&#34;&gt;Faker::Games::Minecraft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/myst.md&#34;&gt;Faker::Games::Myst&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/overwatch.md&#34;&gt;Faker::Games::Overwatch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/pokemon.md&#34;&gt;Faker::Games::Pokemon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/sonic_the_hedgehog.md&#34;&gt;Faker::Games::SonicTheHedgehog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/street_fighter.md&#34;&gt;Faker::Games::StreetFighter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/super_mario.md&#34;&gt;Faker::Games::SuperMario&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/super_smash_bros.md&#34;&gt;Faker::Games::SuperSmashBros&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/touhou.md&#34;&gt;Faker::Games::Touhou&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/warhammer_fantasy.md&#34;&gt;Faker::Games::WarhammerFantasy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/witcher.md&#34;&gt;Faker::Games::Witcher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/world_of_warcraft.md&#34;&gt;Faker::Games::WorldOfWarcraft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/games/zelda.md&#34;&gt;Faker::Games::Zelda&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Japanese Media&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/dragon_ball.md&#34;&gt;Faker::JapaneseMedia::DragonBall&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/one_piece.md&#34;&gt;Faker::JapaneseMedia::OnePiece&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/studio_ghibli.md&#34;&gt;Faker::JapaneseMedia::StudioGhibli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/sword_art_online.md&#34;&gt;Faker::JapaneseMedia::SwordArtOnline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/naruto.md&#34;&gt;Faker::JapaneseMedia::Naruto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/doraemon.md&#34;&gt;Faker::JapaneseMedia::Doraemon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/conan.md&#34;&gt;Faker::JapaneseMedia::Conan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/japanese_media/fullmetal_alchemist_brotherhood.md&#34;&gt;Faker::JapaneseMedia::FmaBrotherhood&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Movies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/movie.md&#34;&gt;Faker::Movie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/back_to_the_future.md&#34;&gt;Faker::Movies::BackToTheFuture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/departed.md&#34;&gt;Faker::Movies::Departed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/ghostbusters.md&#34;&gt;Faker::Movies::Ghostbusters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/harry_potter.md&#34;&gt;Faker::Movies::HarryPotter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/hitchhikers_guide_to_the_galaxy.md&#34;&gt;Faker::Movies::HitchhikersGuideToTheGalaxy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/hobbit.md&#34;&gt;Faker::Movies::Hobbit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/how_to_train_your_dragon.md&#34;&gt;Faker::Movies::HowToTrainYourDragon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/lebowski.md&#34;&gt;Faker::Movies::Lebowski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/lord_of_the_rings.md&#34;&gt;Faker::Movies::LordOfTheRings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/princess_bride.md&#34;&gt;Faker::Movies::PrincessBride&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/star_wars.md&#34;&gt;Faker::Movies::StarWars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/tron.md&#34;&gt;Faker::Movies::TRON&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/movies/v_for_vendetta.md&#34;&gt;Faker::Movies::VForVendetta&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Music&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/music.md&#34;&gt;Faker::Music&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/grateful_dead.md&#34;&gt;Faker::Music::GratefulDead&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/hiphop.md&#34;&gt;Faker::Music::Hiphop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/opera.md&#34;&gt;Faker::Music::Opera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/pearl_jam.md&#34;&gt;Faker::Music::PearlJam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/phish.md&#34;&gt;Faker::Music::Phish&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/prince.md&#34;&gt;Faker::Music::Prince&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/rock_band.md&#34;&gt;Faker::Music::RockBand&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/rush.md&#34;&gt;Faker::Music::Rush&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/music/umphreys_mcgee.md&#34;&gt;Faker::Music::UmphreysMcgee&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quotes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/quotes/quote.md&#34;&gt;Faker::Quote&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/quotes/chiquito.md&#34;&gt;Faker::Quotes::Chiquito&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/quotes/rajnikanth.md&#34;&gt;Faker::Quotes::Rajnikanth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/quotes/shakespeare.md&#34;&gt;Faker::Quotes::Shakespeare&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sports&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/sports/basketball.md&#34;&gt;Faker::Sports::Basketball&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/sports/football.md&#34;&gt;Faker::Sports::Football&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tv Shows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/aqua_teen_hunger_force.md&#34;&gt;Faker::TvShows::AquaTeenHungerForce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/big_bang_theory.md&#34;&gt;Faker::TvShows::BigBangTheory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/bojack_horseman.md&#34;&gt;Faker::TvShows::BojackHorseman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/breaking_bad.md&#34;&gt;Faker::TvShows::BreakingBad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/brooklyn_nine_nine.md&#34;&gt;Faker::TvShows::BrooklynNineNine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/buffy.md&#34;&gt;Faker::TvShows::Buffy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/community.md&#34;&gt;Faker::TvShows::Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/dr_who.md&#34;&gt;Faker::TvShows::DrWho&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/dumb_and_dumber.md&#34;&gt;Faker::TvShows::DumbAndDumber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/family_guy.md&#34;&gt;Faker::TvShows::FamilyGuy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/final_space.md&#34;&gt;Faker::TvShows::FinalSpace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/friends.md&#34;&gt;Faker::TvShows::Friends&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/game_of_thrones.md&#34;&gt;Faker::TvShows::GameOfThrones&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/hey_arnold.md&#34;&gt;Faker::TvShows::HeyArnold&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/how_i_met_your_mother.md&#34;&gt;Faker::TvShows::HowIMetYourMother&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/michael_scott.md&#34;&gt;Faker::TvShows::MichaelScott&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/new_girl.md&#34;&gt;Faker::TvShows::NewGirl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/parks_and_rec.md&#34;&gt;Faker::TvShows::ParksAndRec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/rick_and_morty.md&#34;&gt;Faker::TvShows::RickAndMorty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/rupaul.md&#34;&gt;Faker::TvShows::RuPaul&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/seinfeld.md&#34;&gt;Faker::TvShows::Seinfeld&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/silicon_valley.md&#34;&gt;Faker::TvShows::SiliconValley&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/simpsons.md&#34;&gt;Faker::TvShows::Simpsons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/south_park.md&#34;&gt;Faker::TvShows::SouthPark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/star_trek.md&#34;&gt;Faker::TvShows::StarTrek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/stargate.md&#34;&gt;Faker::TvShows::Stargate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/stranger_things.md&#34;&gt;Faker::TvShows::StrangerThings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/suits.md&#34;&gt;Faker::TvShows::Suits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/supernatural.md&#34;&gt;Faker::TvShows::Supernatural&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/the_expanse.md&#34;&gt;Faker::TvShows::TheExpanse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/the_fresh_prince_of_bel_air.md&#34;&gt;Faker::TvShows::TheFreshPrinceOfBelAir&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/the_it_crowd.md&#34;&gt;Faker::TvShows::TheITCrowd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/the_thick_of_it.md&#34;&gt;Faker::TvShows::TheThickOfIt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/twin_peaks.md&#34;&gt;Faker::TvShows::TwinPeaks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/doc/tv_shows/venture_bros.md&#34;&gt;Faker::TvShows::VentureBros&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;Since you may want to make addresses and other types of data look different depending on where in the world you are (US postal codes vs. UK postal codes, for example), Faker uses the I18n gem to store strings (like state names) and formats (US postal codes are NNNNN while UK postal codes are AAN NAA), allowing you to get different formats by switching locales. Just set the locale you want as shown below, and Faker will take care of the rest.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Config.locale = &#39;es&#39;&#xA;# or&#xA;Faker::Config.locale = :es&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your locale doesn&#39;t already exist, create it in the &lt;code&gt;lib/locales&lt;/code&gt; directory and you can then override or add elements to suit your needs. See more about how to use locales &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/master/lib/locales/README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en-au-ocker:&#xA;  faker:&#xA;    name:&#xA;      # Existing faker field, new data&#xA;      first_name:&#xA;        - Charlotte&#xA;        - Ava&#xA;        - Chloe&#xA;        - Emily&#xA;&#xA;      # New faker fields&#xA;      ocker_first_name:&#xA;        - Bazza&#xA;        - Bluey&#xA;        - Davo&#xA;        - Johno&#xA;        - Shano&#xA;        - Shazza&#xA;      region:&#xA;        - South East Queensland&#xA;        - Wide Bay Burnett&#xA;        - Margaret River&#xA;        - Port Pirie&#xA;        - Gippsland&#xA;        - Elizabeth&#xA;        - Barossa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/stympy/faker/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Comments and feedback are welcome. Send an email to Benjamin Curtis via the &lt;a href=&#34;http://groups.google.com/group/ruby-faker&#34;&gt;google group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also join our &lt;a href=&#34;https://discord.gg/RMumTwB&#34;&gt;discord channel&lt;/a&gt; to discuss anything regarding improvements or feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is free to use under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluent/fluentd</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/fluent/fluentd</id>
    <link href="https://github.com/fluent/fluentd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fluentd: Unified Logging Layer (project under CNCF)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fluentd: Open-Source Log Collector&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluent/fluentd/actions/workflows/linux-test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/fluent/fluentd/actions/workflows/linux-test.yaml/badge.svg?branch=master&#34; alt=&#34;Testing on Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluent/fluentd/actions/workflows/windows-test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/fluent/fluentd/actions/workflows/windows-test.yaml/badge.svg?branch=master&#34; alt=&#34;Testing on Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluent/fluentd/actions/workflows/macos-test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/fluent/fluentd/actions/workflows/macos-test.yaml/badge.svg?branch=master&#34; alt=&#34;Testing on macOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.drone.io/fluent/fluentd&#34;&gt;&lt;img src=&#34;https://cloud.drone.io/api/badges/fluent/fluentd/status.svg?branch=master&#34; alt=&#34;Testing on Arm64&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/fluent/fluentd&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/fluent/fluentd/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1189&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1189/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.fluentd.org/&#34;&gt;Fluentd&lt;/a&gt; collects events from various data sources and writes them to files, RDBMS, NoSQL, IaaS, SaaS, Hadoop and so on. Fluentd helps you unify your logging infrastructure (Learn more about the &lt;a href=&#34;https://www.fluentd.org/blog/unified-logging-layer&#34;&gt;Unified Logging Layer&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://www.fluentd.org/images/fluentd-architecture.png&#34; width=&#34;500px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install fluentd&#xA;$ fluentd -s conf&#xA;$ fluentd -c conf/fluent.conf &amp;amp;&#xA;$ echo &#39;{&#34;json&#34;:&#34;message&#34;}&#39; | fluent-cat debug.test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Branch&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;master: For v1 development.&lt;/li&gt; &#xA; &lt;li&gt;v0.12: For v0.12. This is deprecated version. we already stopped supporting (See &lt;a href=&#34;https://www.fluentd.org/blog/drop-schedule-announcement-in-2019&#34;&gt;https://www.fluentd.org/blog/drop-schedule-announcement-in-2019&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 2.4 or later&lt;/li&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;git&lt;/code&gt; should be in &lt;code&gt;PATH&lt;/code&gt;. On Windows, you can use &lt;code&gt;Github for Windows&lt;/code&gt; and &lt;code&gt;GitShell&lt;/code&gt; for easy setup.&lt;/p&gt; &#xA;&lt;h3&gt;Install dependent gems&lt;/h3&gt; &#xA;&lt;p&gt;Use bundler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install bundler&#xA;$ bundle install --path vendor/bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run test&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run specified test via &lt;code&gt;TEST&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec rake test TEST=test/test_specified_path.rb&#xA;$ bundle exec rake test TEST=test/test_*.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://www.fluentd.org/&#34;&gt;https://www.fluentd.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.fluentd.org/&#34;&gt;https://docs.fluentd.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Project repository: &lt;a href=&#34;https://github.com/fluent&#34;&gt;https://github.com/fluent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discussion: &lt;a href=&#34;https://github.com/fluent/fluentd/discussions&#34;&gt;https://github.com/fluent/fluentd/discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack / Community: &lt;a href=&#34;https://slack.fluentd.org&#34;&gt;https://slack.fluentd.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Newsletters: &lt;a href=&#34;https://www.fluentd.org/newsletter&#34;&gt;https://www.fluentd.org/newsletter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Author: &lt;a href=&#34;https://github.com/frsyuki&#34;&gt;Sadayuki Furuhashi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copyright: 2011-2021 Fluentd Authors&lt;/li&gt; &#xA; &lt;li&gt;License: Apache License, Version 2.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;A third party security audit was performed by Cure53, you can see the full report &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd/master/docs/SECURITY_AUDIT.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd/master/SECURITY.md&#34;&gt;SECURITY&lt;/a&gt; to contact us about vulnerability.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors:&lt;/h2&gt; &#xA;&lt;p&gt;Patches contributed by &lt;a href=&#34;https://github.com/fluent/fluentd/contributors&#34;&gt;great developers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluent/fluentd&#34;&gt;&lt;img src=&#34;https://ga-beacon.appspot.com/UA-24890265-6/fluent/fluentd&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lynndylanhurley/devise_token_auth</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/lynndylanhurley/devise_token_auth</id>
    <link href="https://github.com/lynndylanhurley/devise_token_auth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Token based authentication for Rails JSON APIs. Designed to work with jToker and ng-token-auth.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Devise Token Auth&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/devise_token_auth&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/devise_token_auth.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/lynndylanhurley/devise_token_auth&#34;&gt;&lt;img src=&#34;https://travis-ci.org/lynndylanhurley/devise_token_auth.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth/coverage&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth/badges/coverage.svg?sanitize=true&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/devise_token_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/devise_token_auth.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/lynndylanhurley/devise_token_auth?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/lynndylanhurley/devise_token_auth&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, multi-client and secure token-based authentication for Rails.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re building SPA or a mobile app, and you want authentication, you need tokens, not cookies. This gem refreshes the tokens on each request, and expires them in a short time, so the app is secure. Also, it maintains a session for each client/device, so you can have as many sessions as you want.&lt;/p&gt; &#xA;&lt;h2&gt;Main features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Seamless integration with: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lynndylanhurley/ng-token-auth&#34;&gt;ng-token-auth&lt;/a&gt; for &lt;a href=&#34;https://github.com/angular/angular.js&#34;&gt;AngularJS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/neroniaky/angular-token&#34;&gt;Angular-Token&lt;/a&gt; for &lt;a href=&#34;https://github.com/angular/angular&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kylecorbelli/redux-token-auth&#34;&gt;redux-token-auth&lt;/a&gt; for &lt;a href=&#34;https://github.com/reactjs/react-redux&#34;&gt;React with Redux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lynndylanhurley/j-toker&#34;&gt;jToker&lt;/a&gt; for &lt;a href=&#34;https://jquery.com/&#34;&gt;jQuery&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Oauth2 authentication using &lt;a href=&#34;https://github.com/intridea/omniauth&#34;&gt;OmniAuth&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Email authentication using &lt;a href=&#34;https://github.com/plataformatec/devise&#34;&gt;Devise&lt;/a&gt;, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;User registration, update and deletion&lt;/li&gt; &#xA;   &lt;li&gt;Login and logout&lt;/li&gt; &#xA;   &lt;li&gt;Password reset, account confirmation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/docs/usage/multiple_models.md&#34;&gt;multiple user models&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It is &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/docs/security.md&#34;&gt;secure&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project leverages the following gems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/plataformatec/devise&#34;&gt;Devise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intridea/omniauth&#34;&gt;OmniAuth&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;devise_token_auth&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then install the gem using bundle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://devise-token-auth.gitbook.io/devise-token-auth&#34;&gt;Docs&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/devise-token-auth&#34;&gt;StackOverflow&lt;/a&gt; for help requests and how-to questions.&lt;/p&gt; &#xA;&lt;p&gt;Please open GitHub issues for bugs and enhancements only, not general help requests. Please search previous issues (and Google and StackOverflow) before creating a new issue.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/raw/master/.github/ISSUE_TEMPLATE.md&#34;&gt;issue template&lt;/a&gt; before posting issues.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/docs/faq.md&#34;&gt;FAQ&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Contributors wanted!&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;. Feel free to submit pull requests, review pull requests, or review open issues. If you&#39;d like to get in contact, &lt;a href=&#34;https://github.com/zachfeldman&#34;&gt;Zach Feldman&lt;/a&gt; has been wrangling this effort, you can reach him with his name @gmail. Further discussion of this in &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/issues/969&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We have some bounties for some issues, &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/issues?q=is%3Aopen+is%3Aissue+label%3Abounty&#34;&gt;check them out&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Live Demos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://ng-token-auth-demo.herokuapp.com/&#34;&gt;Here is a demo&lt;/a&gt; of this app running with the &lt;a href=&#34;https://github.com/lynndylanhurley/ng-token-auth&#34;&gt;ng-token-auth&lt;/a&gt; module and &lt;a href=&#34;https://github.com/angular/angular.js&#34;&gt;AngularJS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackblitz.com/github/neroniaky/angular-token&#34;&gt;Here is a demo&lt;/a&gt; of this app running with the &lt;a href=&#34;https://github.com/neroniaky/angular-token&#34;&gt;Angular-Token&lt;/a&gt; service and &lt;a href=&#34;https://github.com/angular/angular&#34;&gt;Angular&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://j-toker-demo.herokuapp.com/&#34;&gt;Here is a demo&lt;/a&gt; of this app using the &lt;a href=&#34;https://github.com/lynndylanhurley/j-toker&#34;&gt;jToker&lt;/a&gt; plugin and &lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The fully configured api used in these demos can be found &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth_demo&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/devise_token_auth#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/devise_token_auth#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/backers.svg?width=890&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/devise_token_auth#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the WTFPL&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DataDog/dd-trace-rb</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/DataDog/dd-trace-rb</id>
    <link href="https://github.com/DataDog/dd-trace-rb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Datadog Tracing Ruby Client&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Version 1.0.0 has recently been released. Check out our &lt;a href=&#34;https://github.com/DataDog/dd-trace-rb/raw/master/docs/UpgradeGuide.md#from-0x-to-10&#34;&gt;upgrade guide&lt;/a&gt; for more details.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Datadog Trace Client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/ddtrace/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/ddtrace&#34; alt=&#34;Gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/DataDog/dd-trace-rb/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/DataDog/dd-trace-rb/tree/master.svg?style=svg&amp;amp;circle-token=b0bd5ef866ec7f7b018f48731bb495f2d1372cc1&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/DataDog/dd-trace-rb/branch/master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/DataDog/dd-trace-rb/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rubydoc.info/gems/ddtrace/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YARD-documentation-blue&#34; alt=&#34;YARD documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ddtrace&lt;/code&gt; is Datadog’s tracing client for Ruby. It is used to trace requests as they flow across web servers, databases and microservices so that developers have great visiblity into bottlenecks and troublesome requests.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;For a basic product overview, check out our &lt;a href=&#34;https://docs.datadoghq.com/tracing/setup/ruby/&#34;&gt;setup documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For installation, configuration, and details about using the API, check out our &lt;a href=&#34;https://github.com/DataDog/dd-trace-rb/raw/master/docs/GettingStarted.md&#34;&gt;API documentation&lt;/a&gt; and &lt;a href=&#34;http://gems.datadoghq.com/trace/docs/&#34;&gt;gem documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For descriptions of terminology used in APM, take a look at the &lt;a href=&#34;https://docs.datadoghq.com/tracing/visualization/&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For contributing, checkout the &lt;a href=&#34;https://github.com/DataDog/dd-trace-rb/raw/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://github.com/DataDog/dd-trace-rb/raw/master/docs/DevelopmentGuide.md&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ankane/searchkick</title>
    <updated>2022-05-29T02:02:24Z</updated>
    <id>tag:github.com,2022-05-29:/ankane/searchkick</id>
    <link href="https://github.com/ankane/searchkick" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Intelligent search made easy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Searchkick&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;🚀&lt;/span&gt; Intelligent search made easy&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Searchkick learns what your users are looking for.&lt;/strong&gt; As more people search, it gets smarter and the results get better. It’s friendly for developers - and magical for your users.&lt;/p&gt; &#xA;&lt;p&gt;Searchkick handles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stemming - &lt;code&gt;tomatoes&lt;/code&gt; matches &lt;code&gt;tomato&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;special characters - &lt;code&gt;jalapeno&lt;/code&gt; matches &lt;code&gt;jalapeño&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;extra whitespace - &lt;code&gt;dishwasher&lt;/code&gt; matches &lt;code&gt;dish washer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;misspellings - &lt;code&gt;zuchini&lt;/code&gt; matches &lt;code&gt;zucchini&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;custom synonyms - &lt;code&gt;pop&lt;/code&gt; matches &lt;code&gt;soda&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Plus:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;query like SQL - no need to learn a new query language&lt;/li&gt; &#xA; &lt;li&gt;reindex without downtime&lt;/li&gt; &#xA; &lt;li&gt;easily personalize results for each user&lt;/li&gt; &#xA; &lt;li&gt;autocomplete&lt;/li&gt; &#xA; &lt;li&gt;“Did you mean” suggestions&lt;/li&gt; &#xA; &lt;li&gt;supports many languages&lt;/li&gt; &#xA; &lt;li&gt;works with Active Record and Mongoid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ankane/searchjoy&#34;&gt;Searchjoy&lt;/a&gt; for analytics and &lt;a href=&#34;https://github.com/ankane/autosuggest&#34;&gt;Autosuggest&lt;/a&gt; for query suggestions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🍊&lt;/span&gt; Battle-tested at &lt;a href=&#34;https://www.instacart.com/opensource&#34;&gt;Instacart&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/searchkick/actions&#34;&gt;&lt;img src=&#34;https://github.com/ankane/searchkick/workflows/build/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#querying&#34;&gt;Querying&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#indexing&#34;&gt;Indexing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#intelligent-search&#34;&gt;Intelligent Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#instant-search--autocomplete&#34;&gt;Instant Search / Autocomplete&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#aggregations&#34;&gt;Aggregations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#advanced&#34;&gt;Advanced Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#reference&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Searchkick 5.0 was recently released! See &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#upgrading&#34;&gt;how to upgrade&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.elastic.co/downloads/elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt; or &lt;a href=&#34;https://opensearch.org/downloads.html&#34;&gt;OpenSearch&lt;/a&gt;. For Homebrew, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install elastic/tap/elasticsearch-full&#xA;brew services start elasticsearch-full&#xA;# or&#xA;brew install opensearch&#xA;brew services start opensearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add these lines to your application’s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;searchkick&#34;&#xA;&#xA;gem &#34;elasticsearch&#34;   # select one&#xA;gem &#34;opensearch-ruby&#34; # select one&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The latest version works with Elasticsearch 7 and 8 and OpenSearch 1 and 2. For Elasticsearch 6, use version 4.6.3 and &lt;a href=&#34;https://github.com/ankane/searchkick/raw/v4.6.3/README.md&#34;&gt;this readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add searchkick to models you want to search.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add data to the search index.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to query, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;apples&#34;)&#xA;products.each do |product|&#xA;  puts product.name&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Searchkick supports the complete &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html&#34;&gt;Elasticsearch Search API&lt;/a&gt; and &lt;a href=&#34;https://opensearch.org/docs/latest/opensearch/rest-api/search/&#34;&gt;OpenSearch Search API&lt;/a&gt;. As your search becomes more advanced, we recommend you use the &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#advanced&#34;&gt;search server DSL&lt;/a&gt; for maximum flexibility.&lt;/p&gt; &#xA;&lt;h2&gt;Querying&lt;/h2&gt; &#xA;&lt;p&gt;Query like SQL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, where: {in_stock: true}, limit: 10, offset: 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Search specific fields&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;fields: [:name, :brand]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;where: {&#xA;  expires_at: {gt: Time.now},    # lt, gte, lte also available&#xA;  orders_count: 1..10,           # equivalent to {gte: 1, lte: 10}&#xA;  aisle_id: [25, 30],            # in&#xA;  store_id: {not: 2},            # not&#xA;  aisle_id: {not: [25, 30]},     # not in&#xA;  user_ids: {all: [1, 3]},       # all elements in array&#xA;  category: {like: &#34;%frozen%&#34;},  # like&#xA;  category: {ilike: &#34;%frozen%&#34;}, # ilike&#xA;  category: /frozen .+/,         # regexp&#xA;  category: {prefix: &#34;frozen&#34;},  # prefix&#xA;  store_id: {exists: true},      # exists&#xA;  _or: [{in_stock: true}, {backordered: true}],&#xA;  _and: [{in_stock: true}, {backordered: true}],&#xA;  _not: {store_id: 1}            # negate a condition&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Order&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;order: {_score: :desc} # most relevant first - default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html&#34;&gt;All of these sort options are supported&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Limit / offset&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;limit: 20, offset: 40&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;select: [:name]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#source-filtering&#34;&gt;These source filtering options are supported&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Results&lt;/h3&gt; &#xA;&lt;p&gt;Searches return a &lt;code&gt;Searchkick::Relation&lt;/code&gt; object. This responds like an array to most methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results = Product.search(&#34;milk&#34;)&#xA;results.size&#xA;results.any?&#xA;results.each { |result| ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, ids are fetched from the search server and records are fetched from your database. To fetch everything from the search server, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, load: false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get total results&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.total_count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the time the search took (in milliseconds)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.took&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the full response from the search server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By default, Elasticsearch and OpenSearch &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#deep-paging&#34;&gt;limit paging&lt;/a&gt; to the first 10,000 results for performance. This applies to the total count as well.&lt;/p&gt; &#xA;&lt;h3&gt;Boosting&lt;/h3&gt; &#xA;&lt;p&gt;Boost important fields&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;fields: [&#34;title^10&#34;, &#34;description&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost by the value of a field (field must be numeric)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;boost_by: [:orders_count] # give popular documents a little boost&#xA;boost_by: {orders_count: {factor: 10}} # default factor is 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost matching documents&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;boost_where: {user_id: 1}&#xA;boost_where: {user_id: {value: 1, factor: 100}} # default factor is 1000&#xA;boost_where: {user_id: [{value: 1, factor: 100}, {value: 2, factor: 200}]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost by recency&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;boost_by_recency: {created_at: {scale: &#34;7d&#34;, decay: 0.5}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also boost by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#intelligent-search&#34;&gt;Conversions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#boost-by-distance&#34;&gt;Distance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Get Everything&lt;/h3&gt; &#xA;&lt;p&gt;Use a &lt;code&gt;*&lt;/code&gt; for the query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;*&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pagination&lt;/h3&gt; &#xA;&lt;p&gt;Plays nicely with kaminari and will_paginate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# controller&#xA;@products = Product.search(&#34;milk&#34;, page: params[:page], per_page: 20)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View with kaminari&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @products %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View with will_paginate&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= will_paginate @products %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Partial Matches&lt;/h3&gt; &#xA;&lt;p&gt;By default, results must match all words in the query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;fresh honey&#34;) # fresh AND honey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change this, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;fresh honey&#34;, operator: &#34;or&#34;) # fresh OR honey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, results must match the entire word - &lt;code&gt;back&lt;/code&gt; will not match &lt;code&gt;backpack&lt;/code&gt;. You can change this behavior with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick word_start: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to search (after you reindex):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;back&#34;, fields: [:name], match: :word_start)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available options are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Matches&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;entire word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;apple&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word_start&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;start of word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;app&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word_middle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;any part of word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ppl&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word_end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;end of word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ple&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:text_start&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;start of text&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gre&lt;/code&gt; matches &lt;code&gt;green apple&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt; does not match&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:text_middle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;any part of text&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;een app&lt;/code&gt; matches &lt;code&gt;green apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:text_end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;end of text&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ple&lt;/code&gt; matches &lt;code&gt;green apple&lt;/code&gt;, &lt;code&gt;een&lt;/code&gt; does not match&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The default is &lt;code&gt;:word&lt;/code&gt;. The most matches will happen with &lt;code&gt;:word_middle&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Exact Matches&lt;/h3&gt; &#xA;&lt;p&gt;To match a field exactly (case-sensitive), use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(query, fields: [{email: :exact}, :name])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Phrase Matches&lt;/h3&gt; &#xA;&lt;p&gt;To only match the exact order, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;fresh honey&#34;, match: :phrase)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stemming and Language&lt;/h3&gt; &#xA;&lt;p&gt;Searchkick stems words by default for better matching. &lt;code&gt;apple&lt;/code&gt; and &lt;code&gt;apples&lt;/code&gt; both stem to &lt;code&gt;appl&lt;/code&gt;, so searches for either term will have the same matches.&lt;/p&gt; &#xA;&lt;p&gt;Searchkick defaults to English for stemming. To change this, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick language: &#34;german&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-stemmer-tokenfilter.html#analysis-stemmer-tokenfilter-configure-parms&#34;&gt;list of languages&lt;/a&gt;. A few languages require plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chinese&lt;/code&gt; - &lt;a href=&#34;https://github.com/medcl/elasticsearch-analysis-ik&#34;&gt;analysis-ik plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chinese2&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-smartcn.html&#34;&gt;analysis-smartcn plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;japanese&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-kuromoji.html&#34;&gt;analysis-kuromoji plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;korean&lt;/code&gt; - &lt;a href=&#34;https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext&#34;&gt;analysis-openkoreantext plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;korean2&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-nori.html&#34;&gt;analysis-nori plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;polish&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-stempel.html&#34;&gt;analysis-stempel plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ukrainian&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-ukrainian.html&#34;&gt;analysis-ukrainian plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vietnamese&lt;/code&gt; - &lt;a href=&#34;https://github.com/duydo/elasticsearch-analysis-vietnamese&#34;&gt;analysis-vietnamese plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use a Hunspell dictionary for stemming.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick stemmer: {type: &#34;hunspell&#34;, locale: &#34;en_US&#34;}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable stemming with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  searchkick stem: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exclude certain words from stemming with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  searchkick stem_exclusion: [&#34;apples&#34;]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or change how words are stemmed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  searchkick stemmer_override: [&#34;apples =&amp;gt; other&#34;]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Synonyms&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick search_synonyms: [[&#34;pop&#34;, &#34;soda&#34;], [&#34;burger&#34;, &#34;hamburger&#34;]]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call &lt;code&gt;Product.reindex&lt;/code&gt; after changing synonyms. Synonyms are applied at search time before stemming, and can be a single word or multiple words.&lt;/p&gt; &#xA;&lt;p&gt;For directional synonyms, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;search_synonyms: [&#34;lightbulb =&amp;gt; halogenlamp&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dynamic Synonyms&lt;/h3&gt; &#xA;&lt;p&gt;The above approach works well when your synonym list is static, but in practice, this is often not the case. When you analyze search conversions, you often want to add new synonyms without a full reindex.&lt;/p&gt; &#xA;&lt;h4&gt;Elasticsearch 7.3+ and OpenSearch&lt;/h4&gt; &#xA;&lt;p&gt;For Elasticsearch 7.3+ and OpenSearch, we recommend placing synonyms in a file on the search server (in the &lt;code&gt;config&lt;/code&gt; directory). This allows you to reload synonyms without reindexing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;pop, soda&#xA;burger, hamburger&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick search_synonyms: &#34;synonyms.txt&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And reload with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.reload_synonyms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Elasticsearch &amp;lt; 7.3&lt;/h4&gt; &#xA;&lt;p&gt;You can use a library like &lt;a href=&#34;https://github.com/mbleigh/acts-as-taggable-on&#34;&gt;ActsAsTaggableOn&lt;/a&gt; and do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  acts_as_taggable&#xA;  scope :search_import, -&amp;gt; { includes(:tags) }&#xA;&#xA;  def search_data&#xA;    {&#xA;      name_tagged: &#34;#{name} #{tags.map(&amp;amp;:name).join(&#34; &#34;)}&#34;&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(query, fields: [:name_tagged])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Misspellings&lt;/h3&gt; &#xA;&lt;p&gt;By default, Searchkick handles misspelled queries by returning results with an &lt;a href=&#34;https://en.wikipedia.org/wiki/Levenshtein_distance&#34;&gt;edit distance&lt;/a&gt; of one.&lt;/p&gt; &#xA;&lt;p&gt;You can change this with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zucini&#34;, misspellings: {edit_distance: 2}) # zucchini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To prevent poor precision and improve performance for correctly spelled queries (which should be a majority for most applications), Searchkick can first perform a search without misspellings, and if there are too few results, perform another with them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zuchini&#34;, misspellings: {below: 5})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If there are fewer than 5 results, a 2nd search is performed with misspellings enabled. The result of this query is returned.&lt;/p&gt; &#xA;&lt;p&gt;Turn off misspellings with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zuchini&#34;, misspellings: false) # no zucchini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify which fields can include misspellings with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zucini&#34;, fields: [:name, :color], misspellings: {fields: [:name]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When doing this, you must also specify fields to search&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Bad Matches&lt;/h3&gt; &#xA;&lt;p&gt;If a user searches &lt;code&gt;butter&lt;/code&gt;, they may also get results for &lt;code&gt;peanut butter&lt;/code&gt;. To prevent this, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;butter&#34;, exclude: [&#34;peanut butter&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can map queries and terms to exclude with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;exclude_queries = {&#xA;  &#34;butter&#34; =&amp;gt; [&#34;peanut butter&#34;],&#xA;  &#34;cream&#34; =&amp;gt; [&#34;ice cream&#34;, &#34;whipped cream&#34;]&#xA;}&#xA;&#xA;Product.search(query, exclude: exclude_queries[query])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can demote results by boosting by a factor less than one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;butter&#34;, boost_where: {category: {value: &#34;pantry&#34;, factor: 0.5}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Emoji&lt;/h3&gt; &#xA;&lt;p&gt;Search &lt;span&gt;🍨&lt;/span&gt;&lt;span&gt;🍰&lt;/span&gt; and get &lt;code&gt;ice cream cake&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Add this line to your application’s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;gemoji-parser&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;🍨🍰&#34;, emoji: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Indexing&lt;/h2&gt; &#xA;&lt;p&gt;Control what data is indexed with the &lt;code&gt;search_data&lt;/code&gt; method. Call &lt;code&gt;Product.reindex&lt;/code&gt; after changing this method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  belongs_to :department&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      department_name: department.name,&#xA;      on_sale: sale_price.present?&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Searchkick uses &lt;code&gt;find_in_batches&lt;/code&gt; to import documents. To eager load associations, use the &lt;code&gt;search_import&lt;/code&gt; scope.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  scope :search_import, -&amp;gt; { includes(:department) }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, all records are indexed. To control which records are indexed, use the &lt;code&gt;should_index?&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def should_index?&#xA;    active # only index active records&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a reindex is interrupted, you can resume it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(resume: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For large data sets, try &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#parallel-reindexing&#34;&gt;parallel reindexing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;To Reindex, or Not to Reindex&lt;/h3&gt; &#xA;&lt;h4&gt;Reindex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;when you install or upgrade searchkick&lt;/li&gt; &#xA; &lt;li&gt;change the &lt;code&gt;search_data&lt;/code&gt; method&lt;/li&gt; &#xA; &lt;li&gt;change the &lt;code&gt;searchkick&lt;/code&gt; method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;No need to reindex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;app starts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strategies&lt;/h3&gt; &#xA;&lt;p&gt;There are four strategies for keeping the index synced with your database.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Inline (default)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Anytime a record is inserted, updated, or deleted&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Asynchronous&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Use background jobs for better performance&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: :async&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Jobs are added to a queue named &lt;code&gt;searchkick&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Queuing&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Push ids of records that need updated to a queue and reindex in the background in batches. This is more performant than the asynchronous method, which updates records individually. See &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#queuing&#34;&gt;how to set up&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Manual&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Turn off automatic syncing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And reindex a record or relation manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product.reindex&#xA;# or&#xA;store.products.reindex(mode: :async)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also do bulk updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.callbacks(:bulk) do&#xA;  Product.find_each(&amp;amp;:update_fields)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or temporarily skip updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.callbacks(false) do&#xA;  Product.find_each(&amp;amp;:update_fields)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or override the model’s strategy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product.reindex(mode: :async) # :inline or :queue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Associations&lt;/h3&gt; &#xA;&lt;p&gt;Data is &lt;strong&gt;not&lt;/strong&gt; automatically synced when an association is updated. If this is desired, add a callback to reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  belongs_to :product&#xA;&#xA;  after_commit :reindex_product&#xA;&#xA;  def reindex_product&#xA;    product.reindex&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Default Scopes&lt;/h3&gt; &#xA;&lt;p&gt;If you have a default scope that filters records, use the &lt;code&gt;should_index?&lt;/code&gt; method to exclude them from indexing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  default_scope { where(deleted_at: nil) }&#xA;&#xA;  def should_index?&#xA;    deleted_at.nil?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to index and search filtered records, set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick unscope: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Intelligent Search&lt;/h2&gt; &#xA;&lt;p&gt;The best starting point to improve your search &lt;strong&gt;by far&lt;/strong&gt; is to track searches and conversions. &lt;a href=&#34;https://github.com/ankane/searchjoy&#34;&gt;Searchjoy&lt;/a&gt; makes it easy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apple&#34;, track: {user_id: current_user.id})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/searchjoy&#34;&gt;See the docs&lt;/a&gt; for how to install and use. Focus on top searches with a low conversion rate.&lt;/p&gt; &#xA;&lt;p&gt;Searchkick can then use the conversion data to learn what users are looking for. If a user searches for “ice cream” and adds Ben &amp;amp; Jerry’s Chunky Monkey to the cart (our conversion metric at Instacart), that item gets a little more weight for similar searches. This can make a huge difference on the quality of your search.&lt;/p&gt; &#xA;&lt;p&gt;Add conversion data with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  has_many :conversions, class_name: &#34;Searchjoy::Conversion&#34;, as: :convertable&#xA;  has_many :searches, class_name: &#34;Searchjoy::Search&#34;, through: :conversions&#xA;&#xA;  searchkick conversions: [:conversions] # name of field&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      conversions: searches.group(:query).distinct.count(:user_id)&#xA;      # {&#34;ice cream&#34; =&amp;gt; 234, &#34;chocolate&#34; =&amp;gt; 67, &#34;cream&#34; =&amp;gt; 2}&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and set up a cron job to add new conversions daily. For zero downtime deployment, temporarily set &lt;code&gt;conversions: false&lt;/code&gt; in your search calls until the data is reindexed.&lt;/p&gt; &#xA;&lt;h3&gt;Performant Conversions&lt;/h3&gt; &#xA;&lt;p&gt;A performant way to do conversions is to cache them to prevent N+1 queries. For Postgres, create a migration with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;add_column :products, :search_conversions, :jsonb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For MySQL, use &lt;code&gt;:json&lt;/code&gt;, and for others, use &lt;code&gt;:text&lt;/code&gt; with a &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html&#34;&gt;JSON serializer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Next, update your model. Create a separate method for conversion data so you can use &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#partial-reindexing&#34;&gt;partial reindexing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick conversions: [:conversions]&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      category: category&#xA;    }.merge(conversions_data)&#xA;  end&#xA;&#xA;  def conversions_data&#xA;    {&#xA;      conversions: search_conversions || {}&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deploy and reindex your data. For zero downtime deployment, temporarily set &lt;code&gt;conversions: false&lt;/code&gt; in your search calls until the data is reindexed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, create a job to update the conversions column and reindex records with new conversions. Here’s one you can use for Searchjoy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class UpdateConversionsJob &amp;lt; ApplicationJob&#xA;  def perform(class_name, since: nil, update: true, reindex: true)&#xA;    model = Searchkick.load_model(class_name)&#xA;&#xA;    # get records that have a recent conversion&#xA;    recently_converted_ids =&#xA;      Searchjoy::Conversion.where(convertable_type: class_name).where(created_at: since..)&#xA;      .order(:convertable_id).distinct.pluck(:convertable_id)&#xA;&#xA;    # split into batches&#xA;    recently_converted_ids.in_groups_of(1000, false) do |ids|&#xA;      if update&#xA;        # fetch conversions&#xA;        conversions =&#xA;          Searchjoy::Conversion.where(convertable_id: ids, convertable_type: class_name)&#xA;          .joins(:search).where.not(searchjoy_searches: {user_id: nil})&#xA;          .group(:convertable_id, :query).distinct.count(:user_id)&#xA;&#xA;        # group by record&#xA;        conversions_by_record = {}&#xA;        conversions.each do |(id, query), count|&#xA;          (conversions_by_record[id] ||= {})[query] = count&#xA;        end&#xA;&#xA;        # update conversions column&#xA;        model.transaction do&#xA;          conversions_by_record.each do |id, conversions|&#xA;            model.where(id: id).update_all(search_conversions: conversions)&#xA;          end&#xA;        end&#xA;      end&#xA;&#xA;      if reindex&#xA;        # reindex conversions data&#xA;        model.where(id: ids).reindex(:conversions_data)&#xA;      end&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the job:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;UpdateConversionsJob.perform_now(&#34;Product&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And set it up to run daily.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;UpdateConversionsJob.perform_later(&#34;Product&#34;, since: 1.day.ago)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Personalized Results&lt;/h2&gt; &#xA;&lt;p&gt;Order results differently for each user. For example, show a user’s previously purchased products before other results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      orderer_ids: orders.pluck(:user_id) # boost this product for these users&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;milk&#34;, boost_where: {orderer_ids: current_user.id})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instant Search / Autocomplete&lt;/h2&gt; &#xA;&lt;p&gt;Autocomplete predicts what a user will type, making the search experience faster and easier.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gist.github.com/ankane/b6988db2802aca68a589b31e41b44195/raw/40febe948427e5bc53ec4e5dc248822855fef76f/autocomplete.png&#34; alt=&#34;Autocomplete&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To autocomplete on search terms rather than results, check out &lt;a href=&#34;https://github.com/ankane/autosuggest&#34;&gt;Autosuggest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note 2:&lt;/strong&gt; If you only have a few thousand records, don’t use Searchkick for autocomplete. It’s &lt;em&gt;much&lt;/em&gt; faster to load all records into JavaScript and autocomplete there (eliminates network requests).&lt;/p&gt; &#xA;&lt;p&gt;First, specify which fields use this feature. This is necessary since autocomplete can increase the index size significantly, but don’t worry - this gives you blazing faster queries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Movie &amp;lt; ApplicationRecord&#xA;  searchkick word_start: [:title, :director]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Movie.search(&#34;jurassic pa&#34;, fields: [:title], match: :word_start)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Typically, you want to use a JavaScript library like &lt;a href=&#34;https://twitter.github.io/typeahead.js/&#34;&gt;typeahead.js&lt;/a&gt; or &lt;a href=&#34;https://jqueryui.com/autocomplete/&#34;&gt;jQuery UI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Here’s how to make it work with Rails&lt;/h4&gt; &#xA;&lt;p&gt;First, add a route and controller action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MoviesController &amp;lt; ApplicationController&#xA;  def autocomplete&#xA;    render json: Movie.search(params[:query], {&#xA;      fields: [&#34;title^5&#34;, &#34;director&#34;],&#xA;      match: :word_start,&#xA;      limit: 10,&#xA;      load: false,&#xA;      misspellings: {below: 5}&#xA;    }).map(&amp;amp;:title)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use &lt;code&gt;load: false&lt;/code&gt; and &lt;code&gt;misspellings: {below: n}&lt;/code&gt; (or &lt;code&gt;misspellings: false&lt;/code&gt;) for best performance.&lt;/p&gt; &#xA;&lt;p&gt;Then add the search box and JavaScript code to a view.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input type=&#34;text&#34; id=&#34;query&#34; name=&#34;query&#34; /&amp;gt;&#xA;&#xA;&amp;lt;script src=&#34;jquery.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;typeahead.bundle.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;  var movies = new Bloodhound({&#xA;    datumTokenizer: Bloodhound.tokenizers.whitespace,&#xA;    queryTokenizer: Bloodhound.tokenizers.whitespace,&#xA;    remote: {&#xA;      url: &#39;/movies/autocomplete?query=%QUERY&#39;,&#xA;      wildcard: &#39;%QUERY&#39;&#xA;    }&#xA;  });&#xA;  $(&#39;#query&#39;).typeahead(null, {&#xA;    source: movies&#xA;  });&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gist.github.com/ankane/b6988db2802aca68a589b31e41b44195/raw/40febe948427e5bc53ec4e5dc248822855fef76f/recursion.png&#34; alt=&#34;Suggest&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick suggest: [:name] # fields to generate suggestions&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;peantu butta&#34;, suggest: true)&#xA;products.suggestions # [&#34;peanut butter&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Aggregations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html&#34;&gt;Aggregations&lt;/a&gt; provide aggregated search data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gist.github.com/ankane/b6988db2802aca68a589b31e41b44195/raw/40febe948427e5bc53ec4e5dc248822855fef76f/facets.png&#34; alt=&#34;Aggregations&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;chuck taylor&#34;, aggs: [:product_type, :gender, :brand])&#xA;products.aggs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;where&lt;/code&gt; conditions apply to aggregations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, where: {color: &#34;brandy&#34;}, aggs: [:size])&#xA;# aggregations for brandy wingtips are returned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change this with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, where: {color: &#34;brandy&#34;}, aggs: [:size], smart_aggs: false)&#xA;# aggregations for all wingtips are returned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set &lt;code&gt;where&lt;/code&gt; conditions for each aggregation separately with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, aggs: {size: {where: {color: &#34;brandy&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Limit&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, aggs: {store_id: {limit: 10}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Order&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, aggs: {color: {order: {&#34;_key&#34; =&amp;gt; &#34;asc&#34;}}}) # alphabetically&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-order&#34;&gt;All of these options are supported&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ranges&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;price_ranges = [{to: 20}, {from: 20, to: 50}, {from: 50}]&#xA;Product.search(&#34;*&#34;, aggs: {price: {ranges: price_ranges}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Minimum document count&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, aggs: {store_id: {min_doc_count: 2}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Script support&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;*&#34;, aggs: {color: {script: {source: &#34;&#39;Color: &#39; + _value&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Date histogram&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;pear&#34;, aggs: {products_per_year: {date_histogram: {field: :created_at, interval: :year}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other aggregation types, including sub-aggregations, use &lt;code&gt;body_options&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;orange&#34;, body_options: {aggs: {price: {histogram: {field: :price, interval: 10}}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Highlight&lt;/h2&gt; &#xA;&lt;p&gt;Specify which fields to index with highlighting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Band &amp;lt; ApplicationRecord&#xA;  searchkick highlight: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Highlight the search query in the results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bands = Band.search(&#34;cinema&#34;, highlight: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the highlighted fields with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bands.with_highlights.each do |band, highlights|&#xA;  highlights[:name] # &#34;Two Door &amp;lt;em&amp;gt;Cinema&amp;lt;/em&amp;gt; Club&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the tag, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Band.search(&#34;cinema&#34;, highlight: {tag: &#34;&amp;lt;strong&amp;gt;&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To highlight and search different fields, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Band.search(&#34;cinema&#34;, fields: [:name], highlight: {fields: [:description]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the entire field is highlighted. To get small snippets instead, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bands = Band.search(&#34;cinema&#34;, highlight: {fragment_size: 20})&#xA;bands.with_highlights(multiple: true).each do |band, highlights|&#xA;  highlights[:name].join(&#34; and &#34;)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional options can be specified for each field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Band.search(&#34;cinema&#34;, fields: [:name], highlight: {fields: {name: {fragment_size: 200}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find available highlight options in the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/highlighting.html&#34;&gt;Elasticsearch reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Similar Items&lt;/h2&gt; &#xA;&lt;p&gt;Find similar items.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product = Product.first&#xA;product.similar(fields: [:name], where: {size: &#34;12 oz&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Geospatial Searches&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Restaurant &amp;lt; ApplicationRecord&#xA;  searchkick locations: [:location]&#xA;&#xA;  def search_data&#xA;    attributes.merge(location: {lat: latitude, lon: longitude})&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;pizza&#34;, where: {location: {near: {lat: 37, lon: -114}, within: &#34;100mi&#34;}}) # or 160km&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bounded by a box&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;sushi&#34;, where: {location: {top_left: {lat: 38, lon: -123}, bottom_right: {lat: 37, lon: -122}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;top_right&lt;/code&gt; and &lt;code&gt;bottom_left&lt;/code&gt; also work&lt;/p&gt; &#xA;&lt;p&gt;Bounded by a polygon&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;dessert&#34;, where: {location: {geo_polygon: {points: [{lat: 38, lon: -123}, {lat: 39, lon: -123}, {lat: 37, lon: 122}]}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Boost By Distance&lt;/h3&gt; &#xA;&lt;p&gt;Boost results by distance - closer results are boosted more&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;noodles&#34;, boost_by_distance: {location: {origin: {lat: 37, lon: -122}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also supports &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#function-decay&#34;&gt;additional options&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;wings&#34;, boost_by_distance: {location: {origin: {lat: 37, lon: -122}, function: &#34;linear&#34;, scale: &#34;30mi&#34;, decay: 0.5}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Geo Shapes&lt;/h3&gt; &#xA;&lt;p&gt;You can also index and search geo shapes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Restaurant &amp;lt; ApplicationRecord&#xA;  searchkick geo_shape: [:bounds]&#xA;&#xA;  def search_data&#xA;    attributes.merge(&#xA;      bounds: {&#xA;        type: &#34;envelope&#34;,&#xA;        coordinates: [{lat: 4, lon: 1}, {lat: 2, lon: 3}]&#xA;      }&#xA;    )&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-shape.html&#34;&gt;Elasticsearch documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Find shapes intersecting with the query shape&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;soup&#34;, where: {bounds: {geo_shape: {type: &#34;polygon&#34;, coordinates: [[{lat: 38, lon: -123}, ...]]}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Falling entirely within the query shape&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;salad&#34;, where: {bounds: {geo_shape: {type: &#34;circle&#34;, relation: &#34;within&#34;, coordinates: [{lat: 38, lon: -123}], radius: &#34;1km&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Not touching the query shape&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;burger&#34;, where: {bounds: {geo_shape: {type: &#34;envelope&#34;, relation: &#34;disjoint&#34;, coordinates: [{lat: 38, lon: -123}, {lat: 37, lon: -122}]}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inheritance&lt;/h2&gt; &#xA;&lt;p&gt;Searchkick supports single table inheritance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Dog &amp;lt; Animal&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your parent model, set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Animal &amp;lt; ApplicationRecord&#xA;  searchkick inheritance: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parent and child model can both reindex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Animal.reindex&#xA;Dog.reindex # equivalent, all animals reindexed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to search, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Animal.search(&#34;*&#34;)                   # all animals&#xA;Dog.search(&#34;*&#34;)                      # just dogs&#xA;Animal.search(&#34;*&#34;, type: [Dog, Cat]) # just cats and dogs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;suggest&lt;/code&gt; option retrieves suggestions from the parent at the moment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Dog.search(&#34;airbudd&#34;, suggest: true) # suggestions for all animals&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This relies on a &lt;code&gt;type&lt;/code&gt; field that is automatically added to the indexed document. Be wary of defining your own &lt;code&gt;type&lt;/code&gt; field in &lt;code&gt;search_data&lt;/code&gt;, as it will take precedence.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Debugging Queries&lt;/h2&gt; &#xA;&lt;p&gt;To help with debugging queries, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;soap&#34;, debug: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This prints useful info to &lt;code&gt;stdout&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See how the search server scores your queries with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;soap&#34;, explain: true).response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See how the search server tokenizes your queries with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.tokens(&#34;Dish Washer Soap&#34;, analyzer: &#34;searchkick_index&#34;)&#xA;# [&#34;dish&#34;, &#34;dishwash&#34;, &#34;washer&#34;, &#34;washersoap&#34;, &#34;soap&#34;]&#xA;&#xA;Product.search_index.tokens(&#34;dishwasher soap&#34;, analyzer: &#34;searchkick_search&#34;)&#xA;# [&#34;dishwashersoap&#34;] - no match&#xA;&#xA;Product.search_index.tokens(&#34;dishwasher soap&#34;, analyzer: &#34;searchkick_search2&#34;)&#xA;# [&#34;dishwash&#34;, &#34;soap&#34;] - match!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Partial matches&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.tokens(&#34;San Diego&#34;, analyzer: &#34;searchkick_word_start_index&#34;)&#xA;# [&#34;s&#34;, &#34;sa&#34;, &#34;san&#34;, &#34;d&#34;, &#34;di&#34;, &#34;die&#34;, &#34;dieg&#34;, &#34;diego&#34;]&#xA;&#xA;Product.search_index.tokens(&#34;dieg&#34;, analyzer: &#34;searchkick_word_search&#34;)&#xA;# [&#34;dieg&#34;] - match!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/lib/searchkick/index_options.rb#L36&#34;&gt;complete list of analyzers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;As you iterate on your search, it’s a good idea to add tests.&lt;/p&gt; &#xA;&lt;p&gt;For performance, only enable Searchkick callbacks for the tests that need it.&lt;/p&gt; &#xA;&lt;h3&gt;Parallel Tests&lt;/h3&gt; &#xA;&lt;p&gt;Rails 6 enables parallel tests by default. Add to your &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ActiveSupport::TestCase&#xA;  parallelize_setup do |worker|&#xA;    Searchkick.index_suffix = worker&#xA;&#xA;    # reindex models&#xA;    Product.reindex&#xA;&#xA;    # and disable callbacks&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ProductTest &amp;lt; ActiveSupport::TestCase&#xA;  def setup&#xA;    Searchkick.enable_callbacks&#xA;  end&#xA;&#xA;  def teardown&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;&#xA;  def test_search&#xA;    Product.create!(name: &#34;Apple&#34;)&#xA;    Product.search_index.refresh&#xA;    assert_equal [&#34;Apple&#34;], Product.search(&#34;apple&#34;).map(&amp;amp;:name)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minitest&lt;/h3&gt; &#xA;&lt;p&gt;Add to your &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# reindex models&#xA;Product.reindex&#xA;&#xA;# and disable callbacks&#xA;Searchkick.disable_callbacks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ProductTest &amp;lt; Minitest::Test&#xA;  def setup&#xA;    Searchkick.enable_callbacks&#xA;  end&#xA;&#xA;  def teardown&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;&#xA;  def test_search&#xA;    Product.create!(name: &#34;Apple&#34;)&#xA;    Product.search_index.refresh&#xA;    assert_equal [&#34;Apple&#34;], Product.search(&#34;apple&#34;).map(&amp;amp;:name)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RSpec&lt;/h3&gt; &#xA;&lt;p&gt;Add to your &lt;code&gt;spec/spec_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.before(:suite) do&#xA;    # reindex models&#xA;    Product.reindex&#xA;&#xA;    # and disable callbacks&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;&#xA;  config.around(:each, search: true) do |example|&#xA;    Searchkick.callbacks(nil) do&#xA;      example.run&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe Product, search: true do&#xA;  it &#34;searches&#34; do&#xA;    Product.create!(name: &#34;Apple&#34;)&#xA;    Product.search_index.refresh&#xA;    assert_equal [&#34;Apple&#34;], Product.search(&#34;apple&#34;).map(&amp;amp;:name)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Factory Bot&lt;/h3&gt; &#xA;&lt;p&gt;Use a trait and an after &lt;code&gt;create&lt;/code&gt; hook for each indexed model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;FactoryBot.define do&#xA;  factory :product do&#xA;    # ...&#xA;&#xA;    # Note: This should be the last trait in the list so `reindex` is called&#xA;    # after all the other callbacks complete.&#xA;    trait :reindex do&#xA;      after(:create) do |product, _evaluator|&#xA;        product.reindex(refresh: true)&#xA;      end&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;# use it&#xA;FactoryBot.create(:product, :some_trait, :reindex, some_attribute: &#34;foo&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Actions&lt;/h3&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ankane/setup-elasticsearch&#34;&gt;setup-elasticsearch&lt;/a&gt; for an easy way to install Elasticsearch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;    - uses: ankane/setup-elasticsearch@v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;a href=&#34;https://github.com/ankane/setup-opensearch&#34;&gt;setup-opensearch&lt;/a&gt; for an easy way to install OpenSearch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;    - uses: ankane/setup-opensearch@v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;For the search server, Searchkick uses &lt;code&gt;ENV[&#34;ELASTICSEARCH_URL&#34;]&lt;/code&gt; for Elasticsearch and &lt;code&gt;ENV[&#34;OPENSEARCH_URL&#34;]&lt;/code&gt; for OpenSearch. This defaults to &lt;code&gt;http://localhost:9200&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#elastic-cloud&#34;&gt;Elastic Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#heroku&#34;&gt;Heroku&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#amazon-opensearch-service&#34;&gt;Amazon OpenSearch Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#self-hosted-and-other&#34;&gt;Self-Hosted and Other&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Elastic Cloud&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer &lt;code&gt;config/initializers/elasticsearch.rb&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;ELASTICSEARCH_URL&#34;] = &#34;https://user:password@host:port&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Heroku&lt;/h3&gt; &#xA;&lt;p&gt;Choose an add-on: &lt;a href=&#34;https://elements.heroku.com/addons/bonsai&#34;&gt;Bonsai&lt;/a&gt;, &lt;a href=&#34;https://elements.heroku.com/addons/searchbox&#34;&gt;SearchBox&lt;/a&gt;, or &lt;a href=&#34;https://elements.heroku.com/addons/foundelasticsearch&#34;&gt;Elastic Cloud&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Elasticsearch on Bonsai:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create bonsai&#xA;heroku config:set ELASTICSEARCH_URL=`heroku config:get BONSAI_URL`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For OpenSearch on Bonsai:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create bonsai --engine=opensearch&#xA;heroku config:set OPENSEARCH_URL=`heroku config:get BONSAI_URL`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For SearchBox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create searchbox:starter&#xA;heroku config:set ELASTICSEARCH_URL=`heroku config:get SEARCHBOX_URL`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Elastic Cloud (previously Found):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create foundelasticsearch&#xA;heroku addons:open foundelasticsearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit the Shield page and reset your password. You’ll need to add the username and password to your url. Get the existing url with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku config:get FOUNDELASTICSEARCH_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And add &lt;code&gt;elastic:password@&lt;/code&gt; right after &lt;code&gt;https://&lt;/code&gt; and add port &lt;code&gt;9243&lt;/code&gt; at the end:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku config:set ELASTICSEARCH_URL=https://elastic:password@12345.us-east-1.aws.found.io:9243&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku run rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Amazon OpenSearch Service&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer &lt;code&gt;config/initializers/opensearch.rb&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;OPENSEARCH_URL&#34;] = &#34;https://es-domain-1234.us-east-1.es.amazonaws.com:443&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use signed requests, include in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;faraday_middleware-aws-sigv4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and add to your initializer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.aws_credentials = {&#xA;  access_key_id: ENV[&#34;AWS_ACCESS_KEY_ID&#34;],&#xA;  secret_access_key: ENV[&#34;AWS_SECRET_ACCESS_KEY&#34;],&#xA;  region: &#34;us-east-1&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Self-Hosted and Other&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;ELASTICSEARCH_URL&#34;] = &#34;https://user:password@host:port&#34;&#xA;# or&#xA;ENV[&#34;OPENSEARCH_URL&#34;] = &#34;https://user:password@host:port&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Data Protection&lt;/h3&gt; &#xA;&lt;p&gt;We recommend encrypting data at rest and in transit (even inside your own network). This is especially important if you send &lt;a href=&#34;https://en.wikipedia.org/wiki/Personally_identifiable_information&#34;&gt;personal data&lt;/a&gt; of your users to the search server.&lt;/p&gt; &#xA;&lt;p&gt;Bonsai, Elastic Cloud, and Amazon OpenSearch Service all support encryption at rest and HTTPS.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic Failover&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer with multiple hosts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;ELASTICSEARCH_URL&#34;] = &#34;https://user:password@host1,https://user:password@host2&#34;&#xA;# or&#xA;ENV[&#34;OPENSEARCH_URL&#34;] = &#34;https://user:password@host1,https://user:password@host2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/elastic/elastic-transport-ruby&#34;&gt;elastic-transport&lt;/a&gt; or &lt;a href=&#34;https://github.com/opensearch-project/opensearch-ruby/tree/main/opensearch-transport&#34;&gt;opensearch-transport&lt;/a&gt; for a complete list of options.&lt;/p&gt; &#xA;&lt;h3&gt;Lograge&lt;/h3&gt; &#xA;&lt;p&gt;Add the following to &lt;code&gt;config/environments/production.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.lograge.custom_options = lambda do |event|&#xA;  options = {}&#xA;  options[:search] = event.payload[:searchkick_runtime] if event.payload[:searchkick_runtime].to_f &amp;gt; 0&#xA;  options&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ankane/production_rails&#34;&gt;Production Rails&lt;/a&gt; for other good practices.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;h3&gt;JSON Generation&lt;/h3&gt; &#xA;&lt;p&gt;Significantly increase performance with faster JSON generation. Add &lt;a href=&#34;https://github.com/ohler55/oj&#34;&gt;Oj&lt;/a&gt; to your Gemfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;oj&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This speeds up all JSON generation and parsing in your application (automatically!)&lt;/p&gt; &#xA;&lt;h3&gt;Persistent HTTP Connections&lt;/h3&gt; &#xA;&lt;p&gt;Significantly increase performance with persistent HTTP connections. Add &lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt; to your Gemfile and it’ll automatically be used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;typhoeus&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To reduce log noise, create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Ethon.logger = Logger.new(nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run into issues on Windows, check out &lt;a href=&#34;https://www.rastating.com/fixing-issues-in-typhoeus-and-httparty-on-windows/&#34;&gt;this post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Searchable Fields&lt;/h3&gt; &#xA;&lt;p&gt;By default, all string fields are searchable (can be used in &lt;code&gt;fields&lt;/code&gt; option). Speed up indexing and reduce index size by only making some fields searchable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick searchable: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Filterable Fields&lt;/h3&gt; &#xA;&lt;p&gt;By default, all string fields are filterable (can be used in &lt;code&gt;where&lt;/code&gt; option). Speed up indexing and reduce index size by only making some fields filterable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick filterable: [:brand]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Non-string fields are always filterable and should not be passed to this option.&lt;/p&gt; &#xA;&lt;h3&gt;Parallel Reindexing&lt;/h3&gt; &#xA;&lt;p&gt;For large data sets, you can use background jobs to parallelize reindexing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(mode: :async)&#xA;# {index_name: &#34;products_production_20170111210018065&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the jobs complete, promote the new index with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.promote(index_name)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally track the status with Redis:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.redis = Redis.new&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.reindex_status(index_name)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also have Searchkick wait for reindexing to complete&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(mode: :async, wait: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/nickelser/activejob-traffic_control&#34;&gt;ActiveJob::TrafficControl&lt;/a&gt; to control concurrency. Install the gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;activejob-traffic_control&#34;, &#34;&amp;gt;= 0.1.3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ActiveJob::TrafficControl.client = Searchkick.redis&#xA;&#xA;class Searchkick::BulkReindexJob&#xA;  concurrency 3&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will allow only 3 jobs to run at once.&lt;/p&gt; &#xA;&lt;h3&gt;Refresh Interval&lt;/h3&gt; &#xA;&lt;p&gt;You can specify a longer refresh interval while reindexing to increase performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(mode: :async, refresh_interval: &#34;30s&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only makes a noticable difference with parallel reindexing.&lt;/p&gt; &#xA;&lt;p&gt;When promoting, have it restored to the value in your mapping (defaults to &lt;code&gt;1s&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.promote(index_name, update_refresh_interval: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Queuing&lt;/h3&gt; &#xA;&lt;p&gt;Push ids of records needing reindexing to a queue and reindex in bulk for better performance. First, set up Redis in an initializer. We recommend using &lt;a href=&#34;https://github.com/mperham/connection_pool&#34;&gt;connection_pool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.redis = ConnectionPool.new { Redis.new }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And ask your models to queue updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: :queue&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, set up a background job to run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick::ProcessQueueJob.perform_later(class_name: &#34;Product&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check the queue length with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.reindex_queue.length&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more tips, check out &lt;a href=&#34;https://www.elastic.co/blog/found-keeping-elasticsearch-in-sync&#34;&gt;Keeping Elasticsearch in Sync&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Routing&lt;/h3&gt; &#xA;&lt;p&gt;Searchkick supports &lt;a href=&#34;https://www.elastic.co/blog/customizing-your-document-routing&#34;&gt;routing&lt;/a&gt;, which can significantly speed up searches.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Business &amp;lt; ApplicationRecord&#xA;  searchkick routing: true&#xA;&#xA;  def search_routing&#xA;    city_id&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Business.search(&#34;ice cream&#34;, routing: params[:city_id])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Partial Reindexing&lt;/h3&gt; &#xA;&lt;p&gt;Reindex a subset of attributes to reduce time spent generating search data and cut down on network traffic.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      category: category&#xA;    }.merge(prices_data)&#xA;  end&#xA;&#xA;  def prices_data&#xA;    {&#xA;      price: price,&#xA;      sale_price: sale_price&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(:prices_data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;p&gt;Searchkick makes it easy to use the Elasticsearch or OpenSearch DSL on its own.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Mapping&lt;/h3&gt; &#xA;&lt;p&gt;Create a custom mapping:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick mappings: {&#xA;    properties: {&#xA;      name: {type: &#34;keyword&#34;}&#xA;    }&#xA;  }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use a custom mapping, you&#39;ll need to use &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#advanced-search&#34;&gt;custom searching&lt;/a&gt; as well.&lt;/p&gt; &#xA;&lt;p&gt;To keep the mappings and settings generated by Searchkick, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick merge_mappings: true, mappings: {...}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Search&lt;/h3&gt; &#xA;&lt;p&gt;And use the &lt;code&gt;body&lt;/code&gt; option to search:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(body: {query: {match: {name: &#34;milk&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the response with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products.response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To modify the query generated by Searchkick, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;milk&#34;, body_options: {min_score: 1})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products =&#xA;  Product.search(&#34;apples&#34;) do |body|&#xA;    body[:min_score] = 1&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;p&gt;To access the &lt;code&gt;Elasticsearch::Client&lt;/code&gt; or &lt;code&gt;OpenSearch::Client&lt;/code&gt; directly, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multi Search&lt;/h2&gt; &#xA;&lt;p&gt;To batch search requests for performance, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;snacks&#34;)&#xA;coupons = Coupon.search(&#34;snacks&#34;)&#xA;Searchkick.multi_search([products, coupons])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use &lt;code&gt;products&lt;/code&gt; and &lt;code&gt;coupons&lt;/code&gt; as typical results.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Errors are not raised as with single requests. Use the &lt;code&gt;error&lt;/code&gt; method on each query to check for errors.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple Models&lt;/h2&gt; &#xA;&lt;p&gt;Search across multiple models with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search(&#34;milk&#34;, models: [Product, Category])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost specific models with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;indices_boost: {Category =&amp;gt; 2, Product =&amp;gt; 1}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multi-Tenancy&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://www.tiagoamaro.com.br/2014/12/11/multi-tenancy-with-searchkick/&#34;&gt;this great post&lt;/a&gt; on the &lt;a href=&#34;https://github.com/influitive/apartment&#34;&gt;Apartment&lt;/a&gt; gem. Follow a similar pattern if you use another gem.&lt;/p&gt; &#xA;&lt;h2&gt;Scroll API&lt;/h2&gt; &#xA;&lt;p&gt;Searchkick also supports the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#scroll-search-results&#34;&gt;scroll API&lt;/a&gt;. Scrolling is not intended for real time user requests, but rather for processing large amounts of data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;*&#34;, scroll: &#34;1m&#34;).scroll do |batch|&#xA;  # process batch ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also scroll batches manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;*&#34;, scroll: &#34;1m&#34;)&#xA;while products.any?&#xA;  # process batch ...&#xA;&#xA;  products = products.scroll&#xA;end&#xA;&#xA;products.clear_scroll&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deep Paging&lt;/h2&gt; &#xA;&lt;p&gt;By default, Elasticsearch and OpenSearch limit paging to the first 10,000 results. &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/guide/current/pagination.html&#34;&gt;Here’s why&lt;/a&gt;. We don’t recommend changing this, but if you really need all results, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick deep_paging: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you just need an accurate total count, you can instead use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;pears&#34;, body_options: {track_total_hits: true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Nested Data&lt;/h2&gt; &#xA;&lt;p&gt;To query nested data, use dot notation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;san&#34;, fields: [&#34;store.city&#34;], where: {&#34;store.zip_code&#34; =&amp;gt; 12345})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;Reindex one record&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product = Product.find(1)&#xA;product.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex multiple records&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.where(store_id: 1).reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;store.products.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remove old indices&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.clean_indices&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use custom settings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick settings: {number_of_shards: 3}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a different index name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick index_name: &#34;products_v2&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a dynamic index name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick index_name: -&amp;gt; { &#34;#{name.tableize}-#{I18n.locale}&#34; }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prefix the index name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick index_prefix: &#34;datakick&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all models&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.index_prefix = &#34;datakick&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a different term for boosting by conversions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;banana&#34;, conversions_term: &#34;organic banana&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple conversion fields&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  has_many :searches, class_name: &#34;Searchjoy::Search&#34;&#xA;&#xA;  # searchkick also supports multiple &#34;conversions&#34; fields&#xA;  searchkick conversions: [&#34;unique_user_conversions&#34;, &#34;total_conversions&#34;]&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      unique_user_conversions: searches.group(:query).distinct.count(:user_id),&#xA;      # {&#34;ice cream&#34; =&amp;gt; 234, &#34;chocolate&#34; =&amp;gt; 67, &#34;cream&#34; =&amp;gt; 2}&#xA;      total_conversions: searches.group(:query).count&#xA;      # {&#34;ice cream&#34; =&amp;gt; 412, &#34;chocolate&#34; =&amp;gt; 117, &#34;cream&#34; =&amp;gt; 6}&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and during query time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;banana&#34;) # boost by both fields (default)&#xA;Product.search(&#34;banana&#34;, conversions: &#34;total_conversions&#34;) # only boost by total_conversions&#xA;Product.search(&#34;banana&#34;, conversions: false) # no conversion boosting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change timeout&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.timeout = 15 # defaults to 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set a lower timeout for searches&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search_timeout = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change the search method name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search_method_name = :lookup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change search queue name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.queue_name = :search_reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Eager load associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;milk&#34;, includes: [:brand, :stores])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Eager load different associations by model&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search(&#34;*&#34;,  models: [Product, Store], model_includes: {Product =&amp;gt; [:store], Store =&amp;gt; [:product]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run additional scopes on results&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;milk&#34;, scope_results: -&amp;gt;(r) { r.with_attached_images })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify default fields to search&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick default_fields: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Turn off special characters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  # A will not match Ä&#xA;  searchkick special_characters: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Turn on stemming for conversions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick stem_conversions: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make search case-sensitive&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick case_sensitive: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If misspellings are enabled (default), results with a single character case difference will match. Turn off misspellings if this is not desired.&lt;/p&gt; &#xA;&lt;p&gt;Change import batch size&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick batch_size: 200 # defaults to 1000&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create index without importing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(import: false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a different id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_document_id&#xA;    custom_id&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-search-api-query-params&#34;&gt;request parameters&lt;/a&gt; like &lt;code&gt;search_type&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;carrots&#34;, request_params: {search_type: &#34;dfs_query_then_fetch&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set options across all models&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.model_options = {&#xA;  batch_size: 200&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex conditionally&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: false&#xA;&#xA;  # add the callbacks manually&#xA;  after_commit :reindex, if: -&amp;gt; (model) { model.previous_changes.key?(&#34;name&#34;) } # use your own condition&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex all models - Rails only&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Turn on misspellings after a certain number of characters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;api&#34;, misspellings: {prefix_length: 2}) # api, apt, no ahi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; With this option, if the query length is the same as &lt;code&gt;prefix_length&lt;/code&gt;, misspellings are turned off with Elasticsearch 7 and OpenSearch 1&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;ah&#34;, misspellings: {prefix_length: 2}) # ah, no aha&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BigDecimal values are indexed as floats by default so they can be used for boosting. Convert them to strings to keep full precision.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_data&#xA;    {&#xA;      units: units.to_s(&#34;F&#34;)&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Gotchas&lt;/h2&gt; &#xA;&lt;h3&gt;Consistency&lt;/h3&gt; &#xA;&lt;p&gt;Elasticsearch and OpenSearch are eventually consistent, meaning it can take up to a second for a change to reflect in search. You can use the &lt;code&gt;refresh&lt;/code&gt; method to have it show up immediately.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product.save!&#xA;Product.search_index.refresh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inconsistent Scores&lt;/h3&gt; &#xA;&lt;p&gt;Due to the distributed nature of Elasticsearch and OpenSearch, you can get incorrect results when the number of documents in the index is low. You can &lt;a href=&#34;https://www.elastic.co/blog/understanding-query-then-fetch-vs-dfs-query-then-fetch&#34;&gt;read more about it here&lt;/a&gt;. To fix this, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick settings: {number_of_shards: 1}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For convenience, this is set by default in the test environment.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;h3&gt;5.0&lt;/h3&gt; &#xA;&lt;p&gt;Searchkick 5 supports both the &lt;code&gt;elasticsearch&lt;/code&gt; and &lt;code&gt;opensearch-ruby&lt;/code&gt; gems. Add the one you want to use to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;elasticsearch&#34;&#xA;# or&#xA;gem &#34;opensearch-ruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using the deprecated &lt;code&gt;faraday_middleware-aws-signers-v4&lt;/code&gt; gem, switch to &lt;code&gt;faraday_middleware-aws-sigv4&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, searches now use lazy loading:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# search not executed&#xA;Product.search(&#34;milk&#34;)&#xA;&#xA;# search executed&#xA;Product.search(&#34;milk&#34;).to_a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can reindex relations in the background:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;store.products.reindex(mode: :async)&#xA;# or&#xA;store.products.reindex(mode: :queue)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And there’s a &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#default-scopes&#34;&gt;new option&lt;/a&gt; for models with default scopes.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/ankane/searchkick/raw/master/CHANGELOG.md#500-2022-02-21&#34;&gt;changelog&lt;/a&gt; for the full list of changes.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/ankane/searchkick/raw/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Karel Minarik for &lt;a href=&#34;https://github.com/elasticsearch/elasticsearch-ruby&#34;&gt;Elasticsearch Ruby&lt;/a&gt; and &lt;a href=&#34;https://github.com/karmi/retire&#34;&gt;Tire&lt;/a&gt;, Jaroslav Kalistsuk for &lt;a href=&#34;https://gist.github.com/jarosan/3124884&#34;&gt;zero downtime reindexing&lt;/a&gt;, and Alex Leschenko for &lt;a href=&#34;https://github.com/leschenko/elasticsearch_autocomplete&#34;&gt;Elasticsearch autocomplete&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Everyone is encouraged to help improve this project. Here are a few ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankane/searchkick/issues&#34;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs and &lt;a href=&#34;https://github.com/ankane/searchkick/pulls&#34;&gt;submit pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write, clarify, or fix documentation&lt;/li&gt; &#xA; &lt;li&gt;Suggest or add new features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get started with development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ankane/searchkick.git&#xA;cd searchkick&#xA;bundle install&#xA;bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feel free to open an issue to get feedback on your idea before spending too much time on it.&lt;/p&gt;</summary>
  </entry>
</feed>