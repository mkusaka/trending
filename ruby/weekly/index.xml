<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T02:02:01Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>getsentry/sentry-ruby</title>
    <updated>2023-04-23T02:02:01Z</updated>
    <id>tag:github.com,2023-04-23:/getsentry/sentry-ruby</id>
    <link href="https://github.com/getsentry/sentry-ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sentry SDK for Ruby&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://sentry.io/?utm_source=github&amp;amp;utm_medium=logo&#34; target=&#34;_blank&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://sentry-brand.storage.googleapis.com/sentry-logo-white.png&#34; media=&#34;(prefers-color-scheme: dark)&#34;&gt; &#xA;   &lt;source srcset=&#34;https://sentry-brand.storage.googleapis.com/sentry-logo-black.png&#34; media=&#34;(prefers-color-scheme: light), (prefers-color-scheme: no-preference)&#34;&gt; &#xA;   &lt;img src=&#34;https://sentry-brand.storage.googleapis.com/sentry-logo-black.png&#34; alt=&#34;Sentry&#34; width=&#34;280&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Bad software is everywhere, and we&#39;re tired of it. Sentry is on a mission to help developers write better software faster, so we can get back to enjoying technology. If you want to join us &lt;a href=&#34;https://sentry.io/careers/&#34;&gt;&lt;kbd&gt;&lt;strong&gt;Check out our open positions&lt;/strong&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sentry SDK for Ruby&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;current version&lt;/th&gt; &#xA;   &lt;th&gt;build&lt;/th&gt; &#xA;   &lt;th&gt;coverage&lt;/th&gt; &#xA;   &lt;th&gt;downloads&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-ruby&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sentry-ruby?label=sentry-ruby&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby/actions/workflows/sentry_ruby_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-ruby/workflows/sentry-ruby%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-ruby/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-ruby/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-ruby/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/sentry-ruby.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-rails&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sentry-rails?label=sentry-rails&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby/actions/workflows/sentry_rails_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-ruby/workflows/sentry-rails%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-ruby/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-ruby/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-rails/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/sentry-rails.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-sidekiq&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sentry-sidekiq?label=sentry-sidekiq&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby/actions/workflows/sentry_sidekiq_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-ruby/workflows/sentry-sidekiq%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-ruby/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-ruby/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-sidekiq/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/sentry-sidekiq.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-delayed_job&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sentry-delayed_job?label=sentry-delayed_job&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby/actions/workflows/sentry_delayed_job_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-ruby/workflows/sentry-delayed_job%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-ruby/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-ruby/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-delayed_job/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/sentry-delayed_job.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-resque&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sentry-resque?label=sentry-resque&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby/actions/workflows/sentry_resque_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-ruby/workflows/sentry-resque%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-ruby/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-ruby/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-resque/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/sentry-resque.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-opentelemetry&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/sentry-opentelemetry?label=sentry-opentelemetry&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getsentry/sentry-ruby/actions/workflows/sentry_opentelemetry_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/getsentry/sentry-ruby/workflows/sentry-opentelemetry%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/getsentry/sentry-ruby/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/getsentry/sentry-ruby/master?logo=codecov&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/sentry-opentelemetry/&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/sentry-opentelemetry.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Migrate From sentry-raven&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;The old &lt;code&gt;sentry-raven&lt;/code&gt; client has entered maintenance mode and was moved to &lt;a href=&#34;https://github.com/getsentry/sentry-ruby/tree/master/sentry-raven&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using &lt;code&gt;sentry-raven&lt;/code&gt;, we recommend you to migrate to this new SDK. You can find the benefits of migrating and how to do it in our &lt;a href=&#34;https://docs.sentry.io/platforms/ruby/migration/&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;We test on Ruby 2.4, 2.5, 2.6, 2.7, 3.0, and 3.1 at the latest patchlevel/teeny version. We also support JRuby 9.0.&lt;/p&gt; &#xA;&lt;p&gt;If you use self-hosted Sentry, please also make sure its version is above &lt;code&gt;20.6.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;sentry-ruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and depends on the integrations you want to have, you might also want to install these:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;sentry-rails&#34;&#xA;gem &#34;sentry-sidekiq&#34;&#xA;gem &#34;sentry-delayed_job&#34;&#xA;gem &#34;sentry-resque&#34;&#xA;gem &#34;sentry-opentelemetry&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;You need to use Sentry.init to initialize and configure your SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Sentry.init do |config|&#xA;  config.dsn = &#34;MY_DSN&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about available configuration options, please visit the &lt;a href=&#34;https://docs.sentry.io/platforms/ruby/configuration/options/&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Performance Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;You can activate &lt;a href=&#34;https://docs.sentry.io/platforms/ruby/performance&#34;&gt;performance monitoring&lt;/a&gt; by enabling traces sampling:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Sentry.init do |config|&#xA;  # set a uniform sample rate between 0.0 and 1.0&#xA;  config.traces_sample_rate = 0.2&#xA;  # you can also use traces_sampler for more fine-grained sampling&#xA;  # please click the link below to learn more&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about sampling transactions, please visit the &lt;a href=&#34;https://docs.sentry.io/platforms/ruby/configuration/sampling/#configuring-the-transaction-sample-rate&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/migration/&#34;&gt;Migration Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/rack/&#34;&gt;Rack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/rails/&#34;&gt;Rails&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/sidekiq/&#34;&gt;Sidekiq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/delayed_job/&#34;&gt;DelayedJob&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/resque/&#34;&gt;Resque&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/performance/instrumentation/opentelemetry/&#34;&gt;OpenTemeletry&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Enriching Events&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/rack/enriching-events/scopes/&#34;&gt;Add more data to the current scope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/rack/enriching-events/breadcrumbs/&#34;&gt;Add custom breadcrumbs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/rack/enriching-events/context/&#34;&gt;Add contextual data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/guides/rack/enriching-events/tags/&#34;&gt;Add tags&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.sentry.io/platforms/ruby/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-sentry.io-green.svg?label=ruby%20docs&#34; alt=&#34;Ruby docs&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.sentry.io/c/sdks&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/forum-sentry-green.svg?sanitize=true&#34; alt=&#34;Forum&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/PXa5Apfe7K&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/621778831602221064?logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/sentry&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stack%20overflow-sentry-green.svg?sanitize=true&#34; alt=&#34;Stack Overflow&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=getsentry&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/getsentry?label=getsentry&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>chef/chef</title>
    <updated>2023-04-23T02:02:01Z</updated>
    <id>tag:github.com,2023-04-23:/chef/chef</id>
    <link href="https://github.com/chef/chef" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chef Infra, a powerful automation platform that transforms infrastructure into code automating how infrastructure is configured, deployed and managed across any environment, at any scale&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chef Infra&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeclimate.com/github/chef/chef&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/chef/chef.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buildkite.com/chef-oss/chef-chef-main-verify&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/c82093430ceec7d27af05febb9dcafe3aa331fff9d74c0ab9d.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/chef&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/chef.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chef/chef/raw/main/docs/dev/design_documents/client_release_cadence.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Release%20Policy-Cadence%20Release-brightgreen.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Umbrella Project&lt;/strong&gt;: &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/projects/chef-infra.md&#34;&gt;Chef Infra&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project State&lt;/strong&gt;: &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md#active&#34;&gt;Active&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Issues &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md&#34;&gt;Response Time Maximum&lt;/a&gt;&lt;/strong&gt;: 14 days&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pull Request &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md&#34;&gt;Response Time Maximum&lt;/a&gt;&lt;/strong&gt;: 14 days&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Chef Infra is a configuration management tool designed to bring automation to your entire infrastructure.&lt;/p&gt; &#xA;&lt;h3&gt;Want to try Chef Infra?&lt;/h3&gt; &#xA;&lt;p&gt;For Chef Infra usage, please refer to &lt;a href=&#34;https://learn.chef.io/&#34;&gt;Learn Chef&lt;/a&gt;, our self-paced, entirely free learning platform. Learn Chef also includes module-based training for Chef Infra, as well as Chef Automate, Chef Habitat, and Chef InSpec.&lt;/p&gt; &#xA;&lt;p&gt;Other useful resources for Chef Infra users:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.chef.io/&#34;&gt;https://docs.chef.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/chef/chef/tree/main&#34;&gt;https://github.com/chef/chef/tree/main&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tickets/Issues: &lt;a href=&#34;https://github.com/chef/chef/issues&#34;&gt;https://github.com/chef/chef/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://community-slack.chef.io/&#34;&gt;Chef Community Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list/Forum: &lt;a href=&#34;https://discourse.chef.io&#34;&gt;https://discourse.chef.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;Issues can be reported by using &lt;a href=&#34;https://github.com/chef/chef/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that this repository is primarily for reporting issues in the chef-client itself. For reporting issues against other Chef projects, please look up the appropriate repository. If you&#39;re unsure where to submit an issue, please ask in the #chef-dev channel in &lt;a href=&#34;https://community-slack.chef.io/&#34;&gt;Chef Community Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How We Build &amp;amp; Release Chef&lt;/h2&gt; &#xA;&lt;p&gt;For information on how a contribution goes from PR to released package, see &lt;a href=&#34;https://raw.githubusercontent.com/chef/chef/main/docs/dev/design_documents/how_chef_is_tested_and_built.md&#34;&gt;How Chef Infra Is Built&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To learn more about our monthly feature releases and yearly major releases, see &lt;a href=&#34;https://raw.githubusercontent.com/chef/chef/main/docs/dev/policy/release_and_support_schedule.md&#34;&gt;Chef Infra Release and Support Schedule&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to have your help developing Chef Infra. See our &lt;a href=&#34;https://raw.githubusercontent.com/chef/chef/main/CONTRIBUTING.md&#34;&gt;Contributing Document&lt;/a&gt; for more information on getting started.&lt;/p&gt; &#xA;&lt;h2&gt;License and Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2008-2020, Chef Software, Inc.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>rails/jbuilder</title>
    <updated>2023-04-23T02:02:01Z</updated>
    <id>tag:github.com,2023-04-23:/rails/jbuilder</id>
    <link href="https://github.com/rails/jbuilder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jbuilder: generate JSON objects with a Builder-style DSL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jbuilder&lt;/h1&gt; &#xA;&lt;p&gt;Jbuilder gives you a simple DSL for declaring JSON structures that beats manipulating giant hash structures. This is particularly helpful when the generation process is fraught with conditionals and loops. Here&#39;s a simple example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/views/messages/show.json.jbuilder&#xA;&#xA;json.content format_content(@message.content)&#xA;json.(@message, :created_at, :updated_at)&#xA;&#xA;json.author do&#xA;  json.name @message.creator.name.familiar&#xA;  json.email_address @message.creator.email_address_with_name&#xA;  json.url url_for(@message.creator, format: :json)&#xA;end&#xA;&#xA;if current_user.admin?&#xA;  json.visitors calculate_visitors(@message)&#xA;end&#xA;&#xA;json.comments @message.comments, :content, :created_at&#xA;&#xA;json.attachments @message.attachments do |attachment|&#xA;  json.filename attachment.filename&#xA;  json.url url_for(attachment)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build the following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;  &#34;content&#34;: &#34;&amp;lt;p&amp;gt;This is &amp;lt;i&amp;gt;serious&amp;lt;/i&amp;gt; monkey business&amp;lt;/p&amp;gt;&#34;,&#xA;  &#34;created_at&#34;: &#34;2011-10-29T20:45:28-05:00&#34;,&#xA;  &#34;updated_at&#34;: &#34;2011-10-29T20:45:28-05:00&#34;,&#xA;&#xA;  &#34;author&#34;: {&#xA;    &#34;name&#34;: &#34;David H.&#34;,&#xA;    &#34;email_address&#34;: &#34;&#39;David Heinemeier Hansson&#39; &amp;lt;david@heinemeierhansson.com&amp;gt;&#34;,&#xA;    &#34;url&#34;: &#34;http://example.com/users/1-david.json&#34;&#xA;  },&#xA;&#xA;  &#34;visitors&#34;: 15,&#xA;&#xA;  &#34;comments&#34;: [&#xA;    { &#34;content&#34;: &#34;Hello everyone!&#34;, &#34;created_at&#34;: &#34;2011-10-29T20:45:28-05:00&#34; },&#xA;    { &#34;content&#34;: &#34;To you my good sir!&#34;, &#34;created_at&#34;: &#34;2011-10-29T20:47:28-05:00&#34; }&#xA;  ],&#xA;&#xA;  &#34;attachments&#34;: [&#xA;    { &#34;filename&#34;: &#34;forecast.xls&#34;, &#34;url&#34;: &#34;http://example.com/downloads/forecast.xls&#34; },&#xA;    { &#34;filename&#34;: &#34;presentation.pdf&#34;, &#34;url&#34;: &#34;http://example.com/downloads/presentation.pdf&#34; }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To define attribute and structure names dynamically, use the &lt;code&gt;set!&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.set! :author do&#xA;  json.set! :name, &#39;David&#39;&#xA;end&#xA;&#xA;# =&amp;gt; {&#34;author&#34;: { &#34;name&#34;: &#34;David&#34; }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To merge existing hash or array to current context:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;hash = { author: { name: &#34;David&#34; } }&#xA;json.post do&#xA;  json.title &#34;Merge HOWTO&#34;&#xA;  json.merge! hash&#xA;end&#xA;&#xA;# =&amp;gt; &#34;post&#34;: { &#34;title&#34;: &#34;Merge HOWTO&#34;, &#34;author&#34;: { &#34;name&#34;: &#34;David&#34; } }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Top level arrays can be handled directly. Useful for index and other collection actions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# @comments = @post.comments&#xA;&#xA;json.array! @comments do |comment|&#xA;  next if comment.marked_as_spam_by?(current_user)&#xA;&#xA;  json.body comment.body&#xA;  json.author do&#xA;    json.first_name comment.author.first_name&#xA;    json.last_name comment.author.last_name&#xA;  end&#xA;end&#xA;&#xA;# =&amp;gt; [ { &#34;body&#34;: &#34;great post...&#34;, &#34;author&#34;: { &#34;first_name&#34;: &#34;Joe&#34;, &#34;last_name&#34;: &#34;Bloe&#34; }} ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also extract attributes from array directly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# @people = People.all&#xA;&#xA;json.array! @people, :id, :name&#xA;&#xA;# =&amp;gt; [ { &#34;id&#34;: 1, &#34;name&#34;: &#34;David&#34; }, { &#34;id&#34;: 2, &#34;name&#34;: &#34;Jamie&#34; } ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make a plain array without keys, construct and pass in a standard Ruby array.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;my_array = %w(David Jamie)&#xA;&#xA;json.people my_array&#xA;&#xA;# =&amp;gt; &#34;people&#34;: [ &#34;David&#34;, &#34;Jamie&#34; ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You don&#39;t always have or need a collection when building an array.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.people do&#xA;  json.child! do&#xA;    json.id 1&#xA;    json.name &#39;David&#39;&#xA;  end&#xA;  json.child! do&#xA;    json.id 2&#xA;    json.name &#39;Jamie&#39;&#xA;  end&#xA;end&#xA;&#xA;# =&amp;gt; { &#34;people&#34;: [ { &#34;id&#34;: 1, &#34;name&#34;: &#34;David&#34; }, { &#34;id&#34;: 2, &#34;name&#34;: &#34;Jamie&#34; } ] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Jbuilder objects can be directly nested inside each other. Useful for composing objects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Person&#xA;  # ... Class Definition ... #&#xA;  def to_builder&#xA;    Jbuilder.new do |person|&#xA;      person.(self, :name, :age)&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;class Company&#xA;  # ... Class Definition ... #&#xA;  def to_builder&#xA;    Jbuilder.new do |company|&#xA;      company.name name&#xA;      company.president president.to_builder&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;company = Company.new(&#39;Doodle Corp&#39;, Person.new(&#39;John Stobs&#39;, 58))&#xA;company.to_builder.target!&#xA;&#xA;# =&amp;gt; {&#34;name&#34;:&#34;Doodle Corp&#34;,&#34;president&#34;:{&#34;name&#34;:&#34;John Stobs&#34;,&#34;age&#34;:58}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can either use Jbuilder stand-alone or directly as an ActionView template language. When required in Rails, you can create views à la show.json.jbuilder (the json is already yielded):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Any helpers available to views are available to the builder&#xA;json.content format_content(@message.content)&#xA;json.(@message, :created_at, :updated_at)&#xA;&#xA;json.author do&#xA;  json.name @message.creator.name.familiar&#xA;  json.email_address @message.creator.email_address_with_name&#xA;  json.url url_for(@message.creator, format: :json)&#xA;end&#xA;&#xA;if current_user.admin?&#xA;  json.visitors calculate_visitors(@message)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use partials as well. The following will render the file &lt;code&gt;views/comments/_comments.json.jbuilder&lt;/code&gt;, and set a local variable &lt;code&gt;comments&lt;/code&gt; with all this message&#39;s comments, which you can use inside the partial.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.partial! &#39;comments/comments&#39;, comments: @message.comments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s also possible to render collections of partials:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.array! @posts, partial: &#39;posts/post&#39;, as: :post&#xA;&#xA;# or&#xA;json.partial! &#39;posts/post&#39;, collection: @posts, as: :post&#xA;&#xA;# or&#xA;json.partial! partial: &#39;posts/post&#39;, collection: @posts, as: :post&#xA;&#xA;# or&#xA;json.comments @post.comments, partial: &#39;comments/comment&#39;, as: :comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;as: :some_symbol&lt;/code&gt; is used with partials. It will take care of mapping the passed in object to a variable for the partial. If the value is a collection either implicitly or explicitly by using the &lt;code&gt;collection:&lt;/code&gt; option, then each value of the collection is passed to the partial as the variable &lt;code&gt;some_symbol&lt;/code&gt;. If the value is a singular object, then the object is passed to the partial as the variable &lt;code&gt;some_symbol&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Be sure not to confuse the &lt;code&gt;as:&lt;/code&gt; option to mean nesting of the partial. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; # Use the default `views/comments/_comment.json.jbuilder`, putting @comment as the comment local variable.&#xA; # Note, `comment` attributes are &#34;inlined&#34;.&#xA; json.partial! @comment, as: :comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;is quite different from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; # comment attributes are nested under a &#34;comment&#34; property&#xA;json.comment do&#xA;  json.partial! &#34;/comments/comment.json.jbuilder&#34;, comment: @comment&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass any objects into partial templates with or without &lt;code&gt;:locals&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.partial! &#39;sub_template&#39;, locals: { user: user }&#xA;&#xA;# or&#xA;&#xA;json.partial! &#39;sub_template&#39;, user: user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can explicitly make Jbuilder object return null if you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.extract! @post, :id, :title, :content, :published_at&#xA;json.author do&#xA;  if @post.anonymous?&#xA;    json.null! # or json.nil!&#xA;  else&#xA;    json.first_name @post.author_first_name&#xA;    json.last_name @post.author_last_name&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To prevent Jbuilder from including null values in the output, you can use the &lt;code&gt;ignore_nil!&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.ignore_nil!&#xA;json.foo nil&#xA;json.bar &#34;bar&#34;&#xA;# =&amp;gt; { &#34;bar&#34;: &#34;bar&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Caching&lt;/h2&gt; &#xA;&lt;p&gt;Fragment caching is supported, it uses &lt;code&gt;Rails.cache&lt;/code&gt; and works like caching in HTML templates:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.cache! [&#39;v1&#39;, @person], expires_in: 10.minutes do&#xA;  json.extract! @person, :name, :age&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also conditionally cache a block by using &lt;code&gt;cache_if!&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.cache_if! !admin?, [&#39;v1&#39;, @person], expires_in: 10.minutes do&#xA;  json.extract! @person, :name, :age&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Aside from that, the &lt;code&gt;:cached&lt;/code&gt; options on collection rendering is available on Rails &amp;gt;= 6.0. This will cache the rendered results effectively using the multi fetch feature.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.array! @posts, partial: &#34;posts/post&#34;, as: :post, cached: true&#xA;&#xA;# or:&#xA;json.comments @post.comments, partial: &#34;comments/comment&#34;, as: :comment, cached: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your collection cache depends on multiple sources (try to avoid this to keep things simple), you can name all these dependencies as part of a block that returns an array:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.array! @posts, partial: &#34;posts/post&#34;, as: :post, cached: -&amp;gt; post { [post, current_user] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will include both records as part of the cache key and updating either of them will expire the cache.&lt;/p&gt; &#xA;&lt;h2&gt;Formatting Keys&lt;/h2&gt; &#xA;&lt;p&gt;Keys can be auto formatted using &lt;code&gt;key_format!&lt;/code&gt;, this can be used to convert keynames from the standard ruby_format to camelCase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.key_format! camelize: :lower&#xA;json.first_name &#39;David&#39;&#xA;&#xA;# =&amp;gt; { &#34;firstName&#34;: &#34;David&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set this globally with the class method &lt;code&gt;key_format&lt;/code&gt; (from inside your environment.rb for example):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Jbuilder.key_format camelize: :lower&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, key format is not applied to keys of hashes that are passed to methods like &lt;code&gt;set!&lt;/code&gt;, &lt;code&gt;array!&lt;/code&gt; or &lt;code&gt;merge!&lt;/code&gt;. You can opt into deeply transforming these as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;json.key_format! camelize: :lower&#xA;json.deep_format_keys!&#xA;json.settings([{some_value: &#34;abc&#34;}])&#xA;&#xA;# =&amp;gt; { &#34;settings&#34;: [{ &#34;someValue&#34;: &#34;abc&#34; }]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can set this globally with the class method &lt;code&gt;deep_format_keys&lt;/code&gt; (from inside your environment.rb for example):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Jbuilder.deep_format_keys true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing to Jbuilder&lt;/h2&gt; &#xA;&lt;p&gt;Jbuilder is the work of many contributors. You&#39;re encouraged to submit pull requests, propose features and discuss issues.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rails/jbuilder/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Jbuilder is released under the &lt;a href=&#34;http://www.opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>