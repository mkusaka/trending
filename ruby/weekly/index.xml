<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T01:59:17Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Shopify/packwerk</title>
    <updated>2023-03-12T01:59:17Z</updated>
    <id>tag:github.com,2023-03-12:/Shopify/packwerk</id>
    <link href="https://github.com/Shopify/packwerk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Good things come in small packages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Packwerk &lt;a href=&#34;https://github.com/Shopify/packwerk/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/Shopify/packwerk/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;I know who you are and because of that I know what you do.&#34; This knowledge is a dependency that raises the cost of change.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;-- &lt;em&gt;Sandi Metz, Practical Object-Oriented Design in Ruby&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Packwerk is a Ruby gem used to enforce boundaries and modularize Rails applications.&lt;/p&gt; &#xA;&lt;p&gt;Packwerk can be used to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Combine groups of files into packages&lt;/li&gt; &#xA; &lt;li&gt;Define package-level constant visibility (i.e. have publicly accessible constants)&lt;/li&gt; &#xA; &lt;li&gt;Help existing codebases to become more modular without obstructing development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Packwerk needs &lt;a href=&#34;https://github.com/fxn/zeitwerk&#34;&gt;Zeitwerk&lt;/a&gt; enabled, which comes with Rails 6.&lt;/p&gt; &#xA;&lt;p&gt;Packwerk supports MRI versions 2.7 and above.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Watch a &lt;a href=&#34;https://www.youtube.com/watch?v=NwqlyBAxVpQ&amp;amp;feature=youtu.be&#34;&gt;1-minute video demo&lt;/a&gt; on how Packwerk works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NwqlyBAxVpQ&amp;amp;feature=youtu.be&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Shopify/packwerk/main/static/packwerk-check-demo.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add this line to your application&#39;s Gemfile:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;packwerk&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install the gem&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install it yourself as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install packwerk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bundle binstub packwerk&lt;/code&gt; to generate the binstub&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bin/packwerk init&lt;/code&gt; to generate the configuration files&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/Shopify/packwerk/main/USAGE.md&#34;&gt;USAGE.md&lt;/a&gt; for usage once Packwerk is installed on your project.&lt;/p&gt; &#xA;&lt;h2&gt;Pronunciation&lt;/h2&gt; &#xA;&lt;p&gt;&#34;Packwerk&#34; is pronounced &lt;a href=&#34;https://cdn.shopify.com/s/files/1/0258/7469/files/packwerk.mp3&#34;&gt;[ˈpakvɛʁk]&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt;Various third parties have built tooling on top of packwerk. Here&#39;s a selection of some that might prove useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bellroy/graphwerk&#34;&gt;https://github.com/bellroy/graphwerk&lt;/a&gt; draws a graph of your package dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Gusto/packwerk-vscode&#34;&gt;https://github.com/Gusto/packwerk-vscode&lt;/a&gt; integrates packwerk into Visual Studio Code so you can see violations right in your editor&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Gusto/stimpack&#34;&gt;https://github.com/Gusto/stimpack&lt;/a&gt; sets up Rails autoloading, as well as &lt;code&gt;rspec&lt;/code&gt; and &lt;code&gt;FactoryBot&lt;/code&gt; integration, for packages arranged in a flat list. Stimpack is quite convenient, but for autoloading we recommend to use &lt;code&gt;Rails::Engine&lt;/code&gt;s instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubyatscale/danger-packwerk&#34;&gt;https://github.com/rubyatscale/danger-packwerk&lt;/a&gt; integrates packwerk with &lt;a href=&#34;https://danger.systems&#34;&gt;danger.systems&lt;/a&gt; to provide packwerk feedback as Github inline PR comments&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubyatscale/packwerk-extensions&#34;&gt;https://github.com/rubyatscale/packwerk-extensions&lt;/a&gt; contains extensions for packwerk, including a checker for packwerk that allows you to enforce public API boundaries. This was originally extracted from &lt;code&gt;packwerk&lt;/code&gt; itself.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;After checking out the repo, run &lt;code&gt;bin/setup&lt;/code&gt; to install dependencies. Then, run &lt;code&gt;rake test&lt;/code&gt; to run the tests. You can also run &lt;code&gt;bin/console&lt;/code&gt; for an interactive prompt that will allow you to experiment.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;With Ruby being a very dynamic language, static analysis tools such as Packwerk are bound to have limitations. To reduce the impact of those limitations, Packwerk is designed to avoid false positives (reporting references as violations that are actually fine) at any cost, and we pay the cost by accepting a small number of false negatives (failing to report actual violations).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Packwerk can only resolve references to constants that are defined in code loaded by the application&#39;s Zeitwerk autoloader. This is because we rely on &lt;a href=&#34;https://github.com/fxn/zeitwerk#file-structure&#34;&gt;Zeitwerk&#39;s conventions&lt;/a&gt;, and code that is loaded differently (like through an explicit &lt;code&gt;require&lt;/code&gt;) often doesn&#39;t follow these conventions.&lt;/li&gt; &#xA; &lt;li&gt;Method calls and objects passed around the application are completely ignored. Packwerk only cares about static constant references. That said, if you want Packwerk to analyze parameters of a method, you can use &lt;a href=&#34;https://sorbet.org/&#34;&gt;Sorbet&lt;/a&gt; to define a type signature. Sorbet signatures are pure Ruby code and use constants to express types, and Packwerk understands that.&lt;/li&gt; &#xA; &lt;li&gt;Support for custom Zeitwerk configuration is limited. If &lt;a href=&#34;https://guides.rubyonrails.org/autoloading_and_reloading_constants.html#customizing-inflections&#34;&gt;custom ActiveSupport inflections&lt;/a&gt; are used, Packwerk will understand that and everything is fine. However, if Zeitwerk is directly configured with &lt;a href=&#34;https://github.com/fxn/zeitwerk#inflection&#34;&gt;custom Zeitwerk inflections&lt;/a&gt; or to &lt;a href=&#34;https://github.com/fxn/zeitwerk#collapsing-directories&#34;&gt;collapse directories&lt;/a&gt;, &lt;em&gt;Packwerk will get confused and produce false positives&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&#34;https://github.com/Shopify/packwerk&#34;&gt;https://github.com/Shopify/packwerk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read and follow the guidelines in &lt;a href=&#34;https://github.com/Shopify/packwerk/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The gem is available as open source under the terms of the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>endoflife-date/endoflife.date</title>
    <updated>2023-03-12T01:59:17Z</updated>
    <id>tag:github.com,2023-03-12:/endoflife-date/endoflife.date</id>
    <link href="https://github.com/endoflife-date/endoflife.date" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Informative site with EoL dates of everything&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;endoflife.date&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/sites/endoflife-date/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/92f7a2a9-3cca-4916-a75e-f9db4ec39d48/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.guide/how-to-contribute/#opening-a-pull-request&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/powered_by-Jekyll-blue.svg?sanitize=true&#34; alt=&#34;powered by Jekyll&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://endoflife.date/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/https/endoflife.date.svg?sanitize=true&#34; alt=&#34;Website shields.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://commonmark.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with-Markdown-1f425f.svg?sanitize=true&#34; alt=&#34;made-with-Markdown&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CODE-OF-CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/endoflife-date/community&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/endoflife-date/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/endoflife_date&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url.svg?label=@endoflife_date&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fendoflife_date&#34; alt=&#34;Twitter Follow Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Keep track of various End of Life dates and support lifecycles for various products. Visit &lt;a href=&#34;https://endoflife.date&#34;&gt;https://endoflife.date&lt;/a&gt; for a list of supported products. This information is very often &lt;a href=&#34;https://twitter.com/captn3m0/status/1110504412064239617&#34;&gt;hard to track or badly presented&lt;/a&gt;. This project collates this data and presents it in an easily accessible format, with URLs that are easy to guess and remember.&lt;/p&gt; &#xA;&lt;p&gt;If you maintain release information (end-of-life dates, or support information) for a product, we have a &lt;a href=&#34;https://endoflife.date/recommendations&#34;&gt;set of recommendations&lt;/a&gt; along with a checklist on some best practices for publishing this information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details. While participating in the project, you must abide by its &lt;a href=&#34;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CODE-OF-CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;An API is available for integration with CI platforms. API documentation is available at &lt;a href=&#34;https://endoflife.date/docs/api&#34;&gt;https://endoflife.date/docs/api&lt;/a&gt;. The API is currently in Alpha, and breaking changes can happen.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;endoflife.date is relying on various amazing software and components :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, an Internet hosting service for software development and version control,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, a static site generator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Ruby&lt;/a&gt;, a dynamic and open source programming language with a focus on simplicity and productivity.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/just-the-docs/just-the-docs&#34;&gt;Just the Docs&lt;/a&gt;, a documentation theme for Jekyll.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stoplight.io/open-source/elements&#34;&gt;Stoplight Elements&lt;/a&gt;, a collection of UI components for displaying beautiful developer documentation from any OpenAPI document.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://simpleicons.org/&#34;&gt;Simple Icons&lt;/a&gt;, free SVG icons for popular brands.&lt;/li&gt; &#xA; &lt;li&gt;Our icon is derived from &lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Hourglass_icon_%28orange%29.svg&#34;&gt;Hourglass icon (orange)&lt;/a&gt; by David Abián and Serhio Magpie on the English Wikipedia. Remixed under the CC-BY-SA-4.0 license.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://realfavicongenerator.net/&#34;&gt;RealFaviconGenerator&lt;/a&gt;, a favicon Generator, for real.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;, an all-in-one platform for automating modern web projects.&lt;/li&gt; &#xA; &lt;li&gt;Product descriptions are adapted from the &lt;a href=&#34;https://en.wikipedia.org/&#34;&gt;English Wikipedia&lt;/a&gt;, under &lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License&#34;&gt;CC BY-SA 3.0&lt;/a&gt; license.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vcr/vcr</title>
    <updated>2023-03-12T01:59:17Z</updated>
    <id>tag:github.com,2023-03-12:/vcr/vcr</id>
    <link href="https://github.com/vcr/vcr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Record your test suite&#39;s HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;vcr&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vcr/vcr/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/vcr/vcr/actions/workflows/test.yml/badge.svg?branch=master&#34; alt=&#34;CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://github.com/vcr/vcr/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/vcr/vcr.svg?style=flat-square&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/vcr&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/vcr.svg?style=flat-square&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr#backer&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backers/badge.svg?style=flat-square&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr#sponsor&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsors/badge.svg?style=flat-square&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Record your test suite&#39;s HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Help Wanted&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re looking for more maintainers. If you&#39;d like to help maintain a well-used gem please spend some time reviewing pull requests, issues, or participating in discussions.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;rubygems&#39;&#xA;require &#39;test/unit&#39;&#xA;require &#39;vcr&#39;&#xA;&#xA;VCR.configure do |config|&#xA;  config.cassette_library_dir = &#34;fixtures/vcr_cassettes&#34;&#xA;  config.hook_into :webmock&#xA;end&#xA;&#xA;class VCRTest &amp;lt; Test::Unit::TestCase&#xA;  def test_example_dot_com&#xA;    VCR.use_cassette(&#34;synopsis&#34;) do&#xA;      response = Net::HTTP.get_response(URI(&#39;http://www.iana.org/domains/reserved&#39;))&#xA;      assert_match /Example domains/, response.body&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run this test once, and VCR will record the HTTP request to &lt;code&gt;fixtures/vcr_cassettes/synopsis.yml&lt;/code&gt;. Run it again, and VCR will replay the response from iana.org when the HTTP request is made. This test is now fast (no real HTTP requests are made anymore), deterministic (the test will continue to pass, even if you are offline, or iana.org goes down for maintenance) and accurate (the response will contain the same headers and body you get from a real request). You can use a different cassette library directory (e.g., &#34;test/vcr_cassettes&#34;).&lt;/p&gt; &#xA;&lt;p&gt;NOTE: To avoid storing any sensitive information in cassettes, check out &lt;a href=&#34;https://relishapp.com/vcr/vcr/v/5-0-0/docs/configuration/filter-sensitive-data&#34;&gt;Filter Sensitive Data&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rails and Minitest:&lt;/strong&gt; Do &lt;em&gt;not&lt;/em&gt; use &#39;test/fixtures&#39; as the directory if you&#39;re using Rails and Minitest (Rails will instead transitively load any files in that directory as models).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically records and replays your HTTP interactions with minimal setup/configuration code.&lt;/li&gt; &#xA; &lt;li&gt;Supports and works with the HTTP stubbing facilities of multiple libraries. Currently, the following are supported: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bblimke/webmock&#34;&gt;WebMock&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/excon/excon&#34;&gt;Excon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supports multiple HTTP libraries: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/toland/patron&#34;&gt;Patron&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/taf2/curb&#34;&gt;Curb&lt;/a&gt; (when using WebMock -- only supports Curl::Easy at the moment)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nahi/httpclient&#34;&gt;HTTPClient&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/igrigorik/em-http-request&#34;&gt;em-http-request&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.ruby-doc.org/stdlib/libdoc/net/http/rdoc/index.html&#34;&gt;Net::HTTP&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt; (Typhoeus::Hydra, but not Typhoeus::Easy or Typhoeus::Multi)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/geemus/excon&#34;&gt;Excon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;And of course any library built on Net::HTTP, such as &lt;a href=&#34;https://github.com/sparklemotion/mechanize&#34;&gt;Mechanize&lt;/a&gt;, &lt;a href=&#34;https://github.com/jnunemaker/httparty&#34;&gt;HTTParty&lt;/a&gt; or &lt;a href=&#34;https://github.com/rest-client/rest-client&#34;&gt;Rest Client&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Request matching is configurable based on HTTP method, URI, host, path, body and headers, or you can easily implement a custom request matcher to handle any need.&lt;/li&gt; &#xA; &lt;li&gt;The same request can receive different responses in different tests--just use different cassettes.&lt;/li&gt; &#xA; &lt;li&gt;The recorded requests and responses are stored on disk in a serialization format of your choice (currently YAML and JSON are built in, and you can easily implement your own custom serializer) and can easily be inspected and edited.&lt;/li&gt; &#xA; &lt;li&gt;Dynamic responses are supported using ERB.&lt;/li&gt; &#xA; &lt;li&gt;Optionally re-records cassettes on a configurable regular interval to keep them fresh and current.&lt;/li&gt; &#xA; &lt;li&gt;Disables all HTTP requests that you don&#39;t explicitly allow.&lt;/li&gt; &#xA; &lt;li&gt;Simple Cucumber integration is provided using tags.&lt;/li&gt; &#xA; &lt;li&gt;Includes convenient RSpec macros and integration with RSpec 2 metadata.&lt;/li&gt; &#xA; &lt;li&gt;Known to work well with many popular Ruby libraries including RSpec 1 &amp;amp; 2, Cucumber, Test::Unit, Capybara, Mechanize, Rest Client and HTTParty.&lt;/li&gt; &#xA; &lt;li&gt;Includes Rack and Faraday middleware.&lt;/li&gt; &#xA; &lt;li&gt;Supports filtering sensitive data from the response body&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The docs come in two flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://relishapp.com/vcr/vcr/docs&#34;&gt;relish docs&lt;/a&gt; contain example-based documentation (VCR&#39;s Cucumber suite, in fact). It&#39;s a good place to look when you are first getting started with VCR, or if you want to see an example of how to use a feature.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://www.rubydoc.info/gems/vcr/frames&#34;&gt;rubydoc.info docs&lt;/a&gt; contain API documentation. The API docs contain detailed info about all of VCR&#39;s public API.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://github.com/vcr/vcr/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; doc for info about what&#39;s new and changed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is also a Railscast (from 2011), which will get you up and running in no-time &lt;a href=&#34;http://railscasts.com/episodes/291-testing-with-vcr&#34;&gt;http://railscasts.com/episodes/291-testing-with-vcr&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Release Policy&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;VCR follows the principles of &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt;. The &lt;a href=&#34;https://rubydoc.info/gems/vcr/frames&#34;&gt;API documentation&lt;/a&gt; defines VCR&#39;s public API. Patch level releases contain only bug fixes. Minor releases contain backward-compatible new features. Major new releases contain backwards-incompatible changes to the public API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruby Interpreter Compatibility&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;VCR versions 6.x are tested on the following ruby interpreters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MRI 3.1&lt;/li&gt; &#xA; &lt;li&gt;MRI 3.0&lt;/li&gt; &#xA; &lt;li&gt;MRI 2.7&lt;/li&gt; &#xA; &lt;li&gt;MRI 2.6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vcr/vcr/releases/tag/v6.0.0&#34;&gt;VCR 6.0.0&lt;/a&gt; is the last version supporting &amp;gt;= 2.4. Upcoming releases will only explicitly support &amp;gt;= 2.6.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source hosted on &lt;a href=&#34;https://github.com/vcr/vcr&#34;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Direct questions and discussions on &lt;a href=&#34;https://github.com/vcr/vcr/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Report bugs/issues on &lt;a href=&#34;https://github.com/vcr/vcr/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Pull requests are very welcome! Please include spec and/or feature coverage for every patch, and create a topic branch for every separate change you make.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://github.com/vcr/vcr/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guide for instructions on running the specs and features.&lt;/li&gt; &#xA; &lt;li&gt;Code quality metrics are checked by &lt;a href=&#34;https://codeclimate.com/github/vcr/vcr&#34;&gt;Code Climate&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Documentation is generated with &lt;a href=&#34;https://yardoc.org/&#34;&gt;YARD&lt;/a&gt; (&lt;a href=&#34;https://rubydoc.info/gems/yard/file/docs/GettingStarted.md&#34;&gt;cheat sheet&lt;/a&gt;). To generate while developing:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yard server --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ports in Other Languages&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sigmavirus24/betamax&#34;&gt;Betamax&lt;/a&gt; (Python)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kevin1024/vcrpy&#34;&gt;VCR.py&lt;/a&gt; (Python)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thegreatape/betamax&#34;&gt;Betamax&lt;/a&gt; (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orchestrate-io/dvr&#34;&gt;DVR&lt;/a&gt; (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dnaeon/go-vcr&#34;&gt;Go VCR&lt;/a&gt; (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wjlroe/betamax&#34;&gt;Betamax&lt;/a&gt; (Clojure)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ifesdjeen/vcr-clj&#34;&gt;vcr-clj&lt;/a&gt; (Clojure)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mleech/scotch&#34;&gt;scotch&lt;/a&gt; (C#/.NET)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfloryan/Betamax.Net&#34;&gt;Betamax.NET&lt;/a&gt; (C#/.NET)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/parroty/exvcr&#34;&gt;ExVCR&lt;/a&gt; (Elixir)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cordawyn/havcr&#34;&gt;HAVCR&lt;/a&gt; (Haskell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acoulton/mimic&#34;&gt;Mimic&lt;/a&gt; (PHP/Kohana)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/php-vcr/php-vcr&#34;&gt;PHP-VCR&lt;/a&gt; (PHP)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ijpiantanida/talkback&#34;&gt;Talkback&lt;/a&gt; (JavaScript/Node)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org/martijnthe/nsurlconnectionvcr&#34;&gt;NSURLConnectionVCR&lt;/a&gt; (Objective-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dstnbrkr/VCRURLConnection&#34;&gt;VCRURLConnection&lt;/a&gt; (Objective-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/venmo/DVR&#34;&gt;DVR&lt;/a&gt; (Swift)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/diegoeche/vhs&#34;&gt;VHS&lt;/a&gt; (Erlang)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/betamaxteam/betamax&#34;&gt;Betamax&lt;/a&gt; (Java)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ucarion/http_replayer&#34;&gt;http_replayer&lt;/a&gt; (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/okreplay&#34;&gt;OkReplay&lt;/a&gt; (Java/Android)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/vcr&#34;&gt;vcr&lt;/a&gt; (R)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Related Projects&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quidproquo/mr_video&#34;&gt;Mr. Video&lt;/a&gt; (Rails engine for managing VCR cassettes and episodes)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Similar Libraries in Ruby&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sandro/ephemeral_response&#34;&gt;Ephemeral Response&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martinbtt/net-http-spy&#34;&gt;Net::HTTP Spy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisyoung/netrecorder&#34;&gt;NetRecorder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oesmith/puffing-billy&#34;&gt;Puffing Billy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/artemave/REST-assured&#34;&gt;REST-assured&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsmestad/stale_fish&#34;&gt;Stale Fish&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trydionel/web_fixtures&#34;&gt;WebFixtures&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aslakhellesoy&#34;&gt;Aslak Hellesøy&lt;/a&gt; for &lt;a href=&#34;https://github.com/aslakhellesoy/cucumber&#34;&gt;Cucumber&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bblimke&#34;&gt;Bartosz Blimke&lt;/a&gt; for &lt;a href=&#34;https://github.com/bblimke/webmock&#34;&gt;WebMock&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisk&#34;&gt;Chris Kampmeier&lt;/a&gt; for &lt;a href=&#34;https://github.com/chrisk/fakeweb&#34;&gt;FakeWeb&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisyoung&#34;&gt;Chris Young&lt;/a&gt; for &lt;a href=&#34;https://github.com/chrisyoung/netrecorder&#34;&gt;NetRecorder&lt;/a&gt;, the inspiration for VCR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dbalatero&#34;&gt;David Balatero&lt;/a&gt; and &lt;a href=&#34;https://github.com/i0rek&#34;&gt;Hans Hasselberg&lt;/a&gt; for help with &lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geemus&#34;&gt;Wesley Beary&lt;/a&gt; for help with &lt;a href=&#34;https://github.com/geemus/excon&#34;&gt;Excon&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jacobkg&#34;&gt;Jacob Green&lt;/a&gt; for help with ongoing VCR maintenance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrbrdo&#34;&gt;Jan Berdajs&lt;/a&gt; and &lt;a href=&#34;https://github.com/djberg96&#34;&gt;Daniel Berger&lt;/a&gt; for improvements to thread-safety.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks also to the following people who have contributed patches or helpful suggestions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aaronbrethorst&#34;&gt;Aaron Brethorst&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wenzowski&#34;&gt;Alexander Wenzowski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/austenito&#34;&gt;Austen Ito&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/avdi&#34;&gt;Avdi Grimm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/bblimke&#34;&gt;Bartosz Blimke&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benjaminoakes&#34;&gt;Benjamin Oakes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benhutton&#34;&gt;Ben Hutton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bradleyisotope&#34;&gt;Bradley Isotope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kirkconnell&#34;&gt;Carlos Kirkconnell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cjolly&#34;&gt;Chad Jolly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisle&#34;&gt;Chris Le&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cgunther&#34;&gt;Chris Gunther&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emaiax&#34;&gt;Eduardo Maia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubymaverick&#34;&gt;Eric Allam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ezkl&#34;&gt;Ezekiel Templin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/closedbracket&#34;&gt;Flaviu Simihaian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gordoncww&#34;&gt;Gordon Wilson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i0rek&#34;&gt;Hans Hasselberg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Hermanverschooten&#34;&gt;Herman Verschooten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sigmavirus24&#34;&gt;Ian Cordasco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ingemar&#34;&gt;Ingemar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quidproquo&#34;&gt;Ilya Scharrenbroich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jacobkg&#34;&gt;Jacob Green&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbence&#34;&gt;James Bence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jayshepherd&#34;&gt;Jay Shepherd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fluxx&#34;&gt;Jeff Pollard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/begriffs&#34;&gt;Joe Nelson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JonathanTron&#34;&gt;Jonathan Tron&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsmestad&#34;&gt;Justin Smestad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kbaum&#34;&gt;Karl Baum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kris-luminar&#34;&gt;Kris Luminar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kurtfunai&#34;&gt;Kurt Funai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/plukevdh&#34;&gt;Luke van der Hoeven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/markburns&#34;&gt;Mark Burns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kavu&#34;&gt;Max Riveiro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vrish88&#34;&gt;Michael Lavrisha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mdemare&#34;&gt;Michiel de Mare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kcdragon&#34;&gt;Mike Dalton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mislav&#34;&gt;Mislav Marohnić&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nbibler&#34;&gt;Nathaniel Bibler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/noahd1&#34;&gt;Noah Davis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opsb&#34;&gt;Oliver Searle-Barnes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rauchy&#34;&gt;Omer Rauchwerger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pacoguzman&#34;&gt;Paco Guzmán&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jumanjiman&#34;&gt;Paul Morgan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/playupchris&#34;&gt;playupchris&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronwsmith&#34;&gt;Ron Smith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanb&#34;&gt;Ryan Bates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhburrows&#34;&gt;Ryan Burrows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rmcastil&#34;&gt;Ryan Castillo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sfsekaran&#34;&gt;Sathya Sekaran&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ScotterC&#34;&gt;Scott Carleton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shayfrendt&#34;&gt;Shay Frendt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/southpolesteve&#34;&gt;Steve Faulkner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bendycode&#34;&gt;Stephen Anderson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tlunter&#34;&gt;Todd Lunter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tylerhunt&#34;&gt;Tyler Hunt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ugisozols&#34;&gt;Uģis Ozols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vzvu3k6k&#34;&gt;vzvu3k6k&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geemus&#34;&gt;Wesley Beary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Backers&lt;/h1&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&#34;https://opencollective.com/vcr#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/vcr/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/0/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/1/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/2/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/3/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/4/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/5/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/6/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/7/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/8/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/9/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/10/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/11/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/12/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/13/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/14/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/15/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/16/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/17/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/18/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/19/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/20/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/21/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/22/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/23/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/24/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/25/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/26/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/27/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/28/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/29/avatar&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&#34;https://opencollective.com/vcr#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/vcr/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/0/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/1/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/2/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/3/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/4/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/5/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/6/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/7/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/8/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/9/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/10/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/11/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/12/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/13/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/14/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/15/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/16/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/17/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/18/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/19/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/20/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/21/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/22/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/23/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/24/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/25/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/26/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/27/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/28/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/29/avatar&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>