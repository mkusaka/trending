<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-07T02:03:15Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ymoyao/cocoapods-privacy</title>
    <updated>2024-04-07T02:03:15Z</updated>
    <id>tag:github.com,2024-04-07:/ymoyao/cocoapods-privacy</id>
    <link href="https://github.com/ymoyao/cocoapods-privacy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a cocoapods plugin to auto manager Xcode PrivacyInfo.xcprivacy file(create &amp;&amp; search)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cocoapods-privacy&lt;/h1&gt; &#xA;&lt;p&gt;Apple 2024 will review the App&#39;s privacy manifests in the spring, and any apps that don&#39;t submit a privacy list may be called back. For now, the privacy list is broken down by component, to facilitate the maintenance of component privacy, cocoapods-privacy is developed for management. &lt;a href=&#34;https://developer.apple.com/documentation/bundleresources/privacy_manifest_files&#34;&gt;Click to view details on Apple&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;As name as,cocoapods-privacy is a plugin for privacy manifests, and focus on cocoapods!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install cocoapods-privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;init&lt;/h3&gt; &#xA;&lt;p&gt;First of all, you must set a json config to cocoapods-privacy, this is a defalut config.json&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pod privacy config https://raw.githubusercontent.com/ymoyao/cocoapods-privacy/main/resources/config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There has 3 keys in defalut config, defalut rule is ÔºöTo exclude retrieval a component that git source contains certain ‚Äògithub.com‚Äô keywords&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;source.white.list&#34;: [],&#xA;&#34;source.black.list&#34;: [&#34;github.com&#34;], &#xA;&#34;api.template.url&#34;: &#34;https://raw.githubusercontent.com/ymoyao/cocoapods-privacy/main/resources/NSPrivacyAccessedAPITypes.plist&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;source.white.list : a white list of source, it effective in command &#39;pod privacy install&#39; or &#39;pod install --privacy&#39;, will search white list for NSPrivacyAccessedAPITypes. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;when the whitelist is an empty array, it means all components are whitelist(default config).&lt;/li&gt; &#xA;   &lt;li&gt;when the whitelist is not empty, it means only the components in the whitelist array are retrieved.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;source.black.list : a black list of source, defalut is ‚Äògithub.com‚Äô, based on the whitelist, the components need to be excluded„ÄÇ it effective in command &#39;pod privacy install&#39; or &#39;pod install --privacy&#39;.&lt;/li&gt; &#xA; &lt;li&gt;api.template.url : its required, a template for search NSPrivacyAccessedAPITypes, you can use the provided by default„ÄÇ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If your needs are not met, you can custom! For example, there has some componentsÔºåand it‚Äòs your local config&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;source.white.list&#34;: [&#34;https://github.com/ReactiveCocoa/ReactiveObjC.git&#34;,&#34;git.yourserver.com&#34;,&#34;git.otherserver.com&#34;],&#xA;&#34;source.black.list&#34;: [&#34;github.com&#34;,&#34;https://github.com/AFNetworking/AFNetworking.git&#34;], &#xA;&#34;api.template.url&#34;: &#34;https://raw.githubusercontent.com/ymoyao/cocoapods-privacy/main/resources/NSPrivacyAccessedAPITypes.plist&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/AFNetworking/AFNetworking.git ‚ùå (it&#39;s in &#39;github.com&#39; black list)&#xA;https://github.com/ReactiveCocoa/ReactiveObjC.git ‚ùå (it&#39;s in &#39;github.com&#39; black list, although also on the white list,but the blacklist priority is high when conflict)&#xA;https://git.yourserver.com/xxx/xxxx.git ‚úÖ&#xA;https://git.yourserver.com/mmm/mmm.git ‚úÖ&#xA;https://git.otherserver.com/ssss/ssss.git ‚úÖ&#xA;https://git.yourserver.com/AFNetworking/AFNetworking.git ‚úÖ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After custom,you just update config by local like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pod privacy config /yourfilepath/config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a word, if you define both white and black lists ,final search range: white list minus black list, and empty white list means all!&lt;/p&gt; &#xA;&lt;h3&gt;To Component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pod privacy spec [podspec_file_path]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will auto create privacy file, and search the path of podspec&#39; source_files&#39; define relate to NSPrivacyAccessedAPITypes, finaly, write to PrivacyInfo.xcprivacy file. if your component has much subspec, all subspec that define ‚Äòsource_files‚Äô will create PrivacyInfo.xcprivacy, and auto modify .podspec link .xcprivacy to &#39;resource_bundle&#39; key. For example&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;origin podspec&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Pod::Spec.new do |s|&#xA;  s.name             = &#39;Demo&#39;&#xA;  ...&#xA;  s.source_files = &#39;xxxx&#39;&#xA;  s.subspec &#39;idfa&#39; do |sp|&#xA;      sp.source_files = &#39;xxxxx&#39;&#xA;  end&#xA;  s.subspec &#39;noidfa&#39; do |sp|&#xA;  end&#xA;end&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;podspec after commad üëáüëáüëáüëáüëáüëá&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Pod::Spec.new do |s|&#xA;  s.name             = &#39;Demo&#39;&#xA;  ...&#xA;  s.source_files = &#39;xxxx&#39;&#xA;  s.resource_bundle = {&#34;Demo.privacy&#34;=&amp;gt;&#34;Pod/Privacy/Demo/PrivacyInfo.xcprivacy&#34;}&#xA;  s.subspec &#39;idfa&#39; do |sp|&#xA;      sp.source_files = &#39;xxxxx&#39;&#xA;      sp.resource_bundle = {&#34;Demo.idfa.privacy&#34;=&amp;gt;&#34;Pod/Privacy/Demo.idfa/PrivacyInfo.xcprivacy&#34;}&#xA;  end&#xA;  s.subspec &#39;noidfa&#39; do |sp|&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;961&#34; alt=&#34;Êà™Â±è2024-02-02 11 23 21&#34; src=&#34;https://github.com/ymoyao/cocoapods-privacy/assets/13619221/a6678c8e-c4aa-4f7d-8881-657c6d703657&#34;&gt; &#xA;&lt;h3&gt;To Project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pod install --privacy&#xA;or&#xA;$ pod privacy install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;298&#34; alt=&#34;Êà™Â±è2024-02-02 10 59 59&#34; src=&#34;https://github.com/ymoyao/cocoapods-privacy/assets/13619221/c6f10e36-0f62-497a-93d4-f8b336dc8df4&#34;&gt; &#xA;&lt;p&gt;After command, a PrivacyInfo.xcprivacy will create to you project Resources if empty. and it will search component that configuration files allow and do not have their own privacy manifest file.&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;p&gt;The plugin is focus on NSPrivacyAccessedAPITypes and automatically search and create workflow. you should manager NSPrivacyCollectedDataTypes by yourselfÔºÅ&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Could you please consider giving our repository a starüåüüåüüåü? It would mean a lot to us and help our project gain more visibility. Thank you!&lt;/p&gt;</summary>
  </entry>
</feed>