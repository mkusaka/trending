<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-31T02:03:46Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bkeepers/dotenv</title>
    <updated>2022-07-31T02:03:46Z</updated>
    <id>tag:github.com,2022-07-31:/bkeepers/dotenv</id>
    <link href="https://github.com/bkeepers/dotenv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby gem to load environment variables from `.env`.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dotenv &lt;a href=&#34;https://badge.fury.io/rb/dotenv&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/dotenv.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/bkeepers/dotenv?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/bkeepers/dotenv&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Shim to load environment variables from &lt;code&gt;.env&lt;/code&gt; into &lt;code&gt;ENV&lt;/code&gt; in &lt;em&gt;development&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Storing &lt;a href=&#34;http://12factor.net/config&#34;&gt;configuration in the environment&lt;/a&gt; is one of the tenets of a &lt;a href=&#34;http://12factor.net&#34;&gt;twelve-factor app&lt;/a&gt;. Anything that is likely to change between deployment environments–such as resource handles for databases or credentials for external services–should be extracted from the code into environment variables.&lt;/p&gt; &#xA;&lt;p&gt;But it is not always practical to set environment variables on development machines or continuous integration servers where multiple projects are run. dotenv loads variables from a &lt;code&gt;.env&lt;/code&gt; file into &lt;code&gt;ENV&lt;/code&gt; when the environment is bootstrapped.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Rails&lt;/h3&gt; &#xA;&lt;p&gt;Add this line to the top of your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;dotenv-rails&#39;, groups: [:development, :test]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Note on load order&lt;/h4&gt; &#xA;&lt;p&gt;dotenv is initialized in your Rails app during the &lt;code&gt;before_configuration&lt;/code&gt; callback, which is fired when the &lt;code&gt;Application&lt;/code&gt; constant is defined in &lt;code&gt;config/application.rb&lt;/code&gt; with &lt;code&gt;class Application &amp;lt; Rails::Application&lt;/code&gt;. If you need it to be initialized sooner, you can manually call &lt;code&gt;Dotenv::Railtie.load&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/application.rb&#xA;Bundler.require(*Rails.groups)&#xA;&#xA;# Load dotenv only in development or test environment&#xA;if [&#39;development&#39;, &#39;test&#39;].include? ENV[&#39;RAILS_ENV&#39;]&#xA;  Dotenv::Railtie.load&#xA;end&#xA;&#xA;HOSTNAME = ENV[&#39;HOSTNAME&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use gems that require environment variables to be set before they are loaded, then list &lt;code&gt;dotenv-rails&lt;/code&gt; in the &lt;code&gt;Gemfile&lt;/code&gt; before those other gems and require &lt;code&gt;dotenv/rails-now&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;dotenv-rails&#39;, require: &#39;dotenv/rails-now&#39;&#xA;gem &#39;gem-that-requires-env-variables&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sinatra or Plain ol&#39; Ruby&lt;/h3&gt; &#xA;&lt;p&gt;Install the gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ gem install dotenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As early as possible in your application bootstrap process, load &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;dotenv/load&#39;&#xA;&#xA;# or&#xA;require &#39;dotenv&#39;&#xA;Dotenv.load&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;load&lt;/code&gt; will look for a file called &lt;code&gt;.env&lt;/code&gt; in the current working directory. Pass in multiple files and they will be loaded in order. The first value set for a variable will win.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;dotenv&#39;&#xA;Dotenv.load(&#39;file1.env&#39;, &#39;file2.env&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;code&gt;dotenv&lt;/code&gt; executable to launch your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ dotenv ./script.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;dotenv&lt;/code&gt; executable also accepts a single flag, &lt;code&gt;-f&lt;/code&gt;. Its value should be a comma-separated list of configuration files, in the order of most important to least. All of the files must exist. There &lt;em&gt;must&lt;/em&gt; be a space between the flag and its value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ dotenv -f &#34;.env.local,.env&#34; ./script.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To ensure &lt;code&gt;.env&lt;/code&gt; is loaded in rake, load the tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;dotenv/tasks&#39;&#xA;&#xA;task mytask: :dotenv do&#xA;    # things that require .env&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Add your application configuration to your &lt;code&gt;.env&lt;/code&gt; file in the root of your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;S3_BUCKET=YOURS3BUCKET&#xA;SECRET_KEY=YOURSECRETKEYGOESHERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Whenever your application loads, these variables will be available in &lt;code&gt;ENV&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.fog_directory  = ENV[&#39;S3_BUCKET&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also add &lt;code&gt;export&lt;/code&gt; in front of each line so you can &lt;code&gt;source&lt;/code&gt; the file in bash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export S3_BUCKET=YOURS3BUCKET&#xA;export SECRET_KEY=YOURSECRETKEYGOESHERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multi-line values&lt;/h3&gt; &#xA;&lt;p&gt;If you need multiline variables, for example private keys, you can double quote strings and use the &lt;code&gt;\n&lt;/code&gt; character for newlines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PRIVATE_KEY=&#34;-----BEGIN RSA PRIVATE KEY-----\nHkVN9...\n-----END DSA PRIVATE KEY-----\n&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, multi-line values with line breaks are now supported for quoted values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PRIVATE_KEY=&#34;-----BEGIN RSA PRIVATE KEY-----&#xA;...&#xA;HkVN9...&#xA;...&#xA;-----END DSA PRIVATE KEY-----&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is particularly helpful when using the Heroku command line plugin &lt;a href=&#34;https://github.com/xavdid/heroku-config&#34;&gt;&lt;code&gt;heroku-config&lt;/code&gt;&lt;/a&gt; to pull configuration variables down that may have line breaks.&lt;/p&gt; &#xA;&lt;h3&gt;Command Substitution&lt;/h3&gt; &#xA;&lt;p&gt;You need to add the output of a command in one of your variables? Simply add it with &lt;code&gt;$(your_command)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DATABASE_URL=&#34;postgres://$(whoami)@localhost/my_database&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Variable Substitution&lt;/h3&gt; &#xA;&lt;p&gt;You need to add the value of another variable in one of your variables? You can reference the variable with &lt;code&gt;${VAR}&lt;/code&gt; or often just &lt;code&gt;$VAR&lt;/code&gt; in unqoted or double-quoted values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DATABASE_URL=&#34;postgres://${USER}@localhost/my_database&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a value contains a &lt;code&gt;$&lt;/code&gt; and it is not intended to be a variable, wrap it in single quotes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PASSWORD=&#39;pas$word&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Comments&lt;/h3&gt; &#xA;&lt;p&gt;Comments may be added to your file as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# This is a comment&#xA;SECRET_KEY=YOURSECRETKEYGOESHERE # comment&#xA;SECRET_HASH=&#34;something-with-a-#-hash&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Required Keys&lt;/h3&gt; &#xA;&lt;p&gt;If a particular configuration value is required but not set, it&#39;s appropriate to raise an error.&lt;/p&gt; &#xA;&lt;p&gt;To require configuration keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/initializers/dotenv.rb&#xA;&#xA;Dotenv.require_keys(&#34;SERVICE_APP_ID&#34;, &#34;SERVICE_KEY&#34;, &#34;SERVICE_SECRET&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If any of the configuration keys above are not set, your application will raise an error during initialization. This method is preferred because it prevents runtime errors in a production application due to improper configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Parsing&lt;/h3&gt; &#xA;&lt;p&gt;To parse a list of env files for programmatic inspection without modifying the ENV:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Dotenv.parse(&#34;.env.local&#34;, &#34;.env&#34;)&#xA;# =&amp;gt; {&#39;S3_BUCKET&#39; =&amp;gt; &#39;YOURS3BUCKET&#39;, &#39;SECRET_KEY&#39; =&amp;gt; &#39;YOURSECRETKEYGOESHERE&#39;, ...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method returns a hash of the ENV var name/value pairs.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Answered Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Can I use dotenv in production?&lt;/h3&gt; &#xA;&lt;p&gt;dotenv was originally created to load configuration variables into &lt;code&gt;ENV&lt;/code&gt; in &lt;em&gt;development&lt;/em&gt;. There are typically better ways to manage configuration in production environments - such as &lt;code&gt;/etc/environment&lt;/code&gt; managed by &lt;a href=&#34;https://github.com/puppetlabs/puppet&#34;&gt;Puppet&lt;/a&gt; or &lt;a href=&#34;https://github.com/chef/chef&#34;&gt;Chef&lt;/a&gt;, &lt;code&gt;heroku config&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;However, some find dotenv to be a convenient way to configure Rails applications in staging and production environments, and you can do that by defining environment-specific files like &lt;code&gt;.env.production&lt;/code&gt; or &lt;code&gt;.env.test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use this gem to handle env vars for multiple Rails environments (development, test, production, etc.), please note that env vars that are general to all environments should be stored in &lt;code&gt;.env&lt;/code&gt;. Then, environment specific env vars should be stored in &lt;code&gt;.env.&amp;lt;that environment&#39;s name&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What other .env* files can I use?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;dotenv-rails&lt;/code&gt; will override in the following order (highest defined variable overrides lower):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hierarchy Priority&lt;/th&gt; &#xA;   &lt;th&gt;Filename&lt;/th&gt; &#xA;   &lt;th&gt;Environment&lt;/th&gt; &#xA;   &lt;th&gt;Should I &lt;code&gt;.gitignore&lt;/code&gt;it?&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1st (highest)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.development.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Development&lt;/td&gt; &#xA;   &lt;td&gt;Yes!&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides of environment-specific settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1st&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.test.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test&lt;/td&gt; &#xA;   &lt;td&gt;Yes!&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides of environment-specific settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1st&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.production.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Production&lt;/td&gt; &#xA;   &lt;td&gt;Yes!&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides of environment-specific settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2nd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wherever the file is&lt;/td&gt; &#xA;   &lt;td&gt;Definitely.&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides. This file is loaded for all environments &lt;em&gt;except&lt;/em&gt; &lt;code&gt;test&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Development&lt;/td&gt; &#xA;   &lt;td&gt;No.&lt;/td&gt; &#xA;   &lt;td&gt;Shared environment-specific settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.test&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test&lt;/td&gt; &#xA;   &lt;td&gt;No.&lt;/td&gt; &#xA;   &lt;td&gt;Shared environment-specific settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.production&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Production&lt;/td&gt; &#xA;   &lt;td&gt;No.&lt;/td&gt; &#xA;   &lt;td&gt;Shared environment-specific settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Last&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All Environments&lt;/td&gt; &#xA;   &lt;td&gt;Depends (See &lt;a href=&#34;https://raw.githubusercontent.com/bkeepers/dotenv/master/#should-i-commit-my-env-file&#34;&gt;below&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;The Original®&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Should I commit my .env file?&lt;/h3&gt; &#xA;&lt;p&gt;Credentials should only be accessible on the machines that need access to them. Never commit sensitive information to a repository that is not needed by every development machine and server.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--template&lt;/code&gt; flag on the dotenv cli to create a template of your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ dotenv -t .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A template will be created in your working directory named &lt;code&gt;{FINAME}.template&lt;/code&gt;. So in the above example, it would create a &lt;code&gt;.env.template&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The template will contain all the environment variables in your &lt;code&gt;.env&lt;/code&gt; file but with their values set to the variable names.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# .env&#xA;S3_BUCKET=YOURS3BUCKET&#xA;SECRET_KEY=YOURSECRETKEYGOESHERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Would become&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# .env.template&#xA;S3_BUCKET=S3_BUCKET&#xA;SECRET_KEY=SECRET_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Personally, I prefer to commit the &lt;code&gt;.env&lt;/code&gt; file with development-only settings. This makes it easy for other developers to get started on the project without compromising credentials for other environments. If you follow this advice, make sure that all the credentials for your development environment are different from your other deployments and that the development credentials do not have access to any confidential data.&lt;/p&gt; &#xA;&lt;h3&gt;Why is it not overriding existing &lt;code&gt;ENV&lt;/code&gt; variables?&lt;/h3&gt; &#xA;&lt;p&gt;By default, it &lt;strong&gt;won&#39;t&lt;/strong&gt; overwrite existing environment variables as dotenv assumes the deployment environment has more knowledge about configuration than the application does. To overwrite existing environment variables you can use &lt;code&gt;Dotenv.overload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--overload&lt;/code&gt; flag on the dotenv cli to override existing &lt;code&gt;ENV&lt;/code&gt; variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ dotenv -o -f &#34;.env.local,.env&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want a better idea of how dotenv works, check out the &lt;a href=&#34;https://www.youtube.com/watch?v=lKmY_0uY86s&#34;&gt;Ruby Rogues Code Reading of dotenv&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Added some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>github/view_component</title>
    <updated>2022-07-31T02:03:46Z</updated>
    <id>tag:github.com,2022-07-31:/github/view_component</id>
    <link href="https://github.com/github/view_component" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A framework for building reusable, testable &amp; encapsulated view components in Ruby on Rails.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/github/view_component/main/docs/logo/readme-light.svg#gh-light-mode-only&#34; alt=&#34;ViewComponent logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/github/view_component/main/docs/logo/readme-dark.svg#gh-dark-mode-only&#34; alt=&#34;ViewComponent logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A framework for building reusable, testable &amp;amp; encapsulated view components in Ruby on Rails.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://viewcomponent.org/&#34;&gt;viewcomponent.org&lt;/a&gt; for documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project is intended to be a safe, welcoming space for collaboration. Contributors are expected to adhere to the &lt;a href=&#34;http://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; code of conduct. We recommend reading the &lt;a href=&#34;https://raw.githubusercontent.com/github/view_component/main/docs/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; as well.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ViewComponent is available as open source under the terms of the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lynndylanhurley/devise_token_auth</title>
    <updated>2022-07-31T02:03:46Z</updated>
    <id>tag:github.com,2022-07-31:/lynndylanhurley/devise_token_auth</id>
    <link href="https://github.com/lynndylanhurley/devise_token_auth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Token based authentication for Rails JSON APIs. Designed to work with jToker and ng-token-auth.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Devise Token Auth&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/devise_token_auth&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/devise_token_auth.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/lynndylanhurley/devise_token_auth&#34;&gt;&lt;img src=&#34;https://travis-ci.org/lynndylanhurley/devise_token_auth.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth/coverage&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/lynndylanhurley/devise_token_auth/badges/coverage.svg?sanitize=true&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/devise_token_auth&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/devise_token_auth.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/lynndylanhurley/devise_token_auth?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/lynndylanhurley/devise_token_auth&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, multi-client and secure token-based authentication for Rails.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re building SPA or a mobile app, and you want authentication, you need tokens, not cookies. This gem refreshes the tokens on each request, and expires them in a short time, so the app is secure. Also, it maintains a session for each client/device, so you can have as many sessions as you want.&lt;/p&gt; &#xA;&lt;h2&gt;Main features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Seamless integration with: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lynndylanhurley/ng-token-auth&#34;&gt;ng-token-auth&lt;/a&gt; for &lt;a href=&#34;https://github.com/angular/angular.js&#34;&gt;AngularJS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/neroniaky/angular-token&#34;&gt;Angular-Token&lt;/a&gt; for &lt;a href=&#34;https://github.com/angular/angular&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kylecorbelli/redux-token-auth&#34;&gt;redux-token-auth&lt;/a&gt; for &lt;a href=&#34;https://github.com/reactjs/react-redux&#34;&gt;React with Redux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lynndylanhurley/j-toker&#34;&gt;jToker&lt;/a&gt; for &lt;a href=&#34;https://jquery.com/&#34;&gt;jQuery&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Oauth2 authentication using &lt;a href=&#34;https://github.com/intridea/omniauth&#34;&gt;OmniAuth&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Email authentication using &lt;a href=&#34;https://github.com/plataformatec/devise&#34;&gt;Devise&lt;/a&gt;, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;User registration, update and deletion&lt;/li&gt; &#xA;   &lt;li&gt;Login and logout&lt;/li&gt; &#xA;   &lt;li&gt;Password reset, account confirmation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/docs/usage/multiple_models.md&#34;&gt;multiple user models&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It is &lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/docs/security.md&#34;&gt;secure&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project leverages the following gems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/plataformatec/devise&#34;&gt;Devise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intridea/omniauth&#34;&gt;OmniAuth&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;devise_token_auth&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then install the gem using bundle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://devise-token-auth.gitbook.io/devise-token-auth&#34;&gt;Docs&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/devise-token-auth&#34;&gt;StackOverflow&lt;/a&gt; for help requests and how-to questions.&lt;/p&gt; &#xA;&lt;p&gt;Please open GitHub issues for bugs and enhancements only, not general help requests. Please search previous issues (and Google and StackOverflow) before creating a new issue.&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/raw/master/.github/ISSUE_TEMPLATE.md&#34;&gt;issue template&lt;/a&gt; before posting issues.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/docs/faq.md&#34;&gt;FAQ&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Contributors wanted!&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;. Feel free to submit pull requests, review pull requests, or review open issues. If you&#39;d like to get in contact, &lt;a href=&#34;https://github.com/zachfeldman&#34;&gt;Zach Feldman&lt;/a&gt; has been wrangling this effort, you can reach him with his name @gmail. Further discussion of this in &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/issues/969&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We have some bounties for some issues, &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth/issues?q=is%3Aopen+is%3Aissue+label%3Abounty&#34;&gt;check them out&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Live Demos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://ng-token-auth-demo.herokuapp.com/&#34;&gt;Here is a demo&lt;/a&gt; of this app running with the &lt;a href=&#34;https://github.com/lynndylanhurley/ng-token-auth&#34;&gt;ng-token-auth&lt;/a&gt; module and &lt;a href=&#34;https://github.com/angular/angular.js&#34;&gt;AngularJS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackblitz.com/github/neroniaky/angular-token&#34;&gt;Here is a demo&lt;/a&gt; of this app running with the &lt;a href=&#34;https://github.com/neroniaky/angular-token&#34;&gt;Angular-Token&lt;/a&gt; service and &lt;a href=&#34;https://github.com/angular/angular&#34;&gt;Angular&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://j-toker-demo.herokuapp.com/&#34;&gt;Here is a demo&lt;/a&gt; of this app using the &lt;a href=&#34;https://github.com/lynndylanhurley/j-toker&#34;&gt;jToker&lt;/a&gt; plugin and &lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The fully configured api used in these demos can be found &lt;a href=&#34;https://github.com/lynndylanhurley/devise_token_auth_demo&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lynndylanhurley/devise_token_auth/master/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&#34;https://opencollective.com/devise_token_auth#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/devise_token_auth#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/backers.svg?width=890&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/devise_token_auth#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/devise_token_auth/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/devise_token_auth/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the WTFPL&lt;/p&gt;</summary>
  </entry>
</feed>