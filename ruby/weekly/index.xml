<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-15T01:53:12Z</updated>
  <subtitle>Weekly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>community/community</title>
    <updated>2023-10-15T01:53:12Z</updated>
    <id>tag:github.com,2023-10-15:/community/community</id>
    <link href="https://github.com/community/community" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Public feedback discussions for: GitHub Mobile, GitHub Discussions, GitHub Codespaces, GitHub Sponsors, GitHub Issues and more!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Community Discussions&lt;/h1&gt; &#xA;&lt;p&gt;In this repository, you will find categories for various product areas. Feel free to share feedback, discuss topics with other community members, or ask questions.&lt;/p&gt; &#xA;&lt;h2&gt;Product Feedback&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Feedback Category&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;About the Product&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;👍 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/accessibility&#34;&gt;Accessibility&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-personal-account-settings/managing-accessibility-settings#about-accessibility-settings&#34;&gt;About Accessibility&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚢 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/actions&#34;&gt;Actions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🔁 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/api-and-webhooks&#34;&gt;API and Webhooks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/rest&#34;&gt;GitHub API&lt;/a&gt; and &lt;a href=&#34;https://docs.github.com/en/developers/webhooks-and-events/webhooks/about-webhook&#34;&gt;GitHub Webhooks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🔎 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/code-search-and-navigation&#34;&gt;Code Search &amp;amp; Navigation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cs.github.com/about&#34;&gt;Code Search &amp;amp; Navigation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;💻 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/codespaces&#34;&gt;Codespaces&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;👩‍✈️ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/copilot&#34;&gt;Copilot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://copilot.github.com/&#34;&gt;GitHub Copilot&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🤖 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/code-security&#34;&gt;Code Security&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/features/security&#34;&gt;GitHub Code Security&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🗣️ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🌐 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/feed&#34;&gt;Feed&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.blog/2022-03-22-improving-your-github-feed/&#34;&gt;GitHub Feed&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🎒 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/github-education&#34;&gt;GitHub Education&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://education.github.com/&#34;&gt;GitHub Education&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⭐ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/lists&#34;&gt;Lists&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/exploring-projects-on-github/saving-repositories-with-stars#organizing-starred-repositories-with-lists&#34;&gt;GitHub Lists&lt;/a&gt; (Public Beta)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📱 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/mobile&#34;&gt;Mobile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mobile&#34;&gt;GitHub Mobile&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;📦 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/packages&#34;&gt;Packages&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/features/packages&#34;&gt;GitHub Packages&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🗒️ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/pages&#34;&gt;Pages&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/pages&#34;&gt;GitHub Pages&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🖼️ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/profile&#34;&gt;Profile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/about-your-profile&#34;&gt;GitHub Profile&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🐙 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/projects-and-issues&#34;&gt;Projects and Issues&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/issues/planning-and-tracking-with-projects&#34;&gt;GitHub Projects&lt;/a&gt; / &lt;a href=&#34;https://github.com/features/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/pull-requests&#34;&gt;Pull Requests&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests&#34;&gt;GitHub Pull Requests&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🗳️ &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/repositories&#34;&gt;Repositories&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en/repositories&#34;&gt;GitHub Repositories&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;💖 &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sponsors&#34;&gt;GitHub Sponsors&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/orgs/community/discussions/categories/general&#34;&gt;General Feedback&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.github.com/en&#34;&gt;GitHub Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;These discussions are where you can share suggestions for how the products should be improved and discuss those improvements with the community, including members of the GitHub product team. Check out &lt;a href=&#34;https://raw.githubusercontent.com/community/community/main/#making-suggestions&#34;&gt;Making suggestions&lt;/a&gt; to learn how to provide feedback.&lt;/p&gt; &#xA;&lt;h2&gt;Discussions Categories&lt;/h2&gt; &#xA;&lt;p&gt;You will also find previous Discourse Community Forum categories that have since been updated in GitHub Discussions categories below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Discourse Category&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;New Discussions Category&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub Help&lt;/td&gt; &#xA;   &lt;td&gt;New to GitHub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code to Cloud&lt;/td&gt; &#xA;   &lt;td&gt;Actions and Packages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub Ecosystem&lt;/td&gt; &#xA;   &lt;td&gt;APIs and Integrations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Uncategorized&lt;/td&gt; &#xA;   &lt;td&gt;General&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Software Development&lt;/td&gt; &#xA;   &lt;td&gt;Programming Help&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Machine Learning and ML Ops&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;When creating a new post, make sure to choose the predetermined category that best fits your topic. This will ensure that conversations are indexed by their corresponding product or feature, to help community members quickly find answers to their questions.&lt;/p&gt; &#xA;&lt;p&gt;This repository works in conjunction with the &lt;a href=&#34;https://github.com/github/roadmap&#34;&gt;GitHub public product roadmap&lt;/a&gt;, which is where you can learn about what features we&#39;re working on, and when they&#39;ll be available. Accordingly, the Issues feature of this repository has been disabled. Discussion categories have been established for specific features listed above, as well as a general category for other topics. Additional categories may be added in the future. In the meantime, topics outside of the listed categories above, will be transferred into the General category. Please review the &lt;a href=&#34;https://docs.github.com/en/site-policy/github-terms/github-community-forum-code-of-conduct&#34;&gt;CODE OF CONDUCT&lt;/a&gt; before participating in discussions.&lt;/p&gt; &#xA;&lt;h2&gt;Making suggestions&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to &lt;a href=&#34;https://github.com/orgs/community/discussions&#34;&gt;open a discussion&lt;/a&gt; if you have suggestions for how we can improve our products. You don&#39;t need to have a solution to the problem you are facing to kick off a discussion.&lt;/p&gt; &#xA;&lt;p&gt;Prior to creating a new discussion, please take a look at previous discussions to see if someone else has already shared your suggestion(s). If you find a similar discussion, reply with additional details or upvote the discussion to signal your support rather than creating a new one.&lt;/p&gt; &#xA;&lt;h3&gt;From a suggestion to a shipped feature&lt;/h3&gt; &#xA;&lt;p&gt;Once you kick off a discussion, the GitHub product team will evaluate the feedback but will not be able to respond to every submission. From there, we will work with you, and the entire community, to ensure we understand the current capabilities GitHub doesn’t have and explore the space for potential solutions to your problem statement:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If the product team determines that we are going to prioritize a feature to solve the problem you&#39;ve identified, we may open an issue and track its development in the &lt;a href=&#34;https://github.com/github/roadmap&#34;&gt;public roadmap&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If the product team determines that we will not be working to solve the problem you have identified, we may comment on the discussion describing our reasoning so our decisions can remain transparent.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Any statement in this repository that is not purely historical is considered a forward-looking statement. Forward-looking statements included in this repository are based on information available to GitHub as of the date they are made, and GitHub assumes no obligation to update any forward-looking statements. The forward-looking comments in the public feedback discussions do not represent a commitment, guarantee, obligation or promise to deliver any product or feature, or to deliver any product and feature by any particular date, and are intended to outline the general development plans. Customers should not rely on these public feedback discussions to make any purchasing decision.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tendersearls/tldr</title>
    <updated>2023-10-15T01:53:12Z</updated>
    <id>tag:github.com,2023-10-15:/tendersearls/tldr</id>
    <link href="https://github.com/tendersearls/tldr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby test framework for people who don&#39;t have time for slow tests 💣💥&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TLDR - for people who don&#39;t have time for slow tests&lt;/h1&gt; &#xA;&lt;p&gt;Okay, you might need to sit down for this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;tl;dr, TLDR is a Ruby test framework that stops running your tests after 1.8 seconds.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We initially meant this as a joke &lt;a href=&#34;https://www.youtube.com/live/bmi-SWeH4MA?si=p5g1j1FQZrbYEOCg&amp;amp;t=63&#34;&gt;while pairin&#39;&lt;/a&gt;, but in addition to being funny, it was also a pretty good idea. So we fleshed out &lt;code&gt;tldr&lt;/code&gt; to be a full-featured, mostly &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/#minitest-compatibility&#34;&gt;Minitest-compatible&lt;/a&gt;, and dare-we-say pleasant test framework for Ruby.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;big idea&#34; here is TLDR is designed for users to run the &lt;code&gt;tldr&lt;/code&gt; command repeatedly as they work—as opposed to only running the tests for whatever is being worked on. Even if the suite runs over the 1.8 second time limit. Because TLDR shuffles and runs in parallel and is guaranteed to take less than two seconds, &lt;strong&gt;you&#39;ll actually wind up running &lt;em&gt;all&lt;/em&gt; of your tests quite often as you work&lt;/strong&gt;, catching any problems much earlier than if you had waited until the end of the day to push your work and let a continuous integration server run the full suite.&lt;/p&gt; &#xA;&lt;p&gt;Some stuff you might like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A CLI that can specify tests by line number(s) (e.g. &lt;code&gt;foo.rb:5 bar.rb:3:10&lt;/code&gt;) and by names or patterns (e.g. &lt;code&gt;--name test_fail,test_error --name &#34;/_\d/&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Everything is &lt;strong&gt;parallel by default&lt;/strong&gt;, and seems pretty darn fast; TLDR also provides &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/#parallel-by-default-is-nice-in-theory-but-half-my-tests-are-failing-wat&#34;&gt;several escape hatches to sequester tests that aren&#39;t thread-safe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Surprisingly delightful color diff output when two things fail to equal one another, care of &lt;a href=&#34;https://github.com/mcmire/super_diff&#34;&gt;@mcmire&#39;s super_diff gem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;By default, the CLI will prepend your most-recently-edited test file to the front of your suite so its tests will run first. The test you worked on most recently is the one you most likely want to ensure runs, so TLDR runs it first (see the &lt;code&gt;--prepend&lt;/code&gt; option for how to control this behavior)&lt;/li&gt; &#xA; &lt;li&gt;And, of course, our signature feature: your test suite will never grow into a glacially slow, soul-sucking albatross around your neck, because &lt;strong&gt;after 1.8 seconds, it stops running your tests&lt;/strong&gt;, with a report on what it &lt;em&gt;was&lt;/em&gt; able to run and where your slowest tests are&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some stuff you might &lt;em&gt;not&lt;/em&gt; like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The thought of switching Ruby test frameworks in 2023&lt;/li&gt; &#xA; &lt;li&gt;That bit about your test suite exploding after 1.8 seconds&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Either &lt;code&gt;gem install tldr&lt;/code&gt; or add it to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#34;tldr&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s what a test looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MathTest &amp;lt; TLDR&#xA;  def test_adding&#xA;    assert_equal 1 + 1, 2&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A TLDR subclass defines its tests with instance methods that begin with &lt;code&gt;test_&lt;/code&gt;. They can define &lt;code&gt;setup&lt;/code&gt; and/or &lt;code&gt;teardown&lt;/code&gt; methods which will run before and after each test, respectively.&lt;/p&gt; &#xA;&lt;p&gt;If you place your tests in &lt;code&gt;test/**/*_test.rb&lt;/code&gt; (and/or &lt;code&gt;test/**/test_*.rb&lt;/code&gt;) files, the &lt;code&gt;tldr&lt;/code&gt; executable will find them automatically. And if you define a &lt;code&gt;test/helper.rb&lt;/code&gt; file, it will be loaded prior to your tests.&lt;/p&gt; &#xA;&lt;p&gt;Running the CLI is pretty straightforward:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tldr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can, of course, also just run a specific test file or glob:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tldr test/this/one/in/particular.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or specify the line numbers of tests to run by appending them after a &lt;code&gt;:&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tldr test/fixture/line_number.rb:3:10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And filter which tests run by name or pattern with one or more &lt;code&gt;--name&lt;/code&gt; or &lt;code&gt;-n&lt;/code&gt; flags:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tldr --name FooTest#test_foo -n test_bar,test_baz -n /_qux/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(The above will translate to this array of name filters internally: &lt;code&gt;[&#34;FooTest#test_foo&#34;, &#34;test_bar&#34;, &#34;test_baz&#34;, &#34;/_qux/&#34;]&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;Here is the full list of CLI options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tldr --help&#xA;Usage: tldr [options] some_tests/**/*.rb some/path.rb:13 ...&#xA;        --fail-fast                  Stop running tests as soon as one fails&#xA;    -s, --seed SEED                  Seed for randomization&#xA;        --[no-]parallel              Parallelize tests (Default: true)&#xA;    -n, --name PATTERN               One or more names or /patterns/ of tests to run (like: foo_test, /test_foo.*/, Foo#foo_test)&#xA;        --exclude-name PATTERN       One or more names or /patterns/ NOT to run&#xA;        --exclude-path PATH          One or more paths NOT to run (like: foo.rb, &#34;test/bar/**&#34;, baz.rb:3)&#xA;        --helper PATH                One or more paths to a helper that is required before any tests (Default: &#34;test/helper.rb&#34;)&#xA;        --no-helper                  Don&#39;t require any test helpers&#xA;        --prepend PATH               Prepend one or more paths to run before the rest (Default: most recently modified test)&#xA;        --no-prepend                 Don&#39;t prepend any tests before the rest of the suite&#xA;    -l, --load-path PATH             Add one or more paths to the $LOAD_PATH (Default: [&#34;lib&#34;, &#34;test&#34;])&#xA;    -r, --reporter REPORTER          Set a custom reporter class (Default: &#34;TLDR::Reporters::Default&#34;)&#xA;        --base-path PATH             Change the working directory for all relative paths (Default: current working directory)&#xA;        --no-dotfile                 Disable loading .tldr.yml dotfile&#xA;        --no-emoji                   Disable emoji in the output&#xA;    -v, --verbose                    Print stack traces for errors&#xA;        --[no-]warnings              Print Ruby warnings (Default: true)&#xA;        --watch                      Run your tests continuously on file save (requires &#39;fswatch&#39; to be installed)&#xA;        --yes-i-know                 Suppress TLDR report when suite runs over 1.8s&#xA;        --i-am-being-watched         [INTERNAL] Signals to tldr it is being invoked under --watch mode&#xA;        --comment COMMENT            [INTERNAL] No-op; used for multi-line execution instructions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After being parsed, all the CLI options are converted into a &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/value/config.rb&#34;&gt;TLDR::Config&lt;/a&gt; object.&lt;/p&gt; &#xA;&lt;h3&gt;Setting defaults in .tldr.yml&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;tldr&lt;/code&gt; CLI will look for a &lt;code&gt;.tldr.yml&lt;/code&gt; file in your project root (your working directory or whatever &lt;code&gt;--base-path&lt;/code&gt; you set), which can contain values for any properties on &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/value/config.rb&#34;&gt;TLDR::Config&lt;/a&gt; (with the exception of &lt;code&gt;--base-path&lt;/code&gt; itself).&lt;/p&gt; &#xA;&lt;p&gt;Any values found in the dotfile will override TLDR&#39;s built-in values, but can still be specified by the &lt;code&gt;tldr&lt;/code&gt; CLI or a &lt;code&gt;TLDR::Config&lt;/code&gt; object passed to &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/#running-tests-without-the-cli&#34;&gt;TLDR::Run.at_exit!&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/example/c&#34;&gt;example project&lt;/a&gt; that specifies a &lt;code&gt;.tldr.yml&lt;/code&gt; file as well as some &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/tests/dotfile_test.rb&#34;&gt;internal tests&lt;/a&gt; demonstrating its behavior.&lt;/p&gt; &#xA;&lt;h3&gt;Minitest compatibility&lt;/h3&gt; &#xA;&lt;p&gt;Tests you write with tldr are designed to be mostly-compatible with &lt;a href=&#34;https://github.com/minitest/minitest&#34;&gt;Minitest&lt;/a&gt; tests. Some notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; hook methods should work as you expect. (We even threw in &lt;a href=&#34;https://github.com/splattael/minitest-around&#34;&gt;an &lt;code&gt;around&lt;/code&gt; hook&lt;/a&gt; as a bonus!)&lt;/li&gt; &#xA; &lt;li&gt;All of Minitest&#39;s assertions (e.g. &lt;code&gt;assert&lt;/code&gt;, &lt;code&gt;assert_equals&lt;/code&gt;) are provided, with these caveats: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To retain the &lt;code&gt;expected, actual&lt;/code&gt; argument ordering, &lt;code&gt;tldr&lt;/code&gt; defines &lt;code&gt;assert_include?(element, container)&lt;/code&gt; instead of &lt;code&gt;assert_includes(container, element)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If you want to maximize compatibility and mix in &lt;code&gt;assert_includes&lt;/code&gt; and the deprecated &lt;code&gt;assert_send&lt;/code&gt;, just &lt;code&gt;include TLDR::Assertions::MinitestCompatibility&lt;/code&gt; into the &lt;code&gt;TLDR&lt;/code&gt; base class or individual test classesJust set it&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running tests continuously with --watch&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;tldr&lt;/code&gt; CLI includes a &lt;code&gt;--watch&lt;/code&gt; option which will watch for changes in any of the configured load paths (&lt;code&gt;[&#34;test&#34;, &#34;lib&#34;]&lt;/code&gt; by default) and then execute your tests each time a file is changed. To keep the output up-to-date and easy to scan, it will also clear your console before each run.&lt;/p&gt; &#xA;&lt;p&gt;Note that this feature requires you have &lt;a href=&#34;https://github.com/emcrisostomo/fswatch&#34;&gt;fswatch&lt;/a&gt; installed and on your &lt;code&gt;PATH&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s what that might look like:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tendersearls/tldr/assets/79303/364f0e52-5596-49ce-a470-5eaeddd11f03&#34; alt=&#34;tldr-watch&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running TLDR with Rake&lt;/h3&gt; &#xA;&lt;p&gt;TLDR ships with a &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/rake.rb&#34;&gt;very&lt;/a&gt; minimal rake task that simply shells out to the &lt;code&gt;tldr&lt;/code&gt; CLI. If you want to run TLDR with Rake, you can configure the test run by setting flags on an env var named &lt;code&gt;TLDR_OPTS&lt;/code&gt; or else in the &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/#setting-defaults-in-tldryml&#34;&gt;.tldr.yml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example Rakefile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;standard/rake&#34;&#xA;require &#34;tldr/rake&#34;&#xA;&#xA;task default: [:tldr, &#34;standard:fix&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could then run the task with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ TLDR_OPTS=&#34;--no-parallel&#34; bundle exec rake tldr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One reason you&#39;d want to invoke TLDR with Rake is because you have multiple test suites that you want to be able to conveniently run separately (&lt;a href=&#34;https://blog.testdouble.com/talks/2014-05-25-breaking-up-with-your-test-suite/&#34;&gt;this talk&lt;/a&gt; discussed a few reasons why this can be useful).&lt;/p&gt; &#xA;&lt;p&gt;To create a custom TLDR Rake test, just instantiate &lt;code&gt;TLDR::Task&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;tldr/rake&#34;&#xA;&#xA;TLDR::Task.new(name: :safe_tests, config: TLDR::Config.new(&#xA;  paths: FileList[&#34;safe/**/*_test.rb&#34;],&#xA;  helper_paths: [&#34;safe/helper.rb&#34;],&#xA;  load_paths: [&#34;lib&#34;, &#34;safe&#34;]&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above will create a second Rake task named &lt;code&gt;safe_tests&lt;/code&gt; running a different set of tests than the default &lt;code&gt;tldr&lt;/code&gt; task. Here&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/example/b/Rakefile&#34;&gt;an example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running tests without the CLI&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d rather use TLDR by running Ruby files instead of the &lt;code&gt;tldr&lt;/code&gt; CLI (similar to &lt;code&gt;require &#34;minitest/autorun&#34;&lt;/code&gt;), here&#39;s how to do it!&lt;/p&gt; &#xA;&lt;p&gt;Given a file &lt;code&gt;test/some_test.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;tldr&#34;&#xA;TLDR::Run.at_exit! TLDR::Config.new(no_emoji: true)&#xA;&#xA;class SomeTest &amp;lt; TLDR&#xA;  def test_truth&#xA;    assert true&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could run the test with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ruby test/some_test.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To maximize control and to avoid running code accidentally (and &lt;em&gt;unlike&lt;/em&gt; the &lt;code&gt;tldr&lt;/code&gt; CLI), running &lt;code&gt;at_exit!&lt;/code&gt; will not set default values to the &lt;code&gt;paths&lt;/code&gt;, &lt;code&gt;helper&lt;/code&gt;, &lt;code&gt;load_paths&lt;/code&gt;, and &lt;code&gt;prepend_paths&lt;/code&gt; config properties. You&#39;ll have to pass any values you want to set on a &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/value/config.rb&#34;&gt;Config object&lt;/a&gt; and pass it to &lt;code&gt;at_exit!&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To avoid running multiple suites accidentally, if &lt;code&gt;TLDR::Run.at_exit!&lt;/code&gt; is encountered multiple times, only the first hook will be registered. If the &lt;code&gt;tldr&lt;/code&gt; CLI is running and encounters a call to &lt;code&gt;at_exit!&lt;/code&gt;, it will be ignored.&lt;/p&gt; &#xA;&lt;h4&gt;Setting up the load path&lt;/h4&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;tldr&lt;/code&gt; CLI adds &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;lib&lt;/code&gt; directories to the load path for you, but when running TLDR from a Ruby script, it doesn&#39;t set those up for you.&lt;/p&gt; &#xA;&lt;p&gt;If you want to require code in &lt;code&gt;test/&lt;/code&gt; or &lt;code&gt;lib/&lt;/code&gt; without using &lt;code&gt;require_relative&lt;/code&gt;, you&#39;ll need to add those directories to the load path. You can do this programmatically by prepending the path to &lt;code&gt;$LOAD_PATH&lt;/code&gt;, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;$LOAD_PATH.unshift &#34;test&#34;&#xA;&#xA;require &#34;tldr&#34;&#xA;TLDR::Run.at_exit! TLDR::Config.new(no_emoji: true)&#xA;&#xA;require &#34;helper&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or by using Ruby&#39;s &lt;code&gt;-I&lt;/code&gt; flag to include it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ruby -Itest test/some_test.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Questions you might be asking&lt;/h2&gt; &#xA;&lt;p&gt;TLDR is very similar to Minitest in API, but different in enough ways that you probably have some questions.&lt;/p&gt; &#xA;&lt;h3&gt;Parallel-by-default is nice in theory but half my tests are failing. Wat?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read this before you add &lt;code&gt;--no-parallel&lt;/code&gt; because some tests are failing when you run &lt;code&gt;tldr&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The vast majority of test suites in the wild are not parallelized and the vast majority of &lt;em&gt;those&lt;/em&gt; will only parallelize by forking processes as opposed to using a thread pool. We wanted to encourage more people to save time (after all, you only get 1.8 seconds here) by making your test suite run as fast as it can, so your tests run in parallel threads by default.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re writing new code and tests with TLDR and dutifully running &lt;code&gt;tldr&lt;/code&gt; constantly for fast feedback, odds are that this will help you catch thread safety issues early—this is a good thing, because it gives you a chance to address them before they&#39;re too hard to fix! But maybe you&#39;re porting an existing test suite to TLDR and running in parallel for the first time, or maybe you need to test something that simply &lt;em&gt;can&#39;t&lt;/em&gt; be exercised in a thread-safe way. For those cases, TLDR&#39;s goal is to give you some tools to prevent you from giving up and adding &lt;code&gt;--no-parallel&lt;/code&gt; to your entire test suite and &lt;strong&gt;slowing everything down for the sake of a few tests&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;So, when you see a test that is failing when run in parallel with the rest of your suite, here is what we recommend doing, in priority order:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Figure out a way to redesign the test (or the code under test) to be thread-safe. Modern versions of Ruby provide a number of tools to make this easier than it used to be, and it may be as simple as making an instance variable thread-local&lt;/li&gt; &#xA; &lt;li&gt;If the problem is that a subset of your tests depend on the same resource, try using &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/parallel_controls.rb&#34;&gt;TLDR.run_these_together!&lt;/a&gt; class to group the tests together. This will ensure that those tests run in the same thread in sequence (here&#39;s a &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/tests/fixture/run_these_together.rb&#34;&gt;simple example&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;For tests that affect process-wide resources like setting the system clock or changing the process&#39;s working directory (i.e. &lt;code&gt;Dir.chdir&lt;/code&gt;), you can sequester them to run sequentially &lt;em&gt;after&lt;/em&gt; all parallel tests in your suite have run with &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/parallel_controls.rb&#34;&gt;TLDR.dont_run_these_in_parallel!&lt;/a&gt;, which takes the same arguments as &lt;code&gt;run_these_together!&lt;/code&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/tests/fixture/dont_run_these_in_parallel.rb&#34;&gt;example&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Give up and make the whole suite &lt;code&gt;--no-parallel&lt;/code&gt;. If you find that you need to resort to this, you might save some keystrokes by adding &lt;code&gt;parallel: false&lt;/code&gt; in a &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/#setting-defaults-in-tldryml&#34;&gt;.tldr.yml&lt;/a&gt; file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We have a couple other ideas of ways to incorporate non-thread-safe tests into your suite without slowing down the rest of your tests, so stay tuned!&lt;/p&gt; &#xA;&lt;h3&gt;How will I run all my tests in CI without the time bomb going off?&lt;/h3&gt; &#xA;&lt;p&gt;TLDR will run all your tests in CI without the time bomb going off. If &lt;code&gt;tldr&lt;/code&gt; is run in a non-interactive shell and a &lt;code&gt;CI&lt;/code&gt; environment variable is set (as it is on virtually every CI service), then the bomb will be defused.&lt;/p&gt; &#xA;&lt;h3&gt;What if I already have another &lt;code&gt;tldr&lt;/code&gt; executable on my path?&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s a &lt;a href=&#34;https://tldr.sh&#34;&gt;command-line utility named tldr&lt;/a&gt; that might conflict with this gem&#39;s binary in your PATH. If that&#39;s the case you could change your path, invoke &lt;code&gt;bundle exec tldr&lt;/code&gt;, run &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/#running-tldr-with-rake&#34;&gt;with Rake&lt;/a&gt;, or use the &lt;code&gt;tldt&lt;/code&gt; (&#34;too long; didn&#39;t test&#34;) executable alias that ships with this gem.&lt;/p&gt; &#xA;&lt;h3&gt;Is there a plugin system?&lt;/h3&gt; &#xA;&lt;p&gt;There is not.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the only pluggable aspect of TLDR are reporters, which can be set with the &lt;code&gt;--reporter&lt;/code&gt; command line option. It can be set to any fully-qualified class name that extends from &lt;a href=&#34;https://raw.githubusercontent.com/tendersearls/tldr/main/lib/tldr/reporters/base.rb&#34;&gt;TLDR::Reporters::Base&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;I know my tests are over 1.8s, how do I suppress the huge output?&lt;/h3&gt; &#xA;&lt;p&gt;Plenty of test suites are over 1.8s and having TLDR repeatedly print out the huge summary at the end of each test run can be distracting and make it harder to spot test failures. If you know your test suite is too slow, you can simply add the &lt;code&gt;--yes-i-know&lt;/code&gt; flag&lt;/p&gt; &#xA;&lt;h3&gt;What about mocking?&lt;/h3&gt; &#xA;&lt;p&gt;TLDR is laser-focused on running tests, so it doesn&#39;t provide a built-in mocking facility. Might we interest you in a refreshing &lt;a href=&#34;https://github.com/testdouble/mocktail&#34;&gt;mocktail&lt;/a&gt;, instead?&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to TLDR&lt;/h2&gt; &#xA;&lt;p&gt;If you want to submit PRs on this repo, please know that the code style is &lt;a href=&#34;https://mastodon.social/@searls/111137666157318482&#34;&gt;Kirkland-style Ruby&lt;/a&gt;, where method definitions have parentheses omitted but parentheses are generally expected for method invocations.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/fuzzmonkey&#34;&gt;George Sheppard&lt;/a&gt; for freeing up the &lt;a href=&#34;https://rubygems.org/gems/tldr&#34;&gt;tldr gem name&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>urbanadventurer/WhatWeb</title>
    <updated>2023-10-15T01:53:12Z</updated>
    <id>tag:github.com,2023-10-15:/urbanadventurer/WhatWeb</id>
    <link href="https://github.com/urbanadventurer/WhatWeb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next generation web scanner&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/urbanadventurer/whatweb/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv2-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/stable_release-0.5.5-blue.svg?sanitize=true&#34; alt=&#34;Stable Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/plugins-1824-brightgreen.svg?sanitize=true&#34; alt=&#34;WhatWeb Plugins&#34;&gt; &lt;a href=&#34;https://repology.org/project/whatweb/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/whatweb.svg?sanitize=true&#34; alt=&#34;Repositories&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://morningstarsecurity.com/wp-content/uploads/2019/02/WhatWeb-Logo-800px.png&#34; alt=&#34;logo&#34; title=&#34;WhatWeb Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WhatWeb - Next generation web scanner&lt;/h1&gt; &#xA;&lt;p&gt;Developed by Andrew Horton &lt;a href=&#34;https://github.com/urbanadventurer/&#34;&gt;urbanadventurer&lt;/a&gt; and Brendan Coles &lt;a href=&#34;https://github.com/bcoles/&#34;&gt;bcoles&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Latest Release: v0.5.5. January 16, 2021&lt;/p&gt; &#xA;&lt;p&gt;License: GPLv2&lt;/p&gt; &#xA;&lt;p&gt;This product is subject to the terms detailed in the license agreement. For more information about WhatWeb visit:&lt;/p&gt; &#xA;&lt;p&gt;Homepage: &lt;a href=&#34;https://morningstarsecurity.com/research/whatweb&#34;&gt;https://morningstarsecurity.com/research/whatweb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wiki: &lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/wiki/&#34;&gt;https://github.com/urbanadventurer/WhatWeb/wiki/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, comments or concerns regarding WhatWeb, please consult the documentation prior to contacting one of the developers. Your feedback is always welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;About WhatWeb&lt;/li&gt; &#xA; &lt;li&gt;Example Usage&lt;/li&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA; &lt;li&gt;Logging &amp;amp; Output&lt;/li&gt; &#xA; &lt;li&gt;Plugins&lt;/li&gt; &#xA; &lt;li&gt;Aggression&lt;/li&gt; &#xA; &lt;li&gt;Performance &amp;amp; Stability&lt;/li&gt; &#xA; &lt;li&gt;Optional Dependencies&lt;/li&gt; &#xA; &lt;li&gt;Writing Plugins&lt;/li&gt; &#xA; &lt;li&gt;Updates &amp;amp; Additional Information&lt;/li&gt; &#xA; &lt;li&gt;Release History&lt;/li&gt; &#xA; &lt;li&gt;Credits&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About WhatWeb&lt;/h2&gt; &#xA;&lt;p&gt;WhatWeb identifies websites. Its goal is to answer the question, &#34;What is that Website?&#34;. WhatWeb recognises web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices. WhatWeb has over 1800 plugins, each to recognise something different. WhatWeb also identifies version numbers, email addresses, account IDs, web framework modules, SQL errors, and more.&lt;/p&gt; &#xA;&lt;p&gt;WhatWeb can be stealthy and fast, or thorough but slow. WhatWeb supports an aggression level to control the trade off between speed and reliability. When you visit a website in your browser, the transaction includes many hints of what web technologies are powering that website. Sometimes a single webpage visit contains enough information to identify a website but when it does not, WhatWeb can interrogate the website further. The default level of aggression, called &#39;stealthy&#39;, is the fastest and requires only one HTTP request of a website. This is suitable for scanning public websites. More aggressive modes were developed for use in penetration tests.&lt;/p&gt; &#xA;&lt;p&gt;Most WhatWeb plugins are thorough and recognise a range of cues from subtle to obvious. For example, most WordPress websites can be identified by the meta HTML tag, e.g. &#39;&#xA; &lt;meta name=&#34;generator&#34; content=&#34;WordPress 2.6.5&#34;&gt;&#39;, but a minority of WordPress websites remove this identifying tag but this does not thwart WhatWeb. The WordPress WhatWeb plugin has over 15 tests, which include checking the favicon, default installation files, login pages, and checking for &#34;/wp-content/&#34; within relative links.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Over 1800 plugins&lt;/li&gt; &#xA; &lt;li&gt;Control the trade off between speed/stealth and reliability&lt;/li&gt; &#xA; &lt;li&gt;Performance tuning. Control how many websites to scan concurrently.&lt;/li&gt; &#xA; &lt;li&gt;Multiple log formats: Brief (greppable), Verbose (human readable), XML, JSON, MagicTree, RubyObject, MongoDB, ElasticSearch, SQL.&lt;/li&gt; &#xA; &lt;li&gt;Proxy support including TOR&lt;/li&gt; &#xA; &lt;li&gt;Custom HTTP headers&lt;/li&gt; &#xA; &lt;li&gt;Basic HTTP authentication&lt;/li&gt; &#xA; &lt;li&gt;Control over webpage redirection&lt;/li&gt; &#xA; &lt;li&gt;IP address ranges&lt;/li&gt; &#xA; &lt;li&gt;Fuzzy matching&lt;/li&gt; &#xA; &lt;li&gt;Result certainty awareness&lt;/li&gt; &#xA; &lt;li&gt;Custom plugins defined on the command line&lt;/li&gt; &#xA; &lt;li&gt;IDN (International Domain Name) support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;Using WhatWeb to scan reddit.com.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./whatweb reddit.com&#xA;http://reddit.com [301 Moved Permanently] Country[UNITED STATES][US], HTTPServer[snooserv], IP[151.101.65.140], RedirectLocation[https://www.reddit.com/], UncommonHeaders[retry-after,x-served-by,x-cache-hits,x-timer], Via-Proxy[1.1 varnish]&#xA;https://www.reddit.com/ [200 OK] Cookies[edgebucket,eu_cookie_v2,loid,rabt,rseor3,session_tracker,token], Country[UNITED STATES][US], Email[banner@2x.png,snoo-home@2x.png], Frame, HTML5, HTTPServer[snooserv], HttpOnly[token], IP[151.101.37.140], Open-Graph-Protocol[website], Script[text/javascript], Strict-Transport-Security[max-age=15552000; includeSubDomains; preload], Title[reddit: the front page of the internet], UncommonHeaders[fastly-restarts,x-served-by,x-cache-hits,x-timer], Via-Proxy[1.1 varnish], X-Frame-Options[SAMEORIGIN]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;.$$$     $.                                   .$$$     $.         &#xA;$$$$     $$. .$$$  $$$ .$$$$$$.  .$$$$$$$$$$. $$$$     $$. .$$$$$$$. .$$$$$$. &#xA;$ $$     $$$ $ $$  $$$ $ $$$$$$. $$$$$ $$$$$$ $ $$     $$$ $ $$   $$ $ $$$$$$.&#xA;$ `$     $$$ $ `$  $$$ $ `$  $$$ $$&#39; $ `$ `$$ $ `$     $$$ $ `$      $ `$  $$$&#39;&#xA;$. $     $$$ $. $$$$$$ $. $$$$$$ `$  $. $  :&#39; $. $     $$$ $. $$$$   $. $$$$$.&#xA;$::$  .  $$$ $::$  $$$ $::$  $$$     $::$     $::$  .  $$$ $::$      $::$  $$$$&#xA;$;;$ $$$ $$$ $;;$  $$$ $;;$  $$$     $;;$     $;;$ $$$ $$$ $;;$      $;;$  $$$$&#xA;$$$$$$ $$$$$ $$$$  $$$ $$$$  $$$     $$$$     $$$$$$ $$$$$ $$$$$$$$$ $$$$$$$$$&#39;&#xA;&#xA;WhatWeb - Next generation web scanner version 0.5.5.&#xA;Developed by Andrew Horton (urbanadventurer) and Brendan Coles (bcoles)&#xA;Homepage: https://morningstarsecurity.com/research/whatweb&#xA;&#xA;Usage: whatweb [options] &amp;lt;URLs&amp;gt;&#xA;&#xA;TARGET SELECTION:&#xA;  &amp;lt;TARGETs&amp;gt;             Enter URLs, hostnames, IP addresses, filenames or&#xA;                        IP ranges in CIDR, x.x.x-x, or x.x.x.x-x.x.x.x&#xA;                        format.&#xA;  --input-file=FILE, -i Read targets from a file. You can pipe&#xA;                        hostnames or URLs directly with -i /dev/stdin.&#xA;&#xA;TARGET MODIFICATION:&#xA;  --url-prefix          Add a prefix to target URLs.&#xA;  --url-suffix          Add a suffix to target URLs.&#xA;  --url-pattern         Insert the targets into a URL. Requires --input-file,&#xA;                        eg. www.example.com/%insert%/robots.txt &#xA;&#xA;AGGRESSION:&#xA;  The aggression level controls the trade-off between speed/stealth and&#xA;  reliability.&#xA;  --aggression, -a=LEVEL Set the aggression level. Default: 1.&#xA;  Aggression levels are:&#xA;  1. Stealthy   Makes one HTTP request per target. Also follows redirects.&#xA;  3. Aggressive If a level 1 plugin is matched, additional requests will be&#xA;      made.&#xA;  4. Heavy      Makes a lot of HTTP requests per target. Aggressive tests from&#xA;      all plugins are used for all URLs.&#xA;&#xA;HTTP OPTIONS:&#xA;  --user-agent, -U=AGENT Identify as AGENT instead of WhatWeb/0.5.5.&#xA;  --header, -H          Add an HTTP header. eg &#34;Foo:Bar&#34;. Specifying a default&#xA;                        header will replace it. Specifying an empty value, eg.&#xA;                        &#34;User-Agent:&#34; will remove the header.&#xA;  --follow-redirect=WHEN Control when to follow redirects. WHEN may be `never&#39;,&#xA;                        `http-only&#39;, `meta-only&#39;, `same-site&#39;, or `always&#39;.&#xA;                        Default: always.&#xA;  --max-redirects=NUM   Maximum number of contiguous redirects. Default: 10.&#xA;&#xA;AUTHENTICATION:&#xA;  --user, -u=&amp;lt;user:password&amp;gt; HTTP basic authentication.&#xA;  --cookie, -c=COOKIES  Provide cookies, e.g. &#39;name=value; name2=value2&#39;.&#xA;  --cookiejar=FILE      Read cookies from a file.&#xA;&#xA;PROXY:&#xA;  --proxy           &amp;lt;hostname[:port]&amp;gt; Set proxy hostname and port.&#xA;                    Default: 8080.&#xA;  --proxy-user      &amp;lt;username:password&amp;gt; Set proxy user and password.&#xA;&#xA;PLUGINS:&#xA;  --list-plugins, -l            List all plugins.&#xA;  --info-plugins, -I=[SEARCH]   List all plugins with detailed information.&#xA;                                Optionally search with keywords in a comma&#xA;                                delimited list.&#xA;  --search-plugins=STRING       Search plugins for a keyword.&#xA;  --plugins, -p=LIST  Select plugins. LIST is a comma delimited set of &#xA;                      selected plugins. Default is all.&#xA;                      Each element can be a directory, file or plugin name and&#xA;                      can optionally have a modifier, eg. + or -&#xA;                      Examples: +/tmp/moo.rb,+/tmp/foo.rb&#xA;                      title,md5,+./plugins-disabled/&#xA;                      ./plugins-disabled,-md5&#xA;                      -p + is a shortcut for -p +plugins-disabled.&#xA;&#xA;  --grep, -g=STRING|REGEXP      Search for STRING or a Regular Expression. Shows &#xA;                                only the results that match.&#xA;                                Examples: --grep &#34;hello&#34;&#xA;                                --grep &#34;/he[l]*o/&#34;&#xA;  --custom-plugin=DEFINITION\tDefine a custom plugin named Custom-Plugin,&#xA;  --custom-plugin=DEFINITION  Define a custom plugin named Custom-Plugin,&#xA;                        Examples: &#34;:text=&amp;gt;&#39;powered by abc&#39;&#34;&#xA;                        &#34;:version=&amp;gt;/powered[ ]?by ab[0-9]/&#34;&#xA;                        &#34;:ghdb=&amp;gt;&#39;intitle:abc \&#34;powered by abc\&#34;&#39;&#34;&#xA;                        &#34;:md5=&amp;gt;&#39;8666257030b94d3bdb46e05945f60b42&#39;&#34;&#xA;  --dorks=PLUGIN        List Google dorks for the selected plugin.&#xA;&#xA;OUTPUT:&#xA;  --verbose, -v         Verbose output includes plugin descriptions. Use twice&#xA;                        for debugging.&#xA;  --colour,--color=WHEN control whether colour is used. WHEN may be `never&#39;,&#xA;                        `always&#39;, or `auto&#39;.&#xA;  --quiet, -q           Do not display brief logging to STDOUT.&#xA;  --no-errors           Suppress error messages.&#xA;&#xA;LOGGING:&#xA;  --log-brief=FILE        Log brief, one-line output.&#xA;  --log-verbose=FILE      Log verbose output.&#xA;  --log-errors=FILE       Log errors.&#xA;  --log-xml=FILE          Log XML format.&#xA;  --log-json=FILE         Log JSON format.&#xA;  --log-sql=FILE          Log SQL INSERT statements.&#xA;  --log-sql-create=FILE   Create SQL database tables.&#xA;  --log-json-verbose=FILE Log JSON Verbose format.&#xA;  --log-magictree=FILE    Log MagicTree XML format.&#xA;  --log-object=FILE       Log Ruby object inspection format.&#xA;  --log-mongo-database    Name of the MongoDB database.&#xA;  --log-mongo-collection  Name of the MongoDB collection. Default: whatweb.&#xA;  --log-mongo-host        MongoDB hostname or IP address. Default: 0.0.0.0.&#xA;  --log-mongo-username    MongoDB username. Default: nil.&#xA;  --log-mongo-password    MongoDB password. Default: nil.  &#xA;  --log-elastic-index     Name of the index to store results. Default: whatweb &#xA;  --log-elastic-host      Host:port of the elastic http interface. Default: 127.0.0.1:9200&#xA;  &#xA;PERFORMANCE &amp;amp; STABILITY:&#xA;  --max-threads, -t       Number of simultaneous threads. Default: 25.&#xA;  --open-timeout          Time in seconds. Default: 15.&#xA;  --read-timeout          Time in seconds. Default: 30.&#xA;  --wait=SECONDS          Wait SECONDS between connections.&#xA;                          This is useful when using a single thread.&#xA;&#xA;HELP &amp;amp; MISCELLANEOUS:&#xA;  --short-help            Short usage help.&#xA;  --help, -h              Complete usage help.&#xA;  --debug                 Raise errors in plugins.&#xA;  --version               Display version information. (WhatWeb 0.5.5).&#xA;&#xA;EXAMPLE USAGE:&#xA;* Scan example.com.&#xA;  ./whatweb example.com&#xA;* Scan reddit.com slashdot.org with verbose plugin descriptions.&#xA;  ./whatweb -v reddit.com slashdot.org&#xA;* An aggressive scan of wired.com detects the exact version of WordPress.&#xA;  ./whatweb -a 3 www.wired.com&#xA;* Scan the local network quickly and suppress errors.&#xA;  whatweb --no-errors 192.168.0.0/24&#xA;* Scan the local network for https websites.&#xA;  whatweb --no-errors --url-prefix https:// 192.168.0.0/24&#xA;* Scan for crossdomain policies in the Alexa Top 1000.&#xA;  ./whatweb -i plugin-development/alexa-top-100.txt \&#xA;  --url-suffix /crossdomain.xml -p crossdomain_xml&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logging &amp;amp; Output&lt;/h2&gt; &#xA;&lt;p&gt;The following types of logging are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;--log-brief=FILE Brief, one-line, greppable format&lt;/li&gt; &#xA; &lt;li&gt;--log-verbose=FILE Verbose&lt;/li&gt; &#xA; &lt;li&gt;--log-xml=FILE XML format. XSL stylesheet is provided&lt;/li&gt; &#xA; &lt;li&gt;--log-json=FILE JSON format&lt;/li&gt; &#xA; &lt;li&gt;--log-json-verbose=FILE JSON verbose format&lt;/li&gt; &#xA; &lt;li&gt;--log-magictree=FILE MagicTree XML format&lt;/li&gt; &#xA; &lt;li&gt;--log-object=FILE Ruby object inspection format&lt;/li&gt; &#xA; &lt;li&gt;--log-mongo-database Name of the MongoDB database&lt;/li&gt; &#xA; &lt;li&gt;--log-mongo-collection Name of the MongoDB collection. Default: whatweb&lt;/li&gt; &#xA; &lt;li&gt;--log-mongo-host MongoDB hostname or IP address. Default: 0.0.0.0&lt;/li&gt; &#xA; &lt;li&gt;--log-mongo-username MongoDB username. Default: nil&lt;/li&gt; &#xA; &lt;li&gt;--log-mongo-password MongoDB password. Default: nil&lt;/li&gt; &#xA; &lt;li&gt;--log-elastic-index Name of the index to store results. Default: whatweb&lt;/li&gt; &#xA; &lt;li&gt;--log-elastic-host Host:port of the elastic http interface. Default: 127.0.0.1:9200&lt;/li&gt; &#xA; &lt;li&gt;--log-errors=FILE Log errors. This is usually printed to the screen in red.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can output to multiple logs simultaneously by specifying multiple command line logging options. Advanced users who want SQL output should read the source code to see unsupported features.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Matches are made with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Text strings (case sensitive)&lt;/li&gt; &#xA; &lt;li&gt;Regular expressions&lt;/li&gt; &#xA; &lt;li&gt;Google Hack Database queries (limited set of keywords)&lt;/li&gt; &#xA; &lt;li&gt;MD5 hashes&lt;/li&gt; &#xA; &lt;li&gt;URL recognition&lt;/li&gt; &#xA; &lt;li&gt;HTML tag patterns&lt;/li&gt; &#xA; &lt;li&gt;Custom ruby code for passive and aggressive operations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To list the plugins supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./whatweb -l&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;WhatWeb Plugin List&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Plugin Name - Description&#xA;--------------------------------------------------------------------------------&#xA;1024-CMS - 1024 is one of a few CMS&#39;s leading the way with the implementation...&#xA;360-Web-Manager - 360-Web-Manager&#xA;3COM-NBX - 3COM NBX phone system. The NBX NetSet utility is a web interface i...&#xA;3dcart - 3dcart - The 3dcart Shopping Cart Software is a complete ecommerce s...&#xA;4D - 4D web application deployment server&#xA;4images - 4images is a powerful web-based image gallery management system. Fe...&#xA;... (truncated)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Search Plugins&lt;/h3&gt; &#xA;&lt;p&gt;To view more detail about a plugin or search plugins for a keyword:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./whatweb -I phpBB&#xA;&#xA;WhatWeb Detailed Plugin List&#xA;Searching for phpBB&#xA;================================================================================&#xA;Plugin:         phpBB&#xA;--------------------------------------------------------------------------------&#xA;Description:    phpBB is a free forum &#xA;Website:        http://phpbb.org/&#xA;&#xA;Author:         Andrew Horton&#xA;Version:        0.3&#xA;&#xA;Features:       [Yes]  Pattern Matching (7)&#xA;                [Yes]  Version detection from pattern matching&#xA;                [Yes]  Function for passive matches&#xA;                [Yes]  Function for aggressive matches&#xA;                [Yes]  Google Dorks (1)&#xA;&#xA;Google Dorks:&#xA;[1] &#34;Powered by phpBB&#34;&#xA;================================================================================&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Plugin Selection&lt;/h3&gt; &#xA;&lt;p&gt;All plugins are loaded by default.&lt;/p&gt; &#xA;&lt;p&gt;Plugins can be selected by directories, files or plugin names as a comma delimited list with the -p or --plugin command line option.&lt;/p&gt; &#xA;&lt;p&gt;Each list item may have a modifier: + adds to the full set, - removes from the full set and no modifier overrides the defaults.&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;--plugins +plugins-disabled,-foobar&lt;/li&gt; &#xA; &lt;li&gt;--plugins +/tmp/moo.rb&lt;/li&gt; &#xA; &lt;li&gt;--plugins foobar (only select foobar)&lt;/li&gt; &#xA; &lt;li&gt;-p title,md5,+./plugins-disabled/&lt;/li&gt; &#xA; &lt;li&gt;-p ./plugins-disabled,-md5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The --dorks &#xA; &lt;plugin name&gt;&#xA;   command line option returns google dorks for the selected plugin. For example, --dorks wordpress returns &#34;is proudly powered by WordPress&#34;&#xA; &lt;/plugin&gt;&lt;/p&gt; &#xA;&lt;p&gt;The --grep, -g command line option searches the target page for the selected string and returns a match in a plugin called Grep if it is found.&lt;/p&gt; &#xA;&lt;h2&gt;Aggression&lt;/h2&gt; &#xA;&lt;p&gt;WhatWeb features several levels of aggression. By default the aggression level is set to 1 (stealthy) which sends a single HTTP GET request and also follows redirects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--aggression, -a&#xA;&#xA;  1. Stealthy Makes one HTTP request per target. Also follows redirects.&#xA;    2. Unused&#xA;    3. Aggressive Can make a handful of HTTP requests per target. This triggers&#xA;        aggressive plugins for targets only when those plugins are&#xA;        identified with a level 1 request first.&#xA;  4. Heavy  Makes a lot of HTTP requests per target. Aggressive tests from&#xA;        all plugins are used for all URLs.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Level 3 aggressive plugins will guess more URLs and perform actions that are potentially unsuitable without permission. WhatWeb currently does not support any intrusion/exploit level tests in plugins.&lt;/p&gt; &#xA;&lt;h3&gt;An example of the different results between level 1 and level 3:&lt;/h3&gt; &#xA;&lt;p&gt;A level 1, stealthy scan identifies that smartor.is-root.com/forum/ uses phpBB version 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./whatweb smartor.is-root.com/forum/&#xA;http://smartor.is-root.com/forum/ [200] PasswordField[password], HTTPServer[Apache/2.2.15], PoweredBy[phpBB], Apache[2.2.15], IP[88.198.177.36], phpBB[2], PHP[5.2.13], X-Powered-By[PHP/5.2.13], Cookies[phpbb2mysql_data,phpbb2mysql_sid], Title[Smartors Mods Forums - Reloaded], Country[GERMANY][DE]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A level 3, aggressive scan triggers additional tests in the phpBB plugin which identifies that the website uses phpBB version 2.0.20 or higher:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./whatweb -p plugins/phpbb.rb -a 3 smartor.is-root.com/forum/&#xA;http://smartor.is-root.com/forum/ [200] phpBB[2,&amp;gt;2.0.20]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note the use of the -p argument to select only the phpBB plugin. It is advisable, but not mandatory, to select a specific plugin when attempting to fingerprint software versions in aggressive mode. This approach is far more stealthy as it will limit the number of requests.&lt;/p&gt; &#xA;&lt;p&gt;WhatWeb has no caching so if you use aggressive plugins on redirecting URLs you may fetch the same files multiple times.&lt;/p&gt; &#xA;&lt;h2&gt;Performance &amp;amp; Stability&lt;/h2&gt; &#xA;&lt;p&gt;WhatWeb features several options to increase performance and stability.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;--max-threads, -t Number of simultaneous threads. Default: 25.&lt;/li&gt; &#xA; &lt;li&gt;--open-timeout Time in seconds. Default: 15&lt;/li&gt; &#xA; &lt;li&gt;--read-timeout Time in seconds. Default: 30&lt;/li&gt; &#xA; &lt;li&gt;--wait=SECONDS Wait SECONDS between connections This is useful when using a single thread.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The --wait and --max-threads commands can be used to assist in IDS evasion.&lt;/p&gt; &#xA;&lt;p&gt;Changing the user-agent using the -U or --user-agent command line option will avoid the Snort IDS rule for WhatWeb.&lt;/p&gt; &#xA;&lt;p&gt;If you are scanning ranges of IP addresses, it is much more efficient to use a port scanner like massscan to discover which have port 80 open before scanning with WhatWeb.&lt;/p&gt; &#xA;&lt;p&gt;Character set detection, with the Charset plugin dramatically decreases performance by requiring more CPU. This is required by JSON and MongoDB logging.&lt;/p&gt; &#xA;&lt;h2&gt;Optional Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;To enable MongoDB logging install the mongo gem. gem install mongo&lt;/p&gt; &#xA;&lt;p&gt;To enable character set detection and MongoDB logging install the rchardet gem. gem install rchardet cp plugins-disabled/charset.rb my-plugins/&lt;/p&gt; &#xA;&lt;h2&gt;Writing Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Plugins are easy to write. Start by going through the plugin tutorials in the &lt;em&gt;my-plugins/&lt;/em&gt; folder.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/tree/master/my-plugins&#34;&gt;Plugin Tutorials&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;An overview of the plugin tutorials is here. &lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/tree/master/plugin-development/plugin-tutorials.txt&#34;&gt;plugin-tutorials.txt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After progressing through the tutorials read through the Development section of the &lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/wiki/&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/wiki/Sources-for-Plugin-Writing&#34;&gt;Sources for Plugin Writing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/wiki/How-to-develop-WhatWeb-plugins&#34;&gt;How to Develop WhatWeb Plugins (not up to date)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updates &amp;amp; Additional Information&lt;/h2&gt; &#xA;&lt;p&gt;The WhatWeb development build features regular updates.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check the development branches for unreleased updates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Browse the wiki for more documentation and advanced usage techniques.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wiki: &lt;a href=&#34;https://github.com/urbanadventurer/WhatWeb/wiki/&#34;&gt;https://github.com/urbanadventurer/WhatWeb/wiki/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release History&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Version 0.5.5 Released January 16th, 2021&lt;/li&gt; &#xA; &lt;li&gt;Version 0.5.4 Released December 14th, 2020&lt;/li&gt; &#xA; &lt;li&gt;Version 0.5.3 Released October 1st, 2020&lt;/li&gt; &#xA; &lt;li&gt;Version 0.5.2 Released June 9th, 2020&lt;/li&gt; &#xA; &lt;li&gt;Version 0.5.1 Released Feburary 25th, 2020&lt;/li&gt; &#xA; &lt;li&gt;Version 0.5.0 Released June 9th, 2019&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.9 Released November 23rd, 2017&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.8-dev (Continuous release from 2012 to 2017)&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.7 Released April 5th, 2011&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.6 Released March 25th, 2011&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.5 Released August 17th, 2010&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.4 Released June 29th, 2010&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.3 Released May 24th, 2010&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.2 Released April 30th, 2010&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4.1 Released April 28th, 2010&lt;/li&gt; &#xA; &lt;li&gt;Version 0.4 Released March 14th, 2010&lt;/li&gt; &#xA; &lt;li&gt;Version 0.3 Released at Kiwicon III (kiwicon.org), November 2nd, 2009&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Developers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Andrew Horton (@urbanadventurer)&lt;/li&gt; &#xA; &lt;li&gt;Brendan Coles (@bcoles)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to the following people who have contributed to WhatWeb.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Emilio Casbas&lt;/li&gt; &#xA; &lt;li&gt;Louis Nyffenegger&lt;/li&gt; &#xA; &lt;li&gt;Patrik Wallström (@pawal)&lt;/li&gt; &#xA; &lt;li&gt;Caleb Anderson (@dirtyfilthy)&lt;/li&gt; &#xA; &lt;li&gt;Tonmoy Saikia&lt;/li&gt; &#xA; &lt;li&gt;Aung Khant (@yehgdotnet)&lt;/li&gt; &#xA; &lt;li&gt;Erik Inge Bolsø&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:nk@dsigned.gr&#34;&gt;nk@dsigned.gr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Steve Milner (@ashcrow)&lt;/li&gt; &#xA; &lt;li&gt;Michal Ambroz&lt;/li&gt; &#xA; &lt;li&gt;Gremwell&lt;/li&gt; &#xA; &lt;li&gt;Sagar Prakash Junnarkar (@sagarjunnarkar)&lt;/li&gt; &#xA; &lt;li&gt;GertBerger&lt;/li&gt; &#xA; &lt;li&gt;Quintin Poirier&lt;/li&gt; &#xA; &lt;li&gt;Eric Sesterhenn&lt;/li&gt; &#xA; &lt;li&gt;dengjw (@jawa)&lt;/li&gt; &#xA; &lt;li&gt;Pedro Worcel (@droop)&lt;/li&gt; &#xA; &lt;li&gt;Matthieu Keller (@maggick)&lt;/li&gt; &#xA; &lt;li&gt;Peter (2pvdl)&lt;/li&gt; &#xA; &lt;li&gt;Napz (@RootCon)&lt;/li&gt; &#xA; &lt;li&gt;@nilx042&lt;/li&gt; &#xA; &lt;li&gt;Fabian Affolter (@fabaff)&lt;/li&gt; &#xA; &lt;li&gt;Andrew Silvernail (@buff3r)&lt;/li&gt; &#xA; &lt;li&gt;Andre Ricardo (@andrericardo)&lt;/li&gt; &#xA; &lt;li&gt;nikosk&lt;/li&gt; &#xA; &lt;li&gt;Patrick Thomas (@coffeetocode)&lt;/li&gt; &#xA; &lt;li&gt;Guillaume Delcaour (@guikcd)&lt;/li&gt; &#xA; &lt;li&gt;Sean (@wiifm69)&lt;/li&gt; &#xA; &lt;li&gt;Matthieu Keller (@maggick)&lt;/li&gt; &#xA; &lt;li&gt;Raul (@raurodse)&lt;/li&gt; &#xA; &lt;li&gt;Andrew Petro (@apetro)&lt;/li&gt; &#xA; &lt;li&gt;Artem Taranyuk (@610)&lt;/li&gt; &#xA; &lt;li&gt;Matti Paksula (@matti)&lt;/li&gt; &#xA; &lt;li&gt;Tim Smith (@tas50)&lt;/li&gt; &#xA; &lt;li&gt;Sarthak Munshi (@saru95)&lt;/li&gt; &#xA; &lt;li&gt;@rdubourguais&lt;/li&gt; &#xA; &lt;li&gt;@SlivTaMere&lt;/li&gt; &#xA; &lt;li&gt;@Code0x58&lt;/li&gt; &#xA; &lt;li&gt;@iGeek098&lt;/li&gt; &#xA; &lt;li&gt;@andreas-becker&lt;/li&gt; &#xA; &lt;li&gt;@csalazar&lt;/li&gt; &#xA; &lt;li&gt;@golewski&lt;/li&gt; &#xA; &lt;li&gt;@Allactaga&lt;/li&gt; &#xA; &lt;li&gt;@lins05&lt;/li&gt; &#xA; &lt;li&gt;@eliasdorneles&lt;/li&gt; &#xA; &lt;li&gt;@sigit&lt;/li&gt; &#xA; &lt;li&gt;dewanto&lt;/li&gt; &#xA; &lt;li&gt;@elcodigok&lt;/li&gt; &#xA; &lt;li&gt;@SlivTaMere&lt;/li&gt; &#xA; &lt;li&gt;@anozoozian&lt;/li&gt; &#xA; &lt;li&gt;Bhavin Senjaliya (@bhavin1223)&lt;/li&gt; &#xA; &lt;li&gt;Janosch Maier (@Phylu)&lt;/li&gt; &#xA; &lt;li&gt;@rmaksimov&lt;/li&gt; &#xA; &lt;li&gt;Naglis Jonaitis (@naglis)&lt;/li&gt; &#xA; &lt;li&gt;Igor Rzegocki (@ajgon)&lt;/li&gt; &#xA; &lt;li&gt;Melvil Guillaume (@mguillau42)&lt;/li&gt; &#xA; &lt;li&gt;@LrsK&lt;/li&gt; &#xA; &lt;li&gt;Janosch Maier (@phylu)&lt;/li&gt; &#xA; &lt;li&gt;@abenson&lt;/li&gt; &#xA; &lt;li&gt;@blshkv&lt;/li&gt; &#xA; &lt;li&gt;Weidsom Nascimento (@weidsom)&lt;/li&gt; &#xA; &lt;li&gt;Marcelo Gimenes @cgimenes&lt;/li&gt; &#xA; &lt;li&gt;@xambroz&lt;/li&gt; &#xA; &lt;li&gt;Baptiste Fontaine (@bfontaine)&lt;/li&gt; &#xA; &lt;li&gt;@juananpe&lt;/li&gt; &#xA; &lt;li&gt;@definity&lt;/li&gt; &#xA; &lt;li&gt;@huntertl&lt;/li&gt; &#xA; &lt;li&gt;Max Davitt (@themaxdavitt)&lt;/li&gt; &#xA; &lt;li&gt;Gregory Boddin (@gboddin)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is difficult to keep track of all the people who have contributed to WhatWeb. If your name is missing then please let me know.&lt;/p&gt;</summary>
  </entry>
</feed>