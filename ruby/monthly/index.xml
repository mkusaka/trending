<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T02:27:54Z</updated>
  <subtitle>Monthly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheOdinProject/custom_enumerable_project</title>
    <updated>2023-12-01T02:27:54Z</updated>
    <id>tag:github.com,2023-12-01:/TheOdinProject/custom_enumerable_project</id>
    <link href="https://github.com/TheOdinProject/custom_enumerable_project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Custom Enumerable Project&lt;/h1&gt; &#xA;&lt;p&gt;This repository complements the &lt;a href=&#34;https://www.theodinproject.com/lessons/ruby-custom-enumerables&#34;&gt;Custom Enumerables Project&lt;/a&gt; in the Ruby Course for The Odin Project. The goal of this project is to reimplement common methods used frequently through the enumerables module with objects like arrays and hashes. This project will also familiarize you with how to work with blocks and procs. Some starter code and specs are provided to validate the correctness of your solutions.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First, clone this repository with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:TheOdinProject/custom_enumerable_project.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, navigate into the folder through your command line with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd custom_enumerable_project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and install the dependencies using the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You will add new methods to the &lt;code&gt;Enumerable&lt;/code&gt; module in &lt;code&gt;lib/my_enumerables.rb&lt;/code&gt;. Before you implement a method, go to the corresponding spec file and watch the test fail by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle exec rspec &amp;lt;spec_file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the associated spec file in the &lt;a href=&#34;https://raw.githubusercontent.com/TheOdinProject/custom_enumerable_project/main/#methods&#34;&gt;methods section&lt;/a&gt;. Then, add the method to the enumerable module. Run the tests again using the same command until they pass.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;As an example, before you start implementing the &lt;code&gt;my_each&lt;/code&gt; method, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle exec rspec spec/my_each_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to see that the test fails as expected.&lt;/p&gt; &#xA;&lt;p&gt;Once you implement it, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;# lib/my_enumerables.rb&#xA;&#xA;class Array&#xA;  def my_each&#xA;    # Complete code&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;run the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle exec rspec spec/my_each_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;again to see if your code is correct or not.&lt;/p&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;p&gt;The following table has the methods you will need to implement along with their associated specs, as outlined in the project instructions. The methods in the Enumerable module only need to work with Arrays, but you can challenge yourself and try to make them work for Hashes as well.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Spec File&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Array#my_each&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_each_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;You will define my_each on the Array class in &lt;code&gt;lib/my_enumerables.rb&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_each_with_index&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_each_with_index_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_select&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_select_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_all?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_all_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_any?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_any_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_none?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_none_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_count&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_count_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_map&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_map_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enumerable#my_inject&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;spec/my_inject_spec.rb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>Homebrew/homebrew-cask-fonts</title>
    <updated>2023-12-01T02:27:54Z</updated>
    <id>tag:github.com,2023-12-01:/Homebrew/homebrew-cask-fonts</id>
    <link href="https://github.com/Homebrew/homebrew-cask-fonts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üñã Casks of Ôº¶üÖæùìùùêìùöÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;homebrew-cask-fonts&lt;/h1&gt; &#xA;&lt;p&gt;Here is where you can find or submit font Casks for the &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask&#34;&gt;Homebrew Cask&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h2&gt;Let‚Äôs try it!&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew tap homebrew/cask-fonts         # You only need to do this once!&#xA;$ brew install font-inconsolata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Submitting a Cask to this repository&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask-fonts/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Font Licenses&lt;/h2&gt; &#xA;&lt;p&gt;homebrew-cask-fonts will only accept fonts which are freely-distributable. However, even freely-distributable fonts may have limitations (for instance, if you use them in a commercial enterprise). It is the responsibility of the user to know and respect the license of each font.&lt;/p&gt; &#xA;&lt;h2&gt;homebrew-cask-fonts License&lt;/h2&gt; &#xA;&lt;p&gt;Code is under the &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask-fonts/raw/master/LICENSE&#34;&gt;BSD 2 Clause (NetBSD) license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruby/ruby</title>
    <updated>2023-12-01T02:27:54Z</updated>
    <id>tag:github.com,2023-12-01:/ruby/ruby</id>
    <link href="https://github.com/ruby/ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Ruby Programming Language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MinGW%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MinGW/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MinGW&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22RJIT%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/RJIT/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: RJIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Ubuntu%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Windows%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Windows/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/ruby/ruby/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0sy8rrxut4o0k960/branch/master?svg=true&#34; alt=&#34;AppVeyor status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/ruby/ruby&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/ruby/ruby.svg?branch=master&#34; alt=&#34;Travis Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Ruby?&lt;/h1&gt; &#xA;&lt;p&gt;Ruby is an interpreted object-oriented programming language often used for web development. It also offers many scripting features to process plain text and serialized files, or manage system tasks. It is simple, straightforward, and extensible.&lt;/p&gt; &#xA;&lt;h2&gt;Features of Ruby&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Normal&lt;/strong&gt; Object-oriented Features (e.g. class, method calls)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; Object-oriented Features (e.g. mix-in, singleton-method)&lt;/li&gt; &#xA; &lt;li&gt;Operator Overloading&lt;/li&gt; &#xA; &lt;li&gt;Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Iterators and Closures&lt;/li&gt; &#xA; &lt;li&gt;Garbage Collection&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Loading of Object Files (on some architectures)&lt;/li&gt; &#xA; &lt;li&gt;Highly Portable (works on many Unix-like/POSIX compatible platforms as well as Windows, macOS, etc.) cf. &lt;a href=&#34;https://docs.ruby-lang.org/en/master/maintainers_md.html#label-Platform+Maintainers&#34;&gt;https://docs.ruby-lang.org/en/master/maintainers_md.html#label-Platform+Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to get Ruby&lt;/h2&gt; &#xA;&lt;p&gt;For a complete list of ways to install Ruby, including using third-party tools like rvm, see:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/downloads/&#34;&gt;https://www.ruby-lang.org/en/downloads/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can download release packages and the snapshot of the repository. If you want to download whole versions of Ruby, please visit &lt;a href=&#34;https://www.ruby-lang.org/en/downloads/releases/&#34;&gt;https://www.ruby-lang.org/en/downloads/releases/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Download with Git&lt;/h3&gt; &#xA;&lt;p&gt;The mirror of the Ruby source tree can be checked out with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some other branches under development. Try the following command to see the list of branches:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git ls-remote https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also want to use &lt;a href=&#34;https://git.ruby-lang.org/ruby.git&#34;&gt;https://git.ruby-lang.org/ruby.git&lt;/a&gt; (actual master of Ruby source) if you are a committer.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.ruby-lang.org/en/master/contributing/building_ruby_md.html&#34;&gt;Building Ruby&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ruby home page&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/en/master/index.html&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/ja/master/index.html&#34;&gt;Japanese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mailing list&lt;/h2&gt; &#xA;&lt;p&gt;There is a mailing list to discuss Ruby. To subscribe to this list, please send the following phrase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;join&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in the mail subject (not body) to the address &lt;a href=&#34;mailto:ruby-talk-request@ml.ruby-lang.org?subject=join&#34;&gt;ruby-talk-request@ml.ruby-lang.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copying&lt;/h2&gt; &#xA;&lt;p&gt;See the file &lt;a href=&#34;rdoc-ref:COPYING&#34;&gt;COPYING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Questions about the Ruby language can be asked on the &lt;a href=&#34;https://www.ruby-lang.org/en/community/mailing-lists&#34;&gt;Ruby-Talk&lt;/a&gt; mailing list or on websites like &lt;a href=&#34;https://stackoverflow.com&#34;&gt;https://stackoverflow.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bugs should be reported at &lt;a href=&#34;https://bugs.ruby-lang.org&#34;&gt;https://bugs.ruby-lang.org&lt;/a&gt;. Read &lt;a href=&#34;https://docs.ruby-lang.org/en/master/contributing/reporting_issues_md.html&#34;&gt;&#34;Reporting Issues&#34;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.ruby-lang.org/en/master/contributing_md.html&#34;&gt;&#34;Contributing to Ruby&#34;&lt;/a&gt;, which includes setup and build instructions.&lt;/p&gt; &#xA;&lt;h2&gt;The Author&lt;/h2&gt; &#xA;&lt;p&gt;Ruby was originally designed and developed by Yukihiro Matsumoto (Matz) in 1995.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:matz@ruby-lang.org&#34;&gt;matz@ruby-lang.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>