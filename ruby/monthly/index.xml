<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-01T01:51:31Z</updated>
  <subtitle>Monthly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rack/rack</title>
    <updated>2025-06-01T01:51:31Z</updated>
    <id>tag:github.com,2025-06-01:/rack/rack</id>
    <link href="https://github.com/rack/rack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modular Ruby web server interface.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rack/rack/main/contrib/logo.webp&#34; alt=&#34;Rack&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Rack provides a minimal, modular, and adaptable interface for developing web applications in Ruby. By wrapping HTTP requests and responses in the simplest way possible, it unifies and distills the bridge between web servers, web frameworks, and web application into a single method call.&lt;/p&gt; &#xA;&lt;p&gt;The exact details of this are described in the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/SPEC.rdoc&#34;&gt;Rack Specification&lt;/a&gt;, which all Rack applications should conform to. Browse the &lt;a href=&#34;https://rack.github.io/rack/&#34;&gt;Documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Version support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.1.x&lt;/td&gt; &#xA;   &lt;td&gt;Bug fixes and security patches.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0.x&lt;/td&gt; &#xA;   &lt;td&gt;Security patches only.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.2.x&lt;/td&gt; &#xA;   &lt;td&gt;Security patches only.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;lt;= 2.1.x&lt;/td&gt; &#xA;   &lt;td&gt;End of support.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/SECURITY.md&#34;&gt;Security Policy&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Rack 3.1&lt;/h3&gt; &#xA;&lt;p&gt;This is the latest version of Rack. It contains bug fixes and security patches. Please check the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/CHANGELOG.md&#34;&gt;Change Log&lt;/a&gt; for detailed information on specific changes.&lt;/p&gt; &#xA;&lt;h3&gt;Rack 3.0&lt;/h3&gt; &#xA;&lt;p&gt;This version of rack contains significant changes which are detailed in the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/UPGRADE-GUIDE.md&#34;&gt;Upgrade Guide&lt;/a&gt;. It is recommended to upgrade to Rack 3 as soon as possible to receive the latest features and security patches.&lt;/p&gt; &#xA;&lt;h3&gt;Rack 2.2&lt;/h3&gt; &#xA;&lt;p&gt;This version of Rack is receiving security patches only, and effort should be made to move to Rack 3.&lt;/p&gt; &#xA;&lt;p&gt;Starting in Ruby 3.4 the &lt;code&gt;base64&lt;/code&gt; dependency will no longer be a default gem, and may cause a warning or error about &lt;code&gt;base64&lt;/code&gt; being missing. To correct this, add &lt;code&gt;base64&lt;/code&gt; as a dependency to your project.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the rack gem to your application bundle, or follow the instructions provided by a &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/#supported-web-frameworks&#34;&gt;supported web framework&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install it generally:&#xA;$ gem install rack&#xA;&#xA;# or, add it to your current application gemfile:&#xA;$ bundle add rack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need features from &lt;code&gt;Rack::Session&lt;/code&gt; or &lt;code&gt;bin/rackup&lt;/code&gt; please add those gems separately.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install rack-session rackup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create a file called &lt;code&gt;config.ru&lt;/code&gt; with the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;run do |env|&#xA;  [200, {}, [&#34;Hello World&#34;]]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run this using the rackup gem or another &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/#supported-web-servers&#34;&gt;supported web server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install rackup&#xA;$ rackup&#xA;&#xA;# In another shell:&#xA;$ curl http://localhost:9292&#xA;Hello World&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported web servers&lt;/h2&gt; &#xA;&lt;p&gt;Rack is supported by a wide range of servers, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ohler55/agoo&#34;&gt;Agoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/socketry/falcon&#34;&gt;Falcon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boazsegev/iodine&#34;&gt;Iodine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://unit.nginx.org/&#34;&gt;NGINX Unit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.phusionpassenger.com/&#34;&gt;Phusion Passenger&lt;/a&gt; (which is mod_rack for Apache and for nginx)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/pitchfork&#34;&gt;Pitchfork&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://puma.io/&#34;&gt;Puma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/macournoyer/thin&#34;&gt;Thin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yhbt.net/unicorn/&#34;&gt;Unicorn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://uwsgi-docs.readthedocs.io/en/latest/&#34;&gt;uWSGI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lamby.custominktech.com&#34;&gt;Lamby&lt;/a&gt; (for AWS Lambda)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You will need to consult the server documentation to find out what features and limitations they may have. In general, any valid Rack app will run the same on all these servers, without changing anything.&lt;/p&gt; &#xA;&lt;h3&gt;Rackup&lt;/h3&gt; &#xA;&lt;p&gt;Rack provides a separate gem, &lt;a href=&#34;https://github.com/rack/rackup&#34;&gt;rackup&lt;/a&gt; which is a generic interface for running a Rack application on supported servers, which include &lt;code&gt;WEBRick&lt;/code&gt;, &lt;code&gt;Puma&lt;/code&gt;, &lt;code&gt;Falcon&lt;/code&gt; and others.&lt;/p&gt; &#xA;&lt;h2&gt;Supported web frameworks&lt;/h2&gt; &#xA;&lt;p&gt;These frameworks and many others support the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/SPEC.rdoc&#34;&gt;Rack Specification&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camping/camping&#34;&gt;Camping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hanamirb.org/&#34;&gt;Hanami&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ramaze/ramaze&#34;&gt;Ramaze&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://padrinorb.com/&#34;&gt;Padrino&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jeremyevans/roda&#34;&gt;Roda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leahneukirchen/rum&#34;&gt;Rum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sinatrarb.com/&#34;&gt;Sinatra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/socketry/utopia&#34;&gt;Utopia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ohler55/wabur&#34;&gt;WABuR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Available middleware shipped with Rack&lt;/h2&gt; &#xA;&lt;p&gt;Between the server and the framework, Rack can be customized to your applications needs using middleware. Rack itself ships with the following middleware:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::CommonLogger&lt;/code&gt; for creating Apache-style logfiles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::ConditionalGet&lt;/code&gt; for returning &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/304&#34;&gt;Not Modified&lt;/a&gt; responses when the response has not changed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Config&lt;/code&gt; for modifying the environment before processing the request.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::ContentLength&lt;/code&gt; for setting a &lt;code&gt;content-length&lt;/code&gt; header based on body size.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::ContentType&lt;/code&gt; for setting a default &lt;code&gt;content-type&lt;/code&gt; header for responses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Deflater&lt;/code&gt; for compressing responses with gzip.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::ETag&lt;/code&gt; for setting &lt;code&gt;etag&lt;/code&gt; header on bodies that can be buffered.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Events&lt;/code&gt; for providing easy hooks when a request is received and when the response is sent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Files&lt;/code&gt; for serving static files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Head&lt;/code&gt; for returning an empty body for HEAD requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Lint&lt;/code&gt; for checking conformance to the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/SPEC.rdoc&#34;&gt;Rack Specification&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Lock&lt;/code&gt; for serializing requests using a mutex.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::MethodOverride&lt;/code&gt; for modifying the request method based on a submitted parameter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Recursive&lt;/code&gt; for including data from other paths in the application, and for performing internal redirects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Reloader&lt;/code&gt; for reloading files if they have been modified.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Runtime&lt;/code&gt; for including a response header with the time taken to process the request.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Sendfile&lt;/code&gt; for working with web servers that can use optimized file serving for file system paths.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::ShowException&lt;/code&gt; for catching unhandled exceptions and presenting them in a nice and helpful way with clickable backtrace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::ShowStatus&lt;/code&gt; for using nice error pages for empty client error responses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Static&lt;/code&gt; for more configurable serving of static files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::TempfileReaper&lt;/code&gt; for removing temporary files creating during a request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All these components use the same interface, which is described in detail in the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/SPEC.rdoc&#34;&gt;Rack Specification&lt;/a&gt;. These optional components can be used in any way you wish.&lt;/p&gt; &#xA;&lt;h3&gt;Convenience interfaces&lt;/h3&gt; &#xA;&lt;p&gt;If you want to develop outside of existing frameworks, implement your own ones, or develop middleware, Rack provides many helpers to create Rack applications quickly and without doing the same web stuff all over:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Request&lt;/code&gt; which also provides query string parsing and multipart handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Response&lt;/code&gt; for convenient generation of HTTP replies and cookie handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::MockRequest&lt;/code&gt; and &lt;code&gt;Rack::MockResponse&lt;/code&gt; for efficient and quick testing of Rack application without real HTTP round-trips.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Cascade&lt;/code&gt; for trying additional Rack applications if an application returns a not found or method not supported response.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Directory&lt;/code&gt; for serving files under a given directory, with directory indexes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::MediaType&lt;/code&gt; for parsing content-type headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::Mime&lt;/code&gt; for determining content-type based on file extension.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::RewindableInput&lt;/code&gt; for making any IO object rewindable, using a temporary file buffer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rack::URLMap&lt;/code&gt; to route to multiple applications inside the same process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Rack exposes several configuration parameters to control various features of the implementation.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;RACK_QUERY_PARSER_BYTESIZE_LIMIT&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This environment variable sets the default for the maximum query string bytesize that &lt;code&gt;Rack::QueryParser&lt;/code&gt; will attempt to parse. Attempts to use a query string that exceeds this number of bytes will result in a &lt;code&gt;Rack::QueryParser::QueryLimitError&lt;/code&gt; exception. If this enviroment variable is provided, it must be an integer, or &lt;code&gt;Rack::QueryParser&lt;/code&gt; will raise an exception.&lt;/p&gt; &#xA;&lt;p&gt;The default limit can be overridden on a per-&lt;code&gt;Rack::QueryParser&lt;/code&gt; basis using the &lt;code&gt;bytesize_limit&lt;/code&gt; keyword argument when creating the &lt;code&gt;Rack::QueryParser&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;RACK_QUERY_PARSER_PARAMS_LIMIT&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This environment variable sets the default for the maximum number of query parameters that &lt;code&gt;Rack::QueryParser&lt;/code&gt; will attempt to parse. Attempts to use a query string with more than this many query parameters will result in a &lt;code&gt;Rack::QueryParser::QueryLimitError&lt;/code&gt; exception. If this enviroment variable is provided, it must be an integer, or &lt;code&gt;Rack::QueryParser&lt;/code&gt; will raise an exception.&lt;/p&gt; &#xA;&lt;p&gt;The default limit can be overridden on a per-&lt;code&gt;Rack::QueryParser&lt;/code&gt; basis using the &lt;code&gt;params_limit&lt;/code&gt; keyword argument when creating the &lt;code&gt;Rack::QueryParser&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is implemented by counting the number of parameter separators in the query string, before attempting parsing, so if the same parameter key is used multiple times in the query, each counts as a separate parameter for this check.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;param_depth_limit&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rack::Utils.param_depth_limit = 32 # default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The maximum amount of nesting allowed in parameters. For example, if set to 3, this query string would be allowed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;?a[b][c]=d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;but this query string would not be allowed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;?a[b][c][d]=e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Limiting the depth prevents a possible stack overflow when parsing parameters.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;multipart_file_limit&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rack::Utils.multipart_file_limit = 128 # default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The maximum number of parts with a filename a request can contain. Accepting too many parts can lead to the server running out of file handles.&lt;/p&gt; &#xA;&lt;p&gt;The default is 128, which means that a single request can&#39;t upload more than 128 files at once. Set to 0 for no limit.&lt;/p&gt; &#xA;&lt;p&gt;Can also be set via the &lt;code&gt;RACK_MULTIPART_FILE_LIMIT&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;(This is also aliased as &lt;code&gt;multipart_part_limit&lt;/code&gt; and &lt;code&gt;RACK_MULTIPART_PART_LIMIT&lt;/code&gt; for compatibility)&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;multipart_total_part_limit&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The maximum total number of parts a request can contain of any type, including both file and non-file form fields.&lt;/p&gt; &#xA;&lt;p&gt;The default is 4096, which means that a single request can&#39;t contain more than 4096 parts.&lt;/p&gt; &#xA;&lt;p&gt;Set to 0 for no limit.&lt;/p&gt; &#xA;&lt;p&gt;Can also be set via the &lt;code&gt;RACK_MULTIPART_TOTAL_PART_LIMIT&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for specific details about how to make a contribution to Rack.&lt;/p&gt; &#xA;&lt;p&gt;Please post bugs, suggestions and patches to &lt;a href=&#34;https://github.com/rack/rack/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please check our &lt;a href=&#34;https://github.com/rack/rack/security/policy&#34;&gt;Security Policy&lt;/a&gt; for responsible disclosure and security bug reporting process. Due to wide usage of the library, it is strongly preferred that we manage timing in order to provide viable patches at the time of disclosure. Your assistance in this matter is greatly appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;See Also&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;rackup&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A useful tool for running Rack applications from the command line, including &lt;code&gt;Rackup::Server&lt;/code&gt; (previously &lt;code&gt;Rack::Server&lt;/code&gt;) for scripting servers.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rack/rackup&#34;&gt;https://github.com/rack/rackup&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;rack-contrib&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The plethora of useful middleware created the need for a project that collects fresh Rack middleware. &lt;code&gt;rack-contrib&lt;/code&gt; includes a variety of add-on components for Rack and it is easy to contribute new modules.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rack/rack-contrib&#34;&gt;https://github.com/rack/rack-contrib&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;rack-session&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Provides convenient session management for Rack.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rack/rack-session&#34;&gt;https://github.com/rack/rack-session&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;The Rack Core Team, consisting of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Aaron Patterson &lt;a href=&#34;https://github.com/tenderlove&#34;&gt;tenderlove&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Samuel Williams &lt;a href=&#34;https://github.com/ioquatix&#34;&gt;ioquatix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jeremy Evans &lt;a href=&#34;https://github.com/jeremyevans&#34;&gt;jeremyevans&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eileen Uchitelle &lt;a href=&#34;https://github.com/eileencodes&#34;&gt;eileencodes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matthew Draper &lt;a href=&#34;https://github.com/matthewd&#34;&gt;matthewd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rafael França &lt;a href=&#34;https://github.com/rafaelfranca&#34;&gt;rafaelfranca&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and the Rack Alumni&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ryan Tomayko &lt;a href=&#34;https://github.com/rtomayko&#34;&gt;rtomayko&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scytrin dai Kinthra &lt;a href=&#34;https://github.com/scytrin&#34;&gt;scytrin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Leah Neukirchen &lt;a href=&#34;https://github.com/leahneukirchen&#34;&gt;leahneukirchen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;James Tucker &lt;a href=&#34;https://github.com/raggi&#34;&gt;raggi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Josh Peek &lt;a href=&#34;https://github.com/josh&#34;&gt;josh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;José Valim &lt;a href=&#34;https://github.com/josevalim&#34;&gt;josevalim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Michael Fellinger &lt;a href=&#34;https://github.com/manveru&#34;&gt;manveru&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Santiago Pastorino &lt;a href=&#34;https://github.com/spastorino&#34;&gt;spastorino&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Konstantin Haase &lt;a href=&#34;https://github.com/rkh&#34;&gt;rkh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;would like to thank:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adrian Madrid, for the LiteSpeed handler.&lt;/li&gt; &#xA; &lt;li&gt;Christoffer Sawicki, for the first Rails adapter and &lt;code&gt;Rack::Deflater&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Tim Fletcher, for the HTTP authentication code.&lt;/li&gt; &#xA; &lt;li&gt;Luc Heinrich for the Cookie sessions, the static file handler and bugfixes.&lt;/li&gt; &#xA; &lt;li&gt;Armin Ronacher, for the logo and racktools.&lt;/li&gt; &#xA; &lt;li&gt;Alex Beregszaszi, Alexander Kahn, Anil Wadghule, Aredridel, Ben Alpert, Dan Kubb, Daniel Roethlisberger, Matt Todd, Tom Robinson, Phil Hagelberg, S. Brent Faulkner, Bosko Milekic, Daniel Rodríguez Troitiño, Genki Takiuchi, Geoffrey Grosenbach, Julien Sanchez, Kamal Fariz Mahyuddin, Masayoshi Takahashi, Patrick Aljordm, Mig, Kazuhiro Nishiyama, Jon Bardin, Konstantin Haase, Larry Siden, Matias Korhonen, Sam Ruby, Simon Chiang, Tim Connor, Timur Batyrshin, and Zach Brock for bug fixing and other improvements.&lt;/li&gt; &#xA; &lt;li&gt;Eric Wong, Hongli Lai, Jeremy Kemper for their continuous support and API improvements.&lt;/li&gt; &#xA; &lt;li&gt;Yehuda Katz and Carl Lerche for refactoring rackup.&lt;/li&gt; &#xA; &lt;li&gt;Brian Candler, for &lt;code&gt;Rack::ContentType&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Graham Batty, for improved handler loading.&lt;/li&gt; &#xA; &lt;li&gt;Stephen Bannasch, for bug reports and documentation.&lt;/li&gt; &#xA; &lt;li&gt;Gary Wright, for proposing a better &lt;code&gt;Rack::Response&lt;/code&gt; interface.&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Buch, for improvements regarding &lt;code&gt;Rack::Response&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Armin Röhrl, for tracking down bugs in the Cookie generator.&lt;/li&gt; &#xA; &lt;li&gt;Alexander Kellett for testing the Gem and reviewing the announcement.&lt;/li&gt; &#xA; &lt;li&gt;Marcus Rückert, for help with configuring and debugging lighttpd.&lt;/li&gt; &#xA; &lt;li&gt;The WSGI team for the well-done and documented work they&#39;ve done and Rack builds up on.&lt;/li&gt; &#xA; &lt;li&gt;All bug reporters and patch contributors not mentioned above.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Rack is released under the &lt;a href=&#34;https://raw.githubusercontent.com/rack/rack/main/MIT-LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>onetimesecret/onetimesecret</title>
    <updated>2025-06-01T01:51:31Z</updated>
    <id>tag:github.com,2025-06-01:/onetimesecret/onetimesecret</id>
    <link href="https://github.com/onetimesecret/onetimesecret" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Keep passwords and other sensitive information out of your inboxes and chat logs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Onetime Secret - Secure One-Time Message Sharing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Keep passwords and other sensitive information out of your inboxes and chat logs.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Skip to &lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#installation&#34;&gt;Installation instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What is a Onetime Secret?&lt;/h2&gt; &#xA;&lt;p&gt;A onetime secret is a link that can be viewed only once. A single-use URL.&lt;/p&gt; &#xA;&lt;p&gt;Try it out on &lt;a href=&#34;https://onetimesecret.com/&#34;&gt;OnetimeSecret.com&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;Why would I want to use it?&lt;/h3&gt; &#xA;&lt;p&gt;When you send people sensitive info like passwords and private links via email or chat, there are copies of that information stored in many places. If you use a Onetime link instead, the information persists for a single viewing which means it can&#39;t be read by someone else later. This allows you to send sensitive information in a safe way knowing it&#39;s seen by one person only. Think of it like a self-destructing message.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#what-is-a-onetime-secret&#34;&gt;What is a Onetime Secret?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#why-would-i-want-to-use-it&#34;&gt;Why would I want to use it?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#latest-releases&#34;&gt;Latest releases&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#get-the-latest-release-recommended&#34;&gt;&lt;strong&gt;Get the Latest Release&lt;/strong&gt; (Recommended)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#older-releases&#34;&gt;Older releases&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#system-requirements&#34;&gt;System Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#docker-installation&#34;&gt;Docker Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#running-the-container&#34;&gt;Running the Container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#manual-installation&#34;&gt;Manual Installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#basic-setup&#34;&gt;Basic Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#configuration-options&#34;&gt;Configuration Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#important-notes&#34;&gt;Important Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#generating-a-secure-random-key&#34;&gt;Generating a Secure Random Key&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#miscellaneous&#34;&gt;Miscellaneous&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#docker-related-tips&#34;&gt;Docker-related Tips&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#development-tips&#34;&gt;Development Tips&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#production-deployment&#34;&gt;Production Deployment&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/#similar-services&#34;&gt;Similar Services&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Latest releases&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Get the &lt;a href=&#34;https://github.com/onetimesecret/onetimesecret/releases/latest&#34;&gt;Latest Release&lt;/a&gt;&lt;/strong&gt; (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;This is the actively developed and maintained version with the most recent features and security updates.&lt;/p&gt; &#xA;&lt;h3&gt;Older releases&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruby 3 without Node.js: &lt;a href=&#34;https://github.com/onetimesecret/onetimesecret/releases/tag/v0.15.0&#34;&gt;v0.15.0&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you prefer a simpler setup with just Ruby dependencies (i.e. without Node.js dependencies) this is the most recent version.&lt;/li&gt; &#xA; &lt;li&gt;No security updates or bug fixes will be provided for this version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruby 2.7, 2.6 (Legacy - Not Supported): &lt;a href=&#34;https://github.com/onetimesecret/onetimesecret/releases/tag/v0.12.1&#34;&gt;v0.12.1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠️ &lt;strong&gt;Warning&lt;/strong&gt;: This version is no longer maintained or supported.&lt;/li&gt; &#xA; &lt;li&gt;Only use if you absolutely cannot run Ruby 3+.&lt;/li&gt; &#xA; &lt;li&gt;No security updates or bug fixes will be provided for this version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We strongly recommend using the latest release with Ruby 3+ for the best performance, security, and feature set. Legacy Ruby 2.x versions are provided for reference only and should be avoided in production environments.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Any recent linux distro (we use debian) or *BSD or MacOS&lt;/li&gt; &#xA; &lt;li&gt;System dependencies: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ruby 3.1+ (3.0 may work but is not officially supported)&lt;/li&gt; &#xA;   &lt;li&gt;Redis server 5+&lt;/li&gt; &#xA;   &lt;li&gt;Node.js 22+ (for front-end development)&lt;/li&gt; &#xA;   &lt;li&gt;pnpm 9.0.0+&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Additional packages: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;build-essential&lt;/li&gt; &#xA;   &lt;li&gt;libyaml-dev&lt;/li&gt; &#xA;   &lt;li&gt;libffi-dev&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Minimum specs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2 core CPU (or equivalent)&lt;/li&gt; &#xA;   &lt;li&gt;1GB memory&lt;/li&gt; &#xA;   &lt;li&gt;4GB disk&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Installation&lt;/h3&gt; &#xA;&lt;p&gt;There are multiple ways to run OnetimeSecret using Docker. Choose the method that best suits your needs:&lt;/p&gt; &#xA;&lt;h4&gt;1. Using Pre-built Images&lt;/h4&gt; &#xA;&lt;p&gt;We offer pre-built images on both GitHub Container Registry and Docker Hub.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Pull from GitHub Container Registry&#xA;docker pull ghcr.io/onetimesecret/onetimesecret:latest&#xA;&#xA;# OR, pull from Docker Hub&#xA;docker pull onetimesecret/onetimesecret:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Building the Image Locally&lt;/h4&gt; &#xA;&lt;p&gt;If you prefer to build the image yourself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/onetimesecret/onetimesecret.git&#xA;cd onetimesecret&#xA;docker build -t onetimesecret .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Multi-platform Builds&lt;/h4&gt; &#xA;&lt;p&gt;For environments requiring multi-architecture support:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/onetimesecret/onetimesecret.git&#xA;cd onetimesecret&#xA;docker buildx build --platform=linux/amd64,linux/arm64 . -t onetimesecret&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Lite Docker Image&lt;/h4&gt; &#xA;&lt;p&gt;We also offer a &#34;lite&#34; version of the Docker image, which is optimized for quicker deployment and reduced resource usage. To use the lite version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Pull the lite image&#xA;docker pull ghcr.io/onetimesecret/onetimesecret-lite:latest&#xA;&#xA;# OR, build it locally&#xA;docker build -f Dockerfile-lite -t onetimesecret:lite .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on the lite Docker image, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/docs/DOCKER-lite.md&#34;&gt;DOCKER-lite.md&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Running the Container&lt;/h3&gt; &#xA;&lt;p&gt;Regardless of how you obtained or built the image, follow these steps to run OnetimeSecret:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start a Redis container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 6379:6379 -d redis:bookworm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set essential environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HOST=localhost:3000&#xA;export SSL=false&#xA;export SECRET=CHANGE_THIS_VALUE&#xA;export REDIS_URL=redis://host.docker.internal:6379/0&#xA;export RACK_ENV=production&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the OnetimeSecret container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 3000:3000 -d --name onetimesecret \&#xA;  -e REDIS_URL=$REDIS_URL \&#xA;  -e SECRET=$SECRET \&#xA;  -e HOST=$HOST \&#xA;  -e SSL=$SSL \&#xA;  -e RACK_ENV=$RACK_ENV \&#xA;  onetimesecret/onetimesecret:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: Replace &lt;code&gt;onetimesecret/onetimesecret:latest&lt;/code&gt; with your image name if you built it locally.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;OnetimeSecret should now be running and accessible at &lt;code&gt;http://localhost:3000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;This guide covers installing OnetimeSecret manually, whether you&#39;re working with an existing development environment or starting from a fresh system.&lt;/p&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;p&gt;Required components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io/download&#34;&gt;Redis Server&lt;/a&gt; (version 5 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/downloads/&#34;&gt;Ruby&lt;/a&gt; (version 3.1 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bundler.io/&#34;&gt;Bundler&lt;/a&gt; (version 2.5.x)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js&lt;/a&gt; (version 20 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm&lt;/a&gt; (version 9.2 or higher)&lt;/li&gt; &#xA; &lt;li&gt;Essential build tools and development libraries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installation Steps&lt;/h4&gt; &#xA;&lt;h5&gt;1. Prepare Your Environment&lt;/h5&gt; &#xA;&lt;p&gt;First, verify if you have the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ruby --version       # Should be 3.1+&#xA;bundler --version    # Should be 2.5.x&#xA;node --version       # Should be 20+&#xA;pnpm --version       # Should be 9.2+&#xA;redis-server -v      # Should be 5+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a fresh system installation, follow these steps:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Important] If starting with a minimal system (like a fresh Debian container), install &lt;code&gt;sudo&lt;/code&gt; first:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Only if starting as root on a minimal system&#xA;apt update &amp;amp;&amp;amp; apt install -y sudo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Install system dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For Debian/Ubuntu systems:&#xA;sudo apt update&#xA;sudo apt install -y git curl build-essential libyaml-dev libffi-dev redis-server ruby3.1 ruby3.1-dev&#xA;&#xA;# Install package managers&#xA;sudo gem install bundler&#xA;curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -&#xA;sudo apt install -y nodejs&#xA;sudo npm install -g pnpm@latest&#xA;&#xA;# Start Redis server&#xA;sudo service redis-server start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you see audit-related errors when installing pnpm with sudo, this is normal in containers or minimal systems where audit capabilities are limited.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;2. Get the Source Code&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/onetimesecret/onetimesecret.git&#xA;cd onetimesecret&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;3. Install Dependencies&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Ruby dependencies&#xA;bundle install&#xA;&#xA;# Install Node.js dependencies&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;4. Initialize Configuration&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git rev-parse --short HEAD &amp;gt; .commit_hash.txt&#xA;cp -p ./etc/config.example.yaml ./etc/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;5. Choose Your Running Mode&lt;/h5&gt; &#xA;&lt;p&gt;You can run the application in two ways:&lt;/p&gt; &#xA;&lt;h6&gt;Option A: Standard Mode (Static Frontend, Choose RACK_ENV)&lt;/h6&gt; &#xA;&lt;p&gt;Best for production or development without frontend changes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build frontend assets (optional, pre-built assets included):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm run build:local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Set development mode to false in &lt;code&gt;etc/config.yaml&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;:development:&#xA;  :enabled: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start the server (choose environment as needed):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For production&#xA;RACK_ENV=production bundle exec thin -R config.ru -p 3000 start&#xA;&#xA;# Or for backend development&#xA;RACK_ENV=development bundle exec thin -R config.ru -p 3000 start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Option B: Frontend Development Mode&lt;/h6&gt; &#xA;&lt;p&gt;Best for active frontend development with live reloading. You have two options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using the built-in proxy (easier):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  :development:&#xA;    :enabled: true&#xA;    :frontend_host: &#39;http://localhost:5173&#39;  # Built-in proxy handles /dist/* requests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Using a reverse proxy (like Caddy, nginx):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  # etc/config.yaml&#xA;  :development:&#xA;    :enabled: true&#xA;    :frontend_host: &#39;&#39;  # Let your reverse proxy handle /dist/* requests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the main server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RACK_ENV=development bundle exec thin -R config.ru -p 3000 start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the Vite dev server (in a separate terminal):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Technical Details for Frontend Development&lt;/h4&gt; &#xA;&lt;p&gt;When running in development mode (Option B), the application uses Vite&#39;s dev server for dynamic asset loading and hot module replacement. Here&#39;s how it works:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In development mode (development.enabled: true), the application loads assets from /dist/*: &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{#frontend_development}}&#xA;&amp;lt;script type=&#34;module&#34; src=&#34;/dist/main.ts&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script type=&#34;module&#34; src=&#34;/dist/@vite/client&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;{{/frontend_development}}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These requests are either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handled by the built-in proxy (when &lt;code&gt;frontend_host&lt;/code&gt; is set)&lt;/li&gt; &#xA; &lt;li&gt;Handled by your reverse proxy (when it&#39;s empty or not set)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In production mode (&lt;code&gt;development.enabled: false&lt;/code&gt;), it uses pre-built static assets: &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{^frontend_development}}&#xA;{{{vite_assets}}}&#xA;{{/frontend_development}}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This setup enables features like hot module replacement and instant updates during frontend development, while ensuring optimal performance in production.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;OnetimeSecret requires a &lt;code&gt;config.yaml&lt;/code&gt; file for all installations. Environment variables can be used to override specific settings, but the &lt;code&gt;config.yaml&lt;/code&gt; file must always be present.&lt;/p&gt; &#xA;&lt;h3&gt;Basic Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the configuration file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -p ./etc/config.example.yaml ./etc/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Review and edit &lt;code&gt;./etc/config.yaml&lt;/code&gt; as needed. At minimum, update the secret key and back it up securely.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Configuration Options&lt;/h3&gt; &#xA;&lt;h4&gt;1. Using config.yaml (Required)&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;./etc/config.yaml&lt;/code&gt; file is the primary configuration method. It uses ERB syntax to incorporate environment variables, allowing for flexible configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;:site:&#xA;  :host: &amp;lt;%= ENV[&#39;HOST&#39;] || &#39;localhost:7143&#39; %&amp;gt;&#xA;:domains:&#xA;  :enabled: &amp;lt;%= ENV[&#39;DOMAINS_ENABLED&#39;] || false %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this format:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If an environment variable (e.g., &lt;code&gt;HOST&lt;/code&gt;) is set, its value will be used.&lt;/li&gt; &#xA; &lt;li&gt;If the environment variable is not set, the fallback value (e.g., &#39;localhost:7143&#39;) will be used.&lt;/li&gt; &#xA; &lt;li&gt;If you remove the ERB syntax and environment variable reference, only the literal value in the config will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Key areas to configure in &lt;code&gt;config.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SMTP or SendGrid for email&lt;/li&gt; &#xA; &lt;li&gt;Redis connection details&lt;/li&gt; &#xA; &lt;li&gt;Rate limits&lt;/li&gt; &#xA; &lt;li&gt;Enabled locales&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2. Using Environment Variables (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;For quick setups or container deployments, you can use environment variables to override &lt;code&gt;config.yaml&lt;/code&gt; settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HOST=localhost:3000&#xA;export SSL=false&#xA;export SECRET=A_UNIQUE_VALUE&#xA;export REDIS_URL=redis://username:password@hostname:6379/0&#xA;export RACK_ENV=production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Using a .env File (Optional)&lt;/h4&gt; &#xA;&lt;p&gt;For various deployment scenarios, including Docker setups and local development, you can use a &lt;code&gt;.env&lt;/code&gt; file to set environment variables:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the .env file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -p .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the &lt;code&gt;.env&lt;/code&gt; file with your desired configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Usage depends on your setup:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;For local development, load the variables before running the application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set -a&#xA;source .env&#xA;set +a&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;For Docker deployments, you can use the &lt;code&gt;--env-file&lt;/code&gt; option:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --env-file .env your-image-name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;In docker-compose, you can specify the .env file in your docker-compose.yml:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  your-service:&#xA;    env_file:&#xA;      - .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The .env file is versatile and can be used in various deployment scenarios, offering flexibility in how you manage your environment variables.&lt;/p&gt; &#xA;&lt;h3&gt;Important Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;config.yaml&lt;/code&gt; file is always required, even when using environment variables.&lt;/li&gt; &#xA; &lt;li&gt;Choose either direct environment variables or the &lt;code&gt;.env&lt;/code&gt; file method, but not both, to avoid confusion.&lt;/li&gt; &#xA; &lt;li&gt;If you remove environment variable references from &lt;code&gt;config.yaml&lt;/code&gt;, only the literal values in the config will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Use a secure value for the &lt;code&gt;SECRET&lt;/code&gt; key as an environment variable or as &lt;code&gt;site.secret&lt;/code&gt; in &lt;code&gt;etc/config.yaml&lt;/code&gt;. Once set, do not change this value. Create and store a backup in a secure offsite location. Changing the secret may prevent decryption of existing secrets.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For a full list of available configuration options, refer to the comments in the &lt;code&gt;config.example.yaml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Generating a Secure Random Key&lt;/h3&gt; &#xA;&lt;p&gt;To generate a secure, random 256-bit (32-byte) secret key, you can use the following command with OpenSSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl rand -hex 32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If OpenSSL is not installed, you can use the &lt;code&gt;dd&lt;/code&gt; command as a fallback:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dd if=/dev/urandom bs=32 count=1 2&amp;gt;/dev/null | xxd -p -c 32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: While the &lt;code&gt;dd&lt;/code&gt; command provides a reasonable alternative, using OpenSSL is recommended for cryptographic purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Miscellaneous&lt;/h2&gt; &#xA;&lt;h3&gt;Docker-related Tips&lt;/h3&gt; &#xA;&lt;h4&gt;Container Name Already in Use&lt;/h4&gt; &#xA;&lt;p&gt;If you encounter the error &#34;The container name &#39;/onetimesecret&#39; is already in use&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If the container already exists, you can simply start it again:&#xA;docker start onetimesecret&#xA;&#xA;# OR, remove the existing container&#xA;docker rm onetimesecret&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After removing the container, you can run the regular &lt;code&gt;docker run&lt;/code&gt; command again.&lt;/p&gt; &#xA;&lt;h4&gt;Docker Compose&lt;/h4&gt; &#xA;&lt;p&gt;For Docker Compose setup, see the dedicated &lt;a href=&#34;https://github.com/onetimesecret/docker-compose/&#34;&gt;Docker Compose repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Development Tips&lt;/h3&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;p&gt;To run in debug mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ONETIME_DEBUG=true bundle exec thin -e dev start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Front-end Development&lt;/h4&gt; &#xA;&lt;p&gt;When running the Vite server in development mode, it will automatically reload when files change. Ensure that &lt;code&gt;RACK_ENV&lt;/code&gt; is set to &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;development.enabled&lt;/code&gt; in &lt;code&gt;etc/config&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Vite Development Server Security&lt;/h4&gt; &#xA;&lt;p&gt;Starting with Vite 5.4.12, additional security measures were implemented to prevent unauthorized access to development servers. When using custom domains for development, you must explicitly configure allowed hosts.&lt;/p&gt; &#xA;&lt;h5&gt;Configuring Allowed Hosts&lt;/h5&gt; &#xA;&lt;p&gt;By default, only &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;127.0.0.1&lt;/code&gt; are allowed to access the development server. To use custom domains:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using environment variables&lt;/strong&gt; (recommended for local development):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Option 1: Using export&#xA;export VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=&#34;dev.onetime.dev&#34;&#xA;pnpm run dev&#xA;&#xA;# Option 2: Set inline&#xA;VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=&#34;dev.onetime.dev&#34; pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using .env file&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Add to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=dev.onetime.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Docker&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 3000:3000 -d \&#xA;  -e VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=&#34;dev.onetime.dev&#34; \&#xA;  # other env vars...&#xA;  onetimesecret/onetimesecret:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Security Warning:&lt;/strong&gt; Never set &lt;code&gt;allowedHosts: true&lt;/code&gt; in your configuration as this creates a security vulnerability allowing any website to access your development server.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6&#34;&gt;GHSA-vg6x-rcgg-rjx6&lt;/a&gt; for details on the vulnerability this configuration prevents.&lt;/p&gt; &#xA;&lt;h4&gt;Setting up pre-commit hooks&lt;/h4&gt; &#xA;&lt;p&gt;We use the &lt;code&gt;pre-commit&lt;/code&gt; framework to maintain code quality. To set it up:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install pre-commit:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pre-commit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the git hooks:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This will ensure that the pre-commit hooks run before each commit, helping to maintain code quality and consistency.&lt;/p&gt; &#xA;&lt;h5&gt;Optimizing Docker Builds&lt;/h5&gt; &#xA;&lt;p&gt;To see the layers of an image and optimize your builds, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker history &amp;lt;image_id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Production Deployment&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/onetimesecret/onetimesecret/develop/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Similar Services&lt;/h2&gt; &#xA;&lt;p&gt;This section provides an overview of services similar to our project, highlighting their unique features and how they compare. These alternatives may be useful for users looking for specific functionalities or wanting to explore different options in the same domain. By presenting this information, we aim to give our users a comprehensive view of the available options in the secure information sharing space.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Our in-house legal counsel (&lt;a href=&#34;https://github.com/onetimesecret/onetimesecret/pull/610#issuecomment-2333317937&#34;&gt;codium-pr-agent-pro bot&lt;/a&gt;) suggested adding this introduction and the disclaimer at the end.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Distinctive Feature&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://protonurl.ch/&#34;&gt;https://protonurl.ch/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;protonURL&lt;/td&gt; &#xA;   &lt;td&gt;A simple and secure tool to share secret, confidential, or non-confidential content via a self-destructing link.&lt;/td&gt; &#xA;   &lt;td&gt;Temporary, self-destructing links for sensitive content with strong encryption and available in 15 languages.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pwpush.com/&#34;&gt;https://pwpush.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Password Pusher&lt;/td&gt; &#xA;   &lt;td&gt;A tool that uses browser cookies to help you share passwords and other sensitive information.&lt;/td&gt; &#xA;   &lt;td&gt;Temporary, self-destructing links for password sharing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://scrt.link/en&#34;&gt;https://scrt.link/en&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Share a Secret&lt;/td&gt; &#xA;   &lt;td&gt;A service that allows you to share sensitive information anonymously. Crucial for journalists, lawyers, politicians, whistleblowers, and oppressed individuals.&lt;/td&gt; &#xA;   &lt;td&gt;Anonymous, self-destructing message sharing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cryptgeon.com/&#34;&gt;https://cryptgeon.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cryptgeon&lt;/td&gt; &#xA;   &lt;td&gt;A service for sharing secrets and passwords securely.&lt;/td&gt; &#xA;   &lt;td&gt;Offers a secret generator, password generator, and secret vault&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.vanish.so/&#34;&gt;https://www.vanish.so/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vanish&lt;/td&gt; &#xA;   &lt;td&gt;A service for sharing secrets and passwords securely.&lt;/td&gt; &#xA;   &lt;td&gt;Self-destructing messages with strong encryption&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://password.link/en&#34;&gt;https://password.link/en&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Password.link&lt;/td&gt; &#xA;   &lt;td&gt;A service for securely sending and receiving sensitive information.&lt;/td&gt; &#xA;   &lt;td&gt;Secure link creation for sensitive information sharing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sharesecret.co/&#34;&gt;https://www.sharesecret.co/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ShareSecret&lt;/td&gt; &#xA;   &lt;td&gt;A service for securely sharing passwords in Slack and email.&lt;/td&gt; &#xA;   &lt;td&gt;Secure password sharing with Slack and email integration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://teampassword.com/&#34;&gt;https://teampassword.com/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TeamPassword&lt;/td&gt; &#xA;   &lt;td&gt;A password manager for teams.&lt;/td&gt; &#xA;   &lt;td&gt;Fast, easy-to-use, and secure team password management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://secretshare.io/&#34;&gt;https://secretshare.io/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Secret Share&lt;/td&gt; &#xA;   &lt;td&gt;A service for sharing passwords securely.&lt;/td&gt; &#xA;   &lt;td&gt;Strong encryption for data in transit and at rest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://retriever.corgea.io/&#34;&gt;https://retriever.corgea.io/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Retriever&lt;/td&gt; &#xA;   &lt;td&gt;A service for requesting secrets securely.&lt;/td&gt; &#xA;   &lt;td&gt;Secure secret request and retrieval with encryption&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://winden.app/s&#34;&gt;https://winden.app/s&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Winden&lt;/td&gt; &#xA;   &lt;td&gt;A service for sharing secrets and passwords securely.&lt;/td&gt; &#xA;   &lt;td&gt;Securely transfers files with end-to-end encryption&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.snote.app/&#34;&gt;https://www.snote.app/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SNote&lt;/td&gt; &#xA;   &lt;td&gt;A privacy-focused workspace with end-to-end encryption.&lt;/td&gt; &#xA;   &lt;td&gt;Secure collaboration on projects, to-dos, tasks, and shared files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.burnafterreading.me/&#34;&gt;https://www.burnafterreading.me/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Burn After Reading&lt;/td&gt; &#xA;   &lt;td&gt;A service for sharing various types of sensitive information.&lt;/td&gt; &#xA;   &lt;td&gt;Self-destructing messages with diceware passphrase encryption&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pvtnote.com/en/&#34;&gt;https://pvtnote.com/en/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PvtNote&lt;/td&gt; &#xA;   &lt;td&gt;A service for sending private, self-destructing messages.&lt;/td&gt; &#xA;   &lt;td&gt;Clean design with self-destructing messages&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://k9crypt.xyz/&#34;&gt;https://k9crypt.xyz/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;K9Crypt&lt;/td&gt; &#xA;   &lt;td&gt;A secure and anonymous messaging platform.&lt;/td&gt; &#xA;   &lt;td&gt;End-to-end encryption with 2-hour message deletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Summarized, fetched, and collated by &lt;a href=&#34;https://cohere.com/blog/command-r-plus-microsoft-azure&#34;&gt;Cohere Command R+&lt;/a&gt;, formatted by &lt;a href=&#34;https://www.anthropic.com/news/claude-3-5-sonnet&#34;&gt;Claude 3.5 Sonnet&lt;/a&gt;, and proofread by &lt;a href=&#34;https://github.com/features/copilot&#34;&gt;GitHub Copilot&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The inclusion of these services in this list does not imply endorsement. Users are encouraged to conduct their own research and due diligence before using any of the listed services, especially when handling sensitive information.&lt;/p&gt;</summary>
  </entry>
</feed>