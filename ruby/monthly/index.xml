<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T02:24:17Z</updated>
  <subtitle>Monthly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MizzyPD/Pokemon-Daybreak</title>
    <updated>2023-05-01T02:24:17Z</updated>
    <id>tag:github.com,2023-05-01:/MizzyPD/Pokemon-Daybreak</id>
    <link href="https://github.com/MizzyPD/Pokemon-Daybreak" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>faker-ruby/faker</title>
    <updated>2023-05-01T02:24:17Z</updated>
    <id>tag:github.com,2023-05-01:/faker-ruby/faker</id>
    <link href="https://github.com/faker-ruby/faker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library for generating fake data such as names, addresses, and phone numbers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/36028424/40263395-4318481e-5b44-11e8-92e5-3dcc1ce169b3.png&#34; alt=&#34;logotype a happy-07&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Faker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/faker-ruby/faker/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/faker-ruby/faker/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/faker&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/faker.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://inch-ci.org/github/faker-ruby/faker&#34;&gt;&lt;img src=&#34;https://inch-ci.org/github/faker-ruby/faker.svg?branch=main&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/stympy/faker/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/ef54c7f9df86e965d64b/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/stympy/faker/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/ef54c7f9df86e965d64b/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Faker is a port of &lt;a href=&#34;https://metacpan.org/pod/Data::Faker&#34;&gt;Perl&#39;s Data::Faker library&lt;/a&gt;. It&#39;s a library for generating fake data such as names, addresses, and phone numbers.&lt;/p&gt; &#xA;&lt;p&gt;Faker helps you generate realistic test data, and populate your database with more than a couple of records while you&#39;re doing development.&lt;/p&gt; &#xA;&lt;p&gt;It comes in very handy for taking screenshots (taking screenshots for a personal project) and it was the original impetus for the creation of this gem).&lt;/p&gt; &#xA;&lt;h2&gt;Quick links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ðŸ“– &lt;strong&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/faker/&#34;&gt;Read the documentation for the latest version&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;ðŸ“¢ &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/CHANGELOG.md&#34;&gt;See what&#39;s changed in recent versions&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#faker&#34;&gt;Faker&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#quick-links&#34;&gt;Quick links&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#a-note-about-the-generators-versions&#34;&gt;A note about the Generators versions&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#ensuring-unique-values&#34;&gt;Ensuring unique values&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#deterministic-random&#34;&gt;Deterministic Random&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#customization&#34;&gt;Customization&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#minitest-and-faker--222&#34;&gt;Minitest and Faker &amp;gt;= 2.22&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#generators&#34;&gt;Generators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#versioning&#34;&gt;Versioning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;While Faker generates data at random, returned values are not guaranteed to be unique by default. To explicitly specify when you require unique values, see &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#ensuring-unique-values&#34;&gt;Ensuring Unique Values&lt;/a&gt;. Values also can be deterministic if you use the deterministic feature, see &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#deterministic-random&#34;&gt;Deterministic Random&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;This is the &lt;code&gt;main&lt;/code&gt; branch of Faker and may contain changes that are not yet released. Please refer to the README of your version for the available methods. The list of all versions is &lt;a href=&#34;https://github.com/stympy/faker/releases&#34;&gt;available here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Start by including &lt;code&gt;faker&lt;/code&gt; in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;faker&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some examples of how to use Faker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;faker&#39;&#xA;&#xA;Faker::Name.name      #=&amp;gt; &#34;Christophe Bartell&#34;&#xA;&#xA;Faker::Address.full_address #=&amp;gt; &#34;5479 William Way, East Sonnyhaven, LA 63637&#34;&#xA;&#xA;Faker::Markdown.emphasis #=&amp;gt; &#34;Quo qui aperiam. Amet corrupti distinctio. Sit quia *dolor.*&#34;&#xA;&#xA;Faker::TvShows::RuPaul.queen #=&amp;gt; &#34;Violet Chachki&#34;&#xA;&#xA;Faker::Alphanumeric.alpha(number: 10) #=&amp;gt; &#34;zlvubkrwga&#34;&#xA;&#xA;Faker::ProgrammingLanguage.name #=&amp;gt; &#34;Ruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a complete list of the generators, see &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/#generators&#34;&gt;Generators&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;A note about the Generators versions&lt;/h4&gt; &#xA;&lt;p&gt;If you get a &lt;code&gt;uninitialized constant Faker::[some_class]&lt;/code&gt; error, your version of the gem is behind main.&lt;/p&gt; &#xA;&lt;p&gt;To make sure that your gem is the one documented here, change the line in your Gemfile to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;faker&#39;, :git =&amp;gt; &#39;https://github.com/faker-ruby/faker.git&#39;, :branch =&amp;gt; &#39;main&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generators have the &lt;code&gt;@faker.version&lt;/code&gt; tag on top of their implementation. From the tags, you can identify the version the generator was added:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Faker::TvShows::ParksAndRec.character&#xA;&#xA;# @faker.version 1.9.0&#xA;def character&#xA;  fetch(&#39;parks_and_rec.characters&#39;)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ensuring unique values&lt;/h3&gt; &#xA;&lt;p&gt;To ensure Faker generates unique values, prefix your method call with &lt;code&gt;unique&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Name.unique.name # This will return a unique name every time it is called&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If too many unique values are requested from a generator that has a limited number of potential values, a &lt;code&gt;Faker::UniqueGenerator::RetryLimitExceeded&lt;/code&gt; exception may be raised. It is possible to clear the record of unique values that have been returned, for example between tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Name.unique.clear # Clears used values for Faker::Name&#xA;Faker::UniqueGenerator.clear # Clears used values for all generators&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You also can give some already used values to the unique generator if you have collisions with the generated data (i.e: using FactoryBot with random and manually set values).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Usage:&#xA;# Faker::&amp;lt;generator&amp;gt;.unique.exclude(method, arguments, list)&#xA;&#xA;# Add &#39;azerty&#39; and &#39;wxcvbn&#39; to the string generator with 6 char length&#xA;Faker::Lorem.unique.exclude :string, [number: 6], %w[azerty wxcvbn]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deterministic Random&lt;/h3&gt; &#xA;&lt;p&gt;Faker supports seeding of its pseudo-random number generator (PRNG) to provide deterministic output of repeated method calls.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Config.random = Random.new(42)&#xA;Faker::Company.bs #=&amp;gt; &#34;seize collaborative mindshare&#34;&#xA;Faker::Company.bs #=&amp;gt; &#34;engage strategic platforms&#34;&#xA;Faker::Config.random = Random.new(42)&#xA;Faker::Company.bs #=&amp;gt; &#34;seize collaborative mindshare&#34;&#xA;Faker::Company.bs #=&amp;gt; &#34;engage strategic platforms&#34;&#xA;&#xA;Faker::Config.random = nil # seeds the PRNG using default entropy sources&#xA;Faker::Config.random.seed #=&amp;gt; 185180369676275068918401850258677722187&#xA;Faker::Company.bs #=&amp;gt; &#34;cultivate viral synergies&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customization&lt;/h3&gt; &#xA;&lt;p&gt;You may want Faker to print information depending on your location in the world. To assist you in this, Faker uses the &lt;code&gt;I18n&lt;/code&gt; gem to store strings and formats to represent the names and postal codes of the area of your choosing.&lt;/p&gt; &#xA;&lt;p&gt;Just set the locale you want as shown below, and Faker will take care of the rest.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Faker::Config.locale = &#39;es&#39;&#xA;# or&#xA;Faker::Config.locale = :es&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Overriding the default locale might not be thread-safe. See &lt;a href=&#34;https://github.com/faker-ruby/faker/issues/2563&#34;&gt;Locale setting can be ignored #2563&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;To override Faker&#39;s locales, check out the &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/lib/locales/README.md&#34;&gt;locales README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Minitest and Faker &amp;gt;= 2.22&lt;/h3&gt; &#xA;&lt;p&gt;To prevent Faker (version &amp;gt;= 2.22) from generating duplicate values when using Minitest, you might need to add the following to the &lt;code&gt;test_helper.rb&lt;/code&gt; or &lt;code&gt;rails_helper.rb&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  Faker::Config.random = Random.new&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/faker-ruby/faker/issues/2534&#34;&gt;Issue #2534&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Generators&lt;/h2&gt; &#xA;&lt;p&gt;This is the full list of generators available with this gem. If you need details about any of them, make sure to consult the documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: Some of the generators below aren&#39;t released yet. If you want to use them, change the line in your gemfile to:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;faker&#39;, :git =&amp;gt; &#39;https://github.com/faker-ruby/faker.git&#39;, :branch =&amp;gt; &#39;main&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Default&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/address.md&#34;&gt;Faker::Address&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/alphanumeric.md&#34;&gt;Faker::Alphanumeric&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/ancient.md&#34;&gt;Faker::Ancient&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/app.md&#34;&gt;Faker::App&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/appliance.md&#34;&gt;Faker::Appliance&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/artist.md&#34;&gt;Faker::Artist&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/avatar.md&#34;&gt;Faker::Avatar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/bank.md&#34;&gt;Faker::Bank&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/barcode.md&#34;&gt;Faker::Barcode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/beer.md&#34;&gt;Faker::Beer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/blood.md&#34;&gt;Faker::Blood&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/boolean.md&#34;&gt;Faker::Boolean&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/bossa_nova.md&#34;&gt;Faker::BossaNova&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/business.md&#34;&gt;Faker::Business&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/camera.md&#34;&gt;Faker::Camera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/cannabis.md&#34;&gt;Faker::Cannabis&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/chile_rut.md&#34;&gt;Faker::ChileRut&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/chuck_norris.md&#34;&gt;Faker::ChuckNorris&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/code.md&#34;&gt;Faker::Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/coffee.md&#34;&gt;Faker::Coffee&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/coin.md&#34;&gt;Faker::Coin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/color.md&#34;&gt;Faker::Color&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/commerce.md&#34;&gt;Faker::Commerce&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/company.md&#34;&gt;Faker::Company&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/compass.md&#34;&gt;Faker::Compass&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/computer.md&#34;&gt;Faker::Computer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/construction.md&#34;&gt;Faker::Construction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/cosmere.md&#34;&gt;Faker::Cosmere&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/crypto.md&#34;&gt;Faker::Crypto&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/crypto_coin.md&#34;&gt;Faker::CryptoCoin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/currency.md&#34;&gt;Faker::Currency&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/date.md&#34;&gt;Faker::Date&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/dc_comics.md&#34;&gt;Faker::DcComics&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/demographic.md&#34;&gt;Faker::Demographic&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/dessert.md&#34;&gt;Faker::Dessert&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/device.md&#34;&gt;Faker::Device&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/driving_licence.md&#34;&gt;Faker::DrivingLicence&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/drone/drone.md&#34;&gt;Faker::Drone&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/educator.md&#34;&gt;Faker::Educator&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/electrical_components.md&#34;&gt;Faker::ElectricalComponents&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/emotion.md&#34;&gt;Faker::Emotion&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/esport.md&#34;&gt;Faker::Esport&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/file.md&#34;&gt;Faker::File&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/finance.md&#34;&gt;Faker::Finance&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/food.md&#34;&gt;Faker::Food&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/funny_name.md&#34;&gt;Faker::FunnyName&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/gender.md&#34;&gt;Faker::Gender&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/greek_philosophers.md&#34;&gt;Faker::GreekPhilosophers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/hacker.md&#34;&gt;Faker::Hacker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/hipster.md&#34;&gt;Faker::Hipster&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/hobby.md&#34;&gt;Faker::Hobby&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/house.md&#34;&gt;Faker::House&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/id_number.md&#34;&gt;Faker::IDNumber&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/industry_segments.md&#34;&gt;Faker::IndustrySegments&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/internet.md&#34;&gt;Faker::Internet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/invoice.md&#34;&gt;Faker::Invoice&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/job.md&#34;&gt;Faker::Job&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/json.md&#34;&gt;Faker::Json&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/kpop.md&#34;&gt;Faker::Kpop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/lorem.md&#34;&gt;Faker::Lorem&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/lorem_flickr.md&#34;&gt;Faker::LoremFlickr&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/markdown.md&#34;&gt;Faker::Markdown&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/marketing.md&#34;&gt;Faker::Marketing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/measurement.md&#34;&gt;Faker::Measurement&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/military.md&#34;&gt;Faker::Military&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/mountain.md&#34;&gt;Faker::Mountain&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/name.md&#34;&gt;Faker::Name&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/nation.md&#34;&gt;Faker::Nation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/nato_phonetic_alphabet.md&#34;&gt;Faker::NatoPhoneticAlphabet&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/national_health_service.md&#34;&gt;Faker::NationalHealthService&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/number.md&#34;&gt;Faker::Number&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/omniauth.md&#34;&gt;Faker::Omniauth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/phone_number.md&#34;&gt;Faker::PhoneNumber&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/placeholdit.md&#34;&gt;Faker::Placeholdit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/programming_language.md&#34;&gt;Faker::ProgrammingLanguage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/relationship.md&#34;&gt;Faker::Relationship&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/restaurant.md&#34;&gt;Faker::Restaurant&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/science.md&#34;&gt;Faker::Science&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/slack_emoji.md&#34;&gt;Faker::SlackEmoji&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/source.md&#34;&gt;Faker::Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/south_africa.md&#34;&gt;Faker::SouthAfrica&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/space.md&#34;&gt;Faker::Space&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/string.md&#34;&gt;Faker::String&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/stripe.md&#34;&gt;Faker::Stripe&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/subscription.md&#34;&gt;Faker::Subscription&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/superhero.md&#34;&gt;Faker::Superhero&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/tea.md&#34;&gt;Faker::Tea&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/team.md&#34;&gt;Faker::Team&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/time.md&#34;&gt;Faker::Time&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/twitter.md&#34;&gt;Faker::Twitter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/types.md&#34;&gt;Faker::Types&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/university.md&#34;&gt;Faker::University&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/vehicle.md&#34;&gt;Faker::Vehicle&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/verbs.md&#34;&gt;Faker::Verbs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/vulnerability_identifier.md&#34;&gt;Faker::VulnerabilityIdentifier&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/default/world_cup.md&#34;&gt;Faker::WorldCup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Blockchain&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/blockchain/aeternity.md&#34;&gt;Faker::Blockchain::Aeternity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/blockchain/bitcoin.md&#34;&gt;Faker::Blockchain::Bitcoin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/blockchain/ethereum.md&#34;&gt;Faker::Blockchain::Ethereum&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/blockchain/tezos.md&#34;&gt;Faker::Blockchain::Tezos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Books&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/books/book.md&#34;&gt;Faker::Book&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/books/culture_series.md&#34;&gt;Faker::Books::CultureSeries&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/books/dune.md&#34;&gt;Faker::Books::Dune&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/books/lovecraft.md&#34;&gt;Faker::Books::Lovecraft&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/books/the_kingkiller_chronicle.md&#34;&gt;Faker::Books::TheKingkillerChronicle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fantasy&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/fantasy/tolkien.md&#34;&gt;Faker::Fantasy::Tolkien&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Travel&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/travel/airport.md&#34;&gt;Faker:Travel::Airport&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Creature&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/creature/animal.md&#34;&gt;Faker::Creature::Animal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/creature/bird.md&#34;&gt;Faker::Creature::Bird&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/creature/cat.md&#34;&gt;Faker::Creature::Cat&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/creature/dog.md&#34;&gt;Faker::Creature::Dog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/creature/horse.md&#34;&gt;Faker::Creature::Horse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Games&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/game.md&#34;&gt;Faker::Game&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/clash_of_clans.md&#34;&gt;Faker::Games::ClashOfClans&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/dnd.md&#34;&gt;Faker::Games::DnD&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/dota.md&#34;&gt;Faker::Games::Dota&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/elder_scrolls.md&#34;&gt;Faker::Games::ElderScrolls&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/fallout.md&#34;&gt;Faker::Games::Fallout&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/final_fantasy_xiv.md&#34;&gt;Faker::Games::FinalFantasyXIV&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/half_life.md&#34;&gt;Faker::Games::HalfLife&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/heroes.md&#34;&gt;Faker::Games::Heroes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/heroes_of_the_storm.md&#34;&gt;Faker::Games::HeroesOfTheStorm&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/league_of_legends.md&#34;&gt;Faker::Games::LeagueOfLegends&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/minecraft.md&#34;&gt;Faker::Games::Minecraft&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/myst.md&#34;&gt;Faker::Games::Myst&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/overwatch.md&#34;&gt;Faker::Games::Overwatch&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/pokemon.md&#34;&gt;Faker::Games::Pokemon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/sonic_the_hedgehog.md&#34;&gt;Faker::Games::SonicTheHedgehog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/street_fighter.md&#34;&gt;Faker::Games::StreetFighter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/super_mario.md&#34;&gt;Faker::Games::SuperMario&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/super_smash_bros.md&#34;&gt;Faker::Games::SuperSmashBros&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/touhou.md&#34;&gt;Faker::Games::Touhou&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/warhammer_fantasy.md&#34;&gt;Faker::Games::WarhammerFantasy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/witcher.md&#34;&gt;Faker::Games::Witcher&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/world_of_warcraft.md&#34;&gt;Faker::Games::WorldOfWarcraft&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/games/zelda.md&#34;&gt;Faker::Games::Zelda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Japanese Media&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/cowboy_bebop.md&#34;&gt;Faker::JapaneseMedia::CowboyBebop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/dragon_ball.md&#34;&gt;Faker::JapaneseMedia::DragonBall&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/one_piece.md&#34;&gt;Faker::JapaneseMedia::OnePiece&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/studio_ghibli.md&#34;&gt;Faker::JapaneseMedia::StudioGhibli&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/sword_art_online.md&#34;&gt;Faker::JapaneseMedia::SwordArtOnline&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/naruto.md&#34;&gt;Faker::JapaneseMedia::Naruto&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/doraemon.md&#34;&gt;Faker::JapaneseMedia::Doraemon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/conan.md&#34;&gt;Faker::JapaneseMedia::Conan&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/japanese_media/fullmetal_alchemist_brotherhood.md&#34;&gt;Faker::JapaneseMedia::FmaBrotherhood&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Movies&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/movie.md&#34;&gt;Faker::Movie&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/avatar.md&#34;&gt;Faker::Movies::Avatar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/back_to_the_future.md&#34;&gt;Faker::Movies::BackToTheFuture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/departed.md&#34;&gt;Faker::Movies::Departed&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/ghostbusters.md&#34;&gt;Faker::Movies::Ghostbusters&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/harry_potter.md&#34;&gt;Faker::Movies::HarryPotter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/hitchhikers_guide_to_the_galaxy.md&#34;&gt;Faker::Movies::HitchhikersGuideToTheGalaxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/hobbit.md&#34;&gt;Faker::Movies::Hobbit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/how_to_train_your_dragon.md&#34;&gt;Faker::Movies::HowToTrainYourDragon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/lebowski.md&#34;&gt;Faker::Movies::Lebowski&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/lord_of_the_rings.md&#34;&gt;Faker::Movies::LordOfTheRings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/princess_bride.md&#34;&gt;Faker::Movies::PrincessBride&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/star_wars.md&#34;&gt;Faker::Movies::StarWars&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/tron.md&#34;&gt;Faker::Movies::TRON&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/movies/v_for_vendetta.md&#34;&gt;Faker::Movies::VForVendetta&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Music&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/music.md&#34;&gt;Faker::Music&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/grateful_dead.md&#34;&gt;Faker::Music::GratefulDead&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/hiphop.md&#34;&gt;Faker::Music::Hiphop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/opera.md&#34;&gt;Faker::Music::Opera&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/pearl_jam.md&#34;&gt;Faker::Music::PearlJam&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/phish.md&#34;&gt;Faker::Music::Phish&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/prince.md&#34;&gt;Faker::Music::Prince&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/rock_band.md&#34;&gt;Faker::Music::RockBand&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/rush.md&#34;&gt;Faker::Music::Rush&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/music/umphreys_mcgee.md&#34;&gt;Faker::Music::UmphreysMcgee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Quotes&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/quotes/quote.md&#34;&gt;Faker::Quote&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/quotes/chiquito.md&#34;&gt;Faker::Quotes::Chiquito&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/quotes/rajnikanth.md&#34;&gt;Faker::Quotes::Rajnikanth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/quotes/shakespeare.md&#34;&gt;Faker::Quotes::Shakespeare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sports&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/sports/sports.md&#34;&gt;Faker::Sports&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/sports/basketball.md&#34;&gt;Faker::Sports::Basketball&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/sports/chess.md&#34;&gt;Faker::Sports::Chess&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/sports/football.md&#34;&gt;Faker::Sports::Football&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/sports/mountaineering.md&#34;&gt;Faker::Sports::Mountaineering&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/sports/volleyball.md&#34;&gt;Faker::Sports::Volleyball&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tv Shows&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/aqua_teen_hunger_force.md&#34;&gt;Faker::TvShows::AquaTeenHungerForce&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/big_bang_theory.md&#34;&gt;Faker::TvShows::BigBangTheory&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/bojack_horseman.md&#34;&gt;Faker::TvShows::BojackHorseman&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/breaking_bad.md&#34;&gt;Faker::TvShows::BreakingBad&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/brooklyn_nine_nine.md&#34;&gt;Faker::TvShows::BrooklynNineNine&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/buffy.md&#34;&gt;Faker::TvShows::Buffy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/community.md&#34;&gt;Faker::TvShows::Community&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/dr_who.md&#34;&gt;Faker::TvShows::DrWho&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/dumb_and_dumber.md&#34;&gt;Faker::TvShows::DumbAndDumber&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/family_guy.md&#34;&gt;Faker::TvShows::FamilyGuy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/final_space.md&#34;&gt;Faker::TvShows::FinalSpace&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/friends.md&#34;&gt;Faker::TvShows::Friends&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/game_of_thrones.md&#34;&gt;Faker::TvShows::GameOfThrones&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/hey_arnold.md&#34;&gt;Faker::TvShows::HeyArnold&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/how_i_met_your_mother.md&#34;&gt;Faker::TvShows::HowIMetYourMother&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/michael_scott.md&#34;&gt;Faker::TvShows::MichaelScott&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/new_girl.md&#34;&gt;Faker::TvShows::NewGirl&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/parks_and_rec.md&#34;&gt;Faker::TvShows::ParksAndRec&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/rick_and_morty.md&#34;&gt;Faker::TvShows::RickAndMorty&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/rupaul.md&#34;&gt;Faker::TvShows::RuPaul&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/seinfeld.md&#34;&gt;Faker::TvShows::Seinfeld&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/silicon_valley.md&#34;&gt;Faker::TvShows::SiliconValley&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/simpsons.md&#34;&gt;Faker::TvShows::Simpsons&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/south_park.md&#34;&gt;Faker::TvShows::SouthPark&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/spongebob.md&#34;&gt;Faker::TvShows::Spongebob&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/star_trek.md&#34;&gt;Faker::TvShows::StarTrek&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/stargate.md&#34;&gt;Faker::TvShows::Stargate&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/stranger_things.md&#34;&gt;Faker::TvShows::StrangerThings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/suits.md&#34;&gt;Faker::TvShows::Suits&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/supernatural.md&#34;&gt;Faker::TvShows::Supernatural&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/the_expanse.md&#34;&gt;Faker::TvShows::TheExpanse&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/the_fresh_prince_of_bel_air.md&#34;&gt;Faker::TvShows::TheFreshPrinceOfBelAir&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/the_it_crowd.md&#34;&gt;Faker::TvShows::TheITCrowd&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/the_thick_of_it.md&#34;&gt;Faker::TvShows::TheThickOfIt&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/twin_peaks.md&#34;&gt;Faker::TvShows::TwinPeaks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/doc/tv_shows/venture_bros.md&#34;&gt;Faker::TvShows::VentureBros&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you have problems, please create a &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/.github/ISSUE_TEMPLATE/bug-report.md&#34;&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/faker-ruby/faker/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; document for instructions on setting up the repo on your machine, understanding the codebase, and creating a good pull request.&lt;/p&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://discord.gg/RMumTwB&#34;&gt;Discord channel&lt;/a&gt; to discuss anything regarding improvements or feature requests.&lt;/p&gt; &#xA;&lt;p&gt;Thank you, contributors!&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;Faker follows Semantic Versioning 2.0 as defined at &lt;a href=&#34;https://semver.org&#34;&gt;https://semver.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is free to use under the terms of the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rspec/rspec-expectations</title>
    <updated>2023-05-01T02:24:17Z</updated>
    <id>tag:github.com,2023-05-01:/rspec/rspec-expectations</id>
    <link href="https://github.com/rspec/rspec-expectations" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides a readable API to express expected outcomes of a code example&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RSpec Expectations &lt;a href=&#34;https://github.com/rspec/rspec-expectations/actions&#34;&gt;&lt;img src=&#34;https://github.com/rspec/rspec-expectations/workflows/RSpec%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rspec/rspec-expectations&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/rspec/rspec-expectations.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;RSpec::Expectations lets you express expected outcomes on an object in an example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(account.balance).to eq(Money.new(37.42, :USD))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use rspec-expectations with rspec, just install the rspec gem and RubyGems will also install rspec-expectations for you (along with rspec-core and rspec-mocks):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Want to run against the &lt;code&gt;main&lt;/code&gt; branch? You&#39;ll need to include the dependent RSpec repos as well. Add the following to your &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;%w[rspec-core rspec-expectations rspec-mocks rspec-support].each do |lib|&#xA;  gem lib, :git =&amp;gt; &#34;https://github.com/rspec/#{lib}.git&#34;, :branch =&amp;gt; &#39;main&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use rspec-expectations with another tool, like Test::Unit, Minitest, or Cucumber, you can install it directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install rspec-expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve set up the environment, you&#39;ll need to cd into the working directory of whichever repo you want to work in. From there you can run the specs and cucumber features, and make patches.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: You do not need to use rspec-dev to work on a specific RSpec repo. You can treat each RSpec repo as an independent project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rspec/rspec-expectations/main/BUILD_DETAIL.md&#34;&gt;Build details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rspec/rspec-expectations/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rspec/rspec-expectations/main/CONTRIBUTING.md&#34;&gt;Detailed contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rspec/rspec-expectations/main/DEVELOPMENT.md&#34;&gt;Development setup guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s an example using rspec-core:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe Order do&#xA;  it &#34;sums the prices of the items in its line items&#34; do&#xA;    order = Order.new&#xA;    order.add_entry(LineItem.new(:item =&amp;gt; Item.new(&#xA;      :price =&amp;gt; Money.new(1.11, :USD)&#xA;    )))&#xA;    order.add_entry(LineItem.new(:item =&amp;gt; Item.new(&#xA;      :price =&amp;gt; Money.new(2.22, :USD),&#xA;      :quantity =&amp;gt; 2&#xA;    )))&#xA;    expect(order.total).to eq(Money.new(5.55, :USD))&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; methods come from rspec-core. The &lt;code&gt;Order&lt;/code&gt;, &lt;code&gt;LineItem&lt;/code&gt;, &lt;code&gt;Item&lt;/code&gt; and &lt;code&gt;Money&lt;/code&gt; classes would be from &lt;em&gt;your&lt;/em&gt; code. The last line of the example expresses an expected outcome. If &lt;code&gt;order.total == Money.new(5.55, :USD)&lt;/code&gt;, then the example passes. If not, it fails with a message like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;expected: #&amp;lt;Money @value=5.55 @currency=:USD&amp;gt;&#xA;     got: #&amp;lt;Money @value=1.11 @currency=:USD&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Built-in matchers&lt;/h2&gt; &#xA;&lt;h3&gt;Equivalence&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to eq(expected)  # passes if actual == expected&#xA;expect(actual).to eql(expected) # passes if actual.eql?(expected)&#xA;expect(actual).not_to eql(not_expected) # passes if not(actual.eql?(expected))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The new &lt;code&gt;expect&lt;/code&gt; syntax no longer supports the &lt;code&gt;==&lt;/code&gt; matcher.&lt;/p&gt; &#xA;&lt;h3&gt;Identity&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to be(expected)    # passes if actual.equal?(expected)&#xA;expect(actual).to equal(expected) # passes if actual.equal?(expected)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Comparisons&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to be &amp;gt;  expected&#xA;expect(actual).to be &amp;gt;= expected&#xA;expect(actual).to be &amp;lt;= expected&#xA;expect(actual).to be &amp;lt;  expected&#xA;expect(actual).to be_within(delta).of(expected)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Regular expressions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to match(/expression/)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The new &lt;code&gt;expect&lt;/code&gt; syntax no longer supports the &lt;code&gt;=~&lt;/code&gt; matcher.&lt;/p&gt; &#xA;&lt;h3&gt;Types/classes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to be_an_instance_of(expected) # passes if actual.class == expected&#xA;expect(actual).to be_a(expected)              # passes if actual.kind_of?(expected)&#xA;expect(actual).to be_an(expected)             # an alias for be_a&#xA;expect(actual).to be_a_kind_of(expected)      # another alias&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Truthiness&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to be_truthy   # passes if actual is truthy (not nil or false)&#xA;expect(actual).to be true     # passes if actual == true&#xA;expect(actual).to be_falsy    # passes if actual is falsy (nil or false)&#xA;expect(actual).to be false    # passes if actual == false&#xA;expect(actual).to be_nil      # passes if actual is nil&#xA;expect(actual).to_not be_nil  # passes if actual is not nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Expecting errors&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect { ... }.to raise_error&#xA;expect { ... }.to raise_error(ErrorClass)&#xA;expect { ... }.to raise_error(&#34;message&#34;)&#xA;expect { ... }.to raise_error(ErrorClass, &#34;message&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Expecting throws&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect { ... }.to throw_symbol&#xA;expect { ... }.to throw_symbol(:symbol)&#xA;expect { ... }.to throw_symbol(:symbol, &#39;value&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yielding&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect { |b| 5.tap(&amp;amp;b) }.to yield_control # passes regardless of yielded args&#xA;&#xA;expect { |b| yield_if_true(true, &amp;amp;b) }.to yield_with_no_args # passes only if no args are yielded&#xA;&#xA;expect { |b| 5.tap(&amp;amp;b) }.to yield_with_args(5)&#xA;expect { |b| 5.tap(&amp;amp;b) }.to yield_with_args(Integer)&#xA;expect { |b| &#34;a string&#34;.tap(&amp;amp;b) }.to yield_with_args(/str/)&#xA;&#xA;expect { |b| [1, 2, 3].each(&amp;amp;b) }.to yield_successive_args(1, 2, 3)&#xA;expect { |b| { :a =&amp;gt; 1, :b =&amp;gt; 2 }.each(&amp;amp;b) }.to yield_successive_args([:a, 1], [:b, 2])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Predicate matchers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(actual).to be_xxx         # passes if actual.xxx?&#xA;expect(actual).to have_xxx(:arg) # passes if actual.has_xxx?(:arg)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ranges (Ruby &amp;gt;= 1.9 only)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(1..10).to cover(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Collection membership&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# exact order, entire collection&#xA;expect(actual).to eq(expected)&#xA;&#xA;# exact order, partial collection (based on an exact position)&#xA;expect(actual).to start_with(expected)&#xA;expect(actual).to end_with(expected)&#xA;&#xA;# any order, entire collection&#xA;expect(actual).to match_array(expected)&#xA;&#xA;# You can also express this by passing the expected elements&#xA;# as individual arguments&#xA;expect(actual).to contain_exactly(expected_element1, expected_element2)&#xA;&#xA; # any order, partial collection&#xA;expect(actual).to include(expected)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect([1, 2, 3]).to eq([1, 2, 3])            # Order dependent equality check&#xA;expect([1, 2, 3]).to include(1)               # Exact ordering, partial collection matches&#xA;expect([1, 2, 3]).to include(2, 3)            #&#xA;expect([1, 2, 3]).to start_with(1)            # As above, but from the start of the collection&#xA;expect([1, 2, 3]).to start_with(1, 2)         #&#xA;expect([1, 2, 3]).to end_with(3)              # As above but from the end of the collection&#xA;expect([1, 2, 3]).to end_with(2, 3)           #&#xA;expect({:a =&amp;gt; &#39;b&#39;}).to include(:a =&amp;gt; &#39;b&#39;)     # Matching within hashes&#xA;expect(&#34;this string&#34;).to include(&#34;is str&#34;)    # Matching within strings&#xA;expect(&#34;this string&#34;).to start_with(&#34;this&#34;)   #&#xA;expect(&#34;this string&#34;).to end_with(&#34;ring&#34;)     #&#xA;expect([1, 2, 3]).to contain_exactly(2, 3, 1) # Order independent matches&#xA;expect([1, 2, 3]).to match_array([3, 2, 1])   #&#xA;&#xA;# Order dependent compound matchers&#xA;expect(&#xA;  [{:a =&amp;gt; &#39;hash&#39;},{:a =&amp;gt; &#39;another&#39;}]&#xA;).to match([a_hash_including(:a =&amp;gt; &#39;hash&#39;), a_hash_including(:a =&amp;gt; &#39;another&#39;)])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;should&lt;/code&gt; syntax&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the &lt;code&gt;expect&lt;/code&gt; syntax, rspec-expectations continues to support the &lt;code&gt;should&lt;/code&gt; syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;actual.should eq expected&#xA;actual.should be &amp;gt; 3&#xA;[1, 2, 3].should_not include 4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/rspec/rspec-expectations/raw/main/Should.md&#34;&gt;detailed information on the &lt;code&gt;should&lt;/code&gt; syntax and its usage.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compound Matcher Expressions&lt;/h2&gt; &#xA;&lt;p&gt;You can also create compound matcher expressions using &lt;code&gt;and&lt;/code&gt; or &lt;code&gt;or&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect(alphabet).to start_with(&#34;a&#34;).and end_with(&#34;z&#34;)&#xA;expect(stoplight.color).to eq(&#34;red&#34;).or eq(&#34;green&#34;).or eq(&#34;yellow&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Composing Matchers&lt;/h2&gt; &#xA;&lt;p&gt;Many of the built-in matchers are designed to take matchers as arguments, to allow you to flexibly specify only the essential aspects of an object or data structure. In addition, all of the built-in matchers have one or more aliases that provide better phrasing for when they are used as arguments to another matcher.&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;expect { k += 1.05 }.to change { k }.by( a_value_within(0.1).of(1.0) )&#xA;&#xA;expect { s = &#34;barn&#34; }.to change { s }&#xA;  .from( a_string_matching(/foo/) )&#xA;  .to( a_string_matching(/bar/) )&#xA;&#xA;expect([&#34;barn&#34;, 2.45]).to contain_exactly(&#xA;  a_value_within(0.1).of(2.5),&#xA;  a_string_starting_with(&#34;bar&#34;)&#xA;)&#xA;&#xA;expect([&#34;barn&#34;, &#34;food&#34;, 2.45]).to end_with(&#xA;  a_string_matching(&#34;foo&#34;),&#xA;  a_value &amp;gt; 2&#xA;)&#xA;&#xA;expect([&#34;barn&#34;, 2.45]).to include( a_string_starting_with(&#34;bar&#34;) )&#xA;&#xA;expect(:a =&amp;gt; &#34;food&#34;, :b =&amp;gt; &#34;good&#34;).to include(:a =&amp;gt; a_string_matching(/foo/))&#xA;&#xA;hash = {&#xA;  :a =&amp;gt; {&#xA;    :b =&amp;gt; [&#34;foo&#34;, 5],&#xA;    :c =&amp;gt; { :d =&amp;gt; 2.05 }&#xA;  }&#xA;}&#xA;&#xA;expect(hash).to match(&#xA;  :a =&amp;gt; {&#xA;    :b =&amp;gt; a_collection_containing_exactly(&#xA;      a_string_starting_with(&#34;f&#34;),&#xA;      an_instance_of(Integer)&#xA;    ),&#xA;    :c =&amp;gt; { :d =&amp;gt; (a_value &amp;lt; 3) }&#xA;  }&#xA;)&#xA;&#xA;expect { |probe|&#xA;  [1, 2, 3].each(&amp;amp;probe)&#xA;}.to yield_successive_args( a_value &amp;lt; 2, 2, a_value &amp;gt; 2 )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage outside rspec-core&lt;/h2&gt; &#xA;&lt;p&gt;You always need to load &lt;code&gt;rspec/expectations&lt;/code&gt; even if you only want to use one part of the library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;rspec/expectations&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then simply include &lt;code&gt;RSpec::Matchers&lt;/code&gt; in any class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MyClass&#xA;  include RSpec::Matchers&#xA;&#xA;  def do_something(arg)&#xA;    expect(arg).to be &amp;gt; 0&#xA;    # do other stuff&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Also see&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rspec/rspec&#34;&gt;https://github.com/rspec/rspec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rspec/rspec-core&#34;&gt;https://github.com/rspec/rspec-core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rspec/rspec-mocks&#34;&gt;https://github.com/rspec/rspec-mocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rspec/rspec-rails&#34;&gt;https://github.com/rspec/rspec-rails&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>