<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-01T01:54:45Z</updated>
  <subtitle>Monthly Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Shopify/liquid</title>
    <updated>2022-09-01T01:54:45Z</updated>
    <id>tag:github.com,2022-09-01:/Shopify/liquid</id>
    <link href="https://github.com/Shopify/liquid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Liquid markup language. Safe, customer facing template language for flexible web apps.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/Shopify/liquid&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/Shopify/liquid.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://inch-ci.org/github/Shopify/liquid&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/Shopify/liquid.svg?branch=master&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Liquid template engine&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Shopify/liquid/master/CONTRIBUTING.md&#34;&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Shopify/liquid/master/History.md&#34;&gt;Version history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shopify.dev/api/liquid&#34;&gt;Liquid documentation from Shopify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/liquid/wiki&#34;&gt;Liquid Wiki at GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://liquidmarkup.org/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Liquid is a template engine which was written with very specific requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It has to have beautiful and simple markup. Template engines which don&#39;t produce good looking markup are no fun to use.&lt;/li&gt; &#xA; &lt;li&gt;It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don&#39;t want to run code on your server which your users wrote.&lt;/li&gt; &#xA; &lt;li&gt;It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why you should use Liquid&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You want to allow your users to edit the appearance of your application but don&#39;t want them to run &lt;strong&gt;insecure code on your server&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You want to render templates directly from the database.&lt;/li&gt; &#xA; &lt;li&gt;You like smarty (PHP) style template engines.&lt;/li&gt; &#xA; &lt;li&gt;You need a template engine which does HTML just as well as emails.&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t like the markup of your current templating engine.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What does it look like?&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;ul id=&#34;products&#34;&amp;gt;&#xA;  {% for product in products %}&#xA;    &amp;lt;li&amp;gt;&#xA;      &amp;lt;h2&amp;gt;{{ product.name }}&amp;lt;/h2&amp;gt;&#xA;      Only {{ product.price | price }}&#xA;&#xA;      {{ product.description | prettyprint | paragraph }}&#xA;    &amp;lt;/li&amp;gt;&#xA;  {% endfor %}&#xA;&amp;lt;/ul&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use Liquid&lt;/h2&gt; &#xA;&lt;p&gt;Install Liquid by adding &lt;code&gt;gem &#39;liquid&#39;&lt;/code&gt; to your gemfile.&lt;/p&gt; &#xA;&lt;p&gt;Liquid supports a very simple API based around the Liquid::Template class. For standard use you can just pass it the content of a file and call render with a parameters hash.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@template = Liquid::Template.parse(&#34;hi {{name}}&#34;) # Parses and compiles the template&#xA;@template.render(&#39;name&#39; =&amp;gt; &#39;tobi&#39;)                # =&amp;gt; &#34;hi tobi&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Error Modes&lt;/h3&gt; &#xA;&lt;p&gt;Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted. Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make it very hard to debug and can lead to unexpected behaviour.&lt;/p&gt; &#xA;&lt;p&gt;Liquid also comes with a stricter parser that can be used when editing templates to give better error messages when templates are invalid. You can enable this new parser like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Liquid::Template.error_mode = :strict # Raises a SyntaxError when invalid syntax is used&#xA;Liquid::Template.error_mode = :warn # Adds strict errors to template.errors but continues as normal&#xA;Liquid::Template.error_mode = :lax # The default mode, accepts almost anything.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to set the error mode only on specific templates you can pass &lt;code&gt;:error_mode&lt;/code&gt; as an option to &lt;code&gt;parse&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Liquid::Template.parse(source, error_mode: :strict)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is useful for doing things like enabling strict mode only in the theme editor.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended that you enable &lt;code&gt;:strict&lt;/code&gt; or &lt;code&gt;:warn&lt;/code&gt; mode on new apps to stop invalid templates from being created. It is also recommended that you use it in the template editors of existing apps to give editors better error messages.&lt;/p&gt; &#xA;&lt;h3&gt;Undefined variables and filters&lt;/h3&gt; &#xA;&lt;p&gt;By default, the renderer doesn&#39;t raise or in any other way notify you if some variables or filters are missing, i.e. not passed to the &lt;code&gt;render&lt;/code&gt; method. You can improve this situation by passing &lt;code&gt;strict_variables: true&lt;/code&gt; and/or &lt;code&gt;strict_filters: true&lt;/code&gt; options to the &lt;code&gt;render&lt;/code&gt; method. When one of these options is set to true, all errors about undefined variables and undefined filters will be stored in &lt;code&gt;errors&lt;/code&gt; array of a &lt;code&gt;Liquid::Template&lt;/code&gt; instance. Here are some examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;template = Liquid::Template.parse(&#34;{{x}} {{y}} {{z.a}} {{z.b}}&#34;)&#xA;template.render({ &#39;x&#39; =&amp;gt; 1, &#39;z&#39; =&amp;gt; { &#39;a&#39; =&amp;gt; 2 } }, { strict_variables: true })&#xA;#=&amp;gt; &#39;1  2 &#39; # when a variable is undefined, it&#39;s rendered as nil&#xA;template.errors&#xA;#=&amp;gt; [#&amp;lt;Liquid::UndefinedVariable: Liquid error: undefined variable y&amp;gt;, #&amp;lt;Liquid::UndefinedVariable: Liquid error: undefined variable b&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;template = Liquid::Template.parse(&#34;{{x | filter1 | upcase}}&#34;)&#xA;template.render({ &#39;x&#39; =&amp;gt; &#39;foo&#39; }, { strict_filters: true })&#xA;#=&amp;gt; &#39;&#39; # when at least one filter in the filter chain is undefined, a whole expression is rendered as nil&#xA;template.errors&#xA;#=&amp;gt; [#&amp;lt;Liquid::UndefinedFilter: Liquid error: undefined filter filter1&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to raise on a first exception instead of pushing all of them in &lt;code&gt;errors&lt;/code&gt;, you can use &lt;code&gt;render!&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;template = Liquid::Template.parse(&#34;{{x}} {{y}}&#34;)&#xA;template.render!({ &#39;x&#39; =&amp;gt; 1}, { strict_variables: true })&#xA;#=&amp;gt; Liquid::UndefinedVariable: Liquid error: undefined variable y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage tracking&lt;/h3&gt; &#xA;&lt;p&gt;To help track usages of a feature or code path in production, we have released opt-in usage tracking. To enable this, we provide an empty &lt;code&gt;Liquid:: Usage.increment&lt;/code&gt; method which you can customize to your needs. The feature is well suited to &lt;a href=&#34;https://github.com/Shopify/statsd-instrument&#34;&gt;https://github.com/Shopify/statsd-instrument&lt;/a&gt;. However, the choice of implementation is up to you.&lt;/p&gt; &#xA;&lt;p&gt;Once you have enabled usage tracking, we recommend reporting any events through Github Issues that your system may be logging. It is highly likely this event has been added to consider deprecating or improving code specific to this event, so please raise any concerns.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Homebrew/homebrew-cask</title>
    <updated>2022-09-01T01:54:45Z</updated>
    <id>tag:github.com,2022-09-01:/Homebrew/homebrew-cask</id>
    <link href="https://github.com/Homebrew/homebrew-cask" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üçª A CLI workflow for the administration of macOS applications distributed as binaries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Cask&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;‚ÄúTo install, drag this icon‚Ä¶‚Äù no more!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Homebrew Cask extends &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; and brings its elegance, simplicity, and speed to the installation and management of GUI macOS applications such as Atom and Google Chrome.&lt;/p&gt; &#xA;&lt;p&gt;We do this by providing a friendly CLI workflow for the administration of macOS applications distributed as binaries.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Homebrew/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-discussions-informational&#34; alt=&#34;Join us on GitHub discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Let‚Äôs try it!&lt;/h2&gt; &#xA;&lt;p&gt;To start using Homebrew Cask, you just need &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/FNNM6WL.gif&#34; width=&#34;547&#34; alt=&#34;Installing and uninstalling Atom (animated gif)&#34;&gt; &#xA;&lt;p&gt;Slower, now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew install alfred&#xA;==&amp;gt; Downloading https://cachefly.alfredapp.com/Alfred_4.2.1_1187.dmg&#xA;######################################################################## 100.0%&#xA;==&amp;gt; Verifying SHA-256 checksum for Cask &#39;alfred&#39;.&#xA;==&amp;gt; Installing Cask alfred&#xA;==&amp;gt; Moving App &#39;Alfred 4.app&#39; to &#39;/Applications/Alfred 4.app&#39;.&#xA;üç∫  alfred was successfully installed!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And there we have it. An application installed with one quick command: no clicking, no dragging, no dropping.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find basic documentation on using Homebrew Cask in &lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/USAGE.md&#34;&gt;USAGE.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Want to contribute a Cask? Awesome! See &lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;More project-related details and discussion are available in the &lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/faq/closing_issues_without_review.md&#34;&gt;&lt;strong&gt;If you ignore this guide, your issue may be closed without review&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before reporting a bug, run &lt;code&gt;brew update-reset &amp;amp;&amp;amp; brew update&lt;/code&gt; and try your command again. This is a fix-all that will reset the state of all your taps, ensuring the problem isn‚Äôt an outdated setup on your side.&lt;/p&gt; &#xA;&lt;p&gt;If your issue persists, &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/search?type=Issues&#34;&gt;search for it&lt;/a&gt; before opening a new one. If you find an open issue and have any new information, add it in a comment. If you find a closed issue, try the solutions there.&lt;/p&gt; &#xA;&lt;p&gt;If the issue is still not solved, see the guides for common problems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/reporting_bugs/error_examples.md&#34;&gt;Examples of common errors and their solutions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/reporting_bugs/error_examples.md#curl-error&#34;&gt;&lt;code&gt;curl&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/reporting_bugs/error_examples.md#permission-denied-error&#34;&gt;&lt;code&gt;Permission denied&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/reporting_bugs/error_examples.md#checksum-does-not-match-error&#34;&gt;&lt;code&gt;Checksum does not match&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/reporting_bugs/error_examples.md#source-is-not-there-error&#34;&gt;&lt;code&gt;source is not there&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/doc/reporting_bugs/error_examples.md#wrong-number-of-arguments-error&#34;&gt;&lt;code&gt;wrong number of arguments&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.brew.sh/FAQ#why-arent-some-apps-included-during-brew-upgrade&#34;&gt;App isn‚Äôt included in &lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.brew.sh/FAQ#why-cant-i-open-a-mac-app-from-an-unidentified-developer&#34;&gt;The app can‚Äôt be opened because it is from an unidentified developer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/issues/new?template=01_bug_report.yml&#34;&gt;My problem isn‚Äôt listed&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues requesting new casks will be closed. If you want a cask added to the main repositories, &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/raw/HEAD/CONTRIBUTING.md#adding-a-cask&#34;&gt;submit a pull request&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For a feature request, &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/issues/new?assignees=&amp;amp;labels=&amp;amp;template=02_feature_request.yml&#34;&gt;use this template&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Questions? Wanna chat?&lt;/h2&gt; &#xA;&lt;p&gt;We‚Äôre really rather friendly! Here are the best places to talk about the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Homebrew/homebrew-cask/issues/new/choose&#34;&gt;Open an issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join us on &lt;a href=&#34;https://github.com/Homebrew/discussions&#34;&gt;GitHub discussions (forum)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Code is under the &lt;a href=&#34;https://raw.githubusercontent.com/Homebrew/homebrew-cask/master/LICENSE&#34;&gt;BSD 2 Clause (NetBSD) license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>huginn/huginn</title>
    <updated>2022-09-01T01:54:45Z</updated>
    <id>tag:github.com,2022-09-01:/huginn/huginn</id>
    <link href="https://github.com/huginn/huginn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create agents that monitor and act on your behalf. Your agents are standing by!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/huginn/huginn/master/media/huginn-logo.png&#34; alt=&#34;Huginn&#34; title=&#34;Your agents are standing by.&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What is Huginn?&lt;/h2&gt; &#xA;&lt;p&gt;Huginn is a system for building agents that perform automated tasks for you online. They can read the web, watch for events, and take actions on your behalf. Huginn&#39;s Agents create and consume events, propagating them along a directed graph. Think of it as a hackable version of IFTTT or Zapier on your own server. You always know who has your data. You do.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/the-name.png&#34; alt=&#34;the origin of the name&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Here are some of the things that you can do with Huginn:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Track the weather and get an email when it&#39;s going to rain (or snow) tomorrow (&#34;Don&#39;t forget your umbrella!&#34;)&lt;/li&gt; &#xA; &lt;li&gt;List terms that you care about and receive email when their occurrence on Twitter changes. (For example, want to know when something interesting has happened in the world of Machine Learning? Huginn will watch the term &#34;machine learning&#34; on Twitter and tell you when there is a spike in discussion.)&lt;/li&gt; &#xA; &lt;li&gt;Watch for air travel or shopping deals&lt;/li&gt; &#xA; &lt;li&gt;Follow your project names on Twitter and get updates when people mention them&lt;/li&gt; &#xA; &lt;li&gt;Scrape websites and receive email when they change&lt;/li&gt; &#xA; &lt;li&gt;Connect to Adioso, HipChat, Growl, FTP, IMAP, Jabber, JIRA, MQTT, nextbus, Pushbullet, Pushover, RSS, Bash, Slack, StubHub, translation APIs, Twilio, Twitter, and Weibo, to name a few.&lt;/li&gt; &#xA; &lt;li&gt;Send digest email with things that you care about at specific times during the day&lt;/li&gt; &#xA; &lt;li&gt;Track counts of high frequency events and send an SMS within moments when they spike, such as the term &#34;san francisco emergency&#34;&lt;/li&gt; &#xA; &lt;li&gt;Send and receive WebHooks&lt;/li&gt; &#xA; &lt;li&gt;Run custom JavaScript or CoffeeScript functions&lt;/li&gt; &#xA; &lt;li&gt;Track your location over time&lt;/li&gt; &#xA; &lt;li&gt;Create Amazon Mechanical Turk workflows as the inputs, or outputs, of agents (the Amazon Turk Agent is called the &#34;HumanTaskAgent&#34;). For example: &#34;Once a day, ask 5 people for a funny cat photo; send the results to 5 more people to be rated; send the top-rated photo to 5 people for a funny caption; send to 5 final people to rate for funniest caption; finally, post the best captioned photo on my blog.&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/huginn/huginn?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://changelog.com/podcast/199&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/changelog-%23199-lightgrey.svg?sanitize=true&#34; alt=&#34;Changelog #199&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join us in our &lt;a href=&#34;https://gitter.im/huginn/huginn&#34;&gt;Gitter room&lt;/a&gt; to discuss the project.&lt;/p&gt; &#xA;&lt;h3&gt;Join us!&lt;/h3&gt; &#xA;&lt;p&gt;Want to help with Huginn? All contributions are encouraged! You could make UI improvements, &lt;a href=&#34;https://github.com/huginn/huginn/wiki/Creating-a-new-agent&#34;&gt;add new Agents&lt;/a&gt;, write &lt;a href=&#34;https://github.com/huginn/huginn/wiki&#34;&gt;documentation and tutorials&lt;/a&gt;, or try tackling &lt;a href=&#34;https://github.com/huginn/huginn/issues?direction=desc&amp;amp;labels=help+wanted&amp;amp;page=1&amp;amp;sort=created&amp;amp;state=open&#34;&gt;issues tagged with #&#34;help wanted&#34;&lt;/a&gt;. Please fork, add specs, and send pull requests!&lt;/p&gt; &#xA;&lt;p&gt;Really want a fix or feature? Want to solve some community issues and earn some extra coffee money? Take a look at the &lt;a href=&#34;https://www.bountysource.com/trackers/282580-huginn&#34;&gt;current bounties on Bountysource&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Have an awesome idea but not feeling quite up to contributing yet? Head over to our &lt;a href=&#34;https://github.com/huginn/huginn/issues/353&#34;&gt;Official &#39;suggest an agent&#39; thread &lt;/a&gt; and tell us!&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Please checkout the &lt;a href=&#34;http://vimeo.com/61976251&#34;&gt;Huginn Introductory Screencast&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;And now, some example screenshots. Below them are instructions to get you started.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/your-agents.png&#34; alt=&#34;Example list of agents&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/diagram.png&#34; alt=&#34;Event flow diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/peaks.png&#34; alt=&#34;Detecting peaks in Twitter&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/my-locations.png&#34; alt=&#34;Logging your location over time&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/new-agent.png&#34; alt=&#34;Making a new agent&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;The quickest and easiest way to check out Huginn is to use the official Docker image. Have a look at the &lt;a href=&#34;https://github.com/huginn/huginn/raw/master/doc/docker/install.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Local Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you just want to play around, you can simply fork this repository, then perform the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;git remote add upstream https://github.com/huginn/huginn.git&lt;/code&gt; to add the main repository as a remote for your fork.&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; (&lt;code&gt;cp .env.example .env&lt;/code&gt;) and edit &lt;code&gt;.env&lt;/code&gt;, at least updating the &lt;code&gt;APP_SECRET_TOKEN&lt;/code&gt; variable.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that you have MySQL or PostgreSQL installed. (On a Mac, the easiest way is with &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;. If you&#39;re going to use PostgreSQL, you&#39;ll need to prepend all commands below with &lt;code&gt;DATABASE_ADAPTER=postgresql&lt;/code&gt;.)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bundle&lt;/code&gt; to install dependencies&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bundle exec rake db:create&lt;/code&gt;, &lt;code&gt;bundle exec rake db:migrate&lt;/code&gt;, and then &lt;code&gt;bundle exec rake db:seed&lt;/code&gt; to create a development database with some example Agents.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bundle exec foreman start&lt;/code&gt;, visit &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt;, and login with the username of &lt;code&gt;admin&lt;/code&gt; and the password of &lt;code&gt;password&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Setup some Agents!&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://github.com/huginn/huginn/wiki&#34;&gt;wiki&lt;/a&gt; for usage examples and to get started making new Agents.&lt;/li&gt; &#xA; &lt;li&gt;Periodically run &lt;code&gt;git fetch upstream&lt;/code&gt; and then &lt;code&gt;git checkout master &amp;amp;&amp;amp; git merge upstream/master&lt;/code&gt; to merge in the newest version of Huginn.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: By default, email messages are intercepted in the &lt;code&gt;development&lt;/code&gt; Rails environment, which is what you just setup. You can view them at &lt;a href=&#34;http://localhost:3000/letter_opener&#34;&gt;http://localhost:3000/letter_opener&lt;/a&gt;. If you&#39;d like to send real email via SMTP when playing with Huginn locally, set &lt;code&gt;SEND_EMAIL_IN_DEVELOPMENT&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If you need more detailed instructions, see the &lt;a href=&#34;https://github.com/huginn/huginn/wiki/Novice-setup-guide&#34;&gt;Novice setup guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Develop&lt;/h3&gt; &#xA;&lt;p&gt;All agents have specs! And there&#39;s also acceptance tests that simulate running Huginn in a headless browser.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install PhantomJS 2.1.1 or greater: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;Node Package Manager&lt;/a&gt;: &lt;code&gt;npm install phantomjs&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; on OSX &lt;code&gt;brew install phantomjs&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run all specs with &lt;code&gt;bundle exec rspec&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run a specific spec with &lt;code&gt;bundle exec rspec path/to/specific/test_spec.rb&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Read more about rspec for rails &lt;a href=&#34;https://github.com/rspec/rspec-rails&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using Huginn Agent gems&lt;/h2&gt; &#xA;&lt;p&gt;Huginn Agents can now be written as external gems and be added to your Huginn installation with the &lt;code&gt;ADDITIONAL_GEMS&lt;/code&gt; environment variable. See the &lt;code&gt;Additional Agent gems&lt;/code&gt; section of &lt;code&gt;.env.example&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to write your own Huginn Agent Gem, please see &lt;a href=&#34;https://github.com/huginn/huginn_agent&#34;&gt;huginn_agent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our general intention is to encourage complex and specific Agents to be written as Gems, while continuing to add new general-purpose Agents to the core Huginn repository.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/huginn/huginn/wiki#deploying-huginn&#34;&gt;the Huginn Wiki&lt;/a&gt; for detailed deployment strategies for different providers.&lt;/p&gt; &#xA;&lt;h3&gt;Heroku&lt;/h3&gt; &#xA;&lt;p&gt;Try Huginn on Heroku: &lt;a href=&#34;https://heroku.com/deploy&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.png&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt; (Takes a few minutes to setup. Read the &lt;a href=&#34;https://github.com/huginn/huginn/raw/master/doc/heroku/install.md&#34;&gt;documentation&lt;/a&gt; while you are waiting and be sure to click &#39;View it&#39; after launch!)&lt;/p&gt; &#xA;&lt;p&gt;Huginn launches on the free version of Heroku &lt;a href=&#34;https://github.com/huginn/huginn/raw/master/doc/heroku/install.md&#34;&gt;with significant limitations&lt;/a&gt;. For non-experimental use, we strongly recommend Heroku&#39;s 1GB paid plan or our Docker container.&lt;/p&gt; &#xA;&lt;h3&gt;OpenShift&lt;/h3&gt; &#xA;&lt;h4&gt;OpenShift Online&lt;/h4&gt; &#xA;&lt;p&gt;Try Huginn on OpenShift Online&lt;/p&gt; &#xA;&lt;p&gt;Create a new app with either &lt;code&gt;mysql&lt;/code&gt; or &lt;code&gt;postgres&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oc new-app -f https://raw.githubusercontent.com/huginn/huginn/master/openshift/templates/huginn-mysql.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oc new-app -f https://raw.githubusercontent.com/huginn/huginn/master/openshift/templates/huginn-postgresql.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can also use the web console to import either json file by going to &#34;Add to Project&#34; -&amp;gt; &#34;Import YAML/JSON&#34;.&lt;/p&gt; &#xA;&lt;p&gt;If you are on the Starter plan, make sure to follow the &lt;a href=&#34;https://docs.openshift.com/online/getting_started/beyond_the_basics.html#btb-creating-a-new-application-from-source-code&#34;&gt;guide&lt;/a&gt; to remove any existing application.&lt;/p&gt; &#xA;&lt;p&gt;The templates should work on a v3 installation or the current v4 online.&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation on any server&lt;/h3&gt; &#xA;&lt;p&gt;Have a look at the &lt;a href=&#34;https://github.com/huginn/huginn/raw/master/doc/manual/README.md&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Optional Setup&lt;/h3&gt; &#xA;&lt;h4&gt;Setup for private development&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/huginn/huginn/wiki/Private-development-instructions&#34;&gt;private development instructions&lt;/a&gt; on the wiki.&lt;/p&gt; &#xA;&lt;h4&gt;Enable the WeatherAgent&lt;/h4&gt; &#xA;&lt;p&gt;In order to use the WeatherAgent you need an &lt;a href=&#34;http://www.wunderground.com/weather/api/&#34;&gt;API key with Wunderground&lt;/a&gt;. Signup for one and then change the value of &lt;code&gt;api_key: your-key&lt;/code&gt; in your seeded WeatherAgent.&lt;/p&gt; &#xA;&lt;p&gt;Note, Wunderground no longer offers free API keys. You can still use the WeatherAgent by setting the service key to darksky, and getting an &lt;a href=&#34;https://darksky.net/dev&#34;&gt;API key from DarkSky&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Disable SSL&lt;/h4&gt; &#xA;&lt;p&gt;We assume your deployment will run over SSL. This is a very good idea! However, if you wish to turn this off, you&#39;ll probably need to edit &lt;code&gt;config/initializers/devise.rb&lt;/code&gt; and modify the line containing &lt;code&gt;config.rememberable_options = { :secure =&amp;gt; true }&lt;/code&gt;. You will also need to edit &lt;code&gt;config/environments/production.rb&lt;/code&gt; and modify the value of &lt;code&gt;config.force_ssl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Huginn is provided under the MIT License.&lt;/p&gt; &#xA;&lt;p&gt;Huginn was originally created by &lt;a href=&#34;https://github.com/cantino&#34;&gt;@cantino&lt;/a&gt; in 2013. Since then, many people&#39;s dedicated contributions have made it what it is today.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/huginn/huginn&#34;&gt;&lt;img src=&#34;https://travis-ci.org/huginn/huginn.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/huginn/huginn&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/huginn/huginn/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gemnasium.com/huginn/huginn&#34;&gt;&lt;img src=&#34;https://gemnasium.com/huginn/huginn.svg?sanitize=true&#34; alt=&#34;Dependency Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bountysource.com/trackers/282580-huginn?utm_source=282580&amp;amp;utm_medium=shield&amp;amp;utm_campaign=TRACKER_BADGE&#34;&gt;&lt;img src=&#34;https://www.bountysource.com/badge/tracker?tracker_id=282580&#34; alt=&#34;Bountysource&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>