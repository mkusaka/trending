<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-19T01:47:33Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>derrickreimer/sequenced</title>
    <updated>2022-08-19T01:47:33Z</updated>
    <id>tag:github.com,2022-08-19:/derrickreimer/sequenced</id>
    <link href="https://github.com/derrickreimer/sequenced" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate scoped sequential IDs for ActiveRecord models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sequenced&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/derrickreimer/sequenced/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/derrickreimer/sequenced/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;.github/workflows/ci.yml&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/djreimer/sequenced&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/djreimer/sequenced.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/rb/sequenced&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/sequenced.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sequenced is a simple gem that generates scoped sequential IDs for ActiveRecord models. This gem provides an &lt;code&gt;acts_as_sequenced&lt;/code&gt; macro that automatically assigns a unique, sequential ID to each record. The sequential ID is not a replacement for the database primary key, but rather adds another way to retrieve the object without exposing the primary key.&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s generally a bad practice to expose your primary keys to the world in your URLs. However, it is often appropriate to number objects in sequence (in the context of a parent object).&lt;/p&gt; &#xA;&lt;p&gt;For example, given a Question model that has many Answers, it makes sense to number answers sequentially for each individual question. You can achieve this with Sequenced in one line of code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Question &amp;lt; ActiveRecord::Base&#xA;  has_many :answers&#xA;end&#xA;&#xA;class Answer &amp;lt; ActiveRecord::Base&#xA;  belongs_to :question&#xA;  acts_as_sequenced scope: :question_id&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the gem to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;sequenced&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the gem with bundler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To add a sequential ID to a model, first add an integer column called &lt;code&gt;sequential_id&lt;/code&gt; to the model (or you many name the column anything you like and override the default). For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rails generate migration add_sequential_id_to_answers sequential_id:integer&#xA;rake db:migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, call the &lt;code&gt;acts_as_sequenced&lt;/code&gt; macro in your model class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Answer &amp;lt; ActiveRecord::Base&#xA;  belongs_to :question&#xA;  acts_as_sequenced scope: :question_id&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;scope&lt;/code&gt; option can be any attribute, but will typically be the foreign key of an associated parent object. You can even scope by multiple columns for polymorphic relationships:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Answer &amp;lt; ActiveRecord::Base&#xA;  belongs_to :questionable, :polymorphic =&amp;gt; true&#xA;  acts_as_sequenced scope: [:questionable_id, :questionable_type]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple sequences can be defined by using the macro multiple times:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Answer &amp;lt; ActiveRecord::Base&#xA;  belongs_to :account&#xA;  belongs_to :question&#xA;&#xA;  acts_as_sequenced column: :question_answer_number, scope: :question_id&#xA;  acts_as_sequenced column: :account_answer_number, scope: :account_id&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Schema and data integrity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This gem is only concurrent-safe for PostgreSQL databases&lt;/strong&gt;. For other database systems, unexpected behavior may occur if you attempt to create records concurrently.&lt;/p&gt; &#xA;&lt;p&gt;You can mitigate this somewhat by applying a unique index to your sequential ID column (or a multicolumn unique index on sequential ID and scope columns, if you are using scopes). This will ensure that you can never have duplicate sequential IDs within a scope, causing concurrent updates to instead raise a uniqueness error at the database-level.&lt;/p&gt; &#xA;&lt;p&gt;It is also a good idea to apply a not-null constraint to your sequential ID column as well if you never intend to skip it.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example migration for a model that has a &lt;code&gt;sequential_id&lt;/code&gt; scoped to a &lt;code&gt;burrow_id&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/db/migrations/20151120190645_create_badgers.rb&#xA;class CreateBadgers &amp;lt; ActiveRecord::Migration&#xA;  def change&#xA;    create_table :badgers do |t|&#xA;      t.integer :sequential_id, null: false&#xA;      t.integer :burrow_id&#xA;    end&#xA;&#xA;    add_index :badgers, [:sequential_id, :burrow_id], unique: true&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are adding a sequenced column to an existing table, you need to account for that in your migration.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example migration that adds and sets the &lt;code&gt;sequential_id&lt;/code&gt; column based on the current database records:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/db/migrations/20151120190645_add_sequental_id_to_badgers.rb&#xA;class AddSequentalIdToBadgers &amp;lt; ActiveRecord::Migration&#xA;  add_column :badgers, :sequential_id, :integer&#xA;&#xA;  execute &amp;lt;&amp;lt;~SQL&#xA;    UPDATE badgers&#xA;    SET sequential_id = old_badgers.next_sequential_id&#xA;    FROM (&#xA;      SELECT id, ROW_NUMBER()&#xA;      OVER(&#xA;        PARTITION BY burrow_id&#xA;        ORDER BY id&#xA;      ) AS next_sequential_id&#xA;      FROM badgers&#xA;    ) old_badgers&#xA;    WHERE badgers.id = old_badgers.id&#xA;  SQL&#xA;&#xA;  change_column :badgers, :sequential_id, :integer, null: false&#xA;  add_index :badgers, [:sequential_id, :burrow_id], unique: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Overriding the default sequential ID column&lt;/h3&gt; &#xA;&lt;p&gt;By default, Sequenced uses the &lt;code&gt;sequential_id&lt;/code&gt; column and assumes it already exists. If you wish to store the sequential ID in different integer column, simply specify the column name with the &lt;code&gt;column&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;acts_as_sequenced scope: :question_id, column: :my_sequential_id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Starting the sequence at a specific number&lt;/h3&gt; &#xA;&lt;p&gt;By default, Sequenced begins sequences with 1. To start at a different integer, simply set the &lt;code&gt;start_at&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;acts_as_sequenced start_at: 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also pass a lambda to the &lt;code&gt;start_at&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;acts_as_sequenced start_at: lambda { |r| r.computed_start_value }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Indexing the sequential ID column&lt;/h3&gt; &#xA;&lt;p&gt;For optimal performance, it&#39;s a good idea to index the sequential ID column on sequenced models.&lt;/p&gt; &#xA;&lt;h3&gt;Skipping sequential ID generation&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to skip generating a sequential ID under certain conditions, you may pass a lambda to the &lt;code&gt;skip&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;acts_as_sequenced skip: lambda { |r| r.score == 0 }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Suppose you have a question model that has many answers. This example demonstrates how to use Sequenced to enable access to the nested answer resource via its sequential ID.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/models/question.rb&#xA;class Question &amp;lt; ActiveRecord::Base&#xA;  has_many :answers&#xA;end&#xA;&#xA;# app/models/answer.rb&#xA;class Answer &amp;lt; ActiveRecord::Base&#xA;  belongs_to :question&#xA;  acts_as_sequenced scope: :question_id&#xA;&#xA;  # Automatically use the sequential ID in URLs&#xA;  def to_param&#xA;    self.sequential_id.to_s&#xA;  end&#xA;end&#xA;&#xA;# config/routes.rb&#xA;resources :questions do&#xA;  resources :answers&#xA;end&#xA;&#xA;# app/controllers/answers_controller.rb&#xA;class AnswersController &amp;lt; ApplicationController&#xA;  def show&#xA;    @question = Question.find(params[:question_id])&#xA;    @answer = @question.answers.find_by(sequential_id: params[:id])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, answers are accessible via their sequential IDs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://example.com/questions/5/answers/1  # Good&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;instead of by their primary keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://example.com/questions/5/answer/32454  # Bad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Added some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>brewchetta/phase-3-practice-code-challenge-animal-shelter</title>
    <updated>2022-08-19T01:47:33Z</updated>
    <id>tag:github.com,2022-08-19:/brewchetta/phase-3-practice-code-challenge-animal-shelter</id>
    <link href="https://github.com/brewchetta/phase-3-practice-code-challenge-animal-shelter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Practice Code Challenge - Pet Shelter&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;A local pet shelter has tapped you to build their database and connect it with Active Record.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;run &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Migrations&lt;/h2&gt; &#xA;&lt;p&gt;Create your migrations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Shelters&lt;/code&gt; should have a &lt;code&gt;name&lt;/code&gt; and an &lt;code&gt;address&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Pets&lt;/code&gt; should have a &lt;code&gt;name&lt;/code&gt;, an &lt;code&gt;age_in_years&lt;/code&gt;, a &lt;code&gt;species&lt;/code&gt;, a boolean for &lt;code&gt;adopted?&lt;/code&gt;, a &lt;code&gt;shelter_id&lt;/code&gt;, and a &lt;code&gt;adopter_id&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Adopters&lt;/code&gt; should have a &lt;code&gt;first_name&lt;/code&gt; and a &lt;code&gt;last_name&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;shelters&lt;/code&gt; Table&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Column&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;name&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;address&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;code&gt;pets&lt;/code&gt; Table&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Column&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;name&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;age&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;species&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;adopted?&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;shelter_id&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;adopter_id&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;code&gt;adopters&lt;/code&gt; Table&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Column&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;first_name&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;last_name&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Relationship&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What associations will this need?&lt;/li&gt; &#xA; &lt;li&gt;(i.e. &lt;code&gt;has_many&lt;/code&gt;, &lt;code&gt;has_many through&lt;/code&gt;, and &lt;code&gt;belongs_to&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shelter&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Shelter#pets&lt;/code&gt; returns all pets associated with the shelter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Shelter#adopters&lt;/code&gt; returns all the people who have adopted from this shelter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Shelter#current_pets&lt;/code&gt; returns only the pets associated with the shelter who haven&#39;t been adopted&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Shelter#adopted_pets&lt;/code&gt; returns only the pets associated with the shelter who have been adopted&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pet&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Pet#shelter&lt;/code&gt; returns an instance of the shelter that pet is associated with&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Pet#adopter&lt;/code&gt; returns an instance of the person who adopted the pet, if any&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Pet.oldest&lt;/code&gt; returns the oldest pet by age&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Pet.average_age&lt;/code&gt; returns the average age of all pets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Pet#in_dog_years&lt;/code&gt; returns the age in dog years of a pet if their species is &lt;code&gt;dog&lt;/code&gt; (one human year is roughly five dog years and yes I know this is a gross oversimplification)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adopter&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Adopter#pets&lt;/code&gt; returns all pets adopted by this person&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Adopter#shelters&lt;/code&gt; returns every shelter the person has adopted from&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Adopter#full_name&lt;/code&gt; returns the adopter&#39;s combined first and last names&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Adopter#adopt(pet)&lt;/code&gt; takes in an instance of a &lt;code&gt;Pet&lt;/code&gt;, changes the pet&#39;s &lt;code&gt;adopted?&lt;/code&gt; status to true, and associates the pet with the adopter if they&#39;re not already adopted&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Adopter#fav_pet&lt;/code&gt; returns the type of pet (species) they&#39;ve adopted most of or &lt;code&gt;nil&lt;/code&gt; if they&#39;ve adopted no pets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reminder&lt;/h2&gt; &#xA;&lt;p&gt;Even older pets need love!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rubygems/rubygems.org</title>
    <updated>2022-08-19T01:47:33Z</updated>
    <id>tag:github.com,2022-08-19:/rubygems/rubygems.org</id>
    <link href="https://github.com/rubygems/rubygems.org" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Ruby community&#39;s gem hosting service.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RubyGems.org (née Gemcutter)&lt;/h1&gt; &#xA;&lt;p&gt;The Ruby community&#39;s gem host.&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide a better API for dealing with gems&lt;/li&gt; &#xA; &lt;li&gt;Create more transparent and accessible project pages&lt;/li&gt; &#xA; &lt;li&gt;Enable the community to improve and enhance the site&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubytogether.org/&#34;&gt;&lt;img src=&#34;https://rubytogether.org/images/rubies.svg?sanitize=true&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubycentral.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rubygems/rubygems.org/master/doc/ruby_central_logo.png&#34; height=&#34;110&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org&#34;&gt;RubyGems.org&lt;/a&gt; is managed by &lt;a href=&#34;https://rubycentral.org&#34;&gt;Ruby Central&lt;/a&gt;, a community-funded organization supported by conference participation for &lt;a href=&#34;https://railsconf.org&#34;&gt;RailsConf&lt;/a&gt; and &lt;a href=&#34;https://rubyconf.org&#34;&gt;RubyConf&lt;/a&gt; through tickets and sponsorships.&lt;/p&gt; &#xA;&lt;p&gt;Hosting fees are paid by Ruby Central and CDN fees are generously donated by &lt;a href=&#34;https://fastly.com&#34;&gt;Fastly&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, &lt;a href=&#34;https://rubytogether.org&#34;&gt;RubyTogether&lt;/a&gt; sponsors individuals to work on development and operations work for RubyGems.org which augments volunteer efforts from the Ruby community.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/pages/sponsors&#34;&gt;Learn more about our sponsors and how they work together.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bundler.slack.com/&#34;&gt;Slack&lt;/a&gt;: #rubygems-org&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubygems/rfcs&#34;&gt;RFCs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:support@rubygems.org&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubygems/rubygems.org/actions/&#34;&gt;GitHub Workflow&lt;/a&gt;: &lt;a href=&#34;https://github.com/rubygems/rubygems.org/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/rubygems/rubygems.org/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;test workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rubygems/rubygems.org/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/rubygems/rubygems.org/actions/workflows/lint.yml/badge.svg?sanitize=true&#34; alt=&#34;lint workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rubygems/rubygems.org/actions/workflows/docker.yml&#34;&gt;&lt;img src=&#34;https://github.com/rubygems/rubygems.org/actions/workflows/docker.yml/badge.svg?sanitize=true&#34; alt=&#34;docker workflow&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeclimate.com/github/rubygems/rubygems.org&#34;&gt;Code Climate&lt;/a&gt;: &lt;a href=&#34;https://codeclimate.com/github/rubygems/rubygems.org/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/7110bb3f9b765042d604/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeclimate.com/github/rubygems/rubygems.org&#34;&gt;Code Climate&lt;/a&gt;: &lt;a href=&#34;https://codeclimate.com/github/rubygems/rubygems.org/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/7110bb3f9b765042d604/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Please follow our &lt;a href=&#34;https://github.com/rubygems/rubygems.org/raw/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get setup, please check out the &lt;a href=&#34;https://github.com/rubygems/rubygems.org/raw/master/CONTRIBUTING.md#development-setup&#34;&gt;Development Setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our deployment process is documented on the wiki as well, there&#39;s a multi-step &lt;a href=&#34;https://github.com/rubygems/rubygems-infrastructure/wiki/Deploys&#34;&gt;Checklist&lt;/a&gt; to run through.&lt;/p&gt; &#xA;&lt;p&gt;Also please take note of our &lt;a href=&#34;https://github.com/rubygems/rubygems.org/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have any trouble or questions getting set up please create an issue on this repository and we&#39;ll be happy to help!&lt;/p&gt; &#xA;&lt;h2&gt;Organization&lt;/h2&gt; &#xA;&lt;p&gt;RubyGems.org consists of a few major parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rails app: To manage users and allow others to view gems, etc.&lt;/li&gt; &#xA; &lt;li&gt;Gem processor: Handles incoming gems and storing them in Amazon S3 (production) or on the filesystem in &lt;code&gt;server/&lt;/code&gt; (development).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RubyGems.org uses the MIT license. Please check the &lt;a href=&#34;https://github.com/rubygems/rubygems.org/raw/master/MIT-LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt;</summary>
  </entry>
</feed>