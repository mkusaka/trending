<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-07T01:35:18Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Freika/dawarich</title>
    <updated>2024-07-07T01:35:18Z</updated>
    <id>tag:github.com,2024-07-07:/Freika/dawarich</id>
    <link href="https://github.com/Freika/dawarich" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted alternative to Google Location History (Google Maps Timeline)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dawarich&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/pHsBjpt5J8&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://ko-fi.com/H2H3IDYDD&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt; | &lt;a href=&#34;https://www.patreon.com/freika&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fshieldsio-patreon.vercel.app%2Fapi%3Fusername%3Dfreika%26type%3Dpatrons&amp;amp;style=for-the-badge&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Freika/dawarich/master/screenshots/map.jpeg&#34; alt=&#34;Map&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Freika/dawarich/master/screenshots/stats.jpeg&#34; alt=&#34;Stats&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Freika/dawarich/master/screenshots/imports.jpeg&#34; alt=&#34;Import&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dawarich is a self-hosted web application to replace Google Timeline (aka Google Location History). It allows you to import your location history from Google Maps Timeline and Owntracks, view it on a map and see some statistics, such as the number of countries and cities visited, and distance traveled.&lt;/p&gt; &#xA;&lt;p&gt;You can find changelog &lt;a href=&#34;https://raw.githubusercontent.com/Freika/dawarich/master/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;⚠️ The project is under very active development.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ Expect bugs and breaking changes.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ Do not delete your original Google Maps Timeline data after importing it to Dawarich.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ Export your data from Dawarich using built-in export functionality before updating to a new version.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ Try to keep Dawarich up-to-date to have the latest features and bug fixes.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To track your location, install the &lt;a href=&#34;https://owntracks.org/booklet/guide/apps/&#34;&gt;Owntracks app&lt;/a&gt; or &lt;a href=&#34;https://overland.p3k.app/&#34;&gt;Overland app&lt;/a&gt; on your phone and configure it to send location updates to your Dawarich instance.&lt;/p&gt; &#xA;&lt;h3&gt;OwnTracks&lt;/h3&gt; &#xA;&lt;p&gt;The url to send the location updates to is &lt;code&gt;http://&amp;lt;your-dawarich-instance&amp;gt;/api/v1/owntracks/points?api_key=YOUR_API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the app only supports &lt;a href=&#34;https://owntracks.org/booklet/tech/http/&#34;&gt;HTTP mode&lt;/a&gt; of OwnTracks.&lt;/p&gt; &#xA;&lt;h3&gt;Overland&lt;/h3&gt; &#xA;&lt;p&gt;The url to send the location updates to is &lt;code&gt;http://&amp;lt;your-dawarich-instance&amp;gt;/api/v1/overland/batches?api_key=YOUR_API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your API key can be found and/or generated in the user settings.&lt;/p&gt; &#xA;&lt;p&gt;To import your Google Maps Timeline data, download your location history from &lt;a href=&#34;https://takeout.google.com/&#34;&gt;Google Takeout&lt;/a&gt; and upload it to Dawarich.&lt;/p&gt; &#xA;&lt;h2&gt;How-to&#39;s&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Freika/dawarich/wiki/How-to-import-your-Google-Takeout-data&#34;&gt;How to import Google Takeout to Dawarich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Freika/dawarich/wiki/How-to-import-your-Google-Semantic-History-data&#34;&gt;How to Import Google Semantic History to Dawarich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Freika/dawarich/wiki/How-to-track-your-location-to-Dawarich-with-Overland&#34;&gt;How to track your location to Dawarich with Overland&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Freika/dawarich/wiki/How-to-track-your-location-to-Dawarich-with-OwnTracks&#34;&gt;How to track your location to Dawarich with OwnTracks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Freika/dawarich/wiki/How-to-export-your-data-from-Dawarich&#34;&gt;How to export your data from Dawarich&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More guides can be found in the &lt;a href=&#34;https://github.com/Freika/dawarich/wiki#how-tos&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Location Tracking&lt;/h3&gt; &#xA;&lt;p&gt;You can track your location using the Owntracks or Overland app.&lt;/p&gt; &#xA;&lt;h3&gt;Location history&lt;/h3&gt; &#xA;&lt;p&gt;You can view your location history on a map. On the map you can enable/disable the following layers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Heatmap&lt;/li&gt; &#xA; &lt;li&gt;Points&lt;/li&gt; &#xA; &lt;li&gt;Lines between points&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Statistics&lt;/h3&gt; &#xA;&lt;p&gt;You can see the number of countries and cities visited, the distance traveled, and the time spent in each country, splitted by years and months.&lt;/p&gt; &#xA;&lt;h3&gt;Import&lt;/h3&gt; &#xA;&lt;p&gt;You can import your existing location history from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Google Maps Timeline&lt;/li&gt; &#xA; &lt;li&gt;OwnTracks&lt;/li&gt; &#xA; &lt;li&gt;Strava&lt;/li&gt; &#xA; &lt;li&gt;Your own GPX files&lt;/li&gt; &#xA; &lt;li&gt;Your photos&#39; EXIF data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;Note&lt;/strong&gt;: Import of huge Google Maps Timeline files may take a long time and consume a lot of memory. It also might temporarily consume a lot of disk space due to logs. Please make sure you have enough resources before starting the import. After import is completed, you can restart your docker container and logs will be removed.&lt;/p&gt; &#xA;&lt;h2&gt;How to start the app locally&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;docker-compose up&lt;/code&gt; to start the app. The app will be available at &lt;code&gt;http://localhost:3000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Press &lt;code&gt;Ctrl+C&lt;/code&gt; to stop the app.&lt;/p&gt; &#xA;&lt;h2&gt;How to install the app&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Freika/dawarich/master/docs/How_to_install_Dawarich_using_Docker.md&#34;&gt;Docker&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Freika/dawarich/master/docs/How_to_install_Dawarich_on_Synology.md&#34;&gt;Synology&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Default credentials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Username&lt;/strong&gt;: &lt;code&gt;user@domain.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Password&lt;/strong&gt;: &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to change them both in the Account section.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ENV var name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MIN_MINUTES_SPENT_IN_CITY&lt;/td&gt; &#xA;   &lt;td&gt;minimum minutes between two points to consider them as visited the same city, e.g. &lt;code&gt;60&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MAP_CENTER&lt;/td&gt; &#xA;   &lt;td&gt;default map center, e.g. &lt;code&gt;[55.7522, 37.6156]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TIME_ZONE&lt;/td&gt; &#xA;   &lt;td&gt;time zone, e.g. &lt;code&gt;Europe/Berlin&lt;/code&gt;, full list is &lt;a href=&#34;https://github.com/Freika/dawarich/issues/27#issuecomment-2094721396&#34;&gt;here&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APPLICATION_HOST&lt;/td&gt; &#xA;   &lt;td&gt;host of the application, e.g. &lt;code&gt;localhost&lt;/code&gt; or &lt;code&gt;dawarich.example.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BACKGROUND_PROCESSING_CONCURRENCY (only for dawarich_sidekiq service)&lt;/td&gt; &#xA;   &lt;td&gt;Number of simultaneously processed background jobs, default is 10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;As you could probably guess, I like statistics.&lt;/p&gt; &#xA;&lt;a href=&#34;https://star-history.com/#Freika/dawarich&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Freika/dawarich&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=Freika/dawarich&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=Freika/dawarich&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>guilleiguaran/fakeredis</title>
    <updated>2024-07-07T01:35:18Z</updated>
    <id>tag:github.com,2024-07-07:/guilleiguaran/fakeredis</id>
    <link href="https://github.com/guilleiguaran/fakeredis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;In-memory driver for redis-rb, useful for development and test environments&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FakeRedis&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/guilleiguaran/fakeredis/actions/workflows/ruby.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This a fake implementation of redis-rb for machines without Redis or test environments&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install fakeredis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add it to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#34;fakeredis&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;FakeRedis currently supports redis-rb v3 or later, if you are using redis-rb v2.2 install the version 0.3.x:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install fakeredis -v &#34;~&amp;gt; 0.3.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use the branch 0-3-x on your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#34;fakeredis&#34;, :git =&amp;gt; &#34;git://github.com/guilleiguaran/fakeredis.git&#34;, :branch =&amp;gt; &#34;0-3-x&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can use FakeRedis without any changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    require &#34;fakeredis&#34;&#xA;&#xA;    redis = Redis.new&#xA;&#xA;    &amp;gt;&amp;gt; redis.set &#34;foo&#34;, &#34;bar&#34;&#xA;    =&amp;gt; &#34;OK&#34;&#xA;&#xA;    &amp;gt;&amp;gt; redis.get &#34;foo&#34;&#xA;    =&amp;gt; &#34;bar&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://github.com/redis/redis-rb&#34;&gt;redis-rb&lt;/a&gt; documentation and &lt;a href=&#34;http://redis.io&#34;&gt;Redis&lt;/a&gt; homepage for more info about commands&lt;/p&gt; &#xA;&lt;h2&gt;Usage with RSpec&lt;/h2&gt; &#xA;&lt;p&gt;Require this either in your Gemfile or in RSpec&#39;s support scripts. So either:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Gemfile&#xA;group :test do&#xA;  gem &#34;rspec&#34;&#xA;  gem &#34;fakeredis&#34;, :require =&amp;gt; &#34;fakeredis/rspec&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# spec/support/fakeredis.rb&#xA;require &#39;fakeredis/rspec&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage with Minitest&lt;/h2&gt; &#xA;&lt;p&gt;Require this either in your Gemfile or in Minitest&#39;s support scripts. So either:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Gemfile&#xA;group :test do&#xA;  gem &#34;minitest&#34;&#xA;  gem &#34;fakeredis&#34;, :require =&amp;gt; &#34;fakeredis/minitest&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# test/test_helper.rb (or test/minitest_config.rb)&#xA;require &#39;fakeredis/minitest&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/guilleiguaran/fakeredis/graphs/contributors&#34;&gt;all contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to FakeRedis&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out the latest master to make sure the feature hasn&#39;t been implemented or the bug hasn&#39;t been fixed yet&lt;/li&gt; &#xA; &lt;li&gt;Check out the issue tracker to make sure someone already hasn&#39;t requested it and/or contributed it&lt;/li&gt; &#xA; &lt;li&gt;Fork the project&lt;/li&gt; &#xA; &lt;li&gt;Start a feature/bugfix branch&lt;/li&gt; &#xA; &lt;li&gt;Commit and push until you are happy with your contribution&lt;/li&gt; &#xA; &lt;li&gt;Make sure to add tests for it. This is important so I don&#39;t break it in a future version unintentionally.&lt;/li&gt; &#xA; &lt;li&gt;Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2011-2023 Guillermo Iguaran. See LICENSE for further details.&lt;/p&gt;</summary>
  </entry>
</feed>