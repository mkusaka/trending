<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-20T01:42:09Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stringer-rss/stringer</title>
    <updated>2023-11-20T01:42:09Z</updated>
    <id>tag:github.com,2023-11-20:/stringer-rss/stringer</id>
    <link href="https://github.com/stringer-rss/stringer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A self-hosted, anti-social RSS reader.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stringer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/stringer-rss/stringer/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/stringer-rss/stringer/tree/main.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/stringer-rss/stringer/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/899c5407c870e541af4e/maintainability&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/stringer-rss/stringer?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/stringer-rss/stringer/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/mockdeep&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/mockdeep?logo=github&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;A self-hosted, anti-social RSS reader.&lt;/h3&gt; &#xA;&lt;p&gt;Stringer has no external dependencies, no social recommendations/sharing, and no fancy machine learning algorithms.&lt;/p&gt; &#xA;&lt;p&gt;But it does have keyboard shortcuts and was made with love!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/screenshots/instructions.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/screenshots/stories.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/screenshots/feed.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Stringer is a Ruby app based on Rails, PostgreSQL, Backbone.js and GoodJob.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/stringer-rss/stringer&#34;&gt;&lt;img src=&#34;https://cdn.herokuapp.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Heroku&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stringer will run just fine on the Eco/Basic Heroku plans.&lt;/p&gt; &#xA;&lt;p&gt;Instructions are provided for deploying to &lt;a href=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/docs/Heroku.md&#34;&gt;Heroku manually&lt;/a&gt;, to any Ruby compatible &lt;a href=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/docs/VPS.md&#34;&gt;Linux-based VPS&lt;/a&gt;, to &lt;a href=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/docs/Docker.md&#34;&gt;Docker&lt;/a&gt; and to &lt;a href=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/docs/OpenShift.md&#34;&gt;OpenShift&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Niceties&lt;/h2&gt; &#xA;&lt;h3&gt;Keyboard Shortcuts&lt;/h3&gt; &#xA;&lt;p&gt;You can access the keyboard shortcuts when using the app by hitting &lt;code&gt;?&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/screenshots/keyboard_shortcuts.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using your own domain with Heroku&lt;/h3&gt; &#xA;&lt;p&gt;You can run Stringer at &lt;code&gt;http://reader.yourdomain.com&lt;/code&gt; using a CNAME.&lt;/p&gt; &#xA;&lt;p&gt;If you are on Heroku:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;heroku domains:add reader.yourdomain.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to your registrar and add a CNAME:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Record: CNAME&#xA;Name: reader&#xA;Target: your-heroku-instance.herokuapp.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait a few minutes for changes to propagate.&lt;/p&gt; &#xA;&lt;h3&gt;Fever API&lt;/h3&gt; &#xA;&lt;p&gt;Stringer implements a clone of &lt;a href=&#34;http://www.feedafever.com/api&#34;&gt;Fever&#39;s API&lt;/a&gt; so it can be used with any mobile client that supports Fever.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://f.cloud.github.com/assets/56947/546236/68456536-c288-11e2-834b-9043dc75a087.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use the following settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Server: {path-to-stringer}/fever (e.g. http://reader.example.com/fever)&#xA;&#xA;Email: stringer (case-sensitive)&#xA;Password: {your-stringer-password}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;Stringer has been translated to &lt;a href=&#34;https://raw.githubusercontent.com/stringer-rss/stringer/main/config/locales&#34;&gt;several other languages&lt;/a&gt;. Your language can be set with the &lt;code&gt;LOCALE&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;To set your locale on Heroku, run &lt;code&gt;heroku config:set LOCALE=en&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to translate Stringer to your preferred language, please use &lt;a href=&#34;http://www.localeapp.com/projects/4637&#34;&gt;LocaleApp&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Clean up old read stories on Heroku&lt;/h3&gt; &#xA;&lt;p&gt;You can clean up old stories by running: &lt;code&gt;rake cleanup_old_stories&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, this removes read stories that are more than 30 days old (that are not starred). You can either run this manually or add it as a scheduled task.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Run the Ruby tests with &lt;code&gt;rspec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the Javascript tests with &lt;code&gt;rake test_js&lt;/code&gt; and then open a browser to &lt;code&gt;http://localhost:4567/test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;To get started using Stringer for development you first need to install &lt;code&gt;foreman&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install foreman&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle install&#xA;rake db:migrate&#xA;foreman start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The application will be running on port &lt;code&gt;5000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can launch an interactive console (a la &lt;code&gt;rails c&lt;/code&gt;) using &lt;code&gt;rake console&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Most of the heavy-lifting is done by &lt;a href=&#34;https://github.com/feedjira/feedjira&#34;&gt;&lt;code&gt;feedjira&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/dwillis/feedbag&#34;&gt;&lt;code&gt;feedbag&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;General sexiness courtesy of &lt;a href=&#34;http://twitter.github.io/bootstrap/&#34;&gt;&lt;code&gt;Twitter Bootstrap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;http://designmodo.github.io/Flat-UI/&#34;&gt;&lt;code&gt;Flat UI&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ReenieBeanie Font Copyright © 2010 Typeco (&lt;a href=&#34;mailto:james@typeco.com&#34;&gt;james@typeco.com&lt;/a&gt;). Licensed under &lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL Open Font License, 1.1&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Lato Font Copyright © 2010-2011 by tyPoland Lukasz Dziedzic (&lt;a href=&#34;mailto:team@latofonts.com&#34;&gt;team@latofonts.com&lt;/a&gt;). Licensed under &lt;a href=&#34;http://scripts.sil.org/OFL&#34;&gt;SIL Open Font License, 1.1&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have a question, feature idea, or are running into problems, our preferred method of contact is to open an issue on GitHub. This allows multiple people to weigh in, and we can keep everything in one place. Thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Robert Fletcher &lt;a href=&#34;https://boon.gl&#34;&gt;boon.gl&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alumni&lt;/h2&gt; &#xA;&lt;p&gt;Matt Swanson (creator), &lt;a href=&#34;http://mdswanson.com&#34;&gt;mdswanson.com&lt;/a&gt;, &lt;a href=&#34;http://twitter.com/_swanson&#34;&gt;@_swanson&lt;/a&gt; Victor Koronen, &lt;a href=&#34;http://victor.koronen.se/&#34;&gt;victor.koronen.se&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/victorkoronen&#34;&gt;@victorkoronen&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coupa/resque-round-robin</title>
    <updated>2023-11-20T01:42:09Z</updated>
    <id>tag:github.com,2023-11-20:/coupa/resque-round-robin</id>
    <link href="https://github.com/coupa/resque-round-robin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;resque plugin that modifies workers to pull jobs off queues&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Resque-round-robin&lt;/h1&gt; &#xA;&lt;p&gt;A plugin for Resque that implements round-robin behavior for workers.&lt;/p&gt; &#xA;&lt;p&gt;resque-dynamic-queues is a pre-requisite, as is Resque 1.19 or higher (now tested up to 1.21)&lt;/p&gt; &#xA;&lt;p&gt;The standard behavior for Resque workers is to pull a job off a queue, and continue until the queue is empty. Once empty, the worker moves on to the next queue (if available).&lt;/p&gt; &#xA;&lt;p&gt;For our situation, which is probably pretty rare in rails deployments, we have multiple clients who submit jobs to resque, and we need to keep the jobs of one customer from starving out other customers.&lt;/p&gt; &#xA;&lt;p&gt;As we dynamically generate queues per client, the workers also try to avoid working on the same queue at the same time. This isn&#39;t a hard guarantee since the code that checks and pulls the job is not atomic, but it&#39;s good enough for our needs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;resque-round-robin&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Nothing special. This gem monkey-patches things so this is automatic.&lt;/p&gt; &#xA;&lt;p&gt;A potential TODO is to have the ability to disable the one-worker-per-queue policy on a dynamic basis.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Added some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>vStone/vagrant-puppet</title>
    <updated>2023-11-20T01:42:09Z</updated>
    <id>tag:github.com,2023-11-20:/vStone/vagrant-puppet</id>
    <link href="https://github.com/vStone/vagrant-puppet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My vagrant setup for puppet development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;This is my setup for developing on puppet.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vagrant&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;p&gt;Running puppet is done by a shell script. This allows me to perform some basic changes to the box before provisioning with puppet. Installing extra packages for example that are not present on the basebox.&lt;/p&gt; &#xA;&lt;p&gt;As you will notice, the module dirs are split out in upstream/internal/dev. This should be pretty self-explaining.&lt;/p&gt; &#xA;&lt;p&gt;The complete puppet tree is in a subfolder puppet which gets copied to the box so puppet can run from it&#39;s default dir /etc/puppet. We ran into trouble with the (puppet) file function once which is the main reason for implenting it this way. We no longer use &#39;file()&#39; but the method stuck.&lt;/p&gt; &#xA;&lt;p&gt;On each puppet run, we also create a dependency graph. They are stored in the graphs folder. This is especially useful for debugging dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Packages&lt;/h2&gt; &#xA;&lt;p&gt;If a directory &lt;code&gt;./packages/centos exists&lt;/code&gt;, each rpm in this directory will be installed if the guest operating system uses yum. The same goes for &lt;code&gt;./packages/debian&lt;/code&gt; if your system has dpkg installed.&lt;/p&gt; &#xA;&lt;p&gt;If a directory &lt;code&gt;./packages/&amp;lt;fqdn&amp;gt;&lt;/code&gt; exists, packages inside this folder will also be installed.&lt;/p&gt;</summary>
  </entry>
</feed>