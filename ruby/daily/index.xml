<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-06T01:48:14Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>usbarmory/usbarmory</title>
    <updated>2023-06-06T01:48:14Z</updated>
    <id>tag:github.com,2023-06-06:/usbarmory/usbarmory</id>
    <link href="https://github.com/usbarmory/usbarmory" rel="alternate"></link>
    <summary type="html">&lt;p&gt;USB armory - open source flash-drive-sized computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;USB armory | &lt;a href=&#34;https://github.com/usbarmory/usbarmory&#34;&gt;https://github.com/usbarmory/usbarmory&lt;/a&gt;&lt;br&gt; Copyright (c) WithSecure Corporation&lt;/p&gt; &#xA;&lt;p&gt;The USB armory from &lt;a href=&#34;https://foundry.withsecure.com&#34;&gt;WithSecure Foundry&lt;/a&gt; is an open source hardware design, implementing a flash drive sized computer.&lt;/p&gt; &#xA;&lt;p&gt;This repository is aimed towards developers, if you wish to purchase a USB armory board please see the &lt;a href=&#34;https://github.com/usbarmory/usbarmory/wiki/Ordering-information&#34;&gt;ordering information&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;Andrea Barisani&lt;br&gt; &lt;a href=&#34;mailto:andrea.barisani@withsecure.com&#34;&gt;andrea.barisani@withsecure.com&lt;/a&gt; | &lt;a href=&#34;mailto:andrea@inversepath.com&#34;&gt;andrea@inversepath.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Andrej Rosano&lt;br&gt; &lt;a href=&#34;mailto:andrej.rosano@withsecure.com&#34;&gt;andrej.rosano@withsecure.com&lt;/a&gt; | &lt;a href=&#34;mailto:andrej@inversepath.com&#34;&gt;andrej@inversepath.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Daniele Bianco&lt;br&gt; &lt;a href=&#34;mailto:daniele.bianco@withsecure.com&#34;&gt;daniele.bianco@withsecure.com&lt;/a&gt; | &lt;a href=&#34;mailto:daniele@inversepath.com&#34;&gt;daniele@inversepath.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;The main documentation can be found on the &lt;a href=&#34;https://github.com/usbarmory/usbarmory/wiki&#34;&gt;project wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Board models&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/usbarmory/usbarmory/wiki/Mk-II-Introduction&#34;&gt;USB armory Mk II&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/usbarmory/usbarmory/wiki/images/armory-mark-two-top.png&#34; alt=&#34;Mk II Top&#34;&gt; &lt;img src=&#34;https://github.com/usbarmory/usbarmory/wiki/images/armory-mark-two-bottom.png&#34; alt=&#34;Mk II Bottom&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;USB armory Mk I: first production release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/usbarmory/usbarmory/wiki/images/armory-mark-one.png&#34; alt=&#34;USB armory Mk I&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;USB armory | &lt;a href=&#34;https://github.com/usbarmory/usbarmory&#34;&gt;https://github.com/usbarmory/usbarmory&lt;/a&gt;&lt;br&gt; Copyright (c) WithSecure Corporation&lt;/p&gt; &#xA;&lt;p&gt;This is an open hardware design licensed under the terms of the CERN Open Hardware Licence, see board revisions for applicable versions.&lt;/p&gt; &#xA;&lt;p&gt;This source is distributed WITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF MERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A PARTICULAR PURPOSE.&lt;/p&gt; &#xA;&lt;p&gt;Please see LICENSE files in each source subdirectory for applicable conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>turingschool-examples/spring-lake-1202</title>
    <updated>2023-06-06T01:48:14Z</updated>
    <id>tag:github.com,2023-06-06:/turingschool-examples/spring-lake-1202</id>
    <link href="https://github.com/turingschool-examples/spring-lake-1202" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Railer Coaster&lt;/h1&gt; &#xA;&lt;p&gt;This repository requires and has been tested on Ruby v3.1.1 and is based on Rails 7.0.4.&lt;/p&gt; &#xA;&lt;p&gt;RSpec and Shoulda-Matchers have been installed and set up.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repo&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone &amp;lt;paste_repo&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd &amp;lt;repo_name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rails db:{drop,create,migrate,seed}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When you run &lt;code&gt;bundle exec rspec&lt;/code&gt; you should have 2 passing tests.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Work on this assessment independently. DO NOT discuss with anyone.&lt;/li&gt; &#xA; &lt;li&gt;You are allowed to use any references including notes, Google, lesson plans, etc.&lt;/li&gt; &#xA; &lt;li&gt;Read each story carefully before you start working.&lt;/li&gt; &#xA; &lt;li&gt;Commit Frequently, about every 15 - 30 minutes&lt;/li&gt; &#xA; &lt;li&gt;Push your code to your fork once the time is up (not before!)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Submission&lt;/h2&gt; &#xA;&lt;p&gt;Once the time for the assessment is up, push your code to your fork and create a pull request to the &lt;code&gt;turingschool-examples&lt;/code&gt; repository. Include the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your Name&lt;/li&gt; &#xA; &lt;li&gt;A reflection on how you felt you did with this challenge and what story you got through&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TDD all new work&lt;/li&gt; &#xA; &lt;li&gt;Model methods and relationships must be fully tested.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Not Required&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No visual styling is required or expected&lt;/li&gt; &#xA; &lt;li&gt;You do not need to test for or create any model validations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;We are creating an application to track the maintenance of amusement park rides and mechanics working on those rides.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AmusementParks have a name and price of admissions attributes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex. &lt;code&gt;name: &#39;Six Flags&#39;, admission_cost: 75&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mechanics have a name and years of experience attributes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex. &lt;code&gt;name: ‘Kara Smith’, years_experience: 11&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rides have a name, thrill rating, and open (boolean) attributes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex. &lt;code&gt;name: ‘The Hurler’, thrill_rating: 7, open: false&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;AmusementParks have many Rides&lt;/li&gt; &#xA; &lt;li&gt;Rides belong to an AmusementPark&lt;/li&gt; &#xA; &lt;li&gt;Mechanics can work on many Rides&lt;/li&gt; &#xA; &lt;li&gt;Rides can have many Mechanics working on them&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of the initial migrations and model set up has been done for you.&lt;/p&gt; &#xA;&lt;h2&gt;User Stories&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 1 - Mechanic Show Page&#xA;&#xA;As a user,&#xA;When I visit a mechanic show page&#xA;I see their name, years of experience, and the names of all rides they are working on.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 2 - Add a Ride to a Mechanic&#xA;&#xA;As a user,&#xA;When I go to a mechanic&#39;s show page&#xA;I see a form to add a ride to their workload&#xA;When I fill in that field with an id of an existing ride and click Submit&#xA;I’m taken back to that mechanic&#39;s show page&#xA;And I see the name of that newly added ride on this mechanic&#39;s show page.&#xA;&#xA;Ex:&#xA;Mechanic: Kara Smith&#xA;Years of Experience: 11&#xA;&#xA;Current rides they’re working on:&#xA;  The Frog Hopper&#xA;  Fahrenheit&#xA;  The Kiss Raise&#xA;&#xA;Add a ride to workload:&#xA;Ride Id: |_pretend_this_is_a_textfield_|&#xA;Submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 3 - Amusement Park Show page&#xA;&#xA;As a visitor,&#xA;When I visit an amusement park’s show page,&#xA;Then I see the name and price of admissions for that amusement park&#xA;And I see the names of all mechanics that are working on that park&#39;s rides,&#xA;And I see that the list of mechanics is unique&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Extensions - Amusement Park&#39;s Rides&#xA;&#xA;As a visitor,&#xA;When I visit an amusement park&#39;s show page,&#xA;Then I see a list of all of the park&#39;s rides,&#xA;And next to the ride name I see the average experience of the mechanics working on the ride,&#xA;And I see the list of rides is ordered by the average experience of mechanics working on the ride.&#xA;(Note: you should only perform 1 database query to retrieve the list of rides with average mechanic experience)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>