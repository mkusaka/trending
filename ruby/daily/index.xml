<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-02T01:37:48Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bikeindex/bike_index</title>
    <updated>2024-01-02T01:37:48Z</updated>
    <id>tag:github.com,2024-01-02:/bikeindex/bike_index</id>
    <link href="https://github.com/bikeindex/bike_index" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All the code for Bike Index, because we love you&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.bikeindex.org&#34;&gt;&lt;img src=&#34;https://github.com/bikeindex/bike_index/raw/main/bike_index.png?raw=true&#34; alt=&#34;BIKE INDEX&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/bikeindex/bike_index/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/bikeindex/bike_index/tree/main.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.skylight.io/app/applications/j93iQ4K2pxCP&#34;&gt;&lt;img src=&#34;https://badges.skylight.io/status/j93iQ4K2pxCP.svg?sanitize=true&#34; alt=&#34;View performance data on Skylight&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Bike registration that works: online, powerful, free.&lt;/p&gt; &#xA;&lt;p&gt;Registering a üö≤ only takes a few minutes and gives üö¥‚Äç‚ôÄÔ∏è a permanent record linked to their identity that proves ownership in the case of a theft.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re an open source project. Take a gander through our code, report bugs, or download it and run it locally.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;We recommend &lt;a href=&#34;https://asdf-vm.com/#/&#34;&gt;asdf-vm&lt;/a&gt; for managing versions of Ruby and Node. Check the &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/.tool-versions&#34;&gt;.tool-versions&lt;/a&gt; file to see the versions of the following dependencies that Bike Index uses.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.ruby-lang.org/en/&#34;&gt;Ruby 2.7&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Rails 5.2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node 12.18&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://yarnpkg.com/en/&#34;&gt;yarn&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PostgreSQL &amp;gt;= 9.6&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Imagemagick (&lt;a href=&#34;http://railscasts.com/episodes/374-image-manipulation?view=asciicast&#34;&gt;railscast&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mperham/sidekiq&#34;&gt;Sidekiq&lt;/a&gt;, which requires &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Requires 1gb of ram (or at least more than 512mb)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Bike Index locally&lt;/h2&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/docs/getting-started.markdown&#34;&gt;the Getting Started guide&lt;/a&gt; for a complete set up. Or if you&#39;re familiar with developing Ruby on Rails applications start with these steps and a local Postgresql installation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;bin/setup&lt;/code&gt; sets up the application and seeds:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Three test user accounts: &lt;a href=&#34;mailto:admin@example.com&#34;&gt;admin@example.com&lt;/a&gt;, &lt;a href=&#34;mailto:member@example.com&#34;&gt;member@example.com&lt;/a&gt;, &lt;a href=&#34;mailto:user@example.com&#34;&gt;user@example.com&lt;/a&gt; (all have password &lt;code&gt;pleaseplease12&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Gives &lt;a href=&#34;mailto:user@example.com&#34;&gt;user@example.com&lt;/a&gt; 50 bikes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;bin/dev&lt;/code&gt; start the server. It starts redis in the background and runs foreman with the &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/Procfile_development&#34;&gt;dev procfile&lt;/a&gt;. If you need/prefer something else, do that. If your &#34;something else&#34; isn&#39;t running at localhost:3042, change the appropriate values in &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/Procfile_development&#34;&gt;Procfile_development&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/.env&#34;&gt;.env&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;http://localhost:3042&#34;&gt;localhost:3042&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Toggle in development&lt;/th&gt; &#xA;   &lt;th&gt;command&lt;/th&gt; &#xA;   &lt;th&gt;default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Caching&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bundle exec rails dev:cache&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;disabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ryanb/letter_opener&#34;&gt;letter_opener&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bin/rake dev:letter_opener&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;enabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;logging with lograge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bin/rake dev:lograge&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;enabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Internationalization&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/docs/internationalization.markdown&#34;&gt;internationalization docs&lt;/a&gt; for details (we use &lt;a href=&#34;https://translation.io/&#34;&gt;translation.io&lt;/a&gt; for localization).&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/rspec/rspec&#34;&gt;RSpec&lt;/a&gt; and &lt;a href=&#34;https://github.com/guard/guard&#34;&gt;Guard&lt;/a&gt; for testing.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the test suite continuously in the background with &lt;code&gt;bin/guard&lt;/code&gt; (watches for file changes/saves and runs those specs)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You may have to manually add the &lt;code&gt;fuzzystrmatch&lt;/code&gt; extension, which we use for near serial searches, to your databases. The migration should take care of this but sometimes doesn&#39;t. Open the databases in postgres (&lt;code&gt;psql bikeindex_development&lt;/code&gt; and &lt;code&gt;psql bikeindex_test&lt;/code&gt;) and add the extension.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE EXTENSION fuzzystrmatch;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/grosser/parallel_tests/&#34;&gt;&lt;code&gt;parallel_tests&lt;/code&gt;&lt;/a&gt; to run the test suite in parallel. By default, this will spawn one process per CPU in your computer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run all the tests in parallel with &lt;code&gt;bin/rake parallel:spec&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;bin/rake parallel:prepare&lt;/code&gt; to synchronize the test db schema after migrations (rather than &lt;code&gt;db:test:prepare&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run specific files or test directories with &lt;code&gt;bin/parallel_rspec &amp;lt;FILES_OR_FOLDERS&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Guard with parallelism &lt;code&gt;bin/guard -G Guardfile_parallel&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code Hygiene&lt;/h2&gt; &#xA;&lt;p&gt;We use the following tools to automate code formatting and linting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://editorconfig.org/&#34;&gt;EditorConfig&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/testdouble/standard&#34;&gt;StandardRB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESlint&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run &lt;code&gt;bin/lint&lt;/code&gt; to automatically lint the files and/or add auto formatters to your text editor (e.g. &lt;a href=&#34;https://github.com/sheerun/prettier-standard&#34;&gt;prettier-standard&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;EditorConfig&lt;/h3&gt; &#xA;&lt;p&gt;EditorConfig ensures whitespace consistency. See the &lt;a href=&#34;https://editorconfig.org/#download&#34;&gt;Download a Plugin&lt;/a&gt; section of the EditorConfig docs to find a plugin appropriate to your editor.&lt;/p&gt; &#xA;&lt;h3&gt;StandardRB&lt;/h3&gt; &#xA;&lt;p&gt;StandardRB is an opinionated Ruby style guide, linter, and formatter - it is &#34;a spiritual port of &lt;a href=&#34;https://standardjs.com/&#34;&gt;StandardJS&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/bikeindex/bike_index/main/standardrb-plugin&#34;&gt;how do I run standard in my editor&lt;/a&gt; section of the StandardRB docs to find an appropriate plugin for on-the-fly linting.&lt;/p&gt; &#xA;&lt;h3&gt;ESLint&lt;/h3&gt; &#xA;&lt;p&gt;ESlint is configured to run on project JavaScript. To run it, issue &lt;code&gt;yarn lint&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Bug tracker&lt;/h2&gt; &#xA;&lt;p&gt;Have a bug or a feature request? &lt;a href=&#34;https://github.com/bikeindex/bike_index/issues/new&#34;&gt;Open an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Keep track of development and community news.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;http://twitter.com/bikeindex&#34;&gt;@bikeindex&lt;/a&gt; on Twitter.&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://bikeindex.org/blog&#34;&gt;Bike Index Blog&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Open a Pull request!&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t wait until you have a finished feature before before opening the PR, unfinished pull requests are welcome! The earlier you open the pull request, the earlier it&#39;s possible to discuss the direction of the changes.&lt;/p&gt; &#xA;&lt;p&gt;Once the PR is ready for review, request review from the relevant person.&lt;/p&gt; &#xA;&lt;p&gt;If your pull request contains Ruby patches or features, you must include relevant Rspec tests.&lt;/p&gt; &#xA;&lt;p&gt;... and go hard&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cmason/eztz</title>
    <updated>2024-01-02T01:37:48Z</updated>
    <id>tag:github.com,2024-01-02:/cmason/eztz</id>
    <link href="https://github.com/cmason/eztz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby wrapper for the Google Time Zone API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eztz&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cmason/eztz/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/cmason/eztz/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/cmason/eztz/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/0ffbd44773bb2ee6f9ed/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/cmason/eztz/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/0ffbd44773bb2ee6f9ed/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/eztz&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/eztz.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ruby wrapper for the &lt;a href=&#34;https://developers.google.com/maps/documentation/timezone&#34;&gt;Google Time Zone API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby &amp;gt;= 2.7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other versions of Ruby may work, but the gem is tested against the above versions.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; gem &#39;eztz&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install it yourself as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install eztz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;An API key is required to access the Google Time Zone API. You can create a new API key from the &lt;a href=&#34;https://developers.google.com/maps/documentation/timezone/get-api-key&#34;&gt;Google Cloud Console&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Set your API key&#xA;Eztz.api_key = &#39;YOUR_API_KEY&#39;&#xA;&#xA;# Pass location coordinates as a string&#xA;$ Eztz.timezone(location: &#39;29.65,-95.28&#39;)&#xA;&#xA;=&amp;gt; #&amp;lt;Eztz::TimeZoneResponse:0x007fe71ba2df78 @timestamp=1488834591, @dst_offset=0, @error_message=nil, @raw_offset=-21600, @status=&#34;OK&#34;, @id=&#34;America/Chicago&#34;, @name=&#34;Central Standard Time&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Pass location coordinates as an array&#xA;$ Eztz.timezone(location: [29.65, -95.28])&#xA;&#xA;=&amp;gt; #&amp;lt;Eztz::TimeZoneResponse:0x007fe71ba2df78 @timestamp=1488834591, @dst_offset=0, @error_message=nil, @raw_offset=-21600, @status=&#34;OK&#34;, @id=&#34;America/Chicago&#34;, @name=&#34;Central Standard Time&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional parameters include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;timestamp:&lt;/code&gt; specifies the desired time as seconds since midnight, January 1, 1970 UTC. The Google Maps Time Zone API uses the timestamp to determine whether or not Daylight Savings should be applied. Times before 1970 can be expressed as negative values. Defaults to the current time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;language:&lt;/code&gt; The language in which to return results Defaults to &#39;en&#39;. A list of supported languages can be found at developers.google.com/maps/faq#languagesupport&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;After checking out the repo, run &lt;code&gt;bin/setup&lt;/code&gt; to install dependencies. Then, run &lt;code&gt;rake test&lt;/code&gt; to run the tests. You can also run &lt;code&gt;bin/console&lt;/code&gt; for an interactive prompt that will allow you to experiment.&lt;/p&gt; &#xA;&lt;p&gt;To install this gem onto your local machine, run &lt;code&gt;bundle exec rake install&lt;/code&gt;. To release a new version, update the version number in &lt;code&gt;version.rb&lt;/code&gt;, and then run &lt;code&gt;bundle exec rake release&lt;/code&gt;, which will create a git tag for the version, push git commits and tags, and push the &lt;code&gt;.gem&lt;/code&gt; file to &lt;a href=&#34;https://rubygems.org&#34;&gt;rubygems.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&#34;https://github.com/cmason/eztz&#34;&gt;https://github.com/cmason/eztz&lt;/a&gt;. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the &lt;a href=&#34;http://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; code of conduct.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The gem is available as open source under the terms of the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>