<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-29T01:35:50Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>prawnpdf/prawn-table</title>
    <updated>2025-04-29T01:35:50Z</updated>
    <id>tag:github.com,2025-04-29:/prawnpdf/prawn-table</id>
    <link href="https://github.com/prawnpdf/prawn-table" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides support for tables in Prawn&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prawn::Table&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/prawn-table&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/prawn-table.png&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/prawnpdf/prawn-table/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://codeclimate.com/github/prawnpdf/prawn-table&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/prawnpdf/prawn-table.png&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained-PRs_accepted-orange.png&#34; alt=&#34;Maintained: PRs accepted&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides table support for PrawnPDF.&lt;/p&gt; &#xA;&lt;p&gt;Originally written by Brad Ediger with community contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This is currently an experimental extraction and is not actively maintained by the Prawn maintainers. Yet, Prawn maintenance team will help you integrate your pull requests. Please reach out to the Prawn maintenance team if you are interested in helping maintaining this project.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;A snapshot of Prawn::Table&#39;s manual can be found here: &lt;a href=&#34;http://prawnpdf.org/prawn-table-manual.pdf&#34;&gt;http://prawnpdf.org/prawn-table-manual.pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also generate a manual yourself by cloning the repository, running &lt;code&gt;bundle&lt;/code&gt;, then running &lt;code&gt;rake manual&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All the example files in the &lt;code&gt;manual&lt;/code&gt; folder can be run individually.&lt;/p&gt; &#xA;&lt;h2&gt;Development priority&lt;/h2&gt; &#xA;&lt;p&gt;The main development priority is refactoring the code in order to reduce its complexity and thus make it more readable. By doing this, we will be able to more easily stabilize the codebase, which currently has a high defect density.&lt;/p&gt; &#xA;&lt;h2&gt;Feature requests&lt;/h2&gt; &#xA;&lt;p&gt;Additional features are welcome, but I won&#39;t find time to implement them myself anytime soon. If you can implement them yourself simply send a pull request with any new features. Please be sure to add extensive test cases and documentation for the new feature.&lt;/p&gt; &#xA;&lt;p&gt;In case of more complex features it probably would make sense to discuss them in an issue before you go ahead and implement them.&lt;/p&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;Please use the github issue tracker to file bug reports.&lt;/p&gt; &#xA;&lt;p&gt;If possible include a failing rspec test case with a seperate pull request and tag it as unresolved and with the issue number. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;it &#39;illustrates my problem&#39;, :unresolved, issue: 1 do&#xA;  # test&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way anyone else fixing it will have a clearer understanding of the problem and can be sure it&#39;s fixed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>discourse/discourse-calendar</title>
    <updated>2025-04-29T01:35:50Z</updated>
    <id>tag:github.com,2025-04-29:/discourse/discourse-calendar</id>
    <link href="https://github.com/discourse/discourse-calendar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Adds the ability to create a dynamic calendar in the first post of a topic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Discourse Calendar&lt;/h1&gt; &#xA;&lt;p&gt;Adds the ability to create a dynamic calendar in the first post of a topic.&lt;/p&gt; &#xA;&lt;p&gt;Topic discussing the plugin itself can be found here: &lt;a href=&#34;https://meta.discourse.org/t/discourse-calendar/97376&#34;&gt;https://meta.discourse.org/t/discourse-calendar/97376&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;discourse_post_event_event_will_start&lt;/code&gt; this DiscourseEvent will be triggered one hour before an event starts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;discourse_post_event_event_started&lt;/code&gt; this DiscourseEvent will be triggered when an event starts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;discourse_post_event_event_ended&lt;/code&gt; this DiscourseEvent will be triggered when an event ends&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom Fields&lt;/h3&gt; &#xA;&lt;p&gt;Custom fields can be set in plugin settings. Once added a new form will appear on event UI. These custom fields are available when a plugin event is triggered.&lt;/p&gt; &#xA;&lt;h3&gt;Holidays&lt;/h3&gt; &#xA;&lt;p&gt;See an incorrect or missing holiday? Familiarize yourself with the &lt;a href=&#34;https://raw.githubusercontent.com/discourse/discourse-calendar/main/vendor/holidays/definitions/doc/SYNTAX.md&#34;&gt;holiday definition Syntax&lt;/a&gt;. Then make your updates in the &lt;code&gt;vendor/holiday/definitions&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Generate updated holidays as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd vendor/holidays&#xA;&#xA;# Generate holiday definitions&#xA;rake generate:definitions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the plugin and switch to the discourse root(not the plugin directory).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Collect all holiday regions into assets/javascripts/lib/regions.js&#xA;bin/rails javascript:update_constants&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interactions with Other Plugins&lt;/h3&gt; &#xA;&lt;p&gt;You can use an element of this plugin with the &lt;a href=&#34;https://github.com/discourse/discourse-right-sidebar-blocks&#34;&gt;Right Sidebar Blocks&lt;/a&gt; component. You&#39;ll want to ensure the desired route is enabled via the &lt;code&gt;events calendar categories&lt;/code&gt; setting. In Right Sidebar Block&#39;s settings, the block name will be &lt;code&gt;upcoming-events-list&lt;/code&gt;, and the params use this &lt;a href=&#34;https://momentjs.com/docs/#/displaying/format/&#34;&gt;syntax&lt;/a&gt;, for example &lt;code&gt;MMMM D, YYYY&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>