<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-22T01:32:21Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>noraj/OSCP-Exam-Report-Template-Markdown</title>
    <updated>2022-06-22T01:32:21Z</updated>
    <id>tag:github.com,2022-06-22:/noraj/OSCP-Exam-Report-Template-Markdown</id>
    <link href="https://github.com/noraj/OSCP-Exam-Report-Template-Markdown" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìô Markdown Templates for Offensive Security OSCP, OSWE, OSCE, OSEE, OSWP exam report&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Offensive Security Exam Report Template in Markdown&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://inventory.rawsec.ml/tools.html#OSCP%20Exam%20Report%20Template%20in%20Markdown&#34;&gt;&lt;img src=&#34;https://inventory.raw.pm/img/badges/Rawsec-inventoried-FF5050_flat-square.svg?sanitize=true&#34; alt=&#34;Rawsec&#39;s CyberSecurity Inventory&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/noraj/OSCP-Exam-Report-Template-Markdown?style=flat-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/noraj/OSCP-Exam-Report-Template-Markdown?style=flat-square&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/noraj/OSCP-Exam-Report-Template-Markdown?style=flat-square&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;I created an &lt;strong&gt;Offensive Security Exam Report Template in Markdown&lt;/strong&gt; so LaTeX, Microsoft Office Word, LibreOffice Writer are no longer needed during your Offensive Security OSCP, OSWE, OSCE, OSEE, OSWP, OSEP, OSED exam!&lt;/p&gt; &#xA;&lt;p&gt;Now you can be efficient and faster during your exam report redaction!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üöÄ&lt;/span&gt; &lt;strong&gt;Speed up writing&lt;/strong&gt;, don&#39;t lose time during the 24 hours of exam report redaction&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;‚≠ê&lt;/span&gt; &lt;strong&gt;No formatting hassle with WYSIWYG editors&lt;/strong&gt;, byebye unwanted whitespaces and linefeeds from Microsoft Office Word and LibreOffice Writer&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üìù&lt;/span&gt; &lt;strong&gt;Re-use your Markdown notes&lt;/strong&gt;, you&#39;ll be so glad not having to reformat the bold and italic from your Markdown notes into the report&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üîí&lt;/span&gt; &lt;strong&gt;Version control ready&lt;/strong&gt;, save your markdown template into a PRIVATE git repository, you now have an incremental backup, version control works with Markdown (.md) as it&#39;s text but not with binaries (.doc, .odt)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üñä&lt;/span&gt; &lt;strong&gt;Use your favorite editor or note taking app&lt;/strong&gt;, with Markdown you&#39;ll be able to use your favorite editor (VSCode, Atom, etc.) or note taking app (Vnote, QOwnNotes, Boostnote, etc.) to write your exam report, you won&#39;t have to switch to Windows to use MS Word.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üé©&lt;/span&gt; &lt;strong&gt;Clean &amp;amp; professional style&lt;/strong&gt;, a professional looking report for your professional certification&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üëå&lt;/span&gt; &lt;strong&gt;Error free&lt;/strong&gt;, use the generation script to generate the report and archive, you won&#39;t do any &lt;a href=&#34;https://support.offensive-security.com/oscp-exam-guide/#submission-format-and-name&#34;&gt;submission format and name&lt;/a&gt; mistake that way&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/XiXIZg3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;OSCP whoisflynn improved template v3.2&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Z344YCQ.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://i.imgur.com/wegbNYr.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;OSCP Official Offensive Security Template v1&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9zoWFfr.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://i.imgur.com/MWSgxfh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pandoc.org/installing.html&#34;&gt;Pandoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LaTeX (eg. &lt;a href=&#34;http://www.tug.org/texlive/&#34;&gt;TeX Live&lt;/a&gt;) in order to get &lt;code&gt;pdflatex&lt;/code&gt; or &lt;code&gt;xelatex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Wandmalfarbe/pandoc-latex-template#installation&#34;&gt;Eisvogel Pandoc LaTeX PDF Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://p7zip.sourceforge.net/&#34;&gt;p7zip&lt;/a&gt; (if you want to use the script, for generating the archive)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples for common distros:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ArchLinux: &lt;code&gt;pacman -S texlive-most pandoc p7zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;openSUSE: &lt;code&gt;zypper in texlive-scheme-medium pandoc p7zip-full&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu: &lt;code&gt;apt install texlive-latex-recommended texlive-fonts-extra texlive-latex-extra pandoc p7zip-full&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Write your report in &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic&lt;/h3&gt; &#xA;&lt;p&gt;There is a script that will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Let you choose the template&lt;/li&gt; &#xA; &lt;li&gt;Let you choose the syntax highlight style&lt;/li&gt; &#xA; &lt;li&gt;Generate the PDF (+ preview option)&lt;/li&gt; &#xA; &lt;li&gt;Generate the 7z archive&lt;/li&gt; &#xA; &lt;li&gt;Output MD5 hash for verification after uploading&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;ruby generate.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;Generate the report PDF from the markdown template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pandoc src/OSCP-exam-report-template_whoisflynn_v3.2.md \&#xA;-o output/OSCP-OS-XXXXX-Exam-Report.pdf \&#xA;--from markdown+yaml_metadata_block+raw_html \&#xA;--template eisvogel \&#xA;--table-of-contents \&#xA;--toc-depth 6 \&#xA;--number-sections \&#xA;--top-level-division=chapter \&#xA;--highlight-style breezedark&#xA;--resource-path=.:src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change the code syntax highlight theme with &lt;a href=&#34;https://pandoc.org/MANUAL.html#option--highlight-style&#34;&gt;&lt;code&gt;--highlight-style&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Color sets&lt;/h2&gt; &#xA;&lt;p&gt;Well rendering color sets you can use in the template YAML frontmatter:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;titlepage-color&lt;/th&gt; &#xA;   &lt;th&gt;titlepage-text-color&lt;/th&gt; &#xA;   &lt;th&gt;titlepage-rule-color&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DC143C&lt;/code&gt; (Crimson)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFFFFF&lt;/code&gt; (White)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFFFFF&lt;/code&gt; (White)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;00FF7F&lt;/code&gt; (SpringGreen)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;006400&lt;/code&gt; DarkGreen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;1E90FF&lt;/code&gt; (DodgerBlue)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFFAFA&lt;/code&gt; (Snow)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFFAFA&lt;/code&gt; (Snow)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;483D8B&lt;/code&gt; (DarkSlateBlue)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFFAFA&lt;/code&gt; (Snow)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFFAFA&lt;/code&gt; (Snow)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFD700&lt;/code&gt; (Gold)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFEFD5&lt;/code&gt; (PapayaWhip)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FF8C00&lt;/code&gt; (DarkOrange)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;000000&lt;/code&gt; (Black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FFEF96&lt;/code&gt; (no name)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;50394C&lt;/code&gt; (no name)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;50394C&lt;/code&gt; (no name)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Syntax highlight themes can be listed with &lt;code&gt;pandoc --list-highlight-styles&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Available templates&lt;/h2&gt; &#xA;&lt;p&gt;Report Templates:&lt;/p&gt; &#xA;&lt;p&gt;Penetration Testing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSCP&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSCP-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSCP-exam-report-template_OS_v2.pdf&#34;&gt;Official Offensive Security Template v2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/whoisflynn&#34;&gt;whoisflynn&lt;/a&gt; improved &lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSCP-exam-report-template_whoisflynn_v3.2.pdf&#34;&gt;template&lt;/a&gt; v3.2&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSWP&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSWP-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSEP&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSEP-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ceso&#34;&gt;ceso&lt;/a&gt; improved &lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSEP-exam-report-template_ceso_v1.pdf&#34;&gt;template&lt;/a&gt; v1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Web Application:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSWE&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSWE-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/noraj&#34;&gt;noraj&lt;/a&gt; improved &lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSWE-exam-report-template_noraj_v1.pdf&#34;&gt;template&lt;/a&gt; v1&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xl-sec&#34;&gt;xl-sec&lt;/a&gt; improved &lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSWE-exam-report-template_xl-sec_v1.pdf&#34;&gt;template&lt;/a&gt; v1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Exploit Development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSED&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSED-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/epi052&#34;&gt;epi&lt;/a&gt; improved &lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSED-exam-report-template_epi_v1.pdf&#34;&gt;template&lt;/a&gt; v1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSEE&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSEE-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSCE&lt;/strong&gt; (&lt;strong&gt;deprecated&lt;/strong&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/output/examples/OSCE-exam-report-template_OS_v1.pdf&#34;&gt;Official Offensive Security Template v1&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Offensive Security course table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Exam acronym&lt;/th&gt; &#xA;   &lt;th&gt;Exam name&lt;/th&gt; &#xA;   &lt;th&gt;Lab acronym&lt;/th&gt; &#xA;   &lt;th&gt;Lab name&lt;/th&gt; &#xA;   &lt;th&gt;Course designation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSCP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Certified Professional&lt;/td&gt; &#xA;   &lt;td&gt;PWK&lt;/td&gt; &#xA;   &lt;td&gt;Penetration Testing with Kali Linux&lt;/td&gt; &#xA;   &lt;td&gt;PEN-200&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSWP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Wireless Professional&lt;/td&gt; &#xA;   &lt;td&gt;OSWA&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Wireless Attacks&lt;/td&gt; &#xA;   &lt;td&gt;PEN-210&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSEP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Experienced Penetration Tester&lt;/td&gt; &#xA;   &lt;td&gt;ETBD&lt;/td&gt; &#xA;   &lt;td&gt;Evasion Techniques and Breaching Defenses&lt;/td&gt; &#xA;   &lt;td&gt;PEN-300&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSWE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Web Expert&lt;/td&gt; &#xA;   &lt;td&gt;AWAE&lt;/td&gt; &#xA;   &lt;td&gt;Advanced Web Attacks and Exploitation&lt;/td&gt; &#xA;   &lt;td&gt;WEB-300&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSED&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Exploit Developer&lt;/td&gt; &#xA;   &lt;td&gt;WUMED&lt;/td&gt; &#xA;   &lt;td&gt;Windows User Mode Exploit Development&lt;/td&gt; &#xA;   &lt;td&gt;EXP-301&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSEE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Exploitation Expert&lt;/td&gt; &#xA;   &lt;td&gt;AWE&lt;/td&gt; &#xA;   &lt;td&gt;Advanced Windows Exploitation&lt;/td&gt; &#xA;   &lt;td&gt;EXP-401&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OSCE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Offensive Security Certified Expert&lt;/td&gt; &#xA;   &lt;td&gt;CTP&lt;/td&gt; &#xA;   &lt;td&gt;Cracking the Perimeter&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Community projects&lt;/h2&gt; &#xA;&lt;p&gt;Docker containers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ret2src/OSCP-Exam-Report-Template-Markdown#docker&#34;&gt;ret2src docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tripex48/OSCP-Exam-Report-Template-Markdown#docker&#34;&gt;Tripex48 docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mentions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;John Hammond - OSCP - Taking Notes &amp;amp; Resources (video) (2019-10-06) &lt;a href=&#34;https://www.youtube.com/watch?v=MQGozZzHUwQ&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/MQGozZzHUwQ/0.jpg&#34; alt=&#34;OSCP - Taking Notes &amp;amp; Resources&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;John Hammond - OSEP - Offensive Security Experienced Penetration Tester (video) (2021-02-05) &lt;a href=&#34;https://www.youtube.com/watch?v=iUPyiJbN4l4&#34;&gt;&lt;img src=&#34;https://i.ytimg.com/vi/iUPyiJbN4l4/maxresdefault.jpg&#34; alt=&#34;OSEP - Offensive Security Experienced Penetration Tester&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;3rd &lt;a href=&#34;https://awesomeopensource.com/projects/offensive-security&#34;&gt;Top Offensive Security Open Source Projects&lt;/a&gt; (2022-01-27)&lt;/li&gt; &#xA; &lt;li&gt;Recent mentions on social medias: &lt;a href=&#34;https://www.social-searcher.com/social-buzz/?q5=https%3A%2F%2Fgithub.com%2Fnoraj%2FOSCP-Exam-Report-Template-Markdown&#34;&gt;Social-searcher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Articles: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://craigunder.me/stress-free-oscp-report-making/&#34;&gt;Stress-free OSCP report making&lt;/a&gt;&lt;/del&gt; by Craig Underhill (2020-04-06)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://falconspy.medium.com/unofficial-oscp-approved-tools-b2b4e889e707&#34;&gt;Unofficial OSCP Approved Tools&lt;/a&gt; by FalconSpy (2019-06-05)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cjhackerz.net/posts/journey-from-nothing-to-oscp/&#34;&gt;Journey from nothing to OSCP&lt;/a&gt; by CJHackerz (2020-06-30)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/noraj/OSCP-Exam-Report-Template-Markdown&#34;&gt;&lt;img src=&#34;https://starchart.cc/noraj/OSCP-Exam-Report-Template-Markdown.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Report Templates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSCP&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360040165632#suggested-documentation-templates&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/whoisflynn/OSCP-Exam-Report-Template&#34;&gt;whoisflynn improved template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSWE&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360046869951-OSWE-Exam-Guide#suggested-documentation-templates&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/src/OSWE-exam-report-template_noraj_v1.md&#34;&gt;noraj improved template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/src/OSWE-exam-report-template_xl-sec_v1.md&#34;&gt;XL-SEC improved template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSCE&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360046801331-OSCE-Exam-Guide#suggested-documentation-templates&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSEE&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360046458732-OSEE-Exam-Guide#Documentation%20Requirements&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSWP&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360046904731-OSWP-Exam-Guide#suggested-documentation-templates&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSED&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360052977212-OSED-Exam-Guide#suggested-documentation-templates&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/src/OSED-exam-report-template_epi_v1.md&#34;&gt;epi improved template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OSEP&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://help.offensive-security.com/hc/en-us/articles/360050293792-OSEP-Exam-Guide#suggested-documentation-templates&#34;&gt;Official Offensive Security Template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/noraj/OSCP-Exam-Report-Template-Markdown/master/src/OSEP-exam-report-template_ceso_v1.md&#34;&gt;ceso improved template&lt;/a&gt; (UNLICENSED)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pandoc Template:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Eisvogel (&lt;a href=&#34;https://github.com/Wandmalfarbe/pandoc-latex-template/raw/master/LICENSE&#34;&gt;LICENCE&lt;/a&gt;): &lt;a href=&#34;https://github.com/Wandmalfarbe/pandoc-latex-template&#34;&gt;https://github.com/Wandmalfarbe/pandoc-latex-template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Placeholder image:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generated by &lt;a href=&#34;https://imgplaceholder.com/&#34;&gt;https://imgplaceholder.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>logstash-plugins/logstash-patterns-core</title>
    <updated>2022-06-22T01:32:21Z</updated>
    <id>tag:github.com,2022-06-22:/logstash-plugins/logstash-patterns-core</id>
    <link href="https://github.com/logstash-plugins/logstash-patterns-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logstash Plugin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/logstash-plugins/logstash-patterns-core&#34;&gt;&lt;img src=&#34;https://travis-ci.com/logstash-plugins/logstash-patterns-core.svg?sanitize=true&#34; alt=&#34;Travis Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin provides &lt;a href=&#34;https://github.com/logstash-plugins/logstash-patterns-core/tree/main/patterns&#34;&gt;pattern definitions&lt;/a&gt; used by the &lt;a href=&#34;https://github.com/logstash-plugins/logstash-filter-grok&#34;&gt;grok filter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is fully free and fully open source. The license is Apache 2.0, meaning you are pretty much free to use it however you want in whatever way.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Logstash provides infrastructure to automatically generate documentation for this plugin. We use the asciidoc format to write documentation so any comments in the source code will be first converted into asciidoc and then into html. All plugin documentation are placed under one &lt;a href=&#34;http://www.elastic.co/guide/en/logstash/current/&#34;&gt;central location&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For formatting code or config example, you can use the asciidoc &lt;code&gt;[source,ruby]&lt;/code&gt; directive&lt;/li&gt; &#xA; &lt;li&gt;For more asciidoc formatting tips, see the excellent reference here &lt;a href=&#34;https://github.com/elastic/docs#asciidoc-guide&#34;&gt;https://github.com/elastic/docs#asciidoc-guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;Need help? Try &lt;a href=&#34;https://discuss.elastic.co/c/logstash&#34;&gt;https://discuss.elastic.co/c/logstash&lt;/a&gt; discussion forum.&lt;/p&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;h3&gt;1. Plugin Developement and Testing&lt;/h3&gt; &#xA;&lt;h4&gt;Code&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Test&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update your dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Running your unpublished Plugin in Logstash&lt;/h3&gt; &#xA;&lt;h4&gt;2.1 Run in a local Logstash clone&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit Logstash &lt;code&gt;Gemfile&lt;/code&gt; and add the local plugin path, for example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;logstash-patterns-core&#34;, :path =&amp;gt; &#34;/your/local/logstash-patterns-core&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Logstash 2.3 and higher&#xA;bin/logstash-plugin install --no-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run Logstash with your plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/logstash -e &#39;filter { grok { } }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point any modifications to the plugin code will be applied to this local Logstash setup. After modifying the plugin, simply rerun Logstash.&lt;/p&gt; &#xA;&lt;h4&gt;2.2 Run in an installed Logstash&lt;/h4&gt; &#xA;&lt;p&gt;You can use the same &lt;strong&gt;2.1&lt;/strong&gt; method to run your plugin in an installed Logstash by editing its &lt;code&gt;Gemfile&lt;/code&gt; and pointing the &lt;code&gt;:path&lt;/code&gt; to your local plugin development directory or you can build the gem and install it using:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build your plugin gem&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem build logstash-patterns-core.gemspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the plugin from the Logstash home&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/logstash-plugin install --no-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start Logstash and proceed to test the plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome: ideas, patches, documentation, bug reports, complaints, and even something you drew up on a napkin.&lt;/p&gt; &#xA;&lt;p&gt;Programming is not a required skill. Whatever you&#39;ve seen about open source and maintainers or community members saying &#34;send patches or die&#34; - you will not see that here.&lt;/p&gt; &#xA;&lt;p&gt;It is more important to the community that you are able to contribute.&lt;/p&gt; &#xA;&lt;p&gt;For more information about contributing, see the &lt;a href=&#34;https://github.com/elastic/logstash/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thoughtbot/shoulda-matchers</title>
    <updated>2022-06-22T01:32:21Z</updated>
    <id>tag:github.com,2022-06-22:/thoughtbot/shoulda-matchers</id>
    <link href="https://github.com/thoughtbot/shoulda-matchers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple one-liner tests for common Rails functionality&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shoulda Matchers &lt;a href=&#34;https://rubygems.org/gems/shoulda-matchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/shoulda-matchers.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/thoughtbot/shoulda-matchers/Test&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/shoulda-matchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/shoulda-matchers.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/shoulda-matchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dtv/shoulda-matchers.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matchers.shoulda.io/&#34;&gt;&lt;img src=&#34;https://matchers.shoulda.io/images/shoulda-matchers-logo.png&#34; alt=&#34;shoulda-matchers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Shoulda Matchers provides RSpec- and Minitest-compatible one-liners to test common Rails functionality that, if written by hand, would be much longer, more complex, and error-prone.&lt;/p&gt; &#xA;&lt;h2&gt;Quick links&lt;/h2&gt; &#xA;&lt;p&gt;üìñ &lt;strong&gt;&lt;a href=&#34;https://matchers.shoulda.io/docs&#34;&gt;Read the documentation for the latest version&lt;/a&gt;.&lt;/strong&gt; üì¢ &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/CHANGELOG.md&#34;&gt;See what&#39;s changed in recent versions&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#rspec&#34;&gt;RSpec&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#minitest&#34;&gt;Minitest&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#on-the-subject-of-subject&#34;&gt;On the subject of &lt;code&gt;subject&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#availability-of-rspec-matchers-in-example-groups&#34;&gt;Availability of RSpec matchers in example groups&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#should-vs-is_expectedto&#34;&gt;&lt;code&gt;should&lt;/code&gt; vs &lt;code&gt;is_expected.to&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#matchers&#34;&gt;Matchers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activemodel-matchers&#34;&gt;ActiveModel matchers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activerecord-matchers&#34;&gt;ActiveRecord matchers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#actioncontroller-matchers&#34;&gt;ActionController matchers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#independent-matchers&#34;&gt;Independent matchers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#compatibility&#34;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#versioning&#34;&gt;Versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#team&#34;&gt;Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#copyright-license&#34;&gt;Copyright/License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#about-thoughtbot&#34;&gt;About thoughtbot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;RSpec&lt;/h3&gt; &#xA;&lt;p&gt;Start by including &lt;code&gt;shoulda-matchers&lt;/code&gt; in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :test do&#xA;  gem &#39;shoulda-matchers&#39;, &#39;~&amp;gt; 5.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you need to configure the gem by telling it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;which matchers you want to use in your tests&lt;/li&gt; &#xA; &lt;li&gt;that you&#39;re using RSpec so that it can make those matchers available in your example groups&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re working on a Rails app, simply place this at the bottom of &lt;code&gt;spec/rails_helper.rb&lt;/code&gt; (or in a support file if you so choose):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :rspec&#xA;    with.library :rails&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Non-Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re not working on a Rails app, but you still make use of ActiveRecord or ActiveModel in your project, you can still use this gem too! In that case, you&#39;ll want to place the following configuration at the bottom of &lt;code&gt;spec/spec_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :rspec&#xA;&#xA;    # Keep as many of these lines as are necessary:&#xA;    with.library :active_record&#xA;    with.library :active_model&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minitest&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using our umbrella gem &lt;a href=&#34;https://github.com/thoughtbot/shoulda&#34;&gt;Shoulda&lt;/a&gt;, then make sure that you&#39;re using the latest version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :test do&#xA;  gem &#39;shoulda&#39;, &#39;~&amp;gt; 4.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise, add &lt;code&gt;shoulda-matchers&lt;/code&gt; to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :test do&#xA;  gem &#39;shoulda-matchers&#39;, &#39;~&amp;gt; 4.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you need to configure the gem by telling it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;which matchers you want to use in your tests&lt;/li&gt; &#xA; &lt;li&gt;that you&#39;re using Minitest so that it can make those matchers available in your test case classes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re working on a Rails app, simply place this at the bottom of &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :minitest&#xA;    with.library :rails&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Non-Rails apps&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re not working on a Rails app, but you still make use of ActiveRecord or ActiveModel in your project, you can still use this gem too! In that case, you&#39;ll want to place the following configuration at the bottom of &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Shoulda::Matchers.configure do |config|&#xA;  config.integrate do |with|&#xA;    with.test_framework :minitest&#xA;&#xA;    # Keep as many of these lines as are necessary:&#xA;    with.library :active_record&#xA;    with.library :active_model&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Most of the matchers provided by this gem are useful in a Rails context, and as such, can be used for different parts of a Rails app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activemodel-matchers&#34;&gt;database models backed by ActiveRecord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#activerecord-matchers&#34;&gt;non-database models, form objects, etc. backed by ActiveModel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#actioncontroller-matchers&#34;&gt;controllers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#routing-matchers&#34;&gt;routes&lt;/a&gt; (RSpec only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#independent-matchers&#34;&gt;Rails-specific features like &lt;code&gt;delegate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As the name of the gem indicates, most matchers are designed to be used in &#34;one-liner&#34; form using the &lt;code&gt;should&lt;/code&gt; macro, a special directive available in both RSpec and &lt;a href=&#34;https://github.com/thoughtbot/shoulda&#34;&gt;Shoulda&lt;/a&gt;. For instance, a model test case may look something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# RSpec&#xA;RSpec.describe MenuItem, type: :model do&#xA;  describe &#39;associations&#39; do&#xA;    it { should belong_to(:category).class_name(&#39;MenuCategory&#39;) }&#xA;  end&#xA;&#xA;  describe &#39;validations&#39; do&#xA;    it { should validate_presence_of(:name) }&#xA;    it { should validate_uniqueness_of(:name).scoped_to(:category_id) }&#xA;  end&#xA;end&#xA;&#xA;# Minitest (Shoulda)&#xA;class MenuItemTest &amp;lt; ActiveSupport::TestCase&#xA;  context &#39;associations&#39; do&#xA;    should belong_to(:category).class_name(&#39;MenuCategory&#39;)&#xA;  end&#xA;&#xA;  context &#39;validations&#39; do&#xA;    should validate_presence_of(:name)&#xA;    should validate_uniqueness_of(:name).scoped_to(:category_id)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/#matchers&#34;&gt;See below&lt;/a&gt; for the full set of matchers that you can use.&lt;/p&gt; &#xA;&lt;h3&gt;On the subject of &lt;code&gt;subject&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;For both RSpec and Shoulda, the &lt;strong&gt;subject&lt;/strong&gt; is an implicit reference to the object under test, and through the use of &lt;code&gt;should&lt;/code&gt; as demonstrated above, all of the matchers make use of &lt;code&gt;subject&lt;/code&gt; internally when they are run. A &lt;code&gt;subject&lt;/code&gt; is always set automatically by your test framework in any given test case; however, in certain cases it can be advantageous to override it. For instance, when testing validations in a model, it is customary to provide a valid model instead of a fresh one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# RSpec&#xA;RSpec.describe Post, type: :model do&#xA;  describe &#39;validations&#39; do&#xA;    # Here we&#39;re using FactoryBot, but you could use anything&#xA;    subject { build(:post) }&#xA;&#xA;    it { should validate_presence_of(:title) }&#xA;  end&#xA;end&#xA;&#xA;# Minitest (Shoulda)&#xA;class PostTest &amp;lt; ActiveSupport::TestCase&#xA;  context &#39;validations&#39; do&#xA;    subject { build(:post) }&#xA;&#xA;    should validate_presence_of(:title)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When overriding the subject in this manner, then, it&#39;s important to provide the correct object. &lt;strong&gt;When in doubt, provide an instance of the class under test.&lt;/strong&gt; This is particularly necessary for controller tests, where it is easy to accidentally write something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe PostsController, type: :controller do&#xA;  describe &#39;GET #index&#39; do&#xA;    subject { get :index }&#xA;&#xA;    # This may work...&#xA;    it { should have_http_status(:success) }&#xA;    # ...but this will not!&#xA;    it { should permit(:title, :body).for(:post) }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, you would want to use &lt;code&gt;before&lt;/code&gt; rather than &lt;code&gt;subject&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe PostsController, type: :controller do&#xA;  describe &#39;GET #index&#39; do&#xA;    before { get :index }&#xA;&#xA;    # Notice that we have to assert have_http_status on the response here...&#xA;    it { expect(response).to have_http_status(:success) }&#xA;    # ...but we do not have to provide a subject for render_template&#xA;    it { should render_template(&#39;index&#39;) }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Availability of RSpec matchers in example groups&lt;/h3&gt; &#xA;&lt;h4&gt;Rails projects&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re using RSpec, then you&#39;re probably familiar with the concept of example groups. Example groups can be assigned tags order to assign different behavior to different kinds of example groups. This comes into play especially when using &lt;code&gt;rspec-rails&lt;/code&gt;, where, for instance, controller example groups, tagged with &lt;code&gt;type: :controller&lt;/code&gt;, are written differently than request example groups, tagged with &lt;code&gt;type: :request&lt;/code&gt;. This difference in writing style arises because &lt;code&gt;rspec-rails&lt;/code&gt; mixes different behavior and methods into controller example groups vs. request example groups.&lt;/p&gt; &#xA;&lt;p&gt;Relying on this behavior, Shoulda Matchers automatically makes certain matchers available in certain kinds of example groups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ActiveRecord and ActiveModel matchers are available only in model example groups, i.e., those tagged with &lt;code&gt;type: :model&lt;/code&gt; or in files located under &lt;code&gt;spec/models&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;ActionController matchers are available only in controller example groups, i.e., those tagged with &lt;code&gt;type: :controller&lt;/code&gt; or in files located under &lt;code&gt;spec/controllers&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;route&lt;/code&gt; matcher is available in routing example groups, i.e., those tagged with &lt;code&gt;type: :routing&lt;/code&gt; or in files located under &lt;code&gt;spec/routing&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Independent matchers are available in all example groups.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As long as you&#39;re using Rails, you don&#39;t need to worry about these details ‚Äî everything should &#34;just work&#34;.&lt;/p&gt; &#xA;&lt;h4&gt;Non-Rails projects&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;What if you are using ActiveModel or ActiveRecord outside of Rails, however, and you want to use model matchers in a certain example group?&lt;/strong&gt; Then you&#39;ll need to manually include the module that holds those matchers into that example group. For instance, you might have to say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe MySpecialModel do&#xA;  include Shoulda::Matchers::ActiveModel&#xA;  include Shoulda::Matchers::ActiveRecord&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a lot of similar example groups in which you need to do this, then you might find it more helpful to tag your example groups appropriately, then instruct RSpec to mix these modules into any example groups that have that tag. For instance, you could add this to your &lt;code&gt;rails_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include(Shoulda::Matchers::ActiveModel, type: :model)&#xA;  config.include(Shoulda::Matchers::ActiveRecord, type: :model)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And from then on, you could say:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe MySpecialModel, type: :model do&#xA;  # ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;should&lt;/code&gt; vs &lt;code&gt;is_expected.to&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In this README and throughout the documentation, you&#39;ll notice that we use the &lt;code&gt;should&lt;/code&gt; form of RSpec&#39;s one-liner syntax over &lt;code&gt;is_expected.to&lt;/code&gt;. Beside being the namesake of the gem itself, this is our preferred syntax as it&#39;s short and sweet. But if you prefer to use &lt;code&gt;is_expected.to&lt;/code&gt;, you can do that too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.describe Person, type: :model do&#xA;  it { is_expected.to validate_presence_of(:name) }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Matchers&lt;/h2&gt; &#xA;&lt;p&gt;Here is the full list of matchers that ship with this gem. If you need details about any of them, make sure to &lt;a href=&#34;https://matchers.shoulda.io/docs&#34;&gt;consult the documentation&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;ActiveModel matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/allow_value_matcher.rb&#34;&gt;allow_value&lt;/a&gt;&lt;/strong&gt; tests that an attribute is valid or invalid if set to one or more values. &lt;em&gt;(Aliased as #allow_values.)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/have_secure_password_matcher.rb&#34;&gt;have_secure_password&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;has_secure_password&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_absence_of_matcher.rb&#34;&gt;validate_absence_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_absence_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_acceptance_of_matcher.rb&#34;&gt;validate_acceptance_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_acceptance_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_confirmation_of_matcher.rb&#34;&gt;validate_confirmation_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_confirmation_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_exclusion_of_matcher.rb&#34;&gt;validate_exclusion_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_exclusion_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_inclusion_of_matcher.rb&#34;&gt;validate_inclusion_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_inclusion_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_length_of_matcher.rb&#34;&gt;validate_length_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_length_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_numericality_of_matcher.rb&#34;&gt;validate_numericality_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_numericality_of&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_model/validate_presence_of_matcher.rb&#34;&gt;validate_presence_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_presence_of&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ActiveRecord matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/accept_nested_attributes_for_matcher.rb&#34;&gt;accept_nested_attributes_for&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb&#34;&gt;belong_to&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;belongs_to&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/define_enum_for_matcher.rb&#34;&gt;define_enum_for&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;enum&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb#L827&#34;&gt;have_and_belong_to_many&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_db_column_matcher.rb&#34;&gt;have_db_column&lt;/a&gt;&lt;/strong&gt; tests that the table that backs your model has a specific column.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_db_index_matcher.rb&#34;&gt;have_db_index&lt;/a&gt;&lt;/strong&gt; tests that the table that backs your model has an index on a specific column.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_implicit_order_column.rb&#34;&gt;have_implicit_order_column&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;implicit_order_column&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb#L328&#34;&gt;have_many&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_many&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_attached_matcher.rb&#34;&gt;have_many_attached&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_many_attached&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/association_matcher.rb#L598&#34;&gt;have_one&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_one&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_attached_matcher.rb&#34;&gt;have_one_attached&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_one_attached&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_readonly_attribute_matcher.rb&#34;&gt;have_readonly_attribute&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;attr_readonly&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/have_rich_text_matcher.rb&#34;&gt;have_rich_text&lt;/a&gt;&lt;/strong&gt; tests your &lt;code&gt;has_rich_text&lt;/code&gt; associations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/serialize_matcher.rb&#34;&gt;serialize&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;serialize&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/active_record/validate_uniqueness_of_matcher.rb&#34;&gt;validate_uniqueness_of&lt;/a&gt;&lt;/strong&gt; tests usage of &lt;code&gt;validates_uniqueness_of&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ActionController matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/filter_param_matcher.rb&#34;&gt;filter_param&lt;/a&gt;&lt;/strong&gt; tests parameter filtering configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/permit_matcher.rb&#34;&gt;permit&lt;/a&gt;&lt;/strong&gt; tests that an action places a restriction on the &lt;code&gt;params&lt;/code&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/redirect_to_matcher.rb&#34;&gt;redirect_to&lt;/a&gt;&lt;/strong&gt; tests that an action redirects to a certain location.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/render_template_matcher.rb&#34;&gt;render_template&lt;/a&gt;&lt;/strong&gt; tests that an action renders a template.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/render_with_layout_matcher.rb&#34;&gt;render_with_layout&lt;/a&gt;&lt;/strong&gt; tests that an action is rendered with a certain layout.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/rescue_from_matcher.rb&#34;&gt;rescue_from&lt;/a&gt;&lt;/strong&gt; tests usage of the &lt;code&gt;rescue_from&lt;/code&gt; macro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/respond_with_matcher.rb&#34;&gt;respond_with&lt;/a&gt;&lt;/strong&gt; tests that an action responds with a certain status code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/route_matcher.rb&#34;&gt;route&lt;/a&gt;&lt;/strong&gt; tests your routes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/set_session_matcher.rb&#34;&gt;set_session&lt;/a&gt;&lt;/strong&gt; makes assertions on the &lt;code&gt;session&lt;/code&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/set_flash_matcher.rb&#34;&gt;set_flash&lt;/a&gt;&lt;/strong&gt; makes assertions on the &lt;code&gt;flash&lt;/code&gt; hash.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/callback_matcher.rb#L29&#34;&gt;use_after_action&lt;/a&gt;&lt;/strong&gt; tests that an &lt;code&gt;after_action&lt;/code&gt; callback is defined in your controller.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/callback_matcher.rb#L75&#34;&gt;use_around_action&lt;/a&gt;&lt;/strong&gt; tests that an &lt;code&gt;around_action&lt;/code&gt; callback is defined in your controller.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/callback_matcher.rb#L4&#34;&gt;use_before_action&lt;/a&gt;&lt;/strong&gt; tests that a &lt;code&gt;before_action&lt;/code&gt; callback is defined in your controller.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Routing matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/action_controller/route_matcher.rb&#34;&gt;route&lt;/a&gt;&lt;/strong&gt; tests your routes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Independent matchers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/lib/shoulda/matchers/independent/delegate_method_matcher.rb&#34;&gt;delegate_method&lt;/a&gt;&lt;/strong&gt; tests that an object forwards messages to other, internal objects by way of delegation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;Over time our community has created extensions to Shoulda Matchers. If you&#39;ve created something that you want to share, please &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/issues/new&#34;&gt;let us know&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/majioa/shoulda-matchers-cucumber&#34;&gt;shoulda-matchers-cucumber&lt;/a&gt;&lt;/strong&gt; ‚Äì Adds support for using Shoulda Matchers in Cucumber tests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Have a fix for a problem you&#39;ve been running into or an idea for a new feature you think would be useful? Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/CONTRIBUTING.md&#34;&gt;Contributing document&lt;/a&gt; for instructions on setting up the repo on your machine, understanding the codebase, and creating a good pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers is tested and supported against Ruby 2.6+, Rails 5.2+, RSpec 3.x, and Minitest 5.x.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Ruby &amp;lt; 2.4 and Rails &amp;lt; 4.1 compatibility, please use &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/tree/v3.1.3&#34;&gt;v3.1.3&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For Ruby &amp;lt; 3.0 and Rails &amp;lt; 6.1 compatibility, please use &lt;a href=&#34;https://github.com/thoughtbot/shoulda-matchers/tree/v4.5.1&#34;&gt;v4.5.1&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers follows Semantic Versioning 2.0 as defined at &lt;a href=&#34;https://semver.org&#34;&gt;https://semver.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Team&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers is maintained by &lt;a href=&#34;https://github.com/mcmire&#34;&gt;Elliot Winkler&lt;/a&gt; and &lt;a href=&#34;https://github.com/guialbuk&#34;&gt;Gui Albuk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright/License&lt;/h2&gt; &#xA;&lt;p&gt;Shoulda Matchers is copyright ¬© 2006-2022 Tammer Saleh and &lt;a href=&#34;https://thoughtbot.com&#34;&gt;thoughtbot, inc&lt;/a&gt;. It is free and opensource software and may be redistributed under the terms specified in the &lt;a href=&#34;https://raw.githubusercontent.com/thoughtbot/shoulda-matchers/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;About thoughtbot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://presskit.thoughtbot.com/images/thoughtbot-logo-for-readmes.svg?sanitize=true&#34; alt=&#34;thoughtbot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The names and logos for thoughtbot are trademarks of thoughtbot, inc.&lt;/p&gt; &#xA;&lt;p&gt;We are passionate about open source software. See &lt;a href=&#34;https://thoughtbot.com/community?utm_source=github&#34;&gt;our other projects&lt;/a&gt;. We are &lt;a href=&#34;https://thoughtbot.com?utm_source=github&#34;&gt;available for hire&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>