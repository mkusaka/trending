<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-07T01:33:18Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>athityakumar/colorls</title>
    <updated>2022-06-07T01:33:18Z</updated>
    <id>tag:github.com,2022-06-07:/athityakumar/colorls</id>
    <link href="https://github.com/athityakumar/colorls" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby gem that beautifies the terminal&#39;s ls command, with color and font-awesome icons. ðŸŽ‰&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Color LS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://forthebadge.com&#34;&gt;&lt;img src=&#34;http://forthebadge.com/images/badges/made-with-ruby.svg?sanitize=true&#34; alt=&#34;forthebadge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://forthebadge.com&#34;&gt;&lt;img src=&#34;http://forthebadge.com/images/badges/built-with-love.svg?sanitize=true&#34; alt=&#34;forthebadge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/rb/colorls&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/colorls.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/athityakumar/colorls/actions/workflows/ruby.yml&#34;&gt;&lt;img src=&#34;https://github.com/athityakumar/colorls/actions/workflows/ruby.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=shields&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Ruby script that colorizes the &lt;code&gt;ls&lt;/code&gt; output with color and icons. Here are the screenshots of working example on an iTerm2 terminal (Mac OS), &lt;code&gt;oh-my-zsh&lt;/code&gt; with &lt;code&gt;powerlevel9k&lt;/code&gt; theme and &lt;code&gt;powerline nerd-font + awesome-config&lt;/code&gt; font with the &lt;code&gt;Solarized Dark&lt;/code&gt; color theme.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149040-04f3125c-bd25-11e7-8003-66fd29bc18d4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you&#39;re interested in knowing the powerlevel9k configuration to get this prompt, have a look at &lt;a href=&#34;https://gist.github.com/athityakumar/1bd5e9e24cd2a1891565573a893993eb&#34;&gt;this gist&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#flags&#34;&gt;Flags&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-a&lt;/code&gt; (or) &lt;code&gt;--all&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-A&lt;/code&gt; (or) &lt;code&gt;--almost-all&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-d&lt;/code&gt; (or) &lt;code&gt;--dirs&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-f&lt;/code&gt; (or) &lt;code&gt;--files&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-h&lt;/code&gt; (or) &lt;code&gt;--help&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-l&lt;/code&gt; (or) &lt;code&gt;--long&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-r&lt;/code&gt; (or) &lt;code&gt;--report&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;--tree&lt;/code&gt; (or) &lt;code&gt;--tree=[DEPTH]&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;--gs&lt;/code&gt; (or) &lt;code&gt;--git-status&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;--sd&lt;/code&gt; (or) &lt;code&gt;--sort-dirs&lt;/code&gt; or &lt;code&gt;--group-directories-first&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;--sf&lt;/code&gt; (or) &lt;code&gt;--sort-files&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#combination-of-flags&#34;&gt;Combination of flags&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#recommended-configurations&#34;&gt;Recommended configurations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#custom-configurations&#34;&gt;Custom configurations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#updating&#34;&gt;Updating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#uninstallation&#34;&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Man pages have been added. Checkout &lt;code&gt;man colorls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Flags&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-1&lt;/code&gt; : Lists one entry per line&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149062-4f0547ca-bd25-11e7-98b6-587467379704.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-a&lt;/code&gt; (or) &lt;code&gt;--all&lt;/code&gt; : Does not ignore entries starting with &#39;.&#39;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149045-182eb39e-bd25-11e7-83d4-897cb14bcff3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-A&lt;/code&gt; (or) &lt;code&gt;--almost-all&lt;/code&gt; : Does not ignore entries starting with &#39;.&#39;, except &lt;code&gt;./&lt;/code&gt; and &lt;code&gt;../&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149046-1ef7664e-bd25-11e7-8bd9-bfc3c8b27b74.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-d&lt;/code&gt; (or) &lt;code&gt;--dirs&lt;/code&gt; : Shows only directories&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149066-5f842aa8-bd25-11e7-9bf0-23313b717182.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-f&lt;/code&gt; (or) &lt;code&gt;--files&lt;/code&gt; : Shows only files&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149065-5a27c9d4-bd25-11e7-9a2b-fd731d76a058.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-h&lt;/code&gt; (or) &lt;code&gt;--help&lt;/code&gt; : Prints a very helpful help menu&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149096-cf2cf5b0-bd25-11e7-84b6-909d79099c98.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-l&lt;/code&gt; (or) &lt;code&gt;--long&lt;/code&gt; : Shows in long listing format&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149049-2a63ae48-bd25-11e7-943c-5ceed25bd693.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-r&lt;/code&gt; (or) &lt;code&gt;--report&lt;/code&gt; : Shows brief report about number of files and folders shown&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149082-96a83fec-bd25-11e7-9081-7f77e4c90e90.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;--tree&lt;/code&gt; (or) &lt;code&gt;--tree=[DEPTH]&lt;/code&gt; : Shows tree view of the directory with the specified depth (default 3)&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149051-32e596e4-bd25-11e7-93a9-5e50c8d2bb19.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;--gs&lt;/code&gt; (or) &lt;code&gt;--git-status&lt;/code&gt; : Shows git status for each entry&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149075-7a1a1954-bd25-11e7-964e-1adb173aa2b9.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;--sd&lt;/code&gt; (or) &lt;code&gt;--sort-dirs&lt;/code&gt; or &lt;code&gt;--group-directories-first&lt;/code&gt; : Shows directories first, followed by files&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149068-65117fc0-bd25-11e7-8ada-0b055603e3fd.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;--sf&lt;/code&gt; (or) &lt;code&gt;--sort-files&lt;/code&gt; : Shows files first, followed by directories&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149071-6b379de4-bd25-11e7-8764-a0c577e526a1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With &lt;code&gt;-t&lt;/code&gt; : Sort by modification time, newest first (NEED TO ADD IMAGE)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;With color options : &lt;code&gt;--light&lt;/code&gt; or &lt;code&gt;--dark&lt;/code&gt; can be passed as a flag, to choose the appropriate color scheme. By default, the dark color scheme is chosen. In order to tweak any color, read &lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#custom-configurations&#34;&gt;Custom configurations&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Combination of flags&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using &lt;code&gt;--gs&lt;/code&gt; with &lt;code&gt;-t&lt;/code&gt; :&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149076-8423c864-bd25-11e7-816e-8642643d2c27.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using &lt;code&gt;--gs&lt;/code&gt; with &lt;code&gt;-l&lt;/code&gt; :&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149078-899b0622-bd25-11e7-9810-d398eaa77e32.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using &lt;code&gt;--sd&lt;/code&gt; with &lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-A&lt;/code&gt; :&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17109060/32149084-9eb2a416-bd25-11e7-8fb7-a9d336c6e038.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Ruby (preferably, version &amp;gt;= 2.6)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nerdfonts.com/font-downloads&#34;&gt;Download&lt;/a&gt; and install a Nerd Font. Have a look at the &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/raw/master/readme.md&#34;&gt;Nerd Font README&lt;/a&gt; for installation instructions.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note for &lt;code&gt;iTerm2&lt;/code&gt; users - Please enable the Nerd Font at iTerm2 &amp;gt; Preferences &amp;gt; Profiles &amp;gt; Text &amp;gt; Non-ASCII font &amp;gt; Hack Regular Nerd Font Complete.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note for &lt;code&gt;HyperJS&lt;/code&gt; users - Please add &lt;code&gt;&#34;Hack Nerd Font&#34;&lt;/code&gt; Font as an option to &lt;code&gt;fontFamily&lt;/code&gt; in your &lt;code&gt;~/.hyper.js&lt;/code&gt; file.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;a href=&#34;https://rubygems.org/gems/colorls/&#34;&gt;colorls&lt;/a&gt; ruby gem with &lt;code&gt;gem install colorls&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note for &lt;code&gt;rbenv&lt;/code&gt; users - In case of load error when using &lt;code&gt;lc&lt;/code&gt;, please try the below patch.&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rbenv rehash&#xA;rehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable tab completion for flags by entering following line to your shell configuration file (&lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt;) :&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source $(dirname $(gem which colorls))/tab_complete.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start using &lt;code&gt;colorls&lt;/code&gt; &lt;span&gt;ðŸŽ‰&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Have a look at &lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#recommended-configurations&#34;&gt;Recommended configurations&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#custom-configurations&#34;&gt;Custom configurations&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Recommended configurations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;To add some short command (say, &lt;code&gt;lc&lt;/code&gt;) with some flag options (say, &lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;-A&lt;/code&gt;, &lt;code&gt;--sd&lt;/code&gt;) by default, add this to your shell configuration file (&lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, etc.) :&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias lc=&#39;colorls -lA --sd&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For changing the icon(s) to other unicode icons of choice (select icons from &lt;a href=&#34;https://nerdfonts.com/&#34;&gt;here&lt;/a&gt;), change the YAML files in a text editor of your choice (say, &lt;code&gt;subl&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;subl $(dirname $(gem which colorls))/yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Custom configurations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can overwrite the existing icons and colors mapping by copying the yaml files from &lt;code&gt;$(dirname $(gem which colorls))/yaml&lt;/code&gt; into &lt;code&gt;~/.config/colorls&lt;/code&gt;, and changing them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To overwrite color mapping :&lt;/p&gt; &lt;p&gt;Please have a look at the &lt;a href=&#34;https://github.com/sickill/rainbow#color-list&#34;&gt;list of supported color names&lt;/a&gt;. You may also use a color hex code as long as it is quoted within the YAML file and prefaced with a &lt;code&gt;#&lt;/code&gt; symbol.&lt;/p&gt; &lt;p&gt;Let&#39;s say that you&#39;re using the dark color scheme and would like to change the color of untracked file (&lt;code&gt;??&lt;/code&gt;) in the &lt;code&gt;--git-status&lt;/code&gt; flag to yellow. Copy the defaut &lt;code&gt;dark_colors.yaml&lt;/code&gt; and change it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp $(dirname $(gem which colorls))/yaml/dark_colors.yaml ~/.config/colorls/dark_colors.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the &lt;code&gt;~/.config/colorls/dark_colors.yaml&lt;/code&gt; file, change the color set for &lt;code&gt;untracked&lt;/code&gt; from &lt;code&gt;darkorange&lt;/code&gt; to &lt;code&gt;yellow&lt;/code&gt;, and save the change.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;untracked: yellow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or, using hex color codes:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;untracked: &#39;#FFFF00&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To overwrite icon mapping :&lt;/p&gt; &lt;p&gt;Please have a look at the &lt;a href=&#34;https://nerdfonts.com/&#34;&gt;list of supported icons&lt;/a&gt;. Let&#39;s say you want to add an icon for swift files. Copy the default &lt;code&gt;files.yaml&lt;/code&gt; and change it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp $(dirname $(gem which colorls))/yaml/files.yaml ~/.config/colorls/files.yaml`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the &lt;code&gt;~/.config/colorls/files.yaml&lt;/code&gt; file, add a new icon / change an existing icon, and save the change.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;swift: &#34;\uF179&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;User contributed alias configurations :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gist.github.com/rjhilgefort/51ea47dd91bcd90cd6d9b3b199188c16&#34;&gt;@rjhilgefort&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Updating&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to update to the latest version of &lt;code&gt;colorls&lt;/code&gt;?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem update colorls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Uninstallation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to uninstall and revert back to the old style? No issues (sob). Please feel free to open an issue regarding how we can enhance &lt;code&gt;colorls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem uninstall colorls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your contributions are always welcome! Please have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; first. &lt;span&gt;ðŸŽ‰&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/#table-of-contents&#34;&gt;(Back to top)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The MIT License (MIT) 2017 - &lt;a href=&#34;https://github.com/athityakumar/&#34;&gt;Athitya Kumar&lt;/a&gt;. Please have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/athityakumar/colorls/main/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>turingschool-examples/nearest-fuel-station</title>
    <updated>2022-06-07T01:33:18Z</updated>
    <id>tag:github.com,2022-06-07:/turingschool-examples/nearest-fuel-station</id>
    <link href="https://github.com/turingschool-examples/nearest-fuel-station" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backend Module 3 Diagnostic&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nearest Fuel Station&lt;/h1&gt; &#xA;&lt;h3&gt;Versions&lt;/h3&gt; &#xA;&lt;p&gt;Ruby 2.7.4&lt;/p&gt; &#xA;&lt;p&gt;Rails 5.2.6&lt;/p&gt; &#xA;&lt;h3&gt;Set Up&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle exec figaro install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;`rails db:{create,migrate}``&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rails s&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>octokit/octokit.rb</title>
    <updated>2022-06-07T01:33:18Z</updated>
    <id>tag:github.com,2022-06-07:/octokit/octokit.rb</id>
    <link href="https://github.com/octokit/octokit.rb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby toolkit for the GitHub API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Octokit&lt;/h1&gt; &#xA;&lt;p&gt;Ruby toolkit for the GitHub API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.github.com/assets/images/gundamcat.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Upgrading? Check the &lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#upgrading-guide&#34;&gt;Upgrade Guide&lt;/a&gt; before bumping to a new &lt;a href=&#34;http://semver.org/&#34;&gt;major version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#philosophy&#34;&gt;Philosophy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#quick-start&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#making-requests&#34;&gt;Making requests&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#additional-query-parameters&#34;&gt;Additional Query Parameters&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#consuming-resources&#34;&gt;Consuming resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#accessing-http-responses&#34;&gt;Accessing HTTP responses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#handling-errors&#34;&gt;Handling errors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#authentication&#34;&gt;Authentication&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#basic-authentication&#34;&gt;Basic Authentication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#oauth-access-tokens&#34;&gt;OAuth access tokens&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#two-factor-authentication&#34;&gt;Two-Factor Authentication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#using-a-netrc-file&#34;&gt;Using a .netrc file&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#application-authentication&#34;&gt;Application authentication&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#pagination&#34;&gt;Pagination&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#auto-pagination&#34;&gt;Auto pagination&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#working-with-github-enterprise&#34;&gt;Working with GitHub Enterprise&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#interacting-with-the-githubcom-apis-in-github-enterprise&#34;&gt;Interacting with the GitHub.com APIs in GitHub Enterprise&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#interacting-with-the-github-enterprise-admin-apis&#34;&gt;Interacting with the GitHub Enterprise Admin APIs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#interacting-with-the-github-enterprise-management-console-apis&#34;&gt;Interacting with the GitHub Enterprise Management Console APIs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#ssl-connection-errors&#34;&gt;SSL Connection Errors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#configuration-and-defaults&#34;&gt;Configuration and defaults&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#configuring-module-defaults&#34;&gt;Configuring module defaults&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#using-env-variables&#34;&gt;Using ENV variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#timeouts&#34;&gt;Timeouts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#hypermedia-agent&#34;&gt;Hypermedia agent&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#hypermedia-in-octokit&#34;&gt;Hypermedia in Octokit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#uri-templates&#34;&gt;URI templates&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#the-full-hypermedia-experience&#34;&gt;The Full Hypermedia Experienceâ„¢&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#upgrading-guide&#34;&gt;Upgrading guide&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#upgrading-from-1xx&#34;&gt;Upgrading from 1.x.x&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#advanced-usage&#34;&gt;Advanced usage&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#caching&#34;&gt;Caching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#hacking-on-octokitrb&#34;&gt;Hacking on Octokit.rb&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#running-and-writing-new-tests&#34;&gt;Running and writing new tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#supported-ruby-versions&#34;&gt;Supported Ruby Versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#versioning&#34;&gt;Versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#making-repeating-requests&#34;&gt;Making Repeating Requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;API wrappers &lt;a href=&#34;http://wynnnetherland.com/journal/what-makes-a-good-api-wrapper&#34;&gt;should reflect the idioms of the language in which they were written&lt;/a&gt;. Octokit.rb wraps the &lt;a href=&#34;https://developer.github.com/v3/&#34;&gt;GitHub API&lt;/a&gt; in a flat API client that follows Ruby conventions and requires little knowledge of REST. Most methods have positional arguments for required input and an options hash for optional parameters, headers, or other options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new&#xA;&#xA;# Fetch a README with Accept header for HTML format&#xA;client.readme &#39;al3x/sovereign&#39;, :accept =&amp;gt; &#39;application/vnd.github.html&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install via Rubygems&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install octokit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... or add to your Gemfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#34;octokit&#34;, &#34;~&amp;gt; 4.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access the library in Ruby:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;require &#39;octokit&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Making requests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://octokit.github.io/octokit.rb/method_list.html&#34;&gt;API methods&lt;/a&gt; are available as client instance methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Provide authentication credentials&#xA;client = Octokit::Client.new(:access_token =&amp;gt; &#39;personal_access_token&#39;)&#xA;&#xA;# You can still use the username/password syntax by replacing the password value with your PAT.&#xA;# client = Octokit::Client.new(:login =&amp;gt; &#39;defunkt&#39;, :password =&amp;gt; &#39;personal_access_token&#39;)&#xA;&#xA;# Fetch the current user&#xA;client.user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Additional query parameters&lt;/h3&gt; &#xA;&lt;p&gt;When passing additional parameters to GET based request use the following syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; # query: { parameter_name: &#39;value&#39; }&#xA; # Example: Get repository listing by owner in ascending order&#xA; client.repos({}, query: {type: &#39;owner&#39;, sort: &#39;asc&#39;})&#xA;&#xA; # Example: Get contents of a repository by ref&#xA; # https://api.github.com/repos/octokit/octokit.rb/contents/path/to/file.rb?ref=some-other-branch&#xA; client.contents(&#39;octokit/octokit.rb&#39;, path: &#39;path/to/file.rb&#39;, query: {ref: &#39;some-other-branch&#39;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Consuming resources&lt;/h2&gt; &#xA;&lt;p&gt;Most methods return a &lt;code&gt;Resource&lt;/code&gt; object which provides dot notation and &lt;code&gt;[]&lt;/code&gt; access for fields returned in the API response.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new&#xA;&#xA;# Fetch a user&#xA;user = client.user &#39;jbarnette&#39;&#xA;puts user.name&#xA;# =&amp;gt; &#34;John Barnette&#34;&#xA;puts user.fields&#xA;# =&amp;gt; &amp;lt;Set: {:login, :id, :gravatar_id, :type, :name, :company, :blog, :location, :email, :hireable, :bio, :public_repos, :followers, :following, :created_at, :updated_at, :public_gists}&amp;gt;&#xA;puts user[:company]&#xA;# =&amp;gt; &#34;GitHub&#34;&#xA;user.rels[:gists].href&#xA;# =&amp;gt; &#34;https://api.github.com/users/jbarnette/gists&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; URL fields are culled into a separate &lt;code&gt;.rels&lt;/code&gt; collection for easier &lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#hypermedia-agent&#34;&gt;Hypermedia&lt;/a&gt; support.&lt;/p&gt; &#xA;&lt;h2&gt;Accessing HTTP responses&lt;/h2&gt; &#xA;&lt;p&gt;While most methods return a &lt;code&gt;Resource&lt;/code&gt; object or a Boolean, sometimes you may need access to the raw HTTP response headers. You can access the last HTTP response with &lt;code&gt;Client#last_response&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user      = client.user &#39;andrewpthorp&#39;&#xA;response  = client.last_response&#xA;etag      = response.headers[:etag]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Handling errors&lt;/h2&gt; &#xA;&lt;p&gt;When the API returns an error response, Octokit will raise a Ruby exception.&lt;/p&gt; &#xA;&lt;p&gt;A range of different exceptions can be raised depending on the error returned by the API - for example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;code&gt;400 Bad Request&lt;/code&gt; response will lead to an &lt;code&gt;Octokit::BadRequest&lt;/code&gt; error&lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;403 Forbidden&lt;/code&gt; error with a &#34;rate limited exceeded&#34; message will lead to a &lt;code&gt;Octokit::TooManyRequests&lt;/code&gt; error&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of the different exception classes inherit from &lt;code&gt;Octokit::Error&lt;/code&gt; and expose the &lt;code&gt;#response_status&lt;/code&gt;, &lt;code&gt;#response_headers&lt;/code&gt; and &lt;code&gt;#response_body&lt;/code&gt;. For validation errors, &lt;code&gt;#errors&lt;/code&gt; will return an &lt;code&gt;Array&lt;/code&gt; of &lt;code&gt;Hash&lt;/code&gt;es with the detailed information &lt;a href=&#34;https://docs.github.com/en/rest/overview/resources-in-the-rest-api#client-errors&#34;&gt;returned by the API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authentication&lt;/h2&gt; &#xA;&lt;p&gt;Octokit supports the various &lt;a href=&#34;http://developer.github.com/v3/#authentication&#34;&gt;authentication methods supported by the GitHub API&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;h3&gt;Basic Authentication&lt;/h3&gt; &#xA;&lt;p&gt;Using your GitHub username and password is the easiest way to get started making authenticated requests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new(:login =&amp;gt; &#39;defunkt&#39;, :password =&amp;gt; &#39;c0d3b4ssssss!&#39;)&#xA;&#xA;user = client.user&#xA;user.login&#xA;# =&amp;gt; &#34;defunkt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While Basic Authentication allows you to get started quickly, OAuth access tokens are the preferred way to authenticate on behalf of users.&lt;/p&gt; &#xA;&lt;h3&gt;OAuth access tokens&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://developer.github.com/v3/oauth/&#34;&gt;OAuth access tokens&lt;/a&gt; provide two main benefits over using your username and password:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Revocable access&lt;/strong&gt;. Access tokens can be revoked, removing access for only that token without having to change your password everywhere.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Limited access&lt;/strong&gt;. Access tokens have &lt;a href=&#34;http://developer.github.com/v3/oauth/#scopes&#34;&gt;access scopes&lt;/a&gt; which allow for more granular access to API resources. For instance, you can grant a third party access to your gists but not your private repositories.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use an access token with the Octokit client, pass your token in the &lt;code&gt;:access_token&lt;/code&gt; options parameter in lieu of your username and password:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new(:access_token =&amp;gt; &#34;&amp;lt;your 40 char token&amp;gt;&#34;)&#xA;&#xA;user = client.user&#xA;user.login&#xA;# =&amp;gt; &#34;defunkt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://help.github.com/articles/creating-an-access-token-for-command-line-use&#34;&gt;create access tokens through your GitHub Account Settings&lt;/a&gt; or with a basic authenticated Octokit client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new(:login =&amp;gt; &#39;defunkt&#39;, :password =&amp;gt; &#39;c0d3b4ssssss!&#39;)&#xA;&#xA;client.create_authorization(:scopes =&amp;gt; [&#34;user&#34;], :note =&amp;gt; &#34;Name of token&#34;)&#xA;# =&amp;gt; &amp;lt;your new oauth token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Two-Factor Authentication&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/about-two-factor-authentication&#34;&gt;Two-Factor Authentication&lt;/a&gt; brings added security to the account by requiring more information to login.&lt;/p&gt; &#xA;&lt;p&gt;Using two-factor authentication for API calls is as simple as adding the &lt;a href=&#34;http://developer.github.com/v3/auth/#working-with-two-factor-authentication&#34;&gt;required header&lt;/a&gt; as an option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new \&#xA;  :login    =&amp;gt; &#39;defunkt&#39;,&#xA;  :password =&amp;gt; &#39;c0d3b4ssssss!&#39;&#xA;&#xA;user = client.user(&#34;defunkt&#34;, :headers =&amp;gt; { &#34;X-GitHub-OTP&#34; =&amp;gt; &#34;&amp;lt;your 2FA token&amp;gt;&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can imagine, this gets annoying quickly since two-factor auth tokens are very short lived. So it is recommended to create an oauth token for the user to communicate with the API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new \&#xA;  :login    =&amp;gt; &#39;defunkt&#39;,&#xA;  :password =&amp;gt; &#39;c0d3b4ssssss!&#39;&#xA;&#xA;client.create_authorization(:scopes =&amp;gt; [&#34;user&#34;], :note =&amp;gt; &#34;Name of token&#34;,&#xA;                            :headers =&amp;gt; { &#34;X-GitHub-OTP&#34; =&amp;gt; &#34;&amp;lt;your 2FA token&amp;gt;&#34; })&#xA;# =&amp;gt; &amp;lt;your new oauth token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a .netrc file&lt;/h3&gt; &#xA;&lt;p&gt;Octokit supports reading credentials from a netrc file (defaulting to &lt;code&gt;~/.netrc&lt;/code&gt;). Given these lines in your netrc:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine api.github.com&#xA;  login defunkt&#xA;  password c0d3b4ssssss!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now create a client with those credentials:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new(:netrc =&amp;gt; true)&#xA;client.login&#xA;# =&amp;gt; &#34;defunkt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But &lt;em&gt;I want to use OAuth&lt;/em&gt; you say. Since the GitHub API supports using an OAuth token as a Basic password, you totally can:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine api.github.com&#xA;  login defunkt&#xA;  password &amp;lt;your 40 char token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Support for netrc requires adding the &lt;a href=&#34;https://rubygems.org/gems/netrc&#34;&gt;netrc gem&lt;/a&gt; to your Gemfile or &lt;code&gt;.gemspec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Application authentication&lt;/h3&gt; &#xA;&lt;p&gt;Octokit also supports application-only authentication &lt;a href=&#34;http://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications&#34;&gt;using OAuth application client credentials&lt;/a&gt;. Using application credentials will result in making anonymous API calls on behalf of an application in order to take advantage of the higher rate limit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Octokit::Client.new \&#xA;  :client_id     =&amp;gt; &#34;&amp;lt;your 20 char id&amp;gt;&#34;,&#xA;  :client_secret =&amp;gt; &#34;&amp;lt;your 40 char secret&amp;gt;&#34;&#xA;&#xA;user = client.user &#39;defunkt&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Default results per_page&lt;/h2&gt; &#xA;&lt;p&gt;Default results from the GitHub API are 30, if you wish to add more you must do so during Octokit configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit::Client.new(access_token: &#34;&amp;lt;your 40 char token&amp;gt;&#34;, per_page: 100)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pagination&lt;/h2&gt; &#xA;&lt;p&gt;Many GitHub API resources are &lt;a href=&#34;http://developer.github.com/v3/#pagination&#34;&gt;paginated&lt;/a&gt;. While you may be tempted to start adding &lt;code&gt;:page&lt;/code&gt; parameters to your calls, the API returns links to the next, previous, and last pages for you in the &lt;code&gt;Link&lt;/code&gt; response header as &lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#hypermedia-agent&#34;&gt;Hypermedia link relations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;issues = client.issues &#39;rails/rails&#39;&#xA;issues.concat client.get(client.last_response.rels[:next].href)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Auto pagination&lt;/h3&gt; &#xA;&lt;p&gt;For smallish resource lists, Octokit provides auto pagination. When this is enabled, calls for paginated resources will fetch and concatenate the results from every page into a single array:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.auto_paginate = true&#xA;issues = client.issues &#39;rails/rails&#39;&#xA;issues.length&#xA;&#xA;# =&amp;gt; 702&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also enable auto pagination for all Octokit client instances:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit.configure do |c|&#xA;  c.auto_paginate = true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; While Octokit auto pagination will set the page size to the maximum &lt;code&gt;100&lt;/code&gt;, and seek to not overstep your rate limit, you probably want to use a custom pattern for traversing large lists.&lt;/p&gt; &#xA;&lt;h2&gt;Working with GitHub Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;With a bit of setup, you can also use Octokit with your GitHub Enterprise instance.&lt;/p&gt; &#xA;&lt;h3&gt;Interacting with the GitHub.com APIs in GitHub Enterprise&lt;/h3&gt; &#xA;&lt;p&gt;To interact with the &#34;regular&#34; GitHub.com APIs in GitHub Enterprise, simply configure the &lt;code&gt;api_endpoint&lt;/code&gt; to match your hostname. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit.configure do |c|&#xA;  c.api_endpoint = &#34;https://&amp;lt;hostname&amp;gt;/api/v3/&#34;&#xA;end&#xA;&#xA;client = Octokit::Client.new(:access_token =&amp;gt; &#34;&amp;lt;your 40 char token&amp;gt;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interacting with the GitHub Enterprise Admin APIs&lt;/h3&gt; &#xA;&lt;p&gt;The GitHub Enterprise Admin APIs are under a different client: &lt;code&gt;EnterpriseAdminClient&lt;/code&gt;. You&#39;ll need to have an administrator account in order to use these APIs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;admin_client = Octokit::EnterpriseAdminClient.new(&#xA;  :access_token =&amp;gt; &#34;&amp;lt;your 40 char token&amp;gt;&#34;,&#xA;  :api_endpoint =&amp;gt; &#34;https://&amp;lt;hostname&amp;gt;/api/v3/&#34;&#xA;)&#xA;&#xA;# or&#xA;Octokit.configure do |c|&#xA;  c.api_endpoint = &#34;https://&amp;lt;hostname&amp;gt;/api/v3/&#34;&#xA;  c.access_token = &#34;&amp;lt;your 40 char token&amp;gt;&#34;&#xA;end&#xA;&#xA;admin_client = Octokit.enterprise_admin_client.new&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interacting with the GitHub Enterprise Management Console APIs&lt;/h3&gt; &#xA;&lt;p&gt;The GitHub Enterprise Management Console APIs are also under a separate client: &lt;code&gt;EnterpriseManagementConsoleClient&lt;/code&gt;. In order to use it, you&#39;ll need to provide both your management console password as well as the endpoint to your management console. This is different from the API endpoint provided above.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;management_console_client = Octokit::EnterpriseManagementConsoleClient.new(&#xA;  :management_console_password =&amp;gt; &#34;secret&#34;,&#xA;  :management_console_endpoint = &#34;https://hostname:8633&#34;&#xA;)&#xA;&#xA;# or&#xA;Octokit.configure do |c|&#xA;  c.management_console_endpoint = &#34;https://hostname:8633&#34;&#xA;  c.management_console_password = &#34;secret&#34;&#xA;end&#xA;&#xA;management_console_client = Octokit.enterprise_management_console_client.new&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SSL Connection Errors&lt;/h3&gt; &#xA;&lt;p&gt;You &lt;em&gt;may&lt;/em&gt; need to disable SSL temporarily while first setting up your GitHub Enterprise install. You can do that with the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.connection_options[:ssl] = { :verify =&amp;gt; false }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Do remember to turn &lt;code&gt;:verify&lt;/code&gt; back to &lt;code&gt;true&lt;/code&gt;, as it&#39;s important for secure communication.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration and defaults&lt;/h2&gt; &#xA;&lt;p&gt;While &lt;code&gt;Octokit::Client&lt;/code&gt; accepts a range of options when creating a new client instance, Octokit&#39;s configuration API allows you to set your configuration options at the module level. This is particularly handy if you&#39;re creating a number of client instances based on some shared defaults. Changing options affects new instances only and will not modify existing &lt;code&gt;Octokit::Client&lt;/code&gt; instances created with previous options.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring module defaults&lt;/h3&gt; &#xA;&lt;p&gt;Every writable attribute in {Octokit::Configurable} can be set one at a time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit.api_endpoint = &#39;http://api.github.dev&#39;&#xA;Octokit.web_endpoint = &#39;http://github.dev&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or in batch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit.configure do |c|&#xA;  c.api_endpoint = &#39;http://api.github.dev&#39;&#xA;  c.web_endpoint = &#39;http://github.dev&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using ENV variables&lt;/h3&gt; &#xA;&lt;p&gt;Default configuration values are specified in {Octokit::Default}. Many attributes will look for a default value from the ENV before returning Octokit&#39;s default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Given $OCTOKIT_API_ENDPOINT is &#34;http://api.github.dev&#34;&#xA;client.api_endpoint&#xA;&#xA;# =&amp;gt; &#34;http://api.github.dev&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deprecation warnings and API endpoints in development preview warnings are printed to STDOUT by default, these can be disabled by setting the ENV &lt;code&gt;OCTOKIT_SILENT=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Timeouts&lt;/h3&gt; &#xA;&lt;p&gt;By default, Octokit does not timeout network requests. To set a timeout, pass in Faraday timeout settings to Octokit&#39;s &lt;code&gt;connection_options&lt;/code&gt; setting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit.configure do |c|&#xA;  c.api_endpoint = ENV.fetch(&#39;GITHUB_API_ENDPOINT&#39;, &#39;https://api.github.com/&#39;)&#xA;  c.connection_options = {&#xA;    request: {&#xA;      open_timeout: 5,&#xA;      timeout: 5&#xA;    }&#xA;  }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should set a timeout in order to avoid Rubyâ€™s Timeout module, which can hose your server. Here are some resources for more information on this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.schneems.com/2017/02/21/the-oldest-bug-in-ruby-why-racktimeout-might-hose-your-server/&#34;&gt;The Oldest Bug In Ruby - Why Rack::Timeout Might Hose your Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mikeperham.com/2015/05/08/timeout-rubys-most-dangerous-api/&#34;&gt;Timeout: Ruby&#39;s Most Dangerous API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts&#34;&gt;The Ultimate Guide to Ruby Timeouts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hypermedia agent&lt;/h2&gt; &#xA;&lt;p&gt;Starting in version 2.0, Octokit is &lt;a href=&#34;http://en.wikipedia.org/wiki/Hypermedia&#34;&gt;hypermedia&lt;/a&gt;-enabled. Under the hood, {Octokit::Client} uses &lt;a href=&#34;https://github.com/lostisland/sawyer&#34;&gt;Sawyer&lt;/a&gt;, a hypermedia client built on &lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Hypermedia in Octokit&lt;/h3&gt; &#xA;&lt;p&gt;Resources returned by Octokit methods contain not only data but hypermedia link relations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user = client.user &#39;technoweenie&#39;&#xA;&#xA;# Get the repos rel, returned from the API&#xA;# as repos_url in the resource&#xA;user.rels[:repos].href&#xA;# =&amp;gt; &#34;https://api.github.com/users/technoweenie/repos&#34;&#xA;&#xA;repos = user.rels[:repos].get.data&#xA;repos.last.name&#xA;# =&amp;gt; &#34;faraday-zeromq&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When processing API responses, all &lt;code&gt;*_url&lt;/code&gt; attributes are culled into the link relations collection. Any &lt;code&gt;url&lt;/code&gt; attribute becomes &lt;code&gt;.rels[:self]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;URI templates&lt;/h3&gt; &#xA;&lt;p&gt;You might notice many link relations have variable placeholders. Octokit supports &lt;a href=&#34;http://tools.ietf.org/html/rfc6570&#34;&gt;URI Templates&lt;/a&gt; for parameterized URI expansion:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;repo = client.repo &#39;pengwynn/pingwynn&#39;&#xA;rel = repo.rels[:issues]&#xA;# =&amp;gt; #&amp;lt;Sawyer::Relation: issues: get https://api.github.com/repos/pengwynn/pingwynn/issues{/number}&amp;gt;&#xA;&#xA;# Get a page of issues&#xA;rel.get.data&#xA;&#xA;# Get issue #2&#xA;rel.get(:uri =&amp;gt; {:number =&amp;gt; 2}).data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The Full Hypermedia Experienceâ„¢&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use Octokit as a pure hypermedia API client, you can start at the API root and follow link relations from there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;root = client.root&#xA;root.rels[:repository].get :uri =&amp;gt; {:owner =&amp;gt; &#34;octokit&#34;, :repo =&amp;gt; &#34;octokit.rb&#34; }&#xA;root.rels[:user_repositories].get :uri =&amp;gt; { :user =&amp;gt; &#34;octokit&#34; },&#xA;                                  :query =&amp;gt; { :type =&amp;gt; &#34;owner&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Octokit 3.0 aims to be hypermedia-driven, removing the internal URL construction currently used throughout the client.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading guide&lt;/h2&gt; &#xA;&lt;p&gt;Version 4.0&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;removes support for a &lt;a href=&#34;https://github.com/octokit/octokit.rb/commit/e48e91f736d5fce51e3bf74d7c9022aaa52f5c5c&#34;&gt;long-deprecated overload&lt;/a&gt; for passing state as a positional argument&lt;/strong&gt; when listing pull requests. Instead, pass &lt;code&gt;state&lt;/code&gt; in the method options.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;drops support for Ruby &amp;lt; 2.0&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;adds support for new &lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/#working-with-github-enterprise&#34;&gt;Enterprise-only APIs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;adds support for &lt;a href=&#34;https://developer.github.com/changes/2015-05-26-repository-redirects-are-coming/&#34;&gt;Repository redirects&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Version 3.0 includes a couple breaking changes when upgrading from v2.x.x:&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://developer.github.com/changes/2014-01-07-upcoming-change-to-default-media-type/&#34;&gt;default media type&lt;/a&gt; is now &lt;code&gt;v3&lt;/code&gt; instead of &lt;code&gt;beta&lt;/code&gt;. If you need to request the older media type, you can set the default media type for the client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octokit.default_media_type = &#34;application/vnd.github.beta+json&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or per-request&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.emails(:accept =&amp;gt; &#34;application/vnd.github.beta+json&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The long-deprecated &lt;code&gt;Octokit::Client#create_download&lt;/code&gt; method has been removed.&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading from 1.x.x&lt;/h3&gt; &#xA;&lt;p&gt;Version 2.0 includes a completely rewritten &lt;code&gt;Client&lt;/code&gt; factory that now memoizes client instances based on unique configuration options. Breaking changes also include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:oauth_token&lt;/code&gt; is now &lt;code&gt;:access_token&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:auto_traversal&lt;/code&gt; is now &lt;code&gt;:auto_paginate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hashie::Mash&lt;/code&gt; has been removed. Responses now return a &lt;code&gt;Sawyer::Resource&lt;/code&gt; object. This new type behaves mostly like a Ruby &lt;code&gt;Hash&lt;/code&gt;, but does not fully support the &lt;code&gt;Hashie::Mash&lt;/code&gt; API.&lt;/li&gt; &#xA; &lt;li&gt;Two new client error types are raised where appropriate: &lt;code&gt;Octokit::TooManyRequests&lt;/code&gt; and &lt;code&gt;Octokit::TooManyLoginAttempts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;search_*&lt;/code&gt; methods from v1.x are now found at &lt;code&gt;legacy_search_*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for netrc requires including the &lt;a href=&#34;https://rubygems.org/gems/netrc&#34;&gt;netrc gem&lt;/a&gt; in your Gemfile or gemspec.&lt;/li&gt; &#xA; &lt;li&gt;DateTime fields are now proper &lt;code&gt;DateTime&lt;/code&gt; objects. Previous versions outputted DateTime fields as &#39;String&#39; objects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced usage&lt;/h2&gt; &#xA;&lt;p&gt;Since Octokit employs &lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday&lt;/a&gt; under the hood, some behavior can be extended via middleware.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;Often, it helps to know what Octokit is doing under the hood. You can add a logger to the middleware that enables you to peek into the underlying HTTP traffic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stack = Faraday::RackBuilder.new do |builder|&#xA;  builder.use Faraday::Retry::Middleware, exceptions: [Octokit::ServerError] # or Faraday::Request::Retry for Faraday &amp;lt; 2.0&#xA;  builder.use Octokit::Middleware::FollowRedirects&#xA;  builder.use Octokit::Response::RaiseError&#xA;  builder.use Octokit::Response::FeedParser&#xA;  builder.response :logger do |logger|&#xA;    logger.filter(/(Authorization: &#34;(token|Bearer) )(\w+)/, &#39;\1[REMOVED]&#39;)&#xA;  end&#xA;  builder.adapter Faraday.default_adapter&#xA;end&#xA;Octokit.middleware = stack&#xA;&#xA;client = Octokit::Client.new&#xA;client.user &#39;pengwynn&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;I, [2013-08-22T15:54:38.583300 #88227]  INFO -- : get https://api.github.com/users/pengwynn&#xA;D, [2013-08-22T15:54:38.583401 #88227] DEBUG -- request: Accept: &#34;application/vnd.github.beta+json&#34;&#xA;User-Agent: &#34;Octokit Ruby Gem 2.0.0.rc4&#34;&#xA;I, [2013-08-22T15:54:38.843313 #88227]  INFO -- Status: 200&#xA;D, [2013-08-22T15:54:38.843459 #88227] DEBUG -- response: server: &#34;GitHub.com&#34;&#xA;date: &#34;Thu, 22 Aug 2013 20:54:40 GMT&#34;&#xA;content-type: &#34;application/json; charset=utf-8&#34;&#xA;transfer-encoding: &#34;chunked&#34;&#xA;connection: &#34;close&#34;&#xA;status: &#34;200 OK&#34;&#xA;x-ratelimit-limit: &#34;60&#34;&#xA;x-ratelimit-remaining: &#34;39&#34;&#xA;x-ratelimit-reset: &#34;1377205443&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday README&lt;/a&gt; for more middleware magic.&lt;/p&gt; &#xA;&lt;h3&gt;Caching&lt;/h3&gt; &#xA;&lt;p&gt;If you want to boost performance, stretch your API rate limit, or avoid paying the hypermedia tax, you can use &lt;a href=&#34;https://github.com/plataformatec/faraday-http-cache&#34;&gt;Faraday Http Cache&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add the gem to your Gemfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;faraday-http-cache&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, construct your own Faraday middleware:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stack = Faraday::RackBuilder.new do |builder|&#xA;  builder.use Faraday::HttpCache, serializer: Marshal, shared_cache: false&#xA;  builder.use Octokit::Response::RaiseError&#xA;  builder.adapter Faraday.default_adapter&#xA;end&#xA;Octokit.middleware = stack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once configured, the middleware will store responses in cache based on ETag fingerprint and serve those back up for future &lt;code&gt;304&lt;/code&gt; responses for the same resource. See the &lt;a href=&#34;https://github.com/plataformatec/faraday-http-cache&#34;&gt;project README&lt;/a&gt; for advanced usage.&lt;/p&gt; &#xA;&lt;h2&gt;Hacking on Octokit.rb&lt;/h2&gt; &#xA;&lt;p&gt;If you want to hack on Octokit locally, we try to make &lt;a href=&#34;http://wynnnetherland.com/linked/2013012801/bootstrapping-consistency&#34;&gt;bootstrapping the project&lt;/a&gt; as painless as possible. To start hacking, clone and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;script/bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install project dependencies and get you up and running. If you want to run a Ruby console to poke on Octokit, you can crank one up with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;script/console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using the scripts in &lt;code&gt;./script&lt;/code&gt; instead of &lt;code&gt;bundle exec rspec&lt;/code&gt;, &lt;code&gt;bundle console&lt;/code&gt;, etc. ensures your dependencies are up-to-date.&lt;/p&gt; &#xA;&lt;h3&gt;Code of Conduct&lt;/h3&gt; &#xA;&lt;p&gt;We want both the Octokit.rb and larger Octokit communities to be open and welcoming environments. Please read and follow both in spirit and letter &lt;a href=&#34;https://raw.githubusercontent.com/octokit/octokit.rb/4-stable/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running and writing new tests&lt;/h3&gt; &#xA;&lt;p&gt;Octokit uses &lt;a href=&#34;https://github.com/vcr/vcr&#34;&gt;VCR&lt;/a&gt; for recording and playing back API fixtures during test runs. These cassettes (fixtures) are part of the Git project in the &lt;code&gt;spec/cassettes&lt;/code&gt; folder. If you&#39;re not recording new cassettes you can run the specs with existing cassettes with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;script/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Octokit uses environmental variables for storing credentials used in testing. If you are testing an API endpoint that doesn&#39;t require authentication, you can get away without any additional configuration. For the most part, tests use an authenticated client, using a token stored in &lt;code&gt;ENV[&#39;OCTOKIT_TEST_GITHUB_TOKEN&#39;]&lt;/code&gt;. There are several different authentication methods used across the api. Here is the full list of configurable environmental variables for testing Octokit:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;ENV Variable&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_LOGIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GitHub login name (preferably one created specifically for testing against).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Password for the test GitHub login.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/blog/1509-personal-api-tokens&#34;&gt;Personal Access Token&lt;/a&gt; for the test GitHub login.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_CLIENT_ID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Test OAuth application client id.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_CLIENT_SECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Test OAuth application client secret.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_REPOSITORY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Test repository to perform destructive actions against, this should not be set to any repository of importance. &lt;strong&gt;Automatically created by the test suite if nonexistent&lt;/strong&gt; Default: &lt;code&gt;api-sandbox&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_ORGANIZATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Test organization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_ENTERPRISE_LOGIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GitHub Enterprise login name.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_ENTERPRISE_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GitHub Enterprise token.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GitHub Enterprise management console password.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_ENTERPRISE_ENDPOINT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GitHub Enterprise hostname.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_ENDPOINT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GitHub Enterprise Management Console endpoint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_INTEGRATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.github.com/early-access/integrations/&#34;&gt;GitHub Integration&lt;/a&gt; owned by your test organization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_GITHUB_INTEGRATION_INSTALLATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Installation of the GitHub Integration specified above.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;OCTOKIT_TEST_INTEGRATION_PEM_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;File path to the private key generated from your integration.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Since we periodically refresh our cassettes, please keep some points in mind when writing new specs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Specs should be idempotent&lt;/strong&gt;. The HTTP calls made during a spec should be able to be run over and over. This means deleting a known resource prior to creating it if the name has to be unique.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Specs should be able to be run in random order.&lt;/strong&gt; If a spec depends on another resource as a fixture, make sure that&#39;s created in the scope of the spec and not depend on a previous spec to create the data needed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do not depend on authenticated user info.&lt;/strong&gt; Instead of asserting actual values in resources, try to assert the existence of a key or that a response is an Array. We&#39;re testing the client, not the API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Ruby Versions&lt;/h2&gt; &#xA;&lt;p&gt;This library aims to support and is &lt;a href=&#34;https://github.com/octokit/octokit.rb/actions&#34;&gt;tested against&lt;/a&gt; the following Ruby implementations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 2.5&lt;/li&gt; &#xA; &lt;li&gt;Ruby 2.6&lt;/li&gt; &#xA; &lt;li&gt;Ruby 2.7&lt;/li&gt; &#xA; &lt;li&gt;Ruby 3.0&lt;/li&gt; &#xA; &lt;li&gt;Ruby 3.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If something doesn&#39;t work on one of these Ruby versions, it&#39;s a bug.&lt;/p&gt; &#xA;&lt;p&gt;This library may inadvertently work (or seem to work) on other Ruby implementations, but support will only be provided for the versions listed above.&lt;/p&gt; &#xA;&lt;p&gt;If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This library aims to adhere to &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning 2.0.0&lt;/a&gt;. Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, that version should be immediately yanked and/or a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions. As a result of this policy, you can (and should) specify a dependency on this gem using the &lt;a href=&#34;http://guides.rubygems.org/patterns/#pessimistic-version-constraint&#34;&gt;Pessimistic Version Constraint&lt;/a&gt; with two digits of precision. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;spec.add_dependency &#39;octokit&#39;, &#39;~&amp;gt; 3.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The changes made between versions can be seen on the &lt;a href=&#34;https://github.com/octokit/octokit.rb/releases&#34;&gt;project releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Making Repeating Requests&lt;/h2&gt; &#xA;&lt;p&gt;In most cases it would be best to use &lt;a href=&#34;https://developer.github.com/webhooks/&#34;&gt;webhooks&lt;/a&gt;, but sometimes webhooks don&#39;t provide all of the information needed. In those cases where one might need to poll for progress or retry a request on failure, we designed &lt;a href=&#34;https://github.com/octokit/octopoller.rb&#34;&gt;Octopoller&lt;/a&gt;. Octopoller is a micro gem perfect for making repeating requests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Octopoller.poll(timeout: 15.seconds) do&#xA;  begin&#xA;    client.request_progress # ex. request a long running job&#39;s status&#xA;  rescue Error&#xA;    :re_poll&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is useful when making requests for a long running job&#39;s progress (ex. requesting a &lt;a href=&#34;https://developer.github.com/v3/migrations/source_imports/#get-import-progress&#34;&gt;Source Import&#39;s progress&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2009-2014 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>