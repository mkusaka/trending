<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-10T01:33:31Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ice-cube-ruby/ice_cube</title>
    <updated>2022-07-10T01:33:31Z</updated>
    <id>tag:github.com,2022-07-10:/ice-cube-ruby/ice_cube</id>
    <link href="https://github.com/ice-cube-ruby/ice_cube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby Date Recurrence Library - Allows easy creation of recurrence rules and fast querying&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ice_cube - Easy schedule expansion&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/seejohnrun/ice_cube/actions/workflows/tests.yaml&#34;&gt;&lt;img src=&#34;https://github.com/seejohnrun/ice_cube/actions/workflows/tests.yaml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://badge.fury.io/rb/ice_cube&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/ice_cube.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/testdouble/standard&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-standard-brightgreen.svg?sanitize=true&#34; alt=&#34;Ruby Style Guide&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem install ice_cube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ice_cube is a ruby library for easily handling repeated events (schedules). The API is modeled after &lt;a href=&#34;https://tools.ietf.org/html/rfc5545#section-3.6.1&#34;&gt;iCalendar events&lt;/a&gt;, in a pleasant Ruby syntax. The power lies in the ability to specify multiple rules, and have ice_cube quickly figure out whether the schedule falls on a certain date (.occurs_on?), or what times it occurs at (.occurrences, .first, .all_occurrences).&lt;/p&gt; &#xA;&lt;p&gt;Imagine you want:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Every friday the 13th that falls in October&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You would write:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;schedule = IceCube::Schedule.new&#xA;schedule.add_recurrence_rule(&#xA;  IceCube::Rule.yearly.day_of_month(13).day(:friday).month_of_year(:october)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Introductions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Presentation from Lone Star Ruby Conf (&lt;a href=&#34;http://seejohnrun.github.com/ice_cube/static/lsrc_ice_cube.pdf&#34;&gt;slides&lt;/a&gt;, &lt;a href=&#34;https://youtu.be/dOMW0WcvvRc&#34;&gt;YouTube&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://seejohnrun.github.com/ice_cube/static/ice_cube_ruby_nyc.pdf&#34;&gt;Quick Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://seejohnrun.github.io/ice_cube/&#34;&gt;Documentation Website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;With ice_cube, you can specify (in increasing order of precedence):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Recurrence Rules - Rules on how to include recurring times in a schedule&lt;/li&gt; &#xA; &lt;li&gt;Recurrence Times - To specifically include in a schedule&lt;/li&gt; &#xA; &lt;li&gt;Exception Times - To specifically exclude from a schedule&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example: Specifying a recurrence with an exception time. Requires &#34;rails/activesupport&#34; (&lt;code&gt;gem install &#39;activesupport&#39;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;ice_cube&#39;&#xA;require &#39;active_support/time&#39;&#xA;&#xA;schedule = IceCube::Schedule.new(now = Time.now) do |s|&#xA;  s.add_recurrence_rule(IceCube::Rule.daily.count(4))&#xA;  s.add_exception_time(now + 1.day)&#xA;end&#xA;&#xA;# list occurrences until end_time (end_time is needed for non-terminating rules)&#xA;occurrences = schedule.occurrences(end_time) # [now]&#xA;&#xA;# or all of the occurrences (only for terminating schedules)&#xA;occurrences = schedule.all_occurrences # [now, now + 2.days, now + 3.days]&#xA;&#xA;# or check just a single time&#xA;schedule.occurs_at?(now + 1.day)  # false&#xA;schedule.occurs_at?(now + 2.days) # true&#xA;&#xA;# or check just a single day&#xA;schedule.occurs_on?(Date.today) # true&#xA;&#xA;# or check whether it occurs between two dates&#xA;schedule.occurs_between?(now, now + 30.days)          # true&#xA;schedule.occurs_between?(now + 4.days, now + 30.days) # false&#xA;&#xA;# or the first (n) occurrences&#xA;schedule.first(2) # [now, now + 2.days]&#xA;schedule.first    # now&#xA;&#xA;# or the last (n) occurrences (if the schedule terminates)&#xA;schedule.last(2) # [now + 2.days, now + 3.days]&#xA;schedule.last    # now + 3.days&#xA;&#xA;# or the next occurrence&#xA;schedule.next_occurrence(from_time)     # defaults to Time.now&#xA;schedule.next_occurrences(4, from_time) # defaults to Time.now&#xA;schedule.remaining_occurrences          # for terminating schedules&#xA;&#xA;# or the previous occurrence&#xA;schedule.previous_occurrence(from_time)&#xA;schedule.previous_occurrences(4, from_time)&#xA;&#xA;# or include prior occurrences with a duration overlapping from_time&#xA;schedule.next_occurrences(4, from_time, spans: true)&#xA;schedule.occurrences_between(from_time, to_time, spans: true)&#xA;&#xA;# or give the schedule a duration and ask if occurring_at?&#xA;schedule = IceCube::Schedule.new(now, duration: 3600)&#xA;schedule.add_recurrence_rule IceCube::Rule.daily&#xA;schedule.occurring_at?(now + 1800) # true&#xA;schedule.occurring_between?(t1, t2)&#xA;&#xA;# using end_time also sets the duration&#xA;schedule = IceCube::Schedule.new(start = Time.now, end_time: start + 3600)&#xA;schedule.add_recurrence_rule IceCube::Rule.daily&#xA;schedule.occurring_at?(start + 3599) # true&#xA;schedule.occurring_at?(start + 3600) # false&#xA;&#xA;# take control and use iteration&#xA;schedule = IceCube::Schedule.new&#xA;schedule.add_recurrence_rule IceCube::Rule.daily.until(Date.today + 30)&#xA;schedule.each_occurrence { |t| puts t }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The reason that schedules have durations and not individual rules, is to maintain compatibility with the ical RFC: &lt;a href=&#34;http://www.kanzaki.com/docs/ical/rrule.html&#34;&gt;http://www.kanzaki.com/docs/ical/rrule.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To limit schedules use &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;until&lt;/code&gt; on the recurrence rules. Setting &lt;code&gt;end_time&lt;/code&gt; on the schedule just sets the duration (from the start time) for each occurrence.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Time Zones and ActiveSupport vs. Standard Ruby Time Classes&lt;/h2&gt; &#xA;&lt;p&gt;ice_cube works great without ActiveSupport but only supports the environment&#39;s single &#34;local&#34; time zone (&lt;code&gt;ENV[&#39;TZ&#39;]&lt;/code&gt;) or UTC. To correctly support multiple time zones (especially for DST), you should require &#39;active_support/time&#39;.&lt;/p&gt; &#xA;&lt;p&gt;A schedule&#39;s occurrences will be returned in the same class and time zone as the schedule&#39;s start_time. Schedule start times are supported as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Time.local (default when no time is specified)&lt;/li&gt; &#xA; &lt;li&gt;Time.utc&lt;/li&gt; &#xA; &lt;li&gt;ActiveSupport::TimeWithZone (with &lt;code&gt;Time.zone.now&lt;/code&gt;, &lt;code&gt;Time.zone.local&lt;/code&gt;, &lt;code&gt;time.in_time_zone(tz)&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;DateTime (deprecated) and Date are converted to a Time.local&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Persistence&lt;/h2&gt; &#xA;&lt;p&gt;ice_cube implements its own hash-based .to_yaml, so you can quickly (and safely) serialize schedule objects in and out of your data store&lt;/p&gt; &#xA;&lt;p&gt;It also supports partial serialization to/from &lt;code&gt;ICAL&lt;/code&gt;. Parsing datetimes with time zone information is not currently supported.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;yaml = schedule.to_yaml&#xA;IceCube::Schedule.from_yaml(yaml)&#xA;&#xA;hash = schedule.to_hash&#xA;IceCube::Schedule.from_hash(hash)&#xA;&#xA;ical = schedule.to_ical&#xA;IceCube::Schedule.from_ical(ical)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Using your words&lt;/h2&gt; &#xA;&lt;p&gt;ice_cube can provide ical or string representations of individual rules, or the whole schedule.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;rule = IceCube::Rule.daily(2).day_of_week(tuesday: [1, -1], wednesday: [2])&#xA;&#xA;rule.to_ical # &#39;FREQ=DAILY;INTERVAL=2;BYDAY=1TU,-1TU,2WE&#39;&#xA;&#xA;rule.to_s # &#39;Every 2 days on the last and 1st Tuesdays and the 2nd Wednesday&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Some types of Rules&lt;/h2&gt; &#xA;&lt;p&gt;There are many types of recurrence rules that can be added to a schedule:&lt;/p&gt; &#xA;&lt;h3&gt;Daily&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every day&#xA;schedule.add_recurrence_rule IceCube::Rule.daily&#xA;&#xA;# every third day&#xA;schedule.add_recurrence_rule IceCube::Rule.daily(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Weekly&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every week&#xA;schedule.add_recurrence_rule IceCube::Rule.weekly&#xA;&#xA;# every other week on monday and tuesday&#xA;schedule.add_recurrence_rule IceCube::Rule.weekly(2).day(:monday, :tuesday)&#xA;&#xA;# for programmatic convenience (same as above)&#xA;schedule.add_recurrence_rule IceCube::Rule.weekly(2).day(1, 2)&#xA;&#xA;# specifying a weekly interval with a different first weekday (defaults to Sunday)&#xA;schedule.add_recurrence_rule IceCube::Rule.weekly(1, :monday)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Monthly (by day of month)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every month on the first and last days of the month&#xA;schedule.add_recurrence_rule IceCube::Rule.monthly.day_of_month(1, -1)&#xA;&#xA;# every other month on the 15th of the month&#xA;schedule.add_recurrence_rule IceCube::Rule.monthly(2).day_of_month(15)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Monthly rules will skip months that are too short for the specified day of month (e.g. no occurrences in February for &lt;code&gt;day_of_month(31)&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Monthly (by day of Nth week)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every month on the first and last tuesdays of the month&#xA;schedule.add_recurrence_rule IceCube::Rule.monthly.day_of_week(tuesday: [1, -1])&#xA;&#xA;# every other month on the first monday and last tuesday&#xA;schedule.add_recurrence_rule IceCube::Rule.monthly(2).day_of_week(&#xA;  monday: [1],&#xA;  tuesday: [-1]&#xA;)&#xA;&#xA;# for programmatic convenience (same as above)&#xA;schedule.add_recurrence_rule IceCube::Rule.monthly(2).day_of_week(1 =&amp;gt; [1], 2 =&amp;gt; [-1])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yearly (by day of year)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every year on the 100th days from the beginning and end of the year&#xA;schedule.add_recurrence_rule IceCube::Rule.yearly.day_of_year(100, -100)&#xA;&#xA;# every fourth year on new year&#39;s eve&#xA;schedule.add_recurrence_rule IceCube::Rule.yearly(4).day_of_year(-1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yearly (by month of year)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every year on the same day as start_time but in january and february&#xA;schedule.add_recurrence_rule IceCube::Rule.yearly.month_of_year(:january, :february)&#xA;&#xA;# every third year in march&#xA;schedule.add_recurrence_rule IceCube::Rule.yearly(3).month_of_year(:march)&#xA;&#xA;# for programmatic convenience (same as above)&#xA;schedule.add_recurrence_rule IceCube::Rule.yearly(3).month_of_year(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hourly (by hour of day)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every hour on the same minute and second as start date&#xA;schedule.add_recurrence_rule IceCube::Rule.hourly&#xA;&#xA;# every other hour, on mondays&#xA;schedule.add_recurrence_rule IceCube::Rule.hourly(2).day(:monday)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minutely (every N minutes)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every 10 minutes&#xA;schedule.add_recurrence_rule IceCube::Rule.minutely(10)&#xA;&#xA;# every hour and a half, on the last tuesday of the month&#xA;schedule.add_recurrence_rule IceCube::Rule.minutely(90).day_of_week(tuesday: [-1])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Secondly (every N seconds)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# every second&#xA;schedule.add_recurrence_rule IceCube::Rule.secondly&#xA;&#xA;# every 15 seconds between 12:00 - 12:59&#xA;schedule.add_recurrence_rule IceCube::Rule.secondly(15).hour_of_day(12)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;recurring_select&lt;/h2&gt; &#xA;&lt;p&gt;The team over at &lt;a href=&#34;http://getjobber.com/&#34;&gt;GetJobber&lt;/a&gt; have open-sourced RecurringSelect, which makes working with IceCube easier in a Rails app via some nice helpers.&lt;/p&gt; &#xA;&lt;p&gt;Check it out at &lt;a href=&#34;https://github.com/GetJobber/recurring_select&#34;&gt;https://github.com/GetJobber/recurring_select&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/seejohnrun/ice_cube/graphs/contributors&#34;&gt;https://github.com/seejohnrun/ice_cube/graphs/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Issues?&lt;/h2&gt; &#xA;&lt;p&gt;Use the GitHub &lt;a href=&#34;https://github.com/seejohnrun/ice_cube/issues&#34;&gt;issue tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contributions are welcome - I use GitHub for issue tracking (accompanying failing tests are awesome) and feature requests&lt;/li&gt; &#xA; &lt;li&gt;Submit via fork and pull request (include tests)&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re working on something major, shoot me a message beforehand&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>oauth-xx/oauth2</title>
    <updated>2022-07-10T01:33:31Z</updated>
    <id>tag:github.com,2022-07-10:/oauth-xx/oauth2</id>
    <link href="https://github.com/oauth-xx/oauth2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby wrapper for the OAuth 2.0 protocol.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://oauth.net/2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;img src=&#34;https://github.com/oauth-xx/oauth2/raw/master/docs/images/logo/oauth2-logo-124px.png?raw=true&#34; alt=&#34;OAuth 2.0 Logo by Chris Messina, CC BY-SA 3.0&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.ruby-lang.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;img width=&#34;124px&#34; src=&#34;https://github.com/oauth-xx/oauth2/raw/master/docs/images/logo/ruby-logo-198px.svg?raw=true&#34; alt=&#34;Yukihiro Matsumoto, Ruby Visual Identity Team, CC BY-SA 2.5&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;What&lt;/h2&gt; &#xA;&lt;p&gt;OAuth 2.0 is the industry-standard protocol for authorization. OAuth 2.0 focuses on client developer simplicity while providing specific authorization flows for web applications, desktop applications, mobile phones, and living room devices. This is a RubyGem for implementing OAuth 2.0 clients and servers in Ruby applications. See the sibling &lt;code&gt;oauth&lt;/code&gt; gem for OAuth 1.0 implementations in Ruby.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oauth.net/2/&#34;&gt;OAuth 2.0 Spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth-ruby&#34;&gt;oauth sibling gem&lt;/a&gt; for OAuth 1.0 implementations in Ruby.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Version 2.0.x&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;2.0.x Readmes&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Version&lt;/th&gt; &#xA;    &lt;th&gt;Release Date&lt;/th&gt; &#xA;    &lt;th&gt;Readme&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2.0.4&lt;/td&gt; &#xA;    &lt;td&gt;2022-07-01&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v2.0.4/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v2.0.4/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2.0.3&lt;/td&gt; &#xA;    &lt;td&gt;2022-06-28&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v2.0.3/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v2.0.3/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2.0.2&lt;/td&gt; &#xA;    &lt;td&gt;2022-06-24&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v2.0.2/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v2.0.2/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2.0.1&lt;/td&gt; &#xA;    &lt;td&gt;2022-06-22&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v2.0.1/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v2.0.1/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;2.0.0&lt;/td&gt; &#xA;    &lt;td&gt;2022-06-21&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v2.0.0/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v2.0.0/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Older Releases&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;1.4.x Readmes&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Version&lt;/th&gt; &#xA;    &lt;th&gt;Release Date&lt;/th&gt; &#xA;    &lt;th&gt;Readme&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.10&lt;/td&gt; &#xA;    &lt;td&gt;Jul 1, 2022&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.10/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.10/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.9&lt;/td&gt; &#xA;    &lt;td&gt;Feb 20, 2022&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.9/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.9/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.8&lt;/td&gt; &#xA;    &lt;td&gt;Feb 18, 2022&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.8/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.8/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.7&lt;/td&gt; &#xA;    &lt;td&gt;Mar 19, 2021&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.7/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.7/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.6&lt;/td&gt; &#xA;    &lt;td&gt;Mar 19, 2021&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.6/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.6/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.5&lt;/td&gt; &#xA;    &lt;td&gt;Mar 18, 2021&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.5/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.5/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.4&lt;/td&gt; &#xA;    &lt;td&gt;Feb 12, 2020&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.4/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.4/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.3&lt;/td&gt; &#xA;    &lt;td&gt;Jan 29, 2020&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.3/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.3/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.2&lt;/td&gt; &#xA;    &lt;td&gt;Oct 1, 2019&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.2/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.2/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.1&lt;/td&gt; &#xA;    &lt;td&gt;Oct 13, 2018&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.1/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.1/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.4.0&lt;/td&gt; &#xA;    &lt;td&gt;Jun 9, 2017&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.4.0/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.4.0/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;1.3.x Readmes&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Version&lt;/th&gt; &#xA;    &lt;th&gt;Release Date&lt;/th&gt; &#xA;    &lt;th&gt;Readme&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.3.1&lt;/td&gt; &#xA;    &lt;td&gt;Mar 3, 2017&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.3.1/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.3.1/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.3.0&lt;/td&gt; &#xA;    &lt;td&gt;Dec 27, 2016&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.3.0/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.3.0/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;≤= 1.2.x Readmes (2016 and before)&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Version&lt;/th&gt; &#xA;    &lt;th&gt;Release Date&lt;/th&gt; &#xA;    &lt;th&gt;Readme&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.2.0&lt;/td&gt; &#xA;    &lt;td&gt;Jun 30, 2016&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.2.0/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.2.0/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.1.0&lt;/td&gt; &#xA;    &lt;td&gt;Jan 30, 2016&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.1.0/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.1.0/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;1.0.0&lt;/td&gt; &#xA;    &lt;td&gt;May 23, 2014&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/v1.0.0/README.md&#34;&gt;https://github.com/oauth-xx/oauth2/blob/v1.0.0/README.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&amp;lt; 1.0.0&lt;/td&gt; &#xA;    &lt;td&gt;Find here&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/tags&#34;&gt;https://github.com/oauth-xx/oauth2/tags&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;!--&#xA;Numbering rows and badges in each row as a visual &#34;database&#34; lookup,&#xA;    as the table is extremely dense, and it can be very difficult to find anything&#xA;Putting one on each row here, to document the emoji that should be used, and for ease of copy/paste.&#xA;&#xA;row #s:&#xA;1️⃣&#xA;2️⃣&#xA;3️⃣&#xA;4️⃣&#xA;5️⃣&#xA;6️⃣&#xA;7️⃣&#xA;&#xA;badge #s:&#xA;⛳️&#xA;🖇&#xA;🏘&#xA;🚎&#xA;🖐&#xA;🧮&#xA;📗&#xA;&#xA;appended indicators:&#xA;♻️ - URL needs to be updated from SASS integration. Find / Replace is insufficient.&#xA;--&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;bundle add oauth2&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1️⃣&lt;/td&gt; &#xA;   &lt;td&gt;name, license, docs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/oauth2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/name-oauth2-brightgreen.svg?style=flat&#34; alt=&#34;RubyGems.org&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Foauth-xx%2Foauth2?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Foauth-xx%2Foauth2.svg?type=shield&#34; alt=&#34;FOSSA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rubydoc.info/github/oauth-xx/oauth2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-rubydoc-brightgreen.svg?style=flat&#34; alt=&#34;RubyDoc.info&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rubydoc.info/github/oauth-xx/oauth2&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/oauth-xx/oauth2.png&#34; alt=&#34;InchCI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2️⃣&lt;/td&gt; &#xA;   &lt;td&gt;version &amp;amp; activity&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rubygems.org/gems/oauth2&#34;&gt;&lt;img src=&#34;http://img.shields.io/gem/v/oauth2.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/oauth2&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/dt/oauth2.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/oauth2&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/rt/oauth2.svg?sanitize=true&#34; alt=&#34;Download Rank&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/source-github-brightgreen.svg?style=flat&#34; alt=&#34;Source Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/oauth-xx/oauth2&#34; alt=&#34;Open PRs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/pulls?q=is%3Apr+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/oauth-xx/oauth2&#34; alt=&#34;Closed PRs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/milestone/15&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/milestones/progress/oauth-xx/oauth2/15?label=Next%20Version&#34; alt=&#34;Next Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3️⃣&lt;/td&gt; &#xA;   &lt;td&gt;maintanence &amp;amp; linting&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codeclimate.com/github/oauth-xx/oauth2/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/688c612528ff90a46955/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/oauth-xx/oauth2&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/oauth-xx/oauth2/badges/users.svg?sanitize=true&#34; alt=&#34;Helpers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://depfu.com/github/oauth-xx/oauth2?project_id=4445&#34;&gt;&lt;img src=&#34;https://badges.depfu.com/badges/6d34dc1ba682bbdf9ae2a97848241743/count.svg?sanitize=true&#34; alt=&#34;Depfu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors-anon/oauth-xx/oauth2&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/style.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/style.yml/badge.svg?sanitize=true&#34; alt=&#34;Style&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=dQw4w9WgXcQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/tokei/lines/github.com/oauth-xx/oauth2&#34; alt=&#34;Kloc Roll&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4️⃣&lt;/td&gt; &#xA;   &lt;td&gt;testing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/oauth-xx/oauth2&#34; alt=&#34;Open Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/oauth-xx/oauth2&#34; alt=&#34;Closed Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/supported.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/supported.yml/badge.svg?sanitize=true&#34; alt=&#34;Supported&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/heads.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/heads.yml/badge.svg?sanitize=true&#34; alt=&#34;Heads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/unsupported.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/unsupported.yml/badge.svg?sanitize=true&#34; alt=&#34;Unofficial Support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/macos.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/macos.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5️⃣&lt;/td&gt; &#xA;   &lt;td&gt;coverage &amp;amp; security&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codeclimate.com/github/oauth-xx/oauth2/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/688c612528ff90a46955/test_coverage&#34; alt=&#34;CodeClimate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/oauth-xx/oauth2&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/oauth-xx/oauth2/branch/master/graph/badge.svg?token=bNqSzNiuo2&#34; alt=&#34;CodeCov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/oauth-xx/oauth2?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/oauth-xx/oauth2/badge.svg?branch=master&#34; alt=&#34;Coveralls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/SECURITY.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/security-policy-brightgreen.svg?style=flat&#34; alt=&#34;Security Policy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/security/code-scanning&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/coverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/oauth-xx/oauth2/actions/workflows/coverage.yml/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6️⃣&lt;/td&gt; &#xA;   &lt;td&gt;resources&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/oauth-xx/oauth2&#34; alt=&#34;Discussion&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codementor.io/peterboling?utm_source=github&amp;amp;utm_medium=button&amp;amp;utm_term=peterboling&amp;amp;utm_campaign=github&#34;&gt;&lt;img src=&#34;https://cdn.codementor.io/badges/get_help_github.svg?sanitize=true&#34; alt=&#34;Get help on Codementor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/oauth-xx/oauth2&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/oauth-xx/oauth2.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.railsbling.com/tags/oauth2/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/blog-railsbling-brightgreen.svg?style=flat&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/oauth-xx/oauth2/wiki&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/wiki-examples-brightgreen.svg?style=flat&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7️⃣&lt;/td&gt; &#xA;   &lt;td&gt;spread 💖&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://liberapay.com/pboling/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/liberapay/patrons/pboling.svg?logo=liberapay&#34; alt=&#34;Liberapay Patrons&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/pboling&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/sponsor-pboling.svg?style=social&amp;amp;logo=github&#34; alt=&#34;Sponsor Me&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://twitter.com/galtzo&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/galtzo.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Tweet @ Peter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://about.me/peter.boling&#34;&gt;🌏&lt;/a&gt; &lt;a href=&#34;https://angel.co/peter-boling&#34;&gt;👼&lt;/a&gt; &lt;a href=&#34;http://coderwall.com/pboling&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!--&#xA;The link tokens in the following sections should be kept ordered by the row and badge numbering scheme&#xA;--&gt; &#xA;&lt;!-- 1️⃣ name, license, docs --&gt; &#xA;&lt;!-- 2️⃣ version &amp; activity --&gt; &#xA;&lt;!-- 3️⃣ maintenance &amp; linting --&gt; &#xA;&lt;!-- 4️⃣ testing --&gt; &#xA;&lt;!-- 5️⃣ coverage &amp; security --&gt; &#xA;&lt;!-- 6️⃣ resources --&gt; &#xA;&lt;!-- 7️⃣ spread 💖 --&gt; &#xA;&lt;!-- Maintainer Contact Links --&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the gem and add to the application&#39;s Gemfile by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle add oauth2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If bundler is not being used to manage dependencies, install the gem by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install oauth2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;OAuth2 for Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Available as part of the Tidelift Subscription.&lt;/p&gt; &#xA;&lt;p&gt;The maintainers of OAuth2 and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. &lt;a href=&#34;https://tidelift.com/subscription/pkg/rubygems-oauth2?utm_source=rubygems-oauth2&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&#34;&gt;Learn more.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security contact information&lt;/h2&gt; &#xA;&lt;p&gt;To report a security vulnerability, please use the &lt;a href=&#34;https://tidelift.com/security&#34;&gt;Tidelift security contact&lt;/a&gt;. Tidelift will coordinate the fix and disclosure.&lt;/p&gt; &#xA;&lt;p&gt;For more see &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is new for v2.0?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Officially support Ruby versions &amp;gt;= 2.7&lt;/li&gt; &#xA; &lt;li&gt;Unofficially support Ruby versions &amp;gt;= 2.5&lt;/li&gt; &#xA; &lt;li&gt;Incidentally support Ruby versions &amp;gt;= 2.2&lt;/li&gt; &#xA; &lt;li&gt;Drop support for the expired MAC Draft (all versions)&lt;/li&gt; &#xA; &lt;li&gt;Support IETF rfc7523 JWT Bearer Tokens&lt;/li&gt; &#xA; &lt;li&gt;Support IETF rfc7231 Relative Location in Redirect&lt;/li&gt; &#xA; &lt;li&gt;Support IETF rfc6749 Don&#39;t set oauth params when nil&lt;/li&gt; &#xA; &lt;li&gt;Support &lt;a href=&#34;https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication&#34;&gt;OIDC 1.0 Private Key JWT&lt;/a&gt;; based on the OAuth JWT assertion specification &lt;a href=&#34;https://tools.ietf.org/html/rfc7523&#34;&gt;(RFC 7523)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support new formats, including from &lt;a href=&#34;http://jsonapi.org/format/&#34;&gt;jsonapi.org&lt;/a&gt;: &lt;code&gt;application/vdn.api+json&lt;/code&gt;, &lt;code&gt;application/vnd.collection+json&lt;/code&gt;, &lt;code&gt;application/hal+json&lt;/code&gt;, &lt;code&gt;application/problem+json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adds new option to &lt;code&gt;OAuth2::Client#get_token&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;:access_token_class&lt;/code&gt; (&lt;code&gt;AccessToken&lt;/code&gt;); user specified class to use for all calls to &lt;code&gt;get_token&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Adds new option to &lt;code&gt;OAuth2::AccessToken#initialize&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;:expires_latency&lt;/code&gt; (&lt;code&gt;nil&lt;/code&gt;); number of seconds by which AccessToken validity will be reduced to offset latency&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;By default, keys are transformed to camel case. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Original keys will still work as previously, in most scenarios, thanks to &lt;code&gt;rash_alt&lt;/code&gt; gem.&lt;/li&gt; &#xA;   &lt;li&gt;However, this is a &lt;em&gt;breaking&lt;/em&gt; change if you rely on &lt;code&gt;response.parsed.to_h&lt;/code&gt;, as the keys in the result will be camel case.&lt;/li&gt; &#xA;   &lt;li&gt;As of version 2.0.4 you can turn key transformation off with the &lt;code&gt;snaky: false&lt;/code&gt; option.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;By default, the &lt;code&gt;:auth_scheme&lt;/code&gt; is now &lt;code&gt;:basic_auth&lt;/code&gt; (instead of &lt;code&gt;:request_body&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Third-party strategies and gems may need to be updated if a provider was requiring client id/secret in the request body&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/CHANGELOG.md#2.0.0&#34;&gt;... A lot more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Targeted ruby compatibility is non-EOL versions of Ruby, currently 2.7, 3.0 and 3.1. Compatibility is further distinguished by supported and unsupported versions of Ruby. Ruby is limited to 2.2+ for 2.x releases. See &lt;code&gt;1-4-stable&lt;/code&gt; branch for older rubies.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Ruby Engine Compatibility Policy&lt;/summary&gt; &#xA; &lt;p&gt;This gem is tested against MRI, JRuby, and Truffleruby. Each of those has varying versions that target a specific version of MRI Ruby. This gem should work in the just-listed Ruby engines according to the targeted MRI compatibility in the table below. If you would like to add support for additional engines, first make sure Github Actions supports the engine, then submit a PR to the correct maintenance branch as according to the table below.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Ruby Version Compatibility Policy&lt;/summary&gt; &#xA; &lt;p&gt;If something doesn&#39;t work on one of these interpreters, it&#39;s a bug.&lt;/p&gt; &#xA; &lt;p&gt;This library may inadvertently work (or seem to work) on other Ruby implementations, however support will only be provided for the versions listed above.&lt;/p&gt; &#xA; &lt;p&gt;If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Ruby OAuth2 Version&lt;/th&gt; &#xA;   &lt;th&gt;Maintenance Branch&lt;/th&gt; &#xA;   &lt;th&gt;Supported Officially&lt;/th&gt; &#xA;   &lt;th&gt;Supported Unofficially&lt;/th&gt; &#xA;   &lt;th&gt;Supported Incidentally&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1️⃣&lt;/td&gt; &#xA;   &lt;td&gt;2.0.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.7, 3.0, 3.1&lt;/td&gt; &#xA;   &lt;td&gt;2.5, 2.6&lt;/td&gt; &#xA;   &lt;td&gt;2.2, 2.3, 2.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2️⃣&lt;/td&gt; &#xA;   &lt;td&gt;1.4.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1-4-stable&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.5, 2.6, 2.7, 3.0, 3.1&lt;/td&gt; &#xA;   &lt;td&gt;2.1, 2.2, 2.3, 2.4&lt;/td&gt; &#xA;   &lt;td&gt;1.9, 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3️⃣&lt;/td&gt; &#xA;   &lt;td&gt;older&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;Best of luck to you!&lt;/td&gt; &#xA;   &lt;td&gt;Please upgrade!&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;NOTE: The 1.4 series will only receive critical security updates. See &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage Examples&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;authorize_url&lt;/code&gt; and &lt;code&gt;token_url&lt;/code&gt; are on site root (Just Works!)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;oauth2&#39;&#xA;client = OAuth2::Client.new(&#39;client_id&#39;, &#39;client_secret&#39;, site: &#39;https://example.org&#39;)&#xA;# =&amp;gt; #&amp;lt;OAuth2::Client:0x00000001204c8288 @id=&#34;client_id&#34;, @secret=&#34;client_sec...&#xA;client.auth_code.authorize_url(redirect_uri: &#39;http://localhost:8080/oauth2/callback&#39;)&#xA;# =&amp;gt; &#34;https://example.org/oauth/authorize?client_id=client_id&amp;amp;redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Foauth2%2Fcallback&amp;amp;response_type=code&#34;&#xA;&#xA;access = client.auth_code.get_token(&#39;authorization_code_value&#39;, redirect_uri: &#39;http://localhost:8080/oauth2/callback&#39;, headers: {&#39;Authorization&#39; =&amp;gt; &#39;Basic some_password&#39;})&#xA;response = access.get(&#39;/api/resource&#39;, params: {&#39;query_foo&#39; =&amp;gt; &#39;bar&#39;})&#xA;response.class.name&#xA;# =&amp;gt; OAuth2::Response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Relative &lt;code&gt;authorize_url&lt;/code&gt; and &lt;code&gt;token_url&lt;/code&gt; (Not on site root, Just Works!)&lt;/h3&gt; &#xA;&lt;p&gt;In above example, the default Authorization URL is &lt;code&gt;oauth/authorize&lt;/code&gt; and default Access Token URL is &lt;code&gt;oauth/token&lt;/code&gt;, and, as they are missing a leading &lt;code&gt;/&lt;/code&gt;, both are relative.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = OAuth2::Client.new(&#39;client_id&#39;, &#39;client_secret&#39;, site: &#39;https://example.org/nested/directory/on/your/server&#39;)&#xA;# =&amp;gt; #&amp;lt;OAuth2::Client:0x00000001204c8288 @id=&#34;client_id&#34;, @secret=&#34;client_sec...&#xA;client.auth_code.authorize_url(redirect_uri: &#39;http://localhost:8080/oauth2/callback&#39;)&#xA;# =&amp;gt; &#34;https://example.org/nested/directory/on/your/server/oauth/authorize?client_id=client_id&amp;amp;redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Foauth2%2Fcallback&amp;amp;response_type=code&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize &lt;code&gt;authorize_url&lt;/code&gt; and &lt;code&gt;token_url&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can specify custom URLs for authorization and access token, and when using a leading &lt;code&gt;/&lt;/code&gt; they will &lt;em&gt;not be relative&lt;/em&gt;, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = OAuth2::Client.new(&#39;client_id&#39;, &#39;client_secret&#39;,&#xA;                            site: &#39;https://example.org/nested/directory/on/your/server&#39;,&#xA;                            authorize_url: &#39;/jaunty/authorize/&#39;,&#xA;                            token_url: &#39;/stirrups/access_token&#39;)&#xA;# =&amp;gt; #&amp;lt;OAuth2::Client:0x00000001204c8288 @id=&#34;client_id&#34;, @secret=&#34;client_sec...&#xA;client.auth_code.authorize_url(redirect_uri: &#39;http://localhost:8080/oauth2/callback&#39;)&#xA;# =&amp;gt; &#34;https://example.org/jaunty/authorize/?client_id=client_id&amp;amp;redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Foauth2%2Fcallback&amp;amp;response_type=code&#34;&#xA;client.class.name&#xA;# =&amp;gt; OAuth2::Client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;snake_case and indifferent access in Response#parsed&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;response = access.get(&#39;/api/resource&#39;, params: {&#39;query_foo&#39; =&amp;gt; &#39;bar&#39;})&#xA;# Even if the actual response is CamelCase. it will be made available as snaky:&#xA;JSON.parse(response.body)         # =&amp;gt; {&#34;accessToken&#34;=&amp;gt;&#34;aaaaaaaa&#34;, &#34;additionalData&#34;=&amp;gt;&#34;additional&#34;}&#xA;response.parsed                   # =&amp;gt; {&#34;access_token&#34;=&amp;gt;&#34;aaaaaaaa&#34;, &#34;additional_data&#34;=&amp;gt;&#34;additional&#34;}&#xA;response.parsed.access_token      # =&amp;gt; &#34;aaaaaaaa&#34;&#xA;response.parsed[:access_token]    # =&amp;gt; &#34;aaaaaaaa&#34;&#xA;response.parsed.additional_data   # =&amp;gt; &#34;additional&#34;&#xA;response.parsed[:additional_data] # =&amp;gt; &#34;additional&#34;&#xA;response.parsed.class.name        # =&amp;gt; OAuth2::SnakyHash (subclass of Hashie::Mash::Rash, from `rash_alt` gem)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;What if I hate snakes and/or indifference?&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;response = access.get(&#39;/api/resource&#39;, params: {&#39;query_foo&#39; =&amp;gt; &#39;bar&#39;}, snaky: false)&#xA;JSON.parse(response.body)         # =&amp;gt; {&#34;accessToken&#34;=&amp;gt;&#34;aaaaaaaa&#34;, &#34;additionalData&#34;=&amp;gt;&#34;additional&#34;}&#xA;response.parsed                   # =&amp;gt; {&#34;accessToken&#34;=&amp;gt;&#34;aaaaaaaa&#34;, &#34;additionalData&#34;=&amp;gt;&#34;additional&#34;}&#xA;response.parsed[&#39;accessToken&#39;]    # =&amp;gt; &#34;aaaaaaaa&#34;&#xA;response.parsed[&#39;additionalData&#39;] # =&amp;gt; &#34;additional&#34;&#xA;response.parsed.class.name        # =&amp;gt; Hash (just, regular old Hash)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Debugging&lt;/summary&gt; &#xA; &lt;p&gt;Set an environment variable, however you would &lt;a href=&#34;https://github.com/bkeepers/dotenv&#34;&gt;normally do that&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# will log both request and response, including bodies&#xA;ENV[&#39;OAUTH_DEBUG&#39;] = &#39;true&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;By default, debug output will go to &lt;code&gt;$stdout&lt;/code&gt;. This can be overridden when initializing your OAuth2::Client.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;oauth2&#39;&#xA;client = OAuth2::Client.new(&#xA;  &#39;client_id&#39;,&#xA;  &#39;client_secret&#39;,&#xA;  site: &#39;https://example.org&#39;,&#xA;  logger: Logger.new(&#39;example.log&#39;, &#39;weekly&#39;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;OAuth2::Response&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;AccessToken&lt;/code&gt; methods &lt;code&gt;#get&lt;/code&gt;, &lt;code&gt;#post&lt;/code&gt;, &lt;code&gt;#put&lt;/code&gt; and &lt;code&gt;#delete&lt;/code&gt; and the generic &lt;code&gt;#request&lt;/code&gt; will return an instance of the #OAuth2::Response class.&lt;/p&gt; &#xA;&lt;p&gt;This instance contains a &lt;code&gt;#parsed&lt;/code&gt; method that will parse the response body and return a Hash-like &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/lib/oauth2/snaky_hash.rb&#34;&gt;&lt;code&gt;OAuth2::SnakyHash&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;Content-Type&lt;/code&gt; is &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; or if the body is a JSON object. It will return an Array if the body is a JSON array. Otherwise, it will return the original body string.&lt;/p&gt; &#xA;&lt;p&gt;The original response body, headers, and status can be accessed via their respective methods.&lt;/p&gt; &#xA;&lt;h2&gt;OAuth2::AccessToken&lt;/h2&gt; &#xA;&lt;p&gt;If you have an existing Access Token for a user, you can initialize an instance using various class methods including the standard new, &lt;code&gt;from_hash&lt;/code&gt; (if you have a hash of the values), or &lt;code&gt;from_kvform&lt;/code&gt; (if you have an &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; encoded string of the values).&lt;/p&gt; &#xA;&lt;h2&gt;OAuth2::Error&lt;/h2&gt; &#xA;&lt;p&gt;On 400+ status code responses, an &lt;code&gt;OAuth2::Error&lt;/code&gt; will be raised. If it is a standard OAuth2 error response, the body will be parsed and &lt;code&gt;#code&lt;/code&gt; and &lt;code&gt;#description&lt;/code&gt; will contain the values provided from the error and &lt;code&gt;error_description&lt;/code&gt; parameters. The &lt;code&gt;#response&lt;/code&gt; property of &lt;code&gt;OAuth2::Error&lt;/code&gt; will always contain the &lt;code&gt;OAuth2::Response&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;p&gt;If you do not want an error to be raised, you may use &lt;code&gt;:raise_errors =&amp;gt; false&lt;/code&gt; option on initialization of the client. In this case the &lt;code&gt;OAuth2::Response&lt;/code&gt; instance will be returned as usual and on 400+ status code responses, the Response instance will contain the &lt;code&gt;OAuth2::Error&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;h2&gt;Authorization Grants&lt;/h2&gt; &#xA;&lt;p&gt;Currently the Authorization Code, Implicit, Resource Owner Password Credentials, Client Credentials, and Assertion authentication grant types have helper strategy classes that simplify client use. They are available via the &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/lib/oauth2/strategy/auth_code.rb&#34;&gt;&lt;code&gt;#auth_code&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/lib/oauth2/strategy/implicit.rb&#34;&gt;&lt;code&gt;#implicit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/lib/oauth2/strategy/password.rb&#34;&gt;&lt;code&gt;#password&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/lib/oauth2/strategy/client_credentials.rb&#34;&gt;&lt;code&gt;#client_credentials&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/lib/oauth2/strategy/assertion.rb&#34;&gt;&lt;code&gt;#assertion&lt;/code&gt;&lt;/a&gt; methods respectively.&lt;/p&gt; &#xA;&lt;p&gt;These aren&#39;t full examples, but demonstrative of the differences between usage for each strategy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auth_url = client.auth_code.authorize_url(redirect_uri: &#39;http://localhost:8080/oauth/callback&#39;)&#xA;access = client.auth_code.get_token(&#39;code_value&#39;, redirect_uri: &#39;http://localhost:8080/oauth/callback&#39;)&#xA;&#xA;auth_url = client.implicit.authorize_url(redirect_uri: &#39;http://localhost:8080/oauth/callback&#39;)&#xA;# get the token params in the callback and&#xA;access = OAuth2::AccessToken.from_kvform(client, query_string)&#xA;&#xA;access = client.password.get_token(&#39;username&#39;, &#39;password&#39;)&#xA;&#xA;access = client.client_credentials.get_token&#xA;&#xA;# Client Assertion Strategy&#xA;# see: https://tools.ietf.org/html/rfc7523&#xA;claimset = {&#xA;  iss: &#39;http://localhost:3001&#39;,&#xA;  aud: &#39;http://localhost:8080/oauth2/token&#39;,&#xA;  sub: &#39;me@example.com&#39;,&#xA;  exp: Time.now.utc.to_i + 3600,&#xA;}&#xA;assertion_params = [claimset, &#39;HS256&#39;, &#39;secret_key&#39;]&#xA;access = client.assertion.get_token(assertion_params)&#xA;&#xA;# The `access` (i.e. access token) is then used like so:&#xA;access.token # actual access_token string, if you need it somewhere&#xA;access.get(&#39;/api/stuff&#39;) # making api calls with access token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to specify additional headers to be sent out with the request, add a &#39;headers&#39; hash under &#39;params&#39;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;access = client.auth_code.get_token(&#39;code_value&#39;, redirect_uri: &#39;http://localhost:8080/oauth/callback&#39;, headers: {&#39;Some&#39; =&amp;gt; &#39;Header&#39;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can always use the &lt;code&gt;#request&lt;/code&gt; method on the &lt;code&gt;OAuth2::Client&lt;/code&gt; instance to make requests for tokens for any Authentication grant type.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This library aims to adhere to &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning 2.0.0&lt;/a&gt;. Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions.&lt;/p&gt; &#xA;&lt;p&gt;As a result of this policy, you can (and should) specify a dependency on this gem using the &lt;a href=&#34;http://guides.rubygems.org/patterns/#pessimistic-version-constraint&#34;&gt;Pessimistic Version Constraint&lt;/a&gt; with two digits of precision.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;spec.add_dependency &#39;oauth2&#39;, &#39;~&amp;gt; 2.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copyright (c) 2011-2013 Michael Bleigh and Intridea, Inc.&lt;/li&gt; &#xA; &lt;li&gt;Copyright (c) 2017-2022 &lt;a href=&#34;https://github.com/oauth-xx&#34;&gt;oauth-xx organization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Foauth-xx%2Foauth2?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Foauth-xx%2Foauth2.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;After checking out the repo, run &lt;code&gt;bin/setup&lt;/code&gt; to install dependencies. Then, run &lt;code&gt;rake spec&lt;/code&gt; to run the tests. You can also run &lt;code&gt;bin/console&lt;/code&gt; for an interactive prompt that will allow you to experiment.&lt;/p&gt; &#xA;&lt;p&gt;To install this gem onto your local machine, run &lt;code&gt;bundle exec rake install&lt;/code&gt;. To release a new version, update the version number in &lt;code&gt;version.rb&lt;/code&gt;, and then run &lt;code&gt;bundle exec rake release&lt;/code&gt;, which will create a git tag for the version, push git commits and tags, and push the &lt;code&gt;.gem&lt;/code&gt; file to &lt;a href=&#34;https://rubygems.org&#34;&gt;rubygems.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oauth-xx/oauth2/master/%22https://github.com/oauth-xx/oauth2/graphs/contributors%22&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=oauth-xx/oauth2&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contributors-img&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Everyone interacting in the OAuth2 project’s codebases, issue trackers, chat rooms and mailing lists is expected to follow the &lt;a href=&#34;https://github.com/oauth-xx/oauth2/raw/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lostisland/faraday</title>
    <updated>2022-07-10T01:33:31Z</updated>
    <id>tag:github.com,2022-07-10:/lostisland/faraday</id>
    <link href="https://github.com/lostisland/faraday" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple, but flexible HTTP client library, with support for multiple backends.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://lostisland.github.io/faraday&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lostisland/faraday/main/docs/assets/img/repo-card-slim.png&#34; alt=&#34;Faraday&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/faraday&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/faraday.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lostisland/faraday/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/lostisland/faraday/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lostisland/faraday/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/lostisland/faraday?logo=github&#34; alt=&#34;GitHub Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Faraday is an HTTP client library abstraction layer that provides a common interface over many adapters (such as Net::HTTP) and embraces the concept of Rack middleware when processing the request/response cycle. You probably don&#39;t want to use Faraday directly in your project, as it will lack an actual client library to perform requests. Instead, you probably want to have a look at &lt;a href=&#34;https://github.com/lostisland/awesome-faraday/#adapters&#34;&gt;Awesome Faraday&lt;/a&gt; for a list of available adapters.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The best starting point is the &lt;a href=&#34;https://lostisland.github.io/faraday&#34;&gt;Faraday Website&lt;/a&gt;, with its introduction and explanation. Need more details? See the &lt;a href=&#34;https://www.rubydoc.info/github/lostisland/faraday&#34;&gt;Faraday API Documentation&lt;/a&gt; to see how it works internally.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Ruby versions&lt;/h2&gt; &#xA;&lt;p&gt;This library aims to support and is &lt;a href=&#34;https://github.com/lostisland/faraday/actions&#34;&gt;tested against&lt;/a&gt; the currently officially supported Ruby implementations. This means that, even without a major release, we could add or drop support for Ruby versions, following their &lt;a href=&#34;https://endoflife.date/ruby&#34;&gt;EOL&lt;/a&gt;. Currently that means we support Ruby 2.6+&lt;/p&gt; &#xA;&lt;p&gt;If something doesn&#39;t work on one of these Ruby versions, it&#39;s a bug.&lt;/p&gt; &#xA;&lt;p&gt;This library may inadvertently work (or seem to work) on other Ruby implementations and versions, however support will only be provided for the versions listed above.&lt;/p&gt; &#xA;&lt;p&gt;If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Do you want to contribute to Faraday? Open the issues page and check for the &lt;code&gt;help wanted&lt;/code&gt; label! But before you start coding, please read our &lt;a href=&#34;https://github.com/lostisland/faraday/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;© 2009 - 2022, the &lt;a href=&#34;https://lostisland.github.io/faraday/team&#34;&gt;Faraday Team&lt;/a&gt;. Website and branding design by &lt;a href=&#34;https://elelopic.design&#34;&gt;Elena Lo Piccolo&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>