<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-12-29T01:37:01Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>blackcandy-org/blackcandy</title>
    <updated>2025-12-29T01:37:01Z</updated>
    <id>tag:github.com,2025-12-29:/blackcandy-org/blackcandy</id>
    <link href="https://github.com/blackcandy-org/blackcandy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A self hosted music streaming server&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Black Candy logo&#34; width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/blackcandy-org/black_candy/master/app/assets/images/logo.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Black Candy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/blackcandy-org/black_candy/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/blackcandy-org/black_candy/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/blackcandy-org/black_candy?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/blackcandy-org/blackcandy/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/testdouble/standard&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-standard-brightgreen.svg?sanitize=true&#34; alt=&#34;Ruby Style Guide&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/blackcandy/blackcandy&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blackcandy-org/blackcandy/master/docs/images/screenshot_main.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Black Candy is a self-hosted music streaming server, your personal music center.&lt;/p&gt; &#xA;&lt;h2&gt;Try The Demo&lt;/h2&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://demo.blackcandy.org&#34;&gt;https://demo.blackcandy.org&lt;/a&gt; and use demo user (email: &lt;a href=&#34;mailto:admin@admin.com&#34;&gt;admin@admin.com&lt;/a&gt;, password: foobar) to log in. And feel free to try it.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This demo user does not have administrator privileges. So you cannot experience all the features in Black Candy. And all music in the demo are from &lt;a href=&#34;https://freemusicarchive.org/&#34;&gt;Free Music Archive&lt;/a&gt;. You can check their &lt;a href=&#34;https://github.com/blackcandy-org/blackcandy/raw/master/docs/demo_music_licenses.md&#34;&gt;licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Black Candy uses docker image to install easily. You can run Black Candy like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest &#xA;&#xA;# Or pull from Docker Hub.&#xA;docker run -p 3000:3000 blackcandy/blackcandy:latest &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all. Now, you can access either &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; or &lt;a href=&#34;http://host-ip:3000&#34;&gt;http://host-ip:3000&lt;/a&gt; in a browser, and use initial admin user to log in (email: &lt;a href=&#34;mailto:admin@admin.com&#34;&gt;admin@admin.com&lt;/a&gt;, password: foobar).&lt;/p&gt; &#xA;&lt;h2&gt;Upgrade&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] If you upgrade to a major version, you need to read the upgrade guide carefully before upgrade. Because there are some breaking changes in a major version.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;See &lt;a href=&#34;https://github.com/blackcandy-org/blackcandy/raw/master/docs/v3_upgrade.md&#34;&gt;V3 Upgrade&lt;/a&gt; for upgrade from V2 release.&lt;/li&gt; &#xA;  &lt;li&gt;See &lt;a href=&#34;https://github.com/blackcandy-org/blackcandy/raw/master/docs/edge_upgrade.md&#34;&gt;Edge Upgrade&lt;/a&gt; for upgrade from edge release to latest stable release.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Upgrade Black Candy is pull new image from remote. Then remove an old container and create a new one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull ghcr.io/blackcandy-org/blackcandy:latest&#xA;docker stop &amp;lt;your_blackcandy_container&amp;gt;&#xA;docker rm &amp;lt;your_blackcandy_container&amp;gt;&#xA;docker run &amp;lt;OPTIONS&amp;gt; ghcr.io/blackcandy-org/blackcandy:latest &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With docker compose, you can upgrade Black Candy like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull ghcr.io/blackcandy-org/blackcandy:latest&#xA;docker-compose down&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mobile Apps&lt;/h2&gt; &#xA;&lt;p&gt;Black Candy mobile apps are available in the following app stores:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/app/blackcandy/id6444304071&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blackcandy-org/ios/master/images/appstore_badge.png&#34; alt=&#34;Get it on App Store&#34; height=&#34;50&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/org.blackcandy.android/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blackcandy-org/android/master/images/fdroid_badge.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Android app, you can also download APK from &lt;a href=&#34;https://github.com/blackcandy-org/android/releases/latest&#34;&gt;GitHub Release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Port Mapping&lt;/h3&gt; &#xA;&lt;p&gt;Black Candy exports the 3000 port. If you want to be able to access it from the host, you can use the &lt;code&gt;-p&lt;/code&gt; option to map the port.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Media Files Mounts&lt;/h3&gt; &#xA;&lt;p&gt;You can mount media files from host to container and use &lt;code&gt;MEDIA_PATH&lt;/code&gt; environment variable to set the media path for black candy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -v /media_data:/media_data -e MEDIA_PATH=/media_data ghcr.io/blackcandy-org/blackcandy:latest   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use PostgreSQL As Database&lt;/h3&gt; &#xA;&lt;p&gt;Black Candy use SQLite as database by default. Because SQLite can simplify the process of installation, and it&#39;s an ideal choice for self-hosted small server. If you think SQLite is not enough, or you are using some cloud service like heroku to host Black Candy, you can also use PostgreSQL as database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -e DB_ADAPTER=postgresql -e DB_URL=postgresql://yourdatabaseurl ghcr.io/blackcandy-org/blackcandy:latest &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to Persist Data&lt;/h3&gt; &#xA;&lt;p&gt;All the data that need to persist in Black Candy are stored in &lt;code&gt;/app/storage&lt;/code&gt;, So you can mount this directory to host to persist data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir storage_data&#xA;&#xA;docker run -v ./storage_data:/app/storage ghcr.io/blackcandy-org/blackcandy:latest &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nginx To Send File&lt;/h3&gt; &#xA;&lt;p&gt;Black Candy supports use Nginx to delivery audio file to the client. It&#39;s a more effective way than handled by Black Candy backend. And Black Candy docker image is also ready for &lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy&#34;&gt;nginx-proxy&lt;/a&gt;, which means you can set up a Nginx proxy for Black Candy easily.&lt;/p&gt; &#xA;&lt;p&gt;You can use docker-compose to set up those services. The docker-compose.yml file looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  nginx-proxy:&#xA;    image: nginxproxy/nginx-proxy&#xA;    ports:&#xA;      - &#34;80:80&#34;&#xA;    volumes:&#xA;      - ./blackcandy.local:/etc/nginx/vhost.d/blackcandy.local:ro&#xA;      - /var/run/docker.sock:/tmp/docker.sock:ro&#xA;      - /media_data:/media_data # Keep the path of media files in container the same as blackcandy container.&#xA;&#xA;  app:&#xA;    image: ghcr.io/blackcandy-org/blackcandy:latest &#xA;    volumes:&#xA;      - ./storage_data:/app/storage&#xA;      - /media_data:/media_data&#xA;    environment:&#xA;      VIRTUAL_HOST: blackcandy.local&#xA;      MEDIA_PATH: /media_data&#xA;      NGINX_SENDFILE: &#34;true&#34; # Don&#39;t forget to set `NGINX_SENDFILE` environment variable to true to enable nginx sendfile.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Get the default sendfile config for blackcandy. This file need to mount to nginx proxy container to add custom configuration for nginx.&#xA;curl https://raw.githubusercontent.com/blackcandy-org/blackcandy/v3.0.0/config/nginx/sendfile.conf &amp;gt; blackcandy.local&#xA;&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Logging&lt;/h3&gt; &#xA;&lt;p&gt;Black Candy logs to &lt;code&gt;STDOUT&lt;/code&gt; by default. So if you want to control the log, Docker already supports a lot of options to handle the log in the container. See: &lt;a href=&#34;https://docs.docker.com/config/containers/logging/configure/&#34;&gt;https://docs.docker.com/config/containers/logging/configure/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DB_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The URL of PostgreSQL database. You must set this environment variable if you use PostgreSQL as database.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MEDIA_PATH&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;You can use this environment variable to set media path for Black Candy, otherwise you can set media path in settings page.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DB_ADAPTER&lt;/td&gt; &#xA;   &lt;td&gt;&#34;sqlite&#34;&lt;/td&gt; &#xA;   &lt;td&gt;There are two adapters are supported, &#34;sqlite&#34; and &#34;postgresql&#34;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NGINX_SENDFILE&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Whether enable Nginx sendfile.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SECRET_KEY_BASE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When the SECRET_KEY_BASE environment variable is not set, Black candy will generate SECRET_KEY_BASE environment variable every time when service start up. This will cause old sessions invalid, You can set your own SECRET_KEY_BASE environment variable on docker service to avoid it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FORCE_SSL&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Force all access to the app over SSL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DEMO_MODE&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Whether to enable demo mode, when demo mode is on, all users cannot access administrator privileges, even user is admin. And also users cannot change their profile.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Edge Version&lt;/h2&gt; &#xA;&lt;p&gt;The edge version of Black Candy base on master branch, which means it&#39;s not stable, you may encounter data loss or other issues. However, I don&#39;t recommend normal user using an edge version. But if you are a developer who wants to test or contribute to Black Candy, you can use the edge version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull ghcr.io/blackcandy-org/blackcandy:edge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 3.3&lt;/li&gt; &#xA; &lt;li&gt;Node.js 20&lt;/li&gt; &#xA; &lt;li&gt;libvips&lt;/li&gt; &#xA; &lt;li&gt;FFmpeg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure you have installed all those dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Install gem dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install JavaScript dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Database Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;rails db:prepare&#xA;rails db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start all services&lt;/h3&gt; &#xA;&lt;p&gt;After you’ve set up everything, now you can run &lt;code&gt;./bin/dev&lt;/code&gt; to start all services you need to develop. Then visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; use initial admin user to log in (email: &lt;a href=&#34;mailto:admin@admin.com&#34;&gt;admin@admin.com&lt;/a&gt;, password: foobar).&lt;/p&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Running all test&#xA;$ rails test:all &#xA;&#xA;# Running lint&#xA;$ rails lint:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Black Candy support get artist and album image from Discogs API. You can create an API token from Discogs and set Discogs token on Setting page to enable it.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;This project is supported by:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;&lt;img src=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true&#34; width=&#34;200px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jetbrains.com/community/opensource&#34;&gt;&lt;img src=&#34;https://resources.jetbrains.com/storage/products/company/brand/logos/jb_square.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>