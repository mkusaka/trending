<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-06T01:45:17Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ITV/domed-city</title>
    <updated>2023-07-06T01:45:17Z</updated>
    <id>tag:github.com,2023-07-06:/ITV/domed-city</id>
    <link href="https://github.com/ITV/domed-city" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple Terraform API wrapper in Ruby&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/ITV/domed-city&#34;&gt;&lt;img src=&#34;https://travis-ci.org/ITV/domed-city.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;domed-city&lt;/h1&gt; &#xA;&lt;p&gt;Simple CLI application that wraps the Terraform API.&lt;/p&gt; &#xA;&lt;p&gt;##&amp;nbsp;Purpose&lt;/p&gt; &#xA;&lt;p&gt;To consolidate, improve and enforce standards around ITV&#39;s use of Terraform across product teams.&lt;/p&gt; &#xA;&lt;p&gt;This gem provides two main functions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Wrap the main Terraform functions (e.g. &lt;code&gt;plan&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Ensure alignment to ITV&#39;s Common Platform VPC and environment policy.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This gem is very specific to how ITV utilise Terraform so it is unlikely to be useful to others except to serve as an example of how we do things.&lt;/p&gt; &#xA;&lt;h2&gt;Naming&lt;/h2&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Domed_city&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;...the dome is airtight and pressurized, creating a habitat that can be controlled for air temperature, composition and quality, typically due to an external atmosphere (or lack thereof) that is inimical to habitation for one or more reasons.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;domed-city&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For ease of use, type &lt;code&gt;bundle exec dome&lt;/code&gt; (you may get some warnings if you do not use &lt;code&gt;bundle exec&lt;/code&gt;) in the CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec dome&#xA;&#xA;  Dome wraps the Terraform API and performs useful stuff.&#xA;&#xA;  Usage:&#xA;        dome [--sudo] --&amp;lt;command&amp;gt;&#xA;  where &amp;lt;command&amp;gt;s are:&#xA;  -p, --plan             Creates a Terraform plan&#xA;  -a, --apply            Applies a Terraform plan&#xA;  -i, --init             Run Terraform init&#xA;  -s, --state            Synchronises the Terraform state&#xA;  -o, --output           Print all Terraform output variables&#xA;  -t, --statecmd=&amp;lt;s+&amp;gt;    Wrapper arround terraform state&#xA;  -r, --refresh          Refresh the state&#xA;  -c, --console          Spawn terraform console&#xA;  -u, --sudo             Assume itv-root instead of the role specified in profile&#xA;  -j, --json             Pass the `-json` arg to plan and apply commands&#xA;  -v, --version          Print version and exit&#xA;  -h, --help             Show this message&#xA;  -e, --environment      Spawn sub-shell with the exported variables&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Domed is designed to work with a certain directory structure. Your account,product,ecosystem and environment are assigned based on your current directory. The expected directory structure is terraform/$PRODUCT-$ECOSYSTEM/$ENVIRONMENT&lt;/p&gt; &#xA;&lt;p&gt;It also requires certain things in itv.yaml.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Your project (or better product) is defined using the project key in your itv.yaml.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;project: foo&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Valid environments are defined using the hashmap of ecosystems to environments key in your itv.yaml. eg&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;ecosystems:&#xA;  dev:&#xA;    - infradev&#xA;    - qa&#xA;    - stg&#xA;  prd:&#xA;    - infraprd&#xA;    - prd&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Valid accounts are of the format &#xA;  &lt;project&gt;&#xA;   -dev and &#xA;   &lt;project&gt;&#xA;    -prd and are calculated automatically using your project variable. This is consistent with the .aws/config because dome will try and assume the role based on that account.&#xA;   &lt;/project&gt;&#xA;  &lt;/project&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Sudo mode&lt;/h3&gt; &#xA;&lt;p&gt;By default dome will assume the role defined in your AWS profile. If &lt;code&gt;--sudo&lt;/code&gt; is specified, the value is overwritten by &lt;code&gt;itv-root&lt;/code&gt; role in the same account.&lt;/p&gt; &#xA;&lt;p&gt;Use this mode only when you need to manage resources requiring &lt;code&gt;itv-root&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Pin provider versions&lt;/h3&gt; &#xA;&lt;p&gt;Create a file called &lt;code&gt;.terraform-providers.yaml&lt;/code&gt; in the root of the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;aws: 2.6.0&#xA;external: 1.1.0&#xA;local: 1.2.0&#xA;template: 2.1.0&#xA;terraform: 1.0.0&#xA;vault: 1.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development &amp;amp; Releases&lt;/h2&gt; &#xA;&lt;p&gt;In order to make changes, you can point the reference to domed-city in the Gemfile to your local working directory eg&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;domed-city&#39;, :path =&amp;gt; &#39;/home/foo/github-repos/domed-city&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every commit will trigger &lt;a href=&#34;https://travis-ci.org/ITV/domed-city&#34;&gt;travis CI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make sure you run rake spec &amp;amp; rake rubocop&lt;/li&gt; &#xA; &lt;li&gt;To release a new version make a PR with your code changes, update the CHANGELOG and lib/dome/version.rb with your version(semver). Then ask for someone to review your PR and merge it. Then manually create a github release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rename project references to product&lt;/li&gt; &#xA; &lt;li&gt;Check the usage of certificate section&lt;/li&gt; &#xA; &lt;li&gt;Remove dynamoDB state locking (Terraform does that now)&lt;/li&gt; &#xA; &lt;li&gt;When everyone moves to 1.1 uncomment and use the TF_VARs cidr_ecosystem_dev/prd&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>