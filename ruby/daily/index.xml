<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-22T01:36:30Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>turingschool-examples/erroneous_creatures</title>
    <updated>2022-10-22T01:36:30Z</updated>
    <id>tag:github.com,2022-10-22:/turingschool-examples/erroneous_creatures</id>
    <link href="https://github.com/turingschool-examples/erroneous_creatures" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Erroneous Creatures&lt;/h1&gt; &#xA;&lt;p&gt;This is a collection of the standard Turing &lt;a href=&#34;https://github.com/turingschool/ruby-exercises/tree/master/mythical-creatures&#34;&gt;Mythical Creatures&lt;/a&gt; exercises with a few...obfuscations thrown in.&lt;/p&gt; &#xA;&lt;p&gt;Specifically, these creatures are &#34;completed&#34; and, in theory, correct. But each one has one or more subtle bugs introduced!&lt;/p&gt; &#xA;&lt;p&gt;Your job is to use the test suite, error messages, and tools like Pry to fix the mistakes.&lt;/p&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:turingschool-examples/erroneous_creatures.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Suggested Order&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;unicorn_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vampire_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dragon_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hobbit_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pirate_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wizard_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;medusa_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;werewolf_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;centaur_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hydra_spec.rb&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Common Mistakes&lt;/h3&gt; &#xA;&lt;p&gt;Here are some of the kinds of errors you can expect to find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Syntax errors (files won&#39;t run)&lt;/li&gt; &#xA; &lt;li&gt;Misuse of local / instance variables&lt;/li&gt; &#xA; &lt;li&gt;Misuse of boolean types / object truthiness&lt;/li&gt; &#xA; &lt;li&gt;Mixing variable assignment and boolean comparison&lt;/li&gt; &#xA; &lt;li&gt;Mixing of collection and single-object types&lt;/li&gt; &#xA; &lt;li&gt;Probably many more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Techniques&lt;/h3&gt; &#xA;&lt;p&gt;Remember the techniques we have at our disposal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the test suite to get rapid feedback about our code&lt;/li&gt; &#xA; &lt;li&gt;Use Pry to verify assumptions about code, especially verifying values of variables and types of objects&lt;/li&gt; &#xA; &lt;li&gt;Use stacktraces and error messages to understand and zero in on errors&lt;/li&gt; &#xA; &lt;li&gt;Read each stacktrace &lt;strong&gt;twice&lt;/strong&gt; before trying to change any code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the Tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt; running individual tests using &lt;code&gt;rspec&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rspec unicorn_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Related Lesson Plan&lt;/h3&gt; &#xA;&lt;p&gt;Meant to be used in combination with the &lt;a href=&#34;https://github.com/turingschool/lesson_plans/raw/master/ruby_01-object_oriented_programming_with_ruby/debugging.markdown&#34;&gt;Debugging Techniques&lt;/a&gt; Lesson Plan.&lt;/p&gt;</summary>
  </entry>
</feed>