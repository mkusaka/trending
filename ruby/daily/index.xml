<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-24T01:35:51Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ankane/strong_migrations</title>
    <updated>2022-06-24T01:35:51Z</updated>
    <id>tag:github.com,2022-06-24:/ankane/strong_migrations</id>
    <link href="https://github.com/ankane/strong_migrations" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Catch unsafe migrations in development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Strong Migrations&lt;/h1&gt; &#xA;&lt;p&gt;Catch unsafe migrations in development&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;‚úì&amp;nbsp;&amp;nbsp;Detects potentially dangerous operations&lt;br&gt;&amp;nbsp;&amp;nbsp;‚úì&amp;nbsp;&amp;nbsp;Prevents them from running by default&lt;br&gt;&amp;nbsp;&amp;nbsp;‚úì&amp;nbsp;&amp;nbsp;Provides instructions on safer ways to do what you want&lt;/p&gt; &#xA;&lt;p&gt;Supports PostgreSQL, MySQL, and MariaDB&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üçä&lt;/span&gt; Battle-tested at &lt;a href=&#34;https://www.instacart.com/opensource&#34;&gt;Instacart&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/strong_migrations/actions&#34;&gt;&lt;img src=&#34;https://github.com/ankane/strong_migrations/workflows/build/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application‚Äôs Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;strong_migrations&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle install&#xA;rails generate strong_migrations:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Strong Migrations sets a long statement timeout for migrations so you can set a &lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#app-timeouts&#34;&gt;short statement timeout&lt;/a&gt; for your application.&lt;/p&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;p&gt;When you run a migration that‚Äôs potentially dangerous, you‚Äôll see an error message like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;=== Dangerous operation detected #strong_migrations ===&#xA;&#xA;Active Record caches attributes, which causes problems&#xA;when removing columns. Be sure to ignore the column:&#xA;&#xA;class User &amp;lt; ApplicationRecord&#xA;  self.ignored_columns = [&#34;name&#34;]&#xA;end&#xA;&#xA;Deploy the code, then wrap this step in a safety_assured { ... } block.&#xA;&#xA;class RemoveColumn &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    safety_assured { remove_column :users, :name }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An operation is classified as dangerous if it either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Blocks reads or writes for more than a few seconds (after a lock is acquired)&lt;/li&gt; &#xA; &lt;li&gt;Has a good chance of causing application errors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Checks&lt;/h2&gt; &#xA;&lt;p&gt;Potentially dangerous operations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#removing-a-column&#34;&gt;removing a column&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#adding-a-column-with-a-default-value&#34;&gt;adding a column with a default value&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#backfilling-data&#34;&gt;backfilling data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#changing-the-type-of-a-column&#34;&gt;changing the type of a column&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#renaming-a-column&#34;&gt;renaming a column&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#renaming-a-table&#34;&gt;renaming a table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#creating-a-table-with-the-force-option&#34;&gt;creating a table with the force option&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#adding-a-check-constraint&#34;&gt;adding a check constraint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#executing-SQL-directly&#34;&gt;executing SQL directly&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Postgres-specific checks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#adding-an-index-non-concurrently&#34;&gt;adding an index non-concurrently&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#adding-a-reference&#34;&gt;adding a reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#adding-a-foreign-key&#34;&gt;adding a foreign key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#adding-a-json-column&#34;&gt;adding a json column&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#setting-not-null-on-an-existing-column&#34;&gt;setting NOT NULL on an existing column&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Best practices:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#keeping-non-unique-indexes-to-three-columns-or-less&#34;&gt;keeping non-unique indexes to three columns or less&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also add &lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#custom-checks&#34;&gt;custom checks&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/ankane/strong_migrations/master/#disable-checks&#34;&gt;disable specific checks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Removing a column&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Active Record caches database columns at runtime, so if you drop a column, it can cause exceptions until your app reboots.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class RemoveSomeColumnFromUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    remove_column :users, :some_column&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Tell Active Record to ignore the column from its cache&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User &amp;lt; ApplicationRecord&#xA;  self.ignored_columns = [&#34;some_column&#34;]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Deploy code&lt;/li&gt; &#xA; &lt;li&gt;Write a migration to remove the column (wrap in &lt;code&gt;safety_assured&lt;/code&gt; block)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class RemoveSomeColumnFromUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    safety_assured { remove_column :users, :some_column }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Deploy and run migration&lt;/li&gt; &#xA; &lt;li&gt;Remove the line added in step 1&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding a column with a default value&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;In earlier versions of Postgres, MySQL, and MariaDB, adding a column with a default value to an existing table causes the entire table to be rewritten. During this time, reads and writes are blocked in Postgres, and writes are blocked in MySQL and MariaDB.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeColumnToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_column :users, :some_column, :text, default: &#34;default_value&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Postgres 11+, MySQL 8.0.12+, and MariaDB 10.3.2+, this no longer requires a table rewrite and is safe.&lt;/p&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Instead, add the column without a default value, then change the default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeColumnToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def up&#xA;    add_column :users, :some_column, :text&#xA;    change_column_default :users, :some_column, &#34;default_value&#34;&#xA;  end&#xA;&#xA;  def down&#xA;    remove_column :users, :some_column&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the next section for how to backfill.&lt;/p&gt; &#xA;&lt;h3&gt;Backfilling data&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Active Record creates a transaction around each migration, and backfilling in the same transaction that alters a table keeps the table locked for the &lt;a href=&#34;https://wework.github.io/data/2015/11/05/add-columns-with-default-values-to-large-tables-in-rails-postgres/&#34;&gt;duration of the backfill&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeColumnToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_column :users, :some_column, :text&#xA;    User.update_all some_column: &#34;default_value&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, running a single query to update data can cause issues for large tables.&lt;/p&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;There are three keys to backfilling safely: batching, throttling, and running it outside a transaction. Use the Rails console or a separate migration with &lt;code&gt;disable_ddl_transaction!&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class BackfillSomeColumn &amp;lt; ActiveRecord::Migration[7.0]&#xA;  disable_ddl_transaction!&#xA;&#xA;  def up&#xA;    User.unscoped.in_batches do |relation|&#xA;      relation.update_all some_column: &#34;default_value&#34;&#xA;      sleep(0.01) # throttle&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing the type of a column&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Changing the type of a column causes the entire table to be rewritten. During this time, reads and writes are blocked in Postgres, and writes are blocked in MySQL and MariaDB.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ChangeSomeColumnType &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    change_column :users, :some_column, :new_type&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some changes don‚Äôt require a table rewrite and are safe in Postgres:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Safe Changes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cidr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Changing to &lt;code&gt;inet&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;citext&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Changing to &lt;code&gt;text&lt;/code&gt; if not indexed, changing to &lt;code&gt;string&lt;/code&gt; with no &lt;code&gt;:limit&lt;/code&gt; if not indexed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing or removing &lt;code&gt;:precision&lt;/code&gt;, changing to &lt;code&gt;timestamptz&lt;/code&gt; when session time zone is UTC in Postgres 12+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing &lt;code&gt;:precision&lt;/code&gt; at same &lt;code&gt;:scale&lt;/code&gt;, removing &lt;code&gt;:precision&lt;/code&gt; and &lt;code&gt;:scale&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;interval&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing or removing &lt;code&gt;:precision&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing &lt;code&gt;:precision&lt;/code&gt; at same &lt;code&gt;:scale&lt;/code&gt;, removing &lt;code&gt;:precision&lt;/code&gt; and &lt;code&gt;:scale&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing or removing &lt;code&gt;:limit&lt;/code&gt;, changing to &lt;code&gt;text&lt;/code&gt;, changing &lt;code&gt;citext&lt;/code&gt; if not indexed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Changing to &lt;code&gt;string&lt;/code&gt; with no &lt;code&gt;:limit&lt;/code&gt;, changing to &lt;code&gt;citext&lt;/code&gt; if not indexed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing or removing &lt;code&gt;:precision&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;timestamptz&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing or removing &lt;code&gt;:limit&lt;/code&gt;, changing to &lt;code&gt;datetime&lt;/code&gt; when session time zone is UTC in Postgres 12+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;And some in MySQL and MariaDB:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Safe Changes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increasing &lt;code&gt;:limit&lt;/code&gt; from under 255 up to 255, increasing &lt;code&gt;:limit&lt;/code&gt; from over 255 to the max&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;A safer approach is to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new column&lt;/li&gt; &#xA; &lt;li&gt;Write to both columns&lt;/li&gt; &#xA; &lt;li&gt;Backfill data from the old column to the new column&lt;/li&gt; &#xA; &lt;li&gt;Move reads from the old column to the new column&lt;/li&gt; &#xA; &lt;li&gt;Stop writing to the old column&lt;/li&gt; &#xA; &lt;li&gt;Drop the old column&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Renaming a column&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Renaming a column that‚Äôs in use will cause errors in your application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class RenameSomeColumn &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    rename_column :users, :some_column, :new_name&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;A safer approach is to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new column&lt;/li&gt; &#xA; &lt;li&gt;Write to both columns&lt;/li&gt; &#xA; &lt;li&gt;Backfill data from the old column to the new column&lt;/li&gt; &#xA; &lt;li&gt;Move reads from the old column to the new column&lt;/li&gt; &#xA; &lt;li&gt;Stop writing to the old column&lt;/li&gt; &#xA; &lt;li&gt;Drop the old column&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Renaming a table&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Renaming a table that‚Äôs in use will cause errors in your application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class RenameUsersToCustomers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    rename_table :users, :customers&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;A safer approach is to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new table&lt;/li&gt; &#xA; &lt;li&gt;Write to both tables&lt;/li&gt; &#xA; &lt;li&gt;Backfill data from the old table to new table&lt;/li&gt; &#xA; &lt;li&gt;Move reads from the old table to the new table&lt;/li&gt; &#xA; &lt;li&gt;Stop writing to the old table&lt;/li&gt; &#xA; &lt;li&gt;Drop the old table&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Creating a table with the force option&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;force&lt;/code&gt; option can drop an existing table.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    create_table :users, force: true do |t|&#xA;      # ...&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Create tables without the &lt;code&gt;force&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    create_table :users do |t|&#xA;      # ...&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you intend to drop an existing table, run &lt;code&gt;drop_table&lt;/code&gt; first.&lt;/p&gt; &#xA;&lt;h3&gt;Adding a check constraint&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;üê¢&lt;/span&gt; Safe by default available&lt;/p&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Adding a check constraint blocks reads and writes in Postgres and blocks writes in MySQL and MariaDB while every row is checked.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddCheckConstraint &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_check_constraint :users, &#34;price &amp;gt; 0&#34;, name: &#34;price_check&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good - Postgres&lt;/h4&gt; &#xA;&lt;p&gt;Add the check constraint without validating existing rows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddCheckConstraint &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_check_constraint :users, &#34;price &amp;gt; 0&#34;, name: &#34;price_check&#34;, validate: false&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then validate them in a separate migration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ValidateCheckConstraint &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    validate_check_constraint :users, name: &#34;price_check&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good - MySQL and MariaDB&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/strong_migrations/issues/new&#34;&gt;Let us know&lt;/a&gt; if you have a safe way to do this (check constraints can be added with &lt;code&gt;NOT ENFORCED&lt;/code&gt;, but enforcing blocks writes).&lt;/p&gt; &#xA;&lt;h3&gt;Executing SQL directly&lt;/h3&gt; &#xA;&lt;p&gt;Strong Migrations can‚Äôt ensure safety for raw SQL statements. Make really sure that what you‚Äôre doing is safe, then use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ExecuteSQL &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    safety_assured { execute &#34;...&#34; }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding an index non-concurrently&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;üê¢&lt;/span&gt; Safe by default available&lt;/p&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;In Postgres, adding an index non-concurrently blocks writes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeIndexToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_index :users, :some_column&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Add indexes concurrently.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeIndexToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  disable_ddl_transaction!&#xA;&#xA;  def change&#xA;    add_index :users, :some_column, algorithm: :concurrently&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you forget &lt;code&gt;disable_ddl_transaction!&lt;/code&gt;, the migration will fail. Also, note that indexes on new tables (those created in the same migration) don‚Äôt require this.&lt;/p&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/ankane/gindex&#34;&gt;gindex&lt;/a&gt;, you can generate an index migration instantly with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rails g index table column&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding a reference&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;üê¢&lt;/span&gt; Safe by default available&lt;/p&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Rails adds an index non-concurrently to references by default, which blocks writes in Postgres.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddReferenceToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_reference :users, :city&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Make sure the index is added concurrently.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddReferenceToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  disable_ddl_transaction!&#xA;&#xA;  def change&#xA;    add_reference :users, :city, index: {algorithm: :concurrently}&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding a foreign key&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;üê¢&lt;/span&gt; Safe by default available&lt;/p&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;In Postgres, adding a foreign key blocks writes on both tables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddForeignKeyOnUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_foreign_key :users, :orders&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddReferenceToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_reference :users, :order, foreign_key: true&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Add the foreign key without validating existing rows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddForeignKeyOnUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_foreign_key :users, :orders, validate: false&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then validate them in a separate migration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ValidateForeignKeyOnUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    validate_foreign_key :users, :orders&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding a json column&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;In Postgres, there‚Äôs no equality operator for the &lt;code&gt;json&lt;/code&gt; column type, which can cause errors for existing &lt;code&gt;SELECT DISTINCT&lt;/code&gt; queries in your application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddPropertiesToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_column :users, :properties, :json&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;jsonb&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddPropertiesToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_column :users, :properties, :jsonb&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting NOT NULL on an existing column&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;üê¢&lt;/span&gt; Safe by default available&lt;/p&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;In Postgres, setting &lt;code&gt;NOT NULL&lt;/code&gt; on an existing column blocks reads and writes while every row is checked.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class SetSomeColumnNotNull &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    change_column_null :users, :some_column, false&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Instead, add a check constraint.&lt;/p&gt; &#xA;&lt;p&gt;For Rails 6.1, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class SetSomeColumnNotNull &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_check_constraint :users, &#34;some_column IS NOT NULL&#34;, name: &#34;users_some_column_null&#34;, validate: false&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails &amp;lt; 6.1, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class SetSomeColumnNotNull &amp;lt; ActiveRecord::Migration[6.0]&#xA;  def change&#xA;    safety_assured do&#xA;      execute &#39;ALTER TABLE &#34;users&#34; ADD CONSTRAINT &#34;users_some_column_null&#34; CHECK (&#34;some_column&#34; IS NOT NULL) NOT VALID&#39;&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then validate it in a separate migration. A &lt;code&gt;NOT NULL&lt;/code&gt; check constraint is &lt;a href=&#34;https://medium.com/doctolib/adding-a-not-null-constraint-on-pg-faster-with-minimal-locking-38b2c00c4d1c&#34;&gt;functionally equivalent&lt;/a&gt; to setting &lt;code&gt;NOT NULL&lt;/code&gt; on the column (but it won‚Äôt show up in &lt;code&gt;schema.rb&lt;/code&gt; in Rails &amp;lt; 6.1). In Postgres 12+, once the check constraint is validated, you can safely set &lt;code&gt;NOT NULL&lt;/code&gt; on the column and drop the check constraint.&lt;/p&gt; &#xA;&lt;p&gt;For Rails 6.1, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ValidateSomeColumnNotNull &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    validate_check_constraint :users, name: &#34;users_some_column_null&#34;&#xA;&#xA;    # in Postgres 12+, you can then safely set NOT NULL on the column&#xA;    change_column_null :users, :some_column, false&#xA;    remove_check_constraint :users, name: &#34;users_some_column_null&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails &amp;lt; 6.1, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ValidateSomeColumnNotNull &amp;lt; ActiveRecord::Migration[6.0]&#xA;  def change&#xA;    safety_assured do&#xA;      execute &#39;ALTER TABLE &#34;users&#34; VALIDATE CONSTRAINT &#34;users_some_column_null&#34;&#39;&#xA;    end&#xA;&#xA;    # in Postgres 12+, you can then safely set NOT NULL on the column&#xA;    change_column_null :users, :some_column, false&#xA;    safety_assured do&#xA;      execute &#39;ALTER TABLE &#34;users&#34; DROP CONSTRAINT &#34;users_some_column_null&#34;&#39;&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Keeping non-unique indexes to three columns or less&lt;/h3&gt; &#xA;&lt;h4&gt;Bad&lt;/h4&gt; &#xA;&lt;p&gt;Adding a non-unique index with more than three columns rarely improves performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeIndexToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_index :users, [:a, :b, :c, :d]&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Good&lt;/h4&gt; &#xA;&lt;p&gt;Instead, start an index with columns that narrow down the results the most.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AddSomeIndexToUsers &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    add_index :users, [:b, :d]&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Postgres, be sure to add them concurrently.&lt;/p&gt; &#xA;&lt;h2&gt;Assuring Safety&lt;/h2&gt; &#xA;&lt;p&gt;To mark a step in the migration as safe, despite using a method that might otherwise be dangerous, wrap it in a &lt;code&gt;safety_assured&lt;/code&gt; block.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MySafeMigration &amp;lt; ActiveRecord::Migration[7.0]&#xA;  def change&#xA;    safety_assured { remove_column :users, :some_column }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Certain methods like &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;change_table&lt;/code&gt; cannot be inspected and are prevented from running by default. Make sure what you‚Äôre doing is really safe and use this pattern.&lt;/p&gt; &#xA;&lt;h2&gt;Safe by Default&lt;/h2&gt; &#xA;&lt;p&gt;Make operations safe by default.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;adding and removing an index&lt;/li&gt; &#xA; &lt;li&gt;adding a foreign key&lt;/li&gt; &#xA; &lt;li&gt;adding a check constraint&lt;/li&gt; &#xA; &lt;li&gt;setting NOT NULL on an existing column&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;config/initializers/strong_migrations.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.safe_by_default = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom Checks&lt;/h2&gt; &#xA;&lt;p&gt;Add your own custom checks with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.add_check do |method, args|&#xA;  if method == :add_index &amp;amp;&amp;amp; args[0].to_s == &#34;users&#34;&#xA;    stop! &#34;No more indexes on the users table&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;stop!&lt;/code&gt; method to stop migrations.&lt;/p&gt; &#xA;&lt;p&gt;Note: Since &lt;code&gt;remove_column&lt;/code&gt; always requires a &lt;code&gt;safety_assured&lt;/code&gt; block, it‚Äôs not possible to add a custom check for &lt;code&gt;remove_column&lt;/code&gt; operations.&lt;/p&gt; &#xA;&lt;h2&gt;Opt-in Checks&lt;/h2&gt; &#xA;&lt;h3&gt;Removing an index non-concurrently&lt;/h3&gt; &#xA;&lt;p&gt;Postgres supports removing indexes concurrently, but removing them non-concurrently shouldn‚Äôt be an issue for most applications. You can enable this check with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.enable_check(:remove_index)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disable Checks&lt;/h2&gt; &#xA;&lt;p&gt;Disable specific checks with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.disable_check(:add_index)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/ankane/strong_migrations/raw/master/lib/strong_migrations.rb&#34;&gt;source code&lt;/a&gt; for the list of keys.&lt;/p&gt; &#xA;&lt;h2&gt;Down Migrations / Rollbacks&lt;/h2&gt; &#xA;&lt;p&gt;By default, checks are disabled when migrating down. Enable them with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.check_down = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom Messages&lt;/h2&gt; &#xA;&lt;p&gt;To customize specific messages, create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.error_messages[:add_column_default] = &#34;Your custom instructions&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/ankane/strong_migrations/raw/master/lib/strong_migrations/error_messages.rb&#34;&gt;source code&lt;/a&gt; for the list of keys.&lt;/p&gt; &#xA;&lt;h2&gt;Migration Timeouts&lt;/h2&gt; &#xA;&lt;p&gt;It‚Äôs extremely important to set a short lock timeout for migrations. This way, if a migration can‚Äôt acquire a lock in a timely manner, other statements won‚Äôt be stuck behind it. We also recommend setting a long statement timeout so migrations can run for a while.&lt;/p&gt; &#xA;&lt;p&gt;Create &lt;code&gt;config/initializers/strong_migrations.rb&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.lock_timeout = 10.seconds&#xA;StrongMigrations.statement_timeout = 1.hour&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or set the timeouts directly on the database user that runs migrations. For Postgres, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;ALTER ROLE myuser SET lock_timeout = &#39;10s&#39;;&#xA;ALTER ROLE myuser SET statement_timeout = &#39;1h&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If you use PgBouncer in transaction mode, you must set timeouts on the database user.&lt;/p&gt; &#xA;&lt;h2&gt;Lock Timeout Retries [experimental]&lt;/h2&gt; &#xA;&lt;p&gt;There‚Äôs the option to automatically retry statements when the lock timeout is reached. Here‚Äôs how it works:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If a lock timeout happens outside a transaction, the statement is retried&lt;/li&gt; &#xA; &lt;li&gt;If it happens inside the DDL transaction, the entire migration is retried (only applicable to Postgres)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;config/initializers/strong_migrations.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.lock_timeout_retries = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the delay between retries with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.lock_timeout_retry_delay = 10.seconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;App Timeouts&lt;/h2&gt; &#xA;&lt;p&gt;We recommend adding timeouts to &lt;code&gt;config/database.yml&lt;/code&gt; to prevent connections from hanging and individual queries from taking up too many resources in controllers, jobs, the Rails console, and other places.&lt;/p&gt; &#xA;&lt;p&gt;For Postgres:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;production:&#xA;  connect_timeout: 5&#xA;  variables:&#xA;    statement_timeout: 15s&#xA;    lock_timeout: 10s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If you use PgBouncer in transaction mode, you must set the statement and lock timeouts on the database user as shown above.&lt;/p&gt; &#xA;&lt;p&gt;For MySQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;production:&#xA;  connect_timeout: 5&#xA;  read_timeout: 5&#xA;  write_timeout: 5&#xA;  variables:&#xA;    max_execution_time: 15000 # ms&#xA;    lock_wait_timeout: 10 # sec&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For MariaDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;production:&#xA;  connect_timeout: 5&#xA;  read_timeout: 5&#xA;  write_timeout: 5&#xA;  variables:&#xA;    max_statement_time: 15 # sec&#xA;    lock_wait_timeout: 10 # sec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For HTTP connections, Redis, and other services, check out &lt;a href=&#34;https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Existing Migrations&lt;/h2&gt; &#xA;&lt;p&gt;To mark migrations as safe that were created before installing this gem, create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.start_after = 20170101000000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the version from your latest migration.&lt;/p&gt; &#xA;&lt;h2&gt;Target Version&lt;/h2&gt; &#xA;&lt;p&gt;If your development database version is different from production, you can specify the production version so the right checks run in development.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.target_version = 10 # or &#34;8.0.12&#34;, &#34;10.3.2&#34;, etc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The major version works well for Postgres, while the full version is recommended for MySQL and MariaDB.&lt;/p&gt; &#xA;&lt;p&gt;For safety, this option only affects development and test environments. In other environments, the actual server version is always used.&lt;/p&gt; &#xA;&lt;h2&gt;Analyze Tables&lt;/h2&gt; &#xA;&lt;p&gt;Analyze tables automatically (to update planner statistics) after an index is added. Create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;StrongMigrations.auto_analyze = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Faster Migrations&lt;/h2&gt; &#xA;&lt;p&gt;Only dump the schema when adding a new migration. If you use Git, add to the end of your &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;task :faster_migrations do&#xA;  ActiveRecord::Base.dump_schema_after_migration = Rails.env.development? &amp;amp;&amp;amp;&#xA;    `git status db/migrate/ --porcelain`.present?&#xA;end&#xA;&#xA;task &#34;db:migrate&#34;: &#34;faster_migrations&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Schema Sanity&lt;/h2&gt; &#xA;&lt;p&gt;Columns can flip order in &lt;code&gt;db/schema.rb&lt;/code&gt; when you have multiple developers. One way to prevent this is to &lt;a href=&#34;https://www.pgrs.net/2008/03/12/alphabetize-schema-rb-columns/&#34;&gt;alphabetize them&lt;/a&gt;. Add to the end of your &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;task &#34;db:schema:dump&#34;: &#34;strong_migrations:alphabetize_columns&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Permissions&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using a &lt;a href=&#34;https://ankane.org/postgres-users&#34;&gt;separate database user&lt;/a&gt; for migrations when possible so you don‚Äôt need to grant your app user permission to alter tables.&lt;/p&gt; &#xA;&lt;h2&gt;Smaller Projects&lt;/h2&gt; &#xA;&lt;p&gt;You probably don‚Äôt need this gem for smaller projects, as operations that are unsafe at scale can be perfectly safe on smaller, low-traffic tables.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pedro.herokuapp.com/past/2011/7/13/rails_migrations_with_no_downtime/&#34;&gt;Rails Migrations with No Downtime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/braintree-product-technology/postgresql-at-scale-database-schema-changes-without-downtime-20d3749ed680&#34;&gt;PostgreSQL at Scale: Database Schema Changes Without Downtime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mydbops.wordpress.com/2020/03/04/an-overview-of-ddl-algorithms-in-mysql-covers-mysql-8/&#34;&gt;An Overview of DDL Algorithms in MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mariadb.com/kb/en/innodb-online-ddl-overview/&#34;&gt;MariaDB InnoDB Online DDL Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Bob Remeika and David Waller for the &lt;a href=&#34;https://github.com/foobarfighter/safe-migrations&#34;&gt;original code&lt;/a&gt; and &lt;a href=&#34;https://github.com/LendingHome/zero_downtime_migrations&#34;&gt;Sean Huber&lt;/a&gt; for the bad/good readme format.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Everyone is encouraged to help improve this project. Here are a few ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankane/strong_migrations/issues&#34;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs and &lt;a href=&#34;https://github.com/ankane/strong_migrations/pulls&#34;&gt;submit pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write, clarify, or fix documentation&lt;/li&gt; &#xA; &lt;li&gt;Suggest or add new features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get started with development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ankane/strong_migrations.git&#xA;cd strong_migrations&#xA;bundle install&#xA;&#xA;# Postgres&#xA;createdb strong_migrations_test&#xA;bundle exec rake test&#xA;&#xA;# MySQL and MariaDB&#xA;mysqladmin create strong_migrations_test&#xA;ADAPTER=mysql2 bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>flyerhzm/bullet</title>
    <updated>2022-06-24T01:35:51Z</updated>
    <id>tag:github.com,2022-06-24:/flyerhzm/bullet</id>
    <link href="https://github.com/flyerhzm/bullet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;help to kill N+1 queries and unused eager loading&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bullet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/flyerhzm/bullet/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Main workflow&#34;&gt; &lt;a href=&#34;http://badge.fury.io/rb/bullet&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/bullet.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://awesomecode.io/repos/flyerhzm/bullet&#34;&gt;&lt;img src=&#34;https://awesomecode.io/projects/6755235b-e2c1-459e-bf92-b8b13d0c0472/status&#34; alt=&#34;AwesomeCode Status for flyerhzm/bullet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://coderwall.com/flyerhzm&#34;&gt;&lt;img src=&#34;http://api.coderwall.com/flyerhzm/endorsecount.png&#34; alt=&#34;Coderwall Endorse&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Bullet gem is designed to help you increase your application&#39;s performance by reducing the number of queries it makes. It will watch your queries while you develop your application and notify you when you should add eager loading (N+1 queries), when you&#39;re using eager loading that isn&#39;t necessary and when you should use counter cache.&lt;/p&gt; &#xA;&lt;p&gt;Best practice is to use Bullet in development mode or custom mode (staging, profile, etc.). The last thing you want is your clients getting alerts about how lazy you are.&lt;/p&gt; &#xA;&lt;p&gt;Bullet gem now supports &lt;strong&gt;activerecord&lt;/strong&gt; &amp;gt;= 4.0 and &lt;strong&gt;mongoid&lt;/strong&gt; &amp;gt;= 4.0.&lt;/p&gt; &#xA;&lt;p&gt;If you use activerecord 2.x, please use bullet &amp;lt;= 4.5.0&lt;/p&gt; &#xA;&lt;p&gt;If you use activerecord 3.x, please use bullet &amp;lt; 5.5.0&lt;/p&gt; &#xA;&lt;h2&gt;External Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://railscasts.com/episodes/372-bullet&#34;&gt;http://railscasts.com/episodes/372-bullet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ruby5.envylabs.com/episodes/9-episode-8-september-8-2009&#34;&gt;http://ruby5.envylabs.com/episodes/9-episode-8-september-8-2009&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://railslab.newrelic.com/2009/10/23/episode-19-on-the-edge-part-1&#34;&gt;http://railslab.newrelic.com/2009/10/23/episode-19-on-the-edge-part-1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://weblog.rubyonrails.org/2009/10/22/community-highlights&#34;&gt;http://weblog.rubyonrails.org/2009/10/22/community-highlights&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You can install it as a gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install bullet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or add it into a Gemfile (Bundler):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;bullet&#39;, group: &#39;development&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable the Bullet gem with generate command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bundle exec rails g bullet:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generate command will auto generate the default configuration and may ask to include in the test environment as well. See below for custom configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: make sure &lt;code&gt;bullet&lt;/code&gt; gem is added after activerecord (rails) and mongoid.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Bullet won&#39;t enable any notification systems unless you tell it to explicitly. Append to &lt;code&gt;config/environments/development.rb&lt;/code&gt; initializer with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.after_initialize do&#xA;  Bullet.enable = true&#xA;  Bullet.sentry = true&#xA;  Bullet.alert = true&#xA;  Bullet.bullet_logger = true&#xA;  Bullet.console = true&#xA;  Bullet.xmpp = { :account  =&amp;gt; &#39;bullets_account@jabber.org&#39;,&#xA;                  :password =&amp;gt; &#39;bullets_password_for_jabber&#39;,&#xA;                  :receiver =&amp;gt; &#39;your_account@jabber.org&#39;,&#xA;                  :show_online_status =&amp;gt; true }&#xA;  Bullet.rails_logger = true&#xA;  Bullet.honeybadger = true&#xA;  Bullet.bugsnag = true&#xA;  Bullet.appsignal = true&#xA;  Bullet.airbrake = true&#xA;  Bullet.rollbar = true&#xA;  Bullet.add_footer = true&#xA;  Bullet.skip_html_injection = false&#xA;  Bullet.stacktrace_includes = [ &#39;your_gem&#39;, &#39;your_middleware&#39; ]&#xA;  Bullet.stacktrace_excludes = [ &#39;their_gem&#39;, &#39;their_middleware&#39;, [&#39;my_file.rb&#39;, &#39;my_method&#39;], [&#39;my_file.rb&#39;, 16..20] ]&#xA;  Bullet.slack = { webhook_url: &#39;http://some.slack.url&#39;, channel: &#39;#default&#39;, username: &#39;notifier&#39; }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The notifier of Bullet is a wrap of &lt;a href=&#34;https://github.com/flyerhzm/uniform_notifier&#34;&gt;uniform_notifier&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The code above will enable all of the Bullet notification systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.enable&lt;/code&gt;: enable Bullet gem, otherwise do nothing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.alert&lt;/code&gt;: pop up a JavaScript alert in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.bullet_logger&lt;/code&gt;: log to the Bullet log file (Rails.root/log/bullet.log)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.console&lt;/code&gt;: log warnings to your browser&#39;s console.log (Safari/Webkit browsers or Firefox w/Firebug installed)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.xmpp&lt;/code&gt;: send XMPP/Jabber notifications to the receiver indicated. Note that the code will currently not handle the adding of contacts, so you will need to make both accounts indicated know each other manually before you will receive any notifications. If you restart the development server frequently, the &#39;coming online&#39; sound for the Bullet account may start to annoy - in this case set :show_online_status to false; you will still get notifications, but the Bullet account won&#39;t announce it&#39;s online status anymore.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.rails_logger&lt;/code&gt;: add warnings directly to the Rails log&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.honeybadger&lt;/code&gt;: add notifications to Honeybadger&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.bugsnag&lt;/code&gt;: add notifications to bugsnag&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.airbrake&lt;/code&gt;: add notifications to airbrake&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.appsignal&lt;/code&gt;: add notifications to AppSignal&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.rollbar&lt;/code&gt;: add notifications to rollbar&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.sentry&lt;/code&gt;: add notifications to sentry&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.add_footer&lt;/code&gt;: adds the details in the bottom left corner of the page. Double click the footer or use close button to hide footer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.skip_html_injection&lt;/code&gt;: prevents Bullet from injecting code into the returned HTML. This must be false for receiving alerts, showing the footer or console logging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.skip_http_headers&lt;/code&gt;: don&#39;t add headers to API requests, and remove the javascript that relies on them. Note that this prevents bullet from logging warnings to the browser console or updating the footer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.stacktrace_includes&lt;/code&gt;: include paths with any of these substrings in the stack trace, even if they are not in your main app&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.stacktrace_excludes&lt;/code&gt;: ignore paths with any of these substrings in the stack trace, even if they are not in your main app. Each item can be a string (match substring), a regex, or an array where the first item is a path to match, and the second item is a line number, a Range of line numbers, or a (bare) method name, to exclude only particular lines in a file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.slack&lt;/code&gt;: add notifications to slack&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Bullet.raise&lt;/code&gt;: raise errors, useful for making your specs fail unless they have optimized queries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Bullet also allows you to disable any of its detectors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Each of these settings defaults to true&#xA;&#xA;# Detect N+1 queries&#xA;Bullet.n_plus_one_query_enable     = false&#xA;&#xA;# Detect eager-loaded associations which are not used&#xA;Bullet.unused_eager_loading_enable = false&#xA;&#xA;# Detect unnecessary COUNT queries which could be avoided&#xA;# with a counter_cache&#xA;Bullet.counter_cache_enable        = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Safe list&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes Bullet may notify you of query problems you don&#39;t care to fix, or which come from outside your code. You can add them to a safe list to ignore them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Bullet.add_safelist :type =&amp;gt; :n_plus_one_query, :class_name =&amp;gt; &#34;Post&#34;, :association =&amp;gt; :comments&#xA;Bullet.add_safelist :type =&amp;gt; :unused_eager_loading, :class_name =&amp;gt; &#34;Post&#34;, :association =&amp;gt; :comments&#xA;Bullet.add_safelist :type =&amp;gt; :counter_cache, :class_name =&amp;gt; &#34;Country&#34;, :association =&amp;gt; :cities&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to skip bullet in some specific controller actions, you can do like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  around_action :skip_bullet, if: -&amp;gt; { defined?(Bullet) }&#xA;&#xA;  def skip_bullet&#xA;    previous_value = Bullet.enable?&#xA;    Bullet.enable = false&#xA;    yield&#xA;  ensure&#xA;    Bullet.enable = previous_value&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Log&lt;/h2&gt; &#xA;&lt;p&gt;The Bullet log &lt;code&gt;log/bullet.log&lt;/code&gt; will look something like this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;N+1 Query:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;2009-08-25 20:40:17[INFO] USE eager loading detected:&#xA;  Post =&amp;gt; [:comments]¬∑&#xA;  Add to your query: .includes([:comments])&#xA;2009-08-25 20:40:17[INFO] Call stack&#xA;  /Users/richard/Downloads/test/app/views/posts/index.html.erb:8:in `each&#39;&#xA;  /Users/richard/Downloads/test/app/controllers/posts_controller.rb:7:in `index&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first log entry is a notification that N+1 queries have been encountered. The remaining entry is a stack trace so you can find exactly where the queries were invoked in your code, and fix them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unused eager loading:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;2009-08-25 20:53:56[INFO] AVOID eager loading detected&#xA;  Post =&amp;gt; [:comments]¬∑&#xA;  Remove from your query: .includes([:comments])&#xA;2009-08-25 20:53:56[INFO] Call stack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These lines are notifications that unused eager loadings have been encountered.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Need counter cache:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;2009-09-11 09:46:50[INFO] Need Counter Cache&#xA;  Post =&amp;gt; [:comments]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;XMPP/Jabber and Airbrake Support&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://github.com/flyerhzm/uniform_notifier&#34;&gt;https://github.com/flyerhzm/uniform_notifier&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Growl Support&lt;/h2&gt; &#xA;&lt;p&gt;Growl support is dropped from uniform_notifier 1.16.0, if you still want it, please use uniform_notifier 1.15.0.&lt;/p&gt; &#xA;&lt;h2&gt;Important&lt;/h2&gt; &#xA;&lt;p&gt;If you find Bullet does not work for you, &lt;em&gt;please disable your browser&#39;s cache&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;h3&gt;Work with ActiveJob&lt;/h3&gt; &#xA;&lt;p&gt;Include &lt;code&gt;Bullet::ActiveJob&lt;/code&gt; in your &lt;code&gt;ApplicationJob&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationJob &amp;lt; ActiveJob::Base&#xA;  include Bullet::ActiveJob if Rails.env.development?&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Work with other background job solution&lt;/h3&gt; &#xA;&lt;p&gt;Use the Bullet.profile method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationJob &amp;lt; ActiveJob::Base&#xA;  around_perform do |_job, block|&#xA;    Bullet.profile do&#xA;      block.call&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Work with sinatra&lt;/h3&gt; &#xA;&lt;p&gt;Configure and use &lt;code&gt;Bullet::Rack&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;configure :development do&#xA;  Bullet.enable = true&#xA;  Bullet.bullet_logger = true&#xA;  use Bullet::Rack&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run in tests&lt;/h3&gt; &#xA;&lt;p&gt;First you need to enable Bullet in test environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/environments/test.rb&#xA;config.after_initialize do&#xA;  Bullet.enable = true&#xA;  Bullet.bullet_logger = true&#xA;  Bullet.raise = true # raise an error if n+1 query occurs&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then wrap each test in Bullet api.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# spec/rails_helper.rb&#xA;if Bullet.enable?&#xA;  config.before(:each) do&#xA;    Bullet.start_request&#xA;  end&#xA;&#xA;  config.after(:each) do&#xA;    Bullet.perform_out_of_channel_notifications if Bullet.notification?&#xA;    Bullet.end_request&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Debug Mode&lt;/h2&gt; &#xA;&lt;p&gt;Bullet outputs some details info, to enable debug mode, set &lt;code&gt;BULLET_DEBUG=true&lt;/code&gt; env.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flyerhzm/bullet/contributors&#34;&gt;https://github.com/flyerhzm/bullet/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Bullet is designed to function as you browse through your application in development. To see it in action, you can follow these steps to create, detect, and fix example query problems.&lt;/p&gt; &#xA;&lt;p&gt;1. Create an example application&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rails new test_bullet&#xA;$ cd test_bullet&#xA;$ rails g scaffold post name:string&#xA;$ rails g scaffold comment name:string post_id:integer&#xA;$ bundle exec rake db:migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2. Change &lt;code&gt;app/model/post.rb&lt;/code&gt; and &lt;code&gt;app/model/comment.rb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post &amp;lt; ActiveRecord::Base&#xA;  has_many :comments&#xA;end&#xA;&#xA;class Comment &amp;lt; ActiveRecord::Base&#xA;  belongs_to :post&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3. Go to &lt;code&gt;rails c&lt;/code&gt; and execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;post1 = Post.create(:name =&amp;gt; &#39;first&#39;)&#xA;post2 = Post.create(:name =&amp;gt; &#39;second&#39;)&#xA;post1.comments.create(:name =&amp;gt; &#39;first&#39;)&#xA;post1.comments.create(:name =&amp;gt; &#39;second&#39;)&#xA;post2.comments.create(:name =&amp;gt; &#39;third&#39;)&#xA;post2.comments.create(:name =&amp;gt; &#39;fourth&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4. Change the &lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt; to produce a N+1 query&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&#xA;  &amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= post.name %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= post.comments.map(&amp;amp;:name) %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Show&#39;, post %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Edit&#39;, edit_post_path(post) %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Destroy&#39;, post, :confirm =&amp;gt; &#39;Are you sure?&#39;, :method =&amp;gt; :delete %&amp;gt;&amp;lt;/td&amp;gt;&#xA;  &amp;lt;/tr&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5. Add the &lt;code&gt;bullet&lt;/code&gt; gem to the &lt;code&gt;Gemfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;bullet&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;6. enable the Bullet gem with generate command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec rails g bullet:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;7. Start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rails s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;8. Visit &lt;code&gt;http://localhost:3000/posts&lt;/code&gt; in browser, and you will see a popup alert box that says&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The request has unused preload associations as follows:&#xA;None&#xA;The request has N+1 queries as follows:&#xA;model: Post =&amp;gt; associations: [comment]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which means there is a N+1 query from the Post object to its Comment association.&lt;/p&gt; &#xA;&lt;p&gt;In the meantime, there&#39;s a log appended into &lt;code&gt;log/bullet.log&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2010-03-07 14:12:18[INFO] N+1 Query in /posts&#xA;  Post =&amp;gt; [:comments]&#xA;  Add to your finder: :include =&amp;gt; [:comments]&#xA;2010-03-07 14:12:18[INFO] N+1 Query method call stack&#xA;  /home/flyerhzm/Downloads/test_bullet/app/views/posts/index.html.erb:14:in `_render_template__600522146_80203160_0&#39;&#xA;  /home/flyerhzm/Downloads/test_bullet/app/views/posts/index.html.erb:11:in `each&#39;&#xA;  /home/flyerhzm/Downloads/test_bullet/app/views/posts/index.html.erb:11:in `_render_template__600522146_80203160_0&#39;&#xA;  /home/flyerhzm/Downloads/test_bullet/app/controllers/posts_controller.rb:7:in `index&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generated SQL is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Post Load (1.0ms)   SELECT * FROM &#34;posts&#34;&#xA;Comment Load (0.4ms)   SELECT * FROM &#34;comments&#34; WHERE (&#34;comments&#34;.post_id = 1)&#xA;Comment Load (0.3ms)   SELECT * FROM &#34;comments&#34; WHERE (&#34;comments&#34;.post_id = 2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;9. To fix the N+1 query, change &lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @posts = Post.includes(:comments)&#xA;&#xA;  respond_to do |format|&#xA;    format.html # index.html.erb&#xA;    format.xml  { render :xml =&amp;gt; @posts }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;10. Refresh &lt;code&gt;http://localhost:3000/posts&lt;/code&gt;. Now there&#39;s no alert box and nothing new in the log.&lt;/p&gt; &#xA;&lt;p&gt;The generated SQL is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Post Load (0.5ms)   SELECT * FROM &#34;posts&#34;&#xA;Comment Load (0.5ms)   SELECT &#34;comments&#34;.* FROM &#34;comments&#34; WHERE (&#34;comments&#34;.post_id IN (1,2))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;N+1 query fixed. Cool!&lt;/p&gt; &#xA;&lt;p&gt;11. Now simulate unused eager loading. Change &lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt; and &lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @posts = Post.includes(:comments)&#xA;&#xA;  respond_to do |format|&#xA;    format.html # index.html.erb&#xA;    format.xml  { render :xml =&amp;gt; @posts }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&#xA;  &amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= post.name %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Show&#39;, post %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Edit&#39;, edit_post_path(post) %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Destroy&#39;, post, :confirm =&amp;gt; &#39;Are you sure?&#39;, :method =&amp;gt; :delete %&amp;gt;&amp;lt;/td&amp;gt;&#xA;  &amp;lt;/tr&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;12. Refresh &lt;code&gt;http://localhost:3000/posts&lt;/code&gt;, and you will see a popup alert box that says&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The request has unused preload associations as follows:&#xA;model: Post =&amp;gt; associations: [comment]&#xA;The request has N+1 queries as follows:&#xA;None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Meanwhile, there&#39;s a line appended to &lt;code&gt;log/bullet.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2009-08-25 21:13:22[INFO] Unused preload associations: PATH_INFO: /posts;    model: Post =&amp;gt; associations: [comments]¬∑&#xA;Remove from your finder: :include =&amp;gt; [:comments]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;13. Simulate counter_cache. Change &lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt; and &lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def index&#xA;  @posts = Post.all&#xA;&#xA;  respond_to do |format|&#xA;    format.html # index.html.erb&#xA;    format.xml  { render :xml =&amp;gt; @posts }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&#xA;  &amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= post.name %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= post.comments.size %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Show&#39;, post %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Edit&#39;, edit_post_path(post) %&amp;gt;&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;%= link_to &#39;Destroy&#39;, post, :confirm =&amp;gt; &#39;Are you sure?&#39;, :method =&amp;gt; :delete %&amp;gt;&amp;lt;/td&amp;gt;&#xA;  &amp;lt;/tr&amp;gt;&#xA;&amp;lt;% end %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;14. Refresh &lt;code&gt;http://localhost:3000/posts&lt;/code&gt;, then you will see a popup alert box that says&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Need counter cache&#xA;  Post =&amp;gt; [:comments]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Meanwhile, there&#39;s a line appended to &lt;code&gt;log/bullet.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2009-09-11 10:07:10[INFO] Need Counter Cache&#xA;  Post =&amp;gt; [:comments]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copyright (c) 2009 - 2022 Richard Huang (&lt;a href=&#34;mailto:flyerhzm@gmail.com&#34;&gt;flyerhzm@gmail.com&lt;/a&gt;), released under the MIT license&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>solidusio/solidus</title>
    <updated>2022-06-24T01:35:51Z</updated>
    <id>tag:github.com,2022-06-24:/solidusio/solidus</id>
    <link href="https://github.com/solidusio/solidus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üõíSolidus, Rails eCommerce System&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/logo.svg?sanitize=true&#34; alt=&#34;Solidus logo&#34;&gt; &#xA;&lt;h1&gt;Solidus&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/solidusio/solidus/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/solidusio/solidus/tree/master.svg?style=shield&#34; alt=&#34;Circle CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/solidus&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/solidus.svg?sanitize=true&#34; alt=&#34;Gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/LICENSE.md&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-BSD-yellowgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://houndci.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg?sanitize=true&#34; alt=&#34;Reviewed by Hound&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/supporter/badge.svg?label=Supporters&amp;amp;color=brightgree&#34; alt=&#34;Supporters on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/bronze/badge.svg?label=Bronze%C2%A0Partners&amp;amp;color=brightgree&#34; alt=&#34;Bronze Partners on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/silver/badge.svg?label=Silver%C2%A0Partners&amp;amp;color=brightgree&#34; alt=&#34;Silver Partners on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;&lt;img src=&#34;https://opencollective.com/solidus/tiers/gold/badge.svg?label=Gold%C2%A0Partners&amp;amp;color=brightgree&#34; alt=&#34;Gold Partners on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/solidusio/solidus&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/solidusio/solidus/badges/users.svg?sanitize=true&#34; alt=&#34;Open Source Helpers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://slack.solidus.io&#34;&gt;&lt;img src=&#34;http://slack.solidus.io/badge.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A free, open-source ecommerce platform that gives you complete control over your store.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visit our website&lt;/strong&gt;: &lt;a href=&#34;https://solidus.io/&#34;&gt;https://solidus.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read our Community Guidelines&lt;/strong&gt;: &lt;a href=&#34;https://solidus.io/community-guidelines/&#34;&gt;https://solidus.io/community-guidelines/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read our guides&lt;/strong&gt;: &lt;a href=&#34;https://guides.solidus.io/developers/&#34;&gt;https://guides.solidus.io/developers/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Join our Slack&lt;/strong&gt;: &lt;a href=&#34;http://slack.solidus.io/&#34;&gt;http://slack.solidus.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Solidus Security&lt;/strong&gt;: &lt;a href=&#34;https://groups.google.com/forum/#!forum/solidus-security&#34;&gt;mailing list&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#supporting-solidus&#34;&gt;Supporting Solidus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#installation-options&#34;&gt;Installation Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#developing-solidus&#34;&gt;Developing Solidus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supporting Solidus&lt;/h2&gt; &#xA;&lt;p&gt;As a community-driven project, Solidus relies on funds and time donated by developers and stakeholders who use Solidus for their businesses. If you&#39;d like to help Solidus keep growing, please consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/raw/master/CONTRIBUTING.md&#34;&gt;Contribute to the project&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Main Contributor &amp;amp; Director&lt;/h3&gt; &#xA;&lt;p&gt;At present, Nebulab is the main code contributor and director of Solidus, providing technical guidance and coordinating community efforts and activities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nebulab.com/&#34;&gt;&lt;img src=&#34;https://nebulab.com/assets/img/logo-nebulab_gh-dark-light-mode.svg?sanitize=true&#34; alt=&#34;Nebulab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ambassadors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a Solidus Ambassador. Your logo will show up here with a link to your website. &lt;a href=&#34;https://opencollective.com/solidus&#34;&gt;Become an Ambassador&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://supergood.software/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/supergoodsoft/f720462/logo/100.png&#34; alt=&#34;Super Good Software&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://karmacreative.io/&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fopencollective-production.s3-us-west-1.amazonaws.com%2Fab94d2a0-7253-11e9-a366-37673cc38cee.png&amp;amp;height=100&#34; alt=&#34;Karma Creative&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.moddedeuros.com&#34;&gt;&lt;img src=&#34;https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fimages.opencollective.com%2Fmodded-euros%2Ff1a80ae%2Flogo.png&amp;amp;height=100&#34; alt=&#34;ModdedEuros&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;Solidus is a complete open source ecommerce solution built with Ruby on Rails. It is a fork of &lt;a href=&#34;https://spreecommerce.org&#34;&gt;Spree&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://docs.solidus.io&#34;&gt;Solidus class documentation&lt;/a&gt; and the &lt;a href=&#34;https://guides.solidus.io&#34;&gt;Solidus Guides&lt;/a&gt; for information about the functionality that Solidus provides.&lt;/p&gt; &#xA;&lt;p&gt;Solidus consists of several gems. When you require the &lt;code&gt;solidus&lt;/code&gt; gem in your &lt;code&gt;Gemfile&lt;/code&gt;, Bundler will install all of the gems maintained in this repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/api&#34;&gt;&lt;code&gt;solidus_api&lt;/code&gt;&lt;/a&gt; (RESTful API)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/frontend&#34;&gt;&lt;code&gt;solidus_frontend&lt;/code&gt;&lt;/a&gt; (Cart and storefront)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/backend&#34;&gt;&lt;code&gt;solidus_backend&lt;/code&gt;&lt;/a&gt; (Admin area)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/core&#34;&gt;&lt;code&gt;solidus_core&lt;/code&gt;&lt;/a&gt; (Essential models, mailers, and classes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/sample&#34;&gt;&lt;code&gt;solidus_sample&lt;/code&gt;&lt;/a&gt; (Sample data)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of the gems are designed to work together to provide a fully functional ecommerce platform. However, you may only want to use the &lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/core&#34;&gt;&lt;code&gt;solidus_core&lt;/code&gt;&lt;/a&gt; gem combine it with your own custom frontend, admin interface, and API.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can try the live Solidus demo &lt;a href=&#34;http://demo.solidus.io/&#34;&gt;here.&lt;/a&gt; The admin section can be accessed &lt;a href=&#34;http://demo.solidus.io/admin&#34;&gt;here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also try out Solidus with one-click on Heroku:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/solidusio/solidus-example-app&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can use Docker to run a demo on your local machine. Run the following command to download the image and run it at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -it -p 3000:3000 solidusio/solidus-demo:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The admin interface can be accessed at &lt;a href=&#34;http://localhost:3000/admin/&#34;&gt;http://localhost:3000/admin/&lt;/a&gt;, the default credentials are &lt;code&gt;admin@example.com&lt;/code&gt; and &lt;code&gt;test123&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Begin by making sure you have &lt;a href=&#34;http://imagemagick.org/script/download.php&#34;&gt;Imagemagick&lt;/a&gt; installed, which is required for Paperclip. (You can install it using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; if you&#39;re on a Mac.)&lt;/p&gt; &#xA;&lt;p&gt;To add Solidus, begin with a Rails 5.2, 6 or 6.1 application and a database configured and created.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Solidus&lt;/h3&gt; &#xA;&lt;p&gt;In your application&#39;s root folder run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle add solidus&#xA;bin/rails g solidus:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And follow the prompt&#39;s instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Accessing Solidus Store&lt;/h3&gt; &#xA;&lt;p&gt;Start the Rails server with the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/solidusio/solidus/tree/master/frontend&#34;&gt;&lt;code&gt;solidus_frontend&lt;/code&gt;&lt;/a&gt; storefront will be accessible at &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; and the admin can be found at &lt;a href=&#34;http://localhost:3000/admin/&#34;&gt;http://localhost:3000/admin/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For information on how to customize your store, check out the &lt;a href=&#34;https://guides.solidus.io/developers/customizations/overview.html&#34;&gt;customization guides&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Default Username/Password&lt;/h3&gt; &#xA;&lt;p&gt;As part of running the above installation steps, you will be asked to set an admin email/password combination. The default values are &lt;code&gt;admin@example.com&lt;/code&gt; and &lt;code&gt;test123&lt;/code&gt;, respectively.&lt;/p&gt; &#xA;&lt;h3&gt;Questions?&lt;/h3&gt; &#xA;&lt;p&gt;The best way to ask questions is to &lt;a href=&#34;http://slack.solidus.io/&#34;&gt;join the Solidus Slack&lt;/a&gt; and join the &lt;a href=&#34;https://solidusio.slack.com/messages/support/details/&#34;&gt;#support channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation options&lt;/h2&gt; &#xA;&lt;p&gt;Instead of a stable build, if you want to use the bleeding edge version of Solidus, use this line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;solidus&#39;, github: &#39;solidusio/solidus&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: The master branch is not guaranteed to ever be in a fully functioning state. It is too risky to use this branch in production.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, the installation generator (&lt;code&gt;solidus:install&lt;/code&gt;) will run migrations as well as adding seed and sample data. This can be disabled using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails g solidus:install --migrate=false --sample=false --seed=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can always perform any of these steps later by using these commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails railties:install:migrations&#xA;bin/rails db:migrate&#xA;bin/rails db:seed&#xA;bin/rails spree_sample:load&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also options and rake tasks provided by &lt;a href=&#34;https://github.com/solidusio/solidus_auth_devise&#34;&gt;solidus_auth_devise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;You may notice that your Solidus store runs slowly in development mode. This can be because in development each CSS and JavaScript is loaded as a separate include. This can be disabled by adding the following to &lt;code&gt;config/environments/development.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.assets.debug = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Turbolinks&lt;/h3&gt; &#xA;&lt;p&gt;To gain some extra speed you may enable Turbolinks inside of Solidus admin.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;code&gt;gem &#39;turbolinks&#39;, &#39;~&amp;gt; 5.0.0&#39;&lt;/code&gt; into your &lt;code&gt;Gemfile&lt;/code&gt; (if not already present) and change &lt;code&gt;vendor/assets/javascripts/spree/backend/all.js&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require turbolinks&#xA;//&#xA;// ... current file content&#xA;//&#xA;//= require spree/backend/turbolinks-integration.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Please be aware that Turbolinks can break extensions and/or customizations to the Solidus admin. Use at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Solidus&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Git repo&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git://github.com/solidusio/solidus.git&#xA;cd solidus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Without Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the gem dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you&#39;re using PostgreSQL or MySQL, you&#39;ll need to install those gems through the DB environment variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# PostgreSQL&#xA;export DB=postgresql&#xA;bin/setup&#xA;&#xA;# MySQL&#xA;export DB=mysql&#xA;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for all the gems to be installed (progress can be checked through &lt;code&gt;docker-compose logs -f app&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can provide the ruby version you want your image to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose build --build-arg RUBY_VERSION=2.6 app&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The rails version can be customized at runtime through &lt;code&gt;RAILS_VERSION&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RAILS_VERSION=&#39;~&amp;gt; 5.0&#39; docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# sqlite&#xA;docker-compose exec app bin/rspec&#xA;# postgres&#xA;docker-compose exec app env DB=postgres bin/rspec&#xA;# mysql&#xA;docker-compose exec app env DB=mysql bin/rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Accessing the databases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# sqlite&#xA;docker-compose exec app sqlite3 /path/to/db&#xA;# postgres&#xA;docker-compose exec app env PGPASSWORD=password psql -U root -h postgres&#xA;# mysql&#xA;docker-compose exec app mysql -u root -h mysql -ppassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to be able to access the &lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/#sandbox&#34;&gt;sandbox application&lt;/a&gt;, just make sure to provide the appropriate &lt;code&gt;--binding&lt;/code&gt; option to &lt;code&gt;rails server&lt;/code&gt;. By default, port &lt;code&gt;3000&lt;/code&gt; is exposed, but you can change it through &lt;code&gt;SANDBOX_PORT&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SANDBOX_PORT=4000 docker-compose up -d&#xA;docker-compose exec app bin/sandbox&#xA;docker-compose exec app bin/rails server --binding 0.0.0.0 --port 4000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sandbox&lt;/h3&gt; &#xA;&lt;p&gt;Solidus is meant to be run within the context of Rails application. You can easily create a sandbox application inside of your cloned source directory for testing purposes.&lt;/p&gt; &#xA;&lt;p&gt;This sandbox includes solidus_auth_devise and generates with seed and sample data already loaded.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the sandbox application&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can create a sandbox with PostgreSQL or MySQL by setting the DB environment variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# PostgreSQL&#xA;export DB=postgresql&#xA;bin/sandbox&#xA;&#xA;# MySQL&#xA;export DB=mysql&#xA;bin/sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need to create a Rails 5.2 application for your sandbox, for example if you are still using Ruby 2.4 which is not supported by Rails 6, you can use the &lt;code&gt;RAILS_VERSION&lt;/code&gt; environment variable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  export RAILS_VERSION=&#39;~&amp;gt; 5.2.0&#39;&#xA;  bin/setup&#xA;  bin/sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the server (&lt;code&gt;bin/rails&lt;/code&gt; will forward any argument to the sandbox)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/rails server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Solidus uses &lt;a href=&#34;http://rspec.info&#34;&gt;RSpec&lt;/a&gt; for tests. Refer to its documentation for more information about the testing library.&lt;/p&gt; &#xA;&lt;h4&gt;CircleCI&lt;/h4&gt; &#xA;&lt;p&gt;We use CircleCI to run the tests for Solidus as well as all incoming pull requests. All pull requests must pass to be merged.&lt;/p&gt; &#xA;&lt;p&gt;You can see the build statuses at &lt;a href=&#34;https://circleci.com/gh/solidusio/solidus&#34;&gt;https://circleci.com/gh/solidusio/solidus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Run all tests&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chromedriver.chromium.org/downloads&#34;&gt;ChromeDriver&lt;/a&gt; is required to run the frontend and backend test suites.&lt;/p&gt; &#xA;&lt;p&gt;To execute all of the test specs, run the &lt;code&gt;bin/build&lt;/code&gt; script at the root of the Solidus project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;createuser --superuser --echo postgres # only the first time&#xA;bin/build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;bin/build&lt;/code&gt; script runs using PostgreSQL by default, but it can be overridden by setting the DB environment variable to &lt;code&gt;DB=sqlite&lt;/code&gt; or &lt;code&gt;DB=mysql&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env DB=mysql bin/build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the command fails with MySQL related errors you can try creating a user with this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Creates a user with the same name as the current user and no restrictions.&#xA;mysql --user=&#34;root&#34; --execute=&#34;CREATE USER &#39;$USER&#39;@&#39;localhost&#39;; GRANT ALL PRIVILEGES ON * . * TO &#39;$USER&#39;@&#39;localhost&#39;;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run an individual test suite&lt;/h4&gt; &#xA;&lt;p&gt;Each gem contains its own series of tests. To run the tests for the core project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd core&#xA;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;rspec&lt;/code&gt; runs the tests for SQLite 3. If you would like to run specs against another database you may specify the database in the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env DB=postgresql bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Code coverage reports&lt;/h4&gt; &#xA;&lt;p&gt;If you want to run the &lt;a href=&#34;https://github.com/colszowka/simplecov&#34;&gt;SimpleCov&lt;/a&gt; code coverage report:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;COVERAGE=true bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extensions&lt;/h3&gt; &#xA;&lt;p&gt;In addition to core functionality provided in Solidus, there are a number of ways to add features to your store that are not (or not yet) part of the core project.&lt;/p&gt; &#xA;&lt;p&gt;A list can be found at &lt;a href=&#34;http://extensions.solidus.io/&#34;&gt;extensions.solidus.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to write an extension for Solidus, you can use the &lt;a href=&#34;https://github.com/solidusio/solidus_dev_support.git&#34;&gt;solidus_dev_support&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Solidus is an open source project and we encourage contributions. Please read &lt;a href=&#34;https://raw.githubusercontent.com/solidusio/solidus/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; before contributing.&lt;/p&gt;</summary>
  </entry>
</feed>