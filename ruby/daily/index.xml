<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-28T01:45:05Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nickjj/docker-rails-example</title>
    <updated>2023-02-28T01:45:05Z</updated>
    <id>tag:github.com,2023-02-28:/nickjj/docker-rails-example</id>
    <link href="https://github.com/nickjj/docker-rails-example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A production ready example Rails app that&#39;s using Docker and Docker Compose.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An example Rails + Docker app&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nickjj/docker-rails-example/workflows/CI/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You could use this example app as a base for your new project or as a guide to Dockerize your existing Rails app.&lt;/p&gt; &#xA;&lt;p&gt;The example app is minimal but it wires up a number of things you might use in a real world Rails app, but at the same time it&#39;s not loaded up with a million personal opinions.&lt;/p&gt; &#xA;&lt;p&gt;For the Docker bits, everything included is an accumulation of &lt;a href=&#34;https://nickjanetakis.com/blog/best-practices-around-production-ready-web-apps-with-docker-compose&#34;&gt;Docker best practices&lt;/a&gt; based on building and deploying dozens of assorted Dockerized web apps since late 2014.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This app is using Rails 7.0.4.2 and Ruby 3.2.1&lt;/strong&gt;. The screenshot doesn&#39;t get updated every time I bump the versions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nickjj/docker-rails-example/raw/main/.github/docs/screenshot.jpg?raw=true&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/.github/docs/screenshot.jpg&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#tech-stack&#34;&gt;Tech stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#main-changes-vs-a-newly-generated-rails-app&#34;&gt;Main changes vs a newly generated Rails app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#running-this-app&#34;&gt;Running this app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#files-of-interest&#34;&gt;Files of interest&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#env&#34;&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#run&#34;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#running-a-script-to-automate-renaming-the-project&#34;&gt;Running a script to automate renaming the project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#updating-dependencies&#34;&gt;Updating dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#see-a-way-to-improve-something&#34;&gt;See a way to improve something?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#additional-resources&#34;&gt;Additional resources&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#learn-more-about-docker-and-ruby-on-rails&#34;&gt;Learn more about Docker and Ruby on Rails&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#deploy-to-production&#34;&gt;Deploy to production&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#about-the-author&#34;&gt;About the author&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech stack&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t like some of these choices that&#39;s no problem, you can swap them out for something else on your own.&lt;/p&gt; &#xA;&lt;h3&gt;Back-end&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mperham/sidekiq&#34;&gt;Sidekiq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/action_cable_overview.html&#34;&gt;Action Cable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/layouts_and_rendering.html&#34;&gt;ERB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Front-end&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://esbuild.github.io/&#34;&gt;esbuild&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hotwired.dev/&#34;&gt;Hotwire Turbo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stimulus.hotwired.dev/&#34;&gt;StimulusJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://heroicons.com/&#34;&gt;Heroicons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main changes vs a newly generated Rails app&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a run down on what&#39;s different. You can also use this as a guide to Dockerize an existing Rails app.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Core&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use PostgreSQL (&lt;code&gt;-d postgresql)&lt;/code&gt; as the primary SQL database&lt;/li&gt; &#xA;   &lt;li&gt;Use Redis as the cache back-end&lt;/li&gt; &#xA;   &lt;li&gt;Use Sidekiq as a background worker through Active Job&lt;/li&gt; &#xA;   &lt;li&gt;Use a standalone Action Cable process&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;App Features&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;pages&lt;/code&gt; controller with a home page&lt;/li&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;up&lt;/code&gt; controller with 2 health check related actions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Config&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Log to STDOUT so that Docker can consume and deal with log output&lt;/li&gt; &#xA;   &lt;li&gt;Credentials are removed (secrets are loaded in with an &lt;code&gt;.env&lt;/code&gt; file)&lt;/li&gt; &#xA;   &lt;li&gt;Extract a bunch of configuration settings into environment variables&lt;/li&gt; &#xA;   &lt;li&gt;Rewrite &lt;code&gt;config/database.yml&lt;/code&gt; to use environment variables&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;.yarnc&lt;/code&gt; sets a custom &lt;code&gt;node_modules/&lt;/code&gt; directory&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;config/initializers/rack_mini_profiler.rb&lt;/code&gt; to enable profiling Hotwire Turbo Drive&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;config/initializers/assets.rb&lt;/code&gt; references a custom &lt;code&gt;node_modules/&lt;/code&gt; directory&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;config/routes.rb&lt;/code&gt; has Sidekiq&#39;s dashboard ready to be used but commented out for safety&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Procifile.dev&lt;/code&gt; has been removed since Docker Compose handles this for us&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Assets&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use esbuild (&lt;code&gt;-j esbuild&lt;/code&gt;) and TailwindCSS (&lt;code&gt;-c tailwind&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;postcss-import&lt;/code&gt; support for &lt;code&gt;tailwindcss&lt;/code&gt; by using the &lt;code&gt;--postcss&lt;/code&gt; flag&lt;/li&gt; &#xA;   &lt;li&gt;Add ActiveStorage JavaScript package&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Public:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Custom &lt;code&gt;502.html&lt;/code&gt; and &lt;code&gt;maintenance.html&lt;/code&gt; pages&lt;/li&gt; &#xA;   &lt;li&gt;Generate favicons using modern best practices&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides the Rails app itself, a number of new Docker related files were added to the project which would be any file having &lt;code&gt;*docker*&lt;/code&gt; in its name. Also GitHub Actions have been set up.&lt;/p&gt; &#xA;&lt;h2&gt;Running this app&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need to have &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker installed&lt;/a&gt;. It&#39;s available on Windows, macOS and most distros of Linux. If you&#39;re new to Docker and want to learn it in detail check out the &lt;a href=&#34;https://raw.githubusercontent.com/nickjj/docker-rails-example/main/#learn-more-about-docker-and-ruby-on-rails&#34;&gt;additional resources links&lt;/a&gt; near the bottom of this README.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also need to enable Docker Compose v2 support if you&#39;re using Docker Desktop. On native Linux without Docker Desktop you can &lt;a href=&#34;https://docs.docker.com/compose/install/linux/&#34;&gt;install it as a plugin to Docker&lt;/a&gt;. It&#39;s been generally available for a while now and very stable. This project uses a specific Docker Compose profiles feature that only works with Docker Compose v2.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Windows, it will be expected that you&#39;re following along inside of &lt;a href=&#34;https://nickjanetakis.com/blog/a-linux-dev-environment-on-windows-with-wsl-2-docker-desktop-and-more&#34;&gt;WSL or WSL 2&lt;/a&gt;. That&#39;s because we&#39;re going to be running shell commands. You can always modify these commands for PowerShell if you want.&lt;/p&gt; &#xA;&lt;h4&gt;Clone this repo anywhere you want and move into the directory:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/nickjj/docker-rails-example hellorails&#xA;cd hellorails&#xA;&#xA;# Optionally checkout a specific tag, such as: git checkout 0.7.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Copy an example .env file because the real one is git ignored:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build everything:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;The first time you run this it&#39;s going to take 5-10 minutes depending on your internet connection speed and computer&#39;s hardware specs. That&#39;s because it&#39;s going to download a few Docker images and build the Ruby + Yarn dependencies.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that everything is built and running we can treat it like any other Rails app.&lt;/p&gt; &#xA;&lt;p&gt;Did you receive an error about a port being in use? Chances are it&#39;s because something on your machine is already running on port 8000. Check out the docs in the &lt;code&gt;.env&lt;/code&gt; file for the &lt;code&gt;DOCKER_WEB_PORT&lt;/code&gt; variable to fix this.&lt;/p&gt; &#xA;&lt;p&gt;Did you receive a permission denied error? Chances are you&#39;re running native Linux and your &lt;code&gt;uid:gid&lt;/code&gt; aren&#39;t &lt;code&gt;1000:1000&lt;/code&gt; (you can verify this by running &lt;code&gt;id&lt;/code&gt;). Check out the docs in the &lt;code&gt;.env&lt;/code&gt; file to customize the &lt;code&gt;UID&lt;/code&gt; and &lt;code&gt;GID&lt;/code&gt; variables to fix this.&lt;/p&gt; &#xA;&lt;h4&gt;Setup the initial database:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# You can run this from a 2nd terminal.&#xA;./run rails db:setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;We&#39;ll go over that &lt;code&gt;./run&lt;/code&gt; script in a bit!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Check it out in a browser:&lt;/h4&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; in your favorite browser.&lt;/p&gt; &#xA;&lt;h4&gt;Running the test suite:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# You can run this from the same terminal as before.&#xA;./run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run &lt;code&gt;./run test -b&lt;/code&gt; with does the same thing but builds your JS and CSS bundles. This could come in handy in fresh environments such as CI where your assets haven&#39;t changed and you haven&#39;t visited the page in a browser.&lt;/p&gt; &#xA;&lt;h4&gt;Stopping everything:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Stop the containers and remove a few Docker related resources associated to this project.&#xA;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can start things up again with &lt;code&gt;docker compose up&lt;/code&gt; and unlike the first time it should only take seconds.&lt;/p&gt; &#xA;&lt;h2&gt;Files of interest&lt;/h2&gt; &#xA;&lt;p&gt;I recommend checking out most files and searching the code base for &lt;code&gt;TODO:&lt;/code&gt;, but please review the &lt;code&gt;.env&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; files before diving into the rest of the code and customizing it. Also, you should hold off on changing anything until we cover how to customize this example app&#39;s name with an automated script (coming up next in the docs).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This file is ignored from version control so it will never be commit. There&#39;s a number of environment variables defined here that control certain options and behavior of the application. Everything is documented there.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to add new variables as needed. This is where you should put all of your secrets as well as configuration that might change depending on your environment (specific dev boxes, CI, production, etc.).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;run&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;./run&lt;/code&gt; to get a list of commands and each command has documentation in the &lt;code&gt;run&lt;/code&gt; file itself.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a shell script that has a number of functions defined to help you interact with this project. It&#39;s basically a &lt;code&gt;Makefile&lt;/code&gt; except with &lt;a href=&#34;https://nickjanetakis.com/blog/replacing-make-with-a-shell-script-for-running-your-projects-tasks&#34;&gt;less limitations&lt;/a&gt;. For example as a shell script it allows us to pass any arguments to another program.&lt;/p&gt; &#xA;&lt;p&gt;This comes in handy to run various Docker commands because sometimes these commands can be a bit long to type. Feel free to add as many convenience functions as you want. This file&#39;s purpose is to make your experience better!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you get tired of typing &lt;code&gt;./run&lt;/code&gt; you can always create a shell alias with &lt;code&gt;alias run=./run&lt;/code&gt; in your &lt;code&gt;~/.bash_aliases&lt;/code&gt; or equivalent file. Then you&#39;ll be able to run &lt;code&gt;run&lt;/code&gt; instead of &lt;code&gt;./run&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running a script to automate renaming the project&lt;/h2&gt; &#xA;&lt;p&gt;The app is named &lt;code&gt;hello&lt;/code&gt; right now but chances are your app will be a different name. Since the app is already created we&#39;ll need to do a find / replace on a few variants of the string &#34;hello&#34; and update a few Docker related resources.&lt;/p&gt; &#xA;&lt;p&gt;And by we I mean I created a zero dependency shell script that does all of the heavy lifting for you. All you have to do is run the script below.&lt;/p&gt; &#xA;&lt;h4&gt;Run the rename-project script included in this repo:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# The script takes 2 arguments.&#xA;#&#xA;# The first one is the lower case version of your app&#39;s name, such as myapp or&#xA;# my_app depending on your preference.&#xA;#&#xA;# The second one is used for your app&#39;s module name. For example if you used&#xA;# myapp or my_app for the first argument you would want to use MyApp here.&#xA;bin/rename-project myapp MyApp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/nickjj/docker-rails-example/raw/main/bin/rename-project&#34;&gt;bin/rename-project script&lt;/a&gt; is going to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove any Docker resources for your current project&lt;/li&gt; &#xA; &lt;li&gt;Perform a number of find / replace actions&lt;/li&gt; &#xA; &lt;li&gt;Optionally initialize a new git repo for you&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Afterwards you can delete this script because its only purpose is to assist in helping you change this project&#39;s name without depending on any complicated project generator tools or 3rd party dependencies.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re not comfy running the script or it doesn&#39;t work for whatever reasons you can &lt;a href=&#34;https://github.com/nickjj/docker-rails-example/raw/main/bin/rename-project&#34;&gt;check it out&lt;/a&gt; and perform the actions manually. It&#39;s mostly running a find / replace across files and then renaming a few directories and files.&lt;/p&gt; &#xA;&lt;h4&gt;Start and setup the project:&lt;/h4&gt; &#xA;&lt;p&gt;This won&#39;t take as long as before because Docker can re-use most things. We&#39;ll also need to setup our database since a new one will be created for us by Docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up --build&#xA;&#xA;# Then in a 2nd terminal once it&#39;s up and ready.&#xA;./run rails db:setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;If you get an error upping the project related to &lt;code&gt;RuntimeError: invalid bytecode&lt;/code&gt; then you have old &lt;code&gt;tmp/&lt;/code&gt; files sitting around related to the old project name, you can run &lt;code&gt;./run clean&lt;/code&gt; to clear all temporary files and fix the error.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Sanity check to make sure the tests still pass:&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s always a good idea to make sure things are in a working state before adding custom changes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# You can run this from the same terminal as before.&#xA;./run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything passes now you can optionally &lt;code&gt;git add -A &amp;amp;&amp;amp; git commit -m &#34;Initial commit&#34;&lt;/code&gt; and start customizing your app. Alternatively you can wait until you develop more of your app before committing anything. It&#39;s up to you!&lt;/p&gt; &#xA;&lt;h4&gt;Tying up a few loose ends:&lt;/h4&gt; &#xA;&lt;p&gt;You&#39;ll probably want to create a fresh &lt;code&gt;CHANGELOG.md&lt;/code&gt; file for your project. I like following the style guide at &lt;a href=&#34;https://keepachangelog.com/&#34;&gt;https://keepachangelog.com/&lt;/a&gt; but feel free to use whichever style you prefer.&lt;/p&gt; &#xA;&lt;p&gt;Since this project is MIT licensed you should keep my name and email address in the &lt;code&gt;LICENSE&lt;/code&gt; file to adhere to that license&#39;s agreement, but you can also add your name and email on a new line.&lt;/p&gt; &#xA;&lt;p&gt;If you happen to base your app off this example app or write about any of the code in this project it would be rad if you could credit this repo by linking to it. If you want to reference me directly please link to my site at &lt;a href=&#34;https://nickjanetakis.com&#34;&gt;https://nickjanetakis.com&lt;/a&gt;. You don&#39;t have to do this, but it would be very much appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;Updating dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s say you&#39;ve customized your app and it&#39;s time to make a change to your &lt;code&gt;Gemfile&lt;/code&gt; or &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Without Docker you&#39;d normally run &lt;code&gt;bundle install&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt;. With Docker it&#39;s basically the same thing and since these commands are in our &lt;code&gt;Dockerfile&lt;/code&gt; we can get away with doing a &lt;code&gt;docker compose build&lt;/code&gt; but don&#39;t run that just yet.&lt;/p&gt; &#xA;&lt;h4&gt;In development:&lt;/h4&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;./run bundle:outdated&lt;/code&gt; or &lt;code&gt;./run yarn:outdated&lt;/code&gt; to get a list of outdated dependencies based on what you currently have installed. Once you&#39;ve figured out what you want to update, go make those updates in your &lt;code&gt;Gemfile&lt;/code&gt; and / or &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Then to update your dependencies you can run &lt;code&gt;./run bundle:install&lt;/code&gt; or &lt;code&gt;./run yarn:install&lt;/code&gt;. That&#39;ll make sure any lock files get copied from Docker&#39;s image (thanks to volumes) into your code repo and now you can commit those files to version control like usual.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively for updating your gems based on specific version ranges defined in your &lt;code&gt;Gemfile&lt;/code&gt; you can run &lt;code&gt;./run bundle:update&lt;/code&gt; which will install the latest versions of your gems and then write out a new lock file.&lt;/p&gt; &#xA;&lt;p&gt;You can check out the &lt;code&gt;run&lt;/code&gt; file to see what these commands do in more detail.&lt;/p&gt; &#xA;&lt;h4&gt;In CI:&lt;/h4&gt; &#xA;&lt;p&gt;You&#39;ll want to run &lt;code&gt;docker compose build&lt;/code&gt; since it will use any existing lock files if they exist. You can also check out the complete CI test pipeline in the &lt;code&gt;run&lt;/code&gt; file under the &lt;code&gt;ci:test&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;h4&gt;In production:&lt;/h4&gt; &#xA;&lt;p&gt;This is usually a non-issue since you&#39;ll be pulling down pre-built images from a Docker registry but if you decide to build your Docker images directly on your server you could run &lt;code&gt;docker compose build&lt;/code&gt; as part of your deploy pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;See a way to improve something?&lt;/h2&gt; &#xA;&lt;p&gt;If you see anything that could be improved please open an issue or start a PR. Any help is much appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;p&gt;Now that you have your app ready to go, it&#39;s time to build something cool! If you want to learn more about Docker, Rails and deploying a Rails app here&#39;s a couple of free and paid resources. There&#39;s Google too!&lt;/p&gt; &#xA;&lt;h3&gt;Learn more about Docker and Ruby on Rails&lt;/h3&gt; &#xA;&lt;h4&gt;Official documentation&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/&#34;&gt;https://guides.rubyonrails.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Courses / Screencasts&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://diveintodocker.com?ref=docker-rails-example&#34;&gt;https://diveintodocker.com&lt;/a&gt; is a course I created which goes over the Docker and Docker Compose fundamentals&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deploy to production&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;m creating an in-depth course related to deploying Dockerized web apps. If you want to get notified when it launches with a discount and potentially get free videos while the course is being developed then &lt;a href=&#34;https://nickjanetakis.com/courses/deploy-to-production&#34;&gt;sign up here to get notified&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About the author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nick Janetakis | &lt;a href=&#34;https://nickjanetakis.com&#34;&gt;https://nickjanetakis.com&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/nickjanetakis&#34;&gt;@nickjanetakis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I&#39;m a self taught developer and have been freelancing for the last ~20 years. You can read about everything I&#39;ve learned along the way on my site at &lt;a href=&#34;https://nickjanetakis.com/&#34;&gt;https://nickjanetakis.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s hundreds of &lt;a href=&#34;https://nickjanetakis.com/blog/&#34;&gt;blog posts&lt;/a&gt; and a couple of &lt;a href=&#34;https://nickjanetakis.com/courses/&#34;&gt;video courses&lt;/a&gt; on web development and deployment topics. I also have a &lt;a href=&#34;https://runninginproduction.com&#34;&gt;podcast&lt;/a&gt; where I talk with folks about running web apps in production.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>turingschool-examples/long-butterfly-9879</title>
    <updated>2023-02-28T01:45:05Z</updated>
    <id>tag:github.com,2023-02-28:/turingschool-examples/long-butterfly-9879</id>
    <link href="https://github.com/turingschool-examples/long-butterfly-9879" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Railer Coaster&lt;/h1&gt; &#xA;&lt;p&gt;This repository requires and has been tested on Ruby v2.7.4 and is based on Rails 5.2.8.&lt;/p&gt; &#xA;&lt;p&gt;RSpec and Shoulda-Matchers have been installed and set up.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repo&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone &amp;lt;paste_repo&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd &amp;lt;repo_name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rails db:{drop,create,migrate,seed}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When you run &lt;code&gt;bundle exec rspec&lt;/code&gt; you should have 2 passing tests.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Work on this assessment independently. DO NOT discuss with anyone.&lt;/li&gt; &#xA; &lt;li&gt;You are allowed to use any references including notes, Google, lesson plans, etc.&lt;/li&gt; &#xA; &lt;li&gt;Read each story carefully before you start working.&lt;/li&gt; &#xA; &lt;li&gt;Commit Frequently, about every 15 - 30 minutes&lt;/li&gt; &#xA; &lt;li&gt;Push your code to your fork once the time is up (not before!)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Submission&lt;/h2&gt; &#xA;&lt;p&gt;Once the time for the assessment is up, push your code to your fork and create a pull request to the &lt;code&gt;turingschool-examples&lt;/code&gt; repository. Include the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your Name&lt;/li&gt; &#xA; &lt;li&gt;A reflection on how you felt you did with this challenge and what story you got through&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TDD all new work&lt;/li&gt; &#xA; &lt;li&gt;Model methods and relationships must be fully tested.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Not Required&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No visual styling is required or expected&lt;/li&gt; &#xA; &lt;li&gt;You do not need to test for or create any model validations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;We are creating an application to track the maintenance of amusement park rides and mechanics working on those rides.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AmusementParks have a name and price of admissions attributes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex. &lt;code&gt;name: &#39;Six Flags&#39;, admission_cost: 75&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mechanics have a name and years of experience attributes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex. &lt;code&gt;name: ‘Kara Smith’, years_experience: 11&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rides have a name, thrill rating, and open (boolean) attributes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex. &lt;code&gt;name: ‘The Hurler’, thrill_rating: 7, open: false&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;AmusementParks have many Rides&lt;/li&gt; &#xA; &lt;li&gt;Rides belong to an AmusementPark&lt;/li&gt; &#xA; &lt;li&gt;Mechanics can work on many Rides&lt;/li&gt; &#xA; &lt;li&gt;Rides can have many Mechanics working on them&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of the initial migrations and model set up has been done for you.&lt;/p&gt; &#xA;&lt;h2&gt;User Stories&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 1 - Mechanic Show Page&#xA;&#xA;As a user,&#xA;When I visit a mechanic show page&#xA;I see their name, years of experience, and the names of all rides they are working on&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 2 - Add a Ride to a Mechanic&#xA;&#xA;As a user,&#xA;When I go to a mechanic&#39;s show page&#xA;I see a form to add a ride to their workload&#xA;When I fill in that field with an id of an existing ride and click Submit&#xA;I’m taken back to that mechanic&#39;s show page&#xA;And I see the name of that newly added ride on this mechanic&#39;s show page&#xA;&#xA;Ex:&#xA;Mechanic: Kara Smith&#xA;Years of Experience: 11&#xA;&#xA;Current rides they’re working on:&#xA;  The Frog Hopper&#xA;  Fahrenheit&#xA;  The Kiss Raise&#xA;&#xA;Add a ride to workload:&#xA;Ride Id: |_pretend_this_is_a_textfield_|&#xA;Submit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 3 - Amusement Park Show page&#xA;&#xA;As a visitor,&#xA;When I visit an amusement park’s show page,&#xA;Then I see the name and price of admissions for that amusement park&#xA;And I see the names of all mechanics that are working on that park&#39;s rides,&#xA;And I see that the list of mechanics is unique&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Extensions - Amusement Park&#39;s Rides&#xA;&#xA;As a visitor,&#xA;When I visit an amusement park&#39;s show page,&#xA;Then I see a list of all of the park&#39;s rides,&#xA;And next to the ride name I see the average experience of the mechanics working on the ride,&#xA;And I see the list of rides is ordered by the average experience of mechanics working on the ride.&#xA;(Note: you should only perform 1 database query to retrieve the list of rides with average mechanic experience)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-3-active-record-crud-operations-lab</title>
    <updated>2023-02-28T01:45:05Z</updated>
    <id>tag:github.com,2023-02-28:/learn-co-curriculum/phase-3-active-record-crud-operations-lab</id>
    <link href="https://github.com/learn-co-curriculum/phase-3-active-record-crud-operations-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Active Record CRUD Operations Lab&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Perform CRUD operations on a SQL database table using Active Record&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this lab is to get comfortable performing CRUD (Create, Read, Update, Delete) actions using Active Record.&lt;/p&gt; &#xA;&lt;p&gt;There are different ways to solve this lab so feel free to experiment!&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;First, run &lt;code&gt;bundle install&lt;/code&gt; to install the dependencies from the Gemfile.&lt;/p&gt; &#xA;&lt;p&gt;Next, run &lt;code&gt;bundle exec rake -T&lt;/code&gt;, which will list all of the rake tasks you have available in this lab. These tasks come with the &lt;code&gt;sinatra-activerecord&lt;/code&gt; gem.&lt;/p&gt; &#xA;&lt;p&gt;Start the lab by running &lt;code&gt;learn test&lt;/code&gt; or keep reading for more instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Create Table&lt;/h2&gt; &#xA;&lt;p&gt;Try using a Rake task to create your migration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake db:create_migration NAME=create_movies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have a migration file, add columns like so:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Column Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;(string)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;release_date&lt;/td&gt; &#xA;   &lt;td&gt;(integer)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;director&lt;/td&gt; &#xA;   &lt;td&gt;(string)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lead&lt;/td&gt; &#xA;   &lt;td&gt;(string)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;in_theaters&lt;/td&gt; &#xA;   &lt;td&gt;(boolean)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;After your migration is ready, run both these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake db:migrate&#xA;$ bundle exec rake db:migrate RAKE_ENV=test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will migrate your development database as well as a test database so you will be able to run &lt;code&gt;learn test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also run this command to generate some sample data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run the code in the &lt;code&gt;db/seeds.rb&lt;/code&gt; file in order to create some movies.&lt;/p&gt; &#xA;&lt;p&gt;Then, if you want to try out your code in the console, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the console to explore various Active Record methods that you&#39;ll need in order to pass the tests.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;learn test&lt;/code&gt; to see the tests. You&#39;ll be adding new methods to the &lt;code&gt;Movie&lt;/code&gt; class in &lt;code&gt;app/models/movie.rb&lt;/code&gt; that take advantage of Active Record&#39;s build-in functionality.&lt;/p&gt; &#xA;&lt;p&gt;The goal of this is to add some functionality to your &lt;code&gt;Movie&lt;/code&gt; class while taking advantage of Active Record&#39;s built-in methods. For example, you might write a method &lt;code&gt;Movie.find_all_movies_by_year&lt;/code&gt; that finds all the movies for a given year:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;class Movie &amp;lt; ActiveRecord::Base&#xA;  def self.find_all_movies_by_year(year)&#xA;    Movie.where(year: year)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;.where&lt;/code&gt; is a built-in Active Record method that queries the database and returns a list of all items that match the criteria being passed as an argument.&lt;/p&gt; &#xA;&lt;p&gt;Each test will take us through performing a basic CRUD action using the database we just created. You&#39;ll need to refer to the &lt;a href=&#34;https://guides.rubyonrails.org/active_record_querying.html&#34;&gt;Active Record Query Interface&lt;/a&gt; documentation to find the best methods to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Pay attention to which methods are instance methods (&lt;code&gt;#&lt;/code&gt;) and which are class methods (&lt;code&gt;.&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Create&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.create_with_title&lt;/code&gt;: instantiates a movie with a given title, and saves it to the database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Read&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.first_movie&lt;/code&gt;: returns the first item in the table&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.last_movie&lt;/code&gt;: returns the last item in the table&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.movie_count&lt;/code&gt;: returns the number of records in the table&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.find_movie_with_id&lt;/code&gt;: returns a movie from the table based on its id with the &lt;code&gt;.find&lt;/code&gt; method&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.find_movie_with_attributes&lt;/code&gt;: returns a movie from the table based on its attributes with the &lt;code&gt;.find_by&lt;/code&gt; method&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.find_movies_after_2002&lt;/code&gt;: uses a &lt;code&gt;.where&lt;/code&gt; clause to select the appropriate movies released after 2002&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Update&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie#update_with_attributes&lt;/code&gt;: updates a single movie using the &lt;code&gt;#update&lt;/code&gt; method&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.update_all_titles&lt;/code&gt;: updates the title of all records at once using the &lt;code&gt;.update&lt;/code&gt; method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Delete&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.delete_by_id&lt;/code&gt;: deletes a single item with the &lt;code&gt;#destroy&lt;/code&gt; method&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Movie.delete_all_movies&lt;/code&gt;: deletes all items at once with the &lt;code&gt;.destroy_all&lt;/code&gt; method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/active_record_querying.html&#34;&gt;Active Record Query Interface&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>