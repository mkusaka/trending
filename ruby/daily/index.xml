<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-28T01:40:46Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tenderlove/refreshing</title>
    <updated>2022-09-28T01:40:46Z</updated>
    <id>tag:github.com,2022-09-28:/tenderlove/refreshing</id>
    <link href="https://github.com/tenderlove/refreshing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Rails Engine that gives Language Server support to Rails apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Refreshing&lt;/h1&gt; &#xA;&lt;p&gt;This is a Rails engine that adds language server support to Rails applications. It is a very very extremely POC code, so please don&#39;t ask for any assistance!!&lt;/p&gt; &#xA;&lt;p&gt;I have it configured in Vim like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;if filereadable(&#34;.livecode&#34;)&#xA;  au User lsp_setup&#xA;        \ call lsp#register_server({&#xA;        \      &#39;name&#39;: &#39;cool-lsp&#39;,&#xA;        \      &#39;cmd&#39;: [&#34;nc&#34;, &#34;localhost&#34;, &#34;2000&#34;],&#xA;        \      &#39;allowlist&#39;: [&#39;ruby&#39;, &#39;eruby&#39;],&#xA;        \ })&#xA;endif&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The target app just needs to mount the engine like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rails.application.routes.draw do&#xA;  mount Refreshing::Engine =&amp;gt; &#34;/refreshing&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;AFAIK this only works with Falcon in threaded mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec falcon --threaded&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-4-rails-practice-challenge-gym</title>
    <updated>2022-09-28T01:40:46Z</updated>
    <id>tag:github.com,2022-09-28:/learn-co-curriculum/phase-4-rails-practice-challenge-gym</id>
    <link href="https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-gym" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rails Practice Challenge - Gym&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To download the dependencies for backend, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is some starter code in the &lt;code&gt;db/seeds.rb&lt;/code&gt; file so that once you&#39;ve generated the models, you&#39;ll be able to create data to test your application. You can run your Rails API on &lt;a href=&#34;http://localhost:3000&#34;&gt;&lt;code&gt;localhost:3000&lt;/code&gt;&lt;/a&gt; by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are no tests for this application, so you&#39;ll need to check your progress by running the server and using Postman to make requests.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re going to build an app for a Gym create the following database structure. You will have three models (and their corresponding tables), &lt;code&gt;Gym&lt;/code&gt;, &lt;code&gt;Client&lt;/code&gt; and &lt;code&gt;Membership&lt;/code&gt;, with the following relationships:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A client has many gyms and has many memberships&lt;/li&gt; &#xA; &lt;li&gt;A gym has many clients and has many memberships&lt;/li&gt; &#xA; &lt;li&gt;A membership belongs to a gym and belongs to a client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migrations&lt;/h3&gt; &#xA;&lt;p&gt;Write migrations to create the following tables:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Gyms&lt;/strong&gt; Table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;address&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;L.A.Fitness&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Suite 981 1795 Leida Fords, Nataliemouth, TN 14377-4979&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Planet Fitness&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7768 David Avenue, Greenside, PA 67475-3655&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt; Table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;age&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Casie Effertz&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dorris Bogan&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;52&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Bernie Schiller&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;44&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Manie Dare&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Memberships&lt;/strong&gt; Table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;gym_id&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;client_id&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;charge&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;50&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Deliverables&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It may be helpful to write a list of the routes you&#39;ll need before you begin.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A user should be able to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a new membership&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;New membership require a gym_id, client_id, and membership charge.&lt;/li&gt; &#xA;   &lt;li&gt;Validation: A client can have only one membership with gym&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;View one specific gym&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if &lt;code&gt;Gym&lt;/code&gt; exists, return JSON data for the gym&lt;/li&gt; &#xA;   &lt;li&gt;else return error with a status code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Delete a gym&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;If the &lt;code&gt;Gym&lt;/code&gt; exists, it should be removed from the database, along with any &lt;code&gt;Membership&lt;/code&gt;s that are associated with it (a &lt;code&gt;Membership&lt;/code&gt; belongs to a &lt;code&gt;Gym&lt;/code&gt;, so you need to delete the &lt;code&gt;Membership&lt;/code&gt;s before the &lt;code&gt;Gym&lt;/code&gt; can be deleted).&lt;/p&gt; &lt;p&gt;After deleting the &lt;code&gt;Gym&lt;/code&gt;, return an &lt;em&gt;empty&lt;/em&gt; response body, along with the appropriate HTTP status code.&lt;/p&gt; &lt;p&gt;If the &lt;code&gt;Gym&lt;/code&gt; does not exist, return the following JSON data, along with the appropriate HTTP status code:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;error&#34;: &#34;Gym not found&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;View one specific client&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if &lt;code&gt;Client&lt;/code&gt; exists, return JSON data for the Client&lt;/li&gt; &#xA;   &lt;li&gt;else return error with a status code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bonus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On client show route, send response that includes total amount for all membership for that client.&lt;/li&gt; &#xA; &lt;li&gt;Create index and update routes for gym and client&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>