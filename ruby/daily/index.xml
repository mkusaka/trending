<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-22T01:37:01Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>learn-co-curriculum/phase-4-rails-practice-challenge-students</title>
    <updated>2022-12-22T01:37:01Z</updated>
    <id>tag:github.com,2022-12-22:/learn-co-curriculum/phase-4-rails-practice-challenge-students</id>
    <link href="https://github.com/learn-co-curriculum/phase-4-rails-practice-challenge-students" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rails Practice Challenge - Students&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To download the dependencies for backend, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is some starter code in the &lt;code&gt;db/seeds.rb&lt;/code&gt; file so that once you&#39;ve generated the models, you&#39;ll be able to create data to test your application.&lt;/p&gt; &#xA;&lt;p&gt;You can run your Rails API on &lt;a href=&#34;http://localhost:3000&#34;&gt;&lt;code&gt;localhost:3000&lt;/code&gt;&lt;/a&gt; by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are no tests for this application, so you&#39;ll need to check your progress by running the server and using Postman make requests.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re going to build an API for an instructor to manage their students. Create the following database structure. You will have two models (and their corresponding tables), &lt;code&gt;Student&lt;/code&gt; and &lt;code&gt;Instructor&lt;/code&gt;, with the following relationships:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An instructor has many students&lt;/li&gt; &#xA; &lt;li&gt;A student belongs to an instructor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The models should have the following attributes (along with any attributes needed to create the relationships defined above):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instructor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;name (must be present)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Student &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;name (must be present)&lt;/li&gt; &#xA;   &lt;li&gt;major&lt;/li&gt; &#xA;   &lt;li&gt;age (must be &amp;gt;= 18)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure to define validations for your models so that no bad data can be saved to the database.&lt;/p&gt; &#xA;&lt;h2&gt;Deliverables&lt;/h2&gt; &#xA;&lt;p&gt;As a user, I can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create, read, update and delete &lt;strong&gt;Instructors&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create, read, update and delete &lt;strong&gt;Students&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When creating or updating a student, they must be associated with an instructor&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Follow good API design practices and use RESTful routing conventions. Make sure to handle errors and invalid data by returning the appropriate status code along with a message.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Time yourself while working on the deliverables&lt;/li&gt; &#xA; &lt;li&gt;Commit when you hit 75 minutes&lt;/li&gt; &#xA; &lt;li&gt;When you have finished all deliverables, commit again.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>