<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-19T01:39:15Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>resque/redis-namespace</title>
    <updated>2023-12-19T01:39:15Z</updated>
    <id>tag:github.com,2023-12-19:/resque/redis-namespace</id>
    <link href="https://github.com/resque/redis-namespace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This gem adds a Redis::Namespace class which can be used to namespace Redis keys.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;redis-namespace&lt;/h1&gt; &#xA;&lt;p&gt;Redis::Namespace provides an interface to a namespaced subset of your &lt;a href=&#34;http://redis.io&#34;&gt;redis&lt;/a&gt; keyspace (e.g., keys with a common beginning), and requires the &lt;a href=&#34;https://github.com/redis/redis-rb&#34;&gt;redis-rb&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;redis-namespace&#39;&#xA;# =&amp;gt; true&#xA;&#xA;redis_connection = Redis.new&#xA;# =&amp;gt; #&amp;lt;Redis client v3.1.0 for redis://127.0.0.1:6379/0&amp;gt;&#xA;namespaced_redis = Redis::Namespace.new(:ns, redis: redis_connection)&#xA;# =&amp;gt; #&amp;lt;Redis::Namespace v1.5.0 with client v3.1.0 for redis://127.0.0.1:6379/0/ns&amp;gt;&#xA;&#xA;namespaced_redis.set(&#39;foo&#39;, &#39;bar&#39;) # redis_connection.set(&#39;ns:foo&#39;, &#39;bar&#39;)&#xA;# =&amp;gt; &#34;OK&#34;&#xA;&#xA;# Redis::Namespace automatically prepended our namespace to the key&#xA;# before sending it to our redis client.&#xA;&#xA;namespaced_redis.get(&#39;foo&#39;)&#xA;# =&amp;gt; &#34;bar&#34;&#xA;redis_connection.get(&#39;foo&#39;)&#xA;# =&amp;gt; nil&#xA;redis_connection.get(&#39;ns:foo&#39;)&#xA;# =&amp;gt; &#34;bar&#34;&#xA;&#xA;namespaced_redis.del(&#39;foo&#39;)&#xA;# =&amp;gt; 1&#xA;namespaced_redis.get(&#39;foo&#39;)&#xA;# =&amp;gt; nil&#xA;redis_connection.get(&#39;ns:foo&#39;)&#xA;# =&amp;gt; nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Redis::Namespace also supports &lt;code&gt;Proc&lt;/code&gt; as a namespace and will take the result string as namespace at runtime.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;redis_connection = Redis.new&#xA;namespaced_redis = Redis::Namespace.new(Proc.new { Tenant.current_tenant }, redis: redis_connection)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Redis::Namespace is packaged as the redis-namespace gem, and hosted on rubygems.org.&lt;/p&gt; &#xA;&lt;p&gt;From the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install redis-namespace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;redis-namespace&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Caveats&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Redis::Namespace&lt;/code&gt; provides a namespaced interface to &lt;code&gt;Redis&lt;/code&gt; by keeping an internal registry of the method signatures in &lt;code&gt;Redis&lt;/code&gt; provided by the &lt;a href=&#34;https://github.com/redis/redis-rb&#34;&gt;redis-rb&lt;/a&gt; gem; we keep track of which arguments need the namespace added, and which return values need the namespace removed.&lt;/p&gt; &#xA;&lt;h2&gt;Blind Passthrough&lt;/h2&gt; &#xA;&lt;p&gt;If your version of this gem doesn&#39;t know about a particular command, it can&#39;t namespace it. Historically, this has meant that Redis::Namespace blindly passes unknown commands on to the underlying redis connection without modification which can lead to surprising effects.&lt;/p&gt; &#xA;&lt;p&gt;As of v1.5.0, blind passthrough has been deprecated, and the functionality will be removed entirely in 2.0.&lt;/p&gt; &#xA;&lt;p&gt;If you come across a command that is not yet supported, please open an issue on the &lt;a href=&#34;https://github.com/resque/redis-namespace/issues&#34;&gt;issue tracker&lt;/a&gt; or submit a pull-request.&lt;/p&gt; &#xA;&lt;h2&gt;Administrative Commands&lt;/h2&gt; &#xA;&lt;p&gt;The effects of some redis commands cannot be limited to a particular namespace (e.g., &lt;code&gt;FLUSHALL&lt;/code&gt;, which literally truncates all databases in your redis server, regardless of keyspace). Historically, this has meant that Redis::Namespace intentionally passes administrative commands on to the underlying redis connection without modification, which can lead to surprising effects.&lt;/p&gt; &#xA;&lt;p&gt;As of v1.6.0, the direct use of administrative commands has been deprecated, and the functionality will be removed entirely in 2.0; while such commands are often useful for testing or administration, their meaning is inherently hidden when placed behind an interface that implies it will namespace everything.&lt;/p&gt; &#xA;&lt;p&gt;The prefered way to send an administrative command is on the redis connection itself, which is publicly exposed as &lt;code&gt;Redis::Namespace#redis&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;namespaced.redis.flushall()&#xA;# =&amp;gt; &#34;OK&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;2.x Planned Breaking Changes&lt;/h1&gt; &#xA;&lt;p&gt;As mentioned above, 2.0 will remove blind passthrough and the administrative command passthrough. By default in 1.5+, deprecation warnings are present and enabled; they can be silenced by initializing &lt;code&gt;Redis::Namespace&lt;/code&gt; with &lt;code&gt;warning: false&lt;/code&gt; or by setting the &lt;code&gt;REDIS_NAMESPACE_QUIET&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h2&gt;Early opt-in&lt;/h2&gt; &#xA;&lt;p&gt;To enable testing against the 2.x interface before its release, in addition to deprecation warnings, early opt-in to these changes can be enabled by initializing &lt;code&gt;Redis::Namespace&lt;/code&gt; with &lt;code&gt;deprecations: true&lt;/code&gt; or by setting the &lt;code&gt;REDIS_NAMESPACE_DEPRECATIONS&lt;/code&gt; environment variable. This should only be done once all warnings have been addressed.&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;While there are many authors who have contributed to this project, the following have done so on an ongoing basis with at least 5 commits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chris Wanstrath (@defunkt)&lt;/li&gt; &#xA; &lt;li&gt;Ryan Biesemeyer (@yaauie)&lt;/li&gt; &#xA; &lt;li&gt;Steve Klabnik (@steveklabnik)&lt;/li&gt; &#xA; &lt;li&gt;Terence Lee (@hone)&lt;/li&gt; &#xA; &lt;li&gt;Eoin Coffey (@ecoffey)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>