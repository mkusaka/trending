<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-05T01:35:41Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Aesthetikx/openai_pipe</title>
    <updated>2023-01-05T01:35:41Z</updated>
    <id>tag:github.com,2023-01-05:/Aesthetikx/openai_pipe</id>
    <link href="https://github.com/Aesthetikx/openai_pipe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A UNIX-ey interface to OpenAI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAIPipe&lt;/h1&gt; &#xA;&lt;p&gt;This library provides a UNIX-ey interface to OpenAI. See &lt;a href=&#34;https://raw.githubusercontent.com/Aesthetikx/openai_pipe/master/#installation&#34;&gt;Installation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Aesthetikx/openai_pipe/master/#setup&#34;&gt;Setup&lt;/a&gt; below, but first, some examples.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ai what is two plus two&#xA;Two plus two is equal to four.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ uptime | ai convert this to json&#xA;{&#xA;        &#34;time_of_measurement&#34;: &#34;13:48:26&#34;,&#xA;        &#34;up_time&#34;: &#34;30 days, 18:07&#34;,&#xA;        &#34;users&#34;: 3,&#xA;        &#34;load_average&#34;: [&#xA;                0.46,&#xA;                0.61,&#xA;                0.79&#xA;        ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ai list the nine planets as JSON | ai convert this to XML but in French | tee planets.fr.xml&#xA;&amp;lt;Planètes&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Mercure&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Vénus&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;La Terre&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Mars&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Jupiter&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Saturne&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Uranus&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Neptune&amp;lt;/Planète&amp;gt;&#xA;   &amp;lt;Planète&amp;gt;Pluton&amp;lt;/Planète&amp;gt;&#xA;&amp;lt;/Planètes&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -sL &#34;https://en.wikipedia.org/wiki/cats&#34; | head -n 5 | ai extract just the title of this webpage | figlet&#xA;  ____      _            __        ___ _    _                _ _&#xA; / ___|__ _| |_          \ \      / (_) | _(_)_ __   ___  __| (_) __ _&#xA;| |   / _` | __|  _____   \ \ /\ / /| | |/ / | &#39;_ \ / _ \/ _` | |/ _` |&#xA;| |__| (_| | |_  |_____|   \ V  V / | |   &amp;lt;| | |_) |  __/ (_| | | (_| |&#xA; \____\__,_|\__|            \_/\_/  |_|_|\_\_| .__/ \___|\__,_|_|\__,_|&#xA;                                             |_|&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ls | ai What is this directory for?&#xA;This directory contains the source code for a Ruby-based project called openai_pipe. It includes files related to the project&#39;s license (LICENSE.txt), changelog (CHANGELOG.md), dependencies (Gemfile and Gemfile.lock), executables (bin and exe), libraries (lib), signature (sig) and tests (spec). There is also a Rakefile and a README.md file which provide information about how to build and install the project, as well as its features and usage. Finally, it includes the openai_pipe-0.1.0.gem and openai_pipe.gemspec files which are used to build the gem which can be installed on other systems.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ls -l | ai which of these are directories?&#xA;bin, exe, lib, sig, spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ls | ai &#34;For each of these files, provide a description of what is likely to be their contents?&#34;&#xA;bin - Likely contains compiled binary executable files.&#xA;CHANGELOG.md - Likely contains a log of changes/modifications, such as bug fixes and new features, that have been made to the project.&#xA;exe - Likely contains executable files.&#xA;french_planets.xml - Likely contains an XML file containing data related to planets, likely in French.&#xA;Gemfile - Likely contains Ruby code for the project&#39;s dependencies.&#xA;Gemfile.lock - Likely contains a snapshot of the dependencies of the project and versions of those dependencies.&#xA;lib - Likely contains the Ruby source code (e.g. classes and modules) for the project.&#xA;LICENSE.txt - Likely contains the terms of use/license for the project.&#xA;openai_pipe-0.1.0.gem - Likely contains a gem that gathers information from the OpenAI API.&#xA;openai_pipe.gemspec - Likely contains configuration details for the gem.&#xA;planets.lst - Likely contains a list of planets.&#xA;poem.txt - Likely contains a text file containing a poem.&#xA;Rakefile - Likely contains Ruby tasks and dependencies that can be used in projects.&#xA;README.md - Likely contains general information about the project and usage instructions.&#xA;reverse.lst - Likely contains a list of words or items that are in reverse order.&#xA;sig - Likely contains digital signatures to validate individual files.&#xA;spec - Likely contains Ruby specs (i.e. tests) for the project.&#xA;uptime.json - Likely contains a file with information regarding system uptime of a computer.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git commit -m &#34;$(git status | ai write me a commit message for these changes)&#34;&#xA;[master 7d0271f] Add new files and modify README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git status | tee /dev/tty | ai write me a sonnet about the status of this git repository&#xA;On branch master&#xA;Untracked files:&#xA;  (use &#34;git add &amp;lt;file&amp;gt;...&#34; to include in what will be committed)&#xA;        openai_pipe-0.1.0.gem&#xA;&#xA;nothing added to commit but untracked files present (use &#34;git add&#34; to track)&#xA;&#xA;My master branch may lack to thee its kin&#xA;For change it holds the only force within&#xA;Thé untracked files, they still remain unnamed&#xA;‘Tis fervent hope thé change will soon be claimed&#xA;&#xA;Fraught with the choice to leave or to persist&#xA;The repository wavers ‘tween future and past&#xA;The openai_pipe-0.1.0 gem stands out&#xA;Waiting to be added, not yet about&#xA;&#xA;The commit awaits for brave new changes bold&#xA;While time’s old force is ever unfurled&#xA;Commit forth young mind, furrow not to crawl&#xA;From untracked files, a future stands tall.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;% history | ai what was the last thing I did&#xA;The last command you entered was &#39;history&#39;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;n.b. somehow it sees history-esque output and determines that history was typed -- the history command does not itself include the history command in the output.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ history | ai what was the last thing I did before typing history&#xA;The last thing you did was amend a README.md file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;n.b. here it determines the amend was for README.md not from the previous command but from ones prior that edited README.md.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cat lib/openai_pipe/version.rb | ai rewrite this file with just the minor version incremented | sponge &amp;gt; lib/openai_pipe/version.rb&#xA;$ git diff&#xA;diff --git a/lib/openai_pipe/version.rb b/lib/openai_pipe/version.rb&#xA;index 0f82357..cc57fab 100644&#xA;--- a/lib/openai_pipe/version.rb&#xA;+++ b/lib/openai_pipe/version.rb&#xA;@@ -1,5 +1,5 @@&#xA; # frozen_string_literal: true&#xA;&#xA; module OpenAIPipe&#xA;-  VERSION = &#34;0.1.0&#34;&#xA;+  VERSION = &#34;0.1.1&#34;&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ruby -e &#34;$(ai write me a python script that prints the current month | ai translate this into ruby)&#34; | ai translate this into French&#xA;Le mois courant est Décembre.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the gem by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install openai_pipe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;This library uses &lt;a href=&#34;https://github.com/Aesthetikx/quick_openai&#34;&gt;quick_openai&lt;/a&gt; which itself uses &lt;a href=&#34;https://github.com/alexrudall/ruby-openai&#34;&gt;ruby-openai&lt;/a&gt;, so you may want to familiarise yourself with those projects first.&lt;/p&gt; &#xA;&lt;p&gt;This library uses OpenAI GPT3 to generate responses, so you will need to have your access token available in ENV. In .bashrc or equivalent,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_ACCESS_TOKEN=mytoken&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default the executable is called &lt;code&gt;openai_pipe&lt;/code&gt;. It is reccommended to alias this command to something shorter in .bashrc or equivalent, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias ai=&#34;openai_pipe&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;Be aware that there is a cost associated every time GPT3 is invoked, so be mindful of your account usage. Also be wary of sending sensitive data to OpenAI, and also wary of arbitrarily executing scripts or programs that GPT3 generates.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;After checking out the repo, run &lt;code&gt;bin/setup&lt;/code&gt; to install dependencies. Then, run &lt;code&gt;rake spec&lt;/code&gt; to run the tests. You can also run &lt;code&gt;bin/console&lt;/code&gt; for an interactive prompt that will allow you to experiment.&lt;/p&gt; &#xA;&lt;p&gt;To install this gem onto your local machine, run &lt;code&gt;bundle exec rake install&lt;/code&gt;. To release a new version, update the version number in &lt;code&gt;version.rb&lt;/code&gt;, and then run &lt;code&gt;bundle exec rake release&lt;/code&gt;, which will create a git tag for the version, push git commits and the created tag, and push the &lt;code&gt;.gem&lt;/code&gt; file to &lt;a href=&#34;https://rubygems.org&#34;&gt;rubygems.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&#34;https://github.com/Aesthetikx/openai_pipe&#34;&gt;https://github.com/Aesthetikx/openai_pipe&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The gem is available as open source under the terms of the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Homebrew/homebrew-services</title>
    <updated>2023-01-05T01:35:41Z</updated>
    <id>tag:github.com,2023-01-05:/Homebrew/homebrew-services</id>
    <link href="https://github.com/Homebrew/homebrew-services" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 Manage background services using the daemon manager launchctl on macOS or systemctl on Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Services&lt;/h1&gt; &#xA;&lt;p&gt;Manage background services using the daemon manager &lt;code&gt;launchctl&lt;/code&gt; on macOS or &lt;code&gt;systemctl&lt;/code&gt; on Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Homebrew/brew&#34;&gt;Homebrew&lt;/a&gt; is used for installing the services.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;brew services&lt;/code&gt; is automatically installed when first run.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.brew.sh/Manpage#services-subcommand&#34;&gt;the &lt;code&gt;brew services&lt;/code&gt; section of the &lt;code&gt;man brew&lt;/code&gt; output&lt;/a&gt; or &lt;code&gt;brew services --help&lt;/code&gt;.&lt;br&gt; To specify a service file use &lt;code&gt;brew services &amp;lt;command&amp;gt; &amp;lt;formula&amp;gt; --file=&amp;lt;file&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;Tests can be run with &lt;code&gt;bundle install &amp;amp;&amp;amp; bundle exec rspec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Homebrew maintainers. See &lt;a href=&#34;https://github.com/Homebrew/homebrew-services/raw/HEAD/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>