<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-11T01:38:46Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>appdev-projects/array-chapter</title>
    <updated>2022-10-11T01:38:46Z</updated>
    <id>tag:github.com,2022-10-11:/appdev-projects/array-chapter</id>
    <link href="https://github.com/appdev-projects/array-chapter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Practice&lt;/h1&gt; &#xA;&lt;p&gt;Run your Ruby file by typing &lt;code&gt;ruby &lt;/code&gt; and then the name of the file you want to run in the Terminal.&lt;/p&gt; &#xA;&lt;p&gt;If we want to run &lt;code&gt;array_count.rb&lt;/code&gt;, we can write the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ruby array_count.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To re-run this command, you can use the UP and DOWN arrow keys to look at the history of commands you&#39;ve run in a Terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Array&lt;/h2&gt; &#xA;&lt;h3&gt;array_element_square.rb&lt;/h3&gt; &#xA;&lt;p&gt;Print the square of the second-to-last number that the user enters.&lt;/p&gt; &#xA;&lt;p&gt;The expected output will be something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;Enter at least 2 numbers, separated by spaces:&#34;&#xA;9.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;array_count.rb&lt;/h3&gt; &#xA;&lt;p&gt;Create an Array and use the count method to print how many elements are in that Array.&lt;/p&gt; &#xA;&lt;p&gt;Expected output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;Enter at least 2 numbers, separated by spaces:&#34;&#xA;2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;array_reverse.rb&lt;/h3&gt; &#xA;&lt;p&gt;Create an Array and use the reverse method to return the array in reverse order.&lt;/p&gt; &#xA;&lt;p&gt;Expected output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;Enter at least 2 values, separated by spaces:&#34;&#xA;[&#34;second&#34;, &#34;first&#34;, 0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;array_min_max_difference.rb&lt;/h3&gt; &#xA;&lt;p&gt;Create an Array of numbers and output the number with the lowest value in the array, the number with the highest value in the array, and the difference between the highest value and the lowest value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lowest_number&#xA;highest_number&#xA;difference&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;array_sum_elements.rb&lt;/h3&gt; &#xA;&lt;p&gt;Output the sum value of all the elements in the array.&lt;/p&gt; &#xA;&lt;h2&gt;Specs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here to see names of each test&lt;/summary&gt; &#xA; &lt;p&gt;array_count.rb should output &#39;2&#39; given the input &#39;2 9&#39;&lt;/p&gt; &#xA; &lt;p&gt;array_count.rb should output &#39;9&#39; given the input &#39;9 12 8 25 16 78 64 0 27&#39;&lt;/p&gt; &#xA; &lt;p&gt;array_count.rb should output &#39;5&#39; given the input &#39;9 80 17 28 36&#39;&lt;/p&gt; &#xA; &lt;p&gt;array_element_square.rb should output &#39;4.0&#39; given the input &#39;9 2 7&#39;&lt;/p&gt; &#xA; &lt;p&gt;array_element_square.rb should output &#39;9.0&#39; given the input &#39;6 4 6 6 6 3 2&#39;&lt;/p&gt; &#xA; &lt;p&gt;array_element_square.rb should output &#39;18.49&#39; given the input &#39;3.2 -1.1 -4.3 8.4&#39;&lt;/p&gt; &#xA; &lt;p&gt;array_min_max_difference.rb should output &#39;6&#39;, &#39;73&#39;, and &#39;67&#39; on separate lines&lt;/p&gt; &#xA; &lt;p&gt;array_reverse.rb should output &#39;[&#39;hello&#39;, &#39;zebra&#39;, &#39;35&#39;, &#39;banana&#39;]&#39; given the input &#39;banana 35 zebra hello&#39;.&lt;/p&gt; &#xA; &lt;p&gt;array_reverse.rb should output &#39;[4, 3, 2, 1]&#39; given the input &#39;1 2 3 4&#39;.&lt;/p&gt; &#xA; &lt;p&gt;array_sum_elements.rb should output &#39;151&#39;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>saasbook/hw-bdd-cucumber</title>
    <updated>2022-10-11T01:38:46Z</updated>
    <id>tag:github.com,2022-10-11:/saasbook/hw-bdd-cucumber</id>
    <link href="https://github.com/saasbook/hw-bdd-cucumber" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CHIPS 7.7 Starter Code&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&#34;canonical&#34; solution to the Rails Intro homework against which to write your scenarios, and the necessary scaffolding for the first couple of scenarios&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>appdev-projects/date-chapter</title>
    <updated>2022-10-11T01:38:46Z</updated>
    <id>tag:github.com,2022-10-11:/appdev-projects/date-chapter</id>
    <link href="https://github.com/appdev-projects/date-chapter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Practice&lt;/h1&gt; &#xA;&lt;p&gt;Run your Ruby file by typing &lt;code&gt;ruby &lt;/code&gt; and then the name of the file you want to run in the Terminal.&lt;/p&gt; &#xA;&lt;p&gt;If we want to run &lt;code&gt;date_math.rb&lt;/code&gt;, we can write the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ruby date_math.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To re-run this command, you can use the UP and DOWN arrow keys to look at the history of commands you&#39;ve run in a Terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Date&lt;/h2&gt; &#xA;&lt;h3&gt;date_formatted.rb&lt;/h3&gt; &#xA;&lt;p&gt;Should format and identify different parts of todays date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;The year is: 2020, the calendar day is: 1, and the month is: 7.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;date_math.rb&lt;/h3&gt; &#xA;&lt;p&gt;Should output the number of days since Ruby was made.&lt;/p&gt; &#xA;&lt;p&gt;Ruby released to the public on &lt;code&gt;December 21, 1995&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;Ruby is 108937 days old!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;date_monday.rb&lt;/h3&gt; &#xA;&lt;p&gt;Should output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;Is today Monday? true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if today is Monday, or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;Is today Monday? false&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if today is &lt;em&gt;not&lt;/em&gt; Monday.&lt;/p&gt; &#xA;&lt;h2&gt;Specs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here to see names of each test&lt;/summary&gt; &#xA; &lt;p&gt;date_math.rb should output &#39;8959&#39; when today is Jul 1, 2020&lt;/p&gt; &#xA; &lt;p&gt;date_math.rb is not &#39;hard-coded&#39; to the current date&#39;&lt;/p&gt; &#xA; &lt;p&gt;date_formatted.rb outputs &#39;The year is: 2020, the calendar day is: 1, and the month is: 7.&#39; when today is July 1, 2020&lt;/p&gt; &#xA; &lt;p&gt;date_formatted.rb outputs the formatted dates for any past/future date&lt;/p&gt; &#xA; &lt;p&gt;date_formatted.rb should output &#39;Is today Monday? false&#39;, when today is not Monday&lt;/p&gt; &#xA; &lt;p&gt;date_monday.rb should output &#39;Is today Monday? false&#39;, when today is not Monday&lt;/p&gt; &#xA; &lt;p&gt;date_monday.rb should output &#39;Is today Monday? false&#39;, when today is not Monday&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>