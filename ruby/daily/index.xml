<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-06T01:41:39Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mojombo/chronic</title>
    <updated>2024-02-06T01:41:39Z</updated>
    <id>tag:github.com,2024-02-06:/mojombo/chronic</id>
    <link href="https://github.com/mojombo/chronic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chronic is a pure Ruby natural language date parser.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chronic&lt;/h1&gt; &#xA;&lt;p&gt;Chronic is a natural language date/time parser written in pure Ruby. See below for the wide variety of formats Chronic will parse.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install chronic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;chronic&#39;&#xA;&#xA;Time.now   #=&amp;gt; Sun Aug 27 23:18:25 PDT 2006&#xA;&#xA;Chronic.parse(&#39;tomorrow&#39;)&#xA;  #=&amp;gt; Mon Aug 28 12:00:00 PDT 2006&#xA;&#xA;Chronic.parse(&#39;monday&#39;, :context =&amp;gt; :past)&#xA;  #=&amp;gt; Mon Aug 21 12:00:00 PDT 2006&#xA;&#xA;Chronic.parse(&#39;this tuesday 5:00&#39;)&#xA;  #=&amp;gt; Tue Aug 29 17:00:00 PDT 2006&#xA;&#xA;Chronic.parse(&#39;this tuesday 5:00&#39;, :ambiguous_time_range =&amp;gt; :none)&#xA;  #=&amp;gt; Tue Aug 29 05:00:00 PDT 2006&#xA;&#xA;Chronic.parse(&#39;may 27th&#39;, :now =&amp;gt; Time.local(2000, 1, 1))&#xA;  #=&amp;gt; Sat May 27 12:00:00 PDT 2000&#xA;&#xA;Chronic.parse(&#39;may 27th&#39;, :guess =&amp;gt; false)&#xA;  #=&amp;gt; Sun May 27 00:00:00 PDT 2007..Mon May 28 00:00:00 PDT 2007&#xA;&#xA;Chronic.parse(&#39;6/4/2012&#39;, :endian_precedence =&amp;gt; :little)&#xA;  #=&amp;gt; Fri Apr 06 00:00:00 PDT 2012&#xA;&#xA;Chronic.parse(&#39;INVALID DATE&#39;)&#xA;  #=&amp;gt; nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the parser can find a date or time, either a Time or Chronic::Span will be returned (depending on the value of &lt;code&gt;:guess&lt;/code&gt;). If no date or time can be found, &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;Chronic.parse&lt;/code&gt; for detailed usage instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Chronic can parse a huge variety of date and time formats. Following is a small sample of strings that will be properly parsed. Parsing is case insensitive and will handle common abbreviations and misspellings.&lt;/p&gt; &#xA;&lt;h4&gt;Simple&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;thursday&lt;/li&gt; &#xA; &lt;li&gt;november&lt;/li&gt; &#xA; &lt;li&gt;summer&lt;/li&gt; &#xA; &lt;li&gt;friday 13:00&lt;/li&gt; &#xA; &lt;li&gt;mon 2:35&lt;/li&gt; &#xA; &lt;li&gt;4pm&lt;/li&gt; &#xA; &lt;li&gt;10 to 8&lt;/li&gt; &#xA; &lt;li&gt;10 past 2&lt;/li&gt; &#xA; &lt;li&gt;half past 2&lt;/li&gt; &#xA; &lt;li&gt;6 in the morning&lt;/li&gt; &#xA; &lt;li&gt;friday 1pm&lt;/li&gt; &#xA; &lt;li&gt;sat 7 in the evening&lt;/li&gt; &#xA; &lt;li&gt;yesterday&lt;/li&gt; &#xA; &lt;li&gt;today&lt;/li&gt; &#xA; &lt;li&gt;tomorrow&lt;/li&gt; &#xA; &lt;li&gt;last week&lt;/li&gt; &#xA; &lt;li&gt;next week&lt;/li&gt; &#xA; &lt;li&gt;this tuesday&lt;/li&gt; &#xA; &lt;li&gt;next month&lt;/li&gt; &#xA; &lt;li&gt;last winter&lt;/li&gt; &#xA; &lt;li&gt;this morning&lt;/li&gt; &#xA; &lt;li&gt;last night&lt;/li&gt; &#xA; &lt;li&gt;this second&lt;/li&gt; &#xA; &lt;li&gt;yesterday at 4:00&lt;/li&gt; &#xA; &lt;li&gt;last friday at 20:00&lt;/li&gt; &#xA; &lt;li&gt;last week tuesday&lt;/li&gt; &#xA; &lt;li&gt;tomorrow at 6:45pm&lt;/li&gt; &#xA; &lt;li&gt;afternoon yesterday&lt;/li&gt; &#xA; &lt;li&gt;thursday last week&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Complex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3 years ago&lt;/li&gt; &#xA; &lt;li&gt;a year ago&lt;/li&gt; &#xA; &lt;li&gt;5 months before now&lt;/li&gt; &#xA; &lt;li&gt;7 hours ago&lt;/li&gt; &#xA; &lt;li&gt;7 days from now&lt;/li&gt; &#xA; &lt;li&gt;1 week hence&lt;/li&gt; &#xA; &lt;li&gt;in 3 hours&lt;/li&gt; &#xA; &lt;li&gt;1 year ago tomorrow&lt;/li&gt; &#xA; &lt;li&gt;3 months ago saturday at 5:00 pm&lt;/li&gt; &#xA; &lt;li&gt;7 hours before tomorrow at noon&lt;/li&gt; &#xA; &lt;li&gt;3rd wednesday in november&lt;/li&gt; &#xA; &lt;li&gt;3rd month next year&lt;/li&gt; &#xA; &lt;li&gt;3rd thursday this september&lt;/li&gt; &#xA; &lt;li&gt;4th day last week&lt;/li&gt; &#xA; &lt;li&gt;fourteenth of june 2010 at eleven o&#39;clock in the evening&lt;/li&gt; &#xA; &lt;li&gt;may seventh &#39;97 at three in the morning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Specific Dates&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;January 5&lt;/li&gt; &#xA; &lt;li&gt;22nd of june&lt;/li&gt; &#xA; &lt;li&gt;5th may 2017&lt;/li&gt; &#xA; &lt;li&gt;February twenty first&lt;/li&gt; &#xA; &lt;li&gt;dec 25&lt;/li&gt; &#xA; &lt;li&gt;may 27th&lt;/li&gt; &#xA; &lt;li&gt;October 2006&lt;/li&gt; &#xA; &lt;li&gt;oct 06&lt;/li&gt; &#xA; &lt;li&gt;jan 3 2010&lt;/li&gt; &#xA; &lt;li&gt;february 14, 2004&lt;/li&gt; &#xA; &lt;li&gt;february 14th, 2004&lt;/li&gt; &#xA; &lt;li&gt;3 jan 2000&lt;/li&gt; &#xA; &lt;li&gt;17 april 85&lt;/li&gt; &#xA; &lt;li&gt;5/27/1979&lt;/li&gt; &#xA; &lt;li&gt;27/5/1979&lt;/li&gt; &#xA; &lt;li&gt;05/06&lt;/li&gt; &#xA; &lt;li&gt;1979-05-27&lt;/li&gt; &#xA; &lt;li&gt;Friday&lt;/li&gt; &#xA; &lt;li&gt;5&lt;/li&gt; &#xA; &lt;li&gt;4:00&lt;/li&gt; &#xA; &lt;li&gt;17:00&lt;/li&gt; &#xA; &lt;li&gt;0800&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Specific Times (many of the above with an added time)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;January 5 at 7pm&lt;/li&gt; &#xA; &lt;li&gt;22nd of june at 8am&lt;/li&gt; &#xA; &lt;li&gt;1979-05-27 05:00:00&lt;/li&gt; &#xA; &lt;li&gt;03/01/2012 07:25:09.234567&lt;/li&gt; &#xA; &lt;li&gt;2013-08-01T19:30:00.345-07:00&lt;/li&gt; &#xA; &lt;li&gt;2013-08-01T19:30:00.34-07:00&lt;/li&gt; &#xA; &lt;li&gt;etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Time Zones&lt;/h2&gt; &#xA;&lt;p&gt;Chronic allows you to set which Time class to use when constructing times. By default, the built in Ruby time class creates times in your system&#39;s local time zone. You can set this to something like ActiveSupport&#39;s &lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html&#34;&gt;TimeZone&lt;/a&gt; class to get full time zone support.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; Time.zone = &#34;UTC&#34;&#xA;&amp;gt;&amp;gt; Chronic.time_class = Time.zone&#xA;&amp;gt;&amp;gt; Chronic.parse(&#34;June 15 2006 at 5:45 AM&#34;)&#xA;=&amp;gt; Thu, 15 Jun 2006 05:45:00 UTC +00:00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Chronic uses Ruby&#39;s built in Time class for all time storage and computation. Because of this, only times that the Time class can handle will be properly parsed. Parsing for times outside of this range will simply return &lt;code&gt;nil&lt;/code&gt;. Support for a wider range of times is planned for a future release.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to hack on Chronic, start by forking the repo on GitHub:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mojombo/chronic&#34;&gt;https://github.com/mojombo/chronic&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The best way to get your changes merged back into core is as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone down your fork&lt;/li&gt; &#xA; &lt;li&gt;Create a thoughtfully named topic branch to contain your change&lt;/li&gt; &#xA; &lt;li&gt;Install the development dependencies by running &lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hack away&lt;/li&gt; &#xA; &lt;li&gt;Add tests and make sure everything still passes by running &lt;code&gt;bundle exec rake&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ensure your tests pass in multiple timezones. ie &lt;code&gt;TZ=utc bundle exec rake&lt;/code&gt; &lt;code&gt;TZ=BST bundle exec rake&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are adding new functionality, document it in the README&lt;/li&gt; &#xA; &lt;li&gt;Do not change the version number, we will do that on our end&lt;/li&gt; &#xA; &lt;li&gt;If necessary, rebase your commits into logical chunks, without errors&lt;/li&gt; &#xA; &lt;li&gt;Push the branch up to GitHub&lt;/li&gt; &#xA; &lt;li&gt;Send a pull request for your branch&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>FelixKratz/homebrew-formulae</title>
    <updated>2024-02-06T01:41:39Z</updated>
    <id>tag:github.com,2024-02-06:/FelixKratz/homebrew-formulae</id>
    <link href="https://github.com/FelixKratz/homebrew-formulae" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>sous-chefs/apache2</title>
    <updated>2024-02-06T01:41:39Z</updated>
    <id>tag:github.com,2024-02-06:/sous-chefs/apache2</id>
    <link href="https://github.com/sous-chefs/apache2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Development repository for the apache2 cookbook&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;apache2 Cookbook&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://supermarket.chef.io/cookbooks/apache2&#34;&gt;&lt;img src=&#34;https://img.shields.io/cookbook/v/apache2.svg?sanitize=true&#34; alt=&#34;Cookbook Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sous-chefs/apache2/actions?query=workflow%3Aci&#34;&gt;&lt;img src=&#34;https://github.com/sous-chefs/apache2/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;CI State&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/backers/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/sponsors/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This cookbook provides a complete Debian/Ubuntu style Apache HTTPD configuration. Non-Debian based distributions such as Red Hat/CentOS, ArchLinux and others supported by this cookbook will have a configuration that mimics Debian/Ubuntu style as it is easier to manage with Chef.&lt;/p&gt; &#xA;&lt;p&gt;Debian-style Apache configuration uses scripts to manage modules and sites (vhosts). The scripts are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a2ensite&lt;/li&gt; &#xA; &lt;li&gt;a2dissite&lt;/li&gt; &#xA; &lt;li&gt;a2enmod&lt;/li&gt; &#xA; &lt;li&gt;a2dismod&lt;/li&gt; &#xA; &lt;li&gt;a2enconf&lt;/li&gt; &#xA; &lt;li&gt;a2disconf&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This cookbook ships with templates of these scripts for non-Debian based platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;This cookbook is maintained by the Sous Chefs. The Sous Chefs are a community of Chef cookbook maintainers working together to maintain important cookbooks. If you’d like to know more please visit &lt;a href=&#34;https://sous-chefs.org/&#34;&gt;sous-chefs.org&lt;/a&gt; or come chat with us on the Chef Community Slack in &lt;a href=&#34;https://chefcommunity.slack.com/messages/C2V7B88SF&#34;&gt;#sous-chefs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Cookbooks&lt;/h2&gt; &#xA;&lt;p&gt;Depending on your OS configuration and security policy, you may need additional recipes or cookbooks for this cookbook&#39;s recipes to converge on the node. In particular, the following Operating System settings may affect the behavior of this cookbook:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SELinux enabled&lt;/li&gt; &#xA; &lt;li&gt;Firewalls (such as iptables, ufw, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Compile tools&lt;/li&gt; &#xA; &lt;li&gt;3rd party repositories&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On RHEL, SELinux is enabled by default. The &lt;a href=&#34;https://supermarket.chef.io/cookbooks/selinux&#34;&gt;selinux&lt;/a&gt; cookbook contains a &lt;code&gt;permissive&lt;/code&gt; recipe that can be used to set SELinux to &#34;Permissive&#34; state. Otherwise, additional recipes need to be created by the user to address SELinux permissions.&lt;/p&gt; &#xA;&lt;p&gt;To deal with firewalls Chef Software does provide an &lt;a href=&#34;https://supermarket.chef.io/cookbooks/iptables&#34;&gt;iptables&lt;/a&gt; and &lt;a href=&#34;https://supermarket.chef.io/cookbooks/ufw&#34;&gt;ufw&lt;/a&gt; cookbook but is migrating from the approach used there to a more robust solution utilizing the general &lt;a href=&#34;https://supermarket.chef.io/cookbooks/firewall&#34;&gt;firewall&lt;/a&gt; cookbook to setup rules. See those cookbooks&#39; READMEs for documentation.&lt;/p&gt; &#xA;&lt;p&gt;On ArchLinux, if you are using the &lt;code&gt;apache2::mod_auth_openid&lt;/code&gt; recipe, you also need the &lt;a href=&#34;https://supermarket.chef.io/cookbooks/pacman&#34;&gt;pacman&lt;/a&gt; cookbook for the &lt;code&gt;pacman_aur&lt;/code&gt; LWRP. Put &lt;code&gt;recipe[pacman]&lt;/code&gt; on the node&#39;s expanded run list (on the node or in a role). This is not an explicit dependency because it is only required for this single recipe and platform; the pacman default recipe performs &lt;code&gt;pacman -Sy&lt;/code&gt; to keep pacman&#39;s package cache updated.&lt;/p&gt; &#xA;&lt;h2&gt;Platforms&lt;/h2&gt; &#xA;&lt;p&gt;The following platforms and versions are tested and supported using &lt;a href=&#34;http://kitchen.ci/&#34;&gt;test-kitchen&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Amazon Linux 2023&lt;/li&gt; &#xA; &lt;li&gt;CentOS 7+ (incl. Rocky &amp;amp; Alma)&lt;/li&gt; &#xA; &lt;li&gt;Debian 10+&lt;/li&gt; &#xA; &lt;li&gt;Fedora latest&lt;/li&gt; &#xA; &lt;li&gt;OpenSUSE Leap 15&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 18.04+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to create a project or organization specific &lt;a href=&#34;https://blog.chef.io/doing-wrapper-cookbooks-right&#34;&gt;wrapper cookbook&lt;/a&gt; and add the desired custom resources to the run list of a node. Depending on your environment, you may have multiple roles that use different recipes from this cookbook. Adjust any attributes as desired.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;apache2_install &#39;default_install&#39; do&#xA;  notifies :restart, &#39;apache2_service[default]&#39;&#xA;end&#xA;&#xA;apache2_module &#39;headers&#39; do&#xA;  notifies :reload, &#39;apache2_service[default]&#39;&#xA;end&#xA;&#xA;apache2_module &#39;ssl&#39; do&#xA;  notifies :reload, &#39;apache2_service[default]&#39;&#xA;end&#xA;&#xA;apache2_default_site &#39;foo&#39; do&#xA;  default_site_name &#39;my_site&#39;&#xA;  template_cookbook &#39;my_cookbook&#39;&#xA;  port &#39;443&#39;&#xA;  template_source &#39;my_site.conf.erb&#39;&#xA;  action :enable&#xA;  notifies :reload, &#39;apache2_service[default]&#39;&#xA;end&#xA;&#xA;apache2_service &#39;default&#39; do&#xA;  action [:enable, :start]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example wrapper cookbooks: &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/test/cookbooks/test/recipes/basic_site.rb&#34;&gt;basic site&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/test/cookbooks/test/recipes/mod_ssl.rb&#34;&gt;ssl site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_install.md&#34;&gt;install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_service.md&#34;&gt;service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_default_site.md&#34;&gt;default_site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_site.md&#34;&gt;site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_conf.md&#34;&gt;conf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_config.md&#34;&gt;config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_mod.md&#34;&gt;mod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_module.md&#34;&gt;module&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_mod_php.md&#34;&gt;mod_php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_mod_wsgi.md&#34;&gt;mod_wsgi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/apache2/main/documentation/resource_apache2_mod_auth_cas.md&#34;&gt;mod_auth_cas&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who &lt;a href=&#34;https://opencollective.com/sous-chefs/contributors.svg?width=890&amp;amp;button=false&#34;&gt;contribute.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/backers.svg?width=600&amp;amp;avatarHeight=40&#34; alt=&#34;https://opencollective.com/sous-chefs#backers&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/0/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/0/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/1/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/1/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/2/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/2/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/3/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/3/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/4/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/4/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/5/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/5/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/6/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/6/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/7/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/7/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/8/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/8/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/9/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/9/website&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>