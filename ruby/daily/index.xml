<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-18T01:38:03Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Maruno17/pokemon-essentials</title>
    <updated>2025-08-18T01:38:03Z</updated>
    <id>tag:github.com,2025-08-18:/Maruno17/pokemon-essentials</id>
    <link href="https://github.com/Maruno17/pokemon-essentials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A heavily modified RPG Maker XP game project that makes the game play like a Pokémon game. Not a full project in itself; this repo is to be added into an existing RMXP game project.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pokémon Essentials&lt;/h1&gt; &#xA;&lt;p&gt;Based on Essentials v21.1.&lt;/p&gt; &#xA;&lt;p&gt;You can build your fangame on top of a fork of this repository. Doing so will let you update your fangame with improvements made to this repo as soon as they are made.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repo.&lt;/li&gt; &#xA; &lt;li&gt;Get a copy of Essentials v21.1 (a download link cannot be provided here).&lt;/li&gt; &#xA; &lt;li&gt;Clone your forked repo into the Essentials v21.1 folder, replacing the existing files with the ones from the repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;From here, you can edit this project to turn it into your fangame/develop mods. When this repo is updated, you can pull the changes to update your fork and get the updates into your fangame/modding environment.&lt;/p&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;The scripts no longer live in the Scripts.rxdata file. They have been extracted into separate files and placed in the Data/Scripts/ folder (and subfolders within). This makes it easier to work with other people and keep track of changes.&lt;/p&gt; &#xA;&lt;p&gt;The scripts are loaded into the game alphanumerically, starting from the top folder (Data/Scripts/) and going depth-first. That is, all scripts in a given folder are loaded, and then each of its subfolder is checked in turn (again in alphanumerical order) for files/folders to load/check.&lt;/p&gt; &#xA;&lt;h3&gt;Extracting and reintegrating scripts&lt;/h3&gt; &#xA;&lt;p&gt;This repo contains two script files in the main folder:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;scripts_extract.rb - Run this to extract all scripts from Scripts.rxdata into individual .rb files (any existing individual .rb files are deleted). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Scripts.rxdata is backed up to ScriptsBackup.rxdata, and is then replaced with a version that reads the individual .rb files and does nothing else.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;scripts_combine.rb - Run this to reintegrate all the individual .rb files back into Scripts.rxdata. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The individual .rb files are left where they are, but they no longer do anything.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You will need Ruby installed to run these scripts. The intention is to replace these with something more user-friendly.&lt;/p&gt; &#xA;&lt;h2&gt;Files not in the repo&lt;/h2&gt; &#xA;&lt;p&gt;The .gitignore file lists the files that will not be included in this repo. These are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Audio/, Graphics/, Plugins/ and Screenshots/ folders and everything in them.&lt;/li&gt; &#xA; &lt;li&gt;Everything in the Data/ folder, except for: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The Data/Scripts/ folder and everything in there.&lt;/li&gt; &#xA;   &lt;li&gt;Scripts.rxdata (a special version that just loads the individual script files).&lt;/li&gt; &#xA;   &lt;li&gt;messages_core.dat, which contains common messages and is useful for translation projects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A few files in the main project folder (two of the Game.xxx files, the RGSS dll file and errorlog.txt).&lt;/li&gt; &#xA; &lt;li&gt;Temporary files.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>