<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-16T01:33:02Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>danger/danger</title>
    <updated>2022-07-16T01:33:02Z</updated>
    <id>tag:github.com,2022-07-16:/danger/danger</id>
    <link href="https://github.com/danger/danger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸš« Stop saying &#34;you forgot to â€¦&#34; in code review (in Ruby)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Danger &lt;span&gt;ðŸš«&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orta/danger/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-green.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://rubygems.org/gems/danger&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/danger.svg?style=flat&#34; alt=&#34;Gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/danger/danger&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/danger/danger.svg?style=flat&#34; alt=&#34;Travis CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://spectrum.chat/danger&#34;&gt;&lt;img src=&#34;https://withspectrum.github.io/badge/badge.svg?sanitize=true&#34; alt=&#34;Join the community on Spectrum&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Formalize your Pull Request etiquette.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/danger/danger/master/#what-is-danger&#34;&gt;What is Danger?&lt;/a&gt; â€¢ &lt;a href=&#34;https://raw.githubusercontent.com/danger/danger/master/VISION.md&#34;&gt;Vision&lt;/a&gt; â€¢ &lt;a href=&#34;https://raw.githubusercontent.com/danger/danger/master/#im-here-to-help-out&#34;&gt;Helping Out&lt;/a&gt; â€¢ &lt;a href=&#34;https://danger.systems/guides/creating_your_first_plugin.html&#34;&gt;Plugin Development&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What is Danger?&lt;/h2&gt; &#xA;&lt;p&gt;Danger runs after your CI, automating your team&#39;s conventions surrounding code review.&lt;/p&gt; &#xA;&lt;p&gt;This provides another logical step in your process, through this Danger can help lint your rote tasks in daily code review.&lt;/p&gt; &#xA;&lt;p&gt;You can use Danger to codify your team&#39;s norms, leaving humans to think about harder problems.&lt;/p&gt; &#xA;&lt;h2&gt;For example?&lt;/h2&gt; &#xA;&lt;p&gt;You can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enforce CHANGELOGs&lt;/li&gt; &#xA; &lt;li&gt;Enforce links to Trello/JIRA in PR/MR bodies&lt;/li&gt; &#xA; &lt;li&gt;Enforce using descriptive labels&lt;/li&gt; &#xA; &lt;li&gt;Look out for common anti-patterns&lt;/li&gt; &#xA; &lt;li&gt;Highlight interesting build artifacts&lt;/li&gt; &#xA; &lt;li&gt;Give specific files extra focus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Danger provides the glue to let &lt;em&gt;you&lt;/em&gt; build out the rules specific to your team&#39;s culture, offering useful metadata and a comprehensive plugin system to share common issues.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Alright. So, actually, you may be in the wrong place. From here on in, this README is going to be for people who are interested in working on and improving on Danger.&lt;/p&gt; &#xA;&lt;p&gt;We keep all of the end-user documentation at &lt;a href=&#34;https://danger.systems&#34;&gt;https://danger.systems&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some quick links: &lt;a href=&#34;https://danger.systems/guides.html&#34;&gt;Guides Index&lt;/a&gt;, &lt;a href=&#34;https://danger.systems/reference.html&#34;&gt;DSL Reference&lt;/a&gt;, &lt;a href=&#34;https://danger.systems/guides/getting_started.html&#34;&gt;Getting Started&lt;/a&gt; and &lt;a href=&#34;https://danger.systems/guides/what_does_danger_do.html&#34;&gt;What does Danger Do?&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;I&#39;m here to help out!&lt;/h2&gt; &#xA;&lt;p&gt;Brilliant. So, let&#39;s get you set up.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/danger/danger.git&#xA;cd danger&#xA;bundle install&#xA;bundle exec rake spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This sets everything up and runs all of the tests.&lt;/p&gt; &#xA;&lt;h4&gt;Theory&lt;/h4&gt; &#xA;&lt;p&gt;Danger has a &lt;a href=&#34;https://github.com/danger/danger/raw/master/VISION.md&#34;&gt;VISION.md&lt;/a&gt; file, which sums up the ideas around what Danger is. It is the lower bounds of what Danger means. Orta has written on handling and creating Danger &lt;a href=&#34;http://artsy.github.io/blog/categories/danger/&#34;&gt;on the Artsy blog&lt;/a&gt;, too.&lt;/p&gt; &#xA;&lt;h4&gt;Documentation&lt;/h4&gt; &#xA;&lt;p&gt;The code you write may end up in the public part of the website â€” the easiest way to tell is that it is vastly overdocumented. If you are working in a space that looks over-documented, please be extra considerate to add documentation. We expect the consumers of that documentation to be non-rubyists, thus you should avoid specific jargon and try to provide duplicate overlapping examples.&lt;/p&gt; &#xA;&lt;h4&gt;Testing&lt;/h4&gt; &#xA;&lt;p&gt;So far, we&#39;ve not really figured out the right way to make tests for our CLI commands. When we have done so, they&#39;ve ended up being brittle. So, ideally, try to move any logic that would go into a command into separate classes, and test those. We&#39;re okay with the command not having coverage, but ideally the classes that make up what it does will.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;d strongly recommend using &lt;code&gt;bundle exec guard&lt;/code&gt; to run your tests as you work. Any changes you make in the lib, or specs will have corresponding tests run instantly.&lt;/p&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;p&gt;Ruby is super dynamic. One of the best ways to debug Ruby code is by using &lt;a href=&#34;https://pry.github.io/&#34;&gt;pry&lt;/a&gt;. We include pry for developers: when you have a problem, copy these two lines just before your problem and follow the instructions from &#34;&lt;a href=&#34;https://danger.systems/guides/troubleshooting.html#i-want-to-be-a-danger-wizard&#34;&gt;I Want To Be A Danger Wizard&lt;/a&gt;.&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;pry&#39;&#xA;binding.pry&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License, Contributor&#39;s Guidelines and Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;We try to keep as much discussion as possible in GitHub issues, but also have a pretty inactive Slack --- if you&#39;d like an invite, ping &lt;a href=&#34;https://twitter.com/orta/&#34;&gt;@Orta&lt;/a&gt; a DM on Twitter with your email. It&#39;s mostly interesting if you want to stay on top of Danger without all the emails from GitHub.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This project is open source under the MIT license, which means you have full access to the source code and can modify it to fit your own needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This project subscribes to the &lt;a href=&#34;https://github.com/Moya/contributors&#34;&gt;Moya Contributors Guidelines&lt;/a&gt; which TLDR: means we give out push access easily and often.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Contributors subscribe to the &lt;a href=&#34;https://contributor-covenant.org/version/1/3/0/&#34;&gt;Contributor Code of Conduct&lt;/a&gt; based on the &lt;a href=&#34;https://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; version 1.3.0.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>svenfuchs/rails-i18n</title>
    <updated>2022-07-16T01:33:02Z</updated>
    <id>tag:github.com,2022-07-16:/svenfuchs/rails-i18n</id>
    <link href="https://github.com/svenfuchs/rails-i18n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for collecting Locale data for Ruby on Rails I18n as well as other interesting, Rails related I18n stuff&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rails Locale Data Repository&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/rails-i18n&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/rails-i18n.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/svenfuchs/rails-i18n/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/svenfuchs/rails-i18n/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Centralization of locale data collection for Ruby on Rails.&lt;/p&gt; &#xA;&lt;h2&gt;Gem Installation&lt;/h2&gt; &#xA;&lt;p&gt;Include the gem to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 7.0.0&#39; # For 7.0.0&#xA;gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 6.0&#39; # For 6.x&#xA;gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 5.1&#39; # For 5.0.x, 5.1.x and 5.2.x&#xA;gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 4.0&#39; # For 4.0.x&#xA;gem &#39;rails-i18n&#39;, &#39;~&amp;gt; 3.0&#39; # For 3.x&#xA;gem &#39;rails-i18n&#39;, github: &#39;svenfuchs/rails-i18n&#39;, branch: &#39;master&#39; # For 5.x&#xA;gem &#39;rails-i18n&#39;, github: &#39;svenfuchs/rails-i18n&#39;, branch: &#39;rails-4-x&#39; # For 4.x&#xA;gem &#39;rails-i18n&#39;, github: &#39;svenfuchs/rails-i18n&#39;, branch: &#39;rails-3-x&#39; # For 3.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gem install rails-i18n -v &#39;~&amp;gt; 7.0.0&#39; # For 7.0.0&#xA;gem install rails-i18n -v &#39;~&amp;gt; 6.0&#39; # For 6.x&#xA;gem install rails-i18n -v &#39;~&amp;gt; 5.1&#39; # For  For 5.0.x, 5.1.x and 5.2.x&#xA;gem install rails-i18n -v &#39;~&amp;gt; 4.0&#39; # For 4.0.x&#xA;gem install rails-i18n -v &#39;~&amp;gt; 3.0&#39; # For 3.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that your Ruby on Rails version must be 3.0 or higher in order to install the &lt;code&gt;rails-i18n&lt;/code&gt; gem. For rails 2.x, install it manually as described in the Manual Installation section below.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;rails-i18n&lt;/code&gt; gem initially loads all available locale files, pluralization and transliteration rules. This default behaviour can be changed. If you specify in &lt;code&gt;config/environments/*&lt;/code&gt; the locales which have to be loaded via &lt;code&gt;I18n.available_locales&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.i18n.available_locales = [&#39;es-CO&#39;, :de]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.i18n.available_locales = :nl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download desired locale files found in &lt;a href=&#34;http://github.com/svenfuchs/rails-i18n/tree/master/rails/locale/&#34;&gt;rails/locale&lt;/a&gt; directory and move them into the &lt;code&gt;config/locales&lt;/code&gt; directory of your Rails application.&lt;/p&gt; &#xA;&lt;p&gt;If any translation doesn&#39;t suit well to the requirements of your application, edit them or add your own locale files.&lt;/p&gt; &#xA;&lt;p&gt;For more information, visit &lt;a href=&#34;http://guides.rubyonrails.org/i18n.html&#34;&gt;Rails Internationalization (I18n) API&lt;/a&gt; on the &lt;em&gt;RailsGuides.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage on Rails 2.3&lt;/h2&gt; &#xA;&lt;p&gt;Locale data whose structure is compatible with Rails 2.3 are available on the separate branch &lt;a href=&#34;https://github.com/svenfuchs/rails-i18n/tree/rails-2-3&#34;&gt;rails-2-3&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Available Locales&lt;/h2&gt; &#xA;&lt;p&gt;Available locales:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;af, ar, az, be, bg, bn, bs, ca, cs, cy, da, de, de-AT, de-CH, de-DE, el, el-CY, en, en-AU, en-CA, en-GB, en-IE, en-IN, en-NZ, en-US, en-ZA, en-CY, en-TT, eo, es, es-419, es-AR, es-CL, es-CO, es-CR, es-EC, es-ES, es-MX, es-NI, es-PA, es-PE, es-US, es-VE, et, eu, fa, fi, fr, fr-CA, fr-CH, fr-FR, fy, gl, he, hi, hi-IN, hr, hu, id, is, it, it-CH, ja, ka, km, kn, ko, lb, lo, lt, lv, mk, ml, mn, mr-IN, ms, nb, ne, nl, nn, oc, or, pa, pl, pt, pt-BR, rm, ro, ru, sk, sl, sq, sr, st, sw, ta, te, th, tl, tr, tt, ug, ur, uz, vi, wo, zh-CN, zh-HK, zh-TW, zh-YUE&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Complete locales:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;af, da, de, de-AT, de-CH, de-DE, en-US, es, es-419, es-AR, es-CL, es-CO, es-CR, es-EC, es-ES, es-MX, es-NI, es-PA, es-PE, es-US, es-VE, et, fa, fr, fr-CA, fr-CH, fr-FR, fy, id, it, ja, ka, ml, nb, nl, nn, pt, pt-BR, sv, sv-SE, tr, zh-CN, zh-HK, zh-TW, zh-YUE, uk&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Currently, most locales are incomplete. Typically they lack the following keys:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;activerecord.errors.messages.record_invalid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;activerecord.errors.messages.restrict_dependent_destroy.has_one&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;activerecord.errors.messages.restrict_dependent_destroy.has_many&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following keys should NOT be included:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;errors.messages.model_invalid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;errors.messages.required&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We always welcome your contributions!&lt;/p&gt; &#xA;&lt;h2&gt;Currency Symbols&lt;/h2&gt; &#xA;&lt;p&gt;Some locales have the symbol of the currency (e.g. &lt;code&gt;â‚¬&lt;/code&gt;) under the key &lt;code&gt;number.currency.format.unit&lt;/code&gt;, while others have the code (e.g. &lt;code&gt;CHF&lt;/code&gt;). The value of the key depends on the widespread adoption of the unicode currency symbols by fonts.&lt;/p&gt; &#xA;&lt;p&gt;For example the Turkish Lira sign (&lt;code&gt;â‚º&lt;/code&gt;) was recently added in Unicode 6.2 and while most popular fonts have a glyph, there are still many fonts that will not render the character correctly.&lt;/p&gt; &#xA;&lt;p&gt;If you want to provide a different value, you can create a custom locale file under &lt;code&gt;config/locales/tr.yml&lt;/code&gt; and override the respective key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;tr:&#xA;  number:&#xA;    currency:&#xA;      format:&#xA;        unit: TL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Contribution&lt;/h3&gt; &#xA;&lt;p&gt;If you are familiar with GitHub operations, then follow the procedures described in the subsequent sections.&lt;/p&gt; &#xA;&lt;p&gt;If not,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Save your locale data in a &lt;a href=&#34;http://gist.github.com&#34;&gt;Gist&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open an issue with reference to the Gist you created.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fetching the &lt;code&gt;rails-i18n&lt;/code&gt; Repository&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get a github account and Git program if you haven&#39;t. See &lt;a href=&#34;http://help.github.com/&#34;&gt;Help.Github&lt;/a&gt; for instructions.&lt;/li&gt; &#xA; &lt;li&gt;Fork &lt;code&gt;svenfuchs/rails-i18n&lt;/code&gt; repository and clone it into your PC.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Creating or Editing your Locale File&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Have a look in &lt;code&gt;rails/locale/en.yml&lt;/code&gt;, which should be used as the base of your translation.&lt;/li&gt; &#xA; &lt;li&gt;Create or edit your locale file. Please pay attention to save your files as UTF-8.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testing your Locale File&lt;/h3&gt; &#xA;&lt;p&gt;Before committing and pushing your changes, test the integrity of your locale file. (You can also run the tests using Docker, see below)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bundle exec rake spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure you have included all translations with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bundle exec rake i18n-spec:completeness rails/locale/en.yml rails/locale/YOUR_NEW_LOCALE.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure it is normalized with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;thor locales:normalize LOCALE # or &#34;thor locales:normalize_all&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can list all complete and incomplete locales:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;thor locales:complete&#xA;thor locales:incomplete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, you can list all available locales:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;thor locales:list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can list all missing keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;i18n-tasks missing es&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Edit README.md&lt;/h3&gt; &#xA;&lt;p&gt;Add your locale name to the list in &lt;code&gt;README.md&lt;/code&gt; if it isn&#39;t there.&lt;/p&gt; &#xA;&lt;h3&gt;Send pull request&lt;/h3&gt; &#xA;&lt;p&gt;If you are ready, push the repository into the Github and send us a pull request.&lt;/p&gt; &#xA;&lt;p&gt;We will do the formality check and publish it as quick as we can.&lt;/p&gt; &#xA;&lt;h3&gt;Add an informative title to your pull request or issue&lt;/h3&gt; &#xA;&lt;p&gt;If your pull request or issue concerns a specific locale - please indicate the relevant locale in the issue or pull request title in order to facilitate triage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Best:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Danish: change da.errors.messages.required to &#34;skal udfyldes&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Human precision in Swedish locale file is set to 1&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Update es-PE.yml, the currency unit is incorrect&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Changing some string about validation&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Build the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build --tag=railsi18n .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run railsi18n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the other commands described above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run railsi18n bundle exec rake i18n-spec:completeness rails/locale/en.yml rails/locale/YOUR_NEW_LOCALE.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tigrish/devise-i18n&#34;&gt;devise-i18n&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tigrish/will-paginate-i18n&#34;&gt;will-paginate-i18n&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tigrish/kaminari-i18n&#34;&gt;kaminari-i18n&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onomojo/i18n-country-translations&#34;&gt;i18n-country-translation&lt;/a&gt; for translations of country names&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onomojo/i18n-timezones&#34;&gt;i18n-timezones&lt;/a&gt; for translations of Rails time zones&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tigrish/i18n-spec&#34;&gt;i18n-spec&lt;/a&gt; for RSpec matchers to test your locale files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tigrish/iso&#34;&gt;iso&lt;/a&gt; for the list of valid language/region codes and their translations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glebm/i18n-tasks&#34;&gt;i18n-tasks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/svenfuchs/rails-i18n/raw/master/MIT-LICENSE.txt&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/svenfuchs/rails-i18n/contributors&#34;&gt;https://github.com/svenfuchs/rails-i18n/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kuroda&#34;&gt;Tsutomu Kuroda&lt;/a&gt; for untiringly taking care of this repository, issues and pull requests&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bkeepers/dotenv</title>
    <updated>2022-07-16T01:33:02Z</updated>
    <id>tag:github.com,2022-07-16:/bkeepers/dotenv</id>
    <link href="https://github.com/bkeepers/dotenv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby gem to load environment variables from `.env`.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dotenv &lt;a href=&#34;https://badge.fury.io/rb/dotenv&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/dotenv.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/bkeepers/dotenv?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/bkeepers/dotenv&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Shim to load environment variables from &lt;code&gt;.env&lt;/code&gt; into &lt;code&gt;ENV&lt;/code&gt; in &lt;em&gt;development&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Storing &lt;a href=&#34;http://12factor.net/config&#34;&gt;configuration in the environment&lt;/a&gt; is one of the tenets of a &lt;a href=&#34;http://12factor.net&#34;&gt;twelve-factor app&lt;/a&gt;. Anything that is likely to change between deployment environmentsâ€“such as resource handles for databases or credentials for external servicesâ€“should be extracted from the code into environment variables.&lt;/p&gt; &#xA;&lt;p&gt;But it is not always practical to set environment variables on development machines or continuous integration servers where multiple projects are run. dotenv loads variables from a &lt;code&gt;.env&lt;/code&gt; file into &lt;code&gt;ENV&lt;/code&gt; when the environment is bootstrapped.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Rails&lt;/h3&gt; &#xA;&lt;p&gt;Add this line to the top of your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;dotenv-rails&#39;, groups: [:development, :test]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Note on load order&lt;/h4&gt; &#xA;&lt;p&gt;dotenv is initialized in your Rails app during the &lt;code&gt;before_configuration&lt;/code&gt; callback, which is fired when the &lt;code&gt;Application&lt;/code&gt; constant is defined in &lt;code&gt;config/application.rb&lt;/code&gt; with &lt;code&gt;class Application &amp;lt; Rails::Application&lt;/code&gt;. If you need it to be initialized sooner, you can manually call &lt;code&gt;Dotenv::Railtie.load&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/application.rb&#xA;Bundler.require(*Rails.groups)&#xA;&#xA;# Load dotenv only in development or test environment&#xA;if [&#39;development&#39;, &#39;test&#39;].include? ENV[&#39;RAILS_ENV&#39;]&#xA;  Dotenv::Railtie.load&#xA;end&#xA;&#xA;HOSTNAME = ENV[&#39;HOSTNAME&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use gems that require environment variables to be set before they are loaded, then list &lt;code&gt;dotenv-rails&lt;/code&gt; in the &lt;code&gt;Gemfile&lt;/code&gt; before those other gems and require &lt;code&gt;dotenv/rails-now&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;dotenv-rails&#39;, require: &#39;dotenv/rails-now&#39;&#xA;gem &#39;gem-that-requires-env-variables&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sinatra or Plain ol&#39; Ruby&lt;/h3&gt; &#xA;&lt;p&gt;Install the gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ gem install dotenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As early as possible in your application bootstrap process, load &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;dotenv/load&#39;&#xA;&#xA;# or&#xA;require &#39;dotenv&#39;&#xA;Dotenv.load&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;load&lt;/code&gt; will look for a file called &lt;code&gt;.env&lt;/code&gt; in the current working directory. Pass in multiple files and they will be loaded in order. The first value set for a variable will win.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;dotenv&#39;&#xA;Dotenv.load(&#39;file1.env&#39;, &#39;file2.env&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;code&gt;dotenv&lt;/code&gt; executable to launch your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ dotenv ./script.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;dotenv&lt;/code&gt; executable also accepts a single flag, &lt;code&gt;-f&lt;/code&gt;. Its value should be a comma-separated list of configuration files, in the order of most important to least. All of the files must exist. There &lt;em&gt;must&lt;/em&gt; be a space between the flag and its value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ dotenv -f &#34;.env.local,.env&#34; ./script.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To ensure &lt;code&gt;.env&lt;/code&gt; is loaded in rake, load the tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;dotenv/tasks&#39;&#xA;&#xA;task mytask: :dotenv do&#xA;    # things that require .env&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Add your application configuration to your &lt;code&gt;.env&lt;/code&gt; file in the root of your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;S3_BUCKET=YOURS3BUCKET&#xA;SECRET_KEY=YOURSECRETKEYGOESHERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Whenever your application loads, these variables will be available in &lt;code&gt;ENV&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.fog_directory  = ENV[&#39;S3_BUCKET&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also add &lt;code&gt;export&lt;/code&gt; in front of each line so you can &lt;code&gt;source&lt;/code&gt; the file in bash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export S3_BUCKET=YOURS3BUCKET&#xA;export SECRET_KEY=YOURSECRETKEYGOESHERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multi-line values&lt;/h3&gt; &#xA;&lt;p&gt;If you need multiline variables, for example private keys, you can double quote strings and use the &lt;code&gt;\n&lt;/code&gt; character for newlines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PRIVATE_KEY=&#34;-----BEGIN RSA PRIVATE KEY-----\nHkVN9...\n-----END DSA PRIVATE KEY-----\n&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, multi-line values with line breaks are now supported for quoted values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PRIVATE_KEY=&#34;-----BEGIN RSA PRIVATE KEY-----&#xA;...&#xA;HkVN9...&#xA;...&#xA;-----END DSA PRIVATE KEY-----&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is particularly helpful when using the Heroku command line plugin &lt;a href=&#34;https://github.com/xavdid/heroku-config&#34;&gt;&lt;code&gt;heroku-config&lt;/code&gt;&lt;/a&gt; to pull configuration variables down that may have line breaks.&lt;/p&gt; &#xA;&lt;h3&gt;Command Substitution&lt;/h3&gt; &#xA;&lt;p&gt;You need to add the output of a command in one of your variables? Simply add it with &lt;code&gt;$(your_command)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DATABASE_URL=&#34;postgres://$(whoami)@localhost/my_database&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Variable Substitution&lt;/h3&gt; &#xA;&lt;p&gt;You need to add the value of another variable in one of your variables? You can reference the variable with &lt;code&gt;${VAR}&lt;/code&gt; or often just &lt;code&gt;$VAR&lt;/code&gt; in unqoted or double-quoted values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DATABASE_URL=&#34;postgres://${USER}@localhost/my_database&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a value contains a &lt;code&gt;$&lt;/code&gt; and it is not intended to be a variable, wrap it in single quotes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PASSWORD=&#39;pas$word&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Comments&lt;/h3&gt; &#xA;&lt;p&gt;Comments may be added to your file as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# This is a comment&#xA;SECRET_KEY=YOURSECRETKEYGOESHERE # comment&#xA;SECRET_HASH=&#34;something-with-a-#-hash&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Required Keys&lt;/h3&gt; &#xA;&lt;p&gt;If a particular configuration value is required but not set, it&#39;s appropriate to raise an error.&lt;/p&gt; &#xA;&lt;p&gt;To require configuration keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/initializers/dotenv.rb&#xA;&#xA;Dotenv.require_keys(&#34;SERVICE_APP_ID&#34;, &#34;SERVICE_KEY&#34;, &#34;SERVICE_SECRET&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If any of the configuration keys above are not set, your application will raise an error during initialization. This method is preferred because it prevents runtime errors in a production application due to improper configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Parsing&lt;/h3&gt; &#xA;&lt;p&gt;To parse a list of env files for programmatic inspection without modifying the ENV:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Dotenv.parse(&#34;.env.local&#34;, &#34;.env&#34;)&#xA;# =&amp;gt; {&#39;S3_BUCKET&#39; =&amp;gt; &#39;YOURS3BUCKET&#39;, &#39;SECRET_KEY&#39; =&amp;gt; &#39;YOURSECRETKEYGOESHERE&#39;, ...}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method returns a hash of the ENV var name/value pairs.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Answered Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Can I use dotenv in production?&lt;/h3&gt; &#xA;&lt;p&gt;dotenv was originally created to load configuration variables into &lt;code&gt;ENV&lt;/code&gt; in &lt;em&gt;development&lt;/em&gt;. There are typically better ways to manage configuration in production environments - such as &lt;code&gt;/etc/environment&lt;/code&gt; managed by &lt;a href=&#34;https://github.com/puppetlabs/puppet&#34;&gt;Puppet&lt;/a&gt; or &lt;a href=&#34;https://github.com/chef/chef&#34;&gt;Chef&lt;/a&gt;, &lt;code&gt;heroku config&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;However, some find dotenv to be a convenient way to configure Rails applications in staging and production environments, and you can do that by defining environment-specific files like &lt;code&gt;.env.production&lt;/code&gt; or &lt;code&gt;.env.test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use this gem to handle env vars for multiple Rails environments (development, test, production, etc.), please note that env vars that are general to all environments should be stored in &lt;code&gt;.env&lt;/code&gt;. Then, environment specific env vars should be stored in &lt;code&gt;.env.&amp;lt;that environment&#39;s name&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What other .env* files can I use?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;dotenv-rails&lt;/code&gt; will override in the following order (highest defined variable overrides lower):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hierarchy Priority&lt;/th&gt; &#xA;   &lt;th&gt;Filename&lt;/th&gt; &#xA;   &lt;th&gt;Environment&lt;/th&gt; &#xA;   &lt;th&gt;Should I &lt;code&gt;.gitignore&lt;/code&gt;it?&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1st (highest)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.development.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Development&lt;/td&gt; &#xA;   &lt;td&gt;Yes!&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides of environment-specific settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1st&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.test.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test&lt;/td&gt; &#xA;   &lt;td&gt;Yes!&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides of environment-specific settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1st&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.production.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Production&lt;/td&gt; &#xA;   &lt;td&gt;Yes!&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides of environment-specific settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2nd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wherever the file is&lt;/td&gt; &#xA;   &lt;td&gt;Definitely.&lt;/td&gt; &#xA;   &lt;td&gt;Local overrides. This file is loaded for all environments &lt;em&gt;except&lt;/em&gt; &lt;code&gt;test&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Development&lt;/td&gt; &#xA;   &lt;td&gt;No.&lt;/td&gt; &#xA;   &lt;td&gt;Shared environment-specific settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.test&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Test&lt;/td&gt; &#xA;   &lt;td&gt;No.&lt;/td&gt; &#xA;   &lt;td&gt;Shared environment-specific settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env.production&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Production&lt;/td&gt; &#xA;   &lt;td&gt;No.&lt;/td&gt; &#xA;   &lt;td&gt;Shared environment-specific settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Last&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All Environments&lt;/td&gt; &#xA;   &lt;td&gt;Depends (See &lt;a href=&#34;https://raw.githubusercontent.com/bkeepers/dotenv/master/#should-i-commit-my-env-file&#34;&gt;below&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;The OriginalÂ®&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Should I commit my .env file?&lt;/h3&gt; &#xA;&lt;p&gt;Credentials should only be accessible on the machines that need access to them. Never commit sensitive information to a repository that is not needed by every development machine and server.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--template&lt;/code&gt; flag on the dotenv cli to create a template of your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ dotenv -t .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A template will be created in your working directory named &lt;code&gt;{FINAME}.template&lt;/code&gt;. So in the above example, it would create a &lt;code&gt;.env.template&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The template will contain all the environment variables in your &lt;code&gt;.env&lt;/code&gt; file but with their values set to the variable names.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# .env&#xA;S3_BUCKET=YOURS3BUCKET&#xA;SECRET_KEY=YOURSECRETKEYGOESHERE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Would become&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# .env.template&#xA;S3_BUCKET=S3_BUCKET&#xA;SECRET_KEY=SECRET_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Personally, I prefer to commit the &lt;code&gt;.env&lt;/code&gt; file with development-only settings. This makes it easy for other developers to get started on the project without compromising credentials for other environments. If you follow this advice, make sure that all the credentials for your development environment are different from your other deployments and that the development credentials do not have access to any confidential data.&lt;/p&gt; &#xA;&lt;h3&gt;Why is it not overriding existing &lt;code&gt;ENV&lt;/code&gt; variables?&lt;/h3&gt; &#xA;&lt;p&gt;By default, it &lt;strong&gt;won&#39;t&lt;/strong&gt; overwrite existing environment variables as dotenv assumes the deployment environment has more knowledge about configuration than the application does. To overwrite existing environment variables you can use &lt;code&gt;Dotenv.overload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--overload&lt;/code&gt; flag on the dotenv cli to override existing &lt;code&gt;ENV&lt;/code&gt; variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ dotenv -o -f &#34;.env.local,.env&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want a better idea of how dotenv works, check out the &lt;a href=&#34;https://www.youtube.com/watch?v=lKmY_0uY86s&#34;&gt;Ruby Rogues Code Reading of dotenv&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Added some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>