<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-05T01:32:54Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bullet-train-co/bullet_train</title>
    <updated>2022-07-05T01:32:54Z</updated>
    <id>tag:github.com,2022-07-05:/bullet-train-co/bullet_train</id>
    <link href="https://github.com/bullet-train-co/bullet_train" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Open Source Ruby on Rails SaaS Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sharpen.page Availability&lt;/h1&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You must have the following dependencies installed:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ruby 3 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bullet-train-co/bullet_train/main/.ruby-version&#34;&gt;&lt;code&gt;.ruby-version&lt;/code&gt;&lt;/a&gt; for the specific version.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Node 16 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bullet-train-co/bullet_train/main/.nvmrc&#34;&gt;&lt;code&gt;.nvmrc&lt;/code&gt;&lt;/a&gt; for the specific version.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;PostgreSQL 13&lt;/li&gt; &#xA;   &lt;li&gt;Redis 6.2&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.google.com/search?q=chrome&#34;&gt;Chrome&lt;/a&gt; (for headless browser tests)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;If you don&#39;t have these installed, you can use &lt;a href=&#34;https://rails.new&#34;&gt;rails.new&lt;/a&gt; to help with the process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;bin/setup&lt;/code&gt; script.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the application with &lt;code&gt;bin/dev&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Information about Bullet Train&lt;/h2&gt; &#xA;&lt;p&gt;If this is your first time working on a Bullet Train application, be sure to review the &lt;a href=&#34;https://bullettrain.co/docs/getting-started&#34;&gt;Bullet Train Basic Techniques&lt;/a&gt; and the &lt;a href=&#34;https://bullettrain.co/docs&#34;&gt;Bullet Train Developer Documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mustache/spec</title>
    <updated>2022-07-05T01:32:54Z</updated>
    <id>tag:github.com,2022-07-05:/mustache/spec</id>
    <link href="https://github.com/mustache/spec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Mustache spec.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;The repository at &lt;a href=&#34;https://github.com/mustache/spec&#34;&gt;https://github.com/mustache/spec&lt;/a&gt; is the formal standard for Mustache. It defines both normal usage and edge-case behavior for libraries parsing the Mustache templating language (or a superset thereof).&lt;/p&gt; &#xA;&lt;p&gt;The specification is developed as a series of YAML files, under the &lt;code&gt;specs&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This specification is being &lt;a href=&#34;http://semver.org&#34;&gt;semantically versioned&lt;/a&gt;. Roughly described, major version changes will always represent backwards incompatible changes, minor version changes will always represent new language features and will be backwards compatible, and patch (&#39;tiny&#39;) version changes will always be bug fixes. For the purposes of semantic versioning, the public API is the contents of the &lt;code&gt;specs&lt;/code&gt; directory and the algorithm for testing against it.&lt;/p&gt; &#xA;&lt;p&gt;Mustache implementations SHOULD report the most recent version of the spec (major and minor version numbers). If an implementation has support for any optional modules, they SHOULD indicate so with a remark attached to the version number (e.g. &#34;vX.Y, including lambdas&#34; or &#34;v.X.Y+Î»&#34;). It is RECOMMENDED that implementations not supporting at least v1.0.0 of this spec refer to themselves as &#34;Mustache-like&#34;, or &#34;Mustache-inspired&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Alternate Formats&lt;/h2&gt; &#xA;&lt;p&gt;Since YAML is a reasonably complex format that not every language has good tools for working with, we also provide JSON versions of the specs on a best-effort basis.&lt;/p&gt; &#xA;&lt;p&gt;These should be identical to the YAML specifications, but if you find the need to regenerate them, they can be trivially rebuilt by invoking &lt;code&gt;rake build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is also worth noting that some specifications (notably, the lambda module) rely on YAML &#34;tags&#34; to denote special types of data (e.g. source code). Since JSON offers no way to denote this, a special key (&#34;&lt;code&gt;__tag__&lt;/code&gt;&#34;) is injected with the name of the tag as its value. See &lt;code&gt;TESTING.md&lt;/code&gt; for more information about handling tagged data.&lt;/p&gt; &#xA;&lt;h2&gt;Optional Modules&lt;/h2&gt; &#xA;&lt;p&gt;Specification files beginning with a tilde (&lt;code&gt;~&lt;/code&gt;) describe optional modules. At present, the only module being described as optional is regarding support for lambdas. As a guideline, a module may be a candidate for optionality when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It does not affect the core syntax of the language.&lt;/li&gt; &#xA; &lt;li&gt;It does not significantly affect the output of rendered templates.&lt;/li&gt; &#xA; &lt;li&gt;It concerns implementation language features or data types that are not common to or core in every targeted language.&lt;/li&gt; &#xA; &lt;li&gt;The lack of support by an implementation does not diminish the usage of Mustache in the target language.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As an example, the lambda module is primarily concerned with the handling of a particular data type (code). This is a type of data that may be difficult to support in some languages, and users of those languages will not see the lack as an &#39;inconsistency&#39; between implementations.&lt;/p&gt; &#xA;&lt;p&gt;Support for specific pragmas or syntax extensions, however, are best managed outside this core specification, as adjunct specifications.&lt;/p&gt; &#xA;&lt;p&gt;Implementors are strongly encouraged to support any and all modules they are reasonably capable of supporting.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wpscanteam/wpscan</title>
    <updated>2022-07-05T01:32:54Z</updated>
    <id>tag:github.com,2022-07-05:/wpscanteam/wpscan</id>
    <link href="https://github.com/wpscanteam/wpscan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WPScan WordPress security scanner. Written for security professionals and blog maintainers to test the security of their WordPress websites.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://wpscan.com/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wpscanteam/wpscan/gh-pages/images/wpscan_logo.png&#34; alt=&#34;WPScan logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;WPScan&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; WordPress Security Scanner &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://wpscan.com/&#34; title=&#34;homepage&#34; target=&#34;_blank&#34;&gt;WPScan WordPress Vulnerability Database&lt;/a&gt; - &lt;a href=&#34;https://wordpress.org/plugins/wpscan/&#34; title=&#34;wordpress security plugin&#34; target=&#34;_blank&#34;&gt;WordPress Security Plugin&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://badge.fury.io/rb/wpscan&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/wpscan.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wpscanteam/wpscan/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wpscanteam/wpscan.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wpscanteam/wpscan/actions?query=workflow%3ABuild&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/wpscanteam/wpscan/workflows/Build/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/wpscanteam/wpscan&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/wpscanteam/wpscan/badges/gpa.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;INSTALL&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Optional but highly recommended: &lt;a href=&#34;https://rvm.io/rvm/install&#34;&gt;RVM&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ruby &amp;gt;= 2.5 - Recommended: latest &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ruby 2.5.0 to 2.5.3 can cause an &#39;undefined symbol: rmpd_util_str_to_d&#39; error in some systems, see &lt;a href=&#34;https://github.com/wpscanteam/wpscan/issues/1283&#34;&gt;#1283&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Curl &amp;gt;= 7.72 - Recommended: latest &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The 7.29 has a segfault&lt;/li&gt; &#xA;   &lt;li&gt;The &amp;lt; 7.72 could result in &lt;code&gt;Stream error in the HTTP/2 framing layer&lt;/code&gt; in some cases&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;RubyGems - Recommended: latest&lt;/li&gt; &#xA; &lt;li&gt;Nokogiri might require packages to be installed via your package manager depending on your OS, see &lt;a href=&#34;https://nokogiri.org/tutorials/installing_nokogiri.html&#34;&gt;https://nokogiri.org/tutorials/installing_nokogiri.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;In a Pentesting distribution&lt;/h3&gt; &#xA;&lt;p&gt;When using a pentesting distubution (such as Kali Linux), it is recommended to install/update wpscan via the package manager if available.&lt;/p&gt; &#xA;&lt;h3&gt;In macOSX via Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install wpscanteam/tap/wpscan&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;From RubyGems&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gem install wpscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On MacOSX, if a &lt;code&gt;Gem::FilePermissionError&lt;/code&gt; is raised due to the Apple&#39;s System Integrity Protection (SIP), either install RVM and install wpscan again, or run &lt;code&gt;sudo gem install -n /usr/local/bin wpscan&lt;/code&gt; (see &lt;a href=&#34;https://github.com/wpscanteam/wpscan/issues/1286&#34;&gt;#1286&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Updating&lt;/h1&gt; &#xA;&lt;p&gt;You can update the local database by using &lt;code&gt;wpscan --update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Updating WPScan itself is either done via &lt;code&gt;gem update wpscan&lt;/code&gt; or the packages manager (this is quite important for distributions such as in Kali Linux: &lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade&lt;/code&gt;) depending on how WPScan was (pre)installed&lt;/p&gt; &#xA;&lt;h1&gt;Docker&lt;/h1&gt; &#xA;&lt;p&gt;Pull the repo with &lt;code&gt;docker pull wpscanteam/wpscan&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enumerating usernames&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -it --rm wpscanteam/wpscan --url https://target.tld/ --enumerate u&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerating a range of usernames&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -it --rm wpscanteam/wpscan --url https://target.tld/ --enumerate u1-100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;** replace u1-100 with a range of your choice.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Full user documentation can be found here; &lt;a href=&#34;https://github.com/wpscanteam/wpscan/wiki/WPScan-User-Documentation&#34;&gt;https://github.com/wpscanteam/wpscan/wiki/WPScan-User-Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;wpscan --url blog.tld&lt;/code&gt; This will scan the blog using default options with a good compromise between speed and accuracy. For example, the plugins will be checked passively but their version with a mixed detection mode (passively + aggressively). Potential config backup files will also be checked, along with other interesting findings.&lt;/p&gt; &#xA;&lt;p&gt;If a more stealthy approach is required, then &lt;code&gt;wpscan --stealthy --url blog.tld&lt;/code&gt; can be used. As a result, when using the &lt;code&gt;--enumerate&lt;/code&gt; option, don&#39;t forget to set the &lt;code&gt;--plugins-detection&lt;/code&gt; accordingly, as its default is &#39;passive&#39;.&lt;/p&gt; &#xA;&lt;p&gt;For more options, open a terminal and type &lt;code&gt;wpscan --help&lt;/code&gt; (if you built wpscan from the source, you should type the command outside of the git repo)&lt;/p&gt; &#xA;&lt;p&gt;The DB is located at ~/.wpscan/db&lt;/p&gt; &#xA;&lt;h2&gt;Optional: WordPress Vulnerability Database API&lt;/h2&gt; &#xA;&lt;p&gt;The WPScan CLI tool uses the &lt;a href=&#34;https://wpscan.com/api&#34;&gt;WordPress Vulnerability Database API&lt;/a&gt; to retrieve WordPress vulnerability data in real time. For WPScan to retrieve the vulnerability data an API token must be supplied via the &lt;code&gt;--api-token&lt;/code&gt; option, or via a configuration file, as discussed below. An API token can be obtained by registering an account on &lt;a href=&#34;https://wpscan.com/register&#34;&gt;WPScan.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Up to &lt;strong&gt;75&lt;/strong&gt; API requests per day are given free of charge, that should be suitable to scan most WordPress websites at least once per day. When the daily 75 API requests are exhausted, WPScan will continue to work as normal but without any vulnerability data.&lt;/p&gt; &#xA;&lt;h3&gt;How many API requests do you need?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Our WordPress scanner makes one API request for the WordPress version, one request per installed plugin and one request per installed theme.&lt;/li&gt; &#xA; &lt;li&gt;On average, a WordPress website has 22 installed plugins.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Load CLI options from file/s&lt;/h2&gt; &#xA;&lt;p&gt;WPScan can load all options (including the --url) from configuration files, the following locations are checked (order: first to last):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;~/.wpscan/scan.json&lt;/li&gt; &#xA; &lt;li&gt;~/.wpscan/scan.yml&lt;/li&gt; &#xA; &lt;li&gt;pwd/.wpscan/scan.json&lt;/li&gt; &#xA; &lt;li&gt;pwd/.wpscan/scan.yml&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If those files exist, options from the &lt;code&gt;cli_options&lt;/code&gt; key will be loaded and overridden if found twice.&lt;/p&gt; &#xA;&lt;p&gt;e.g:&lt;/p&gt; &#xA;&lt;p&gt;~/.wpscan/scan.yml:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;cli_options:&#xA;  proxy: &#39;http://127.0.0.1:8080&#39;&#xA;  verbose: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;pwd/.wpscan/scan.yml:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;cli_options:&#xA;  proxy: &#39;socks5://127.0.0.1:9090&#39;&#xA;  url: &#39;http://target.tld&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running &lt;code&gt;wpscan&lt;/code&gt; in the current directory (pwd), is the same as &lt;code&gt;wpscan -v --proxy socks5://127.0.0.1:9090 --url http://target.tld&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Save API Token in a file&lt;/h2&gt; &#xA;&lt;p&gt;The feature mentioned above is useful to keep the API Token in a config file and not have to supply it via the CLI each time. To do so, create the ~/.wpscan/scan.yml file containing the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;cli_options:&#xA;  api_token: YOUR_API_TOKEN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Load API Token From ENV (since v3.7.10)&lt;/h2&gt; &#xA;&lt;p&gt;The API Token will be automatically loaded from the ENV variable &lt;code&gt;WPSCAN_API_TOKEN&lt;/code&gt; if present. If the &lt;code&gt;--api-token&lt;/code&gt; CLI option is also provided, the value from the CLI will be used.&lt;/p&gt; &#xA;&lt;h2&gt;Enumerating usernames&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wpscan --url https://target.tld/ --enumerate u&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerating a range of usernames&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wpscan --url https://target.tld/ --enumerate u1-100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;** replace u1-100 with a range of your choice.&lt;/p&gt; &#xA;&lt;h1&gt;LICENSE&lt;/h1&gt; &#xA;&lt;h2&gt;WPScan Public Source License&lt;/h2&gt; &#xA;&lt;p&gt;The WPScan software (henceforth referred to simply as &#34;WPScan&#34;) is dual-licensed - Copyright 2011-2019 WPScan Team.&lt;/p&gt; &#xA;&lt;p&gt;Cases that include commercialization of WPScan require a commercial, non-free license. Otherwise, WPScan can be used without charge under the terms set out below.&lt;/p&gt; &#xA;&lt;h3&gt;1. Definitions&lt;/h3&gt; &#xA;&lt;p&gt;1.1 &#34;License&#34; means this document.&lt;/p&gt; &#xA;&lt;p&gt;1.2 &#34;Contributor&#34; means each individual or legal entity that creates, contributes to the creation of, or owns WPScan.&lt;/p&gt; &#xA;&lt;p&gt;1.3 &#34;WPScan Team&#34; means WPScanâs core developers.&lt;/p&gt; &#xA;&lt;h3&gt;2. Commercialization&lt;/h3&gt; &#xA;&lt;p&gt;A commercial use is one intended for commercial advantage or monetary compensation.&lt;/p&gt; &#xA;&lt;p&gt;Example cases of commercialization are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using WPScan to provide commercial managed/Software-as-a-Service services.&lt;/li&gt; &#xA; &lt;li&gt;Distributing WPScan as a commercial product or as part of one.&lt;/li&gt; &#xA; &lt;li&gt;Using WPScan as a value added service/product.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example cases which do not require a commercial license, and thus fall under the terms set out below, include (but are not limited to):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Penetration testers (or penetration testing organizations) using WPScan as part of their assessment toolkit.&lt;/li&gt; &#xA; &lt;li&gt;Penetration Testing Linux Distributions including but not limited to Kali Linux, SamuraiWTF, BackBox Linux.&lt;/li&gt; &#xA; &lt;li&gt;Using WPScan to test your own systems.&lt;/li&gt; &#xA; &lt;li&gt;Any non-commercial use of WPScan.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need to purchase a commercial license or are unsure whether you need to purchase a commercial license contact us - &lt;a href=&#34;mailto:contact@wpscan.com&#34;&gt;contact@wpscan.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Free-use Terms and Conditions;&lt;/p&gt; &#xA;&lt;h3&gt;3. Redistribution&lt;/h3&gt; &#xA;&lt;p&gt;Redistribution is permitted under the following conditions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unmodified License is provided with WPScan.&lt;/li&gt; &#xA; &lt;li&gt;Unmodified Copyright notices are provided with WPScan.&lt;/li&gt; &#xA; &lt;li&gt;Does not conflict with the commercialization clause.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Copying&lt;/h3&gt; &#xA;&lt;p&gt;Copying is permitted so long as it does not conflict with the Redistribution clause.&lt;/p&gt; &#xA;&lt;h3&gt;5. Modification&lt;/h3&gt; &#xA;&lt;p&gt;Modification is permitted so long as it does not conflict with the Redistribution clause.&lt;/p&gt; &#xA;&lt;h3&gt;6. Contributions&lt;/h3&gt; &#xA;&lt;p&gt;Any Contributions assume the Contributor grants the WPScan Team the unlimited, non-exclusive right to reuse, modify and relicense the Contributor&#39;s content.&lt;/p&gt; &#xA;&lt;h3&gt;7. Support&lt;/h3&gt; &#xA;&lt;p&gt;WPScan is provided under an AS-IS basis and without any support, updates or maintenance. Support, updates and maintenance may be given according to the sole discretion of the WPScan Team.&lt;/p&gt; &#xA;&lt;h3&gt;8. Disclaimer of Warranty&lt;/h3&gt; &#xA;&lt;p&gt;WPScan is provided under this License on an âas isâ basis, without warranty of any kind, either expressed, implied, or statutory, including, without limitation, warranties that the WPScan is free of defects, merchantable, fit for a particular purpose or non-infringing.&lt;/p&gt; &#xA;&lt;h3&gt;9. Limitation of Liability&lt;/h3&gt; &#xA;&lt;p&gt;To the extent permitted under Law, WPScan is provided under an AS-IS basis. The WPScan Team shall never, and without any limit, be liable for any damage, cost, expense or any other payment incurred as a result of WPScan&#39;s actions, failure, bugs and/or any other interaction between WPScan and end-equipment, computers, other software or any 3rd party, end-equipment, computer or services.&lt;/p&gt; &#xA;&lt;h3&gt;10. Disclaimer&lt;/h3&gt; &#xA;&lt;p&gt;Running WPScan against websites without prior mutual consent may be illegal in your country. The WPScan Team accept no liability and are not responsible for any misuse or damage caused by WPScan.&lt;/p&gt; &#xA;&lt;h3&gt;11. Trademark&lt;/h3&gt; &#xA;&lt;p&gt;The &#34;wpscan&#34; term is a registered trademark. This License does not grant the use of the &#34;wpscan&#34; trademark or the use of the WPScan logo.&lt;/p&gt;</summary>
  </entry>
</feed>