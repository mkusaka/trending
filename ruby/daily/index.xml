<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-15T01:36:35Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>67272-App-Design-Dev/University</title>
    <updated>2024-02-15T01:36:35Z</updated>
    <id>tag:github.com,2024-02-15:/67272-App-Design-Dev/University</id>
    <link href="https://github.com/67272-App-Design-Dev/University" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Starter code for a series of class exercises in 67-272&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;67-272: University&lt;/h1&gt; &#xA;&lt;p&gt;This project was created as means of giving students an opportunity to practice course concepts with some in-class learning exercises. There is no pretense that this is a production-ready system or that it has 100 percent test coverage -- these are for learning purposes.&lt;/p&gt; &#xA;&lt;p&gt;Some items and helper files have been added in advance to speed up time in-class to complete these exercises. For example, Prof. H&#39;s &lt;code&gt;minitest_extensions&lt;/code&gt; module is present and included in &lt;code&gt;test/test_helper.rb&lt;/code&gt; by default. Another example is that &lt;code&gt;validates_timeliness&lt;/code&gt; gem is installed and the initializer for that gem has also been run for you. Note that time zone in &lt;code&gt;config/application.rb&lt;/code&gt; was defaulted to Eastern (Pgh) time; feel free to change this as appropriate.&lt;/p&gt; &#xA;&lt;p&gt;You may work and talk with others in class for help completing this exercise.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions for Part 1&lt;/h2&gt; &#xA;&lt;p&gt;Having cloned this repo to your laptop (recommended) or gotten the zip file from GitHub, we need to set up the project as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install gems with &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the database with &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open up &lt;code&gt;app/models/department.rb&lt;/code&gt; and review the code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open up &lt;code&gt;app/models/faculty.rb&lt;/code&gt; and review the code comments given&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open up &lt;code&gt;test/models/faculty_test.rb&lt;/code&gt; and complete the tests so the methods commented on will be covered properly and completely&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;this will require you to set up a context for faculty (skelton already in place). Looking at the factory file for faculty, you see that Prof. Q is the default faculty member; probably a good idea to create the first faculty object as &lt;code&gt;@profq&lt;/code&gt;. Of course, also make sure that not every faculty you create is named &#39;Jeria Quesenberry&#39; ;-)&lt;/li&gt; &#xA;   &lt;li&gt;before testing, load the testing data into a clean copy of your dev database with the command &lt;code&gt;rails db:contexts&lt;/code&gt;. (&lt;em&gt;Note that this is not built into Rails; it was written for you and also exists in your project starter code.&lt;/em&gt;) Once that&#39;s done and the contexts build without error, re-open rails console and run &lt;code&gt;Department.all&lt;/code&gt; and &lt;code&gt;Faculty.all&lt;/code&gt; and see that the testing context data is loaded in the dev environment.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the tests and see that tests for department passes while tests for faculty fail.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Complete the code in &lt;code&gt;app/models/faculty.rb&lt;/code&gt; so that the tests pass with 100% test coverage&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;What would &lt;code&gt;Faculty.alphabetical.active.first.department&lt;/code&gt; return in rails console? Go to rails console and verify that you are correct (or if not, figure out why you were wrong)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Qapla&#39;&lt;/p&gt; &#xA;&lt;p&gt;Prof. H &amp;amp; Prof. Shihong&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jquery-ui-rails/jquery-ui-rails</title>
    <updated>2024-02-15T01:36:35Z</updated>
    <id>tag:github.com,2024-02-15:/jquery-ui-rails/jquery-ui-rails</id>
    <link href="https://github.com/jquery-ui-rails/jquery-ui-rails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;jQuery UI for the Rails asset pipeline&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jquery-ui-rails&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/jquery-ui-rails/jquery-ui-rails&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jquery-ui-rails/jquery-ui-rails.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gemnasium.com/jquery-ui-rails/jquery-ui-rails&#34;&gt;&lt;img src=&#34;https://gemnasium.com/jquery-ui-rails/jquery-ui-rails.svg?sanitize=true&#34; alt=&#34;Dependency Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This gem packages the jQuery UI assets (JavaScripts, stylesheets, and images) for the Rails &lt;a href=&#34;http://guides.rubyonrails.org/asset_pipeline.html&#34;&gt;asset pipeline&lt;/a&gt;, so you never have to download a custom package through the &lt;a href=&#34;http://jqueryui.com/download&#34;&gt;web interface&lt;/a&gt; again.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/jquery-ui-rails/jquery-ui-rails/master/VERSIONS.md&#34;&gt;VERSIONS.md&lt;/a&gt; to see which versions of jquery-ui-rails bundle which versions of jQuery UI.&lt;/p&gt; &#xA;&lt;p&gt;Warning: This gem is incompatible with the &lt;code&gt;jquery-rails&lt;/code&gt; gem before version 3.0.0! Strange things will happen if you use an earlier &lt;code&gt;jquery-rails&lt;/code&gt; version. Run &lt;code&gt;bundle list&lt;/code&gt; to ensure that you either aren&#39;t using &lt;code&gt;jquery-rails&lt;/code&gt;, or at least version 3.0.0 of &lt;code&gt;jquery-rails&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In your Gemfile, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;jquery-ui-rails&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Require Everything&lt;/h2&gt; &#xA;&lt;p&gt;To require all jQuery UI modules, add the following to your application.js:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also add the jQuery UI CSS to your application.css:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/*&#xA; *= require jquery-ui&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Warning:&lt;/h3&gt; &#xA;&lt;p&gt;Due to directory structure changes between jQuery UI 1.10, 1.11, and 1.12, if you use version is lower than 6.0, you will have to use a different naming for the files to require, please check following links for more information: &lt;a href=&#34;https://github.com/jquery-ui-rails/jquery-ui-rails/raw/v5.0.5/README.md&#34;&gt;for 5.0 users&lt;/a&gt;, &lt;a href=&#34;https://github.com/jquery-ui-rails/jquery-ui-rails/raw/v4.2.1/README.md&#34;&gt;for 4.2 users&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All images required by jQuery UI are automatically served through the asset pipeline, so you are good to go! For example, this code will add a &lt;a href=&#34;http://jqueryui.com/demos/datepicker/&#34;&gt;datepicker&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;$(function() {&#xA;  $(&#39;.datepicker&#39;).datepicker();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Require Specific Modules&lt;/h2&gt; &#xA;&lt;p&gt;The jQuery UI code weighs 51KB (minified + gzipped) and takes a while to execute, so for production apps it&#39;s recommended to only include the modules that your application actually uses. Dependencies are automatically resolved. Simply pick one or more modules from the asset list below.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you only need the datepicker module, add this to your application.js:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/widgets/datepicker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your application.css, require the corresponding CSS module (notice no &lt;code&gt;widgets/&lt;/code&gt; subdirectory here):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/*&#xA; *= require jquery-ui/datepicker&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JavaScript Assets&lt;/h2&gt; &#xA;&lt;h3&gt;UI Core&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/core&#xA;//= require jquery-ui/widget&#xA;//= require jquery-ui/position&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You usually do not need to require these directly, as they are pulled in by the other JavaScript modules as needed.&lt;/p&gt; &#xA;&lt;h3&gt;Interactions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/widgets/mouse&#xA;//= require jquery-ui/widgets/draggable&#xA;//= require jquery-ui/widgets/droppable&#xA;//= require jquery-ui/widgets/resizable&#xA;//= require jquery-ui/widgets/selectable&#xA;//= require jquery-ui/widgets/sortable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all but &lt;code&gt;jquery-ui/mouse&lt;/code&gt; and &lt;code&gt;jquery-ui/droppable&lt;/code&gt;, remember to &lt;code&gt;require&lt;/code&gt; their matching CSS files in your application.css as well.&lt;/p&gt; &#xA;&lt;h3&gt;Widgets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/widgets/accordion&#xA;//= require jquery-ui/widgets/autocomplete&#xA;//= require jquery-ui/widgets/button&#xA;//= require jquery-ui/widgets/datepicker&#xA;//= require jquery-ui/widgets/dialog&#xA;//= require jquery-ui/widgets/menu&#xA;//= require jquery-ui/widgets/progressbar&#xA;//= require jquery-ui/widgets/selectmenu&#xA;//= require jquery-ui/widgets/slider&#xA;//= require jquery-ui/widgets/spinner&#xA;//= require jquery-ui/widgets/tabs&#xA;//= require jquery-ui/widgets/tooltip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all of these, remember to &lt;code&gt;require&lt;/code&gt; their matching CSS files in your application.css as well.&lt;/p&gt; &#xA;&lt;h4&gt;I18n&lt;/h4&gt; &#xA;&lt;p&gt;Datepicker has optional i18n modules for non-US locales, named &lt;code&gt;jquery-ui/datepicker-xx[-YY]&lt;/code&gt; (&lt;a href=&#34;https://github.com/jquery-ui-rails/jquery-ui-rails/tree/master/app/assets/javascripts&#34;&gt;list&lt;/a&gt;), for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/widgets/datepicker&#xA;//= require jquery-ui/i18n/datepicker-pt-BR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that you still need to include the main datepicker module. It is not required automatically &lt;a href=&#34;https://github.com/jquery-ui-rails/jquery-ui-rails/issues/9#issuecomment-6524987&#34;&gt;for performance reasons&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Effects&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/effect.all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require jquery-ui/effect&#xA;//= require jquery-ui/effects/effect-blind&#xA;//= require jquery-ui/effects/effect-bounce&#xA;//= require jquery-ui/effects/effect-clip&#xA;//= require jquery-ui/effects/effect-drop&#xA;//= require jquery-ui/effects/effect-explode&#xA;//= require jquery-ui/effects/effect-fade&#xA;//= require jquery-ui/effects/effect-fold&#xA;//= require jquery-ui/effects/effect-highlight&#xA;//= require jquery-ui/effects/effect-puff&#xA;//= require jquery-ui/effects/effect-pulsate&#xA;//= require jquery-ui/effects/effect-scale&#xA;//= require jquery-ui/effects/effect-shake&#xA;//= require jquery-ui/effects/effect-size&#xA;//= require jquery-ui/effects/effect-slide&#xA;//= require jquery-ui/effects/effect-transfer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stylesheet Assets&lt;/h2&gt; &#xA;&lt;h3&gt;UI Core&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/*&#xA; *= require jquery-ui/core&#xA; *= require jquery-ui/theme&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You might want to require these if you do not use any of the following modules, but still want jQuery UI&#39;s basic theming CSS. Otherwise they are automatically pulled in as dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Interactions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/*&#xA; *= require jquery-ui/draggable&#xA; *= require jquery-ui/resizable&#xA; *= require jquery-ui/selectable&#xA; *= require jquery-ui/sortable&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Widgets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/*&#xA; *= require jquery-ui/accordion&#xA; *= require jquery-ui/autocomplete&#xA; *= require jquery-ui/button&#xA; *= require jquery-ui/datepicker&#xA; *= require jquery-ui/dialog&#xA; *= require jquery-ui/menu&#xA; *= require jquery-ui/progressbar&#xA; *= require jquery-ui/selectmenu&#xA; *= require jquery-ui/slider&#xA; *= require jquery-ui/spinner&#xA; *= require jquery-ui/tabs&#xA; *= require jquery-ui/tooltip&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Bug Reports&lt;/h3&gt; &#xA;&lt;p&gt;For bugs in jQuery UI itself, head to the &lt;a href=&#34;http://jqueryui.com/development&#34;&gt;jQuery UI Development Center&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For bugs in this gem distribution, use the GitHub issue tracker.&lt;/p&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;jquery-ui-rails&lt;/code&gt; gem should work in Ruby 1.8.7 apps. To run the rake tasks, you need Ruby 1.9 however.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git://github.com/jquery-ui-rails/jquery-ui-rails.git&#xA;cd jquery-ui-rails&#xA;git submodule update --init&#xA;bundle install&#xA;bundle exec rake # rebuild assets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most of the code lives in the &lt;code&gt;Rakefile&lt;/code&gt;. Pull requests are more than welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Hacking jQuery UI&lt;/h3&gt; &#xA;&lt;p&gt;The jquery-ui-rails repository is &lt;a href=&#34;http://www.solitr.com/blog/2012/04/contributor-friendly-gems/&#34;&gt;contributor-friendly&lt;/a&gt; and has a git submodule containing the official &lt;a href=&#34;https://github.com/jquery/jquery-ui&#34;&gt;jquery-ui repo&lt;/a&gt;. This way it&#39;s easy to hack the jQuery UI code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd jquery-ui&#xA;git checkout master  # or 1-8-stable&#xA;... hack-hack-hack ...&#xA;bundle exec rake  # rebuild assets based on your changes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assuming your app&#39;s Gemfile points at your jquery-ui-rails checkout (&lt;code&gt;gem &#39;jquery-ui-rails&#39;, :path =&amp;gt; &#39;~/path/to/jquery-ui-rails&#39;&lt;/code&gt;), all you need to do now is refresh your browser, and your changes to jQuery UI are live in your Rails application.&lt;/p&gt; &#xA;&lt;p&gt;You can send pull requests to the &lt;a href=&#34;https://github.com/jquery/jquery-ui&#34;&gt;jquery-ui&lt;/a&gt; GitHub project straight out of your submodule. See also their &lt;a href=&#34;http://wiki.jqueryui.com/w/page/35263114/Getting-Involved&#34;&gt;Getting Involved&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;As a smoke test, a &lt;code&gt;testapp&lt;/code&gt; application is available in the repository, which displays a check mark and a datepicker to make sure the assets load correctly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd testapp&#xA;bundle install&#xA;rails server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now point your browser at &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Releasing&lt;/h3&gt; &#xA;&lt;p&gt;Be sure that &lt;code&gt;VERSIONS.md&lt;/code&gt;, &lt;code&gt;History.md&lt;/code&gt; and &lt;code&gt;lib/jquery/ui/rails/version.rb&lt;/code&gt; are up-to-date. Then build and push like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rake build&#xA;gem push pkg/jquery-ui-rails-X.Y.Z.gem&#xA;git tag vX.Y.Z&#xA;git push --tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Only the base theme (Smoothness) is included. Once it becomes possible to &lt;a href=&#34;https://forum.jquery.com/topic/downloading-bundling-all-themes#14737000003080244&#34;&gt;generate all theme files&lt;/a&gt; from the jQuery UI sources, we can package all the other themes in the &lt;a href=&#34;http://jqueryui.com/themeroller/&#34;&gt;ThemeRoller&lt;/a&gt; gallery.&lt;/p&gt; &lt;p&gt;Perhaps we can also add helper tasks to help developers generate assets for their own custom themes or for third-party themes (like &lt;a href=&#34;http://gravityonmars.github.com/Selene/&#34;&gt;Selene&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;If you still want a different theme right now, you could probably download a custom theme and require the theme CSS &lt;em&gt;after&lt;/em&gt; requiring any other jQuery UI CSS files you need, making sure to serve up the theme images correctly. (This is arguably cumbersome, not officially supported by this gem, and adds 1 KB overhead as both the base theme and the custom theme are served up.)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>