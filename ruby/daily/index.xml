<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T01:34:38Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Bishwas-py/deviser-club</title>
    <updated>2022-08-14T01:34:38Z</updated>
    <id>tag:github.com,2022-08-14:/Bishwas-py/deviser-club</id>
    <link href="https://github.com/Bishwas-py/deviser-club" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A discussion club for devised people: Open source medium alternative&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deviser Club : A Multi Blogging Platform with Ruby On Rails&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Open source medium alternative: A discussion club for devised people&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://deviser.club/&#34;&gt;Deviser Club&lt;/a&gt; is developed with the heart of publishers freedom and author&#39;s authority, with better audience experience. No overly complexified stuff here, simple is better than complex.&lt;/p&gt; &#xA;&lt;p&gt;Ruby on &lt;code&gt;Rails 7&lt;/code&gt; is used to develop this blogging platform. It is still on development mode, any one who is willing to contribute is welcomed.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install &lt;strong&gt;Deviser Club&lt;/strong&gt; in two main ways; Straight Forward Installation and Docker Installation. I am still figuring out the docker part. So, I will make a straight forward installation guide for now.&lt;/p&gt; &#xA;&lt;h3&gt;Straight Forward Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install Deviser Club, you need to have &lt;code&gt;Ruby 2.7&lt;/code&gt; installed. &lt;code&gt;Ruby 2.7&lt;/code&gt; is the default version of Ruby.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install ruby&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you have to install a dependency for OG Image generation Deviser Club.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install ruby-rmagick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you call install &lt;code&gt;Rails 7.0.3&lt;/code&gt; and other essential gems by using &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Development Essentials&lt;/h4&gt; &#xA;&lt;p&gt;To start the development, you need to create a &lt;code&gt;development&lt;/code&gt; database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rails db:create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you need to migrate the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rails db:migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For mailing in development, our Deviser Club uses &lt;code&gt;mailcatcher&lt;/code&gt;, which will automatically get install while doing &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Production Essentials and Deployment&lt;/h4&gt; &#xA;&lt;p&gt;For production, you need to create a &lt;code&gt;production&lt;/code&gt; database, manage some paths and you&#39;re good to go.&lt;/p&gt; &#xA;&lt;h5&gt;Git Clone&lt;/h5&gt; &#xA;&lt;p&gt;Go to &lt;code&gt;cd ~/&lt;/code&gt; and then &lt;code&gt;git clone https://github.com/Bishwas-py/deviser-club.git&lt;/code&gt;, and then cd inside the folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/deviser-club&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Database&lt;/h5&gt; &#xA;&lt;p&gt;Create a postgresql (or any well functioning database you want) user and database&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo -u postgres psql postgres&#xA;create database deviser_club_database_name;&#xA;create user deviser_club_database_username with encrypted password &#39;deviser_club_database_password&#39;;&#xA;grant all privileges on database deviser_club_database_name to deviser_club_database_username;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, copy the &lt;code&gt;database.yml.sample&lt;/code&gt; to &lt;code&gt;database.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp config/database.yml.sample config/database.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then, inside your &lt;code&gt;database.yml&lt;/code&gt; edit the given credentials for the database. You have to replace database name, username and password with &lt;code&gt;deviser_club_database_name&lt;/code&gt;, &lt;code&gt;deviser_club_database_username&lt;/code&gt; and &lt;code&gt;deviser_club_database_password&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;default: &amp;amp;default&#xA;  adapter: sqlite3&#xA;  pool: &amp;lt;%= ENV.fetch(&#34;RAILS_MAX_THREADS&#34;) { 5 } %&amp;gt;&#xA;  timeout: 5000&#xA;...&#xA;production:&#xA;  adapter: postgresql&#xA;  encoding: unicode&#xA;  host: localhost&#xA;  pool: 5&#xA;  database: deviser_club_database_name&#xA;  username: deviser_club_database_username&#xA;  password: deviser_club_database_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Run migration&lt;/h5&gt; &#xA;&lt;p&gt;Now, you need to migrate the database explicitly for production.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RAILS_ENV=production bundle exec rails db:migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Email Setup&lt;/h5&gt; &#xA;&lt;p&gt;Do &lt;code&gt;rails credentials:edit&lt;/code&gt; for setting environment variable for email.&lt;/p&gt; &#xA;&lt;p&gt;For that, type following commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;RAILS_ENV=production bundle exec EDITOR=vim rails credentials:edit&#xA;# probably you might need sudo authority&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, add the following data below of the file according to your choice.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;mail:&#xA;     method: :smtp&#xA;     from_email: &#39;Platform Name &amp;lt;no-reply@platform.club&amp;gt;&#39; &#xA;     host_name: platform.club&#xA;     address: host.ip.address&#xA;     domain: platform.club&#xA;     port: 587&#xA;     user_name: smtp_username&#xA;     password: smtp_password&#xA;&#xA;# replace `platform` with your platform name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Check server&lt;/h5&gt; &#xA;&lt;p&gt;Allow port &lt;code&gt;3000&lt;/code&gt; by &lt;code&gt;ufw&lt;/code&gt; or equivalent, and go to &lt;code&gt;http://SERVER.PUBLIC.IP.ADDRESS:3000&lt;/code&gt;, and it&#39;ll show your webapp, which is the sign of good installation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;RAILS_ENV=production bundle exec rails s -p 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Deployment&lt;/h5&gt; &#xA;&lt;p&gt;To deploy your app, you need to install &lt;code&gt;capistrano&lt;/code&gt; and &lt;code&gt;capistrano-rails&lt;/code&gt; must of the time. If you want that you can do that too but for me, I like doing things manually.&lt;/p&gt; &#xA;&lt;h6&gt;Make &lt;code&gt;assets&lt;/code&gt;&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;RAILS_ENV=production bundle exec rails assets:precompile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Setup Nginx&lt;/h6&gt; &#xA;&lt;p&gt;Make a file in &lt;code&gt;/etc/nginx/sites-enabled&lt;/code&gt; called &lt;code&gt;deviser-club&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server {&#xA;  listen 80;&#xA;  listen [::]:80;&#xA; &#xA;  server_name example.com; # your site domain like: deviser.club&#xA;  root /home/server_user/deviser-club/public;&#xA;&#xA;  passenger_enabled on;&#xA;  passenger_app_env production;&#xA;&#xA;  location /cable {&#xA;    passenger_app_group_name deviser-club_websocket;&#xA;    passenger_force_max_concurrent_requests_per_process 0;&#xA;  }&#xA;&#xA;  # Allow uploads up to 100MB in size&#xA;  client_max_body_size 100m;&#xA;&#xA;  location ~ ^/(assets|packs) {&#xA;    expires max;&#xA;    gzip_static on;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, restart nginx.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo service nginx restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check, nginx status.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo service nginx status&#xA;&#xA;‚óè nginx.service - A high performance web server and a reverse proxy server&#xA;     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: en&amp;gt;&#xA;     Active: active (running) since Sun 2022-08-07 19:09:01 UTC; 7h ago&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hooray! You have successfully installed Deviser Club&lt;/h3&gt; &#xA;&lt;p&gt;Congratulations! You have successfully installed Deviser Club. Now, you can go to your domain url and start serving the world through Deviser Club.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;Here are some screenshots of deviser club &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409826-bbed839c-93f7-4db6-8c96-f245683bfad0.png&#34; alt=&#34;home&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409854-5001ebdb-fc32-4979-98df-0614ecb9d429.png&#34; alt=&#34;bookmarks&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409868-15624423-d255-4a43-b8e8-eaefbdbaab4f.png&#34; alt=&#34;post page&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409883-f07c18fd-e8d6-435c-a6c0-414e4b2f789e.png&#34; alt=&#34;comments in posts&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409916-f15c4c61-543c-4255-a20b-be651dbd556d.png&#34; alt=&#34;quick tweets&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409928-d2e61f03-d0e2-47db-bc78-18753b815463.png&#34; alt=&#34;comment in quick tweets&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/42182303/183409938-9f3e6992-4acf-4198-bf23-da9c8f57dfc4.png&#34; alt=&#34;writing a post&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bhserna/active_record_playground_runner</title>
    <updated>2022-08-14T01:34:38Z</updated>
    <id>tag:github.com,2022-08-14:/bhserna/active_record_playground_runner</id>
    <link href="https://github.com/bhserna/active_record_playground_runner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for to run active record examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Active Record Playground Runner&lt;/h1&gt; &#xA;&lt;p&gt;A tool for to run active record examples.&lt;/p&gt; &#xA;&lt;p&gt;This will help you play with Active Record and Postgres, without the thinking in the database setup.&lt;/p&gt; &#xA;&lt;p&gt;You will be able to declare, schema, models, seeds and examples in just one file, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;schema do&#xA;  create_table :posts do |t|&#xA;    t.string :title&#xA;    t.text :body&#xA;  end&#xA;&#xA;  create_table :comments do |t|&#xA;    t.text :body&#xA;    t.integer :post_id&#xA;  end&#xA;&#xA;  add_index :comments, :post_id&#xA;end&#xA;&#xA;models do&#xA;  class Post &amp;lt; ActiveRecord::Base&#xA;    has_many :comments&#xA;  end&#xA;&#xA;  class Comment &amp;lt; ActiveRecord::Base&#xA;    belongs_to :post&#xA;  end&#xA;end&#xA;&#xA;seeds do&#xA;  posts = create_list(Post, count: 10) do&#xA;    {&#xA;      title: FFaker::CheesyLingo.title,&#xA;      body: FFaker::CheesyLingo.paragraph&#xA;    }&#xA;  end&#xA;&#xA;  create_list_for_each_record(Comment, records: posts, count: 20) do |post|&#xA;    {&#xA;      post_id: post.id,&#xA;      body: FFaker::CheesyLingo.sentence&#xA;    }&#xA;  end&#xA;end&#xA;&#xA;example &#34;first&#34; do&#xA;  Post.includes(:comments).limit(5).map do |post|&#xA;    puts post.comments.count&#xA;  end&#xA;end&#xA;&#xA;example &#34;second&#34; do&#xA;  Post.includes(:comments).limit(5).map do |post|&#xA;    puts post.comments.size&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the run it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec run_playground file_name.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And it will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create the database with a random name&lt;/li&gt; &#xA; &lt;li&gt;Load the schema&lt;/li&gt; &#xA; &lt;li&gt;Run the seeds&lt;/li&gt; &#xA; &lt;li&gt;Run the examples with a nice format and with the logger turned on.&lt;/li&gt; &#xA; &lt;li&gt;Drop the database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why this tool?&lt;/h2&gt; &#xA;&lt;p&gt;I prepared a lot of examples for the ebook &lt;a href=&#34;https://bhserna.com/avoid-n-plus-1-queries-on-rails.html&#34;&gt;Avoid n+1 queries on rails&lt;/a&gt; using the first version of my &lt;a href=&#34;https://github.com/bhserna/active_record_playground&#34;&gt;Active Record Playground&lt;/a&gt;. A template to help in the setup of an environment with Active Record.&lt;/p&gt; &#xA;&lt;p&gt;With the old template it was is hard to write a lot of examples with the same database schema, and it was hard to setup a project for each schema.&lt;/p&gt; &#xA;&lt;p&gt;With this tool is much more easier to create examples with different schemas because you don&#39;t need to setup a whole project directory for each schema.&lt;/p&gt; &#xA;&lt;p&gt;It makes it easier to create more and more diverse examples. And also helping the people that see the examples to focus just on the example code instead of the project setup.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your project&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;active_record_playground_runner&#39;, &#34;~&amp;gt; 0.1.0&#34;, github: &#34;bhserna/active_record_playground_runner&#34;, branch: &#34;main&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;p&gt;Read more on: &lt;a href=&#34;https://bhserna.com/active-record-playground-runner-introduction.html&#34;&gt;https://bhserna.com/active-record-playground-runner-introduction.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;After checking out the repo, run &lt;code&gt;bin/setup&lt;/code&gt; to install dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Then, run &lt;code&gt;bin/run_playground examples/00_example.rb&lt;/code&gt; to run test example.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&#34;https://github.com/bhserna/active_record_playground_runner&#34;&gt;https://github.com/bhserna/active_record_playground_runner&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The gem is available as open source under the terms of the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>