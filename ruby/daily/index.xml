<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-25T01:39:55Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>koffeinfrei/unnote</title>
    <updated>2023-09-25T01:39:55Z</updated>
    <id>tag:github.com,2023-09-25:/koffeinfrei/unnote</id>
    <link href="https://github.com/koffeinfrei/unnote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The note taking app that doesn&#39;t suck&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/panter/unnote/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/koffeinfrei/unnote/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/panter/mykonote&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/codeclimate/codeclimate/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-panter-mykonote-main&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/6f0e1968-b451-4cb9-84d9-9cc49c68e64f&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;unnote&lt;/h1&gt; &#xA;&lt;p&gt;Formerly known as Mykonote.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Full / Desktop&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koffeinfrei/unnote/main/screenshot_desktop.png&#34; alt=&#34;desktop&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mobile / PWA&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/koffeinfrei/unnote/main/screenshot_mobile_1.png&#34; alt=&#34;mobile note&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/koffeinfrei/unnote/main/screenshot_mobile_2.png&#34; alt=&#34;mobile list&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The note taking app that doesn&#39;t suck. Made under the Mykonian sun.&lt;/p&gt; &#xA;&lt;p&gt;The goal of this project is to provide a solid note taking app with just the core functionality. There won&#39;t be any fancy unnecessary features such as a chat. It basically meets the one requirement: Taking and managing private notes.&lt;/p&gt; &#xA;&lt;p&gt;What unnote offers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;http://quilljs.com/&#34;&gt;solid richtext editor&lt;/a&gt; which works properly without ruining the formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/koffeinfrei/quill-task-list&#34;&gt;Task lists&lt;/a&gt; (aka. todo lists)&lt;/li&gt; &#xA; &lt;li&gt;PWA, so it can be installed as an app on any mobile device &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for the &#34;share to&#34; functionality of mobile phones. Pretty much any image or text based content can be shared to unnote.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Autosave&lt;/li&gt; &#xA; &lt;li&gt;Permanent edit mode. There&#39;s no switching between read and edit mode. Just edit, always.&lt;/li&gt; &#xA; &lt;li&gt;Pseudo offline support, so you don&#39;t lose data when the connection is bad or even missing. The next time the internet is up again your edits will be synced to the server.&lt;/li&gt; &#xA; &lt;li&gt;A simple and fast user experience&lt;/li&gt; &#xA; &lt;li&gt;An always available and easy to use search&lt;/li&gt; &#xA; &lt;li&gt;A donkey logo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/philosophy/free-sw.html&#34;&gt;Free and open source software&lt;/a&gt;. There is no &lt;a href=&#34;https://en.wikipedia.org/wiki/Vendor_lock-in&#34;&gt;vendor lock-in&lt;/a&gt; and there will never be any weird business going on with your data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development setup&lt;/h2&gt; &#xA;&lt;p&gt;To get the application started the standard rails setup routine can be executed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now start the application and give it a try at &lt;a href=&#34;http://localhost:3000&#34;&gt;localhost:3000&lt;/a&gt;. There&#39;s a demo user &lt;code&gt;user@example.com&lt;/code&gt; with the password &lt;code&gt;asdfasdf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;For the capybara e2e tests headless firefox / geckodriver is used.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/channel/desktop/&#34;&gt;Download latest firefox beta&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/geckodriver/releases/latest&#34;&gt;Download latest geckodriver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Put both binaries in your &lt;code&gt;$PATH&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure to build the client before running RSpec.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle exec rake client:build_and_deploy&#xA;$ bundle exec rspec spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Releases (Versioning / Changelog)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; is used, obviously.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a script that bumps the version, generates the changelog entry and creates a corresponding git commit / tag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# bump the major version, e.g. from 1.2.0 to 2.0.0&#xA;$ bin/version bump:major&#xA;&#xA;# bump the minor version, e.g. from 1.2.0 to 1.3.0&#xA;$ bin/version bump:minor&#xA;&#xA;# bump the patch version, e.g. from 1.2.0 to 1.2.1&#xA;$ bin/version bump:patch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Changelog&lt;/h4&gt; &#xA;&lt;p&gt;For generating the changelog &lt;a href=&#34;https://github.com/lerna/lerna-changelog&#34;&gt;lerna-changelog&lt;/a&gt; is used.&lt;/p&gt; &#xA;&lt;p&gt;To set this up locally you&#39;ll need to create the file &lt;code&gt;.lerna-changelog-github-token&lt;/code&gt; containing a GitHub access token (with just the &lt;code&gt;public_repo&lt;/code&gt; scope).&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.unnote.com&#34;&gt;Homepage www.unnote.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://app.unnote.com&#34;&gt;Web app at app.unnote.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2016 Alexis Reigel &amp;lt;mail@koffeinfrei.org&amp;gt;&#xA;Copyright 2016 Panter AG &amp;lt;info@panter.ch&amp;gt;&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU Affero General Public License as&#xA;published by the Free Software Foundation, either version 3 of the&#xA;License, or (at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#xA;GNU Affero General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU Affero General Public License&#xA;along with this program. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>artfuldodger/cody-coyote</title>
    <updated>2023-09-25T01:39:55Z</updated>
    <id>tag:github.com,2023-09-25:/artfuldodger/cody-coyote</id>
    <link href="https://github.com/artfuldodger/cody-coyote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;== Welcome to Rails&lt;/p&gt; &#xA;&lt;p&gt;Rails is a web-application framework that includes everything needed to create database-backed web applications according to the Model-View-Control pattern.&lt;/p&gt; &#xA;&lt;p&gt;This pattern splits the view (also called the presentation) into &#34;dumb&#34; templates that are primarily responsible for inserting pre-built data in between HTML tags. The model contains the &#34;smart&#34; domain objects (such as Account, Product, Person, Post) that holds all the business logic and knows how to persist themselves to a database. The controller handles the incoming requests (such as Save New Account, Update Product, Show Post) by manipulating the model and directing data to the view.&lt;/p&gt; &#xA;&lt;p&gt;In Rails, the model is handled by what&#39;s called an object-relational mapping layer entitled Active Record. This layer allows you to present the data from database rows as objects and embellish these data objects with business logic methods. You can read more about Active Record in link:files/vendor/rails/activerecord/README.html.&lt;/p&gt; &#xA;&lt;p&gt;The controller and view are handled by the Action Pack, which handles both layers by its two parts: Action View and Action Controller. These two layers are bundled in a single package due to their heavy interdependence. This is unlike the relationship between the Active Record and Action Pack that is much more separate. Each of these packages can be used independently outside of Rails. You can read more about Action Pack in link:files/vendor/rails/actionpack/README.html.&lt;/p&gt; &#xA;&lt;p&gt;== Getting Started&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;At the command prompt, create a new Rails application: &lt;tt&gt;rails new myapp&lt;/tt&gt; (where &lt;tt&gt;myapp&lt;/tt&gt; is the application name)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change directory to &lt;tt&gt;myapp&lt;/tt&gt; and start the web server: &lt;tt&gt;cd myapp; rails server&lt;/tt&gt; (run with --help for options)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; and you&#39;ll see: &#34;Welcome aboard: You&#39;re riding Ruby on Rails!&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow the guidelines to start developing your application. You can find the following resources handy:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Getting Started Guide: &lt;a href=&#34;http://guides.rubyonrails.org/getting_started.html&#34;&gt;http://guides.rubyonrails.org/getting_started.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruby on Rails Tutorial Book: &lt;a href=&#34;http://www.railstutorial.org/&#34;&gt;http://www.railstutorial.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;== Debugging Rails&lt;/p&gt; &#xA;&lt;p&gt;Sometimes your application goes wrong. Fortunately there are a lot of tools that will help you debug it and get it back on the rails.&lt;/p&gt; &#xA;&lt;p&gt;First area to check is the application log files. Have &#34;tail -f&#34; commands running on the server.log and development.log. Rails will automatically display debugging and runtime information to these files. Debugging info will also be shown in the browser on requests from 127.0.0.1.&lt;/p&gt; &#xA;&lt;p&gt;You can also log your own messages directly into the log file from your code using the Ruby logger class from inside your controllers. Example:&lt;/p&gt; &#xA;&lt;p&gt;class WeblogController &amp;lt; ActionController::Base def destroy @weblog = Weblog.find(params[:id]) @weblog.destroy logger.info(&#34;#{Time.now} Destroyed Weblog ID ##{@weblog.id}!&#34;) end end&lt;/p&gt; &#xA;&lt;p&gt;The result will be a message in your log file along the lines of:&lt;/p&gt; &#xA;&lt;p&gt;Mon Oct 08 14:22:29 +1000 2007 Destroyed Weblog ID #1!&lt;/p&gt; &#xA;&lt;p&gt;More information on how to use the logger is at &lt;a href=&#34;http://www.ruby-doc.org/core/&#34;&gt;http://www.ruby-doc.org/core/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also, Ruby documentation can be found at &lt;a href=&#34;http://www.ruby-lang.org/&#34;&gt;http://www.ruby-lang.org/&lt;/a&gt;. There are several books available online as well:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Programming Ruby: &lt;a href=&#34;http://www.ruby-doc.org/docs/ProgrammingRuby/&#34;&gt;http://www.ruby-doc.org/docs/ProgrammingRuby/&lt;/a&gt; (Pickaxe)&lt;/li&gt; &#xA; &lt;li&gt;Learn to Program: &lt;a href=&#34;http://pine.fm/LearnToProgram/&#34;&gt;http://pine.fm/LearnToProgram/&lt;/a&gt; (a beginners guide)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These two books will bring you up to speed on the Ruby language and also on programming in general.&lt;/p&gt; &#xA;&lt;p&gt;== Debugger&lt;/p&gt; &#xA;&lt;p&gt;Debugger support is available through the debugger command when you start your Mongrel or WEBrick server with --debugger. This means that you can break out of execution at any point in the code, investigate and change the model, and then, resume execution! You need to install ruby-debug to run the server in debugging mode. With gems, use &lt;tt&gt;sudo gem install ruby-debug&lt;/tt&gt;. Example:&lt;/p&gt; &#xA;&lt;p&gt;class WeblogController &amp;lt; ActionController::Base def index @posts = Post.all debugger end end&lt;/p&gt; &#xA;&lt;p&gt;So the controller will accept the action, run the first line, then present you with a IRB prompt in the server window. Here you can do things like:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;@posts.inspect =&amp;gt; &#34;[#&amp;lt;Post:0x14a6be8 @attributes={&#34;title&#34;=&amp;gt;nil, &#34;body&#34;=&amp;gt;nil, &#34;id&#34;=&amp;gt;&#34;1&#34;}&amp;gt;, #&amp;lt;Post:0x14a6620 @attributes={&#34;title&#34;=&amp;gt;&#34;Rails&#34;, &#34;body&#34;=&amp;gt;&#34;Only ten..&#34;, &#34;id&#34;=&amp;gt;&#34;2&#34;}&amp;gt;]&#34; @posts.first.title = &#34;hello from a debugger&#34; =&amp;gt; &#34;hello from a debugger&#34;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;...and even better, you can examine how your runtime objects actually work:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;f = @posts.first =&amp;gt; #&amp;lt;Post:0x13630c4 @attributes={&#34;title&#34;=&amp;gt;nil, &#34;body&#34;=&amp;gt;nil, &#34;id&#34;=&amp;gt;&#34;1&#34;}&amp;gt; f. Display all 152 possibilities? (y or n)&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Finally, when you&#39;re ready to resume execution, you can enter &#34;cont&#34;.&lt;/p&gt; &#xA;&lt;p&gt;== Console&lt;/p&gt; &#xA;&lt;p&gt;The console is a Ruby shell, which allows you to interact with your application&#39;s domain model. Here you&#39;ll have all parts of the application configured, just like it is when the application is running. You can inspect domain models, change values, and save to the database. Starting the script without arguments will launch it in the development environment.&lt;/p&gt; &#xA;&lt;p&gt;To start the console, run &lt;tt&gt;rails console&lt;/tt&gt; from the application directory.&lt;/p&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Passing the &lt;tt&gt;-s, --sandbox&lt;/tt&gt; argument will rollback any modifications made to the database.&lt;/li&gt; &#xA; &lt;li&gt;Passing an environment name as an argument will load the corresponding environment. Example: &lt;tt&gt;rails console production&lt;/tt&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To reload your controllers and models after launching the console run &lt;tt&gt;reload!&lt;/tt&gt;&lt;/p&gt; &#xA;&lt;p&gt;More information about irb can be found at: link:&lt;a href=&#34;http://www.rubycentral.org/pickaxe/irb.html&#34;&gt;http://www.rubycentral.org/pickaxe/irb.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;== dbconsole&lt;/p&gt; &#xA;&lt;p&gt;You can go to the command line of your database directly through &lt;tt&gt;rails dbconsole&lt;/tt&gt;. You would be connected to the database with the credentials defined in database.yml. Starting the script without arguments will connect you to the development database. Passing an argument will connect you to a different database, like &lt;tt&gt;rails dbconsole production&lt;/tt&gt;. Currently works for MySQL, PostgreSQL and SQLite 3.&lt;/p&gt; &#xA;&lt;p&gt;== Description of Contents&lt;/p&gt; &#xA;&lt;p&gt;The default directory structure of a generated Ruby on Rails application:&lt;/p&gt; &#xA;&lt;p&gt;|-- app | |-- assets | |-- images | |-- javascripts | &lt;code&gt;-- stylesheets | |-- controllers | |-- helpers | |-- mailers | |-- models | &lt;/code&gt;-- views | &lt;code&gt;-- layouts |-- config | |-- environments | |-- initializers | &lt;/code&gt;-- locales |-- db |-- doc |-- lib | &lt;code&gt;-- tasks |-- log |-- public |-- script |-- test | |-- fixtures | |-- functional | |-- integration | |-- performance | &lt;/code&gt;-- unit |-- tmp | |-- cache | |-- pids | |-- sessions | &lt;code&gt;-- sockets &lt;/code&gt;-- vendor |-- assets &lt;code&gt;-- stylesheets &lt;/code&gt;-- plugins&lt;/p&gt; &#xA;&lt;p&gt;app Holds all the code that&#39;s specific to this particular application.&lt;/p&gt; &#xA;&lt;p&gt;app/assets Contains subdirectories for images, stylesheets, and JavaScript files.&lt;/p&gt; &#xA;&lt;p&gt;app/controllers Holds controllers that should be named like weblogs_controller.rb for automated URL mapping. All controllers should descend from ApplicationController which itself descends from ActionController::Base.&lt;/p&gt; &#xA;&lt;p&gt;app/models Holds models that should be named like post.rb. Models descend from ActiveRecord::Base by default.&lt;/p&gt; &#xA;&lt;p&gt;app/views Holds the template files for the view that should be named like weblogs/index.html.erb for the WeblogsController#index action. All views use eRuby syntax by default.&lt;/p&gt; &#xA;&lt;p&gt;app/views/layouts Holds the template files for layouts to be used with views. This models the common header/footer method of wrapping views. In your views, define a layout using the &lt;tt&gt;layout :default&lt;/tt&gt; and create a file named default.html.erb. Inside default.html.erb, call &amp;lt;% yield %&amp;gt; to render the view using this layout.&lt;/p&gt; &#xA;&lt;p&gt;app/helpers Holds view helpers that should be named like weblogs_helper.rb. These are generated for you automatically when using generators for controllers. Helpers can be used to wrap functionality for your views into methods.&lt;/p&gt; &#xA;&lt;p&gt;config Configuration files for the Rails environment, the routing map, the database, and other dependencies.&lt;/p&gt; &#xA;&lt;p&gt;db Contains the database schema in schema.rb. db/migrate contains all the sequence of Migrations for your schema.&lt;/p&gt; &#xA;&lt;p&gt;doc This directory is where your application documentation will be stored when generated using &lt;tt&gt;rake doc:app&lt;/tt&gt;&lt;/p&gt; &#xA;&lt;p&gt;lib Application specific libraries. Basically, any kind of custom code that doesn&#39;t belong under controllers, models, or helpers. This directory is in the load path.&lt;/p&gt; &#xA;&lt;p&gt;public The directory available for the web server. Also contains the dispatchers and the default HTML files. This should be set as the DOCUMENT_ROOT of your web server.&lt;/p&gt; &#xA;&lt;p&gt;script Helper scripts for automation and generation.&lt;/p&gt; &#xA;&lt;p&gt;test Unit and functional tests along with fixtures. When using the rails generate command, template test files will be generated for you and placed in this directory.&lt;/p&gt; &#xA;&lt;p&gt;vendor External libraries that the application depends on. Also includes the plugins subdirectory. If the app has frozen rails, those gems also go here, under vendor/rails/. This directory is in the load path.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AndySze/webdesign</title>
    <updated>2023-09-25T01:39:55Z</updated>
    <id>tag:github.com,2023-09-25:/AndySze/webdesign</id>
    <link href="https://github.com/AndySze/webdesign" rel="alternate"></link>
    <summary type="html">&lt;p&gt;webdesign&lt;/p&gt;&lt;hr&gt;&lt;p&gt;h1. Cunlin&lt;/p&gt; &#xA;&lt;p&gt;This application was generated with the &#34;rails_apps_composer&#34;:&lt;a href=&#34;https://github.com/RailsApps/rails_apps_composer&#34;&gt;https://github.com/RailsApps/rails_apps_composer&lt;/a&gt; gem provided by the &#34;RailsApps Project&#34;:&lt;a href=&#34;http://railsapps.github.com/&#34;&gt;http://railsapps.github.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;h2. Diagnostics&lt;/p&gt; &#xA;&lt;p&gt;This application was built with recipes that are known to work together.&lt;/p&gt; &#xA;&lt;p&gt;This application was built with preferences that are NOT known to work together.&lt;/p&gt; &#xA;&lt;p&gt;If the application doesn&#39;t work as expected, please &#34;report an issue&#34;:&lt;a href=&#34;https://github.com/RailsApps/rails_apps_composer/issues&#34;&gt;https://github.com/RailsApps/rails_apps_composer/issues&lt;/a&gt; and include these diagnostics:&lt;/p&gt; &#xA;&lt;p&gt;We&#39;d also like to know if you&#39;ve found combinations of recipes or preferences that do work together.&lt;/p&gt; &#xA;&lt;p&gt;Recipes: [&#34;controllers&#34;, &#34;core&#34;, &#34;email&#34;, &#34;extras&#34;, &#34;frontend&#34;, &#34;gems&#34;, &#34;git&#34;, &#34;init&#34;, &#34;models&#34;, &#34;prelaunch&#34;, &#34;railsapps&#34;, &#34;readme&#34;, &#34;routes&#34;, &#34;saas&#34;, &#34;setup&#34;, &#34;testing&#34;, &#34;views&#34;]&lt;/p&gt; &#xA;&lt;p&gt;Preferences: {:git=&amp;gt;true, :railsapps=&amp;gt;&#34;none&#34;, :dev_webserver=&amp;gt;&#34;thin&#34;, :prod_webserver=&amp;gt;&#34;unicorn&#34;, :database=&amp;gt;&#34;sqlite&#34;, :templates=&amp;gt;&#34;erb&#34;, :unit_test=&amp;gt;&#34;rspec&#34;, :integration=&amp;gt;&#34;rspec-capybara&#34;, :fixtures=&amp;gt;&#34;factory_girl&#34;, :frontend=&amp;gt;&#34;bootstrap&#34;, :bootstrap=&amp;gt;&#34;sass&#34;, :email=&amp;gt;&#34;none&#34;, :authentication=&amp;gt;&#34;devise&#34;, :devise_modules=&amp;gt;&#34;default&#34;, :authorization=&amp;gt;&#34;cancan&#34;, :form_builder=&amp;gt;&#34;simple_form&#34;, :starter_app=&amp;gt;&#34;admin_app&#34;, :quiet_assets=&amp;gt;true, :ban_spiders=&amp;gt;true, :github=&amp;gt;true}&lt;/p&gt; &#xA;&lt;p&gt;h2. Ruby on Rails&lt;/p&gt; &#xA;&lt;p&gt;This application requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby version 1.9.3&lt;/li&gt; &#xA; &lt;li&gt;Rails version 3.2.8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Learn more about &#34;Installing Rails&#34;:&lt;a href=&#34;http://railsapps.github.com/installing-rails.html&#34;&gt;http://railsapps.github.com/installing-rails.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;h2. Database&lt;/p&gt; &#xA;&lt;p&gt;This application uses SQLite with ActiveRecord.&lt;/p&gt; &#xA;&lt;p&gt;h2. Development&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Template Engine: ERB&lt;/li&gt; &#xA; &lt;li&gt;Testing Framework: RSpec and Factory Girl&lt;/li&gt; &#xA; &lt;li&gt;Front-end Framework: Twitter Bootstrap (Sass)&lt;/li&gt; &#xA; &lt;li&gt;Form Builder: SimpleForm&lt;/li&gt; &#xA; &lt;li&gt;Authentication: Devise&lt;/li&gt; &#xA; &lt;li&gt;Authorization: CanCan&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;h2. Getting Started&lt;/p&gt; &#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt; &#xA;&lt;p&gt;h2. Documentation and Support&lt;/p&gt; &#xA;&lt;p&gt;This is the only documentation.&lt;/p&gt; &#xA;&lt;p&gt;h4. Issues&lt;/p&gt; &#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt; &#xA;&lt;p&gt;h2. Similar Projects&lt;/p&gt; &#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt; &#xA;&lt;p&gt;h2. Contributing&lt;/p&gt; &#xA;&lt;p&gt;If you make improvements to this application, please share with others.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork the project on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Make your feature addition or bug fix.&lt;/li&gt; &#xA; &lt;li&gt;Commit with Git.&lt;/li&gt; &#xA; &lt;li&gt;Send the author a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I&#39;ll add a note to the README so that others can find your work.&lt;/p&gt; &#xA;&lt;p&gt;h2. Credits&lt;/p&gt; &#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt; &#xA;&lt;p&gt;h2. License&lt;/p&gt; &#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;</summary>
  </entry>
</feed>