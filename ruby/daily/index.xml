<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-03T01:42:12Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sferik/twitter</title>
    <updated>2023-04-03T01:42:12Z</updated>
    <id>tag:github.com,2023-04-03:/sferik/twitter</id>
    <link href="https://github.com/sferik/twitter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby interface to the Twitter API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Twitter Ruby Gem&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/twitter&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/twitter.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/sferik/twitter&#34;&gt;&lt;img src=&#34;https://travis-ci.org/sferik/twitter.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/sferik/twitter/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/09362621ad91e8f599b3/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://inch-ci.org/github/sferik/twitter&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/sferik/twitter.svg?style=shields&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Ruby interface to the Twitter API.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install twitter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;p&gt;Looking for the Twitter command-line interface? It was &lt;a href=&#34;https://github.com/sferik/twitter/commit/dd2445e3e2c97f38b28a3f32ea902536b3897adf&#34;&gt;removed&lt;/a&gt; from this gem in version 0.5.0 and now exists as a &lt;a href=&#34;https://github.com/sferik/t&#34;&gt;separate project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://rdoc.info/gems/twitter&#34;&gt;http://rdoc.info/gems/twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sferik/twitter/tree/master/examples&#34;&gt;https://github.com/sferik/twitter/tree/master/examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Announcements&lt;/h2&gt; &#xA;&lt;p&gt;You should &lt;a href=&#34;https://twitter.com/gem&#34;&gt;follow @gem&lt;/a&gt; on Twitter for announcements and updates about this library.&lt;/p&gt; &#xA;&lt;h2&gt;Mailing List&lt;/h2&gt; &#xA;&lt;p&gt;Please direct questions about this library to the &lt;a href=&#34;https://groups.google.com/group/twitter-ruby-gem&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Apps Wiki&lt;/h2&gt; &#xA;&lt;p&gt;Does your project or organization use this gem? Add it to the &lt;a href=&#34;https://github.com/sferik/twitter/wiki/apps&#34;&gt;apps wiki&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Twitter API v1.1 requires you to authenticate via OAuth, so you&#39;ll need to &lt;a href=&#34;https://apps.twitter.com/&#34;&gt;register your application with Twitter&lt;/a&gt;. Once you&#39;ve registered an application, make sure to set the correct access level, otherwise you may see the error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Read-only application cannot POST&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your new application will be assigned a consumer key/secret pair and you will be assigned an OAuth access token/secret pair for that application. You&#39;ll need to configure these values before you make a request or else you&#39;ll get the error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Bad Authentication data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass configuration options as a block to &lt;code&gt;Twitter::REST::Client.new&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Twitter::REST::Client.new do |config|&#xA;  config.consumer_key        = &#34;YOUR_CONSUMER_KEY&#34;&#xA;  config.consumer_secret     = &#34;YOUR_CONSUMER_SECRET&#34;&#xA;  config.access_token        = &#34;YOUR_ACCESS_TOKEN&#34;&#xA;  config.access_token_secret = &#34;YOUR_ACCESS_SECRET&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage Examples&lt;/h2&gt; &#xA;&lt;p&gt;After configuring a &lt;code&gt;client&lt;/code&gt;, you can do the following things.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tweet (as the authenticated user)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.update(&#34;I&#39;m tweeting with @gem!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Follow a user (by screen name or user ID)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.follow(&#34;gem&#34;)&#xA;client.follow(213747670)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch a user (by screen name or user ID)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.user(&#34;gem&#34;)&#xA;client.user(213747670)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch a cursored list of followers with profile details (by screen name or user ID, or by implicit authenticated user)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.followers(&#34;gem&#34;)&#xA;client.followers(213747670)&#xA;client.followers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch a cursored list of friends with profile details (by screen name or user ID, or by implicit authenticated user)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.friends(&#34;gem&#34;)&#xA;client.friends(213747670)&#xA;client.friends&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch the timeline of Tweets by a user&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.user_timeline(&#34;gem&#34;)&#xA;client.user_timeline(213747670)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch the timeline of Tweets from the authenticated user&#39;s home page&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.home_timeline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch the timeline of Tweets mentioning the authenticated user&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.mentions_timeline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fetch a particular Tweet by ID&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.status(27558893223)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Collect the three most recent marriage proposals to @justinbieber&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.search(&#34;to:justinbieber marry me&#34;, result_type: &#34;recent&#34;).take(3).collect do |tweet|&#xA;  &#34;#{tweet.user.screen_name}: #{tweet.text}&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Find a Japanese-language Tweet tagged #ruby (excluding retweets)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.search(&#34;#ruby -rt&#34;, lang: &#34;ja&#34;).first.text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more usage examples, please see the full &lt;a href=&#34;http://rdoc.info/gems/twitter&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Streaming&lt;/h2&gt; &#xA;&lt;p&gt;Site Streams are restricted to whitelisted accounts. To apply for access, &lt;a href=&#34;https://dev.twitter.com/streaming/sitestreams#applyingforaccess&#34;&gt;follow the steps in the Site Streams documentation&lt;/a&gt;. &lt;a href=&#34;https://dev.twitter.com/streaming/userstreams&#34;&gt;User Streams&lt;/a&gt; do not require prior approval.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration works just like &lt;code&gt;Twitter::REST::Client&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Twitter::Streaming::Client.new do |config|&#xA;  config.consumer_key        = &#34;YOUR_CONSUMER_KEY&#34;&#xA;  config.consumer_secret     = &#34;YOUR_CONSUMER_SECRET&#34;&#xA;  config.access_token        = &#34;YOUR_ACCESS_TOKEN&#34;&#xA;  config.access_token_secret = &#34;YOUR_ACCESS_SECRET&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stream a random sample of all tweets&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.sample do |object|&#xA;  puts object.text if object.is_a?(Twitter::Tweet)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stream mentions of coffee or tea&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;topics = [&#34;coffee&#34;, &#34;tea&#34;]&#xA;client.filter(track: topics.join(&#34;,&#34;)) do |object|&#xA;  puts object.text if object.is_a?(Twitter::Tweet)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stream tweets, events, and direct messages for the authenticated user&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.user do |object|&#xA;  case object&#xA;  when Twitter::Tweet&#xA;    puts &#34;It&#39;s a tweet!&#34;&#xA;  when Twitter::DirectMessage&#xA;    puts &#34;It&#39;s a direct message!&#34;&#xA;  when Twitter::Streaming::StallWarning&#xA;    warn &#34;Falling behind!&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An &lt;code&gt;object&lt;/code&gt; may be one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter::Tweet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter::DirectMessage&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter::Streaming::DeletedTweet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter::Streaming::Event&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter::Streaming::FriendList&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Twitter::Streaming::StallWarning&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ads&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using the &lt;a href=&#34;http://twitterdev.github.io/twitter-ruby-ads-sdk/&#34;&gt;Twitter Ads SDK for Ruby&lt;/a&gt; to interact with the Twitter Ads API.&lt;/p&gt; &#xA;&lt;h2&gt;Object Graph&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/sferik/twitter/master/etc/erd.svg?sanitize=true&#34; alt=&#34;Entity-relationship diagram&#34; title=&#34;Entity-relationship diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This entity-relationship diagram is generated programatically. If you add or remove any Twitter objects, please regenerate the ERD with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec rake erd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Ruby Versions&lt;/h2&gt; &#xA;&lt;p&gt;This library aims to support and is &lt;a href=&#34;https://travis-ci.org/sferik/twitter&#34;&gt;tested against&lt;/a&gt; the following Ruby versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 2.7&lt;/li&gt; &#xA; &lt;li&gt;Ruby 3.0&lt;/li&gt; &#xA; &lt;li&gt;Ruby 3.1&lt;/li&gt; &#xA; &lt;li&gt;Ruby 3.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If something doesn&#39;t work on one of these versions, it&#39;s a bug.&lt;/p&gt; &#xA;&lt;p&gt;This library may inadvertently work (or seem to work) on other Ruby versions, however support will only be provided for the versions listed above.&lt;/p&gt; &#xA;&lt;p&gt;If you would like this library to support another Ruby version or implementation, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This library aims to adhere to &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning 2.0.0&lt;/a&gt;. Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, that version should be immediately yanked and/or a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions. As a result of this policy, you can (and should) specify a dependency on this gem using the &lt;a href=&#34;http://guides.rubygems.org/patterns/#pessimistic-version-constraint&#34;&gt;Pessimistic Version Constraint&lt;/a&gt; with two digits of precision. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;spec.add_dependency &#39;twitter&#39;, &#39;~&amp;gt; 6.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2016 Erik Berlin, John Nunemaker, Wynn Netherland, Steve Richert, Steve Agalloco. See &lt;a href=&#34;https://raw.githubusercontent.com/sferik/twitter/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>appdev-projects/each-chapter</title>
    <updated>2023-04-03T01:42:12Z</updated>
    <id>tag:github.com,2023-04-03:/appdev-projects/each-chapter</id>
    <link href="https://github.com/appdev-projects/each-chapter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Practice&lt;/h1&gt; &#xA;&lt;p&gt;Run your Ruby file by typing &lt;code&gt;ruby &lt;/code&gt; and then the name of the file you want to run in the Terminal.&lt;/p&gt; &#xA;&lt;p&gt;If we want to run &lt;code&gt;each_even_word.rb&lt;/code&gt;, we can write the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ruby each_even_word.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To re-run this command, you can use the UP and DOWN arrow keys to look at the history of commands you&#39;ve run in a Terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Each&lt;/h2&gt; &#xA;&lt;h3&gt;each_spell_word.rb&lt;/h3&gt; &#xA;&lt;p&gt;Write a program that:&lt;/p&gt; &#xA;&lt;p&gt;Asks your user to enter any word and have it spelled out letter by letter.&lt;/p&gt; &#xA;&lt;p&gt;Input &lt;code&gt;Georgia&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Output&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;G&#34;&#xA;&#34;E&#34;&#xA;&#34;O&#34;&#xA;&#34;R&#34;&#xA;&#34;G&#34;&#xA;&#34;I&#34;&#xA;&#34;A&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;Enter a word for me to spell:&#34;&#xA;Georgia&#xA;&#34;G&#34;&#xA;&#34;E&#34;&#xA;&#34;O&#34;&#xA;&#34;R&#34;&#xA;&#34;G&#34;&#xA;&#34;I&#34;&#xA;&#34;A&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;each_even_word.rb&lt;/h3&gt; &#xA;&lt;p&gt;Write a program that: Asks the user to enter a list of words separated by spaces. The program should only print the words that are have an even number of characters&lt;/p&gt; &#xA;&lt;p&gt;Example (&lt;code&gt;mountain pink vines&lt;/code&gt; is the input)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;Enter a list of words separated by spaces:&#34;&#xA;mountain pink vines&#xA;&#34;mountain&#34;&#xA;&#34;pink&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;each_letter_count.rb&lt;/h3&gt; &#xA;&lt;p&gt;Write a program that:&lt;/p&gt; &#xA;&lt;p&gt;Asks the user to enter a word. The program should print each letter in the word the number of times it appears in the word.&lt;/p&gt; &#xA;&lt;p&gt;Example input: &lt;code&gt;loop&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;Enter a word&#34;&#xA;loop&#xA;l appears 1 times&#xA;o appears 2 times&#xA;o appears 2 times&#xA;p appears 1 times&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Specs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here to see names of each test&lt;/summary&gt; &#xA; &lt;p&gt;each_spell_word.rb spells &#39;Georgia&#39; correctly&lt;/p&gt; &#xA; &lt;p&gt;each_spell_word.rb spells &#39;Supercalifragilisticexpialidocious&#39; correctly&lt;/p&gt; &#xA; &lt;p&gt;each_letter_count.rb prints the letters and number of times the letters appear for the word &#39;levee&#39;&lt;/p&gt; &#xA; &lt;p&gt;each_letter_count.rb prints the letters and number of times the letters appear for the word &#39;loop&#39;&lt;/p&gt; &#xA; &lt;p&gt;each_even_word.rb prints the &#39;mountain&#39; and &#39;pink&#39; when the input is &#39;mountain pink vines&#39;&lt;/p&gt; &#xA; &lt;p&gt;each_even_word.rb prints nothing when the input is &#39;odd numbers squad&#39;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>RadeonOpenCompute/ROCm</title>
    <updated>2023-04-03T01:42:12Z</updated>
    <id>tag:github.com,2023-04-03:/RadeonOpenCompute/ROCm</id>
    <link href="https://github.com/RadeonOpenCompute/ROCm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ROCm - Open Software Platform for GPU Compute&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ROCm™ Repository Updates&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the manifest file for ROCm™ releases, changelogs, and release information. The file default.xml contains information for all repositories and the associated commit used to build the current ROCm release.&lt;/p&gt; &#xA;&lt;p&gt;The default.xml file uses the repo Manifest format.&lt;/p&gt; &#xA;&lt;h2&gt;How to build documentation via Sphinx&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd docs&#xA;&#xA;pip3 install -r .sphinx/requirements.txt&#xA;&#xA;python3 -m sphinx -T -E -b html -d _build/doctrees -D language=en . _build/html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ROCm v5.4.3 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.4.3 is now released. For ROCm v5.4.3 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.4.2 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.4.2 is now released. For ROCm v5.4.2 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.4.1 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.4.1 is now released. For ROCm v5.4.1 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.4 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.4 is now released. For ROCm v5.4 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.3.3 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.3.3 is now released. For ROCm v5.3.3 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.3.2 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.3.2 is now released. For ROCm v5.3.2 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.3 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;ROCm v5.3 is now released. For ROCm v5.3 documentation, refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ROCm v5.2.3 Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;The ROCm v5.2.3 patch release is now available. The details are listed below. Highlights of this release include enhancements in RCCL version compatibility and minor bug fixes in the HIP Runtime.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, ROCm releases will return to use of the &lt;a href=&#34;https://github.com/RadeonOpenCompute/ROCm&#34;&gt;ROCm&lt;/a&gt; repository for version-controlled release notes henceforth.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This release of ROCm is validated with the AMDGPU release v22.20.1.&lt;/p&gt; &#xA;&lt;p&gt;All users of the ROCm v5.2.1 release and below are encouraged to upgrade. Refer to &lt;a href=&#34;https://docs.amd.com&#34;&gt;https://docs.amd.com&lt;/a&gt; for documentation associated with this release.&lt;/p&gt; &#xA;&lt;h2&gt;Introducing Preview Support for Ubuntu 20.04.5 HWE&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the following article for information on the preview support for Ubuntu 20.04.5 HWE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.amd.com/en/support/kb/release-notes/rn-amdgpu-unified-linux-22-20&#34;&gt;https://www.amd.com/en/support/kb/release-notes/rn-amdgpu-unified-linux-22-20&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changes in This Release&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 18.04 End of Life&lt;/h3&gt; &#xA;&lt;p&gt;Support for Ubuntu 18.04 ends in this release. Future releases of ROCm will not provide prebuilt packages for Ubuntu 18.04.&lt;/p&gt; &#xA;&lt;h3&gt;HIP and Other Runtimes&lt;/h3&gt; &#xA;&lt;h4&gt;HIP Runtime&lt;/h4&gt; &#xA;&lt;h5&gt;Fixes&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A bug was discovered in the HIP graph capture implementation in the ROCm v5.2.0 release. If the same kernel is called twice (with different argument values) in a graph capture, the implementation only kept the argument values for the second kernel call.&lt;/li&gt; &#xA; &lt;li&gt;A bug was introduced in the &lt;code&gt;hiprtc&lt;/code&gt; implementation in the ROCm v5.2.0 release. This bug caused the &lt;code&gt;hiprtcGetLoweredName&lt;/code&gt; call to fail for named expressions with whitespace in it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; The named expression &lt;code&gt;my_sqrt&amp;lt;complex&amp;lt;double&amp;gt;&amp;gt;&lt;/code&gt; passed but &lt;code&gt;my_sqrt&amp;lt;complex&amp;lt;double&amp;gt;&amp;gt;&lt;/code&gt; failed.&lt;/p&gt; &#xA;&lt;h3&gt;ROCm Libraries&lt;/h3&gt; &#xA;&lt;h4&gt;RCCL&lt;/h4&gt; &#xA;&lt;h5&gt;Added&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compatibility with NCCL 2.12.10&lt;/li&gt; &#xA; &lt;li&gt;Packages for test and benchmark executables on all supported OSes using CPack&lt;/li&gt; &#xA; &lt;li&gt;Adding custom signal handler - opt-in with &lt;code&gt;RCCL_ENABLE_SIGNALHANDLER=1&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Additional details provided if Binary File Descriptor library (BFD) is pre-installed.&lt;/li&gt; &#xA;   &lt;li&gt;Adding experimental support for using multiple ranks per device &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Requires using a new interface to create communicator (&lt;code&gt;ncclCommInitRankMulti&lt;/code&gt;), refer to the interface documentation for details.&lt;/li&gt; &#xA;     &lt;li&gt;To avoid potential deadlocks, user might have to set an environment variables increasing the number of hardware queues. For example,&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;export GPU_MAX_HW_QUEUES=16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adding support for reusing ports in NET/IB channels &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Opt-in with &lt;code&gt;NCCL_IB_SOCK_CLIENT_PORT_REUSE=1&lt;/code&gt; and &lt;code&gt;NCCL_IB_SOCK_SERVER_PORT_REUSE=1&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;When &#34;&lt;code&gt;Call to bind failed: Address already in use&lt;/code&gt;&#34; error happens in large-scale AlltoAll (for example, &amp;gt;=64 MI200 nodes), users are suggested to opt-in either one or both of the options to resolve the massive port usage issue&lt;/li&gt; &#xA;     &lt;li&gt;Avoid using &lt;code&gt;NCCL_IB_SOCK_SERVER_PORT_REUSE&lt;/code&gt; when &lt;code&gt;NCCL_NCHANNELS_PER_NET_PEER&lt;/code&gt; is tuned &amp;gt;1&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Removed&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Removed experimental clique-based kernels&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development Tools&lt;/h3&gt; &#xA;&lt;p&gt;No notable changes in this release for development tools, including the compiler, profiler, and debugger.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment and Management Tools&lt;/h3&gt; &#xA;&lt;p&gt;No notable changes in this release for deployment and management tools.&lt;/p&gt; &#xA;&lt;h2&gt;Older ROCm™ Releases&lt;/h2&gt; &#xA;&lt;p&gt;For release information for older ROCm™ releases, refer to &lt;a href=&#34;https://raw.githubusercontent.com/RadeonOpenCompute/ROCm/develop/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>