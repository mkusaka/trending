<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-29T01:36:03Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>diemnh-2368/ruby_basic_kadai_k64</title>
    <updated>2022-12-29T01:36:03Z</updated>
    <id>tag:github.com,2022-12-29:/diemnh-2368/ruby_basic_kadai_k64</id>
    <link href="https://github.com/diemnh-2368/ruby_basic_kadai_k64" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby on Replit&lt;/h1&gt; &#xA;&lt;p&gt;This is a template to get you started with Ruby on Replit. It&#39;s ready to go so you can just hit run and start coding!&lt;/p&gt; &#xA;&lt;h2&gt;Running the repl&lt;/h2&gt; &#xA;&lt;p&gt;Simply hit run! You can edit the run command from the &lt;code&gt;.replit&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Installing packages&lt;/h2&gt; &#xA;&lt;p&gt;To add packages to your repl, we recommend using the Replit packager interface in the left sidebar or using &lt;code&gt;bundle install&lt;/code&gt; in the shell. Check out the &lt;a href=&#34;https://bundler.io/v2.3/#getting-started&#34;&gt;Bundle docs here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning: Avoid using &lt;code&gt;gem install&lt;/code&gt; to add packages.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Beacuse Ruby repls use &lt;a href=&#34;https://bundler.io/&#34;&gt;Bundle&lt;/a&gt; under the hood to provide a consistent environment that tracks and installs the exact gems and versions needed, we recommend using &lt;code&gt;bundle install&lt;/code&gt; instead of &lt;code&gt;gem install&lt;/code&gt;, which may not work as expected.&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;If you need help you might be able to find an answer on our &lt;a href=&#34;https://docs.replit.com&#34;&gt;docs&lt;/a&gt; page. Feel free to report bugs and give us feedback &lt;a href=&#34;https://replit.com/support&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dineshgowda24/bitcask-rb</title>
    <updated>2022-12-29T01:36:03Z</updated>
    <id>tag:github.com,2022-12-29:/dineshgowda24/bitcask-rb</id>
    <link href="https://github.com/dineshgowda24/bitcask-rb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Log-Structured Hash Table for Fast Key/Value Data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bitcask-rb: A Log-Structured Hash Table for Fast Key/Value Data&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ruby-3.1.1-brightgreen&#34; alt=&#34;Ruby&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rspec.info/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/rspec-3.1-green&#34; alt=&#34;BDD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rubocop/rubocop&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-rubocop-red&#34; alt=&#34;Ruby Style Guide&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dl.circleci.com/status-badge/redirect/gh/dineshgowda24/bitcask-rb/tree/main&#34;&gt;&lt;img src=&#34;https://dl.circleci.com/status-badge/img/gh/dineshgowda24/bitcask-rb/tree/main.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/dineshgowda24/bitcask-rb&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dineshgowda24/bitcask-rb/branch/main/graph/badge.svg?token=HY8IQSEKCA&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deepsource.io/gh/dineshgowda24/bitcask-rb/?ref=repository-badge&#34;&gt;&lt;img src=&#34;https://deepsource.io/gh/dineshgowda24/bitcask-rb.svg/?label=active+issues&amp;amp;token=aISrLFG-Rwka_9MMiZixX_NT&#34; alt=&#34;DeepSource&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/dineshgowda24/bitcask-rb/main/image.png&#34;&gt; &#xA;&lt;p&gt;Fast, Persistent key/value store based on &lt;a href=&#34;https://riak.com/assets/bitcask-intro.pdf&#34;&gt;bitcask paper&lt;/a&gt; written in Ruby. An attempt to understand and build our persistent key/value store capable of storing data enormous than the RAM. This, in any way, is not intended for production. For simplicity, implementation has ignored a few specifications from the paper.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;bundler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;db_store = Bitcask::DiskStore.new(&#39;bitcask.db&#39;)&#xA;&#xA;# Setting values in store using put or hash style&#xA;db_store.put(&#34;Anime&#34;, &#34;One Piece&#34;)&#xA;db_store[&#34;Luffy&#34;] = &#34;Straw Hat&#34;&#xA;db_store[2020] = &#34;Leap Year&#34;&#xA;db_store.put(&#34;pie&#34;, 3.1415)&#xA;&#xA;# Getting values from store using get or hash style&#xA;db_store[&#34;Anime&#34;]&#xA;db_store.get(&#34;Luffy&#34;)&#xA;db_store[&#34;pie&#34;]&#xA;db_store.get(2020)&#xA;&#xA;# Listing keys&#xA;db_store.keys&#xA;&#xA;# Size of the store&#xA;db_store.store&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advantages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple yet powerful&lt;/li&gt; &#xA; &lt;li&gt;Easy to use&lt;/li&gt; &#xA; &lt;li&gt;Store data enormous than RAM&lt;/li&gt; &#xA; &lt;li&gt;Data file is OS agnostic&lt;/li&gt; &#xA; &lt;li&gt;Portable&lt;/li&gt; &#xA; &lt;li&gt;Faster read/writes&lt;/li&gt; &#xA; &lt;li&gt;Minimal dependecies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Persisted in disk&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Get API&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Put API&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Int, Float and String for k/v&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CRC&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Directory Support&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Delete API&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Files Merge and LSM Trees&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;h3&gt;CPU Cycles&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Benchmarked with value_size of 78 bytes&#xA;                                                         user     system      total        real&#xA;DiskStore.put : 10k records                          0.026963   0.018983   0.045946 (  0.046078)&#xA;DiskStore.get : 10k records                          0.031211   0.009727   0.040938 (  0.041154)&#xA;DiskStore.put : 100k records                         0.367399   0.196536   0.563935 (  0.566659)&#xA;DiskStore.get : 100k records                         0.313556   0.102338   0.415894 (  0.416280)&#xA;DiskStore.put : 1M records                           4.649307   2.209731   6.859038 (  6.887667)&#xA;DiskStore.get : 1M records                           3.357120   1.047637   4.404757 (  4.409732)&#xA;avg_put:                                             0.000005   0.000002   0.000007 (  0.000007)&#xA;avg_get:                                             0.000003   0.000001   0.000004 (  0.000004)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Iterations Per Second&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Warming up --------------------------------------&#xA;DiskStore.put : 100 records with data size: 702 Bytes&#xA;                       149.000  i/100ms&#xA;DiskStore.get : 100 records, value size: 702 Bytes&#xA;                         2.389k i/100ms&#xA;DiskStore.put : 100 records, value size: 6 Kb&#xA;                        22.000  i/100ms&#xA;DiskStore.get : 100 records, value size: 6 Kb&#xA;                         2.098k i/100ms&#xA;DiskStore.put : 100 records, value size: 660 Kb&#xA;                         1.000  i/100ms&#xA;DiskStore.get : 100 records, value size: 660 Kb&#xA;                       148.000  i/100ms&#xA;Calculating -------------------------------------&#xA;DiskStore.put : 100 records with data size: 702 Bytes&#xA;                          1.552k (±15.7%) i/s -      7.450k in   5.008519s&#xA;DiskStore.get : 100 records, value size: 702 Bytes&#xA;                         24.100k (± 3.7%) i/s -    121.839k in   5.062195s&#xA;DiskStore.put : 100 records, value size: 6 Kb&#xA;                        655.280  (±53.4%) i/s -      1.716k in   5.272456s&#xA;DiskStore.get : 100 records, value size: 6 Kb&#xA;                         19.883k (± 7.1%) i/s -    100.704k in   5.090910s&#xA;DiskStore.put : 100 records, value size: 660 Kb&#xA;                          4.479  (± 0.0%) i/s -     23.000  in   5.166651s&#xA;DiskStore.get : 100 records, value size: 660 Kb&#xA;                          3.286k (±39.4%) i/s -      8.140k in   5.272424s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute in any way, please fork the repo and raise a PR.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.circleci.com/insights/github/dineshgowda24/bitcask-rb/workflows/workflow/overview?branch=main&amp;amp;reporting-window=last-30-days&amp;amp;insights-snapshot=true&#34;&gt;&lt;img src=&#34;https://dl.circleci.com/insights-snapshot/gh/dineshgowda24/bitcask-rb/main/workflow/badge.svg?window=30d&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kazuho/rat</title>
    <updated>2022-12-29T01:36:03Z</updated>
    <id>tag:github.com,2022-12-29:/kazuho/rat</id>
    <link href="https://github.com/kazuho/rat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NAT written in pure ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rat&lt;/h1&gt; &#xA;&lt;p&gt;Rat is a programmable network address translator (NAT) written in pure-ruby. It is written as a TUN device.&lt;/p&gt; &#xA;&lt;p&gt;At the moment, it can only reflect TCP, UDP, ICMP packets; see reflector.rb.&lt;/p&gt;</summary>
  </entry>
</feed>