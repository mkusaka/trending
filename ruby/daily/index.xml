<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T01:33:59Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fastlane/fastlane</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/fastlane/fastlane</id>
    <link href="https://github.com/fastlane/fastlane" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 The easiest way to automate building and releasing your iOS and Android apps&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png&#34;&gt; &lt;img src=&#34;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png?raw=true&#34; alt=&#34;fastlane Logo&#34; width=&#34;500&#34;&gt; &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/FastlaneTools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contact-@FastlaneTools-blue.svg?style=flat&#34; alt=&#34;Twitter: @FastlaneTools&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/fastlane&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/fastlane.svg?style=flat&#34; alt=&#34;Gem&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/fastlane&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/fastlane.json&amp;amp;query=$.versions.stable&amp;amp;label=homebrew&#34; alt=&#34;Homebrew&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/fastlane/fastlane&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/fastlane/fastlane/master.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs welcome!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; is a tool for iOS and Android developers to automate tedious tasks like generating screenshots, dealing with provisioning profiles, and releasing your application.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; ✨ All fastlane docs were moved to &lt;a href=&#34;https://docs.fastlane.tools/&#34;&gt;docs.fastlane.tools&lt;/a&gt; ✨ &lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;Before submitting a new GitHub issue, please make sure to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://docs.fastlane.tools&#34;&gt;docs.fastlane.tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search for &lt;a href=&#34;https://github.com/fastlane/fastlane/issues&#34;&gt;existing GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the above doesn&#39;t help, please &lt;a href=&#34;https://github.com/fastlane/fastlane/issues&#34;&gt;submit an issue&lt;/a&gt; on GitHub and provide information about your setup, in particular the output of the &lt;code&gt;fastlane env&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to report a regression in &lt;em&gt;fastlane&lt;/em&gt; (something that has worked before, but broke with a new release), please mark your issue title as such using &lt;code&gt;[Regression] Your title here&lt;/code&gt;. This enables us to quickly detect and fix regressions.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;fastlane&lt;/em&gt; team&lt;/h2&gt; &#xA;&lt;!-- This table is regenerated and resorted on each release --&gt; &#xA;&lt;table id=&#34;team&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;olivier-halligon&#34;&gt; &lt;a href=&#34;https://github.com/AliSoftware&#34;&gt; &lt;img src=&#34;https://github.com/AliSoftware.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/aligatr&#34;&gt;Olivier Halligon&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;maksym-grebenets&#34;&gt; &lt;a href=&#34;https://github.com/mgrebenets&#34;&gt; &lt;img src=&#34;https://github.com/mgrebenets.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mgrebenets&#34;&gt;Maksym Grebenets&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;iulian-onofrei&#34;&gt; &lt;a href=&#34;https://github.com/revolter&#34;&gt; &lt;img src=&#34;https://github.com/revolter.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Revolt666&#34;&gt;Iulian Onofrei&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;satoshi-namai&#34;&gt; &lt;a href=&#34;https://github.com/ainame&#34;&gt; &lt;img src=&#34;https://github.com/ainame.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ainame&#34;&gt;Satoshi Namai&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;stefan-natchev&#34;&gt; &lt;a href=&#34;https://github.com/snatchev&#34;&gt; &lt;img src=&#34;https://github.com/snatchev.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/snatchev&#34;&gt;Stefan Natchev&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;jimmy-dee&#34;&gt; &lt;a href=&#34;https://github.com/jdee&#34;&gt; &lt;img src=&#34;https://github.com/jdee.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;Jimmy Dee&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;andrew-mcburney&#34;&gt; &lt;a href=&#34;https://github.com/armcburney&#34;&gt; &lt;img src=&#34;https://github.com/armcburney.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/armcburney&#34;&gt;Andrew McBurney&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;luka-mirosevic&#34;&gt; &lt;a href=&#34;https://github.com/lmirosevic&#34;&gt; &lt;img src=&#34;https://github.com/lmirosevic.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/lmirosevic&#34;&gt;Luka Mirosevic&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;jorge-revuelta-h&#34;&gt; &lt;a href=&#34;https://github.com/minuscorp&#34;&gt; &lt;img src=&#34;https://github.com/minuscorp.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/minuscorp&#34;&gt;Jorge Revuelta H&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;aaron-brager&#34;&gt; &lt;a href=&#34;https://github.com/getaaron&#34;&gt; &lt;img src=&#34;https://github.com/getaaron.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/getaaron&#34;&gt;Aaron Brager&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;joshua-liebowitz&#34;&gt; &lt;a href=&#34;https://github.com/taquitos&#34;&gt; &lt;img src=&#34;https://github.com/taquitos.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/taquitos&#34;&gt;Joshua Liebowitz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;danielle-tomlinson&#34;&gt; &lt;a href=&#34;https://github.com/endocrimes&#34;&gt; &lt;img src=&#34;https://github.com/endocrimes.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/endocrimes&#34;&gt;Danielle Tomlinson&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;jérôme-lacoste&#34;&gt; &lt;a href=&#34;https://github.com/lacostej&#34;&gt; &lt;img src=&#34;https://github.com/lacostej.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/lacostej&#34;&gt;Jérôme Lacoste&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;josh-holtz&#34;&gt; &lt;a href=&#34;https://github.com/joshdholtz&#34;&gt; &lt;img src=&#34;https://github.com/joshdholtz.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/joshdholtz&#34;&gt;Josh Holtz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;jan-piotrowski&#34;&gt; &lt;a href=&#34;https://github.com/janpio&#34;&gt; &lt;img src=&#34;https://github.com/janpio.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Sujan&#34;&gt;Jan Piotrowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;max-ott&#34;&gt; &lt;a href=&#34;https://github.com/max-ott&#34;&gt; &lt;img src=&#34;https://github.com/max-ott.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ott_max&#34;&gt;Max Ott&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;daniel-jankowski&#34;&gt; &lt;a href=&#34;https://github.com/mollyIV&#34;&gt; &lt;img src=&#34;https://github.com/mollyIV.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mollyIV&#34;&gt;Daniel Jankowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;roger-oba&#34;&gt; &lt;a href=&#34;https://github.com/rogerluan&#34;&gt; &lt;img src=&#34;https://github.com/rogerluan.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/rogerluan_&#34;&gt;Roger Oba&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;helmut-januschka&#34;&gt; &lt;a href=&#34;https://github.com/hjanuschka&#34;&gt; &lt;img src=&#34;https://github.com/hjanuschka.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/hjanuschka&#34;&gt;Helmut Januschka&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;fumiya-nakamura&#34;&gt; &lt;a href=&#34;https://github.com/nafu&#34;&gt; &lt;img src=&#34;https://github.com/nafu.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/nafu003&#34;&gt;Fumiya Nakamura&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;łukasz-grabowski&#34;&gt; &lt;a href=&#34;https://github.com/lucgrabowski&#34;&gt; &lt;img src=&#34;https://github.com/lucgrabowski.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;Łukasz Grabowski&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;manu-wallner&#34;&gt; &lt;a href=&#34;https://github.com/milch&#34;&gt; &lt;img src=&#34;https://github.com/milch.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/acrooow&#34;&gt;Manu Wallner&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;matthew-ellis&#34;&gt; &lt;a href=&#34;https://github.com/matthewellis&#34;&gt; &lt;img src=&#34;https://github.com/matthewellis.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mellis1995&#34;&gt;Matthew Ellis&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;manish-rathi&#34;&gt; &lt;a href=&#34;https://github.com/crazymanish&#34;&gt; &lt;img src=&#34;https://github.com/crazymanish.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/iammanishrathi&#34;&gt;Manish Rathi&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;   &lt;td id=&#34;kohki-miki&#34;&gt; &lt;a href=&#34;https://github.com/giginet&#34;&gt; &lt;img src=&#34;https://github.com/giginet.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/giginet&#34;&gt;Kohki Miki&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td id=&#34;felix-krause&#34;&gt; &lt;a href=&#34;https://github.com/KrauseFx&#34;&gt; &lt;img src=&#34;https://github.com/KrauseFx.png&#34; width=&#34;140px;&#34;&gt; &lt;/a&gt; &lt;h4 align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/KrauseFx&#34;&gt;Felix Krause&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Special thanks to all &lt;a href=&#34;https://github.com/fastlane/fastlane/graphs/contributors&#34;&gt;contributors&lt;/a&gt; for extending and improving &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to &lt;em&gt;fastlane&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/fastlane/fastlane/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Help us keep &lt;em&gt;fastlane&lt;/em&gt; open and inclusive. Please read and follow our &lt;a href=&#34;https://github.com/fastlane/fastlane/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Metrics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The number of &lt;em&gt;fastlane&lt;/em&gt; runs&lt;/li&gt; &#xA; &lt;li&gt;A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of &lt;em&gt;fastlane&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can easily opt-out of metrics collection by adding &lt;code&gt;opt_out_usage&lt;/code&gt; at the top of your &lt;code&gt;Fastfile&lt;/code&gt; or by setting the environment variable &lt;code&gt;FASTLANE_OPT_OUT_USAGE&lt;/code&gt;. &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane_core/lib/fastlane_core/analytics&#34;&gt;Check out the metrics code on GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT license. See the &lt;a href=&#34;https://raw.githubusercontent.com/fastlane/fastlane/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This project and all fastlane tools are in no way affiliated with Apple Inc. This project is open source under the MIT license, which means you have full access to the source code and can modify it to fit your own needs. All fastlane tools run on your own computer or server, so your credentials or other sensitive information will never leave your own computer. You are responsible for how you use fastlane tools.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; ✨ All fastlane docs were moved to &lt;a href=&#34;https://docs.fastlane.tools/&#34;&gt;docs.fastlane.tools&lt;/a&gt; ✨ &lt;/h2&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-3-sinatra-react-project</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/learn-co-curriculum/phase-3-sinatra-react-project</id>
    <link href="https://github.com/learn-co-curriculum/phase-3-sinatra-react-project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Phase 3 Project Guidelines&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build a web basic API with Sinatra and Active Record to support a React frontend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Congrats on getting through all the material for Phase 3! Now&#39;s the time to put it all together and build something from scratch to reinforce what you know and expand your horizons.&lt;/p&gt; &#xA;&lt;p&gt;The focus of this project is &lt;strong&gt;building a Sinatra API backend&lt;/strong&gt; that uses &lt;strong&gt;Active Record&lt;/strong&gt; to access and persist data in a database, which will be used by a separate &lt;strong&gt;React frontend&lt;/strong&gt; that interacts with the database via the API.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;For this project, you must:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Active Record to interact with a database.&lt;/li&gt; &#xA; &lt;li&gt;Have at least two models with a one-to-many relationship.&lt;/li&gt; &#xA; &lt;li&gt;At a minimum, set up the following API routes in Sinatra: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;create and read actions for both models&lt;/li&gt; &#xA;   &lt;li&gt;full CRUD capability for one of the models&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build a separate React frontend application that interacts with the API to perform CRUD actions.&lt;/li&gt; &#xA; &lt;li&gt;Use good OO design patterns. You should have separate classes for each of your models, and create instance and class methods as necessary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, build a todo list application with a React frontend interface and a Sinatra backend API, where a user can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; a new todo&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read&lt;/strong&gt; a list of all todos&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update&lt;/strong&gt; an individual todo&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Delete&lt;/strong&gt; a todo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A &lt;code&gt;Todo&lt;/code&gt; can be tagged with a &lt;code&gt;Category&lt;/code&gt;, so that each todo &lt;em&gt;belongs to&lt;/em&gt; a category and each category &lt;em&gt;has many&lt;/em&gt; todos.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Backend Setup&lt;/h3&gt; &#xA;&lt;p&gt;This repository has all the starter code needed to get a Sinatra backend up and running. &lt;a href=&#34;https://github.com/learn-co-curriculum/phase-3-sinatra-react-project/fork&#34;&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt;&lt;/a&gt; this repository to get started. Then, run &lt;code&gt;bundle install&lt;/code&gt; to install the gems.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;app/controllers/application_controller.rb&lt;/code&gt; file has an example GET route handler. Replace this route with routes for your project.&lt;/p&gt; &#xA;&lt;p&gt;You can start your server with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle exec rake server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run your server on port &lt;a href=&#34;http://localhost:9292&#34;&gt;http://localhost:9292&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Frontend Setup&lt;/h3&gt; &#xA;&lt;p&gt;Your backend and your frontend should be in &lt;strong&gt;two different repositories&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Create a new repository in a &lt;strong&gt;separate folder&lt;/strong&gt; with a React app for your frontend. To do this, &lt;code&gt;cd&lt;/code&gt; out of the backend project directory, and use &lt;a href=&#34;https://create-react-app.dev/docs/getting-started&#34;&gt;create-react-app&lt;/a&gt; to generate the necessary code for your React frontend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npx create-react-app my-app-frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After creating the project locally, you should also &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/create-a-repo&#34;&gt;create a repository on GitHub&lt;/a&gt; to host your repo and help collaborate, if you&#39;re working with a partner.&lt;/p&gt; &#xA;&lt;h3&gt;Fetch Example&lt;/h3&gt; &#xA;&lt;p&gt;Your React app should make fetch requests to your Sinatra backend! Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;fetch(&#34;http://localhost:9292/test&#34;)&#xA;  .then((r) =&amp;gt; r.json())&#xA;  .then((data) =&amp;gt; console.log(data));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This project is intended to focus more on the backend than the frontend, so try and keep the React side of things relatively simple. Focus on working with Active Record and performing CRUD actions. What are some interesting queries you can write? What kinds of questions can you ask of your data?&lt;/li&gt; &#xA; &lt;li&gt;Once you have a project idea, come up with a domain model and decide what relationships exist between the models in your application. Use a tool like &lt;a href=&#34;https://dbdiagram.io/&#34;&gt;dbdiagram.io&lt;/a&gt; to help visualize your models.&lt;/li&gt; &#xA; &lt;li&gt;Decide on your API endpoints. What data should they return? What kind of CRUD action should they perform? What data do they need from the client?&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://www.postman.com/downloads/&#34;&gt;Postman&lt;/a&gt; to test your endpoints.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;binding.pry&lt;/code&gt; to debug your requests on the server. It&#39;s very helpful to use a &lt;code&gt;binding.pry&lt;/code&gt; in your controller within a route to see what &lt;code&gt;params&lt;/code&gt; are being sent.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://developer.chrome.com/docs/devtools/network/&#34;&gt;Network Tab in the Dev Tools&lt;/a&gt; in the frontend to debug your requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://create-react-app.dev/docs/getting-started&#34;&gt;create-react-app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dbdiagram.io/&#34;&gt;dbdiagram.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postman.com/downloads/&#34;&gt;Postman&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>googleapis/google-api-ruby-client</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/googleapis/google-api-ruby-client</id>
    <link href="https://github.com/googleapis/google-api-ruby-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;REST client for Google APIs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple REST Clients for Google APIs&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of simple client libraries for various Google APIs. These libraries are generated automatically from &lt;a href=&#34;https://developers.google.com/discovery&#34;&gt;Discovery Documents&lt;/a&gt;, and the code generator is also hosted here in this repository.&lt;/p&gt; &#xA;&lt;p&gt;Each client provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A client object that connects to the HTTP/JSON REST endpoint for the service.&lt;/li&gt; &#xA; &lt;li&gt;Ruby objects for data structures related to the service.&lt;/li&gt; &#xA; &lt;li&gt;Integration with the googleauth gem for authentication using OAuth, API keys, and service accounts.&lt;/li&gt; &#xA; &lt;li&gt;Control of retry, pagination, and timeouts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These client libraries are officially supported by Google, and are updated regularly to track changes to the service. However, many Google services, especially Google Cloud Platform services such as Cloud Storage, Pub/Sub, and BigQuery, may provide a more modern client that is easier to use and more performant. See the section below titled &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-ruby-client/main/#which-client-should-i-use&#34;&gt;&#34;Which client should I use?&#34;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Using the clients&lt;/h2&gt; &#xA;&lt;p&gt;The client gems are named according to the pattern &lt;code&gt;google-apis-&amp;lt;servicename&amp;gt;_&amp;lt;serviceversion&amp;gt;&lt;/code&gt;. For example, the client for the Google Drive V3 API is &lt;code&gt;google-apis-drive_v3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install the client using &lt;code&gt;gem install&lt;/code&gt; or by adding it to your &lt;code&gt;Gemfile&lt;/code&gt;. Then, to use it, require the file and instantiate the service. For example to use the Drive API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;google/apis/drive_v3&#39;&#xA;&#xA;drive = Google::Apis::DriveV3::DriveService.new&#xA;drive.authorization = ... # See Googleauth or Signet libraries&#xA;&#xA;# Search for files in Drive (first page only)&#xA;files = drive.list_files(q: &#34;title contains &#39;finances&#39;&#34;)&#xA;files.items.each do |file|&#xA;  puts file.title&#xA;end&#xA;&#xA;# Upload a file&#xA;metadata = Google::Apis::DriveV3::File.new(name: &#39;test.txt&#39;)&#xA;metadata = drive.create_file(metadata, upload_source: &#39;/tmp/test.txt&#39;, content_type: &#39;text/plain&#39;)&#xA;&#xA;# Download a file&#xA;drive.get_file(metadata.id, download_dest: &#39;/tmp/downloaded-test.txt&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Following is another example using the Content API (Google Merchant Center), provided by the &lt;code&gt;google-apis-content_v2&lt;/code&gt; gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;google/apis/content_v2&#39;&#xA;require &#39;googleauth&#39; # https://github.com/googleapis/google-auth-library-ruby&#xA;&#xA;content = Google::Apis::ContentV2::ShoppingContentService.new&#xA;&#xA;scope = &#39;https://www.googleapis.com/auth/content&#39;&#xA;merchant_id = # Merchant ID found on dashboard&#xA;&#xA;content.authorization = Google::Auth::ServiceAccountCredentials.make_creds(&#xA;  json_key_io: File.open(&#39;./content-api-key.json&#39;),&#xA;  scope: scope)&#xA;&#xA;content.authorization.fetch_access_token!&#xA;# Service methods: https://googleapis.dev/ruby/google-api-client/latest/Google/Apis/ContentV2/ShoppingContentService.html&#xA;content.list_datafeeds(merchant_id) # Returns Google::Apis::ContentV2::ListDatafeedsResponse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detailed information, see the &lt;a href=&#34;https://github.com/googleapis/google-api-ruby-client/raw/main/docs/usage-guide.md&#34;&gt;Usage Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Which client should I use?&lt;/h2&gt; &#xA;&lt;p&gt;Google provides two types of Ruby API client libraries: &lt;strong&gt;simple REST clients&lt;/strong&gt; and &lt;strong&gt;modern clients&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The libraries in this repo are &lt;em&gt;simple REST clients&lt;/em&gt;. These clients connect to HTTP/JSON REST endpoints and are automatically generated from service discovery documents. They support most API functionality, but their class interfaces are sometimes awkward.&lt;/p&gt; &#xA;&lt;p&gt;Modern clients are produced by a modern code generator, combined with hand-crafted functionality for some services. Most modern clients connect to high-performance gRPC endpoints, although a few are backed by REST services. Modern clients are available for many Google services, especially Cloud Platform services, but do not yet support all the services covered by the simple clients. Most modern clients live in the &lt;a href=&#34;https://github.com/googleapis/google-cloud-ruby&#34;&gt;https://github.com/googleapis/google-cloud-ruby&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For most users, we recommend the modern client, if one is available.&lt;/strong&gt; Compared with simple clients, modern clients are generally much easier to use and more Ruby-like, support more advanced features such as streaming and long-running operations, and often provide much better performance. You may consider using a simple client instead, if a modern client is not yet available for the service you want to use, or if you are not able to use gRPC on your infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;The documentation for the particular Google service you are working with, may provide guidance regarding the preferred client library to use.&lt;/p&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/google/google-api-ruby-client/tree/main/samples&#34;&gt;samples&lt;/a&gt; for examples on how to use the client library for various services.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Ruby versions&lt;/h2&gt; &#xA;&lt;p&gt;This library is supported on Ruby 2.5+.&lt;/p&gt; &#xA;&lt;p&gt;Google provides official support for Ruby versions that are actively supported by Ruby Core -- that is, Ruby versions that are either in normal maintenance or in security maintenance, and not end of life. Currently, this means Ruby 2.5 and later. Older versions of Ruby &lt;em&gt;may&lt;/em&gt; still work, but are unsupported and not recommended. See &lt;a href=&#34;https://www.ruby-lang.org/en/downloads/branches/&#34;&gt;https://www.ruby-lang.org/en/downloads/branches/&lt;/a&gt; for details about the Ruby support schedule.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is licensed under Apache 2.0. Full license text is available in the &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-ruby-client/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/google-api-ruby-client/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/google/google-api-ruby-client/issues&#34;&gt;report bugs at the project on Github&lt;/a&gt;. Don&#39;t hesitate to &lt;a href=&#34;http://stackoverflow.com/questions/tagged/google-api-ruby-client&#34;&gt;ask questions&lt;/a&gt; about the client or APIs on &lt;a href=&#34;http://stackoverflow.com&#34;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/view_component</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/github/view_component</id>
    <link href="https://github.com/github/view_component" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A framework for building reusable, testable &amp; encapsulated view components in Ruby on Rails.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/github/view_component/main/docs/logo/readme-light.svg#gh-light-mode-only&#34; alt=&#34;ViewComponent logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/github/view_component/main/docs/logo/readme-dark.svg#gh-dark-mode-only&#34; alt=&#34;ViewComponent logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A framework for building reusable, testable &amp;amp; encapsulated view components in Ruby on Rails.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://viewcomponent.org/&#34;&gt;viewcomponent.org&lt;/a&gt; for documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project is intended to be a safe, welcoming space for collaboration. Contributors are expected to adhere to the &lt;a href=&#34;http://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; code of conduct. We recommend reading the &lt;a href=&#34;https://raw.githubusercontent.com/github/view_component/main/docs/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; as well.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ViewComponent is available as open source under the terms of the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mperham/sidekiq</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/mperham/sidekiq</id>
    <link href="https://github.com/mperham/sidekiq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple, efficient background processing for Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sidekiq&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/sidekiq&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/sidekiq.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/mperham/sidekiq/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, efficient background processing for Ruby.&lt;/p&gt; &#xA;&lt;p&gt;Sidekiq uses threads to handle many jobs at the same time in the same process. It does not require Rails but will integrate tightly with Rails to make background processing dead simple.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Latency&lt;/th&gt; &#xA;   &lt;th&gt;Garbage created for 10k jobs&lt;/th&gt; &#xA;   &lt;th&gt;Time to process 100k jobs&lt;/th&gt; &#xA;   &lt;th&gt;Throughput&lt;/th&gt; &#xA;   &lt;th&gt;Ruby&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 6.0.2&lt;/td&gt; &#xA;   &lt;td&gt;3 ms&lt;/td&gt; &#xA;   &lt;td&gt;156 MB&lt;/td&gt; &#xA;   &lt;td&gt;14.0 sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;7100 jobs/sec&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MRI 2.6.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 6.0.0&lt;/td&gt; &#xA;   &lt;td&gt;3 ms&lt;/td&gt; &#xA;   &lt;td&gt;156 MB&lt;/td&gt; &#xA;   &lt;td&gt;19 sec&lt;/td&gt; &#xA;   &lt;td&gt;5200 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;MRI 2.6.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 4.0.0&lt;/td&gt; &#xA;   &lt;td&gt;10 ms&lt;/td&gt; &#xA;   &lt;td&gt;151 MB&lt;/td&gt; &#xA;   &lt;td&gt;22 sec&lt;/td&gt; &#xA;   &lt;td&gt;4500 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sidekiq 3.5.1&lt;/td&gt; &#xA;   &lt;td&gt;22 ms&lt;/td&gt; &#xA;   &lt;td&gt;1257 MB&lt;/td&gt; &#xA;   &lt;td&gt;125 sec&lt;/td&gt; &#xA;   &lt;td&gt;800 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resque 1.25.2&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;420 sec&lt;/td&gt; &#xA;   &lt;td&gt;240 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DelayedJob 4.1.1&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;465 sec&lt;/td&gt; &#xA;   &lt;td&gt;215 jobs/sec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This benchmark can be found in &lt;code&gt;bin/sidekiqload&lt;/code&gt; and assumes a Redis network latency of 1ms.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redis: 4.0+&lt;/li&gt; &#xA; &lt;li&gt;Ruby: MRI 2.5+ or JRuby 9.2+.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sidekiq 6.0 supports Rails 5.0+ but does not require it.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle add sidekiq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki/Getting-Started&#34;&gt;Getting Started wiki page&lt;/a&gt; and follow the simple setup process. You can watch &lt;a href=&#34;https://www.youtube.com/playlist?list=PLjeHh2LSCFrWGT5uVjUuFKAcrcj5kSai1&#34;&gt;this YouTube playlist&lt;/a&gt; to learn all about Sidekiq and see its features in action. Here&#39;s the Web UI:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mperham/sidekiq/raw/main/examples/web-ui.png&#34; alt=&#34;Web UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Want to Upgrade?&lt;/h2&gt; &#xA;&lt;p&gt;I also sell Sidekiq Pro and Sidekiq Enterprise, extensions to Sidekiq which provide more features, a commercial-friendly license and allow you to support high quality open source development all at the same time. Please see the &lt;a href=&#34;https://sidekiq.org/&#34;&gt;Sidekiq&lt;/a&gt; homepage for more detail.&lt;/p&gt; &#xA;&lt;p&gt;Subscribe to the &lt;strong&gt;&lt;a href=&#34;https://tinyletter.com/sidekiq&#34;&gt;quarterly newsletter&lt;/a&gt;&lt;/strong&gt; to stay informed about the latest features and changes to Sidekiq and its bigger siblings.&lt;/p&gt; &#xA;&lt;h2&gt;Problems?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please do not directly email any Sidekiq committers with questions or problems.&lt;/strong&gt; A community is best served when discussions are held in public.&lt;/p&gt; &#xA;&lt;p&gt;If you have a problem, please review the &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; and &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki/Problems-and-Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; wiki pages. Searching the &lt;a href=&#34;https://github.com/mperham/sidekiq/issues&#34;&gt;issues&lt;/a&gt; for your problem is also a good idea.&lt;/p&gt; &#xA;&lt;p&gt;Sidekiq Pro and Sidekiq Enterprise customers get private email support. You can purchase at &lt;a href=&#34;https://sidekiq.org&#34;&gt;https://sidekiq.org&lt;/a&gt;; email &lt;a href=&#34;mailto:support@contribsys.com&#34;&gt;support@contribsys.com&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;Useful resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Product documentation is in the &lt;a href=&#34;https://github.com/mperham/sidekiq/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Occasional announcements are made to the &lt;a href=&#34;https://twitter.com/sidekiq&#34;&gt;@sidekiq&lt;/a&gt; Twitter account.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://stackoverflow.com/questions/tagged/sidekiq&#34;&gt;Sidekiq tag&lt;/a&gt; on Stack Overflow has lots of useful Q &amp;amp; A.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Every Friday morning is Sidekiq happy hour: I video chat and answer questions. See the &lt;a href=&#34;https://sidekiq.org/support.html&#34;&gt;Sidekiq support page&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/mperham/sidekiq/raw/main/.github/contributing.md&#34;&gt;the contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/mperham/sidekiq/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for licensing details.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Mike Perham, &lt;a href=&#34;https://twitter.com/getajobmike&#34;&gt;@getajobmike&lt;/a&gt; / &lt;a href=&#34;https://twitter.com/sidekiq&#34;&gt;@sidekiq&lt;/a&gt;, &lt;a href=&#34;https://www.mikeperham.com&#34;&gt;https://www.mikeperham.com&lt;/a&gt; / &lt;a href=&#34;https://www.contribsys.com&#34;&gt;https://www.contribsys.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rails/webpacker</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/rails/webpacker</id>
    <link href="https://github.com/rails/webpacker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use Webpack to manage app-like JavaScript modules in Rails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Webpacker has been retired 🌅&lt;/h1&gt; &#xA;&lt;p&gt;Webpacker has served the Rails community for over five years as a bridge to compiled and bundled JavaScript. This bridge is no longer needed for most people in most situations following &lt;a href=&#34;https://rubyonrails.org/2021/12/15/Rails-7-fulfilling-a-vision&#34;&gt;the release of Rails 7&lt;/a&gt;. We now have &lt;a href=&#34;https://world.hey.com/dhh/rails-7-will-have-three-great-answers-to-javascript-in-2021-8d68191b&#34;&gt;three great default answers to JavaScript in 2021+&lt;/a&gt;, and thus we will no longer be evolving Webpacker in an official Rails capacity.&lt;/p&gt; &#xA;&lt;p&gt;For applications currently using Webpacker, the first recommendation is to switch to &lt;a href=&#34;https://github.com/rails/jsbundling-rails/&#34;&gt;jsbundling-rails with Webpack&lt;/a&gt; (or another bundler). You can follow &lt;a href=&#34;https://github.com/rails/jsbundling-rails/raw/main/docs/switch_from_webpacker.md&#34;&gt;the switching guide&lt;/a&gt;, if you choose this option.&lt;/p&gt; &#xA;&lt;p&gt;Secondly, you may want to try making the jump all the way to &lt;a href=&#34;https://github.com/rails/importmap-rails/&#34;&gt;import maps&lt;/a&gt;. That&#39;s the default setup for new Rails 7 applications, but depending on your JavaScript use, it may be a substantial jump.&lt;/p&gt; &#xA;&lt;p&gt;Finally, you can continue to use Webpacker as-is. We will continue to address security issues on the Ruby side of the gem according to &lt;a href=&#34;https://guides.rubyonrails.org/maintenance_policy.html#security-issues&#34;&gt;the normal maintenance schedule of Rails&lt;/a&gt;. But we will not be updating the gem to include newer versions of the JavaScript libraries. This pertains to the v5 edition of this gem that was included by default with previous versions of Rails.&lt;/p&gt; &#xA;&lt;p&gt;The development of v6 will not result in an official gem released by the Rails team nor see any future support. But Justin Gordon is continuing that line of development – including a focus on hot-module reloading features etc – under a new gem called &lt;a href=&#34;https://github.com/shakacode/shakapacker&#34;&gt;Shakapacker&lt;/a&gt; that is based on the unreleased v6 work from this repository.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to everyone who has contributed to Webpacker over the last five-plus years!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please refer to the &lt;a href=&#34;https://github.com/rails/webpacker/tree/5-x-stable&#34;&gt;5-x-stable&lt;/a&gt; branch for 5.x documentation.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rapid7/metasploit-framework</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/rapid7/metasploit-framework</id>
    <link href="https://github.com/rapid7/metasploit-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit &lt;a href=&#34;https://travis-ci.org/rapid7/metasploit-framework&#34;&gt;&lt;img src=&#34;https://travis-ci.org/rapid7/metasploit-framework.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/metasploitframework/metasploit-framework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/metasploitframework/metasploit-framework.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The Metasploit Framework is released under a BSD-style license. See &lt;a href=&#34;https://raw.githubusercontent.com/rapid7/metasploit-framework/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of this software is available from: &lt;a href=&#34;https://metasploit.com&#34;&gt;https://metasploit.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bug tracking and development information can be found at: &lt;a href=&#34;https://github.com/rapid7/metasploit-framework&#34;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;New bugs and feature requests should be directed to: &lt;a href=&#34;https://r-7.co/MSF-BUGv1&#34;&gt;https://r-7.co/MSF-BUGv1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;API documentation for writing modules can be found at: &lt;a href=&#34;https://rapid7.github.io/metasploit-framework/api&#34;&gt;https://rapid7.github.io/metasploit-framework/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Questions and suggestions can be sent to: Freenode IRC channel or e-mail the metasploit-hackers mailing list&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Generally, you should use &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers&#34;&gt;the free installer&lt;/a&gt;, which contains all of the dependencies and will get you up and running with a few clicks. See the &lt;a href=&#34;https://r-7.co/MSF-DEV&#34;&gt;Dev Environment Setup&lt;/a&gt; if you&#39;d like to deal with dependencies on your own.&lt;/p&gt; &#xA;&lt;h2&gt;Using Metasploit&lt;/h2&gt; &#xA;&lt;p&gt;Metasploit can do all sorts of things. The first thing you&#39;ll want to do is start &lt;code&gt;msfconsole&lt;/code&gt;, but after that, you&#39;ll probably be best served by reading &lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/&#34; title=&#34;Metasploit Unleashed&#34;&gt;Metasploit Unleashed&lt;/a&gt;, the &lt;a href=&#34;https://metasploit.github.io&#34;&gt;great community resources&lt;/a&gt;, or the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Setting-Up-a-Metasploit-Development-Environment&#34; title=&#34;Metasploit Development Environment Setup&#34;&gt;Dev Environment Setup&lt;/a&gt; guide on GitHub, which will walk you through the whole process from installing all the dependencies, to cloning the repository, and finally to submitting a pull request. For slightly more information, see &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluent/fluentd-kubernetes-daemonset</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/fluent/fluentd-kubernetes-daemonset</id>
    <link href="https://github.com/fluent/fluentd-kubernetes-daemonset" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fluentd daemonset for Kubernetes and it Docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fluentd Daemonset for Kubernetes&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;❗&lt;/span&gt; README.md is generated from templates/README.md.erb&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/fluent/fluentd-kubernetes-daemonset.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/fluent/fluentd-kubernetes-daemonset.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset&#34;&gt;&lt;img src=&#34;https://img.shields.io/imagelayers/image-size/fluent/fluentd-kubernetes-daemonset/latest.svg?sanitize=true&#34; alt=&#34;ImageLayers Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset&#34;&gt;&lt;img src=&#34;https://img.shields.io/imagelayers/layers/fluent/fluentd-kubernetes-daemonset/latest.svg?sanitize=true&#34; alt=&#34;ImageLayers Layers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported tags and respective &lt;code&gt;Dockerfile&lt;/code&gt; links&lt;/h2&gt; &#xA;&lt;p&gt;See also dockerhub tags page: &lt;a href=&#34;https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset/tags&#34;&gt;https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset/tags&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debian&lt;/h3&gt; &#xA;&lt;h4&gt;Current stable&lt;/h4&gt; &#xA;&lt;p&gt;As the current limitation about the number of automated builds on hub.docker.com, there are some restrictions to ship daemonset images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;stackdriver&lt;/code&gt;, &lt;code&gt;papertrail&lt;/code&gt;, &lt;code&gt;syslog&lt;/code&gt; images (x86_64/arm64) won&#39;t be published anymore&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;logentries&lt;/code&gt;, &lt;code&gt;loggly&lt;/code&gt;, &lt;code&gt;logzio&lt;/code&gt;, &lt;code&gt;s3&lt;/code&gt; arm64 images won&#39;t be published anymore (x86_64 only supported)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to use above non published images, build it by yourself. Dockefile itself is still maintained in this repository.&lt;/p&gt; &#xA;&lt;h5&gt;Multi-Arch images&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Azureblob&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-azureblob-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-azureblob-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Elasticsearch7&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-elasticsearch7-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-elasticsearch7-1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Opensearch&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-opensearch-1.1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-opensearch-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Cloudwatch&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-cloudwatch-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-cloudwatch-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Forward&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-forward-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-forward-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Gcs&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-gcs-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-gcs-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Graylog&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-graylog-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-graylog-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kafka&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kafka-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kafka-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kafka2&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kafka2-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kafka2-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kinesis&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kinesis-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kinesis-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;x86_64 images&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Azureblob&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-azureblob/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-azureblob-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-azureblob-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Elasticsearch7&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-elasticsearch7/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-elasticsearch7-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-elasticsearch7-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch-amd64&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Elasticsearch6&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-elasticsearch6/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Opensearch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-opensearch/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-opensearch-amd64-1.1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-opensearch-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Loggly&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-loggly/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-loggly-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-loggly-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Logentries&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-logentries/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-logentries-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-logentries-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Cloudwatch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-cloudwatch/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-cloudwatch-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-cloudwatch-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Stackdriver&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-stackdriver/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;S3&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-s3/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-s3-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-s3-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Syslog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-syslog/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Forward&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-forward/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-forward-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-forward-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Gcs&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-gcs/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-gcs-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-gcs-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Graylog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-graylog/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-graylog-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-graylog-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Papertrail&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-papertrail/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Logzio&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-logzio/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-logzio-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-logzio-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kafka&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-kafka/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kafka-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kafka-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kafka2&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-kafka2/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kafka2-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kafka2-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kinesis&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/debian-kinesis/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kinesis-amd64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kinesis-amd64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;arm64 images&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Azureblob&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-azureblob/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-azureblob-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-azureblob-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Elasticsearch7&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-elasticsearch7/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-elasticsearch7-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-elasticsearch7-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch-arm64&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Elasticsearch6&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-elasticsearch6/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Opensearch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-opensearch/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-opensearch-arm64-1.1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-opensearch-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Loggly&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-loggly/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Logentries&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-logentries/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Cloudwatch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-cloudwatch/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-cloudwatch-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-cloudwatch-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Stackdriver&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-stackdriver/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;S3&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-s3/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Syslog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-syslog/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Forward&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-forward/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-forward-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-forward-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Gcs&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-gcs/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-gcs-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-gcs-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Graylog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-graylog/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-graylog-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-graylog-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Papertrail&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-papertrail/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Logzio&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-logzio/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kafka&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-kafka/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kafka-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kafka-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kafka2&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-kafka2/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kafka2-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kafka2-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Kinesis&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.14/arm64/debian-kinesis/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-kinesis-arm64-1.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker pull fluent/fluentd-kubernetes-daemonset:v1.14-debian-kinesis-arm64-1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;v1-debian-PLUGIN&lt;/code&gt; tag to refer latest v1 image, e.g. &lt;code&gt;v1-debian-elasticsearch&lt;/code&gt;. On production, strict tag is better to avoid unexpected update.&lt;/p&gt; &#xA;&lt;p&gt;See dockerhub&#39;s tags page for older tags.&lt;/p&gt; &#xA;&lt;h4&gt;Old stable&lt;/h4&gt; &#xA;&lt;p&gt;v0.12 development has been ended. These images are never updated.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-elasticsearch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-elasticsearch/Dockerfile&#34;&gt;archived-image/v0.12/debian-elasticsearch/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-loggly&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-loggly/Dockerfile&#34;&gt;archived-image/v0.12/debian-loggly/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-logentries&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-logentries/Dockerfile&#34;&gt;archived-image/v0.12/debian-logentries/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-cloudwatch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-cloudwatch/Dockerfile&#34;&gt;archived-image/v0.12/debian-cloudwatch/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-stackdriver&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-stackdriver/Dockerfile&#34;&gt;archived-image/v0.12/debian-stackdriver/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-s3&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-s3/Dockerfile&#34;&gt;archived-image/v0.12/debian-s3/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-gcs&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-gcs/Dockerfile&#34;&gt;archived-image/v0.12/debian-gcs/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-papertrail&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-papertrail/Dockerfile&#34;&gt;archived-image/v0.12/debian-papertrail/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-syslog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-syslog/Dockerfile&#34;&gt;archived-image/v0.12/debian-syslog/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-graylog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-graylog/Dockerfile&#34;&gt;archived-image/v0.12/debian-graylog/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-logzio&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-logzio/Dockerfile&#34;&gt;archived-image/v0.12/debian-logzio/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-kafka&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-kafka/Dockerfile&#34;&gt;archived-image/v0.12/debian-kafka/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-splunkhec&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-splunkhec/Dockerfile&#34;&gt;archived-image/v0.12/debian-splunkhec/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-debian-kinesis&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/debian-kinesis/Dockerfile&#34;&gt;archived-image/v0.12/debian-kinesis/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Alpine Linux (This is deprecated. Use Debian images instead)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-elasticsearch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-elasticsearch/Dockerfile&#34;&gt;archived-image/v0.12/alpine-elasticsearch/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-loggly&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-loggly/Dockerfile&#34;&gt;archived-image/v0.12/alpine-loggly/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-logentries&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-logentries/Dockerfile&#34;&gt;archived-image/v0.12/alpine-logentries/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-cloudwatch&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-cloudwatch/Dockerfile&#34;&gt;archived-image/v0.12/alpine-cloudwatch/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-stackdriver&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-stackdriver/Dockerfile&#34;&gt;archived-image/v0.12/alpine-stackdriver/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-s3&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-s3/Dockerfile&#34;&gt;archived-image/v0.12/alpine-s3/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-gcs&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-gcs/Dockerfile&#34;&gt;archived-image/v0.12/alpine-gcs/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-papertrail&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-papertrail/Dockerfile&#34;&gt;archived-image/v0.12/alpine-papertrail/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-syslog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-syslog/Dockerfile&#34;&gt;archived-image/v0.12/alpine-syslog/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-graylog&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-graylog/Dockerfile&#34;&gt;archived-image/v0.12/alpine-graylog/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-logzio&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-logzio/Dockerfile&#34;&gt;archived-image/v0.12/alpine-logzio/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-kafka&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-kafka/Dockerfile&#34;&gt;archived-image/v0.12/alpine-kafka/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-kinesis&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-kinesis/Dockerfile&#34;&gt;archived-image/v0.12/alpine-kinesis/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v0.12-alpine-splunkhec&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/archived-image/v0.12/alpine-splunkhec/Dockerfile&#34;&gt;archived-image/v0.12/alpine-splunkhec/Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Fluentd?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://www.fluentd.org/assets/img/miscellany/fluentd-logo.png&#34; alt=&#34;Fluentd Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fluentd is an open source data collector, which lets you unify the data collection and consumption for a better use and understanding of data.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://www.fluentd.org/&#34;&gt;www.fluentd.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Image versions&lt;/h2&gt; &#xA;&lt;p&gt;Fluentd versioning is as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Series&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v1.x&lt;/td&gt; &#xA;   &lt;td&gt;current stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v0.12&lt;/td&gt; &#xA;   &lt;td&gt;Old stable, no longer updated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;h3&gt;Default image version&lt;/h3&gt; &#xA;&lt;p&gt;Default YAML uses latest v1 images like &lt;code&gt;fluent/fluentd-kubernetes-daemonset:v1-debian-kafka&lt;/code&gt;. If you want to avoid unexpected image update, specify exact version for &lt;code&gt;image&lt;/code&gt; like &lt;code&gt;fluent/fluentd-kubernetes-daemonset:v1.8.0-debian-kafka-1.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run as root&lt;/h3&gt; &#xA;&lt;p&gt;This is for v0.12 images.&lt;/p&gt; &#xA;&lt;p&gt;In Kubernetes and default setting, fluentd needs root permission to read logs in &lt;code&gt;/var/log&lt;/code&gt; and write &lt;code&gt;pos_file&lt;/code&gt; to &lt;code&gt;/var/log&lt;/code&gt;. To avoid permission error, you need to set &lt;code&gt;FLUENT_UID&lt;/code&gt; environment variable to &lt;code&gt;0&lt;/code&gt; in your Kubernetes configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Use your configuration&lt;/h3&gt; &#xA;&lt;p&gt;These images have default configuration and support some environment variables for parameters but it sometimes doesn&#39;t fit your case. If you want to use your configuration, use ConfigMap feature.&lt;/p&gt; &#xA;&lt;p&gt;Each image has following configurations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fluent.conf: Destination setting, Elaticsearch, kafka and etc.&lt;/li&gt; &#xA; &lt;li&gt;kubernetes.conf: k8s specific setting. &lt;code&gt;tail&lt;/code&gt; input for log files and &lt;code&gt;kubernetes_metadata&lt;/code&gt; filter&lt;/li&gt; &#xA; &lt;li&gt;tail_container_parse.conf: parser setting for &lt;code&gt;/var/log/containers/*.log&lt;/code&gt;. See also &#34;Use CRI parser for containerd/cri-o&#34; logs section&lt;/li&gt; &#xA; &lt;li&gt;prometheus.conf: prometheus plugin for fluentd monitoring&lt;/li&gt; &#xA; &lt;li&gt;systemd.conf: systemd plugin for collecting systemd-journal log. See also &#34;Disable systemd input&#34; section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Overwrite conf file via ConfigMap. See also several examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/kubernetes-tutorials/cluster-level-logging-in-kubernetes-with-fluentd-e59aa2b6093a&#34;&gt;Cluster-level Logging in Kubernetes with Fluentd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fluent/fluentd-kubernetes-daemonset/pull/349#issuecomment-579097659&#34;&gt;https://github.com/fluent/fluentd-kubernetes-daemonset/pull/349#issuecomment-579097659&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use CRI parser for containerd/cri-o logs&lt;/h3&gt; &#xA;&lt;p&gt;This feature is available since v1.12.0-xxx-1.1.&lt;/p&gt; &#xA;&lt;p&gt;By default, these images use &lt;code&gt;json&lt;/code&gt; parser for &lt;code&gt;/var/log/containers/&lt;/code&gt; files because docker generates json formatted logs. On the other hand, containerd/cri-o use different log format. To parse such logs, you need to use &lt;a href=&#34;https://github.com/fluent/fluent-plugin-parser-cri&#34;&gt;&lt;code&gt;cri&lt;/code&gt; parser&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;cri&lt;/code&gt; parser by overwriting &lt;code&gt;tail_container_parse.conf&lt;/code&gt; via ConfigMap.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# configuration example&#xA;&amp;lt;parse&amp;gt;&#xA;  @type cri&#xA;&amp;lt;/parse&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/fluent/fluent-plugin-parser-cri#log-and-configuration-example&#34;&gt;CRI parser README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use FLUENT_CONTAINER_TAIL_PATH to change container logs folder&lt;/h3&gt; &#xA;&lt;p&gt;You can update the default path for the container logs i.e /var/log/container/*.log and also one can add multiple path as defined in this fluentd document &lt;a href=&#34;https://docs.fluentd.org/input/tail#path&#34;&gt;https://docs.fluentd.org/input/tail#path&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use FLUENT_CONTAINER_TAIL_EXCLUDE_PATH to exclude specific container logs&lt;/h3&gt; &#xA;&lt;p&gt;Since v1.9.3 or later images.&lt;/p&gt; &#xA;&lt;p&gt;You can exclude container logs from &lt;code&gt;/var/log/containers/&lt;/code&gt; with &lt;code&gt;FLUENT_CONTAINER_TAIL_EXCLUDE_PATH&lt;/code&gt;. If you have a trouble with specific log, use this envvar, e.g. &lt;code&gt;[&#34;/var/log/containers/logname-*&#34;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;exclude_path&lt;/code&gt; parameter document: &lt;a href=&#34;https://docs.fluentd.org/input/tail#exclude_path&#34;&gt;https://docs.fluentd.org/input/tail#exclude_path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fluentd log issue with backslash: &lt;a href=&#34;https://github.com/fluent/fluentd/issues/2545&#34;&gt;https://github.com/fluent/fluentd/issues/2545&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disable systemd input&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t setup systemd in the container, fluentd shows following messages by default configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[warn]: #0 [in_systemd_bootkube] Systemd::JournalError: No such file or directory retrying in 1s&#xA;[warn]: #0 [in_systemd_kubelet] Systemd::JournalError: No such file or directory retrying in 1s&#xA;[warn]: #0 [in_systemd_docker] Systemd::JournalError: No such file or directory retrying in 1s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can suppress these messages by setting &lt;code&gt;disable&lt;/code&gt; to &lt;code&gt;FLUENTD_SYSTEMD_CONF&lt;/code&gt; environment variable in your kubernetes configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Disable prometheus input plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, latest images launch &lt;code&gt;prometheus&lt;/code&gt; plugins to monitor fluentd. You can disable prometheus input plugin by setting &lt;code&gt;disable&lt;/code&gt; to &lt;code&gt;FLUENTD_PROMETHEUS_CONF&lt;/code&gt; environment variable in your kubernetes configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Disable sed execution on elasticsearch image&lt;/h3&gt; &#xA;&lt;p&gt;This is for older images. Latest elasticsearch images don&#39;t use sed.&lt;/p&gt; &#xA;&lt;p&gt;By historical reason, elasaticsearch image executes &lt;code&gt;sed&lt;/code&gt; command during startup phase when &lt;code&gt;FLUENT_ELASTICSEARCH_USER&lt;/code&gt; or &lt;code&gt;FLUENT_ELASTICSEARCH_PASSWORD&lt;/code&gt; is specified. This sometimes causes a problem with read only mount. To avoid this problem, set &#34;true&#34; to &lt;code&gt;FLUENT_ELASTICSEARCH_SED_DISABLE&lt;/code&gt; environment variable in your kubernetes configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Running on OpenShift&lt;/h3&gt; &#xA;&lt;p&gt;This daemonset setting mounts &lt;code&gt;/var/log&lt;/code&gt; as service account &lt;code&gt;fluentd&lt;/code&gt; so you need to run containers as privileged container. Here is command example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;oc project kube-system&#xA;oc create -f https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/fluentd-daemonset-elasticsearch-rbac.yaml&#xA;oc adm policy add-scc-to-user privileged -z fluentd&#xA;oc patch ds fluentd -p &#34;spec:&#xA;  template:&#xA;    spec:&#xA;      containers:&#xA;      - name: fluentd&#xA;        securityContext:&#xA;          privileged: true&#34;&#xA;oc delete pod -l k8s-app=fluentd-logging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is from &lt;a href=&#34;https://nekop.hatenablog.com/entry/2018/04/20/170257&#34;&gt;nekop&#39;s japanese article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;h3&gt;kafka image doesn&#39;t support zookeeper parameters&lt;/h3&gt; &#xA;&lt;p&gt;zookeeper gem doesn&#39;t work on Debian 10, so kafka image doesn&#39;t include zookeeper gem.&lt;/p&gt; &#xA;&lt;h3&gt;Windows k8s daemonset not supported in this repository&lt;/h3&gt; &#xA;&lt;p&gt;Maintainers don&#39;t have k8s experience on Windows. Some users create k8s daemonset on Windows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bgsilvait/k8s-fluentd-windows&#34;&gt;https://github.com/bgsilvait/k8s-fluentd-windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/k1nger/fluentd-windows-daemon&#34;&gt;https://github.com/k1nger/fluentd-windows-daemon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check them out.&lt;/p&gt; &#xA;&lt;h3&gt;kafka image suggestion&lt;/h3&gt; &#xA;&lt;p&gt;Using debian-kafka2/debian-kafka2-arm64 images are better than using debian-kafka/debian-kafka-arm64 images. Because debian-kafka2/debian-kafka2-arm64 images use &lt;code&gt;out_kafka2&lt;/code&gt; plugin but debian-kafka/debian-kafka-arm64 images use deprecated &lt;code&gt;out_kafka_buffered&lt;/code&gt; plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Some images are contributed by users. If you have a problem/question for following images, ask it to contributors.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;azureblob : @elsesiy&lt;/li&gt; &#xA; &lt;li&gt;papertrail : @alexouzounis&lt;/li&gt; &#xA; &lt;li&gt;kafka : @erhudy&lt;/li&gt; &#xA; &lt;li&gt;graylog : @rtnpro&lt;/li&gt; &#xA; &lt;li&gt;gcs : @andor-pierdelacabeza&lt;/li&gt; &#xA; &lt;li&gt;Amazon Kinesis : @shiftky&lt;/li&gt; &#xA; &lt;li&gt;logz.io : @SaMnCo / @jamielennox&lt;/li&gt; &#xA; &lt;li&gt;splunkhec: @FutureSharks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently, we don&#39;t accept new destination request without contribution. See &lt;a href=&#34;https://github.com/fluent/fluentd-kubernetes-daemonset/issues/293&#34;&gt;https://github.com/fluent/fluentd-kubernetes-daemonset/issues/293&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.fluentd.org/container-deployment/kubernetes&#34;&gt;Kubernetes Logging with Fluentd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;We can&#39;t notice comments in the DockerHub so don&#39;t use them for reporting issues or asking question.&lt;/p&gt; &#xA;&lt;p&gt;If you have any problems with or questions about this image, please contact us through a &lt;a href=&#34;https://github.com/fluent/fluentd-kubernetes-daemonset/issues&#34;&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Pull Request&lt;/h2&gt; &#xA;&lt;p&gt;Update &lt;code&gt;templates&lt;/code&gt; files instead of &lt;code&gt;docker-image&lt;/code&gt; files. &lt;code&gt;docker-image&lt;/code&gt; files are automatically generated from &lt;code&gt;templates&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: This file is generated from &lt;a href=&#34;https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/templates/README.md.erb&#34;&gt;templates/README.md.erb&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>prawnpdf/prawn</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/prawnpdf/prawn</id>
    <link href="https://github.com/prawnpdf/prawn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, Nimble PDF Writer for Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prawn: Fast, Nimble PDF Generation For Ruby&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/prawn&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/prawn.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prawnpdf/prawn/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/prawnpdf/prawn/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/prawnpdf/prawn&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/prawnpdf/prawn/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained-yes-brightgreen.svg?sanitize=true&#34; alt=&#34;Maintained: yes&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Prawn is a pure Ruby PDF generation library that provides a lot of great functionality while trying to remain simple and reasonably performant. Here are some of the important features we provide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vector drawing support, including lines, polygons, curves, ellipses, etc.&lt;/li&gt; &#xA; &lt;li&gt;Extensive text rendering support, including flowing text and limited inline formatting options.&lt;/li&gt; &#xA; &lt;li&gt;Support for both PDF builtin fonts as well as embedded TrueType fonts&lt;/li&gt; &#xA; &lt;li&gt;A variety of low level tools for basic layout needs, including a simple grid system&lt;/li&gt; &#xA; &lt;li&gt;PNG and JPG image embedding, with flexible scaling options&lt;/li&gt; &#xA; &lt;li&gt;Security features including encryption and password protection&lt;/li&gt; &#xA; &lt;li&gt;Tools for rendering repeatable content (i.e headers, footers, and page numbers)&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive internationalization features, including full support for UTF-8 based fonts, right-to-left text rendering, fallback font support, and extension points for customizable text wrapping.&lt;/li&gt; &#xA; &lt;li&gt;Support for PDF outlines for document navigation&lt;/li&gt; &#xA; &lt;li&gt;Low level PDF features, allowing users to create custom extensions by dropping down all the way to the PDF object tree layer. (Mostly useful to those with knowledge of the PDF specification)&lt;/li&gt; &#xA; &lt;li&gt;Lots of other stuff!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Should You Use Prawn?&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a highly flexible PDF document generation system, Prawn might be the tool for you. It is not a reporting tool or a publishing toolchain, though it could be fairly easily used to build those things.&lt;/p&gt; &#xA;&lt;p&gt;One thing Prawn is not, and will never be, is an HTML to PDF generator. For those needs, consider looking into FlyingSaucer via JRuby, or one of the WebKit based tools, like Wicked or PDFKit. We do have basic support for inline styling but it is limited to a very small subset of functionality and is not suitable for rendering rich HTML documents.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Ruby Versions and Implementations&lt;/h2&gt; &#xA;&lt;p&gt;Because Prawn is pure Ruby and all of its runtime dependencies are maintained by us, it should work pretty much anywhere. We officially support all Ruby versions suported by Ruby Core Team and JRuby versions of matching Ruby version. However we will accept patches to fix problems on other Ruby platforms if they aren&#39;t too invasive.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Prawn&lt;/h2&gt; &#xA;&lt;p&gt;Prawn is distributed via RubyGems, and can be installed the usual way that you install gems: by simply typing &lt;code&gt;gem install prawn&lt;/code&gt; on the command line.&lt;/p&gt; &#xA;&lt;p&gt;You can also install from git if you&#39;d like, the &lt;em&gt;master&lt;/em&gt; branch contains the latest developments, and &lt;em&gt;stable&lt;/em&gt; represents the latest bug fixes to the currently released version of Prawn. If you go this route, using Bundler is encouraged.&lt;/p&gt; &#xA;&lt;h2&gt;Hello World!&lt;/h2&gt; &#xA;&lt;p&gt;If the following code runs and produces a working PDF file, you&#39;ve successfully installed Prawn.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;prawn&#34;&#xA;&#xA;Prawn::Document.generate(&#34;hello.pdf&#34;) do&#xA;  text &#34;Hello World!&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, you&#39;ll probably want to do more interesting things than that...&lt;/p&gt; &#xA;&lt;h2&gt;Manual&lt;/h2&gt; &#xA;&lt;p&gt;Felipe Doria provided us with a beautiful system for generating a user manual from our examples. This can be generated from the prawn source or you can download a pre-generated snapshot of it at &lt;a href=&#34;http://prawnpdf.org/manual.pdf&#34;&gt;http://prawnpdf.org/manual.pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that while we will try to keep the downloadable manual up to date, that it&#39;s provided as a convenience only and you should generate the manual yourself if you want to be sure the code in it actually runs and works as expected. To build the manual, here&#39;s what you need to do:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Switch to the stable branch (optional, stay on master for development version)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;gem install -g&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rake manual&lt;/code&gt;, which will generate &lt;em&gt;manual.pdf&lt;/em&gt; in the project root&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Release Policies&lt;/h2&gt; &#xA;&lt;p&gt;Before upgrading Prawn on one of your projects, you should read our &lt;a href=&#34;https://github.com/prawnpdf/prawn/wiki/API-Compatibility-Notes&#34;&gt;API compatibility&lt;/a&gt; guidelines. Generally speaking, you can expect tiny and minor version updates to always be safe upgrades, but major updates can introduce incompatibilities.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to read the release notes in &lt;a href=&#34;https://github.com/prawnpdf/prawn/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; each time we cut a new release, and lock your gems accordingly.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get help with Prawn is to post a message to our mailing list:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://groups.google.com/group/prawn-ruby&#34;&gt;http://groups.google.com/group/prawn-ruby&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Feel free to post any Prawn related question there, our community is very responsive and will be happy to help you figure out how to use Prawn, or help you determine whether it&#39;s the right tool for the task you are working on.&lt;/p&gt; &#xA;&lt;p&gt;Please make your posts to the list as specific as possible, including code samples and output where relevant. Do not post any information that should not be shared publicly, and be sure to reduce your example code as much as possible so that those who are responding to your question can more easily see what the issue might be.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Prawn adheres to the &lt;a href=&#34;https://raw.githubusercontent.com/prawnpdf/prawn/master/CODE_OF_CONDUCT.md&#34;&gt;Contributor Covenant&lt;/a&gt;. Unacceptable behavior can be reported to &lt;a href=&#34;mailto:conduct@prawnpdf.org&#34;&gt;conduct@prawnpdf.org&lt;/a&gt; which is monitored by the core team.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found a bug or want to submit a patch, please enter a ticket into our &lt;a href=&#34;http://github.com/prawnpdf/prawn/issues&#34;&gt;GitHub tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We strongly encourage bug reports to come with failing tests or at least a reduced example that demonstrates the problem. Similarly, patches should include tests, API documentation, and an update to the manual where relevant. Feel free to send a pull request early though, if you just want some feedback or a code review before preparing your code to be merged.&lt;/p&gt; &#xA;&lt;p&gt;If you are unsure about whether or not you&#39;ve found a bug, or want to check to see whether we&#39;d be interested in the feature you want to add before you start working on it, feel free to post to our mailing list.&lt;/p&gt; &#xA;&lt;p&gt;You can run our test suite in a few different ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Running &lt;code&gt;rake&lt;/code&gt; will run the entire test suite excluding any unresolved issues&lt;/li&gt; &#xA; &lt;li&gt;Running &lt;code&gt;rspec&lt;/code&gt; will run the entire test suite including unresolved issues&lt;/li&gt; &#xA; &lt;li&gt;Running &lt;code&gt;rspec -t unresolved&lt;/code&gt; will run &lt;em&gt;only&lt;/em&gt; unresolved issues&lt;/li&gt; &#xA; &lt;li&gt;Running &lt;code&gt;rspec -t issue:NUMBER&lt;/code&gt; will run the tests for a specific issue&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These filters make it possible for us to add failing test cases for bugs that are currently being researched or worked on, without breaking the typical full suite run.&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance team&lt;/h2&gt; &#xA;&lt;p&gt;Prawn has always been heavily dependent on community contributions, with dozens of people contributing code over the year. In that sense, the lines have blurred to the point where we no longer have a strong distinction between core developers and contributors.&lt;/p&gt; &#xA;&lt;p&gt;That said, there are a few folks who have been responsible for cutting releases, merging important pull requests, and making major decisions about the overall direction of the project.&lt;/p&gt; &#xA;&lt;h3&gt;Current maintainers&lt;/h3&gt; &#xA;&lt;p&gt;These are the folks to contact if you have a maintenance-related issue with Prawn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alexander Mankuta (&lt;a href=&#34;https://github.com/PointlessOne&#34;&gt;PointlessOne&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Inactive maintainers&lt;/h3&gt; &#xA;&lt;p&gt;These folks have helped out in a maintenance role in the past, but are no longer actively involved in the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gregory Brown (&lt;a href=&#34;https://github.com/practicingruby&#34;&gt;practicingruby&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Brad Ediger (&lt;a href=&#34;https://github.com/bradediger&#34;&gt;bradediger&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;James Healy (&lt;a href=&#34;https://github.com/yob&#34;&gt;yob&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Daniel Nelson (&lt;a href=&#34;https://github.com/Bluejade&#34;&gt;Bluejade&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Greenberg (&lt;a href=&#34;https://github.com/jonsgreen&#34;&gt;jonsgreen&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Jamis Buck (&lt;a href=&#34;https://github.com/jamis&#34;&gt;jamis&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Evan Sharp (&lt;a href=&#34;https://github.com/PacketMonkey&#34;&gt;PacketMonkey&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Prawn is released under a slightly modified form of the License of Ruby, allowing you to choose between Matz&#39;s terms, the GPLv2, or GPLv3. For details, please see the LICENSE, GPLv2, and GPLv3 files.&lt;/p&gt; &#xA;&lt;p&gt;If you contribute to Prawn, you will retain your own copyright but must agree to license your code under the same terms as the project itself.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;Prawn was originally developed by &lt;a href=&#34;http://twitter.com/practicingruby&#34;&gt;Gregory Brown&lt;/a&gt;, under the auspices of the Ruby Mendicant Project, a grassroots initiative in which the Ruby community collectively provided funding so that Gregory could take several months off from work to focus on this project.&lt;/p&gt; &#xA;&lt;p&gt;Over the last several years, we&#39;ve received code contributions from dozens of people, which is amazing considering the low-level nature of this project. You can find the full list of folks who have at least one patch accepted to Prawn on GitHub &lt;a href=&#34;https://github.com/prawnpdf/prawn/contributors&#34;&gt;Contributors&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;After a long period of inactivity, Prawn reached its 1.0 milestone in 2014 thanks to some modest funding provided to Gregory by Madriska, Inc. (Brad Ediger&#39;s company).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rubocop/rubocop-rails</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/rubocop/rubocop-rails</id>
    <link href="https://github.com/rubocop/rubocop-rails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A RuboCop extension focused on enforcing Rails best practices and coding conventions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RuboCop Rails&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/rb/rubocop-rails&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/rubocop-rails.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/rubocop/rubocop-rails&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/rubocop/rubocop-rails.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://github.com/rubocop/rubocop&#34;&gt;RuboCop&lt;/a&gt; extension focused on enforcing Rails best practices and coding conventions.&lt;/p&gt; &#xA;&lt;p&gt;Note: This repository manages rubocop-rails gem (&amp;gt;= 2.0.0). rubocop-rails gem (&amp;lt;= 1.5.0) has been renamed to &lt;a href=&#34;https://rubygems.org/gems/rubocop-rails_config&#34;&gt;rubocop-rails_config&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Just install the &lt;code&gt;rubocop-rails&lt;/code&gt; gem&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem install rubocop-rails&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you use bundler put this in your &lt;code&gt;Gemfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;rubocop-rails&#39;, require: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You need to tell RuboCop to load the Rails extension. There are three ways to do this:&lt;/p&gt; &#xA;&lt;h3&gt;RuboCop configuration file&lt;/h3&gt; &#xA;&lt;p&gt;Put this into your &lt;code&gt;.rubocop.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;require: rubocop-rails&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, use the following array notation when specifying multiple extensions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;require:&#xA;  - rubocop-other-extension&#xA;  - rubocop-rails&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can run &lt;code&gt;rubocop&lt;/code&gt; and it will automatically load the RuboCop Rails cops together with the standard cops.&lt;/p&gt; &#xA;&lt;h3&gt;Command line&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rubocop --require rubocop-rails&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;--rails&lt;/code&gt; option is required while &lt;code&gt;rubocop&lt;/code&gt; command supports &lt;code&gt;--rails&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h3&gt;Rake task&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RuboCop::RakeTask.new do |task|&#xA;  task.requires &amp;lt;&amp;lt; &#39;rubocop-rails&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The Cops&lt;/h2&gt; &#xA;&lt;p&gt;All cops are located under &lt;a href=&#34;https://raw.githubusercontent.com/rubocop/rubocop-rails/master/lib/rubocop/cop/rails&#34;&gt;&lt;code&gt;lib/rubocop/cop/rails&lt;/code&gt;&lt;/a&gt;, and contain examples/documentation.&lt;/p&gt; &#xA;&lt;p&gt;In your &lt;code&gt;.rubocop.yml&lt;/code&gt;, you may treat the Rails cops just like any other cop. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Rails/FindBy:&#xA;  Exclude:&#xA;    - lib/example.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can read a lot more about RuboCop Rails in its &lt;a href=&#34;https://docs.rubocop.org/rubocop-rails/&#34;&gt;official docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Rails cops support the following versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rails 4.2+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Readme Badge&lt;/h2&gt; &#xA;&lt;p&gt;If you use RuboCop Rails in your project, you can include one of these badges in your readme to let people know that your code is written following the community Rails Style Guide.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rubocop/rubocop-rails&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-rubocop-brightgreen.svg?sanitize=true&#34; alt=&#34;Rails Style Guide&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rails.rubystyle.guide&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-community-brightgreen.svg?sanitize=true&#34; alt=&#34;Rails Style Guide&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here are the Markdown snippets for the two badges:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![Rails Style Guide](https://img.shields.io/badge/code_style-rubocop-brightgreen.svg)](https://github.com/rubocop/rubocop-rails)&#xA;&#xA;[![Rails Style Guide](https://img.shields.io/badge/code_style-community-brightgreen.svg)](https://rails.rubystyle.guide)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://raw.githubusercontent.com/rubocop/rubocop-rails/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;rubocop-rails&lt;/code&gt; is MIT licensed. &lt;a href=&#34;https://raw.githubusercontent.com/rubocop/rubocop-rails/master/LICENSE.txt&#34;&gt;See the accompanying file&lt;/a&gt; for the full text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ffi/ffi</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/ffi/ffi</id>
    <link href="https://github.com/ffi/ffi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby FFI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby-FFI &lt;a href=&#34;https://github.com/ffi/ffi/wiki&#34;&gt;https://github.com/ffi/ffi/wiki&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/ffi/ffi&#34;&gt;&lt;img src=&#34;https://travis-ci.com/ffi/ffi.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/larskanis/ffi-aofqa/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/r8wxn1sd4s794gg1/branch/master?svg=true&#34; alt=&#34;Build status Windows&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Ruby-FFI is a gem for programmatically loading dynamically-linked native libraries, binding functions within them, and calling those functions from Ruby code. Moreover, a Ruby-FFI extension works without changes on CRuby (MRI), JRuby, Rubinius and TruffleRuby. &lt;a href=&#34;https://github.com/ffi/ffi/wiki/why-use-ffi&#34;&gt;Discover why you should write your next extension using Ruby-FFI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intuitive DSL&lt;/li&gt; &#xA; &lt;li&gt;Supports all C native types&lt;/li&gt; &#xA; &lt;li&gt;C structs (also nested), enums and global variables&lt;/li&gt; &#xA; &lt;li&gt;Callbacks from C to Ruby&lt;/li&gt; &#xA; &lt;li&gt;Automatic garbage collection of native memory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Synopsis&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;ffi&#39;&#xA;&#xA;module MyLib&#xA;  extend FFI::Library&#xA;  ffi_lib &#39;c&#39;&#xA;  attach_function :puts, [ :string ], :int&#xA;end&#xA;&#xA;MyLib.puts &#39;Hello, World using libc!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For less minimalistic and more examples you may look at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;code&gt;samples/&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;the examples on the &lt;a href=&#34;https://github.com/ffi/ffi/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the projects using FFI listed on the wiki: &lt;a href=&#34;https://github.com/ffi/ffi/wiki/projects-using-ffi&#34;&gt;https://github.com/ffi/ffi/wiki/projects-using-ffi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;When installing the gem on CRuby (MRI), you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A C compiler (e.g., Xcode on macOS, &lt;code&gt;gcc&lt;/code&gt; or &lt;code&gt;clang&lt;/code&gt; on everything else) Optionally (speeds up installation):&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;libffi&lt;/code&gt; library and development headers - this is commonly in the &lt;code&gt;libffi-dev&lt;/code&gt; or &lt;code&gt;libffi-devel&lt;/code&gt; packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The ffi gem comes with a builtin libffi version, which is used, when the system libffi library is not available or too old. Use of the system libffi can be enforced by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem install ffi -- --enable-system-libffi        # to install the gem manually&#xA;bundle config build.ffi --enable-system-libffi   # for bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or prevented by &lt;code&gt;--disable-system-libffi&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Linux systems running with &lt;a href=&#34;https://en.wikipedia.org/wiki/PaX&#34;&gt;PaX&lt;/a&gt; (Gentoo, Alpine, etc.), FFI may trigger &lt;code&gt;mprotect&lt;/code&gt; errors. You may need to disable &lt;a href=&#34;https://en.wikibooks.org/wiki/Grsecurity/Appendix/Grsecurity_and_PaX_Configuration_Options#Restrict_mprotect.28.29&#34;&gt;mprotect&lt;/a&gt; for ruby (&lt;code&gt;paxctl -m [/path/to/ruby]&lt;/code&gt;) for the time being until a solution is found.&lt;/p&gt; &#xA;&lt;p&gt;On FreeBSD systems pkgconf must be installed for the gem to be able to compile using clang. Install either via packages &lt;code&gt;pkg install pkgconf&lt;/code&gt; or from ports via &lt;code&gt;devel/pkgconf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On JRuby and TruffleRuby, there are no requirements to install the FFI gem, and &lt;code&gt;require &#39;ffi&#39;&lt;/code&gt; works even without installing the gem (i.e., the gem is preinstalled on these implementations).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;From rubygems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[sudo] gem install ffi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From a Gemfile using git or GitHub&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;ffi&#39;, github: &#39;ffi/ffi&#39;, submodules: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or from the git repository on github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git://github.com/ffi/ffi.git&#xA;cd ffi&#xA;git submodule update --init --recursive&#xA;bundle install&#xA;rake install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install options:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-system-libffi&lt;/code&gt; : Force usage of system libffi&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--disable-system-libffi&lt;/code&gt; : Force usage of builtin libffi&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--enable-libffi-alloc&lt;/code&gt; : Force closure allocation by libffi&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--disable-libffi-alloc&lt;/code&gt; : Force closure allocation by builtin method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The ffi library is covered by the BSD license, also see the LICENSE file. The specs are covered by the same license as &lt;a href=&#34;https://github.com/ruby/spec&#34;&gt;ruby/spec&lt;/a&gt;, the MIT license.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The following people have submitted code, bug reports, or otherwise contributed to the success of this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alban Peignier &lt;a href=&#34;mailto:alban.peignier@free.fr&#34;&gt;alban.peignier@free.fr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Aman Gupta &lt;a href=&#34;mailto:aman@tmm1.net&#34;&gt;aman@tmm1.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrea Fazzi &lt;a href=&#34;mailto:andrea.fazzi@alcacoop.it&#34;&gt;andrea.fazzi@alcacoop.it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andreas Niederl &lt;a href=&#34;mailto:rico32@gmx.net&#34;&gt;rico32@gmx.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrew Cholakian &lt;a href=&#34;mailto:andrew@andrewvc.com&#34;&gt;andrew@andrewvc.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Antonio Terceiro &lt;a href=&#34;mailto:terceiro@softwarelivre.org&#34;&gt;terceiro@softwarelivre.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Benoit Daloze &lt;a href=&#34;mailto:eregontp@gmail.com&#34;&gt;eregontp@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brian Candler &lt;a href=&#34;mailto:B.Candler@pobox.com&#34;&gt;B.Candler@pobox.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brian D. Burns &lt;a href=&#34;mailto:burns180@gmail.com&#34;&gt;burns180@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bryan Kearney &lt;a href=&#34;mailto:bkearney@redhat.com&#34;&gt;bkearney@redhat.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Charlie Savage &lt;a href=&#34;mailto:cfis@zerista.com&#34;&gt;cfis@zerista.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chikanaga Tomoyuki &lt;a href=&#34;mailto:nagachika00@gmail.com&#34;&gt;nagachika00@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hongli Lai &lt;a href=&#34;mailto:hongli@phusion.nl&#34;&gt;hongli@phusion.nl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ian MacLeod &lt;a href=&#34;mailto:ian@nevir.net&#34;&gt;ian@nevir.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jake Douglas &lt;a href=&#34;mailto:jake@shiftedlabs.com&#34;&gt;jake@shiftedlabs.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jean-Dominique Morani &lt;a href=&#34;mailto:jdmorani@mac.com&#34;&gt;jdmorani@mac.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jeremy Hinegardner &lt;a href=&#34;mailto:jeremy@hinegardner.org&#34;&gt;jeremy@hinegardner.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jesús García Sáez &lt;a href=&#34;mailto:blaxter@gmail.com&#34;&gt;blaxter@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Joe Khoobyar &lt;a href=&#34;mailto:joe@ankhcraft.com&#34;&gt;joe@ankhcraft.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jurij Smakov &lt;a href=&#34;mailto:jurij@wooyd.org&#34;&gt;jurij@wooyd.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;KISHIMOTO, Makoto &lt;a href=&#34;mailto:ksmakoto@dd.iij4u.or.jp&#34;&gt;ksmakoto@dd.iij4u.or.jp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kim Burgestrand &lt;a href=&#34;mailto:kim@burgestrand.se&#34;&gt;kim@burgestrand.se&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lars Kanis &lt;a href=&#34;mailto:kanis@comcard.de&#34;&gt;kanis@comcard.de&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Luc Heinrich &lt;a href=&#34;mailto:luc@honk-honk.com&#34;&gt;luc@honk-honk.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Luis Lavena &lt;a href=&#34;mailto:luislavena@gmail.com&#34;&gt;luislavena@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matijs van Zuijlen &lt;a href=&#34;mailto:matijs@matijs.net&#34;&gt;matijs@matijs.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matthew King &lt;a href=&#34;mailto:automatthew@gmail.com&#34;&gt;automatthew@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mike Dalessio &lt;a href=&#34;mailto:mike.dalessio@gmail.com&#34;&gt;mike.dalessio@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NARUSE, Yui &lt;a href=&#34;mailto:naruse@airemix.jp&#34;&gt;naruse@airemix.jp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Park Heesob &lt;a href=&#34;mailto:phasis@gmail.com&#34;&gt;phasis@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shin Yee &lt;a href=&#34;mailto:shinyee@speedgocomputing.com&#34;&gt;shinyee@speedgocomputing.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stephen Bannasch &lt;a href=&#34;mailto:stephen.bannasch@gmail.com&#34;&gt;stephen.bannasch@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Suraj N. Kurapati &lt;a href=&#34;mailto:sunaku@gmail.com&#34;&gt;sunaku@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sylvain Daubert &lt;a href=&#34;mailto:sylvain.daubert@laposte.net&#34;&gt;sylvain.daubert@laposte.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Victor Costan&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:beoran@gmail.com&#34;&gt;beoran@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ctide &lt;a href=&#34;mailto:christide@christide.com&#34;&gt;christide@christide.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;emboss &lt;a href=&#34;mailto:Martin.Bosslet@googlemail.com&#34;&gt;Martin.Bosslet@googlemail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;hobophobe &lt;a href=&#34;mailto:unusualtears@gmail.com&#34;&gt;unusualtears@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;meh &lt;a href=&#34;mailto:meh@paranoici.org&#34;&gt;meh@paranoici.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;postmodern &lt;a href=&#34;mailto:postmodern.mod3@gmail.com&#34;&gt;postmodern.mod3@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:wycats@gmail.com&#34;&gt;wycats@gmail.com&lt;/a&gt; &lt;a href=&#34;mailto:wycats@gmail.com&#34;&gt;wycats@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wayne Meissner &lt;a href=&#34;mailto:wmeissner@gmail.com&#34;&gt;wmeissner@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>puma/puma</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/puma/puma</id>
    <link href="https://github.com/puma/puma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby/Rack web server built for parallelism&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://puma.io/images/logos/puma-logo-large.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Puma: A Ruby Web Server Built For Parallelism&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/puma/puma/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/puma/puma/workflows/Tests/badge.svg?branch=master&#34; alt=&#34;Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/puma/puma&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/puma/puma.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/puma&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-Puma-blue.svg?sanitize=true&#34; alt=&#34;StackOverflow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Puma is a &lt;strong&gt;simple, fast, multi-threaded, and highly parallel HTTP 1.1 server for Ruby/Rack applications&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Built For Speed &amp;amp; Parallelism&lt;/h2&gt; &#xA;&lt;p&gt;Puma processes requests using a C-optimized Ragel extension (inherited from Mongrel) that provides fast, accurate HTTP 1.1 protocol parsing in a portable way. Puma then serves the request using a thread pool. Each request is served in a separate thread, so truly parallel Ruby implementations (JRuby, Rubinius) will use all available CPU cores.&lt;/p&gt; &#xA;&lt;p&gt;Originally designed as a server for &lt;a href=&#34;https://github.com/rubinius/rubinius&#34;&gt;Rubinius&lt;/a&gt;, Puma also works well with Ruby (MRI) and JRuby.&lt;/p&gt; &#xA;&lt;p&gt;On MRI, there is a Global VM Lock (GVL) that ensures only one thread can run Ruby code at a time. But if you&#39;re doing a lot of blocking IO (such as HTTP calls to external APIs like Twitter), Puma still improves MRI&#39;s throughput by allowing IO waiting to be done in parallel.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install puma&#xA;$ puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without arguments, puma will look for a rackup (.ru) file in working directory called &lt;code&gt;config.ru&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SSL Connection Support&lt;/h2&gt; &#xA;&lt;p&gt;Puma will install/compile with support for ssl sockets, assuming OpenSSL development files are installed on the system.&lt;/p&gt; &#xA;&lt;p&gt;If the system does not have OpenSSL development files installed, Puma will install/compile, but it will not allow ssl connections.&lt;/p&gt; &#xA;&lt;h2&gt;Frameworks&lt;/h2&gt; &#xA;&lt;h3&gt;Rails&lt;/h3&gt; &#xA;&lt;p&gt;Puma is the default server for Rails, included in the generated Gemfile.&lt;/p&gt; &#xA;&lt;p&gt;Start your server with the &lt;code&gt;rails&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rails server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Many configuration options and Puma features are not available when using &lt;code&gt;rails server&lt;/code&gt;. It is recommended that you use Puma&#39;s executable instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sinatra&lt;/h3&gt; &#xA;&lt;p&gt;You can run your Sinatra application with Puma from the command line like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ruby app.rb -s Puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to actually configure Puma using a config file, like &lt;code&gt;puma.rb&lt;/code&gt;, however, you need to use the &lt;code&gt;puma&lt;/code&gt; executable. To do this, you must add a rackup file to your Sinatra app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config.ru&#xA;require &#39;./app&#39;&#xA;run Sinatra::Application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then start your application using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle exec puma&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Puma provides numerous options. Consult &lt;code&gt;puma -h&lt;/code&gt; (or &lt;code&gt;puma --help&lt;/code&gt;) for a full list of CLI options, or see &lt;code&gt;Puma::DSL&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/dsl.rb&#34;&gt;dsl.rb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also find several configuration examples as part of the &lt;a href=&#34;https://github.com/puma/puma/tree/master/test/config&#34;&gt;test&lt;/a&gt; suite.&lt;/p&gt; &#xA;&lt;p&gt;For debugging purposes, you can set the environment variable &lt;code&gt;PUMA_LOG_CONFIG&lt;/code&gt; with a value and the loaded configuration will be printed as part of the boot process.&lt;/p&gt; &#xA;&lt;h3&gt;Thread Pool&lt;/h3&gt; &#xA;&lt;p&gt;Puma uses a thread pool. You can set the minimum and maximum number of threads that are available in the pool with the &lt;code&gt;-t&lt;/code&gt; (or &lt;code&gt;--threads&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -t 8:32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Puma will automatically scale the number of threads, from the minimum until it caps out at the maximum, based on how much traffic is present. The current default is &lt;code&gt;0:16&lt;/code&gt; and on MRI is &lt;code&gt;0:5&lt;/code&gt;. Feel free to experiment, but be careful not to set the number of maximum threads to a large number, as you may exhaust resources on the system (or cause contention for the Global VM Lock, when using MRI).&lt;/p&gt; &#xA;&lt;p&gt;Be aware that additionally Puma creates threads on its own for internal purposes (e.g. handling slow clients). So, even if you specify -t 1:1, expect around 7 threads created in your application.&lt;/p&gt; &#xA;&lt;h3&gt;Clustered mode&lt;/h3&gt; &#xA;&lt;p&gt;Puma also offers &#34;clustered mode&#34;. Clustered mode &lt;code&gt;fork&lt;/code&gt;s workers from a master process. Each child process still has its own thread pool. You can tune the number of workers with the &lt;code&gt;-w&lt;/code&gt; (or &lt;code&gt;--workers&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -t 8:32 -w 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with the &lt;code&gt;WEB_CONCURRENCY&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ WEB_CONCURRENCY=3 puma -t 8:32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that threads are still used in clustered mode, and the &lt;code&gt;-t&lt;/code&gt; thread flag setting is per worker, so &lt;code&gt;-w 2 -t 16:16&lt;/code&gt; will spawn 32 threads in total, with 16 in each worker process.&lt;/p&gt; &#xA;&lt;p&gt;In clustered mode, Puma can &#34;preload&#34; your application. This loads all the application code &lt;em&gt;prior&lt;/em&gt; to forking. Preloading reduces total memory usage of your application via an operating system feature called &lt;a href=&#34;https://en.wikipedia.org/wiki/Copy-on-write&#34;&gt;copy-on-write&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;WEB_CONCURRENCY&lt;/code&gt; environment variable is set to a value &amp;gt; 1 (and &lt;code&gt;--prune-bundler&lt;/code&gt; has not been specified), preloading will be enabled by default. Otherwise, you can use the &lt;code&gt;--preload&lt;/code&gt; flag from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -w 3 --preload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you&#39;re using a configuration file, you can use the &lt;code&gt;preload_app!&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/puma.rb&#xA;workers 3&#xA;preload_app!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Preloading can’t be used with phased restart, since phased restart kills and restarts workers one-by-one, and preloading copies the code of master into the workers.&lt;/p&gt; &#xA;&lt;p&gt;When using clustered mode, you can specify a block in your configuration file that will be run on boot of each worker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/puma.rb&#xA;on_worker_boot do&#xA;  # configuration here&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This code can be used to setup the process before booting the application, allowing you to do some Puma-specific things that you don&#39;t want to embed in your application. For instance, you could fire a log notification that a worker booted or send something to statsd. This can be called multiple times.&lt;/p&gt; &#xA;&lt;p&gt;Constants loaded by your application (such as &lt;code&gt;Rails&lt;/code&gt;) will not be available in &lt;code&gt;on_worker_boot&lt;/code&gt; unless preloading is enabled.&lt;/p&gt; &#xA;&lt;p&gt;You can also specify a block to be run before workers are forked, using &lt;code&gt;before_fork&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/puma.rb&#xA;before_fork do&#xA;  # configuration here&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Error handling&lt;/h3&gt; &#xA;&lt;p&gt;If puma encounters an error outside of the context of your application, it will respond with a 500 and a simple textual error message (see &lt;code&gt;Puma::Server#lowlevel_error&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/server.rb&#34;&gt;server.rb&lt;/a&gt;). You can specify custom behavior for this scenario. For example, you can report the error to your third-party error-tracking service (in this example, &lt;a href=&#34;https://rollbar.com&#34;&gt;rollbar&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;lowlevel_error_handler do |e|&#xA;  Rollbar.critical(e)&#xA;  [500, {}, [&#34;An error has occurred, and engineers have been informed. Please reload the page. If you continue to have problems, contact support@example.com\n&#34;]]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Binding TCP / Sockets&lt;/h3&gt; &#xA;&lt;p&gt;Bind Puma to a socket with the &lt;code&gt;-b&lt;/code&gt; (or &lt;code&gt;--bind&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b tcp://127.0.0.1:9292&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a UNIX Socket instead of TCP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b unix:///var/run/puma.sock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to change the permissions of the UNIX socket, just add a umask parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;unix:///var/run/puma.sock?umask=0111&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Need a bit of security? Use SSL sockets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Self-signed SSL certificates (via the &lt;a href=&#34;https://github.com/socketry/localhost&#34;&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt; gem, for development use):&lt;/h4&gt; &#xA;&lt;p&gt;Puma supports the &lt;a href=&#34;https://github.com/socketry/localhost&#34;&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt; gem for self-signed certificates. This is particularly useful if you want to use Puma with SSL locally, and self-signed certificates will work for your use-case. Currently, the integration can only be used in MRI.&lt;/p&gt; &#xA;&lt;p&gt;Puma automatically configures SSL when the &lt;a href=&#34;https://github.com/socketry/localhost&#34;&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt; gem is loaded in a &lt;code&gt;development&lt;/code&gt; environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Add the gem to your Gemfile&#xA;group(:development) do&#xA;  gem &#39;localhost&#39;&#xA;end&#xA;&#xA;# And require it implicitly using bundler&#xA;require &#34;bundler&#34;&#xA;Bundler.require(:default, ENV[&#34;RACK_ENV&#34;].to_sym)&#xA;&#xA;# Alternatively, you can require the gem in config.ru:&#xA;require &#39;./app&#39;&#xA;require &#39;localhost&#39;&#xA;run Sinatra::Application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, Puma must be listening to an SSL socket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ puma -b &#39;ssl://localhost:9292&#39; config.ru&#xA;&#xA;# The following options allow you to reach Puma over HTTP as well:&#xA;$ puma -b ssl://localhost:9292 -b tcp://localhost:9393 config.ru&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Controlling SSL Cipher Suites&lt;/h4&gt; &#xA;&lt;p&gt;To use or avoid specific SSL cipher suites, use &lt;code&gt;ssl_cipher_filter&lt;/code&gt; or &lt;code&gt;ssl_cipher_list&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;h5&gt;Ruby:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;ssl_cipher_filter=!aNULL:AES+SHA&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;JRuby:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?keystore=path_to_keystore&amp;amp;keystore-pass=keystore_password&amp;amp;ssl_cipher_list=TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.openssl.org/docs/man1.1.1/man1/ciphers.html&#34;&gt;https://www.openssl.org/docs/man1.1.1/man1/ciphers.html&lt;/a&gt; for cipher filter format and full list of cipher suites.&lt;/p&gt; &#xA;&lt;p&gt;Disable TLS v1 with the &lt;code&gt;no_tlsv1&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;no_tlsv1=true&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Controlling OpenSSL Verification Flags&lt;/h4&gt; &#xA;&lt;p&gt;To enable verification flags offered by OpenSSL, use &lt;code&gt;verification_flags&lt;/code&gt; (not available for JRuby):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;verification_flags=PARTIAL_CHAIN&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also set multiple verification flags (by separating them with coma):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -b &#39;ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;verification_flags=PARTIAL_CHAIN,CRL_CHECK&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List of available flags: &lt;code&gt;USE_CHECK_TIME&lt;/code&gt;, &lt;code&gt;CRL_CHECK&lt;/code&gt;, &lt;code&gt;CRL_CHECK_ALL&lt;/code&gt;, &lt;code&gt;IGNORE_CRITICAL&lt;/code&gt;, &lt;code&gt;X509_STRICT&lt;/code&gt;, &lt;code&gt;ALLOW_PROXY_CERTS&lt;/code&gt;, &lt;code&gt;POLICY_CHECK&lt;/code&gt;, &lt;code&gt;EXPLICIT_POLICY&lt;/code&gt;, &lt;code&gt;INHIBIT_ANY&lt;/code&gt;, &lt;code&gt;INHIBIT_MAP&lt;/code&gt;, &lt;code&gt;NOTIFY_POLICY&lt;/code&gt;, &lt;code&gt;EXTENDED_CRL_SUPPORT&lt;/code&gt;, &lt;code&gt;USE_DELTAS&lt;/code&gt;, &lt;code&gt;CHECK_SS_SIGNATURE&lt;/code&gt;, &lt;code&gt;TRUSTED_FIRST&lt;/code&gt;, &lt;code&gt;SUITEB_128_LOS_ONLY&lt;/code&gt;, &lt;code&gt;SUITEB_192_LOS&lt;/code&gt;, &lt;code&gt;SUITEB_128_LOS&lt;/code&gt;, &lt;code&gt;PARTIAL_CHAIN&lt;/code&gt;, &lt;code&gt;NO_ALT_CHAINS&lt;/code&gt;, &lt;code&gt;NO_CHECK_TIME&lt;/code&gt; (see &lt;a href=&#34;https://www.openssl.org/docs/manmaster/man3/X509_VERIFY_PARAM_set_hostflags.html#VERIFICATION-FLAGS&#34;&gt;https://www.openssl.org/docs/manmaster/man3/X509_VERIFY_PARAM_set_hostflags.html#VERIFICATION-FLAGS&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Control/Status Server&lt;/h3&gt; &#xA;&lt;p&gt;Puma has a built-in status and control app that can be used to query and control Puma.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma --control-url tcp://127.0.0.1:9293 --control-token foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Puma will start the control server on localhost port 9293. All requests to the control server will need to include control token (in this case, &lt;code&gt;token=foo&lt;/code&gt;) as a query parameter. This allows for simple authentication. Check out &lt;code&gt;Puma::App::Status&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/app/status.rb&#34;&gt;status.rb&lt;/a&gt; to see what the status app has available.&lt;/p&gt; &#xA;&lt;p&gt;You can also interact with the control server via &lt;code&gt;pumactl&lt;/code&gt;. This command will restart Puma:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pumactl --control-url &#39;tcp://127.0.0.1:9293&#39; --control-token foo restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see a list of &lt;code&gt;pumactl&lt;/code&gt; options, use &lt;code&gt;pumactl --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration File&lt;/h3&gt; &#xA;&lt;p&gt;You can also provide a configuration file with the &lt;code&gt;-C&lt;/code&gt; (or &lt;code&gt;--config&lt;/code&gt;) flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma -C /path/to/config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If no configuration file is specified, Puma will look for a configuration file at &lt;code&gt;config/puma.rb&lt;/code&gt;. If an environment is specified (via the &lt;code&gt;--environment&lt;/code&gt; flag or through the &lt;code&gt;APP_ENV&lt;/code&gt;, &lt;code&gt;RACK_ENV&lt;/code&gt;, or &lt;code&gt;RAILS_ENV&lt;/code&gt; environment variables) Puma looks for a configuration file at &lt;code&gt;config/puma/&amp;lt;environment_name&amp;gt;.rb&lt;/code&gt; and then falls back to &lt;code&gt;config/puma.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to prevent Puma from looking for a configuration file in those locations, include the &lt;code&gt;--no-config&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ puma --no-config&#xA;&#xA;# or&#xA;&#xA;$ puma -C &#34;-&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The other side-effects of setting the environment are whether to show stack traces (in &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;), and setting RACK_ENV may potentially affect middleware looking for this value to change their behavior. The default puma RACK_ENV value is &lt;code&gt;development&lt;/code&gt;. You can see all config default values in &lt;code&gt;Puma::Configuration#puma_default_options&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/61c6213fbab/lib/puma/configuration.rb#L182-L204&#34;&gt;configuration.rb&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;code&gt;Puma::DSL&lt;/code&gt; or &lt;a href=&#34;https://github.com/puma/puma/raw/master/lib/puma/dsl.rb&#34;&gt;dsl.rb&lt;/a&gt; to see all available options.&lt;/p&gt; &#xA;&lt;h2&gt;Restart&lt;/h2&gt; &#xA;&lt;p&gt;Puma includes the ability to restart itself. When available (MRI, Rubinius, JRuby), Puma performs a &#34;hot restart&#34;. This is the same functionality available in &lt;em&gt;Unicorn&lt;/em&gt; and &lt;em&gt;NGINX&lt;/em&gt; which keep the server sockets open between restarts. This makes sure that no pending requests are dropped while the restart is taking place.&lt;/p&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/restart.md&#34;&gt;Restart documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Signals&lt;/h2&gt; &#xA;&lt;p&gt;Puma responds to several signals. A detailed guide to using UNIX signals with Puma can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/signals.md&#34;&gt;Signals documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Platform Constraints&lt;/h2&gt; &#xA;&lt;p&gt;Some platforms do not support all Puma features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;JRuby&lt;/strong&gt;, &lt;strong&gt;Windows&lt;/strong&gt;: server sockets are not seamless on restart, they must be closed and reopened. These platforms have no way to pass descriptors into a new process that is exposed to Ruby. Also, cluster mode is not supported due to a lack of fork(2).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Cluster mode is not supported due to a lack of fork(2).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;: The way Kubernetes handles pod shutdowns interacts poorly with server processes implementing graceful shutdown, like Puma. See the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/kubernetes.md&#34;&gt;kubernetes section of the documentation&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Bugs&lt;/h2&gt; &#xA;&lt;p&gt;For MRI versions 2.2.7, 2.2.8, 2.2.9, 2.2.10, 2.3.4 and 2.4.1, you may see &lt;code&gt;stream closed in another thread (IOError)&lt;/code&gt;. It may be caused by a &lt;a href=&#34;https://bugs.ruby-lang.org/issues/13632&#34;&gt;Ruby bug&lt;/a&gt;. It can be fixed with the gem &lt;a href=&#34;https://rubygems.org/gems/stopgap_13632&#34;&gt;https://rubygems.org/gems/stopgap_13632&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;if %w(2.2.7 2.2.8 2.2.9 2.2.10 2.3.4 2.4.1).include? RUBY_VERSION&#xA;  begin&#xA;    require &#39;stopgap_13632&#39;&#xA;  rescue LoadError&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Puma has support for Capistrano with an &lt;a href=&#34;https://github.com/seuros/capistrano-puma&#34;&gt;external gem&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is common to use process monitors with Puma. Modern process monitors like systemd or rc.d provide continuous monitoring and restarts for increased reliability in production environments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/jungle/rc.d/README.md&#34;&gt;rc.d&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/docs/systemd.md&#34;&gt;systemd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Community guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/anon987654321/4532cf8d6c59c1f43ec8973faa031103&#34;&gt;Deploying Puma on OpenBSD using relayd and httpd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Extensions&lt;/h2&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/harmjanblok/puma-metrics&#34;&gt;puma-metrics&lt;/a&gt; —&amp;nbsp;export Puma metrics to Prometheus&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yob/puma-plugin-statsd&#34;&gt;puma-plugin-statsd&lt;/a&gt; —&amp;nbsp;send Puma metrics to statsd&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sj26/puma-plugin-systemd&#34;&gt;puma-plugin-systemd&lt;/a&gt; —&amp;nbsp;deeper integration with systemd for notify, status and watchdog&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ylecuyer/puma-status&#34;&gt;puma-status&lt;/a&gt; —&amp;nbsp;Monitor CPU/Mem/Load of running puma instances from the CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Find details for contributing in the &lt;a href=&#34;https://raw.githubusercontent.com/puma/puma/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Puma is copyright Evan Phoenix and contributors, licensed under the BSD 3-Clause license. See the included LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThrowTheSwitch/Ceedling</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/ThrowTheSwitch/Ceedling</id>
    <link href="https://github.com/ThrowTheSwitch/Ceedling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby/Rake-based build and test system for C projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ceedling &lt;img src=&#34;https://github.com/ThrowTheSwitch/Ceedling/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Ceedling is a build system for C projects that is something of an extension around Ruby’s Rake (make-ish) build system. Ceedling also makes TDD (Test-Driven Development) in C a breeze by integrating &lt;a href=&#34;https://github.com/throwtheswitch/cmock&#34;&gt;CMock&lt;/a&gt;, &lt;a href=&#34;https://github.com/throwtheswitch/unity&#34;&gt;Unity&lt;/a&gt;, and &lt;a href=&#34;https://github.com/throwtheswitch/cexception&#34;&gt;CException&lt;/a&gt; -- three other awesome open-source projects you can’t live without if you&#39;re creating awesomeness in the C language. Ceedling is also extensible with a handy plugin mechanism.&lt;/p&gt; &#xA;&lt;h1&gt;Usage Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Documentation and license info exists &lt;a href=&#34;https://raw.githubusercontent.com/ThrowTheSwitch/Ceedling/master/docs/CeedlingPacket.md&#34;&gt;in the repo in docs/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;First make sure Ruby is installed on your system (if it&#39;s not already). Then, from a command prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; gem install ceedling&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;(Alternate Installation for Those Planning to Be Ceedling Developers)&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; git clone --recursive https://github.com/throwtheswitch/ceedling.git&#xA;&amp;gt; cd ceedling&#xA;&amp;gt; bundle install # Ensures you have all RubyGems needed&#xA;&amp;gt; git submodule update --init --recursive # Updates all submodules&#xA;&amp;gt; bundle exec rake # Run all Ceedling library tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If bundler isn&#39;t installed on your system or you run into problems, you might have to install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; sudo gem install bundler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run into trouble running bundler and get messages like this &lt;code&gt;can&#39;t find gem bundler (&amp;gt;= 0.a) with executable bundle (Gem::GemNotFoundException)&lt;/code&gt;, you may need to install a different version of bundler. For this please reference the version in the Gemfile.lock. An example based on the current Gemfile.lock is as followed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; sudo gem install bundler -v 1.16.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Creating A Project&lt;/h1&gt; &#xA;&lt;p&gt;Creating a project with Ceedling is easy. Simply tell ceedling the name of the project, and it will create a subdirectory called that name and fill it with a default directory structure and configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ceedling new YourNewProjectName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add files to your src and test directories and they will instantly become part of your test build. Need a different structure? You can start to tweak the &lt;code&gt;project.yml&lt;/code&gt; file immediately with your new path or tool requirements.&lt;/p&gt; &#xA;&lt;p&gt;You can upgrade to the latest version of Ceedling at any time, automatically gaining access to the packaged Unity and CMock that come with it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem update ceedling&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Are you just getting started with Ceedling? Maybe you&#39;d like your project to be installed with some of its handy documentation? No problem! You can do this when you create a new project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ceedling new --docs MyAwesomeProject&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Bonding Your Tools And Project&lt;/h1&gt; &#xA;&lt;p&gt;Ceedling can deploy all of its guts into the project as well. This allows it to be used without having to worry about external dependencies. You don&#39;t have to worry about Ceedling changing for this particular project just because you updated your gems... no need to worry about changes in Unity or CMock breaking your build in the future. If you&#39;d like to use Ceedling this way, tell it you want a local copy when you create your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ceedling new --local YourNewProjectName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install all of Unity, CMock, and Ceedling into a new folder named &lt;code&gt;vendor&lt;/code&gt; inside your project &lt;code&gt;YourNewProjectName&lt;/code&gt;. It will still create the simple directory structure for you with &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; folders.&lt;/p&gt; &#xA;&lt;p&gt;SCORE!&lt;/p&gt; &#xA;&lt;p&gt;If you want to force a locally installed version of Ceedling to upgrade to match your latest gem later, it&#39;s easy! Just issue the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ceedling upgrade --local YourNewProjectName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just like the &lt;code&gt;new&lt;/code&gt; command, it&#39;s called from the parent directory of your project.&lt;/p&gt; &#xA;&lt;p&gt;Are you afraid of losing all your local changes when this happens? You can keep Ceedling from updating your project file by issuing &lt;code&gt;no_configs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ceedling upgrade --local --no_configs TheProject&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Git Integration&lt;/h1&gt; &#xA;&lt;p&gt;Are you using Git? You might want to automatically have Ceedling create a &lt;code&gt;gitignore&lt;/code&gt; file for you by adding &lt;code&gt;--gitignore&lt;/code&gt; to your &lt;code&gt;new&lt;/code&gt; call.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;HAPPY TESTING!&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spree/spree</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/spree/spree</id>
    <link href="https://github.com/spree/spree" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source multi-language/multi-currency/multi-store eCommerce platform&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spree/spree-dev-docs/54abf615c5280eda8f2308de96d6290f72c1fb1b/spree_vendo_user_doc.png&#34; alt=&#34;Spree Commerce - a headless open-source ecommerce platform for multi-store, marketplace, or B2B global brands&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://spreecommerce.org&#34;&gt;Spree Commerce&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/spree&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/spree.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/spree/spree/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/8277fc2bb0b1f777084f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spree&lt;/strong&gt; is a headless open source e-commerce platform for global brands.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spreecommerce.org/stories/&#34;&gt;Success Stories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spreecommerce.org/integrations/&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spree/spree/milestones?direction=asc&amp;amp;sort=due_date&amp;amp;state=open&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.spreecommerce.org/&#34;&gt;Join our Slack community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/headless-ecommerce-api/&#34;&gt;Headless Commerce&lt;/a&gt;&lt;/strong&gt; - build mobile apps or custom storefronts in any technology, &lt;a href=&#34;https://github.com/spree/spree-storefront-api-v2-js-sdk&#34;&gt;JS/TS SDK available&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/spree-pwa-progressive-web-application/&#34;&gt;PWA&lt;/a&gt;&lt;/strong&gt; - offline shopping experiences like native mobile apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/international-sales-demo/&#34;&gt;Global Commerce&lt;/a&gt;&lt;/strong&gt; - multi currency and multi language support out of the box, different shipping methods / costs for different regions, advanced tax calculation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Store&lt;/strong&gt; - host multiple brands / stores on one Spree instance with different branding, configuration, payment methods, shipping options, product catalogs etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/multi-vendor-marketplace-demo/&#34;&gt;Multi-vendor marketplace&lt;/a&gt;&lt;/strong&gt; - run your own marketplace with multiple suppliers with dedicated Supplier Dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Responsive Admin Panel&lt;/strong&gt; - manage and curate products, users, orders, returns, shipments &amp;amp; more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt; - robust system for orders, shipments, returns and refunds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Carts&lt;/strong&gt; - comprehensive and advanced discounts system&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - over 30 payment provider integration out of the box plus API to integrate any other gateway&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run everywhere&lt;/strong&gt; - cloud, VPS, Docker, Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battle Tested&lt;/strong&gt; - used by thousands of merchants around the globe in all categories since 2007!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully customizable&lt;/strong&gt; - pick and choose parts you want to use and customize everything else (storefront, order processing, API, etc) to create unique solutions that your business requires&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;More features available via extensions&lt;/strong&gt; - dozens of extensions built by community, ready for use for free!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsored by&lt;/h2&gt; &#xA;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spree/spree-dev-docs/master/.gitbook/assets/spree_vendo_user_doc_2.png&#34; a&gt; &lt;/a&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt;Vendo&lt;/a&gt; is a great fit for marketplaces of all sizes - either with own fulfillment and multiple warehouses or in a dropshipping model. Vendo &lt;strong&gt;automates everything&lt;/strong&gt; from &lt;strong&gt;vendor onboarding&lt;/strong&gt;, accepting buyer &lt;strong&gt;payments in over 135 currencies&lt;/strong&gt;, to supplier &lt;strong&gt;payouts in 50 countries&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Vendo ensures excellent buyer experience with smooth product discovery and search, a multitude of payment methods and optimal shipping cost calculation. Vendo keeps suppliers happy with easy onboarding, automated products sync using their preferred method and easy payouts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.getvendo.com/users/new?typeform-source=spree_github&#34;&gt;Start your 14-day free trial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev-docs.spreecommerce.org/getting-started/installation&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev-docs.spreecommerce.org/&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.spreecommerce.org/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spree/spree-storefront-api-v2-js-sdk&#34;&gt;JavaScript / TypeScript SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Spree is an open source project and we love contributions in any form - pull requests, issues, feature ideas!&lt;/p&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;https://dev-docs.spreecommerce.org/contributing/index&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Spree is released under the &lt;a href=&#34;https://github.com/spree/spree/raw/main/license.md&#34;&gt;New BSD License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>brianmario/mysql2</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/brianmario/mysql2</id>
    <link href="https://github.com/brianmario/mysql2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern, simple and very fast Mysql library for Ruby - binding to libmysql&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mysql2 - A modern, simple and very fast MySQL library for Ruby - binding to libmysql&lt;/h1&gt; &#xA;&lt;p&gt;GitHub Actions &lt;a href=&#34;https://github.com/brianmario/mysql2/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/brianmario/mysql2/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Status: Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/brianmario/mysql2/actions/workflows/container.yml&#34;&gt;&lt;img src=&#34;https://github.com/brianmario/mysql2/actions/workflows/container.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Status: Container&#34;&gt;&lt;/a&gt; Travis CI &lt;a href=&#34;https://travis-ci.org/brianmario/mysql2&#34;&gt;&lt;img src=&#34;https://travis-ci.org/brianmario/mysql2.png&#34; alt=&#34;Travis CI Status&#34;&gt;&lt;/a&gt; Appveyor CI &lt;a href=&#34;https://ci.appveyor.com/project/sodabrew/mysql2&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/sodabrew/mysql2&#34; alt=&#34;Appveyor CI Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Mysql2 gem is meant to serve the extremely common use-case of connecting, querying and iterating on results. Some database libraries out there serve as direct 1:1 mappings of the already complex C APIs available. This one is not.&lt;/p&gt; &#xA;&lt;p&gt;It also forces the use of UTF-8 [or binary] for the connection and uses encoding-aware MySQL API calls where it can.&lt;/p&gt; &#xA;&lt;p&gt;The API consists of three classes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Mysql2::Client&lt;/code&gt; - your connection to the database.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Mysql2::Result&lt;/code&gt; - returned from issuing a #query on the connection. It includes Enumerable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Mysql2::Statement&lt;/code&gt; - returned from issuing a #prepare on the connection. Execute the statement to get a Result.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;General Instructions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem install mysql2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This gem links against MySQL&#39;s &lt;code&gt;libmysqlclient&lt;/code&gt; library or &lt;code&gt;Connector/C&lt;/code&gt; library, and compatible alternatives such as MariaDB. You may need to install a package such as &lt;code&gt;libmariadb-dev&lt;/code&gt;, &lt;code&gt;libmysqlclient-dev&lt;/code&gt;, &lt;code&gt;mysql-devel&lt;/code&gt;, or other appropriate package for your system. See below for system-specific instructions.&lt;/p&gt; &#xA;&lt;p&gt;By default, the mysql2 gem will try to find a copy of MySQL in this order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Option &lt;code&gt;--with-mysql-dir&lt;/code&gt;, if provided (see below).&lt;/li&gt; &#xA; &lt;li&gt;Option &lt;code&gt;--with-mysql-config&lt;/code&gt;, if provided (see below).&lt;/li&gt; &#xA; &lt;li&gt;Several typical paths for &lt;code&gt;mysql_config&lt;/code&gt; (default for the majority of users).&lt;/li&gt; &#xA; &lt;li&gt;The directory &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuration options&lt;/h3&gt; &#xA;&lt;p&gt;Use these options by &lt;code&gt;gem install mysql2 -- [--optionA] [--optionB=argument]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--with-mysql-dir[=/path/to/mysqldir]&lt;/code&gt; - Specify the directory where MySQL is installed. The mysql2 gem will not use &lt;code&gt;mysql_config&lt;/code&gt;, but will instead look at &lt;code&gt;mysqldir/lib&lt;/code&gt; and &lt;code&gt;mysqldir/include&lt;/code&gt; for the library and header files. This option is mutually exclusive with &lt;code&gt;--with-mysql-config&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--with-mysql-config[=/path/to/mysql_config]&lt;/code&gt; - Specify a path to the &lt;code&gt;mysql_config&lt;/code&gt; binary provided by your copy of MySQL. The mysql2 gem will ask this &lt;code&gt;mysql_config&lt;/code&gt; binary about the compiler and linker arguments needed. This option is mutually exclusive with &lt;code&gt;--with-mysql-dir&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--with-mysql-rpath=/path/to/mysql/lib&lt;/code&gt; / &lt;code&gt;--without-mysql-rpath&lt;/code&gt; - Override the runtime path used to find the MySQL libraries. This may be needed if you deploy to a system where these libraries are located somewhere different than on your build system. This overrides any rpath calculated by default or by the options above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--with-sanitize[=address,cfi,integer,memory,thread,undefined]&lt;/code&gt; - Enable sanitizers for Clang / GCC. If no argument is given, try to enable all sanitizers or fail if none are available. If a command-separated list of specific sanitizers is given, configure will fail unless they all are available. Note that the some sanitizers may incur a performance penalty, and the Address Sanitizer may require a runtime library. To see line numbers in backtraces, declare these environment variables (adjust the llvm-symbolizer path as needed for your system):&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;  export ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer-3.4&#xA;  export ASAN_OPTIONS=symbolize=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux and other Unixes&lt;/h3&gt; &#xA;&lt;p&gt;You may need to install a package such as &lt;code&gt;libmariadb-dev&lt;/code&gt;, &lt;code&gt;libmysqlclient-dev&lt;/code&gt;, &lt;code&gt;mysql-devel&lt;/code&gt;, or &lt;code&gt;default-libmysqlclient-dev&lt;/code&gt;; refer to your distribution&#39;s package guide to find the particular package. The most common issue we see is a user who has the library file &lt;code&gt;libmysqlclient.so&lt;/code&gt; but is missing the header file &lt;code&gt;mysql.h&lt;/code&gt; -- double check that you have the &lt;em&gt;-dev&lt;/em&gt; packages installed.&lt;/p&gt; &#xA;&lt;h3&gt;Mac OS X&lt;/h3&gt; &#xA;&lt;p&gt;You may use MacPorts, Homebrew, or a native MySQL installer package. The most common paths will be automatically searched. If you want to select a specific MySQL directory, use the &lt;code&gt;--with-mysql-dir&lt;/code&gt; or &lt;code&gt;--with-mysql-config&lt;/code&gt; options above.&lt;/p&gt; &#xA;&lt;p&gt;If you have not done so already, you will need to install the XCode select tools by running &lt;code&gt;xcode-select --install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that you have Ruby and the DevKit compilers installed. We recommend the &lt;a href=&#34;http://rubyinstaller.org&#34;&gt;Ruby Installer&lt;/a&gt; distribution.&lt;/p&gt; &#xA;&lt;p&gt;By default, the mysql2 gem will download and use MySQL Connector/C from mysql.com. If you prefer to use a local installation of Connector/C, add the flag &lt;code&gt;--with-mysql-dir=c:/mysql-connector-c-x-y-z&lt;/code&gt; (&lt;em&gt;this path may use forward slashes&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;libmysql.dll&lt;/code&gt; library will be copied into the mysql2 gem directory. To prevent this, add the flag &lt;code&gt;--no-vendor-libmysql&lt;/code&gt;. The mysql2 gem will search for &lt;code&gt;libmysql.dll&lt;/code&gt; in the following paths, in order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Environment variable &lt;code&gt;RUBY_MYSQL2_LIBMYSQL_DLL=C:\path\to\libmysql.dll&lt;/code&gt; (&lt;em&gt;note the Windows-style backslashes&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;In the mysql2 gem&#39;s own directory &lt;code&gt;vendor/libmysql.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the system&#39;s default library search paths.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Connect to a database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# this takes a hash of options, almost all of which map directly&#xA;# to the familiar database.yml in rails&#xA;# See http://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html&#xA;client = Mysql2::Client.new(:host =&amp;gt; &#34;localhost&#34;, :username =&amp;gt; &#34;root&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then query it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results = client.query(&#34;SELECT * FROM users WHERE group=&#39;githubbers&#39;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Need to escape something first?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;escaped = client.escape(&#34;gi&#39;thu\&#34;bbe\0r&#39;s&#34;)&#xA;results = client.query(&#34;SELECT * FROM users WHERE group=&#39;#{escaped}&#39;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get a count of your results with &lt;code&gt;results.count&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, iterate over the results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.each do |row|&#xA;  # conveniently, row is a hash&#xA;  # the keys are the fields, as you&#39;d expect&#xA;  # the values are pre-built ruby primitives mapped from their corresponding field types in MySQL&#xA;  puts row[&#34;id&#34;] # row[&#34;id&#34;].is_a? Integer&#xA;  if row[&#34;dne&#34;]  # non-existent hash entry is nil&#xA;    puts row[&#34;dne&#34;]&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you might just keep it simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.query(&#34;SELECT * FROM users WHERE group=&#39;githubbers&#39;&#34;).each do |row|&#xA;  # do something with row, it&#39;s ready to rock&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;How about with symbolized keys?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.query(&#34;SELECT * FROM users WHERE group=&#39;githubbers&#39;&#34;, :symbolize_keys =&amp;gt; true).each do |row|&#xA;  # do something with row, it&#39;s ready to rock&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can get the headers, columns, and the field types in the order that they were returned by the query like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;headers = results.fields # &amp;lt;= that&#39;s an array of field names, in order&#xA;types = results.field_types # &amp;lt;= that&#39;s an array of field types, in order&#xA;results.each(:as =&amp;gt; :array) do |row|&#xA;  # Each row is an array, ordered the same as the query results&#xA;  # An otter&#39;s den is called a &#34;holt&#34; or &#34;couch&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prepared statements are supported, as well. In a prepared statement, use a &lt;code&gt;?&lt;/code&gt; in place of each value and then execute the statement to retrieve a result set. Pass your arguments to the execute method in the same number and order as the question marks in the statement. Query options can be passed as keyword arguments to the execute method.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to read about the known limitations of prepared statements at &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.6/en/c-api-prepared-statement-problems.html&#34;&gt;https://dev.mysql.com/doc/refman/5.6/en/c-api-prepared-statement-problems.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;statement = @client.prepare(&#34;SELECT * FROM users WHERE login_count = ?&#34;)&#xA;result1 = statement.execute(1)&#xA;result2 = statement.execute(2)&#xA;&#xA;statement = @client.prepare(&#34;SELECT * FROM users WHERE last_login &amp;gt;= ? AND location LIKE ?&#34;)&#xA;result = statement.execute(1, &#34;CA&#34;)&#xA;&#xA;statement = @client.prepare(&#34;SELECT * FROM users WHERE last_login &amp;gt;= ? AND location LIKE ?&#34;)&#xA;result = statement.execute(1, &#34;CA&#34;, :as =&amp;gt; :array)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Session Tracking information can be accessed with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;c = Mysql2::Client.new(&#xA;  host: &#34;127.0.0.1&#34;,&#xA;  username: &#34;root&#34;,&#xA;  flags: &#34;SESSION_TRACK&#34;,&#xA;  init_command: &#34;SET @@SESSION.session_track_schema=ON&#34;&#xA;)&#xA;c.query(&#34;INSERT INTO test VALUES (1)&#34;)&#xA;session_track_type = Mysql2::Client::SESSION_TRACK_SCHEMA&#xA;session_track_data = c.session_track(session_track_type)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The types of session track types can be found at &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/session-state-tracking.html&#34;&gt;https://dev.mysql.com/doc/refman/5.7/en/session-state-tracking.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Connection options&lt;/h2&gt; &#xA;&lt;p&gt;You may set the following connection options in Mysql2::Client.new(...):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mysql2::Client.new(&#xA;  :host,&#xA;  :username,&#xA;  :password,&#xA;  :port,&#xA;  :database,&#xA;  :socket = &#39;/path/to/mysql.sock&#39;,&#xA;  :flags = REMEMBER_OPTIONS | LONG_PASSWORD | LONG_FLAG | TRANSACTIONS | PROTOCOL_41 | SECURE_CONNECTION | MULTI_STATEMENTS,&#xA;  :encoding = &#39;utf8&#39;,&#xA;  :read_timeout = seconds,&#xA;  :write_timeout = seconds,&#xA;  :connect_timeout = seconds,&#xA;  :connect_attrs = {:program_name =&amp;gt; $PROGRAM_NAME, ...},&#xA;  :reconnect = true/false,&#xA;  :local_infile = true/false,&#xA;  :secure_auth = true/false,&#xA;  :ssl_mode = :disabled / :preferred / :required / :verify_ca / :verify_identity,&#xA;  :default_file = &#39;/path/to/my.cfg&#39;,&#xA;  :default_group = &#39;my.cfg section&#39;,&#xA;  :default_auth = &#39;authentication_windows_client&#39;&#xA;  :init_command =&amp;gt; sql&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connecting to MySQL on localhost and elsewhere&lt;/h3&gt; &#xA;&lt;p&gt;The underlying MySQL client library uses the &lt;code&gt;:host&lt;/code&gt; parameter to determine the type of connection to make, with special interpretation you should be aware of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An empty value or &lt;code&gt;&#34;localhost&#34;&lt;/code&gt; will attempt a local connection: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Unix, connect to the default local socket path. (To set a custom socket path, use the &lt;code&gt;:socket&lt;/code&gt; parameter).&lt;/li&gt; &#xA;   &lt;li&gt;On Windows, connect using a shared-memory connection, if enabled, or TCP.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A value of &lt;code&gt;&#34;.&#34;&lt;/code&gt; on Windows specifies a named-pipe connection.&lt;/li&gt; &#xA; &lt;li&gt;An IPv4 or IPv6 address will result in a TCP connection.&lt;/li&gt; &#xA; &lt;li&gt;Any other value will be looked up as a hostname for a TCP connection.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SSL options&lt;/h3&gt; &#xA;&lt;p&gt;Setting any of the following options will enable an SSL connection, but only if your MySQL client library and server have been compiled with SSL support. MySQL client library defaults will be used for any parameters that are left out or set to nil. Relative paths are allowed, and may be required by managed hosting providers such as Heroku. Set &lt;code&gt;:sslverify =&amp;gt; true&lt;/code&gt; to require that the server presents a valid certificate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mysql2::Client.new(&#xA;  # ...options as above...,&#xA;  :sslkey =&amp;gt; &#39;/path/to/client-key.pem&#39;,&#xA;  :sslcert =&amp;gt; &#39;/path/to/client-cert.pem&#39;,&#xA;  :sslca =&amp;gt; &#39;/path/to/ca-cert.pem&#39;,&#xA;  :sslcapath =&amp;gt; &#39;/path/to/cacerts&#39;,&#xA;  :sslcipher =&amp;gt; &#39;DHE-RSA-AES256-SHA&#39;,&#xA;  :sslverify =&amp;gt; true,&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Secure auth&lt;/h3&gt; &#xA;&lt;p&gt;Starting with MySQL 5.6.5, secure_auth is enabled by default on servers (it was disabled by default prior to this). When secure_auth is enabled, the server will refuse a connection if the account password is stored in old pre-MySQL 4.1 format. The MySQL 5.6.5 client library may also refuse to attempt a connection if provided an older format password. To bypass this restriction in the client, pass the option &lt;code&gt;:secure_auth =&amp;gt; false&lt;/code&gt; to Mysql2::Client.new().&lt;/p&gt; &#xA;&lt;h3&gt;Flags option parsing&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;:flags&lt;/code&gt; parameter accepts an integer, a string, or an array. The integer form allows the client to assemble flags from constants defined under &lt;code&gt;Mysql2::Client&lt;/code&gt; such as &lt;code&gt;Mysql2::Client::FOUND_ROWS&lt;/code&gt;. Use a bitwise &lt;code&gt;|&lt;/code&gt; (OR) to specify several flags.&lt;/p&gt; &#xA;&lt;p&gt;The string form will be split on whitespace and parsed as with the array form: Plain flags are added to the default flags, while flags prefixed with &lt;code&gt;-&lt;/code&gt; (minus) are removed from the default flags.&lt;/p&gt; &#xA;&lt;h3&gt;Using Active Record&#39;s database.yml&lt;/h3&gt; &#xA;&lt;p&gt;Active Record typically reads its configuration from a file named &lt;code&gt;database.yml&lt;/code&gt; or an environment variable &lt;code&gt;DATABASE_URL&lt;/code&gt;. Use the value &lt;code&gt;mysql2&lt;/code&gt; as the adapter name. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;development:&#xA;  adapter: mysql2&#xA;  encoding: utf8&#xA;  database: my_db_name&#xA;  username: root&#xA;  password: my_password&#xA;  host: 127.0.0.1&#xA;  port: 3306&#xA;  flags:&#xA;    - -COMPRESS&#xA;    - FOUND_ROWS&#xA;    - MULTI_STATEMENTS&#xA;  secure_auth: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, the compression flag is negated with &lt;code&gt;-COMPRESS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Active Record&#39;s DATABASE_URL&lt;/h3&gt; &#xA;&lt;p&gt;Active Record typically reads its configuration from a file named &lt;code&gt;database.yml&lt;/code&gt; or an environment variable &lt;code&gt;DATABASE_URL&lt;/code&gt;. Use the value &lt;code&gt;mysql2&lt;/code&gt; as the protocol name. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DATABASE_URL=mysql2://sql_user:sql_pass@sql_host_name:port/sql_db_name?option1=value1&amp;amp;option2=value2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reading a MySQL config file&lt;/h3&gt; &#xA;&lt;p&gt;You may read configuration options from a MySQL configuration file by passing the &lt;code&gt;:default_file&lt;/code&gt; and &lt;code&gt;:default_group&lt;/code&gt; parameters. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mysql2::Client.new(:default_file =&amp;gt; &#39;/user/.my.cnf&#39;, :default_group =&amp;gt; &#39;client&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Initial command on connect and reconnect&lt;/h3&gt; &#xA;&lt;p&gt;If you specify the &lt;code&gt;:init_command&lt;/code&gt; option, the SQL string you provide will be executed after the connection is established. If &lt;code&gt;:reconnect&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, init_command will also be executed after a successful reconnect. It is useful if you want to provide session options which survive reconnection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mysql2::Client.new(:init_command =&amp;gt; &#34;SET @@SESSION.sql_mode = &#39;STRICT_ALL_TABLES&#39;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple result sets&lt;/h3&gt; &#xA;&lt;p&gt;You can also retrieve multiple result sets. For this to work you need to connect with flags &lt;code&gt;Mysql2::Client::MULTI_STATEMENTS&lt;/code&gt;. Multiple result sets can be used with stored procedures that return more than one result set, and for bundling several SQL statements into a single call to &lt;code&gt;client.query&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Mysql2::Client.new(:host =&amp;gt; &#34;localhost&#34;, :username =&amp;gt; &#34;root&#34;, :flags =&amp;gt; Mysql2::Client::MULTI_STATEMENTS)&#xA;result = client.query(&#39;CALL sp_customer_list( 25, 10 )&#39;)&#xA;# result now contains the first result set&#xA;while client.next_result&#xA;  result = client.store_result&#xA;  # result now contains the next result set&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Repeated calls to &lt;code&gt;client.next_result&lt;/code&gt; will return true, false, or raise an exception if the respective query erred. When &lt;code&gt;client.next_result&lt;/code&gt; returns true, call &lt;code&gt;client.store_result&lt;/code&gt; to retrieve a result object. Exceptions are not raised until &lt;code&gt;client.next_result&lt;/code&gt; is called to find the status of the respective query. Subsequent queries are not executed if an earlier query raised an exception. Subsequent calls to &lt;code&gt;client.next_result&lt;/code&gt; will return false.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;result = client.query(&#39;SELECT 1; SELECT 2; SELECT A; SELECT 3&#39;)&#xA;p result.first&#xA;&#xA;while client.next_result&#xA;  result = client.store_result&#xA;  p result.first&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Yields:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;{&#34;1&#34;=&amp;gt;1}&#xA;{&#34;2&#34;=&amp;gt;2}&#xA;next_result: Unknown column &#39;A&#39; in &#39;field list&#39; (Mysql2::Error)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cascading config&lt;/h2&gt; &#xA;&lt;p&gt;The default config hash is at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mysql2::Client.default_query_options&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which defaults to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;{:async =&amp;gt; false, :as =&amp;gt; :hash, :symbolize_keys =&amp;gt; false}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;that can be used as so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# these are the defaults all Mysql2::Client instances inherit&#xA;Mysql2::Client.default_query_options.merge!(:as =&amp;gt; :array)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# this will change the defaults for all future results returned by the #query method _for this connection only_&#xA;c = Mysql2::Client.new&#xA;c.query_options.merge!(:symbolize_keys =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# this will set the options for the Mysql2::Result instance returned from the #query method&#xA;c = Mysql2::Client.new&#xA;c.query(sql, :symbolize_keys =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# this will set the options for the Mysql2::Result instance returned from the #execute method&#xA;c = Mysql2::Client.new&#xA;s = c.prepare(sql)&#xA;s.execute(arg1, args2, :symbolize_keys =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Result types&lt;/h2&gt; &#xA;&lt;h3&gt;Array of Arrays&lt;/h3&gt; &#xA;&lt;p&gt;Pass the &lt;code&gt;:as =&amp;gt; :array&lt;/code&gt; option to any of the above methods of configuration&lt;/p&gt; &#xA;&lt;h3&gt;Array of Hashes&lt;/h3&gt; &#xA;&lt;p&gt;The default result type is set to &lt;code&gt;:hash&lt;/code&gt;, but you can override a previous setting to something else with &lt;code&gt;:as =&amp;gt; :hash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Timezones&lt;/h3&gt; &#xA;&lt;p&gt;Mysql2 now supports two timezone options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;:database_timezone # this is the timezone Mysql2 will assume fields are already stored as, and will use this when creating the initial Time objects in ruby&#xA;:application_timezone # this is the timezone Mysql2 will convert to before finally handing back to the caller&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In other words, if &lt;code&gt;:database_timezone&lt;/code&gt; is set to &lt;code&gt;:utc&lt;/code&gt; - Mysql2 will create the Time objects using &lt;code&gt;Time.utc(...)&lt;/code&gt; from the raw value libmysql hands over initially. Then, if &lt;code&gt;:application_timezone&lt;/code&gt; is set to say - &lt;code&gt;:local&lt;/code&gt; - Mysql2 will then convert the just-created UTC Time object to local time.&lt;/p&gt; &#xA;&lt;p&gt;Both options only allow two values - &lt;code&gt;:local&lt;/code&gt; or &lt;code&gt;:utc&lt;/code&gt; - with the exception that &lt;code&gt;:application_timezone&lt;/code&gt; can be [and defaults to] nil&lt;/p&gt; &#xA;&lt;h3&gt;Casting &#34;boolean&#34; columns&lt;/h3&gt; &#xA;&lt;p&gt;You can now tell Mysql2 to cast &lt;code&gt;tinyint(1)&lt;/code&gt; fields to boolean values in Ruby with the &lt;code&gt;:cast_booleans&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Mysql2::Client.new&#xA;result = client.query(&#34;SELECT * FROM table_with_boolean_field&#34;, :cast_booleans =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind that this works only with fields and not with computed values, e.g. this result will contain &lt;code&gt;1&lt;/code&gt;, not &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Mysql2::Client.new&#xA;result = client.query(&#34;SELECT true&#34;, :cast_booleans =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CAST function wouldn&#39;t help here as there&#39;s no way to cast to TINYINT(1). Apparently the only way to solve this is to use a stored procedure with return type set to TINYINT(1).&lt;/p&gt; &#xA;&lt;h3&gt;Skipping casting&lt;/h3&gt; &#xA;&lt;p&gt;Mysql2 casting is fast, but not as fast as not casting data. In rare cases where typecasting is not needed, it will be faster to disable it by providing :cast =&amp;gt; false. (Note that :cast =&amp;gt; false overrides :cast_booleans =&amp;gt; true.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Mysql2::Client.new&#xA;result = client.query(&#34;SELECT * FROM table&#34;, :cast =&amp;gt; false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here are the results from the &lt;code&gt;query_without_mysql_casting.rb&lt;/code&gt; script in the benchmarks folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;                           user     system      total        real&#xA;Mysql2 (cast: true)    0.340000   0.000000   0.340000 (  0.405018)&#xA;Mysql2 (cast: false)   0.160000   0.010000   0.170000 (  0.209937)&#xA;Mysql                  0.080000   0.000000   0.080000 (  0.129355)&#xA;do_mysql               0.520000   0.010000   0.530000 (  0.574619)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Although Mysql2 performs reasonably well at retrieving uncasted data, it (currently) is not as fast as the Mysql gem. In spite of this small disadvantage, Mysql2 still sports a friendlier interface and doesn&#39;t block the entire ruby process when querying.&lt;/p&gt; &#xA;&lt;h3&gt;Async&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: Not supported on Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Mysql2::Client&lt;/code&gt; takes advantage of the MySQL C API&#39;s (undocumented) non-blocking function mysql_send_query for &lt;em&gt;all&lt;/em&gt; queries. But, in order to take full advantage of it in your Ruby code, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client.query(&#34;SELECT sleep(5)&#34;, :async =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which will return nil immediately. At this point you&#39;ll probably want to use some socket monitoring mechanism like EventMachine or even IO.select. Once the socket becomes readable, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# result will be a Mysql2::Result instance&#xA;result = client.async_result&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: Because of the way MySQL&#39;s query API works, this method will block until the result is ready. So if you really need things to stay async, it&#39;s best to just monitor the socket with something like EventMachine. If you need multiple query concurrency take a look at using a connection pool.&lt;/p&gt; &#xA;&lt;h3&gt;Row Caching&lt;/h3&gt; &#xA;&lt;p&gt;By default, Mysql2 will cache rows that have been created in Ruby (since this happens lazily). This is especially helpful since it saves the cost of creating the row in Ruby if you were to iterate over the collection again.&lt;/p&gt; &#xA;&lt;p&gt;If you only plan on using each row once, then it&#39;s much more efficient to disable this behavior by setting the &lt;code&gt;:cache_rows&lt;/code&gt; option to false. This would be helpful if you wanted to iterate over the results in a streaming manner. Meaning the GC would cleanup rows you don&#39;t need anymore as you&#39;re iterating over the result set.&lt;/p&gt; &#xA;&lt;h3&gt;Streaming&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Mysql2::Client&lt;/code&gt; can optionally only fetch rows from the server on demand by setting &lt;code&gt;:stream =&amp;gt; true&lt;/code&gt;. This is handy when handling very large result sets which might not fit in memory on the client.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;result = client.query(&#34;SELECT * FROM really_big_Table&#34;, :stream =&amp;gt; true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a few things that need to be kept in mind while using streaming:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:cache_rows&lt;/code&gt; is ignored currently. (if you want to use &lt;code&gt;:cache_rows&lt;/code&gt; you probably don&#39;t want to be using &lt;code&gt;:stream&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;You must fetch all rows in the result set of your query before you can make new queries. (i.e. with &lt;code&gt;Mysql2::Result#each&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read more about the consequences of using &lt;code&gt;mysql_use_result&lt;/code&gt; (what streaming is implemented with) here: &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.0/en/mysql-use-result.html&#34;&gt;http://dev.mysql.com/doc/refman/5.0/en/mysql-use-result.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Lazy Everything&lt;/h3&gt; &#xA;&lt;p&gt;Well... almost ;)&lt;/p&gt; &#xA;&lt;p&gt;Field name strings/symbols are shared across all the rows so only one object is ever created to represent the field name for an entire dataset.&lt;/p&gt; &#xA;&lt;p&gt;Rows themselves are lazily created in ruby-land when an attempt to yield it is made via #each. For example, if you were to yield 4 rows from a 100 row dataset, only 4 hashes will be created. The rest will sit and wait in C-land until you want them (or when the GC goes to cleanup your &lt;code&gt;Mysql2::Result&lt;/code&gt; instance). Now say you were to iterate over that same collection again, this time yielding 15 rows - the 4 previous rows that had already been turned into ruby hashes would be pulled from an internal cache, then 11 more would be created and stored in that cache. Once the entire dataset has been converted into ruby objects, Mysql2::Result will free the Mysql C result object as it&#39;s no longer needed.&lt;/p&gt; &#xA;&lt;p&gt;This caching behavior can be disabled by setting the &lt;code&gt;:cache_rows&lt;/code&gt; option to false.&lt;/p&gt; &#xA;&lt;p&gt;As for field values themselves, I&#39;m workin on it - but expect that soon.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;This gem is tested with the following Ruby versions on Linux and Mac OS X:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby MRI 2.0.0, 2.1.x, 2.2.x, 2.3.x, 2.4.x, 2.5.x, 2.6.x&lt;/li&gt; &#xA; &lt;li&gt;Rubinius 2.x and 3.x do work but may fail under some workloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This gem is tested with the following MySQL and MariaDB versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL 5.5, 5.6, 5.7, 8.0&lt;/li&gt; &#xA; &lt;li&gt;MySQL Connector/C 6.0 and 6.1 (primarily on Windows)&lt;/li&gt; &#xA; &lt;li&gt;MariaDB 5.5, 10.0, 10.1, 10.2, 10.3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ruby on Rails / Active Record&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mysql2 0.5.x works with Rails / Active Record 4.2.11, 5.0.7, 5.1.6, and higher.&lt;/li&gt; &#xA; &lt;li&gt;mysql2 0.4.x works with Rails / Active Record 4.2.5 - 5.0 and higher.&lt;/li&gt; &#xA; &lt;li&gt;mysql2 0.3.x works with Rails / Active Record 3.1, 3.2, 4.x, 5.0.&lt;/li&gt; &#xA; &lt;li&gt;mysql2 0.2.x works with Rails / Active Record 2.3 - 3.0.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Asynchronous Active Record&lt;/h3&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/igrigorik/em-synchrony&#34;&gt;em-synchrony&lt;/a&gt; project for details about using EventMachine with mysql2 and Rails.&lt;/p&gt; &#xA;&lt;h3&gt;Sequel&lt;/h3&gt; &#xA;&lt;p&gt;Sequel includes a mysql2 adapter in all releases since 3.15 (2010-09-01). Use the prefix &#34;mysql2://&#34; in your connection specification.&lt;/p&gt; &#xA;&lt;h3&gt;EventMachine&lt;/h3&gt; &#xA;&lt;p&gt;The mysql2 EventMachine deferrable api allows you to make async queries using EventMachine, while specifying callbacks for success for failure. Here&#39;s a simple example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;mysql2/em&#39;&#xA;&#xA;EM.run do&#xA;  client1 = Mysql2::EM::Client.new&#xA;  defer1 = client1.query &#34;SELECT sleep(3) as first_query&#34;&#xA;  defer1.callback do |result|&#xA;    puts &#34;Result: #{result.to_a.inspect}&#34;&#xA;  end&#xA;&#xA;  client2 = Mysql2::EM::Client.new&#xA;  defer2 = client2.query &#34;SELECT sleep(1) second_query&#34;&#xA;  defer2.callback do |result|&#xA;    puts &#34;Result: #{result.to_a.inspect}&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Benchmarks and Comparison&lt;/h2&gt; &#xA;&lt;p&gt;The mysql2 gem converts MySQL field types to Ruby data types in C code, providing a serious speed benefit.&lt;/p&gt; &#xA;&lt;p&gt;The do_mysql gem also converts MySQL fields types, but has a considerably more complex API and is still ~2x slower than mysql2.&lt;/p&gt; &#xA;&lt;p&gt;The mysql gem returns only nil or string data types, leaving you to convert field values to Ruby types in Ruby-land, which is much slower than mysql2&#39;s C code.&lt;/p&gt; &#xA;&lt;p&gt;For a comparative benchmark, the script below performs a basic &#34;SELECT * FROM&#34; query on a table with 30k rows and fields of nearly every Ruby-representable data type, then iterating over every row using an #each like method yielding a block:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;         user       system     total       real&#xA;Mysql2   0.750000   0.180000   0.930000   (1.821655)&#xA;do_mysql 1.650000   0.200000   1.850000   (2.811357)&#xA;Mysql    7.500000   0.210000   7.710000   (8.065871)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These results are from the &lt;code&gt;query_with_mysql_casting.rb&lt;/code&gt; script in the benchmarks folder.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Use &#39;bundle install&#39; to install the necessary development and testing gems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle install&#xA;rake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The tests require the &#34;test&#34; database to exist, and expect to connect both as root and the running user, both with a blank password:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE DATABASE test;&#xA;CREATE USER &#39;&amp;lt;user&amp;gt;&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;&#39;;&#xA;GRANT ALL PRIVILEGES ON test.* TO &#39;&amp;lt;user&amp;gt;&#39;@&#39;localhost&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change these defaults in the spec/configuration.yml which is generated automatically when you run rake (or explicitly &lt;code&gt;rake spec/configuration.yml&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;For a normal installation on a Mac, you most likely do not need to do anything, though.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Eric Wong - for the contribution (and the informative explanations) of some thread-safety, non-blocking I/O and cleanup patches. You rock dude&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/yury&#34;&gt;Yury Korolev&lt;/a&gt; - for TONS of help testing the Active Record adapter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/tenderlove&#34;&gt;Aaron Patterson&lt;/a&gt; - tons of contributions, suggestions and general badassness&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/mperham&#34;&gt;Mike Perham&lt;/a&gt; - Async Active Record adapter (uses Fibers and EventMachine)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/sodabrew&#34;&gt;Aaron Stone&lt;/a&gt; - additional client settings, local files, microsecond time, maintenance support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nyaxt&#34;&gt;Kouhei Ueno&lt;/a&gt; - for the original work on Prepared Statements way back in 2012&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/johncant&#34;&gt;John Cant&lt;/a&gt; - polishing and updating Prepared Statements support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/justincase&#34;&gt;Justin Case&lt;/a&gt; - polishing and updating Prepared Statements support and getting it merged&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/tamird&#34;&gt;Tamir Duberstein&lt;/a&gt; - for help with timeouts and all around updates and cleanups&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/junaruga&#34;&gt;Jun Aruga&lt;/a&gt; - for migrating CI tests to GitHub Actions and other improvements&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ankane/searchkick</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/ankane/searchkick</id>
    <link href="https://github.com/ankane/searchkick" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Intelligent search made easy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Searchkick&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;🚀&lt;/span&gt; Intelligent search made easy&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Searchkick learns what your users are looking for.&lt;/strong&gt; As more people search, it gets smarter and the results get better. It’s friendly for developers - and magical for your users.&lt;/p&gt; &#xA;&lt;p&gt;Searchkick handles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stemming - &lt;code&gt;tomatoes&lt;/code&gt; matches &lt;code&gt;tomato&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;special characters - &lt;code&gt;jalapeno&lt;/code&gt; matches &lt;code&gt;jalapeño&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;extra whitespace - &lt;code&gt;dishwasher&lt;/code&gt; matches &lt;code&gt;dish washer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;misspellings - &lt;code&gt;zuchini&lt;/code&gt; matches &lt;code&gt;zucchini&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;custom synonyms - &lt;code&gt;pop&lt;/code&gt; matches &lt;code&gt;soda&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Plus:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;query like SQL - no need to learn a new query language&lt;/li&gt; &#xA; &lt;li&gt;reindex without downtime&lt;/li&gt; &#xA; &lt;li&gt;easily personalize results for each user&lt;/li&gt; &#xA; &lt;li&gt;autocomplete&lt;/li&gt; &#xA; &lt;li&gt;“Did you mean” suggestions&lt;/li&gt; &#xA; &lt;li&gt;supports many languages&lt;/li&gt; &#xA; &lt;li&gt;works with Active Record and Mongoid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ankane/searchjoy&#34;&gt;Searchjoy&lt;/a&gt; for analytics and &lt;a href=&#34;https://github.com/ankane/autosuggest&#34;&gt;Autosuggest&lt;/a&gt; for query suggestions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🍊&lt;/span&gt; Battle-tested at &lt;a href=&#34;https://www.instacart.com/opensource&#34;&gt;Instacart&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/searchkick/actions&#34;&gt;&lt;img src=&#34;https://github.com/ankane/searchkick/workflows/build/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#querying&#34;&gt;Querying&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#indexing&#34;&gt;Indexing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#intelligent-search&#34;&gt;Intelligent Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#instant-search--autocomplete&#34;&gt;Instant Search / Autocomplete&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#aggregations&#34;&gt;Aggregations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#advanced&#34;&gt;Advanced Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#reference&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Searchkick 5.0 was recently released! See &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#upgrading&#34;&gt;how to upgrade&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.elastic.co/downloads/elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt; or &lt;a href=&#34;https://opensearch.org/downloads.html&#34;&gt;OpenSearch&lt;/a&gt;. For Homebrew, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install elastic/tap/elasticsearch-full&#xA;brew services start elasticsearch-full&#xA;# or&#xA;brew install opensearch&#xA;brew services start opensearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add these lines to your application’s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;searchkick&#34;&#xA;&#xA;gem &#34;elasticsearch&#34;   # select one&#xA;gem &#34;opensearch-ruby&#34; # select one&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The latest version works with Elasticsearch 7 and 8 and OpenSearch 1 and 2. For Elasticsearch 6, use version 4.6.3 and &lt;a href=&#34;https://github.com/ankane/searchkick/raw/v4.6.3/README.md&#34;&gt;this readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add searchkick to models you want to search.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add data to the search index.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to query, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;apples&#34;)&#xA;products.each do |product|&#xA;  puts product.name&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Searchkick supports the complete &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html&#34;&gt;Elasticsearch Search API&lt;/a&gt; and &lt;a href=&#34;https://opensearch.org/docs/latest/opensearch/rest-api/search/&#34;&gt;OpenSearch Search API&lt;/a&gt;. As your search becomes more advanced, we recommend you use the &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#advanced&#34;&gt;search server DSL&lt;/a&gt; for maximum flexibility.&lt;/p&gt; &#xA;&lt;h2&gt;Querying&lt;/h2&gt; &#xA;&lt;p&gt;Query like SQL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, where: {in_stock: true}, limit: 10, offset: 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Search specific fields&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;fields: [:name, :brand]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;where: {&#xA;  expires_at: {gt: Time.now},    # lt, gte, lte also available&#xA;  orders_count: 1..10,           # equivalent to {gte: 1, lte: 10}&#xA;  aisle_id: [25, 30],            # in&#xA;  store_id: {not: 2},            # not&#xA;  aisle_id: {not: [25, 30]},     # not in&#xA;  user_ids: {all: [1, 3]},       # all elements in array&#xA;  category: {like: &#34;%frozen%&#34;},  # like&#xA;  category: {ilike: &#34;%frozen%&#34;}, # ilike&#xA;  category: /frozen .+/,         # regexp&#xA;  category: {prefix: &#34;frozen&#34;},  # prefix&#xA;  store_id: {exists: true},      # exists&#xA;  _or: [{in_stock: true}, {backordered: true}],&#xA;  _and: [{in_stock: true}, {backordered: true}],&#xA;  _not: {store_id: 1}            # negate a condition&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Order&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;order: {_score: :desc} # most relevant first - default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html&#34;&gt;All of these sort options are supported&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Limit / offset&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;limit: 20, offset: 40&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;select: [:name]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#source-filtering&#34;&gt;These source filtering options are supported&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Results&lt;/h3&gt; &#xA;&lt;p&gt;Searches return a &lt;code&gt;Searchkick::Relation&lt;/code&gt; object. This responds like an array to most methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results = Product.search(&#34;milk&#34;)&#xA;results.size&#xA;results.any?&#xA;results.each { |result| ... }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, ids are fetched from the search server and records are fetched from your database. To fetch everything from the search server, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, load: false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get total results&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.total_count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the time the search took (in milliseconds)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.took&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the full response from the search server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;results.response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; By default, Elasticsearch and OpenSearch &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#deep-paging&#34;&gt;limit paging&lt;/a&gt; to the first 10,000 results for performance. This applies to the total count as well.&lt;/p&gt; &#xA;&lt;h3&gt;Boosting&lt;/h3&gt; &#xA;&lt;p&gt;Boost important fields&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;fields: [&#34;title^10&#34;, &#34;description&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost by the value of a field (field must be numeric)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;boost_by: [:orders_count] # give popular documents a little boost&#xA;boost_by: {orders_count: {factor: 10}} # default factor is 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost matching documents&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;boost_where: {user_id: 1}&#xA;boost_where: {user_id: {value: 1, factor: 100}} # default factor is 1000&#xA;boost_where: {user_id: [{value: 1, factor: 100}, {value: 2, factor: 200}]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost by recency&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;boost_by_recency: {created_at: {scale: &#34;7d&#34;, decay: 0.5}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also boost by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#intelligent-search&#34;&gt;Conversions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#boost-by-distance&#34;&gt;Distance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Get Everything&lt;/h3&gt; &#xA;&lt;p&gt;Use a &lt;code&gt;*&lt;/code&gt; for the query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;*&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pagination&lt;/h3&gt; &#xA;&lt;p&gt;Plays nicely with kaminari and will_paginate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# controller&#xA;@products = Product.search(&#34;milk&#34;, page: params[:page], per_page: 20)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View with kaminari&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= paginate @products %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View with will_paginate&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= will_paginate @products %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Partial Matches&lt;/h3&gt; &#xA;&lt;p&gt;By default, results must match all words in the query.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;fresh honey&#34;) # fresh AND honey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change this, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;fresh honey&#34;, operator: &#34;or&#34;) # fresh OR honey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, results must match the entire word - &lt;code&gt;back&lt;/code&gt; will not match &lt;code&gt;backpack&lt;/code&gt;. You can change this behavior with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick word_start: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to search (after you reindex):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;back&#34;, fields: [:name], match: :word_start)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available options are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Matches&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;entire word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;apple&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word_start&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;start of word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;app&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word_middle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;any part of word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ppl&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:word_end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;end of word&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ple&lt;/code&gt; matches &lt;code&gt;apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:text_start&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;start of text&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gre&lt;/code&gt; matches &lt;code&gt;green apple&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt; does not match&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:text_middle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;any part of text&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;een app&lt;/code&gt; matches &lt;code&gt;green apple&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:text_end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;end of text&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ple&lt;/code&gt; matches &lt;code&gt;green apple&lt;/code&gt;, &lt;code&gt;een&lt;/code&gt; does not match&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The default is &lt;code&gt;:word&lt;/code&gt;. The most matches will happen with &lt;code&gt;:word_middle&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Exact Matches&lt;/h3&gt; &#xA;&lt;p&gt;To match a field exactly (case-sensitive), use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(query, fields: [{email: :exact}, :name])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Phrase Matches&lt;/h3&gt; &#xA;&lt;p&gt;To only match the exact order, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;fresh honey&#34;, match: :phrase)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stemming and Language&lt;/h3&gt; &#xA;&lt;p&gt;Searchkick stems words by default for better matching. &lt;code&gt;apple&lt;/code&gt; and &lt;code&gt;apples&lt;/code&gt; both stem to &lt;code&gt;appl&lt;/code&gt;, so searches for either term will have the same matches.&lt;/p&gt; &#xA;&lt;p&gt;Searchkick defaults to English for stemming. To change this, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick language: &#34;german&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-stemmer-tokenfilter.html#analysis-stemmer-tokenfilter-configure-parms&#34;&gt;list of languages&lt;/a&gt;. A few languages require plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chinese&lt;/code&gt; - &lt;a href=&#34;https://github.com/medcl/elasticsearch-analysis-ik&#34;&gt;analysis-ik plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chinese2&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-smartcn.html&#34;&gt;analysis-smartcn plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;japanese&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-kuromoji.html&#34;&gt;analysis-kuromoji plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;korean&lt;/code&gt; - &lt;a href=&#34;https://github.com/open-korean-text/elasticsearch-analysis-openkoreantext&#34;&gt;analysis-openkoreantext plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;korean2&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-nori.html&#34;&gt;analysis-nori plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;polish&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-stempel.html&#34;&gt;analysis-stempel plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ukrainian&lt;/code&gt; - &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/7.4/analysis-ukrainian.html&#34;&gt;analysis-ukrainian plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vietnamese&lt;/code&gt; - &lt;a href=&#34;https://github.com/duydo/elasticsearch-analysis-vietnamese&#34;&gt;analysis-vietnamese plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use a Hunspell dictionary for stemming.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick stemmer: {type: &#34;hunspell&#34;, locale: &#34;en_US&#34;}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable stemming with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  searchkick stem: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exclude certain words from stemming with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  searchkick stem_exclusion: [&#34;apples&#34;]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or change how words are stemmed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  searchkick stemmer_override: [&#34;apples =&amp;gt; other&#34;]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Synonyms&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick search_synonyms: [[&#34;pop&#34;, &#34;soda&#34;], [&#34;burger&#34;, &#34;hamburger&#34;]]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call &lt;code&gt;Product.reindex&lt;/code&gt; after changing synonyms. Synonyms are applied at search time before stemming, and can be a single word or multiple words.&lt;/p&gt; &#xA;&lt;p&gt;For directional synonyms, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;search_synonyms: [&#34;lightbulb =&amp;gt; halogenlamp&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dynamic Synonyms&lt;/h3&gt; &#xA;&lt;p&gt;The above approach works well when your synonym list is static, but in practice, this is often not the case. When you analyze search conversions, you often want to add new synonyms without a full reindex.&lt;/p&gt; &#xA;&lt;h4&gt;Elasticsearch 7.3+ and OpenSearch&lt;/h4&gt; &#xA;&lt;p&gt;For Elasticsearch 7.3+ and OpenSearch, we recommend placing synonyms in a file on the search server (in the &lt;code&gt;config&lt;/code&gt; directory). This allows you to reload synonyms without reindexing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;pop, soda&#xA;burger, hamburger&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick search_synonyms: &#34;synonyms.txt&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And reload with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.reload_synonyms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Elasticsearch &amp;lt; 7.3&lt;/h4&gt; &#xA;&lt;p&gt;You can use a library like &lt;a href=&#34;https://github.com/mbleigh/acts-as-taggable-on&#34;&gt;ActsAsTaggableOn&lt;/a&gt; and do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  acts_as_taggable&#xA;  scope :search_import, -&amp;gt; { includes(:tags) }&#xA;&#xA;  def search_data&#xA;    {&#xA;      name_tagged: &#34;#{name} #{tags.map(&amp;amp;:name).join(&#34; &#34;)}&#34;&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(query, fields: [:name_tagged])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Misspellings&lt;/h3&gt; &#xA;&lt;p&gt;By default, Searchkick handles misspelled queries by returning results with an &lt;a href=&#34;https://en.wikipedia.org/wiki/Levenshtein_distance&#34;&gt;edit distance&lt;/a&gt; of one.&lt;/p&gt; &#xA;&lt;p&gt;You can change this with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zucini&#34;, misspellings: {edit_distance: 2}) # zucchini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To prevent poor precision and improve performance for correctly spelled queries (which should be a majority for most applications), Searchkick can first perform a search without misspellings, and if there are too few results, perform another with them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zuchini&#34;, misspellings: {below: 5})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If there are fewer than 5 results, a 2nd search is performed with misspellings enabled. The result of this query is returned.&lt;/p&gt; &#xA;&lt;p&gt;Turn off misspellings with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zuchini&#34;, misspellings: false) # no zucchini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify which fields can include misspellings with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;zucini&#34;, fields: [:name, :color], misspellings: {fields: [:name]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When doing this, you must also specify fields to search&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Bad Matches&lt;/h3&gt; &#xA;&lt;p&gt;If a user searches &lt;code&gt;butter&lt;/code&gt;, they may also get results for &lt;code&gt;peanut butter&lt;/code&gt;. To prevent this, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;butter&#34;, exclude: [&#34;peanut butter&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can map queries and terms to exclude with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;exclude_queries = {&#xA;  &#34;butter&#34; =&amp;gt; [&#34;peanut butter&#34;],&#xA;  &#34;cream&#34; =&amp;gt; [&#34;ice cream&#34;, &#34;whipped cream&#34;]&#xA;}&#xA;&#xA;Product.search(query, exclude: exclude_queries[query])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can demote results by boosting by a factor less than one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;butter&#34;, boost_where: {category: {value: &#34;pantry&#34;, factor: 0.5}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Emoji&lt;/h3&gt; &#xA;&lt;p&gt;Search &lt;span&gt;🍨&lt;/span&gt;&lt;span&gt;🍰&lt;/span&gt; and get &lt;code&gt;ice cream cake&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Add this line to your application’s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;gemoji-parser&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;🍨🍰&#34;, emoji: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Indexing&lt;/h2&gt; &#xA;&lt;p&gt;Control what data is indexed with the &lt;code&gt;search_data&lt;/code&gt; method. Call &lt;code&gt;Product.reindex&lt;/code&gt; after changing this method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  belongs_to :department&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      department_name: department.name,&#xA;      on_sale: sale_price.present?&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Searchkick uses &lt;code&gt;find_in_batches&lt;/code&gt; to import documents. To eager load associations, use the &lt;code&gt;search_import&lt;/code&gt; scope.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  scope :search_import, -&amp;gt; { includes(:department) }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, all records are indexed. To control which records are indexed, use the &lt;code&gt;should_index?&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def should_index?&#xA;    active # only index active records&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a reindex is interrupted, you can resume it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(resume: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For large data sets, try &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#parallel-reindexing&#34;&gt;parallel reindexing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;To Reindex, or Not to Reindex&lt;/h3&gt; &#xA;&lt;h4&gt;Reindex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;when you install or upgrade searchkick&lt;/li&gt; &#xA; &lt;li&gt;change the &lt;code&gt;search_data&lt;/code&gt; method&lt;/li&gt; &#xA; &lt;li&gt;change the &lt;code&gt;searchkick&lt;/code&gt; method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;No need to reindex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;app starts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strategies&lt;/h3&gt; &#xA;&lt;p&gt;There are four strategies for keeping the index synced with your database.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Inline (default)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Anytime a record is inserted, updated, or deleted&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Asynchronous&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Use background jobs for better performance&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: :async&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Jobs are added to a queue named &lt;code&gt;searchkick&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Queuing&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Push ids of records that need updated to a queue and reindex in the background in batches. This is more performant than the asynchronous method, which updates records individually. See &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#queuing&#34;&gt;how to set up&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Manual&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Turn off automatic syncing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And reindex a record or relation manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product.reindex&#xA;# or&#xA;store.products.reindex(mode: :async)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also do bulk updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.callbacks(:bulk) do&#xA;  Product.find_each(&amp;amp;:update_fields)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or temporarily skip updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.callbacks(false) do&#xA;  Product.find_each(&amp;amp;:update_fields)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or override the model’s strategy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product.reindex(mode: :async) # :inline or :queue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Associations&lt;/h3&gt; &#xA;&lt;p&gt;Data is &lt;strong&gt;not&lt;/strong&gt; automatically synced when an association is updated. If this is desired, add a callback to reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Image &amp;lt; ApplicationRecord&#xA;  belongs_to :product&#xA;&#xA;  after_commit :reindex_product&#xA;&#xA;  def reindex_product&#xA;    product.reindex&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Default Scopes&lt;/h3&gt; &#xA;&lt;p&gt;If you have a default scope that filters records, use the &lt;code&gt;should_index?&lt;/code&gt; method to exclude them from indexing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  default_scope { where(deleted_at: nil) }&#xA;&#xA;  def should_index?&#xA;    deleted_at.nil?&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to index and search filtered records, set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick unscope: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Intelligent Search&lt;/h2&gt; &#xA;&lt;p&gt;The best starting point to improve your search &lt;strong&gt;by far&lt;/strong&gt; is to track searches and conversions. &lt;a href=&#34;https://github.com/ankane/searchjoy&#34;&gt;Searchjoy&lt;/a&gt; makes it easy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apple&#34;, track: {user_id: current_user.id})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/searchjoy&#34;&gt;See the docs&lt;/a&gt; for how to install and use. Focus on top searches with a low conversion rate.&lt;/p&gt; &#xA;&lt;p&gt;Searchkick can then use the conversion data to learn what users are looking for. If a user searches for “ice cream” and adds Ben &amp;amp; Jerry’s Chunky Monkey to the cart (our conversion metric at Instacart), that item gets a little more weight for similar searches. This can make a huge difference on the quality of your search.&lt;/p&gt; &#xA;&lt;p&gt;Add conversion data with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  has_many :conversions, class_name: &#34;Searchjoy::Conversion&#34;, as: :convertable&#xA;  has_many :searches, class_name: &#34;Searchjoy::Search&#34;, through: :conversions&#xA;&#xA;  searchkick conversions: [:conversions] # name of field&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      conversions: searches.group(:query).distinct.count(:user_id)&#xA;      # {&#34;ice cream&#34; =&amp;gt; 234, &#34;chocolate&#34; =&amp;gt; 67, &#34;cream&#34; =&amp;gt; 2}&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and set up a cron job to add new conversions daily. For zero downtime deployment, temporarily set &lt;code&gt;conversions: false&lt;/code&gt; in your search calls until the data is reindexed.&lt;/p&gt; &#xA;&lt;h3&gt;Performant Conversions&lt;/h3&gt; &#xA;&lt;p&gt;A performant way to do conversions is to cache them to prevent N+1 queries. For Postgres, create a migration with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;add_column :products, :search_conversions, :jsonb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For MySQL, use &lt;code&gt;:json&lt;/code&gt;, and for others, use &lt;code&gt;:text&lt;/code&gt; with a &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html&#34;&gt;JSON serializer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Next, update your model. Create a separate method for conversion data so you can use &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#partial-reindexing&#34;&gt;partial reindexing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick conversions: [:conversions]&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      category: category&#xA;    }.merge(conversions_data)&#xA;  end&#xA;&#xA;  def conversions_data&#xA;    {&#xA;      conversions: search_conversions || {}&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deploy and reindex your data. For zero downtime deployment, temporarily set &lt;code&gt;conversions: false&lt;/code&gt; in your search calls until the data is reindexed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, create a job to update the conversions column and reindex records with new conversions. Here’s one you can use for Searchjoy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class UpdateConversionsJob &amp;lt; ApplicationJob&#xA;  def perform(class_name, since: nil, update: true, reindex: true)&#xA;    model = Searchkick.load_model(class_name)&#xA;&#xA;    # get records that have a recent conversion&#xA;    recently_converted_ids =&#xA;      Searchjoy::Conversion.where(convertable_type: class_name).where(created_at: since..)&#xA;      .order(:convertable_id).distinct.pluck(:convertable_id)&#xA;&#xA;    # split into batches&#xA;    recently_converted_ids.in_groups_of(1000, false) do |ids|&#xA;      if update&#xA;        # fetch conversions&#xA;        conversions =&#xA;          Searchjoy::Conversion.where(convertable_id: ids, convertable_type: class_name)&#xA;          .joins(:search).where.not(searchjoy_searches: {user_id: nil})&#xA;          .group(:convertable_id, :query).distinct.count(:user_id)&#xA;&#xA;        # group by record&#xA;        conversions_by_record = {}&#xA;        conversions.each do |(id, query), count|&#xA;          (conversions_by_record[id] ||= {})[query] = count&#xA;        end&#xA;&#xA;        # update conversions column&#xA;        model.transaction do&#xA;          conversions_by_record.each do |id, conversions|&#xA;            model.where(id: id).update_all(search_conversions: conversions)&#xA;          end&#xA;        end&#xA;      end&#xA;&#xA;      if reindex&#xA;        # reindex conversions data&#xA;        model.where(id: ids).reindex(:conversions_data)&#xA;      end&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the job:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;UpdateConversionsJob.perform_now(&#34;Product&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And set it up to run daily.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;UpdateConversionsJob.perform_later(&#34;Product&#34;, since: 1.day.ago)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Personalized Results&lt;/h2&gt; &#xA;&lt;p&gt;Order results differently for each user. For example, show a user’s previously purchased products before other results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      orderer_ids: orders.pluck(:user_id) # boost this product for these users&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;milk&#34;, boost_where: {orderer_ids: current_user.id})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instant Search / Autocomplete&lt;/h2&gt; &#xA;&lt;p&gt;Autocomplete predicts what a user will type, making the search experience faster and easier.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gist.github.com/ankane/b6988db2802aca68a589b31e41b44195/raw/40febe948427e5bc53ec4e5dc248822855fef76f/autocomplete.png&#34; alt=&#34;Autocomplete&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To autocomplete on search terms rather than results, check out &lt;a href=&#34;https://github.com/ankane/autosuggest&#34;&gt;Autosuggest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note 2:&lt;/strong&gt; If you only have a few thousand records, don’t use Searchkick for autocomplete. It’s &lt;em&gt;much&lt;/em&gt; faster to load all records into JavaScript and autocomplete there (eliminates network requests).&lt;/p&gt; &#xA;&lt;p&gt;First, specify which fields use this feature. This is necessary since autocomplete can increase the index size significantly, but don’t worry - this gives you blazing faster queries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Movie &amp;lt; ApplicationRecord&#xA;  searchkick word_start: [:title, :director]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Movie.search(&#34;jurassic pa&#34;, fields: [:title], match: :word_start)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Typically, you want to use a JavaScript library like &lt;a href=&#34;https://twitter.github.io/typeahead.js/&#34;&gt;typeahead.js&lt;/a&gt; or &lt;a href=&#34;https://jqueryui.com/autocomplete/&#34;&gt;jQuery UI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Here’s how to make it work with Rails&lt;/h4&gt; &#xA;&lt;p&gt;First, add a route and controller action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MoviesController &amp;lt; ApplicationController&#xA;  def autocomplete&#xA;    render json: Movie.search(params[:query], {&#xA;      fields: [&#34;title^5&#34;, &#34;director&#34;],&#xA;      match: :word_start,&#xA;      limit: 10,&#xA;      load: false,&#xA;      misspellings: {below: 5}&#xA;    }).map(&amp;amp;:title)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use &lt;code&gt;load: false&lt;/code&gt; and &lt;code&gt;misspellings: {below: n}&lt;/code&gt; (or &lt;code&gt;misspellings: false&lt;/code&gt;) for best performance.&lt;/p&gt; &#xA;&lt;p&gt;Then add the search box and JavaScript code to a view.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input type=&#34;text&#34; id=&#34;query&#34; name=&#34;query&#34; /&amp;gt;&#xA;&#xA;&amp;lt;script src=&#34;jquery.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;typeahead.bundle.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;  var movies = new Bloodhound({&#xA;    datumTokenizer: Bloodhound.tokenizers.whitespace,&#xA;    queryTokenizer: Bloodhound.tokenizers.whitespace,&#xA;    remote: {&#xA;      url: &#39;/movies/autocomplete?query=%QUERY&#39;,&#xA;      wildcard: &#39;%QUERY&#39;&#xA;    }&#xA;  });&#xA;  $(&#39;#query&#39;).typeahead(null, {&#xA;    source: movies&#xA;  });&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gist.github.com/ankane/b6988db2802aca68a589b31e41b44195/raw/40febe948427e5bc53ec4e5dc248822855fef76f/recursion.png&#34; alt=&#34;Suggest&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick suggest: [:name] # fields to generate suggestions&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;peantu butta&#34;, suggest: true)&#xA;products.suggestions # [&#34;peanut butter&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Aggregations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html&#34;&gt;Aggregations&lt;/a&gt; provide aggregated search data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gist.github.com/ankane/b6988db2802aca68a589b31e41b44195/raw/40febe948427e5bc53ec4e5dc248822855fef76f/facets.png&#34; alt=&#34;Aggregations&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;chuck taylor&#34;, aggs: [:product_type, :gender, :brand])&#xA;products.aggs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;where&lt;/code&gt; conditions apply to aggregations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, where: {color: &#34;brandy&#34;}, aggs: [:size])&#xA;# aggregations for brandy wingtips are returned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change this with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, where: {color: &#34;brandy&#34;}, aggs: [:size], smart_aggs: false)&#xA;# aggregations for all wingtips are returned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set &lt;code&gt;where&lt;/code&gt; conditions for each aggregation separately with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, aggs: {size: {where: {color: &#34;brandy&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Limit&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, aggs: {store_id: {limit: 10}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Order&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;wingtips&#34;, aggs: {color: {order: {&#34;_key&#34; =&amp;gt; &#34;asc&#34;}}}) # alphabetically&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-order&#34;&gt;All of these options are supported&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ranges&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;price_ranges = [{to: 20}, {from: 20, to: 50}, {from: 50}]&#xA;Product.search(&#34;*&#34;, aggs: {price: {ranges: price_ranges}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Minimum document count&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;apples&#34;, aggs: {store_id: {min_doc_count: 2}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Script support&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;*&#34;, aggs: {color: {script: {source: &#34;&#39;Color: &#39; + _value&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Date histogram&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;pear&#34;, aggs: {products_per_year: {date_histogram: {field: :created_at, interval: :year}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other aggregation types, including sub-aggregations, use &lt;code&gt;body_options&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;orange&#34;, body_options: {aggs: {price: {histogram: {field: :price, interval: 10}}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Highlight&lt;/h2&gt; &#xA;&lt;p&gt;Specify which fields to index with highlighting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Band &amp;lt; ApplicationRecord&#xA;  searchkick highlight: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Highlight the search query in the results.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bands = Band.search(&#34;cinema&#34;, highlight: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the highlighted fields with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bands.with_highlights.each do |band, highlights|&#xA;  highlights[:name] # &#34;Two Door &amp;lt;em&amp;gt;Cinema&amp;lt;/em&amp;gt; Club&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the tag, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Band.search(&#34;cinema&#34;, highlight: {tag: &#34;&amp;lt;strong&amp;gt;&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To highlight and search different fields, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Band.search(&#34;cinema&#34;, fields: [:name], highlight: {fields: [:description]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the entire field is highlighted. To get small snippets instead, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bands = Band.search(&#34;cinema&#34;, highlight: {fragment_size: 20})&#xA;bands.with_highlights(multiple: true).each do |band, highlights|&#xA;  highlights[:name].join(&#34; and &#34;)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional options can be specified for each field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Band.search(&#34;cinema&#34;, fields: [:name], highlight: {fields: {name: {fragment_size: 200}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find available highlight options in the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/highlighting.html&#34;&gt;Elasticsearch reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Similar Items&lt;/h2&gt; &#xA;&lt;p&gt;Find similar items.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product = Product.first&#xA;product.similar(fields: [:name], where: {size: &#34;12 oz&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Geospatial Searches&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Restaurant &amp;lt; ApplicationRecord&#xA;  searchkick locations: [:location]&#xA;&#xA;  def search_data&#xA;    attributes.merge(location: {lat: latitude, lon: longitude})&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;pizza&#34;, where: {location: {near: {lat: 37, lon: -114}, within: &#34;100mi&#34;}}) # or 160km&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bounded by a box&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;sushi&#34;, where: {location: {top_left: {lat: 38, lon: -123}, bottom_right: {lat: 37, lon: -122}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;top_right&lt;/code&gt; and &lt;code&gt;bottom_left&lt;/code&gt; also work&lt;/p&gt; &#xA;&lt;p&gt;Bounded by a polygon&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;dessert&#34;, where: {location: {geo_polygon: {points: [{lat: 38, lon: -123}, {lat: 39, lon: -123}, {lat: 37, lon: 122}]}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Boost By Distance&lt;/h3&gt; &#xA;&lt;p&gt;Boost results by distance - closer results are boosted more&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;noodles&#34;, boost_by_distance: {location: {origin: {lat: 37, lon: -122}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also supports &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#function-decay&#34;&gt;additional options&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;wings&#34;, boost_by_distance: {location: {origin: {lat: 37, lon: -122}, function: &#34;linear&#34;, scale: &#34;30mi&#34;, decay: 0.5}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Geo Shapes&lt;/h3&gt; &#xA;&lt;p&gt;You can also index and search geo shapes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Restaurant &amp;lt; ApplicationRecord&#xA;  searchkick geo_shape: [:bounds]&#xA;&#xA;  def search_data&#xA;    attributes.merge(&#xA;      bounds: {&#xA;        type: &#34;envelope&#34;,&#xA;        coordinates: [{lat: 4, lon: 1}, {lat: 2, lon: 3}]&#xA;      }&#xA;    )&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-shape.html&#34;&gt;Elasticsearch documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Find shapes intersecting with the query shape&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;soup&#34;, where: {bounds: {geo_shape: {type: &#34;polygon&#34;, coordinates: [[{lat: 38, lon: -123}, ...]]}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Falling entirely within the query shape&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;salad&#34;, where: {bounds: {geo_shape: {type: &#34;circle&#34;, relation: &#34;within&#34;, coordinates: [{lat: 38, lon: -123}], radius: &#34;1km&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Not touching the query shape&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Restaurant.search(&#34;burger&#34;, where: {bounds: {geo_shape: {type: &#34;envelope&#34;, relation: &#34;disjoint&#34;, coordinates: [{lat: 38, lon: -123}, {lat: 37, lon: -122}]}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inheritance&lt;/h2&gt; &#xA;&lt;p&gt;Searchkick supports single table inheritance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Dog &amp;lt; Animal&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your parent model, set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Animal &amp;lt; ApplicationRecord&#xA;  searchkick inheritance: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parent and child model can both reindex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Animal.reindex&#xA;Dog.reindex # equivalent, all animals reindexed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to search, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Animal.search(&#34;*&#34;)                   # all animals&#xA;Dog.search(&#34;*&#34;)                      # just dogs&#xA;Animal.search(&#34;*&#34;, type: [Dog, Cat]) # just cats and dogs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;suggest&lt;/code&gt; option retrieves suggestions from the parent at the moment.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Dog.search(&#34;airbudd&#34;, suggest: true) # suggestions for all animals&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This relies on a &lt;code&gt;type&lt;/code&gt; field that is automatically added to the indexed document. Be wary of defining your own &lt;code&gt;type&lt;/code&gt; field in &lt;code&gt;search_data&lt;/code&gt;, as it will take precedence.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Debugging Queries&lt;/h2&gt; &#xA;&lt;p&gt;To help with debugging queries, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;soap&#34;, debug: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This prints useful info to &lt;code&gt;stdout&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See how the search server scores your queries with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;soap&#34;, explain: true).response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See how the search server tokenizes your queries with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.tokens(&#34;Dish Washer Soap&#34;, analyzer: &#34;searchkick_index&#34;)&#xA;# [&#34;dish&#34;, &#34;dishwash&#34;, &#34;washer&#34;, &#34;washersoap&#34;, &#34;soap&#34;]&#xA;&#xA;Product.search_index.tokens(&#34;dishwasher soap&#34;, analyzer: &#34;searchkick_search&#34;)&#xA;# [&#34;dishwashersoap&#34;] - no match&#xA;&#xA;Product.search_index.tokens(&#34;dishwasher soap&#34;, analyzer: &#34;searchkick_search2&#34;)&#xA;# [&#34;dishwash&#34;, &#34;soap&#34;] - match!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Partial matches&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.tokens(&#34;San Diego&#34;, analyzer: &#34;searchkick_word_start_index&#34;)&#xA;# [&#34;s&#34;, &#34;sa&#34;, &#34;san&#34;, &#34;d&#34;, &#34;di&#34;, &#34;die&#34;, &#34;dieg&#34;, &#34;diego&#34;]&#xA;&#xA;Product.search_index.tokens(&#34;dieg&#34;, analyzer: &#34;searchkick_word_search&#34;)&#xA;# [&#34;dieg&#34;] - match!!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/lib/searchkick/index_options.rb#L36&#34;&gt;complete list of analyzers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;As you iterate on your search, it’s a good idea to add tests.&lt;/p&gt; &#xA;&lt;p&gt;For performance, only enable Searchkick callbacks for the tests that need it.&lt;/p&gt; &#xA;&lt;h3&gt;Parallel Tests&lt;/h3&gt; &#xA;&lt;p&gt;Rails 6 enables parallel tests by default. Add to your &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ActiveSupport::TestCase&#xA;  parallelize_setup do |worker|&#xA;    Searchkick.index_suffix = worker&#xA;&#xA;    # reindex models&#xA;    Product.reindex&#xA;&#xA;    # and disable callbacks&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ProductTest &amp;lt; ActiveSupport::TestCase&#xA;  def setup&#xA;    Searchkick.enable_callbacks&#xA;  end&#xA;&#xA;  def teardown&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;&#xA;  def test_search&#xA;    Product.create!(name: &#34;Apple&#34;)&#xA;    Product.search_index.refresh&#xA;    assert_equal [&#34;Apple&#34;], Product.search(&#34;apple&#34;).map(&amp;amp;:name)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minitest&lt;/h3&gt; &#xA;&lt;p&gt;Add to your &lt;code&gt;test/test_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# reindex models&#xA;Product.reindex&#xA;&#xA;# and disable callbacks&#xA;Searchkick.disable_callbacks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ProductTest &amp;lt; Minitest::Test&#xA;  def setup&#xA;    Searchkick.enable_callbacks&#xA;  end&#xA;&#xA;  def teardown&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;&#xA;  def test_search&#xA;    Product.create!(name: &#34;Apple&#34;)&#xA;    Product.search_index.refresh&#xA;    assert_equal [&#34;Apple&#34;], Product.search(&#34;apple&#34;).map(&amp;amp;:name)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RSpec&lt;/h3&gt; &#xA;&lt;p&gt;Add to your &lt;code&gt;spec/spec_helper.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.before(:suite) do&#xA;    # reindex models&#xA;    Product.reindex&#xA;&#xA;    # and disable callbacks&#xA;    Searchkick.disable_callbacks&#xA;  end&#xA;&#xA;  config.around(:each, search: true) do |example|&#xA;    Searchkick.callbacks(nil) do&#xA;      example.run&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe Product, search: true do&#xA;  it &#34;searches&#34; do&#xA;    Product.create!(name: &#34;Apple&#34;)&#xA;    Product.search_index.refresh&#xA;    assert_equal [&#34;Apple&#34;], Product.search(&#34;apple&#34;).map(&amp;amp;:name)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Factory Bot&lt;/h3&gt; &#xA;&lt;p&gt;Use a trait and an after &lt;code&gt;create&lt;/code&gt; hook for each indexed model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;FactoryBot.define do&#xA;  factory :product do&#xA;    # ...&#xA;&#xA;    # Note: This should be the last trait in the list so `reindex` is called&#xA;    # after all the other callbacks complete.&#xA;    trait :reindex do&#xA;      after(:create) do |product, _evaluator|&#xA;        product.reindex(refresh: true)&#xA;      end&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;# use it&#xA;FactoryBot.create(:product, :some_trait, :reindex, some_attribute: &#34;foo&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Actions&lt;/h3&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ankane/setup-elasticsearch&#34;&gt;setup-elasticsearch&lt;/a&gt; for an easy way to install Elasticsearch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;    - uses: ankane/setup-elasticsearch@v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;a href=&#34;https://github.com/ankane/setup-opensearch&#34;&gt;setup-opensearch&lt;/a&gt; for an easy way to install OpenSearch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;    - uses: ankane/setup-opensearch@v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;For the search server, Searchkick uses &lt;code&gt;ENV[&#34;ELASTICSEARCH_URL&#34;]&lt;/code&gt; for Elasticsearch and &lt;code&gt;ENV[&#34;OPENSEARCH_URL&#34;]&lt;/code&gt; for OpenSearch. This defaults to &lt;code&gt;http://localhost:9200&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#elastic-cloud&#34;&gt;Elastic Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#heroku&#34;&gt;Heroku&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#amazon-opensearch-service&#34;&gt;Amazon OpenSearch Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#self-hosted-and-other&#34;&gt;Self-Hosted and Other&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Elastic Cloud&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer &lt;code&gt;config/initializers/elasticsearch.rb&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;ELASTICSEARCH_URL&#34;] = &#34;https://user:password@host:port&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Heroku&lt;/h3&gt; &#xA;&lt;p&gt;Choose an add-on: &lt;a href=&#34;https://elements.heroku.com/addons/bonsai&#34;&gt;Bonsai&lt;/a&gt;, &lt;a href=&#34;https://elements.heroku.com/addons/searchbox&#34;&gt;SearchBox&lt;/a&gt;, or &lt;a href=&#34;https://elements.heroku.com/addons/foundelasticsearch&#34;&gt;Elastic Cloud&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Elasticsearch on Bonsai:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create bonsai&#xA;heroku config:set ELASTICSEARCH_URL=`heroku config:get BONSAI_URL`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For OpenSearch on Bonsai:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create bonsai --engine=opensearch&#xA;heroku config:set OPENSEARCH_URL=`heroku config:get BONSAI_URL`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For SearchBox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create searchbox:starter&#xA;heroku config:set ELASTICSEARCH_URL=`heroku config:get SEARCHBOX_URL`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Elastic Cloud (previously Found):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku addons:create foundelasticsearch&#xA;heroku addons:open foundelasticsearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit the Shield page and reset your password. You’ll need to add the username and password to your url. Get the existing url with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku config:get FOUNDELASTICSEARCH_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And add &lt;code&gt;elastic:password@&lt;/code&gt; right after &lt;code&gt;https://&lt;/code&gt; and add port &lt;code&gt;9243&lt;/code&gt; at the end:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku config:set ELASTICSEARCH_URL=https://elastic:password@12345.us-east-1.aws.found.io:9243&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku run rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Amazon OpenSearch Service&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer &lt;code&gt;config/initializers/opensearch.rb&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;OPENSEARCH_URL&#34;] = &#34;https://es-domain-1234.us-east-1.es.amazonaws.com:443&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use signed requests, include in your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;faraday_middleware-aws-sigv4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and add to your initializer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.aws_credentials = {&#xA;  access_key_id: ENV[&#34;AWS_ACCESS_KEY_ID&#34;],&#xA;  secret_access_key: ENV[&#34;AWS_SECRET_ACCESS_KEY&#34;],&#xA;  region: &#34;us-east-1&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Self-Hosted and Other&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;ELASTICSEARCH_URL&#34;] = &#34;https://user:password@host:port&#34;&#xA;# or&#xA;ENV[&#34;OPENSEARCH_URL&#34;] = &#34;https://user:password@host:port&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then deploy and reindex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Data Protection&lt;/h3&gt; &#xA;&lt;p&gt;We recommend encrypting data at rest and in transit (even inside your own network). This is especially important if you send &lt;a href=&#34;https://en.wikipedia.org/wiki/Personally_identifiable_information&#34;&gt;personal data&lt;/a&gt; of your users to the search server.&lt;/p&gt; &#xA;&lt;p&gt;Bonsai, Elastic Cloud, and Amazon OpenSearch Service all support encryption at rest and HTTPS.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic Failover&lt;/h3&gt; &#xA;&lt;p&gt;Create an initializer with multiple hosts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ENV[&#34;ELASTICSEARCH_URL&#34;] = &#34;https://user:password@host1,https://user:password@host2&#34;&#xA;# or&#xA;ENV[&#34;OPENSEARCH_URL&#34;] = &#34;https://user:password@host1,https://user:password@host2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/elastic/elastic-transport-ruby&#34;&gt;elastic-transport&lt;/a&gt; or &lt;a href=&#34;https://github.com/opensearch-project/opensearch-ruby/tree/main/opensearch-transport&#34;&gt;opensearch-transport&lt;/a&gt; for a complete list of options.&lt;/p&gt; &#xA;&lt;h3&gt;Lograge&lt;/h3&gt; &#xA;&lt;p&gt;Add the following to &lt;code&gt;config/environments/production.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.lograge.custom_options = lambda do |event|&#xA;  options = {}&#xA;  options[:search] = event.payload[:searchkick_runtime] if event.payload[:searchkick_runtime].to_f &amp;gt; 0&#xA;  options&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ankane/production_rails&#34;&gt;Production Rails&lt;/a&gt; for other good practices.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;h3&gt;JSON Generation&lt;/h3&gt; &#xA;&lt;p&gt;Significantly increase performance with faster JSON generation. Add &lt;a href=&#34;https://github.com/ohler55/oj&#34;&gt;Oj&lt;/a&gt; to your Gemfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;oj&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This speeds up all JSON generation and parsing in your application (automatically!)&lt;/p&gt; &#xA;&lt;h3&gt;Persistent HTTP Connections&lt;/h3&gt; &#xA;&lt;p&gt;Significantly increase performance with persistent HTTP connections. Add &lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt; to your Gemfile and it’ll automatically be used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;typhoeus&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To reduce log noise, create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Ethon.logger = Logger.new(nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run into issues on Windows, check out &lt;a href=&#34;https://www.rastating.com/fixing-issues-in-typhoeus-and-httparty-on-windows/&#34;&gt;this post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Searchable Fields&lt;/h3&gt; &#xA;&lt;p&gt;By default, all string fields are searchable (can be used in &lt;code&gt;fields&lt;/code&gt; option). Speed up indexing and reduce index size by only making some fields searchable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick searchable: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Filterable Fields&lt;/h3&gt; &#xA;&lt;p&gt;By default, all string fields are filterable (can be used in &lt;code&gt;where&lt;/code&gt; option). Speed up indexing and reduce index size by only making some fields filterable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick filterable: [:brand]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Non-string fields are always filterable and should not be passed to this option.&lt;/p&gt; &#xA;&lt;h3&gt;Parallel Reindexing&lt;/h3&gt; &#xA;&lt;p&gt;For large data sets, you can use background jobs to parallelize reindexing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(mode: :async)&#xA;# {index_name: &#34;products_production_20170111210018065&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the jobs complete, promote the new index with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.promote(index_name)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally track the status with Redis:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.redis = Redis.new&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.reindex_status(index_name)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also have Searchkick wait for reindexing to complete&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(mode: :async, wait: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/nickelser/activejob-traffic_control&#34;&gt;ActiveJob::TrafficControl&lt;/a&gt; to control concurrency. Install the gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;activejob-traffic_control&#34;, &#34;&amp;gt;= 0.1.3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And create an initializer with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ActiveJob::TrafficControl.client = Searchkick.redis&#xA;&#xA;class Searchkick::BulkReindexJob&#xA;  concurrency 3&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will allow only 3 jobs to run at once.&lt;/p&gt; &#xA;&lt;h3&gt;Refresh Interval&lt;/h3&gt; &#xA;&lt;p&gt;You can specify a longer refresh interval while reindexing to increase performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(mode: :async, refresh_interval: &#34;30s&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only makes a noticable difference with parallel reindexing.&lt;/p&gt; &#xA;&lt;p&gt;When promoting, have it restored to the value in your mapping (defaults to &lt;code&gt;1s&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.promote(index_name, update_refresh_interval: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Queuing&lt;/h3&gt; &#xA;&lt;p&gt;Push ids of records needing reindexing to a queue and reindex in bulk for better performance. First, set up Redis in an initializer. We recommend using &lt;a href=&#34;https://github.com/mperham/connection_pool&#34;&gt;connection_pool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.redis = ConnectionPool.new { Redis.new }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And ask your models to queue updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: :queue&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, set up a background job to run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick::ProcessQueueJob.perform_later(class_name: &#34;Product&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check the queue length with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.reindex_queue.length&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more tips, check out &lt;a href=&#34;https://www.elastic.co/blog/found-keeping-elasticsearch-in-sync&#34;&gt;Keeping Elasticsearch in Sync&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Routing&lt;/h3&gt; &#xA;&lt;p&gt;Searchkick supports &lt;a href=&#34;https://www.elastic.co/blog/customizing-your-document-routing&#34;&gt;routing&lt;/a&gt;, which can significantly speed up searches.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Business &amp;lt; ApplicationRecord&#xA;  searchkick routing: true&#xA;&#xA;  def search_routing&#xA;    city_id&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex and search with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Business.search(&#34;ice cream&#34;, routing: params[:city_id])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Partial Reindexing&lt;/h3&gt; &#xA;&lt;p&gt;Reindex a subset of attributes to reduce time spent generating search data and cut down on network traffic.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      category: category&#xA;    }.merge(prices_data)&#xA;  end&#xA;&#xA;  def prices_data&#xA;    {&#xA;      price: price,&#xA;      sale_price: sale_price&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(:prices_data)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;p&gt;Searchkick makes it easy to use the Elasticsearch or OpenSearch DSL on its own.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Mapping&lt;/h3&gt; &#xA;&lt;p&gt;Create a custom mapping:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick mappings: {&#xA;    properties: {&#xA;      name: {type: &#34;keyword&#34;}&#xA;    }&#xA;  }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use a custom mapping, you&#39;ll need to use &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#advanced-search&#34;&gt;custom searching&lt;/a&gt; as well.&lt;/p&gt; &#xA;&lt;p&gt;To keep the mappings and settings generated by Searchkick, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick merge_mappings: true, mappings: {...}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced Search&lt;/h3&gt; &#xA;&lt;p&gt;And use the &lt;code&gt;body&lt;/code&gt; option to search:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(body: {query: {match: {name: &#34;milk&#34;}}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the response with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products.response&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To modify the query generated by Searchkick, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;milk&#34;, body_options: {min_score: 1})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products =&#xA;  Product.search(&#34;apples&#34;) do |body|&#xA;    body[:min_score] = 1&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Client&lt;/h3&gt; &#xA;&lt;p&gt;To access the &lt;code&gt;Elasticsearch::Client&lt;/code&gt; or &lt;code&gt;OpenSearch::Client&lt;/code&gt; directly, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multi Search&lt;/h2&gt; &#xA;&lt;p&gt;To batch search requests for performance, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;snacks&#34;)&#xA;coupons = Coupon.search(&#34;snacks&#34;)&#xA;Searchkick.multi_search([products, coupons])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use &lt;code&gt;products&lt;/code&gt; and &lt;code&gt;coupons&lt;/code&gt; as typical results.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Errors are not raised as with single requests. Use the &lt;code&gt;error&lt;/code&gt; method on each query to check for errors.&lt;/p&gt; &#xA;&lt;h2&gt;Multiple Models&lt;/h2&gt; &#xA;&lt;p&gt;Search across multiple models with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search(&#34;milk&#34;, models: [Product, Category])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Boost specific models with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;indices_boost: {Category =&amp;gt; 2, Product =&amp;gt; 1}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multi-Tenancy&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://www.tiagoamaro.com.br/2014/12/11/multi-tenancy-with-searchkick/&#34;&gt;this great post&lt;/a&gt; on the &lt;a href=&#34;https://github.com/influitive/apartment&#34;&gt;Apartment&lt;/a&gt; gem. Follow a similar pattern if you use another gem.&lt;/p&gt; &#xA;&lt;h2&gt;Scroll API&lt;/h2&gt; &#xA;&lt;p&gt;Searchkick also supports the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#scroll-search-results&#34;&gt;scroll API&lt;/a&gt;. Scrolling is not intended for real time user requests, but rather for processing large amounts of data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;*&#34;, scroll: &#34;1m&#34;).scroll do |batch|&#xA;  # process batch ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also scroll batches manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;products = Product.search(&#34;*&#34;, scroll: &#34;1m&#34;)&#xA;while products.any?&#xA;  # process batch ...&#xA;&#xA;  products = products.scroll&#xA;end&#xA;&#xA;products.clear_scroll&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deep Paging&lt;/h2&gt; &#xA;&lt;p&gt;By default, Elasticsearch and OpenSearch limit paging to the first 10,000 results. &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/guide/current/pagination.html&#34;&gt;Here’s why&lt;/a&gt;. We don’t recommend changing this, but if you really need all results, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick deep_paging: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you just need an accurate total count, you can instead use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;pears&#34;, body_options: {track_total_hits: true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Nested Data&lt;/h2&gt; &#xA;&lt;p&gt;To query nested data, use dot notation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;san&#34;, fields: [&#34;store.city&#34;], where: {&#34;store.zip_code&#34; =&amp;gt; 12345})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;Reindex one record&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product = Product.find(1)&#xA;product.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex multiple records&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.where(store_id: 1).reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;store.products.reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remove old indices&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search_index.clean_indices&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use custom settings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick settings: {number_of_shards: 3}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a different index name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick index_name: &#34;products_v2&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a dynamic index name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick index_name: -&amp;gt; { &#34;#{name.tableize}-#{I18n.locale}&#34; }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prefix the index name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick index_prefix: &#34;datakick&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all models&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.index_prefix = &#34;datakick&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a different term for boosting by conversions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;banana&#34;, conversions_term: &#34;organic banana&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple conversion fields&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  has_many :searches, class_name: &#34;Searchjoy::Search&#34;&#xA;&#xA;  # searchkick also supports multiple &#34;conversions&#34; fields&#xA;  searchkick conversions: [&#34;unique_user_conversions&#34;, &#34;total_conversions&#34;]&#xA;&#xA;  def search_data&#xA;    {&#xA;      name: name,&#xA;      unique_user_conversions: searches.group(:query).distinct.count(:user_id),&#xA;      # {&#34;ice cream&#34; =&amp;gt; 234, &#34;chocolate&#34; =&amp;gt; 67, &#34;cream&#34; =&amp;gt; 2}&#xA;      total_conversions: searches.group(:query).count&#xA;      # {&#34;ice cream&#34; =&amp;gt; 412, &#34;chocolate&#34; =&amp;gt; 117, &#34;cream&#34; =&amp;gt; 6}&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and during query time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;banana&#34;) # boost by both fields (default)&#xA;Product.search(&#34;banana&#34;, conversions: &#34;total_conversions&#34;) # only boost by total_conversions&#xA;Product.search(&#34;banana&#34;, conversions: false) # no conversion boosting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change timeout&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.timeout = 15 # defaults to 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set a lower timeout for searches&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search_timeout = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change the search method name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search_method_name = :lookup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change search queue name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.queue_name = :search_reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Eager load associations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;milk&#34;, includes: [:brand, :stores])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Eager load different associations by model&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.search(&#34;*&#34;,  models: [Product, Store], model_includes: {Product =&amp;gt; [:store], Store =&amp;gt; [:product]})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run additional scopes on results&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;milk&#34;, scope_results: -&amp;gt;(r) { r.with_attached_images })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify default fields to search&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick default_fields: [:name]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Turn off special characters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  # A will not match Ä&#xA;  searchkick special_characters: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Turn on stemming for conversions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick stem_conversions: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make search case-sensitive&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick case_sensitive: true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If misspellings are enabled (default), results with a single character case difference will match. Turn off misspellings if this is not desired.&lt;/p&gt; &#xA;&lt;p&gt;Change import batch size&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick batch_size: 200 # defaults to 1000&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create index without importing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.reindex(import: false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use a different id&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_document_id&#xA;    custom_id&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-search-api-query-params&#34;&gt;request parameters&lt;/a&gt; like &lt;code&gt;search_type&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;carrots&#34;, request_params: {search_type: &#34;dfs_query_then_fetch&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set options across all models&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Searchkick.model_options = {&#xA;  batch_size: 200&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex conditionally&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick callbacks: false&#xA;&#xA;  # add the callbacks manually&#xA;  after_commit :reindex, if: -&amp;gt; (model) { model.previous_changes.key?(&#34;name&#34;) } # use your own condition&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reindex all models - Rails only&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake searchkick:reindex:all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Turn on misspellings after a certain number of characters&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;api&#34;, misspellings: {prefix_length: 2}) # api, apt, no ahi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; With this option, if the query length is the same as &lt;code&gt;prefix_length&lt;/code&gt;, misspellings are turned off with Elasticsearch 7 and OpenSearch 1&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Product.search(&#34;ah&#34;, misspellings: {prefix_length: 2}) # ah, no aha&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BigDecimal values are indexed as floats by default so they can be used for boosting. Convert them to strings to keep full precision.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  def search_data&#xA;    {&#xA;      units: units.to_s(&#34;F&#34;)&#xA;    }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Gotchas&lt;/h2&gt; &#xA;&lt;h3&gt;Consistency&lt;/h3&gt; &#xA;&lt;p&gt;Elasticsearch and OpenSearch are eventually consistent, meaning it can take up to a second for a change to reflect in search. You can use the &lt;code&gt;refresh&lt;/code&gt; method to have it show up immediately.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;product.save!&#xA;Product.search_index.refresh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inconsistent Scores&lt;/h3&gt; &#xA;&lt;p&gt;Due to the distributed nature of Elasticsearch and OpenSearch, you can get incorrect results when the number of documents in the index is low. You can &lt;a href=&#34;https://www.elastic.co/blog/understanding-query-then-fetch-vs-dfs-query-then-fetch&#34;&gt;read more about it here&lt;/a&gt;. To fix this, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Product &amp;lt; ApplicationRecord&#xA;  searchkick settings: {number_of_shards: 1}&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For convenience, this is set by default in the test environment.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;h3&gt;5.0&lt;/h3&gt; &#xA;&lt;p&gt;Searchkick 5 supports both the &lt;code&gt;elasticsearch&lt;/code&gt; and &lt;code&gt;opensearch-ruby&lt;/code&gt; gems. Add the one you want to use to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;elasticsearch&#34;&#xA;# or&#xA;gem &#34;opensearch-ruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using the deprecated &lt;code&gt;faraday_middleware-aws-signers-v4&lt;/code&gt; gem, switch to &lt;code&gt;faraday_middleware-aws-sigv4&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, searches now use lazy loading:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# search not executed&#xA;Product.search(&#34;milk&#34;)&#xA;&#xA;# search executed&#xA;Product.search(&#34;milk&#34;).to_a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can reindex relations in the background:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;store.products.reindex(mode: :async)&#xA;# or&#xA;store.products.reindex(mode: :queue)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And there’s a &lt;a href=&#34;https://raw.githubusercontent.com/ankane/searchkick/master/#default-scopes&#34;&gt;new option&lt;/a&gt; for models with default scopes.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/ankane/searchkick/raw/master/CHANGELOG.md#500-2022-02-21&#34;&gt;changelog&lt;/a&gt; for the full list of changes.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/ankane/searchkick/raw/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Karel Minarik for &lt;a href=&#34;https://github.com/elasticsearch/elasticsearch-ruby&#34;&gt;Elasticsearch Ruby&lt;/a&gt; and &lt;a href=&#34;https://github.com/karmi/retire&#34;&gt;Tire&lt;/a&gt;, Jaroslav Kalistsuk for &lt;a href=&#34;https://gist.github.com/jarosan/3124884&#34;&gt;zero downtime reindexing&lt;/a&gt;, and Alex Leschenko for &lt;a href=&#34;https://github.com/leschenko/elasticsearch_autocomplete&#34;&gt;Elasticsearch autocomplete&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Everyone is encouraged to help improve this project. Here are a few ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankane/searchkick/issues&#34;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs and &lt;a href=&#34;https://github.com/ankane/searchkick/pulls&#34;&gt;submit pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write, clarify, or fix documentation&lt;/li&gt; &#xA; &lt;li&gt;Suggest or add new features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get started with development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ankane/searchkick.git&#xA;cd searchkick&#xA;bundle install&#xA;bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feel free to open an issue to get feedback on your idea before spending too much time on it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rails/sprockets</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/rails/sprockets</id>
    <link href="https://github.com/rails/sprockets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rack-based asset packaging system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sprockets: Rack-based asset packaging&lt;/h1&gt; &#xA;&lt;p&gt;Sprockets is a Ruby library for compiling and serving web assets. It features declarative dependency management for JavaScript and CSS assets, as well as a powerful preprocessor pipeline that allows you to write assets in languages like CoffeeScript, Sass and SCSS.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install Sprockets from RubyGems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gem install sprockets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or include it in your project&#39;s &lt;code&gt;Gemfile&lt;/code&gt; with Bundler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;sprockets&#39;, &#39;~&amp;gt; 4.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading to Sprockets 4.x&lt;/h2&gt; &#xA;&lt;p&gt;These are the major features in Sprockets 4.x&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source Maps&lt;/li&gt; &#xA; &lt;li&gt;Manifest.js&lt;/li&gt; &#xA; &lt;li&gt;ES6 support&lt;/li&gt; &#xA; &lt;li&gt;Deprecated processor interface in 3.x is removed in 4.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read more about them by referencing &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/UPGRADING.md&#34;&gt;Upgrading document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Guides&lt;/h2&gt; &#xA;&lt;p&gt;For most people interested in using Sprockets, you will want to see the README below.&lt;/p&gt; &#xA;&lt;p&gt;If you are a framework developer that is using Sprockets, see &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/guides/building_an_asset_processing_framework.md&#34;&gt;Building an Asset Processing Framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are a library developer who is extending the functionality of Sprockets, see &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/guides/extending_sprockets.md&#34;&gt;Extending Sprockets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to work on Sprockets or better understand how it works read &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/guides/how_sprockets_works.md&#34;&gt;How Sprockets Works&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Behavior Overview&lt;/h2&gt; &#xA;&lt;p&gt;You can interact with Sprockets primarily through directives and file extensions. This section covers how to use each of these things, and the defaults that ship with Sprockets.&lt;/p&gt; &#xA;&lt;p&gt;Since you are likely using Sprockets through another framework (such as the &lt;a href=&#34;http://guides.rubyonrails.org/asset_pipeline.html&#34;&gt;the Rails asset pipeline&lt;/a&gt;), there will be configuration options you can toggle that will change behavior such as what directories or files get compiled. For that documentation you should see your framework&#39;s documentation.&lt;/p&gt; &#xA;&lt;h4&gt;Accessing Assets&lt;/h4&gt; &#xA;&lt;p&gt;Assets in Sprockets are always referenced by their &lt;em&gt;logical path&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The logical path is the path of the asset source file relative to its containing directory in the load path. For example, if your load path contains the directory &lt;code&gt;app/assets/javascripts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Logical path&lt;/th&gt; &#xA;   &lt;th&gt;Source file on disk&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;application.js&lt;/td&gt; &#xA;   &lt;td&gt;app/assets/javascripts/application.js&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;models/project.js&lt;/td&gt; &#xA;   &lt;td&gt;app/assets/javascripts/models/project.js&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hello.js&lt;/td&gt; &#xA;   &lt;td&gt;app/assets/javascripts/hello.coffee&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: For assets that are compiled or transpiled, you want to specify the extension that you want, not the extension on disk. For example we specified &lt;code&gt;hello.js&lt;/code&gt; even if the file on disk is a coffeescript file, since the asset it will generate is javascript.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Directives&lt;/h3&gt; &#xA;&lt;p&gt;Directives are special comments in your asset file and the main way of interacting with processors. What kind of interactions? You can use these directives to tell Sprockets to load other files, or specify dependencies on other assets.&lt;/p&gt; &#xA;&lt;p&gt;For example, let&#39;s say you have custom JavaScript that you&#39;ve written. You put this javascript in a file called &lt;code&gt;beta.js&lt;/code&gt;. The javascript makes heavy use of jQuery, so you need to load that before your code executes. You could add a &lt;code&gt;require&lt;/code&gt; directive to the top of &lt;code&gt;beta.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require jquery&#xA;&#xA;$().ready({&#xA;  // my custom code here&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The directive processor understands comment blocks in three formats:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* Multi-line comment blocks (CSS, SCSS, JavaScript)&#xA; *= require foo&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Single-line comment blocks (SCSS, JavaScript)&#xA;//= require foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-coffee&#34;&gt;# Single-line comment blocks (CoffeeScript)&#xA;#= require foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Directives are only processed if they come before any application code. Once you have a line that does not include a comment or whitespace then Sprockets will stop looking for directives. If you use a directive outside of the &#34;header&#34; of the document it will not do anything, and won&#39;t raise any errors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here is a list of the available directives:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#require&#34;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; - Add the contents of a file to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#require_self&#34;&gt;&lt;code&gt;require_self&lt;/code&gt;&lt;/a&gt; - Change order of where current contents are concatenated to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#require_directory&#34;&gt;&lt;code&gt;require_directory&lt;/code&gt;&lt;/a&gt; - Add contents of each file in a folder to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#require_tree&#34;&gt;&lt;code&gt;require_tree&lt;/code&gt;&lt;/a&gt; - Add contents of all files in all directories in a path to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#link&#34;&gt;&lt;code&gt;link&lt;/code&gt;&lt;/a&gt; - Make target file compile and be publicly available without adding contents to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#link_directory&#34;&gt;&lt;code&gt;link_directory&lt;/code&gt;&lt;/a&gt; - Make target directory compile and be publicly available without adding contents to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#link_tree&#34;&gt;&lt;code&gt;link_tree&lt;/code&gt;&lt;/a&gt; - Make target tree compile and be publicly available without adding contents to current&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#depend_on&#34;&gt;&lt;code&gt;depend_on&lt;/code&gt;&lt;/a&gt; - Recompile current file if target has changed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#stub&#34;&gt;&lt;code&gt;stub&lt;/code&gt;&lt;/a&gt; - Ignore target file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can see what each of these does below.&lt;/p&gt; &#xA;&lt;h3&gt;Specifying Processors through File Extensions&lt;/h3&gt; &#xA;&lt;p&gt;Sprockets uses the filename extensions to determine what processors to run on your file and in what order. For example if you have a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;application.scss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then Sprockets will by default run the sass processor (which implements scss). The output file will be converted to css.&lt;/p&gt; &#xA;&lt;p&gt;You can specify multiple processors by specifying multiple file extensions. For example you can use Ruby&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#invoking-ruby-with-erb&#34;&gt;ERB template language&lt;/a&gt; to embed content in your doc before running the sass processor. To accomplish this you would need to name your file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;application.scss.erb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Processors are run from right to left (tail to head), so in the above example the processor associated with &lt;code&gt;erb&lt;/code&gt; will be run before the processor associated with &lt;code&gt;scss&lt;/code&gt; extension.&lt;/p&gt; &#xA;&lt;p&gt;For a description of the processors that Sprockets has by default see the &#34;default processors&#34; section below. Other libraries may register additional processors.&lt;/p&gt; &#xA;&lt;p&gt;When &#34;asking&#34; for a compiled file, you always ask for the extension you want. For example if you&#39;re using Rails, to get the contents of &lt;code&gt;application.scss.erb&lt;/code&gt; you would use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;asset_path(&#34;application.css&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sprockets understands that &lt;code&gt;application.scss.erb&lt;/code&gt; will compile down to a &lt;code&gt;application.css&lt;/code&gt;. Ask for what you need, not what you have.&lt;/p&gt; &#xA;&lt;p&gt;If this isn&#39;t working like you expect, make sure you didn&#39;t typo an extension, and make sure the file is on a &#34;load path&#34; (see framework docs for adding new load paths).&lt;/p&gt; &#xA;&lt;h2&gt;File Order Processing&lt;/h2&gt; &#xA;&lt;p&gt;By default files are processed in alphabetical order. This behavior can impact your asset compilation when one asset needs to be loaded before another.&lt;/p&gt; &#xA;&lt;p&gt;For example if you have an &lt;code&gt;application.js&lt;/code&gt; and it loads another directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require_directory my_javascript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The files in that directory will be loaded in alphabetical order. If the directory looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ls -1 my_javascript/&#xA;&#xA;alpha.js&#xA;beta.js&#xA;jquery.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;code&gt;alpha.js&lt;/code&gt; will be loaded before either of the other two. This can be a problem if &lt;code&gt;alpha.js&lt;/code&gt; uses jquery. For this reason it is not recommend to use &lt;code&gt;require_directory&lt;/code&gt; with files that are ordering dependent. You can either require individual files manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require jquery&#xA;//= require alpha&#xA;//= require beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can use index files to proxy your folders.&lt;/p&gt; &#xA;&lt;h3&gt;Index files are proxies for folders&lt;/h3&gt; &#xA;&lt;p&gt;In Sprockets index files such as &lt;code&gt;index.js&lt;/code&gt; or &lt;code&gt;index.css&lt;/code&gt; files inside of a folder will generate a file with the folder&#39;s name. So if you have a &lt;code&gt;foo/index.js&lt;/code&gt; file it will compile down to &lt;code&gt;foo.js&lt;/code&gt;. This is similar to NPM&#39;s behavior of using &lt;a href=&#34;https://nodejs.org/api/modules.html#modules_folders_as_modules&#34;&gt;folders as modules&lt;/a&gt;. It is also somewhat similar to the way that a file in &lt;code&gt;public/my_folder/index.html&lt;/code&gt; can be reached by a request to &lt;code&gt;/my_folder&lt;/code&gt;. This means that you cannot directly use an index file. For example this would not work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= asset_path(&#34;foo/index.js&#34;) %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instead you would need to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= asset_path(&#34;foo.js&#34;) %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why would you want to use this behavior? It is common behavior where you might want to include an entire directory of files in a top level JavaScript. You can do this in Sprockets using &lt;code&gt;require_tree .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require_tree .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This has the problem that files are required alphabetically. If your directory has &lt;code&gt;jquery-ui.js&lt;/code&gt; and &lt;code&gt;jquery.min.js&lt;/code&gt; then Sprockets will require &lt;code&gt;jquery-ui.js&lt;/code&gt; before &lt;code&gt;jquery&lt;/code&gt; is required which won&#39;t work (because jquery-ui depends on jquery). Previously the only way to get the correct ordering would be to rename your files, something like &lt;code&gt;0-jquery-ui.js&lt;/code&gt;. Instead of doing that you can use an index file.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you have an &lt;code&gt;application.js&lt;/code&gt; and want all the files in the &lt;code&gt;foo/&lt;/code&gt; folder you could do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require foo.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create a file &lt;code&gt;foo/index.js&lt;/code&gt; that requires all the files in that folder in any order you want using relative references:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require ./foo.min.js&#xA;//= require ./foo-ui.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now in your &lt;code&gt;application.js&lt;/code&gt; will correctly load the &lt;code&gt;foo.min.js&lt;/code&gt; before &lt;code&gt;foo-ui.js&lt;/code&gt;. If you used &lt;code&gt;require_tree&lt;/code&gt; it would not work correctly.&lt;/p&gt; &#xA;&lt;h2&gt;Cache&lt;/h2&gt; &#xA;&lt;p&gt;Compiling assets is slow. It requires a lot of disk use to pull assets off of hard drives, a lot of RAM to manipulate those files in memory, and a lot of CPU for compilation operations. Because of this Sprockets has a cache to speed up asset compilation times. That&#39;s the good news. The bad news, is that sprockets has a cache and if you&#39;ve found a bug it&#39;s likely going to involve the cache.&lt;/p&gt; &#xA;&lt;p&gt;By default Sprockets uses the file system to cache assets. It makes sense that Sprockets does not want to generate assets that already exist on disk in &lt;code&gt;public/assets&lt;/code&gt;, what might not be as intuitive is that Sprockets needs to cache &#34;partial&#34; assets.&lt;/p&gt; &#xA;&lt;p&gt;For example if you have an &lt;code&gt;application.js&lt;/code&gt; and it is made up of &lt;code&gt;a.js&lt;/code&gt;, &lt;code&gt;b.js&lt;/code&gt;, all the way to &lt;code&gt;z.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require a.js&#xA;//= require b.js&#xA;# ...&#xA;//= require z.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first time this file is compiled the &lt;code&gt;application.js&lt;/code&gt; output will be written to disk, but also intermediary compiled files for &lt;code&gt;a.js&lt;/code&gt; etc. will be written to the cache directory (usually &lt;code&gt;tmp/cache/assets&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;So, if &lt;code&gt;b.js&lt;/code&gt; changes it will get recompiled. However instead of having to recompile the other files from &lt;code&gt;a.js&lt;/code&gt; to &lt;code&gt;z.js&lt;/code&gt; since they did not change, we can use the prior intermediary files stored in the cached values . If these files were expensive to generate, then this &#34;partial&#34; asset cache strategy can save a lot of time.&lt;/p&gt; &#xA;&lt;p&gt;Directives such as &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, and &lt;code&gt;depend_on&lt;/code&gt; tell Sprockets what assets need to be re-compiled when a file changes. Files are considered &#34;fresh&#34; based on their mtime on disk and a combination of cache keys.&lt;/p&gt; &#xA;&lt;p&gt;On Rails you can force a &#34;clean&#34; install by clearing the &lt;code&gt;public/assets&lt;/code&gt; and &lt;code&gt;tmp/cache/assets&lt;/code&gt; directories.&lt;/p&gt; &#xA;&lt;h2&gt;Default Directives&lt;/h2&gt; &#xA;&lt;p&gt;Directives take a path or a path to a file. Paths for directive can be relative to the current file, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require ../foo.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would load the file up one directory and named &lt;code&gt;foo.js&lt;/code&gt;. However this isn&#39;t required if &lt;code&gt;foo.js&lt;/code&gt; is on one of Sprocket&#39;s load paths. You can simply use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require foo.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without any prepended dots and sprockets will search for the asset. If the asset is on a sub-path of the load path, you can specify it without using a relative path as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require sub/path/foo.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use an absolute path, but this is discouraged unless you know the directory structure of every machine you plan on running code on.&lt;/p&gt; &#xA;&lt;p&gt;Below is a section for each of the built in directive types supported by Sprockets.&lt;/p&gt; &#xA;&lt;h3&gt;require&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;require&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; inserts the contents of the asset source file specified by &lt;em&gt;path&lt;/em&gt;. If the file is required multiple times, it will appear in the bundle only once.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve got an &lt;code&gt;a.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var a = &#34;A&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and a &lt;code&gt;b.js&lt;/code&gt;;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var b = &#34;B&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you could require both of these in an &lt;code&gt;application.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require a.js&#xA;//= require b.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which would generate one concatenated file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var a = &#34;A&#34;;&#xA;var b = &#34;B&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;require_self&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;require_self&lt;/code&gt; tells Sprockets to insert the body of the current source file before any subsequent &lt;code&gt;require&lt;/code&gt; directives.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve got an &lt;code&gt;a.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var a = &#34;A&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And an &lt;code&gt;application.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require_self&#xA;//= require &#39;a.js&#39;&#xA;&#xA;var app_name = &#34;Sprockets&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then this will take the contents of &lt;code&gt;application.js&lt;/code&gt; (that come after the last require) and put them at the beginning of the file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var app_name = &#34;Sprockets&#34;;&#xA;var a = &#34;A&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;require_directory&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;require_directory&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; requires all source files of the same format in the directory specified by &lt;em&gt;path&lt;/em&gt;. Files are required in alphabetical order.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If we&#39;ve got a directory called &lt;code&gt;alphabet&lt;/code&gt; with an &lt;code&gt;a.js&lt;/code&gt; and &lt;code&gt;b.js&lt;/code&gt; files like before, then our &lt;code&gt;application.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require_directory alphabet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Would produce:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var a = &#34;A&#34;;&#xA;var b = &#34;B&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also see &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#index-files-are-proxies-for-folders&#34;&gt;Index files are proxies for folders&lt;/a&gt; for another method of organizing folders that will give you more control.&lt;/p&gt; &#xA;&lt;h3&gt;require_tree&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;require_tree&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; works like &lt;code&gt;require_directory&lt;/code&gt;, but operates recursively to require all files in all subdirectories of the directory specified by &lt;em&gt;path&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;link&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;link&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; declares a dependency on the target &lt;em&gt;path&lt;/em&gt; and adds it to a list of subdependencies to be compiled when the asset is written out to disk.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve got a &lt;code&gt;manifest.js&lt;/code&gt; file and you want to specify that a &lt;code&gt;admin.js&lt;/code&gt; source file should be generated and made available to the public you can link it by including this in the &lt;code&gt;manifest.js&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;//= link admin.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The argument to &lt;code&gt;link&lt;/code&gt; is a &lt;em&gt;logical path&lt;/em&gt;, that is it will be resolved according to the configured asset load paths. See &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#accessing-assets&#34;&gt;Accessing Assets&lt;/a&gt; above. A path relative to the current file won&#39;t work, it must be a logical path.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;: the &#34;link&#34; directive should always have an explicit extension on the end.&lt;/p&gt; &#xA;&lt;h3&gt;link_directory&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;link_directory&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; links all the files inside the directory specified by the &lt;em&gt;path&lt;/em&gt;. By &#34;link&#34;, we mean they are specified as compilation targets to be written out to disk, and made available to be served to user-agents.&lt;/p&gt; &#xA;&lt;p&gt;Files in subdirectories will not be linked (Compare to &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#link_tree&#34;&gt;link_tree&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;path&lt;/em&gt; argument to &lt;code&gt;link_directory&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; a logical path (it does not use the asset load paths), but is a path relative to the file the &lt;code&gt;link_directory&lt;/code&gt; directive is found in, and can use &lt;code&gt;..&lt;/code&gt; to . For instance, you might want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= link_directory ../stylesheets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;link_directory&lt;/code&gt; can take an optional second argument with an extension or content-type, with the two arguments separated by a space:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= link_directory ../stylesheets text/css&#xA;//= link_directory ../more_stylesheets .css&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will limit the matching files to link to only files recognized as that type. An extension is just a shortcut for the type referenced, it does not need to match the source file exactly, but instead identifies the content-type the source file must be recognized as.&lt;/p&gt; &#xA;&lt;h3&gt;link_tree&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;link_tree&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; works like &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/#link_directory&#34;&gt;link_directory&lt;/a&gt;, but operates recursively to link all files in all subdirectories of the directory specified by &lt;em&gt;path&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= link_tree ./path/to/folder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like &lt;code&gt;link_directory&lt;/code&gt;, the argument is path relative to the current file, it is &lt;em&gt;not&lt;/em&gt; a &#39;logical path&#39; tresolved against load paths.&lt;/p&gt; &#xA;&lt;p&gt;As with &lt;code&gt;link_directory&lt;/code&gt;, you can also specify a second argument -- separated by a space -- so any extra files not matching the content-type specified will be ignored:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= link_tree ./path/to/folder text/javascript&#xA;//= link_tree ./path/to/other_folder .js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;depend_on&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;depend_on&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; declares a dependency on the given &lt;em&gt;path&lt;/em&gt; without including it in the bundle. This is useful when you need to expire an asset&#39;s cache in response to a change in another file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have a file such as &lt;code&gt;bar.data&lt;/code&gt; and you&#39;re using data from that file in another file, then you need to tell sprockets that it needs to re-compile the file if &lt;code&gt;bar.data&lt;/code&gt; changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= depend_on &#34;bar.data&#34;&#xA;&#xA;var bar = &#39;&amp;lt;%= File.read(&#34;bar.data&#34;) %&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;depend_on_asset&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;depend_on_asset&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; works like &lt;code&gt;depend_on&lt;/code&gt;, but operates recursively reading the file and following the directives found. This is automatically implied if you use &lt;code&gt;link&lt;/code&gt;, so consider if it just makes sense using &lt;code&gt;link&lt;/code&gt; instead of &lt;code&gt;depend_on_asset&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;stub&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;stub&lt;/code&gt; &lt;em&gt;path&lt;/em&gt; excludes that asset and its dependencies from the asset bundle. The &lt;em&gt;path&lt;/em&gt; must be a valid asset and may or may not already be part of the bundle. &lt;code&gt;stub&lt;/code&gt; should only be used at the top level bundle, not within any subdependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Invoking Ruby with ERB&lt;/h3&gt; &#xA;&lt;p&gt;Sprockets provides an ERB engine for preprocessing assets using embedded Ruby code. Append &lt;code&gt;.erb&lt;/code&gt; to a CSS or JavaScript asset&#39;s filename to enable the ERB engine.&lt;/p&gt; &#xA;&lt;p&gt;For example if you have an &lt;code&gt;app/application/javascripts/app_name.js.erb&lt;/code&gt; you could have this in the template&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var app_name = &#34;&amp;lt;%= ENV[&#39;APP_NAME&#39;] %&amp;gt;&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated files are cached. If you&#39;re using an &lt;code&gt;ENV&lt;/code&gt; var then when you change then ENV var the asset will be forced to recompile. This behavior is only true for environment variables, if you are pulling a value from somewhere else, such as a database, must manually invalidate the cache to see the change.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Rails, there are helpers you can use such as &lt;code&gt;asset_url&lt;/code&gt; that will cause a recompile if the value changes.&lt;/p&gt; &#xA;&lt;p&gt;For example if you have this in your &lt;code&gt;application.css&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.logo {&#xA;  background: url(&amp;lt;%= asset_url(&#34;logo.png&#34;) %&amp;gt;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you modify the &lt;code&gt;logo.png&lt;/code&gt; on disk, it will force &lt;code&gt;application.css&lt;/code&gt; to be recompiled so that the fingerprint will be correct in the generated asset.&lt;/p&gt; &#xA;&lt;p&gt;You can manually make sprockets depend on any other file that is generated by sprockets by using the &lt;code&gt;depend_on&lt;/code&gt; directive. Rails implements the above feature by auto calling &lt;code&gt;depend_on&lt;/code&gt; on the original asset when the &lt;code&gt;asset_url&lt;/code&gt; is used inside of an asset.&lt;/p&gt; &#xA;&lt;h3&gt;Styling with Sass and SCSS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt; is a language that compiles to CSS and adds features like nested rules, variables, mixins and selector inheritance.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;sass&lt;/code&gt; gem is available to your application, you can use Sass to write CSS assets in Sprockets.&lt;/p&gt; &#xA;&lt;p&gt;Sprockets supports both Sass syntaxes. For the original whitespace-sensitive syntax, use the extension &lt;code&gt;.sass&lt;/code&gt;. For the new SCSS syntax, use the extension &lt;code&gt;.scss&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In Rails if you have &lt;code&gt;app/application/stylesheets/foo.scss&lt;/code&gt; it can be referenced with &lt;code&gt;&amp;lt;%= asset_path(&#34;foo.css&#34;) %&amp;gt;&lt;/code&gt;. When referencing an asset in Rails, always specify the extension you want. Sprockets will convert &lt;code&gt;foo.scss&lt;/code&gt; to &lt;code&gt;foo.css&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Scripting with CoffeeScript&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jashkenas.github.io/coffeescript/&#34;&gt;CoffeeScript&lt;/a&gt; is a language that compiles to the &#34;good parts&#34; of JavaScript, featuring a cleaner syntax with array comprehensions, classes, and function binding.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;coffee-script&lt;/code&gt; gem is available to your application, you can use CoffeeScript to write JavaScript assets in Sprockets. Note that the CoffeeScript compiler is written in JavaScript, and you will need an &lt;a href=&#34;https://github.com/rails/execjs&#34;&gt;ExecJS&lt;/a&gt;-supported runtime on your system to invoke it.&lt;/p&gt; &#xA;&lt;p&gt;To write JavaScript assets with CoffeeScript, use the extension &lt;code&gt;.coffee&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In Rails if you have &lt;code&gt;app/application/javascripts/foo.coffee&lt;/code&gt; it can be referenced with &lt;code&gt;&amp;lt;%= asset_path(&#34;foo.js&#34;) %&amp;gt;&lt;/code&gt;. When referencing an asset in Rails, always specify the extension you want. Sprockets will convert &lt;code&gt;foo.coffee&lt;/code&gt; to &lt;code&gt;foo.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ES6 Support&lt;/h2&gt; &#xA;&lt;p&gt;Sprockets 4 ships with a Babel processor. This allows you to transpile ECMAScript6 to JavaScript just like you would transpile CoffeeScript to JavaScript. To use this, modify your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;babel-transpiler&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any asset with the extension &lt;code&gt;es6&lt;/code&gt; will be treated as an ES6 file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-es6&#34;&gt;// app/assets/javascript/application.es6&#xA;&#xA;var square = (n) =&amp;gt; n * n&#xA;&#xA;console.log(square);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start a Rails server in development mode and visit &lt;code&gt;localhost:3000/assets/application.js&lt;/code&gt;, and this asset will be transpiled to JavaScript:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var square = function square(n) {&#xA;  return n * n;&#xA;};&#xA;&#xA;console.log(square);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JavaScript Templating with EJS and Eco&lt;/h3&gt; &#xA;&lt;p&gt;Sprockets supports &lt;em&gt;JavaScript templates&lt;/em&gt; for client-side rendering of strings or markup. JavaScript templates have the special format extension &lt;code&gt;.jst&lt;/code&gt; and are compiled to JavaScript functions.&lt;/p&gt; &#xA;&lt;p&gt;When loaded, a JavaScript template function can be accessed by its logical path as a property on the global &lt;code&gt;JST&lt;/code&gt; object. Invoke a template function to render the template as a string. The resulting string can then be inserted into the DOM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;!-- templates/hello.jst.ejs --&amp;gt;&#xA;&amp;lt;div&amp;gt;Hello, &amp;lt;span&amp;gt;&amp;lt;%= name %&amp;gt;&amp;lt;/span&amp;gt;!&amp;lt;/div&amp;gt;&#xA;&#xA;// application.js&#xA;//= require templates/hello&#xA;$(&#34;#hello&#34;).html(JST[&#34;templates/hello&#34;]({ name: &#34;Sam&#34; }));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sprockets supports two JavaScript template languages: &lt;a href=&#34;https://github.com/sstephenson/ruby-ejs&#34;&gt;EJS&lt;/a&gt;, for embedded JavaScript, and &lt;a href=&#34;https://github.com/sstephenson/ruby-eco&#34;&gt;Eco&lt;/a&gt;, for embedded CoffeeScript. Both languages use the familiar &lt;code&gt;&amp;lt;% … %&amp;gt;&lt;/code&gt; syntax for embedding logic in templates.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;ejs&lt;/code&gt; gem is available to your application, you can use EJS templates in Sprockets. EJS templates have the extension &lt;code&gt;.jst.ejs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;eco&lt;/code&gt; gem is available to your application, you can use &lt;a href=&#34;https://github.com/sstephenson/eco&#34;&gt;Eco templates&lt;/a&gt; in Sprockets. Eco templates have the extension &lt;code&gt;.jst.eco&lt;/code&gt;. Note that the &lt;code&gt;eco&lt;/code&gt; gem depends on the CoffeeScript compiler, so the same caveats apply as outlined above for the CoffeeScript engine.&lt;/p&gt; &#xA;&lt;h3&gt;Minifying Assets&lt;/h3&gt; &#xA;&lt;p&gt;Several JavaScript and CSS minifiers are available through shorthand.&lt;/p&gt; &#xA;&lt;p&gt;In Rails you will specify them with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.assets.js_compressor  = :terser&#xA;config.assets.css_compressor = :scss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re not using Rails, configure this directly on the &#34;environment&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;environment.js_compressor  = :terser&#xA;environment.css_compressor = :scss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using Sprockets directly with a Rack app, don&#39;t forget to add the &lt;code&gt;terser&lt;/code&gt; and &lt;code&gt;sass&lt;/code&gt; gems to your Gemfile when using above options.&lt;/p&gt; &#xA;&lt;h3&gt;Gzip&lt;/h3&gt; &#xA;&lt;p&gt;By default when Sprockets generates a compiled asset file it will also produce a gzipped copy of that file. Sprockets only gzips non-binary files such as CSS, javascript, and SVG files.&lt;/p&gt; &#xA;&lt;p&gt;For example if Sprockets is generating&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;application-12345.css&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then it will also generate a compressed copy in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;application-12345.css.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This behavior can be disabled, refer to your framework specific documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Serving Assets&lt;/h3&gt; &#xA;&lt;p&gt;In production you should generate your assets to a directory on disk and serve them either via Nginx or a feature like Rail&#39;s &lt;code&gt;config.public_file_server.enabled = true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Rails you can generate assets by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-term&#34;&gt;$ RAILS_ENV=production rake assets:precompile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In development Rails will serve assets from &lt;code&gt;Sprockets::Server&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Sprockets&lt;/h2&gt; &#xA;&lt;p&gt;Sprockets is the work of hundreds of contributors. You&#39;re encouraged to submit pull requests, propose features and discuss issues.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Version History&lt;/h3&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/rails/sprockets/tree/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Sprockets is released under the &lt;a href=&#34;https://raw.githubusercontent.com/rails/sprockets/master/MIT-LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>paper-trail-gem/paper_trail</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/paper-trail-gem/paper_trail</id>
    <link href="https://github.com/paper-trail-gem/paper_trail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Track changes to your rails models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PaperTrail&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/paper-trail-gem/paper_trail&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/paper-trail-gem/paper_trail.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/paper_trail&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/paper_trail.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dependabot.com/compatibility-score.html?dependency-name=paper_trail&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver&#34;&gt;&lt;img src=&#34;https://api.dependabot.com/badges/compatibility_score?dependency-name=paper_trail&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver&#34; alt=&#34;SemVer&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Track changes to your models, for auditing or versioning. See how a model looked at any stage in its lifecycle, revert it to any version, or restore it after it has been destroyed.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;This is the &lt;em&gt;user guide&lt;/em&gt;. See also, the &lt;a href=&#34;https://www.rubydoc.info/gems/paper_trail&#34;&gt;API reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Choose version: &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/master/README.md&#34;&gt;Unreleased&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v12.3.0/README.md&#34;&gt;12.3&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v11.1.0/README.md&#34;&gt;11.1&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v10.3.1/README.md&#34;&gt;10.3&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v9.2.0/README.md&#34;&gt;9.2&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v8.1.2/README.md&#34;&gt;8.1&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v7.1.3/README.md&#34;&gt;7.1&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v6.0.2/README.md&#34;&gt;6.0&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v5.2.3/README.md&#34;&gt;5.2&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v4.2.0/README.md&#34;&gt;4.2&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v3.0.9/README.md&#34;&gt;3.0&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v2.7.2/README.md&#34;&gt;2.7&lt;/a&gt;, &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/v1.6.5/README.md&#34;&gt;1.6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#1-introduction&#34;&gt;1. Introduction&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#1a-compatibility&#34;&gt;1.a. Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#1b-installation&#34;&gt;1.b. Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#1c-basic-usage&#34;&gt;1.c. Basic Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#1d-api-summary&#34;&gt;1.d. API Summary&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#1e-configuration&#34;&gt;1.e. Configuration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2-limiting-what-is-versioned-and-when&#34;&gt;2. Limiting What is Versioned, and When&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2a-choosing-lifecycle-events-to-monitor&#34;&gt;2.a. Choosing Lifecycle Events To Monitor&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2b-choosing-when-to-save-new-versions&#34;&gt;2.b. Choosing When To Save New Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2c-choosing-attributes-to-monitor&#34;&gt;2.c. Choosing Attributes To Monitor&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2d-turning-papertrail-off&#34;&gt;2.d. Turning PaperTrail Off&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2e-limiting-the-number-of-versions-created&#34;&gt;2.e. Limiting the Number of Versions Created&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3-working-with-versions&#34;&gt;3. Working With Versions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3a-reverting-and-undeleting-a-model&#34;&gt;3.a. Reverting And Undeleting A Model&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3b-navigating-versions&#34;&gt;3.b. Navigating Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3c-diffing-versions&#34;&gt;3.c. Diffing Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3d-deleting-old-versions&#34;&gt;3.d. Deleting Old Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3e-queries&#34;&gt;3.e. Queries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3f-defunct-item_ids&#34;&gt;3.f. Defunct &lt;code&gt;item_id&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#4-saving-more-information-about-versions&#34;&gt;4. Saving More Information About Versions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#4a-finding-out-who-was-responsible-for-a-change&#34;&gt;4.a. Finding Out Who Was Responsible For A Change&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#4b-associations&#34;&gt;4.b. Associations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#4c-storing-metadata&#34;&gt;4.c. Storing Metadata&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#5-activerecord&#34;&gt;5. ActiveRecord&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#5a-single-table-inheritance-sti&#34;&gt;5.a. Single Table Inheritance (STI)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#5b-configuring-the-versions-association&#34;&gt;5.b. Configuring the &lt;code&gt;versions&lt;/code&gt; Association&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#5c-generators&#34;&gt;5.c. Generators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#5d-protected-attributes&#34;&gt;5.d. Protected Attributes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#6-extensibility&#34;&gt;6. Extensibility&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#6a-custom-version-classes&#34;&gt;6.a. Custom Version Classes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#6b-custom-serializer&#34;&gt;6.b. Custom Serializer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#6c-custom-object-changes&#34;&gt;6.c. Custom Object Changes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#6d-excluding-the-object-column&#34;&gt;6.d. Excluding the Object Column&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7-testing&#34;&gt;7. Testing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7a-minitest&#34;&gt;7.a. Minitest&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7b-rspec&#34;&gt;7.b. RSpec&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7c-cucumber&#34;&gt;7.c. Cucumber&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7d-spork&#34;&gt;7.d. Spork&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7e-zeus-or-spring&#34;&gt;7.e. Zeus or Spring&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#8-papertrail-plugins&#34;&gt;8. PaperTrail Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#9-integration-with-other-libraries&#34;&gt;9. Integration with Other Libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#10-related-libraries-and-ports&#34;&gt;10. Related Libraries and Ports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#articles&#34;&gt;Articles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#problems&#34;&gt;Problems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#inspirations&#34;&gt;Inspirations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#intellectual-property&#34;&gt;Intellectual Property&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;1. Introduction&lt;/h2&gt; &#xA;&lt;h3&gt;1.a. Compatibility&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;paper_trail&lt;/th&gt; &#xA;   &lt;th&gt;branch&lt;/th&gt; &#xA;   &lt;th&gt;ruby&lt;/th&gt; &#xA;   &lt;th&gt;activerecord&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unreleased&lt;/td&gt; &#xA;   &lt;td&gt;master&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.6.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 5.2, &amp;lt; 7.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;12-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.6.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 5.2, &amp;lt; 7.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;11-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.4.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 5.2, &amp;lt; 6.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;10-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.3.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 4.2, &amp;lt; 6.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;9-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.3.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 4.2, &amp;lt; 5.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;8-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.2.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 4.2, &amp;lt; 5.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;7-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.1.0&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 4.0, &amp;lt; 5.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;6-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.9.3&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 4.0, &amp;lt; 5.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;5-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.9.3&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 3.0, &amp;lt; 5.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;4-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.8.7&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 3.0, &amp;lt; 5.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;3.0-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.8.7&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 3.0, &amp;lt; 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;2.7-stable&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.8.7&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 3.0, &amp;lt; 4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;rails2&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 1.8.7&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.3, &amp;lt; 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Experts: to install incompatible versions of activerecord, see &lt;code&gt;paper_trail/compatibility.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.b. Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add PaperTrail to your &lt;code&gt;Gemfile&lt;/code&gt; and run &lt;a href=&#34;https://bundler.io/v2.3/man/bundle-install.1.html&#34;&gt;&lt;code&gt;bundle&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;gem &#39;paper_trail&#39;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a &lt;code&gt;versions&lt;/code&gt; table to your database:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bundle exec rails generate paper_trail:install [--with-changes]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If tables in your project use &lt;code&gt;uuid&lt;/code&gt; instead of &lt;code&gt;integers&lt;/code&gt; for &lt;code&gt;id&lt;/code&gt;, then use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bundle exec rails generate paper_trail:install [--uuid]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#5c-generators&#34;&gt;section 5.c. Generators&lt;/a&gt; for details.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bundle exec rake db:migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add &lt;code&gt;has_paper_trail&lt;/code&gt; to the models you want to track.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Widget &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If your controllers have a &lt;code&gt;current_user&lt;/code&gt; method, you can easily &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#4a-finding-out-who-was-responsible-for-a-change&#34;&gt;track who is responsible for changes&lt;/a&gt; by adding a controller callback.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController&#xA;  before_action :set_paper_trail_whodunnit&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;1.c. Basic Usage&lt;/h3&gt; &#xA;&lt;p&gt;Your models now have a &lt;code&gt;versions&lt;/code&gt; method which returns the &#34;paper trail&#34; of changes to your model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find 42&#xA;widget.versions&#xA;# [&amp;lt;PaperTrail::Version&amp;gt;, &amp;lt;PaperTrail::Version&amp;gt;, ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have a version, you can find out what happened:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;v = widget.versions.last&#xA;v.event # &#39;update&#39;, &#39;create&#39;, &#39;destroy&#39;. See also: &#34;The versions.event Column&#34;&#xA;v.created_at&#xA;v.whodunnit # ID of `current_user`. Requires `set_paper_trail_whodunnit` callback.&#xA;widget = v.reify # The widget as it was before the update (nil for a create event)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PaperTrail stores the pre-change version of the model, unlike some other auditing/versioning plugins, so you can retrieve the original version. This is useful when you start keeping a paper trail for models that already have records in the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find 153&#xA;widget.name                                 # &#39;Doobly&#39;&#xA;&#xA;# Add has_paper_trail to Widget model.&#xA;&#xA;widget.versions                             # []&#xA;widget.update name: &#39;Wotsit&#39;&#xA;widget.versions.last.reify.name             # &#39;Doobly&#39;&#xA;widget.versions.last.event                  # &#39;update&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This also means that PaperTrail does not waste space storing a version of the object as it currently stands. The &lt;code&gt;versions&lt;/code&gt; method gives you previous versions; to get the current one just call a finder on your &lt;code&gt;Widget&lt;/code&gt; model as usual.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a helpful table showing what PaperTrail stores:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;em&gt;Event&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;create&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;update&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;destroy&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Model Before&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;nil&lt;/td&gt; &#xA;   &lt;td&gt;widget&lt;/td&gt; &#xA;   &lt;td&gt;widget&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;Model After&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;widget&lt;/td&gt; &#xA;   &lt;td&gt;widget&lt;/td&gt; &#xA;   &lt;td&gt;nil&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;PaperTrail stores the values in the Model Before row. Most other auditing/versioning plugins store the After row.&lt;/p&gt; &#xA;&lt;h3&gt;1.d. API Summary&lt;/h3&gt; &#xA;&lt;p&gt;An introductory sample of common features.&lt;/p&gt; &#xA;&lt;p&gt;When you declare &lt;code&gt;has_paper_trail&lt;/code&gt; in your model, you get these methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Widget &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail&#xA;end&#xA;&#xA;# Returns this widget&#39;s versions.  You can customise the name of the&#xA;# association, but overriding this method is not supported.&#xA;widget.versions&#xA;&#xA;# Return the version this widget was reified from, or nil if it is live.&#xA;# You can customise the name of the method.&#xA;widget.version&#xA;&#xA;# Returns true if this widget is the current, live one; or false if it is from&#xA;# a previous version.&#xA;widget.paper_trail.live?&#xA;&#xA;# Returns who put the widget into its current state.&#xA;widget.paper_trail.originator&#xA;&#xA;# Returns the widget (not a version) as it looked at the given timestamp.&#xA;widget.paper_trail.version_at(timestamp)&#xA;&#xA;# Returns the widget (not a version) as it was most recently.&#xA;widget.paper_trail.previous_version&#xA;&#xA;# Returns the widget (not a version) as it became next.&#xA;widget.paper_trail.next_version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And a &lt;code&gt;PaperTrail::Version&lt;/code&gt; instance (which is just an ordinary ActiveRecord instance, with all the usual methods) has methods such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Returns the item restored from this version.&#xA;version.reify(options = {})&#xA;&#xA;# Return a new item from this version&#xA;version.reify(dup: true)&#xA;&#xA;# Returns who put the item into the state stored in this version.&#xA;version.paper_trail_originator&#xA;&#xA;# Returns who changed the item from the state it had in this version.&#xA;version.terminator&#xA;version.whodunnit&#xA;version.version_author&#xA;&#xA;# Returns the next version.&#xA;version.next&#xA;&#xA;# Returns the previous version.&#xA;version.previous&#xA;&#xA;# Returns the index of this version in all the versions.&#xA;version.index&#xA;&#xA;# Returns the event that caused this version (create|update|destroy).&#xA;version.event&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is just a sample of common features. Keep reading for more.&lt;/p&gt; &#xA;&lt;h3&gt;1.e. Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Many aspects of PaperTrail are configurable for individual models; typically this is achieved by passing options to the &lt;code&gt;has_paper_trail&lt;/code&gt; method within a given model.&lt;/p&gt; &#xA;&lt;p&gt;Some aspects of PaperTrail are configured globally for all models. These settings are assigned directly on the &lt;code&gt;PaperTrail.config&lt;/code&gt; object. A common place to put these settings is in a Rails initializer file such as &lt;code&gt;config/initializers/paper_trail.rb&lt;/code&gt; or in an environment-specific configuration file such as &lt;code&gt;config/environments/test.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;1.e.1 Global&lt;/h4&gt; &#xA;&lt;p&gt;Global configuration options affect all threads.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;association_reify_error_behaviour&lt;/li&gt; &#xA; &lt;li&gt;enabled&lt;/li&gt; &#xA; &lt;li&gt;has_paper_trail_defaults&lt;/li&gt; &#xA; &lt;li&gt;object_changes_adapter&lt;/li&gt; &#xA; &lt;li&gt;serializer&lt;/li&gt; &#xA; &lt;li&gt;version_limit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Syntax example: (options described in detail later)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/initializers/paper_trail.rb&#xA;PaperTrail.config.enabled = true&#xA;PaperTrail.config.has_paper_trail_defaults = {&#xA;  on: %i[create update destroy]&#xA;}&#xA;PaperTrail.config.version_limit = 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These options are intended to be set only once, during app initialization (eg. in &lt;code&gt;config/initializers&lt;/code&gt;). It is unsafe to change them while the app is running. In contrast, &lt;code&gt;PaperTrail.request&lt;/code&gt; has various options that only apply to a single HTTP request and thus are safe to use while the app is running.&lt;/p&gt; &#xA;&lt;h2&gt;2. Limiting What is Versioned, and When&lt;/h2&gt; &#xA;&lt;h3&gt;2.a. Choosing Lifecycle Events To Monitor&lt;/h3&gt; &#xA;&lt;p&gt;You can choose which events to track with the &lt;code&gt;on&lt;/code&gt; option. For example, if you only want to track &lt;code&gt;update&lt;/code&gt; events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail on: [:update]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;has_paper_trail&lt;/code&gt; installs &lt;a href=&#34;http://guides.rubyonrails.org/active_record_callbacks.html&#34;&gt;callbacks&lt;/a&gt; for the specified lifecycle events.&lt;/p&gt; &#xA;&lt;p&gt;There are four potential callbacks, and the default is to install all four, ie. &lt;code&gt;on: [:create, :destroy, :touch, :update]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;The &lt;code&gt;versions.event&lt;/code&gt; Column&lt;/h4&gt; &#xA;&lt;p&gt;Your &lt;code&gt;versions&lt;/code&gt; table has an &lt;code&gt;event&lt;/code&gt; column with three possible values:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;em&gt;event&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;callback&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;create&lt;/td&gt; &#xA;   &lt;td&gt;create&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;destroy&lt;/td&gt; &#xA;   &lt;td&gt;destroy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;update&lt;/td&gt; &#xA;   &lt;td&gt;touch, update&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You may also have the &lt;code&gt;PaperTrail::Version&lt;/code&gt; model save a custom string in its &lt;code&gt;event&lt;/code&gt; field instead of the typical &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;. PaperTrail adds an &lt;code&gt;attr_accessor&lt;/code&gt; to your model named &lt;code&gt;paper_trail_event&lt;/code&gt;, and will insert it, if present, in the &lt;code&gt;event&lt;/code&gt; column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;a = Article.create&#xA;a.versions.size                           # 1&#xA;a.versions.last.event                     # &#39;create&#39;&#xA;a.paper_trail_event = &#39;update title&#39;&#xA;a.update title: &#39;My Title&#39;&#xA;a.versions.size                           # 2&#xA;a.versions.last.event                     # &#39;update title&#39;&#xA;a.paper_trail_event = nil&#xA;a.update title: &#39;Alternate&#39;&#xA;a.versions.size                           # 3&#xA;a.versions.last.event                     # &#39;update&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Controlling the Order of AR Callbacks&lt;/h4&gt; &#xA;&lt;p&gt;If there are other callbacks in your model, their order relative to those installed by &lt;code&gt;has_paper_trail&lt;/code&gt; may matter. If you need to control their order, use the &lt;code&gt;paper_trail_on_*&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  # Include PaperTrail, but do not install any callbacks. Passing the&#xA;  # empty array to `:on` omits callbacks.&#xA;  has_paper_trail on: []&#xA;&#xA;  # Add callbacks in the order you need.&#xA;  paper_trail.on_destroy    # add destroy callback&#xA;  paper_trail.on_update     # etc.&#xA;  paper_trail.on_create&#xA;  paper_trail.on_touch&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;paper_trail.on_destroy&lt;/code&gt; method can be further configured to happen &lt;code&gt;:before&lt;/code&gt; or &lt;code&gt;:after&lt;/code&gt; the destroy event. Until PaperTrail 4, the default was &lt;code&gt;:after&lt;/code&gt;. Starting with PaperTrail 5, the default is &lt;code&gt;:before&lt;/code&gt;, to support ActiveRecord 5. (see &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/pull/683&#34;&gt;https://github.com/paper-trail-gem/paper_trail/pull/683&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;2.b. Choosing When To Save New Versions&lt;/h3&gt; &#xA;&lt;p&gt;You can choose the conditions when to add new versions with the &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt; options. For example, to save versions only for US non-draft translations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Translation &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail if:     Proc.new { |t| t.language_code == &#39;US&#39; },&#xA;                  unless: Proc.new { |t| t.type == &#39;DRAFT&#39;       }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Choosing Based on Changed Attributes&lt;/h4&gt; &#xA;&lt;p&gt;Starting with PaperTrail 4.0, versions are saved during an after-callback. If you decide whether to save a new version based on changed attributes, use attribute_name_was instead of attribute_name.&lt;/p&gt; &#xA;&lt;h4&gt;Saving a New Version Manually&lt;/h4&gt; &#xA;&lt;p&gt;You may want to save a new version regardless of options like &lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:if&lt;/code&gt;, or &lt;code&gt;:unless&lt;/code&gt;. Or, in rare situations, you may want to save a new version even if the record has not changed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;my_model.paper_trail.save_with_version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.c. Choosing Attributes To Monitor&lt;/h3&gt; &#xA;&lt;h4&gt;Ignore&lt;/h4&gt; &#xA;&lt;p&gt;You can &lt;code&gt;ignore&lt;/code&gt; changes to certain attributes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail ignore: [:title, :rating]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Changes to just the &lt;code&gt;title&lt;/code&gt; or &lt;code&gt;rating&lt;/code&gt; will not create a version record. Changes to other attributes will create a version record.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;a = Article.create&#xA;a.versions.length                         # 1&#xA;a.update title: &#39;My Title&#39;, rating: 3&#xA;a.versions.length                         # 1&#xA;a.update title: &#39;Greeting&#39;, content: &#39;Hello&#39;&#xA;a.versions.length                         # 2&#xA;a.paper_trail.previous_version.title      # &#39;My Title&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;:ignore&lt;/code&gt; option can also accept &lt;code&gt;Hash&lt;/code&gt; arguments that we are considering deprecating.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail ignore: [:title, { color: proc { |obj| obj.color == &#34;Yellow&#34; } }]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Only&lt;/h4&gt; &#xA;&lt;p&gt;Or, you can specify a list of the &lt;code&gt;only&lt;/code&gt; attributes you care about:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail only: [:title]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only changes to the &lt;code&gt;title&lt;/code&gt; will create a version record.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;a = Article.create&#xA;a.versions.length                         # 1&#xA;a.update title: &#39;My Title&#39;&#xA;a.versions.length                         # 2&#xA;a.update content: &#39;Hello&#39;&#xA;a.versions.length                         # 2&#xA;a.paper_trail.previous_version.content    # nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;:only&lt;/code&gt; option can also accept &lt;code&gt;Hash&lt;/code&gt; arguments that we are considering deprecating.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail only: [{ title: Proc.new { |obj| !obj.title.blank? } }]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the &lt;code&gt;title&lt;/code&gt; is not blank, then only changes to the &lt;code&gt;title&lt;/code&gt; will create a version record.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;a = Article.create&#xA;a.versions.length                         # 1&#xA;a.update content: &#39;Hello&#39;&#xA;a.versions.length                         # 2&#xA;a.update title: &#39;Title One&#39;&#xA;a.versions.length                         # 3&#xA;a.update content: &#39;Hai&#39;&#xA;a.versions.length                         # 3&#xA;a.paper_trail.previous_version.content    # &#34;Hello&#34;&#xA;a.update title: &#39;Title Two&#39;&#xA;a.versions.length                         # 4&#xA;a.paper_trail.previous_version.content    # &#34;Hai&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configuring both &lt;code&gt;:ignore&lt;/code&gt; and &lt;code&gt;:only&lt;/code&gt; is not recommended, but it should work as expected. Passing both &lt;code&gt;:ignore&lt;/code&gt; and &lt;code&gt;:only&lt;/code&gt; options will result in the article being saved if a changed attribute is included in &lt;code&gt;:only&lt;/code&gt; but not in &lt;code&gt;:ignore&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Skip&lt;/h4&gt; &#xA;&lt;p&gt;You can skip attributes completely with the &lt;code&gt;:skip&lt;/code&gt; option. As with &lt;code&gt;:ignore&lt;/code&gt;, updates to these attributes will not create a version record. In addition, if a version record is created for some other reason, these attributes will not be persisted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail skip: [:file_upload]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.d. Turning PaperTrail Off&lt;/h3&gt; &#xA;&lt;p&gt;PaperTrail is on by default, but sometimes you don&#39;t want to record versions.&lt;/p&gt; &#xA;&lt;h4&gt;Per Process&lt;/h4&gt; &#xA;&lt;p&gt;Turn PaperTrail off for &lt;strong&gt;all threads&lt;/strong&gt; in a &lt;code&gt;ruby&lt;/code&gt; process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.enabled = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not use this in production&lt;/strong&gt; unless you have a good understanding of threads vs. processes.&lt;/p&gt; &#xA;&lt;p&gt;A legitimate use case is to speed up tests. See &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#7-testing&#34;&gt;Testing&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h4&gt;Per HTTP Request&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.request(enabled: false) do&#xA;  # no versions created&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.request.enabled = false&#xA;# no versions created&#xA;PaperTrail.request.enabled = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Per Class&lt;/h4&gt; &#xA;&lt;p&gt;In the rare case that you need to disable versioning for one model while keeping versioning enabled for other models, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.request.disable_model(Banana)&#xA;# changes to Banana model do not create versions,&#xA;# but eg. changes to Kiwi model do.&#xA;PaperTrail.request.enable_model(Banana)&#xA;PaperTrail.request.enabled_for_model?(Banana) # =&amp;gt; true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This setting, as with all &lt;code&gt;PaperTrail.request&lt;/code&gt; settings, affects only the current request, not all threads.&lt;/p&gt; &#xA;&lt;p&gt;For this rare use case, there is no convenient way to pass a block.&lt;/p&gt; &#xA;&lt;h5&gt;In a Rails Controller Callback (Not Recommended)&lt;/h5&gt; &#xA;&lt;p&gt;PaperTrail installs a callback in your rails controllers. The installed callback will call &lt;code&gt;paper_trail_enabled_for_controller&lt;/code&gt;, which you can override.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  def paper_trail_enabled_for_controller&#xA;    # Don&#39;t omit `super` without a good reason.&#xA;    super &amp;amp;&amp;amp; request.user_agent != &#39;Disable User-Agent&#39;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because you are unable to control the order of callback execution, this technique is not recommended, but is preserved for backwards compatibility.&lt;/p&gt; &#xA;&lt;p&gt;It would be better to install your own callback and use &lt;code&gt;PaperTrail.request.enabled=&lt;/code&gt; as you see fit.&lt;/p&gt; &#xA;&lt;h4&gt;Per Method (Removed)&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;widget.paper_trail.without_versioning&lt;/code&gt; method was removed in v10, without an exact replacement. To disable versioning, use the &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#per-class&#34;&gt;Per Class&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#per-http-request&#34;&gt;Per HTTP Request&lt;/a&gt; methods.&lt;/p&gt; &#xA;&lt;h3&gt;2.e. Limiting the Number of Versions Created&lt;/h3&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;version_limit&lt;/code&gt; to cap the number of versions saved per record. This does not apply to &lt;code&gt;create&lt;/code&gt; events.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Limit: 4 versions per record (3 most recent, plus a `create` event)&#xA;PaperTrail.config.version_limit = 3&#xA;# Remove the limit&#xA;PaperTrail.config.version_limit = nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2.e.1 Per-model limit&lt;/h4&gt; &#xA;&lt;p&gt;Models can override the global &lt;code&gt;PaperTrail.config.version_limit&lt;/code&gt; setting.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# initializer&#xA;PaperTrail.config.version_limit = 10&#xA;&#xA;# At most 10 versions&#xA;has_paper_trail&#xA;&#xA;# At most 3 versions (2 updates, 1 create). Overrides global version_limit.&#xA;has_paper_trail limit: 2&#xA;&#xA;# Infinite versions&#xA;has_paper_trail limit: nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. Working With Versions&lt;/h2&gt; &#xA;&lt;h3&gt;3.a. Reverting And Undeleting A Model&lt;/h3&gt; &#xA;&lt;p&gt;PaperTrail makes reverting to a previous version easy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find 42&#xA;widget.update name: &#39;Blah blah&#39;&#xA;# Time passes....&#xA;widget = widget.paper_trail.previous_version  # the widget as it was before the update&#xA;widget.save                                   # reverted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can find the version at a given time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = widget.paper_trail.version_at(1.day.ago)  # the widget as it was one day ago&#xA;widget.save                                        # reverted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note &lt;code&gt;version_at&lt;/code&gt; gives you the object, not a version, so you don&#39;t need to call &lt;code&gt;reify&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Undeleting is just as simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find(42)&#xA;widget.destroy&#xA;# Time passes....&#xA;widget = Widget.new(id:42)    # creating a new object with the same id, re-establishes the link&#xA;versions = widget.versions    # versions ordered by versions.created_at, ascending&#xA;widget = versions.last.reify  # the widget as it was before destruction&#xA;widget.save                   # the widget lives!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could even use PaperTrail to implement an undo system; &lt;a href=&#34;http://railscasts.com/episodes/255-undo-with-paper-trail&#34;&gt;Ryan Bates has!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If your model uses &lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveRecord/Locking/Optimistic.html&#34;&gt;optimistic locking&lt;/a&gt; don&#39;t forget to &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/issues/163&#34;&gt;increment your &lt;code&gt;lock_version&lt;/code&gt;&lt;/a&gt; before saving or you&#39;ll get a &lt;code&gt;StaleObjectError&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3.b. Navigating Versions&lt;/h3&gt; &#xA;&lt;p&gt;You can call &lt;code&gt;previous_version&lt;/code&gt; and &lt;code&gt;next_version&lt;/code&gt; on an item to get it as it was/became. Note that these methods reify the item for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;live_widget = Widget.find 42&#xA;live_widget.versions.length                       # 4, for example&#xA;widget = live_widget.paper_trail.previous_version # =&amp;gt; widget == live_widget.versions.last.reify&#xA;widget = widget.paper_trail.previous_version      # =&amp;gt; widget == live_widget.versions[-2].reify&#xA;widget = widget.paper_trail.next_version          # =&amp;gt; widget == live_widget.versions.last.reify&#xA;widget.paper_trail.next_version                   # live_widget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If instead you have a particular &lt;code&gt;version&lt;/code&gt; of an item you can navigate to the previous and next versions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find 42&#xA;version = widget.versions[-2]    # assuming widget has several versions&#xA;previous_version = version.previous&#xA;next_version = version.next&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find out which of an item&#39;s versions yours is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;current_version_number = version.index    # 0-based&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you got an item by reifying one of its versions, you can navigate back to the version it came from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;latest_version = Widget.find(42).versions.last&#xA;widget = latest_version.reify&#xA;widget.version == latest_version    # true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find out whether a model instance is the current, live one -- or whether it came instead from a previous version -- with &lt;code&gt;live?&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find 42&#xA;widget.paper_trail.live?            # true&#xA;widget = widget.paper_trail.previous_version&#xA;widget.paper_trail.live?            # false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also: Section 3.e. Queries&lt;/p&gt; &#xA;&lt;h3&gt;3.c. Diffing Versions&lt;/h3&gt; &#xA;&lt;p&gt;There are two scenarios: diffing adjacent versions and diffing non-adjacent versions.&lt;/p&gt; &#xA;&lt;p&gt;The best way to diff adjacent versions is to get PaperTrail to do it for you. If you add an &lt;code&gt;object_changes&lt;/code&gt; column to your &lt;code&gt;versions&lt;/code&gt; table, PaperTrail will store the &lt;code&gt;changes&lt;/code&gt; diff in each version. Ignored attributes are omitted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.create name: &#39;Bob&#39;&#xA;widget.versions.last.changeset # reads object_changes column&#xA;# {&#xA;#   &#34;name&#34;=&amp;gt;[nil, &#34;Bob&#34;],&#xA;#   &#34;created_at&#34;=&amp;gt;[nil, 2015-08-10 04:10:40 UTC],&#xA;#   &#34;updated_at&#34;=&amp;gt;[nil, 2015-08-10 04:10:40 UTC],&#xA;#   &#34;id&#34;=&amp;gt;[nil, 1]&#xA;# }&#xA;widget.update name: &#39;Robert&#39;&#xA;widget.versions.last.changeset&#xA;# {&#xA;#   &#34;name&#34;=&amp;gt;[&#34;Bob&#34;, &#34;Robert&#34;],&#xA;#   &#34;updated_at&#34;=&amp;gt;[2015-08-10 04:13:19 UTC, 2015-08-10 04:13:19 UTC]&#xA;# }&#xA;widget.destroy&#xA;widget.versions.last.changeset&#xA;# {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prior to 10.0.0, the &lt;code&gt;object_changes&lt;/code&gt; were only stored for create and update events. As of 10.0.0, they are stored for all three events.&lt;/p&gt; &#xA;&lt;p&gt;PaperTrail doesn&#39;t use diffs internally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When I designed PaperTrail I wanted simplicity and robustness so I decided to make each version of an object self-contained. A version stores all of its object&#39;s data, not a diff from the previous version. This means you can delete any version without affecting any other. -Andy&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To diff non-adjacent versions you&#39;ll have to write your own code. These libraries may help:&lt;/p&gt; &#xA;&lt;p&gt;For diffing two strings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/myobie/htmldiff&#34;&gt;htmldiff&lt;/a&gt;: expects but doesn&#39;t require HTML input and produces HTML output. Works very well but slows down significantly on large (e.g. 5,000 word) inputs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/pvande/differ&#34;&gt;differ&lt;/a&gt;: expects plain text input and produces plain text/coloured/HTML/any output. Can do character-wise, word-wise, line-wise, or arbitrary-boundary-string-wise diffs. Works very well on non-HTML input.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/halostatue/diff-lcs&#34;&gt;diff-lcs&lt;/a&gt;: old-school, line-wise diffs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unfortunately, there is no currently widely available and supported library for diffing two ActiveRecord objects.&lt;/p&gt; &#xA;&lt;h3&gt;3.d. Deleting Old Versions&lt;/h3&gt; &#xA;&lt;p&gt;Over time your &lt;code&gt;versions&lt;/code&gt; table will grow to an unwieldy size. Because each version is self-contained (see the Diffing section above for more) you can simply delete any records you don&#39;t want any more. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;sql&amp;gt; delete from versions where created_at &amp;lt; &#39;2010-06-01&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail::Version.where(&#39;created_at &amp;lt; ?&#39;, 1.day.ago).delete_all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.e. Queries&lt;/h3&gt; &#xA;&lt;p&gt;You can query records in the &lt;code&gt;versions&lt;/code&gt; table based on their &lt;code&gt;object&lt;/code&gt; or &lt;code&gt;object_changes&lt;/code&gt; columns.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Find versions that meet these criteria.&#xA;PaperTrail::Version.where_object(content: &#39;Hello&#39;, title: &#39;Article&#39;)&#xA;&#xA;# Find versions before and after attribute `atr` had value `v`:&#xA;PaperTrail::Version.where_object_changes(atr: &#39;v&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;where_object_changes_from&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;where_object_changes_to&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;where_attribute_changes&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Only &lt;code&gt;where_object&lt;/code&gt; supports text columns. Your &lt;code&gt;object_changes&lt;/code&gt; column should be a &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;jsonb&lt;/code&gt; column if possible. If you must use a &lt;code&gt;text&lt;/code&gt; column, you&#39;ll have to write a &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#6c-custom-object-changes&#34;&gt;custom &lt;code&gt;object_changes_adapter&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3.f. Defunct &lt;code&gt;item_id&lt;/code&gt;s&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;item_id&lt;/code&gt;s in your &lt;code&gt;versions&lt;/code&gt; table can become defunct over time, potentially causing application errors when &lt;code&gt;id&lt;/code&gt;s in the foreign table are reused. &lt;code&gt;id&lt;/code&gt; reuse can be an explicit choice of the application, or implicitly caused by sequence cycling. The chance of &lt;code&gt;id&lt;/code&gt; reuse is reduced (but not eliminated) with &lt;code&gt;bigint&lt;/code&gt; &lt;code&gt;id&lt;/code&gt;s or &lt;code&gt;uuid&lt;/code&gt;s, &lt;code&gt;no cycle&lt;/code&gt; &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createsequence.html&#34;&gt;sequences&lt;/a&gt;, and/or when &lt;code&gt;versions&lt;/code&gt; are periodically deleted.&lt;/p&gt; &#xA;&lt;p&gt;Ideally, a Foreign Key Constraint (FKC) would set &lt;code&gt;item_id&lt;/code&gt; to null when an item is deleted. However, &lt;code&gt;items&lt;/code&gt; is a polymorphic relationship. A partial FKC (e.g. an FKC with a &lt;code&gt;where&lt;/code&gt; clause) is possible, but only in Postgres, and it is impractical to maintain FKCs for every versioned table unless the number of such tables is very small.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail#6a-custom-version-classes&#34;&gt;per-table &lt;code&gt;Version&lt;/code&gt; classes&lt;/a&gt; are used, then a partial FKC is no longer needed. So, a normal FKC can be written in any RDBMS, but it remains impractical to maintain so many FKCs.&lt;/p&gt; &#xA;&lt;p&gt;Some applications choose to handle this problem by &#34;soft-deleting&#34; versioned records, i.e. marking them as deleted instead of actually deleting them. This completely prevents &lt;code&gt;id&lt;/code&gt; reuse, but adds complexity to the application. In most applications, this is the only known practical solution to the &lt;code&gt;id&lt;/code&gt; reuse problem.&lt;/p&gt; &#xA;&lt;h2&gt;4. Saving More Information About Versions&lt;/h2&gt; &#xA;&lt;h3&gt;4.a. Finding Out Who Was Responsible For A Change&lt;/h3&gt; &#xA;&lt;p&gt;Set &lt;code&gt;PaperTrail.request.whodunnit=&lt;/code&gt;, and that value will be stored in the version&#39;s &lt;code&gt;whodunnit&lt;/code&gt; column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.request.whodunnit = &#39;Andy Stewart&#39;&#xA;widget.update name: &#39;Wibble&#39;&#xA;widget.versions.last.whodunnit # Andy Stewart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setting &lt;code&gt;whodunnit&lt;/code&gt; to a &lt;code&gt;Proc&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;whodunnit=&lt;/code&gt; also accepts a &lt;code&gt;Proc&lt;/code&gt;, in the rare case that lazy evaluation is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.request.whodunnit = proc do&#xA;  caller.find { |c| c.starts_with? Rails.root.to_s }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because lazy evaluation can be hard to troubleshoot, this is not recommended for common use.&lt;/p&gt; &#xA;&lt;h4&gt;Setting &lt;code&gt;whodunnit&lt;/code&gt; Temporarily&lt;/h4&gt; &#xA;&lt;p&gt;To set whodunnit temporarily, for the duration of a block, use &lt;code&gt;PaperTrail.request&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.request(whodunnit: &#39;Dorian Marié&#39;) do&#xA;  widget.update name: &#39;Wibble&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setting &lt;code&gt;whodunnit&lt;/code&gt; with a controller callback&lt;/h4&gt; &#xA;&lt;p&gt;If your controller has a &lt;code&gt;current_user&lt;/code&gt; method, PaperTrail provides a callback that will assign &lt;code&gt;current_user.id&lt;/code&gt; to &lt;code&gt;whodunnit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController&#xA;  before_action :set_paper_trail_whodunnit&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may want &lt;code&gt;set_paper_trail_whodunnit&lt;/code&gt; to call a different method to find out who is responsible. To do so, override the &lt;code&gt;user_for_paper_trail&lt;/code&gt; method in your controller like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController&#xA;  def user_for_paper_trail&#xA;    logged_in? ? current_member.id : &#39;Public user&#39;  # or whatever&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also: &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/wiki/Setting-whodunnit-in-the-rails-console&#34;&gt;Setting whodunnit in the rails console&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Terminator and Originator&lt;/h4&gt; &#xA;&lt;p&gt;A version&#39;s &lt;code&gt;whodunnit&lt;/code&gt; column tells us who changed the object, causing the &lt;code&gt;version&lt;/code&gt; to be stored. Because a version stores the object as it looked before the change (see the table above), &lt;code&gt;whodunnit&lt;/code&gt; tells us who &lt;em&gt;stopped&lt;/em&gt; the object looking like this -- not who made it look like this. Hence &lt;code&gt;whodunnit&lt;/code&gt; is aliased as &lt;code&gt;terminator&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To find out who made a version&#39;s object look that way, use &lt;code&gt;version.paper_trail_originator&lt;/code&gt;. And to find out who made a &#34;live&#34; object look like it does, call &lt;code&gt;paper_trail_originator&lt;/code&gt; on the object.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;widget = Widget.find 153                    # assume widget has 0 versions&#xA;PaperTrail.request.whodunnit = &#39;Alice&#39;&#xA;widget.update name: &#39;Yankee&#39;&#xA;widget.paper_trail.originator               # &#39;Alice&#39;&#xA;PaperTrail.request.whodunnit = &#39;Bob&#39;&#xA;widget.update name: &#39;Zulu&#39;&#xA;widget.paper_trail.originator               # &#39;Bob&#39;&#xA;first_version, last_version = widget.versions.first, widget.versions.last&#xA;first_version.whodunnit                     # &#39;Alice&#39;&#xA;first_version.paper_trail_originator        # nil&#xA;first_version.terminator                    # &#39;Alice&#39;&#xA;last_version.whodunnit                      # &#39;Bob&#39;&#xA;last_version.paper_trail_originator         # &#39;Alice&#39;&#xA;last_version.terminator                     # &#39;Bob&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Storing an ActiveRecord globalid in whodunnit&lt;/h4&gt; &#xA;&lt;p&gt;If you would like &lt;code&gt;whodunnit&lt;/code&gt; to return an &lt;code&gt;ActiveRecord&lt;/code&gt; object instead of a string, please try the &lt;a href=&#34;https://github.com/ankit1910/paper_trail-globalid&#34;&gt;paper_trail-globalid&lt;/a&gt; gem.&lt;/p&gt; &#xA;&lt;h3&gt;4.b. Associations&lt;/h3&gt; &#xA;&lt;p&gt;To track and reify associations, use &lt;a href=&#34;https://github.com/westonganger/paper_trail-association_tracking&#34;&gt;paper_trail-association_tracking&lt;/a&gt; (PT-AT).&lt;/p&gt; &#xA;&lt;p&gt;From 2014 to 2018, association tracking was an experimental feature, but many issues were discovered. To attract new volunteers to address these issues, PT-AT was extracted (see &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/issues/1070&#34;&gt;https://github.com/paper-trail-gem/paper_trail/issues/1070&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Even though it had always been an experimental feature, we didn&#39;t want the extraction of PT-AT to be a breaking change, so great care was taken to remove it slowly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In PT 9, PT-AT was kept as a runtime dependency.&lt;/li&gt; &#xA; &lt;li&gt;In PT 10, it became a development dependency (If you use it you must add it to your own &lt;code&gt;Gemfile&lt;/code&gt;) and we kept running all of its tests.&lt;/li&gt; &#xA; &lt;li&gt;In PT 11, it will no longer be a development dependency, and it is responsible for its own tests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;4.b.1 The optional &lt;code&gt;item_subtype&lt;/code&gt; column&lt;/h4&gt; &#xA;&lt;p&gt;As of PT 10, users may add an &lt;code&gt;item_subtype&lt;/code&gt; column to their &lt;code&gt;versions&lt;/code&gt; table. When storing versions for STI models, rails stores the base class in &lt;code&gt;item_type&lt;/code&gt; (that&#39;s just how polymorphic associations like &lt;code&gt;item&lt;/code&gt; work) In addition, PT will now store the subclass in &lt;code&gt;item_subtype&lt;/code&gt;. If this column is present PT-AT will use it to fix a rare issue with reification of STI subclasses.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;add_column :versions, :item_subtype, :string, null: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, if you use PT-AT and STI, the addition of this column is recommended.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/issues/594&#34;&gt;https://github.com/paper-trail-gem/paper_trail/issues/594&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/pull/1143&#34;&gt;https://github.com/paper-trail-gem/paper_trail/pull/1143&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/westonganger/paper_trail-association_tracking/pull/5&#34;&gt;https://github.com/westonganger/paper_trail-association_tracking/pull/5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.c. Storing Metadata&lt;/h3&gt; &#xA;&lt;p&gt;You can add your own custom columns to your &lt;code&gt;versions&lt;/code&gt; table. Values can be given using &lt;strong&gt;Model Metadata&lt;/strong&gt; or &lt;strong&gt;Controller Metadata&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Model Metadata&lt;/h4&gt; &#xA;&lt;p&gt;You can specify metadata in the model using &lt;code&gt;has_paper_trail(meta:)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Article &amp;lt; ActiveRecord::Base&#xA;  belongs_to :author&#xA;  has_paper_trail(&#xA;    meta: {&#xA;      author_id: :author_id, # model attribute&#xA;      word_count: :count_words, # arbitrary model method&#xA;      answer: 42, # scalar value&#xA;      editor: proc { |article| article.editor.full_name } # a Proc&#xA;    }&#xA;  )&#xA;  def count_words&#xA;    153&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Metadata from Controllers&lt;/h4&gt; &#xA;&lt;p&gt;You can also store any information you like from your controller. Override the &lt;code&gt;info_for_paper_trail&lt;/code&gt; method in your controller to return a hash whose keys correspond to columns in your &lt;code&gt;versions&lt;/code&gt; table.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController&#xA;  def info_for_paper_trail&#xA;    { ip: request.remote_ip, user_agent: request.user_agent }&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Advantages of Metadata&lt;/h4&gt; &#xA;&lt;p&gt;Why would you do this? In this example, &lt;code&gt;author_id&lt;/code&gt; is an attribute of &lt;code&gt;Article&lt;/code&gt; and PaperTrail will store it anyway in a serialized form in the &lt;code&gt;object&lt;/code&gt; column of the &lt;code&gt;version&lt;/code&gt; record. But let&#39;s say you wanted to pull out all versions for a particular author; without the metadata you would have to deserialize (reify) each &lt;code&gt;version&lt;/code&gt; object to see if belonged to the author in question. Clearly this is inefficient. Using the metadata you can find just those versions you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail::Version.where(author_id: author_id)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Metadata can Override PaperTrail Columns&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Experts only&lt;/strong&gt;. Metadata will override the normal values that PT would have inserted into its own columns.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;em&gt;PT Column&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;How bad of an idea?&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;Alternative&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;item_type&lt;/td&gt; &#xA;   &lt;td&gt;terrible idea&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;item_id&lt;/td&gt; &#xA;   &lt;td&gt;terrible idea&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;event&lt;/td&gt; &#xA;   &lt;td&gt;meh&lt;/td&gt; &#xA;   &lt;td&gt;paper_trail_event&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;whodunnit&lt;/td&gt; &#xA;   &lt;td&gt;meh&lt;/td&gt; &#xA;   &lt;td&gt;PaperTrail.request.whodunnit=&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;object&lt;/td&gt; &#xA;   &lt;td&gt;a little dangerous&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;object_changes&lt;/td&gt; &#xA;   &lt;td&gt;a little dangerous&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;5. ActiveRecord&lt;/h2&gt; &#xA;&lt;h3&gt;5.a. Single Table Inheritance (STI)&lt;/h3&gt; &#xA;&lt;p&gt;PaperTrail supports &lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveRecord/Base.html#class-ActiveRecord::Base-label-Single+table+inheritance&#34;&gt;Single Table Inheritance&lt;/a&gt;, and even supports an un-versioned base model, as of &lt;code&gt;23ffbdc7e1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Fruit &amp;lt; ActiveRecord::Base&#xA;  # un-versioned base model&#xA;end&#xA;class Banana &amp;lt; Fruit&#xA;  has_paper_trail&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, there is a known issue when reifying &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#associations&#34;&gt;associations&lt;/a&gt;, see &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/issues/594&#34;&gt;https://github.com/paper-trail-gem/paper_trail/issues/594&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5.b. Configuring the &lt;code&gt;versions&lt;/code&gt; Association&lt;/h3&gt; &#xA;&lt;h4&gt;5.b.1. &lt;code&gt;versions&lt;/code&gt; association&lt;/h4&gt; &#xA;&lt;p&gt;You may configure the name of the &lt;code&gt;versions&lt;/code&gt; association by passing a different name (default is &lt;code&gt;:versions&lt;/code&gt;) in the &lt;code&gt;versions:&lt;/code&gt; options hash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail versions: {&#xA;    name: :drafts&#xA;  }&#xA;end&#xA;&#xA;Post.new.versions # =&amp;gt; NoMethodError&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may pass a &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many-label-Scopes&#34;&gt;scope&lt;/a&gt; to the &lt;code&gt;versions&lt;/code&gt; association with the &lt;code&gt;scope:&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail versions: {&#xA;    scope: -&amp;gt; { order(&#34;id desc&#34;) }&#xA;  }&#xA;&#xA;  # Equivalent to:&#xA;  has_many :versions,&#xA;    -&amp;gt; { order(&#34;id desc&#34;) },&#xA;    class_name: &#39;PaperTrail::Version&#39;,&#xA;    as: :item&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any other &lt;a href=&#34;https://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many-label-Options&#34;&gt;options supported by &lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; can be passed along to the &lt;code&gt;has_many&lt;/code&gt; macro via the &lt;code&gt;versions:&lt;/code&gt; options hash.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail versions: {&#xA;    extend: VersionsExtensions,&#xA;    autosave: false&#xA;  }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Overriding (instead of configuring) the &lt;code&gt;versions&lt;/code&gt; method is not supported. Overriding associations is not recommended in general.&lt;/p&gt; &#xA;&lt;h4&gt;5.b.2. &lt;code&gt;item&lt;/code&gt; association&lt;/h4&gt; &#xA;&lt;p&gt;A &lt;code&gt;PaperTrail::Version&lt;/code&gt; object &lt;code&gt;belongs_to&lt;/code&gt; an &lt;code&gt;item&lt;/code&gt;, the relevant record.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;item&lt;/code&gt; association is first defined in &lt;code&gt;PaperTrail::VersionConcern&lt;/code&gt;, but associations can be redefined.&lt;/p&gt; &#xA;&lt;h5&gt;Example: adding a &lt;code&gt;counter_cache&lt;/code&gt; to &lt;code&gt;item&lt;/code&gt; association&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/models/paper_trail/version.rb&#xA;module PaperTrail&#xA;  class Version &amp;lt; ActiveRecord::Base&#xA;    belongs_to :item, polymorphic: true, counter_cache: true&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When redefining an association, its options are &lt;em&gt;replaced&lt;/em&gt; not &lt;em&gt;merged&lt;/em&gt;, so don&#39;t forget to specify the options from &lt;code&gt;PaperTrail::VersionConcern&lt;/code&gt;, like &lt;code&gt;polymorphic&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Be advised that redefining an association is an undocumented feature of Rails.&lt;/p&gt; &#xA;&lt;h3&gt;5.c. Generators&lt;/h3&gt; &#xA;&lt;p&gt;PaperTrail has one generator, &lt;code&gt;paper_trail:install&lt;/code&gt;. It writes, but does not run, a migration file. The migration creates the &lt;code&gt;versions&lt;/code&gt; table.&lt;/p&gt; &#xA;&lt;h4&gt;Reference&lt;/h4&gt; &#xA;&lt;p&gt;The most up-to-date documentation for this generator can be found by running &lt;code&gt;rails generate paper_trail:install --help&lt;/code&gt;, but a copy is included here for convenience.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  rails generate paper_trail:install [options]&#xA;&#xA;Options:&#xA;  [--with-changes], [--no-with-changes]            # Store changeset (diff) with each version&#xA;  [--uuid]                                         # To use paper_trail with projects using uuid for id&#xA;&#xA;Runtime options:&#xA;  -f, [--force]                    # Overwrite files that already exist&#xA;  -p, [--pretend], [--no-pretend]  # Run but do not make any changes&#xA;  -q, [--quiet], [--no-quiet]      # Suppress status output&#xA;  -s, [--skip], [--no-skip]        # Skip files that already exist&#xA;&#xA;Generates (but does not run) a migration to add a versions table.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5.d. Protected Attributes&lt;/h3&gt; &#xA;&lt;p&gt;As of version 6, PT no longer supports rails 3 or the &lt;a href=&#34;https://github.com/rails/protected_attributes&#34;&gt;protected_attributes&lt;/a&gt; gem. If you are still using them, you may use PT 5 or lower. We recommend upgrading to &lt;a href=&#34;https://github.com/rails/strong_parameters&#34;&gt;strong_parameters&lt;/a&gt; as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;If you must use &lt;a href=&#34;https://github.com/rails/protected_attributes&#34;&gt;protected_attributes&lt;/a&gt; for now, and want to use PT &amp;gt; 5, you can reopen &lt;code&gt;PaperTrail::Version&lt;/code&gt; and add the following &lt;code&gt;attr_accessible&lt;/code&gt; fields:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/models/paper_trail/version.rb&#xA;module PaperTrail&#xA;  class Version &amp;lt; ActiveRecord::Base&#xA;    include PaperTrail::VersionConcern&#xA;    attr_accessible :item_type, :item_id, :event, :whodunnit, :object, :object_changes, :created_at&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This &lt;em&gt;unsupported workaround&lt;/em&gt; has been tested with protected_attributes 1.0.9 / rails 4.2.8 / paper_trail 7.0.3.&lt;/p&gt; &#xA;&lt;h2&gt;6. Extensibility&lt;/h2&gt; &#xA;&lt;h3&gt;6.a. Custom Version Classes&lt;/h3&gt; &#xA;&lt;p&gt;You can specify custom version subclasses with the &lt;code&gt;:class_name&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostVersion &amp;lt; PaperTrail::Version&#xA;  # custom behaviour, e.g:&#xA;  self.table_name = :post_versions&#xA;end&#xA;&#xA;class Post &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail versions: {&#xA;    class_name: &#39;PostVersion&#39;&#xA;  }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unlike ActiveRecord&#39;s &lt;code&gt;class_name&lt;/code&gt;, you&#39;ll have to supply the complete module path to the class (e.g. &lt;code&gt;Foo::BarVersion&lt;/code&gt; if your class is inside the module &lt;code&gt;Foo&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Advantages&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For models which have a lot of versions, storing each model&#39;s versions in a separate table can improve the performance of certain database queries.&lt;/li&gt; &#xA; &lt;li&gt;Store different version &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#4c-storing-metadata&#34;&gt;metadata&lt;/a&gt; for different models.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Configuration&lt;/h4&gt; &#xA;&lt;p&gt;If you are using Postgres, you should also define the sequence that your custom version class will use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostVersion &amp;lt; PaperTrail::Version&#xA;  self.table_name = :post_versions&#xA;  self.sequence_name = :post_versions_id_seq&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you only use custom version classes and don&#39;t have a &lt;code&gt;versions&lt;/code&gt; table, you must let ActiveRecord know that your base version class (eg. &lt;code&gt;ApplicationVersion&lt;/code&gt; below) class is an &lt;code&gt;abstract_class&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# app/models/application_version.rb&#xA;class ApplicationVersion &amp;lt; ActiveRecord::Base&#xA;  include PaperTrail::VersionConcern&#xA;  self.abstract_class = true&#xA;end&#xA;&#xA;class PostVersion &amp;lt; ApplicationVersion&#xA;  self.table_name = :post_versions&#xA;  self.sequence_name = :post_versions_id_seq&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify custom names for the versions and version associations. This is useful if you already have &lt;code&gt;versions&lt;/code&gt; or/and &lt;code&gt;version&lt;/code&gt; methods on your model. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Post &amp;lt; ActiveRecord::Base&#xA;  has_paper_trail versions: { name: :paper_trail_versions },&#xA;                  version:          :paper_trail_version&#xA;&#xA;  # Existing versions method.  We don&#39;t want to clash.&#xA;  def versions&#xA;    # ...&#xA;  end&#xA;&#xA;  # Existing version method.  We don&#39;t want to clash.&#xA;  def version&#xA;    # ...&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6.b. Custom Serializer&lt;/h3&gt; &#xA;&lt;p&gt;By default, PaperTrail stores your changes as a &lt;code&gt;YAML&lt;/code&gt; dump. You can override this with the serializer config option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.serializer = MyCustomSerializer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A valid serializer is a &lt;code&gt;module&lt;/code&gt; (or &lt;code&gt;class&lt;/code&gt;) that defines a &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt; method. These serializers are included in the gem for your convenience:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/master/lib/paper_trail/serializers/yaml.rb&#34;&gt;PaperTrail::Serializers::YAML&lt;/a&gt; - Default&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/master/lib/paper_trail/serializers/json.rb&#34;&gt;PaperTrail::Serializers::JSON&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;PostgreSQL JSON column type support&lt;/h4&gt; &#xA;&lt;p&gt;If you use PostgreSQL, and would like to store your &lt;code&gt;object&lt;/code&gt; (and/or &lt;code&gt;object_changes&lt;/code&gt;) data in a column of &lt;a href=&#34;http://www.postgresql.org/docs/9.4/static/datatype-json.html&#34;&gt;type &lt;code&gt;json&lt;/code&gt; or type &lt;code&gt;jsonb&lt;/code&gt;&lt;/a&gt;, specify &lt;code&gt;json&lt;/code&gt; instead of &lt;code&gt;text&lt;/code&gt; for these columns in your migration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;create_table :versions do |t|&#xA;  # ...&#xA;  t.json :object          # Full object changes&#xA;  t.json :object_changes  # Optional column-level changes&#xA;  # ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use the PostgreSQL &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;jsonb&lt;/code&gt; column type, you do not need to specify a &lt;code&gt;PaperTrail.serializer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Convert existing YAML data to JSON&lt;/h5&gt; &#xA;&lt;p&gt;If you&#39;ve been using PaperTrail for a while with the default YAML serializer and you want to switch to JSON or JSONB, you&#39;re in a bit of a bind because there&#39;s no automatic way to migrate your data. The first (slow) option is to loop over every record and parse it in Ruby, then write to a temporary column:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;add_column :versions, :new_object, :jsonb # or :json&#xA;# add_column :versions, :new_object_changes, :jsonb # or :json&#xA;&#xA;# PaperTrail::Version.reset_column_information # needed for rails &amp;lt; 6&#xA;&#xA;PaperTrail::Version.where.not(object: nil).find_each do |version|&#xA;  version.update_column(:new_object, YAML.load(version.object))&#xA;&#xA;  # if version.object_changes&#xA;  #   version.update_column(&#xA;  #     :new_object_changes,&#xA;  #     YAML.load(version.object_changes)&#xA;  #   )&#xA;  # end&#xA;end&#xA;&#xA;remove_column :versions, :object&#xA;# remove_column :versions, :object_changes&#xA;rename_column :versions, :new_object, :object&#xA;# rename_column :versions, :new_object_changes, :object_changes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This technique can be very slow if you have a lot of data. Though slow, it is safe in databases where transactions are protected against DDL, such as Postgres. In databases without such protection, such as MySQL, a table lock may be necessary.&lt;/p&gt; &#xA;&lt;p&gt;If the above technique is too slow for your needs, and you&#39;re okay doing without PaperTrail data temporarily, you can create the new column without converting the data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;rename_column :versions, :object, :old_object&#xA;add_column :versions, :object, :jsonb # or :json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that migration, your historical data still exists as YAML, and new data will be stored as JSON. Next, convert records from YAML to JSON using a background script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail::Version.where.not(old_object: nil).find_each do |version|&#xA;  version.update_columns old_object: nil, object: YAML.load(version.old_object)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, in another migration, remove the old column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;remove_column :versions, :old_object&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use the optional &lt;code&gt;object_changes&lt;/code&gt; column, don&#39;t forget to convert it also, using the same technique.&lt;/p&gt; &#xA;&lt;h5&gt;Convert a Column from Text to JSON&lt;/h5&gt; &#xA;&lt;p&gt;If your &lt;code&gt;object&lt;/code&gt; column already contains JSON data, and you want to change its data type to &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;jsonb&lt;/code&gt;, you can use the following &lt;a href=&#34;http://www.postgresql.org/docs/9.4/interactive/ddl.html&#34;&gt;DDL&lt;/a&gt;. Of course, if your &lt;code&gt;object&lt;/code&gt; column contains YAML, you must first convert the data to JSON (see above) before you can change the column type.&lt;/p&gt; &#xA;&lt;p&gt;Using SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;alter table versions&#xA;alter column object type jsonb&#xA;using object::jsonb;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using ActiveRecord:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ConvertVersionsObjectToJson &amp;lt; ActiveRecord::Migration&#xA;  def up&#xA;    change_column :versions, :object, &#39;jsonb USING object::jsonb&#39;&#xA;  end&#xA;&#xA;  def down&#xA;    change_column :versions, :object, &#39;text USING object::text&#39;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6.c. Custom Object Changes&lt;/h3&gt; &#xA;&lt;p&gt;To fully control the contents of their &lt;code&gt;object_changes&lt;/code&gt; column, expert users can write an adapter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;PaperTrail.config.object_changes_adapter = MyObjectChangesAdapter.new&#xA;&#xA;class MyObjectChangesAdapter&#xA;  # @param changes Hash&#xA;  # @return Hash&#xA;  def diff(changes)&#xA;    # ...&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should only use this feature if you are comfortable reading PT&#39;s source to see exactly how the adapter is used. For example, see how &lt;code&gt;diff&lt;/code&gt; is used by reading &lt;code&gt;::PaperTrail::Events::Base#recordable_object_changes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An adapter can implement any or all of the following methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;diff: Returns the changeset in the desired format given the changeset in the original format&lt;/li&gt; &#xA; &lt;li&gt;load_changeset: Returns the changeset for a given version object&lt;/li&gt; &#xA; &lt;li&gt;where_object_changes: Returns the records resulting from the given hash of attributes.&lt;/li&gt; &#xA; &lt;li&gt;where_object_changes_from: Returns the records resulting from the given hash of attributes where the attributes changed &lt;em&gt;from&lt;/em&gt; the provided value(s).&lt;/li&gt; &#xA; &lt;li&gt;where_object_changes_to: Returns the records resulting from the given hash of attributes where the attributes changed &lt;em&gt;to&lt;/em&gt; the provided value(s).&lt;/li&gt; &#xA; &lt;li&gt;where_attribute_changes: Returns the records where the attribute changed to or from any value.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Depending on your needs, you may choose to implement only a subset of these methods.&lt;/p&gt; &#xA;&lt;h4&gt;Known Adapters&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hashwin/paper_trail-hashdiff&#34;&gt;paper_trail-hashdiff&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.d. Excluding the Object Column&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;object&lt;/code&gt; column ends up storing a lot of duplicate data if you have models that have many columns, and that are updated many times. You can save ~50% of storage space by removing the column from the versions table. It&#39;s important to note that this will disable &lt;code&gt;reify&lt;/code&gt; and &lt;code&gt;where_object&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;7. Testing&lt;/h2&gt; &#xA;&lt;p&gt;You may want to turn PaperTrail off to speed up your tests. See &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#2d-turning-papertrail-off&#34;&gt;Turning PaperTrail Off&lt;/a&gt; above.&lt;/p&gt; &#xA;&lt;h3&gt;7.a. Minitest&lt;/h3&gt; &#xA;&lt;p&gt;First, disable PT for the entire &lt;code&gt;ruby&lt;/code&gt; process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# in config/environments/test.rb&#xA;config.after_initialize do&#xA;  PaperTrail.enabled = false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, to enable PT for specific tests, you can add a &lt;code&gt;with_versioning&lt;/code&gt; test helper method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# in test/test_helper.rb&#xA;def with_versioning&#xA;  was_enabled = PaperTrail.enabled?&#xA;  was_enabled_for_request = PaperTrail.request.enabled?&#xA;  PaperTrail.enabled = true&#xA;  PaperTrail.request.enabled = true&#xA;  begin&#xA;    yield&#xA;  ensure&#xA;    PaperTrail.enabled = was_enabled&#xA;    PaperTrail.request.enabled = was_enabled_for_request&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, use the helper in your tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;test &#39;something that needs versioning&#39; do&#xA;  with_versioning do&#xA;    # your test&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7.b. RSpec&lt;/h3&gt; &#xA;&lt;p&gt;PaperTrail provides a helper, &lt;code&gt;paper_trail/frameworks/rspec.rb&lt;/code&gt;, that works with &lt;a href=&#34;https://github.com/rspec/rspec&#34;&gt;RSpec&lt;/a&gt; to make it easier to control when &lt;code&gt;PaperTrail&lt;/code&gt; is enabled during testing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# spec/rails_helper.rb&#xA;ENV[&#34;RAILS_ENV&#34;] ||= &#39;test&#39;&#xA;require &#39;spec_helper&#39;&#xA;require File.expand_path(&#34;../../config/environment&#34;, __FILE__)&#xA;require &#39;rspec/rails&#39;&#xA;# ...&#xA;require &#39;paper_trail/frameworks/rspec&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the helper loaded, PaperTrail will be turned off for all tests by default. To enable PaperTrail for a test you can either wrap the test in a &lt;code&gt;with_versioning&lt;/code&gt; block, or pass in &lt;code&gt;versioning: true&lt;/code&gt; option to a spec block.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe &#39;RSpec test group&#39; do&#xA;  it &#39;by default, PaperTrail will be turned off&#39; do&#xA;    expect(PaperTrail).to_not be_enabled&#xA;  end&#xA;&#xA;  with_versioning do&#xA;    it &#39;within a `with_versioning` block it will be turned on&#39; do&#xA;      expect(PaperTrail).to be_enabled&#xA;    end&#xA;  end&#xA;&#xA;  it &#39;can be turned on at the `it` or `describe` level&#39;, versioning: true do&#xA;    expect(PaperTrail).to be_enabled&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The helper will also reset &lt;code&gt;whodunnit&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; before each test to help prevent data spillover between tests. If you are using PaperTrail with Rails, the helper will automatically set the &lt;code&gt;PaperTrail.request.controller_info&lt;/code&gt; value to &lt;code&gt;{}&lt;/code&gt; as well, again, to help prevent data spillover between tests.&lt;/p&gt; &#xA;&lt;p&gt;There is also a &lt;code&gt;be_versioned&lt;/code&gt; matcher provided by PaperTrail&#39;s RSpec helper which can be leveraged like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Widget &amp;lt; ActiveRecord::Base&#xA;end&#xA;&#xA;describe Widget do&#xA;  it &#39;is not versioned by default&#39; do&#xA;    is_expected.to_not be_versioned&#xA;  end&#xA;&#xA;  describe &#39;add versioning to the `Widget` class&#39; do&#xA;    before(:all) do&#xA;      class Widget &amp;lt; ActiveRecord::Base&#xA;        has_paper_trail&#xA;      end&#xA;    end&#xA;&#xA;    it &#39;enables paper trail&#39; do&#xA;      is_expected.to be_versioned&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Matchers&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;have_a_version_with&lt;/code&gt; matcher makes assertions about versions using &lt;code&gt;where_object&lt;/code&gt;, based on the &lt;code&gt;object&lt;/code&gt; column.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe &#39;`have_a_version_with` matcher&#39; do&#xA;  it &#39;is possible to do assertions on version attributes&#39; do&#xA;    widget.update!(name: &#39;Leonard&#39;, an_integer: 1)&#xA;    widget.update!(name: &#39;Tom&#39;)&#xA;    widget.update!(name: &#39;Bob&#39;)&#xA;    expect(widget).to have_a_version_with name: &#39;Leonard&#39;, an_integer: 1&#xA;    expect(widget).to have_a_version_with an_integer: 1&#xA;    expect(widget).to have_a_version_with name: &#39;Tom&#39;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;have_a_version_with_changes&lt;/code&gt; matcher makes assertions about versions using &lt;code&gt;where_object_changes&lt;/code&gt;, based on the optional &lt;a href=&#34;https://raw.githubusercontent.com/paper-trail-gem/paper_trail/master/#3c-diffing-versions&#34;&gt;&lt;code&gt;object_changes&lt;/code&gt; column&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;describe &#39;`have_a_version_with_changes` matcher&#39; do&#xA;  it &#39;is possible to do assertions on version changes&#39; do&#xA;    widget.update!(name: &#39;Leonard&#39;, an_integer: 1)&#xA;    widget.update!(name: &#39;Tom&#39;)&#xA;    widget.update!(name: &#39;Bob&#39;)&#xA;    expect(widget).to have_a_version_with_changes name: &#39;Leonard&#39;, an_integer: 2&#xA;    expect(widget).to have_a_version_with_changes an_integer: 2&#xA;    expect(widget).to have_a_version_with_changes name: &#39;Bob&#39;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples of the RSpec matchers, see the &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/master/spec/models/widget_spec.rb&#34;&gt;Widget spec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;7.c. Cucumber&lt;/h3&gt; &#xA;&lt;p&gt;PaperTrail provides a helper for &lt;a href=&#34;http://cukes.info&#34;&gt;Cucumber&lt;/a&gt; that works similar to the RSpec helper. If you want to use the helper, you will need to require in your cucumber helper like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# features/support/env.rb&#xA;&#xA;ENV[&#34;RAILS_ENV&#34;] ||= &#39;cucumber&#39;&#xA;require File.expand_path(File.dirname(__FILE__) + &#39;/../../config/environment&#39;)&#xA;# ...&#xA;require &#39;paper_trail/frameworks/cucumber&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the helper is loaded, PaperTrail will be turned off for all scenarios by a &lt;code&gt;before&lt;/code&gt; hook added by the helper by default. When you want to enable PaperTrail for a scenario, you can wrap code in a &lt;code&gt;with_versioning&lt;/code&gt; block in a step, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Given /I want versioning on my model/ do&#xA;  with_versioning do&#xA;    # PaperTrail will be turned on for all code inside of this block&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The helper will also reset the &lt;code&gt;whodunnit&lt;/code&gt; value to &lt;code&gt;nil&lt;/code&gt; before each test to help prevent data spillover between tests. If you are using PaperTrail with Rails, the helper will automatically set the &lt;code&gt;PaperTrail.request.controller_info&lt;/code&gt; value to &lt;code&gt;{}&lt;/code&gt; as well, again, to help prevent data spillover between tests.&lt;/p&gt; &#xA;&lt;h3&gt;7.d. Spork&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;RSpec&lt;/code&gt; or &lt;code&gt;Cucumber&lt;/code&gt; helpers with &lt;a href=&#34;https://github.com/sporkrb/spork&#34;&gt;Spork&lt;/a&gt;, you will need to manually require the helper(s) in your &lt;code&gt;prefork&lt;/code&gt; block on your test helper, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# spec/rails_helper.rb&#xA;&#xA;require &#39;spork&#39;&#xA;&#xA;Spork.prefork do&#xA;  # This file is copied to spec/ when you run &#39;rails generate rspec:install&#39;&#xA;  ENV[&#34;RAILS_ENV&#34;] ||= &#39;test&#39;&#xA;  require &#39;spec_helper&#39;&#xA;  require File.expand_path(&#34;../../config/environment&#34;, __FILE__)&#xA;  require &#39;rspec/rails&#39;&#xA;  require &#39;paper_trail/frameworks/rspec&#39;&#xA;  require &#39;paper_trail/frameworks/cucumber&#39;&#xA;  # ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7.e. Zeus or Spring&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the &lt;code&gt;RSpec&lt;/code&gt; or &lt;code&gt;Cucumber&lt;/code&gt; helpers with &lt;a href=&#34;https://github.com/burke/zeus&#34;&gt;Zeus&lt;/a&gt; or &lt;a href=&#34;https://github.com/rails/spring&#34;&gt;Spring&lt;/a&gt;, you will need to manually require the helper(s) in your test helper, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# spec/rails_helper.rb&#xA;&#xA;ENV[&#34;RAILS_ENV&#34;] ||= &#39;test&#39;&#xA;require &#39;spec_helper&#39;&#xA;require File.expand_path(&#34;../../config/environment&#34;, __FILE__)&#xA;require &#39;rspec/rails&#39;&#xA;require &#39;paper_trail/frameworks/rspec&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;8. PaperTrail Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;paper_trail-active_record&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/westonganger/paper_trail-association_tracking&#34;&gt;paper_trail-association_tracking&lt;/a&gt; - track and reify associations&lt;/li&gt; &#xA; &lt;li&gt;paper_trail-audit&lt;/li&gt; &#xA; &lt;li&gt;paper_trail-background&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankit1910/paper_trail-globalid&#34;&gt;paper_trail-globalid&lt;/a&gt; - enhances whodunnit by adding an &lt;code&gt;actor&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;paper_trail-hashdiff&lt;/li&gt; &#xA; &lt;li&gt;paper_trail-rails&lt;/li&gt; &#xA; &lt;li&gt;paper_trail-related_changes&lt;/li&gt; &#xA; &lt;li&gt;paper_trail-sinatra&lt;/li&gt; &#xA; &lt;li&gt;paper_trail_actor&lt;/li&gt; &#xA; &lt;li&gt;paper_trail_changes&lt;/li&gt; &#xA; &lt;li&gt;paper_trail_manager&lt;/li&gt; &#xA; &lt;li&gt;paper_trail_scrapbook&lt;/li&gt; &#xA; &lt;li&gt;paper_trail_ui&lt;/li&gt; &#xA; &lt;li&gt;revertible_paper_trail&lt;/li&gt; &#xA; &lt;li&gt;rspec-paper_trail&lt;/li&gt; &#xA; &lt;li&gt;sequel_paper_trail&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;9. Integration with Other Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/activeadmin/activeadmin/wiki/Auditing-via-paper_trail-%28change-history%29&#34;&gt;ActiveAdmin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fusion94/paper_trail_manager&#34;&gt;paper_trail_manager&lt;/a&gt; - Browse, subscribe, view and revert changes to records with rails and paper_trail&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rikkipitt/rails_admin_history_rollback&#34;&gt;rails_admin_history_rollback&lt;/a&gt; - History rollback for rails_admin with PT&lt;/li&gt; &#xA; &lt;li&gt;Sinatra - &lt;a href=&#34;https://github.com/jaredbeck/paper_trail-sinatra&#34;&gt;paper_trail-sinatra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/globalize/globalize&#34;&gt;globalize&lt;/a&gt; - &lt;a href=&#34;https://github.com/globalize/globalize-versioning&#34;&gt;globalize-versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidusio-contrib/solidus_papertrail&#34;&gt;solidus_papertrail&lt;/a&gt; - PT integration for Solidus method to instances of PaperTrail::Version that returns the ActiveRecord object who was responsible for change&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;10. Related Libraries and Ports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/izelnakri/paper_trail&#34;&gt;izelnakri/paper_trail&lt;/a&gt; - An Ecto library, inspired by PT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nielsgl/sequelize-paper-trail&#34;&gt;sequelize-paper-trail&lt;/a&gt; - A JS library, inspired by PT. A sequelize plugin for tracking revision history of model instances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stevepolito.design/blog/paper-trail-gem-tutorial/&#34;&gt;PaperTrail Gem Tutorial&lt;/a&gt;, 20th April 2020.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://samurails.com/gems/papertrail/&#34;&gt;Jutsu #8 - Version your RoR models with PaperTrail&lt;/a&gt;, &lt;a href=&#34;http://samurails.com/about-me/&#34;&gt;Thibault&lt;/a&gt;, 29th September 2014&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sitepoint.com/versioning-papertrail&#34;&gt;Versioning with PaperTrail&lt;/a&gt;, &lt;a href=&#34;http://www.sitepoint.com/author/ibodrov&#34;&gt;Ilya Bodrov&lt;/a&gt;, 10th April 2014&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://web.archive.org/web/20141120233916/http://rubyrailsexpert.com/?p=36&#34;&gt;Using PaperTrail to track stack traces&lt;/a&gt;, T James Corcoran&#39;s blog, 1st October 2013.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://railscasts.com/episodes/255-undo-with-paper-trail&#34;&gt;RailsCast #255 - Undo with PaperTrail&lt;/a&gt;, 28th February 2011.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.linux-mag.com/id/7528&#34;&gt;Keep a Paper Trail with PaperTrail&lt;/a&gt;, Linux Magazine, 16th September 2009.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Problems&lt;/h2&gt; &#xA;&lt;p&gt;Please use GitHub&#39;s &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Created by Andy Stewart in 2010, maintained since 2012 by Ben Atkins, since 2015 by Jared Beck, with contributions by over 150 people.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/graphs/contributors&#34;&gt;https://github.com/paper-trail-gem/paper_trail/graphs/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/paper-trail-gem/paper_trail/raw/master/.github/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Inspirations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jerome/simply_versioned&#34;&gt;Simply Versioned&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/collectiveidea/audited&#34;&gt;Acts As Audited&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Intellectual Property&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2011 Andy Stewart (&lt;a href=&#34;mailto:boss@airbladesoftware.com&#34;&gt;boss@airbladesoftware.com&lt;/a&gt;). Released under the MIT licence.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sorbet/sorbet</title>
    <updated>2022-06-02T01:33:59Z</updated>
    <id>tag:github.com,2022-06-02:/sorbet/sorbet</id>
    <link href="https://github.com/sorbet/sorbet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast, powerful type checker designed for Ruby&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Sorbet logo&#34; width=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/docs/logo/sorbet-logo-purple-sparkles.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Sorbet&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains Sorbet, a fast, powerful type checker designed for Ruby. It aims to be easy to add to existing codebases with gradual types, and fast to respond with errors and suggestions.&lt;/p&gt; &#xA;&lt;p&gt;This README contains documentation specifically for contributing to Sorbet. You might also want to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://sorbet.org/docs/overview&#34;&gt;public Sorbet docs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Or even &lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#writing-docs&#34;&gt;edit the docs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Watch the &lt;a href=&#34;https://sorbet.org/en/community#talks&#34;&gt;talks we&#39;ve given&lt;/a&gt; about Sorbet&lt;/li&gt; &#xA; &lt;li&gt;Try the &lt;a href=&#34;https://sorbet.run&#34;&gt;Sorbet playground&lt;/a&gt; online&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are at Stripe, you might also want to see &lt;a href=&#34;http://go/types/internals&#34;&gt;http://go/types/internals&lt;/a&gt; for docs about Stripe-specific development workflows and historical Stripe context.&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#sorbet-user-facing-design-principles&#34;&gt;Sorbet user-facing design principles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#learning-how-sorbet-works&#34;&gt;Learning how Sorbet works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#building-sorbet&#34;&gt;Building Sorbet&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#common-compilation-errors&#34;&gt;Common Compilation Errors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#running-sorbet&#34;&gt;Running Sorbet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#running-the-tests&#34;&gt;Running the tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-sorbet-against-pay-server&#34;&gt;Testing Sorbet against pay-server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#writing-tests&#34;&gt;Writing tests&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#test_corpus-tests&#34;&gt;test_corpus tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#expectation-tests&#34;&gt;Expectation tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#cli-tests&#34;&gt;CLI tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#lsp-tests&#34;&gt;LSP tests&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-find-definition-and-find-all-references&#34;&gt;Testing &#34;Find Definition&#34; and &#34;Find All References&#34;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-go-to-type-definition&#34;&gt;Testing &#34;Go to Type Definition&#34;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-hover&#34;&gt;Testing hover&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-completion&#34;&gt;Testing completion&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-workspace-symbols-symbol-search&#34;&gt;Testing workspace symbols (symbol search)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#testing-incremental-type-checking&#34;&gt;Testing incremental type checking&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#lsp-recorded-tests&#34;&gt;LSP recorded tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#updating-tests&#34;&gt;Updating tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#writing-docs&#34;&gt;Writing docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#editor-and-environment&#34;&gt;Editor and environment&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#bazel&#34;&gt;Bazel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#multiple-git-worktrees&#34;&gt;Multiple git worktrees&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#shell&#34;&gt;Shell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#formatting-files&#34;&gt;Formatting files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/#editor-setup-for-c&#34;&gt;Editor setup for C++&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Sorbet user-facing design principles&lt;/h2&gt; &#xA;&lt;p&gt;Early in our project, we&#39;ve defined some guidelines for how working with sorbet should feel like.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explicit&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We&#39;re willing to write annotations, and in fact see them as beneficial; they make code more readable and predictable. We&#39;re here to help readers as much as writers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Feel useful, not burdensome&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;While it is explicit, we are putting effort into making it concise. This shows in multiple ways:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;error messages should be clear&lt;/li&gt; &#xA;   &lt;li&gt;verbosity should be compensated with more safety&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;As simple as possible, but powerful enough&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Overall, we are not strong believers in super-complex type systems. They have their place, and we need a fair amount of expressive power to model (enough) real Ruby code, but all else being equal we want to be simpler. We believe that such a system scales better, and—most importantly—is easier for our users to learn &amp;amp; understand.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compatible with Ruby&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In particular, we don&#39;t want a new syntax. Existing Ruby syntax means we can leverage most of our existing tooling (editors, etc). Also, the point of Sorbet is to gradually improve an existing Ruby codebase. No new syntax makes it easier to be compatible with existing tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scales&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;On all axes: execution speed, number of collaborators, lines of code, codebase age. We work in large Ruby codebases, and they will only get larger.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can be adopted gradually&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In order to make adoption possible at scale, we cannot require every team or project to adopt Sorbet all at once. Sorbet needs to support teams adopting it at different paces.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the dependencies&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;brew install bazel autoconf coreutils parallel&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone https://github.com/sorbet/sorbet.git&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd sorbet&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build Sorbet&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;./bazel build //main:sorbet --config=dbg&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Sorbet!&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bazel-bin/main/sorbet -e &#34;42 + &#39;hello&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Learning how Sorbet works&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve documented the &lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/docs/internals.md&#34;&gt;internals of Sorbet&lt;/a&gt; in a separate doc. Cross-reference between that doc and here to learn how Sorbet works and how to change it!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/docs/internals.md&#34;&gt;→ internals.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is also a talk online that describes Sorbet&#39;s high-level architecture and the reasons why it&#39;s fast:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sorbet.org/docs/talks/jvm-ls-2019&#34;&gt;→ Fast type checking for Ruby&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Sorbet&lt;/h2&gt; &#xA;&lt;p&gt;There are multiple ways to build &lt;code&gt;sorbet&lt;/code&gt;. This one is the most common:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bazel build //main:sorbet --config=dbg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build an executable in &lt;code&gt;bazel-bin/main/sorbet&lt;/code&gt; (see &#34;Running Sorbet&#34; below). There are many options you can pass when building &lt;code&gt;sorbet&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--config=dbg&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Most common build config for development.&lt;/li&gt; &#xA;   &lt;li&gt;Good stack traces, runs all ENFORCEs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--config=sanitize&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Link in extra sanitizers, in particular: UBSan and ASan.&lt;/li&gt; &#xA;   &lt;li&gt;Catches most memory and undefined-behavior errors.&lt;/li&gt; &#xA;   &lt;li&gt;Substantially larger and slower binary.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--config=debugsymbols&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(Included by &lt;code&gt;--config=dbg&lt;/code&gt;) debugging symbols, and nothing else.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--config=forcedebug&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use more memory, but report even more sanity checks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--config=static-libs&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Forcibly use static linking (Sorbet defaults to dynamic linking for faster build times).&lt;/li&gt; &#xA;   &lt;li&gt;Sorbet already uses this option in release builds (see below).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--config=release-mac&lt;/code&gt; and &lt;code&gt;--config=release-linux&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Exact release configuration that we ship to our users.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Independently of providing or omitting any of the above flags, you can turn on optimizations for any build:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-c opt&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enables &lt;code&gt;clang&lt;/code&gt; optimizations (i.e., &lt;code&gt;-O2&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These args are not mutually exclusive. For example, a common pairing when debugging is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--config=dbg --config=sanitize&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;code&gt;.bazelrc&lt;/code&gt; you can find out what all these options (and others) mean.&lt;/p&gt; &#xA;&lt;h3&gt;Common Compilation Errors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;(Mac) &lt;code&gt;Xcode version must be specified to use an Apple CROSSTOOL&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This error typically occurs after an Xcode upgrade.&lt;/p&gt; &#xA;&lt;p&gt;Developer tools must be installed, the Xcode license must be accepted, and your active Xcode command line tools directory must point to an installed version of Xcode.&lt;/p&gt; &#xA;&lt;p&gt;The following commands should do the trick:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install command line tools&#xA;xcode-select --install&#xA;# Ensure that the system finds command line tools in an active Xcode directory&#xA;sudo xcode-select -s /Applications/Xcode.app/Contents/Developer&#xA;# Accept the Xcode license.&#xA;sudo xcodebuild -license&#xA;# Clear bazel&#39;s cache, which may contain files generated from a previous&#xA;# version of Xcode command line tools.&#xA;bazel clean --expunge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;(Mac) &lt;code&gt;fatal error: &#39;math.h&#39; file not found&lt;/code&gt;&lt;/strong&gt; (or some other system header)&lt;/p&gt; &#xA;&lt;p&gt;This error can happen on Macs when the &lt;code&gt;/usr/include&lt;/code&gt; folder is missing. The solution is to install macOS headers via the following package:&lt;/p&gt; &#xA;&lt;p&gt;macOS Mojave:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;macOS Catalina:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo ln -s /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/* /usr/local/include/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Sorbet&lt;/h2&gt; &#xA;&lt;p&gt;Run Sorbet on an expression:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel-bin/main/sorbet -e &#34;1 + false&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run Sorbet on a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel-bin/main/sorbet foo.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running &lt;code&gt;bazel-bin/main/sorbet --help&lt;/code&gt; will show lots of options. These are the common ones for contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-p &amp;lt;IR&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Asks sorbet to print out any given intermediate representation.&lt;/li&gt; &#xA;   &lt;li&gt;See &lt;code&gt;--help&lt;/code&gt; for available values of &lt;code&gt;&amp;lt;IR&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--stop-after &amp;lt;phase&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Useful when there&#39;s a bug in a later phase, and you want to quit early to debug.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;-vv&lt;/code&gt;, &lt;code&gt;-vvv&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Show &lt;code&gt;logger&lt;/code&gt; output (increasing verbosity)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--max-threads=1&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Useful for determining if you&#39;re dealing with a concurrency bug or not.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--wait-for-dbg&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Will freeze Sorbet on startup and wait for a debugger to attach&lt;/li&gt; &#xA;   &lt;li&gt;This is useful when you don&#39;t have control over launching the process (LSP)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the tests&lt;/h2&gt; &#xA;&lt;p&gt;To run all the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test //... --config=dbg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(The &lt;code&gt;//...&lt;/code&gt; literally means &#34;all targets&#34;.)&lt;/p&gt; &#xA;&lt;p&gt;To run a subset of the tests curated for faster iteration and development speed, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test test --config=dbg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that in bazel terms, the second test is an alias for &lt;code&gt;//test:test&lt;/code&gt;, so we&#39;re being a bit cute here.&lt;/p&gt; &#xA;&lt;p&gt;By default, all test output goes into files. To also print it to the screen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test //... --config=dbg --test_output=errors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If any test failed, you will see two pieces of information printed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. //test:test_testdata/resolver/optional_constant&#xA;2.   /private/var/tmp/.../test/test_testdata/resolver/optional_constant/test.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;the test&#39;s target (in case you want to run just this test again with &lt;code&gt;bazel test &amp;lt;target&amp;gt;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;a (runnable) file containing the test&#39;s output&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To see the failing output, either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Re-run &lt;code&gt;bazel test&lt;/code&gt; with the &lt;code&gt;--test_output=errors&lt;/code&gt; flag&lt;/li&gt; &#xA; &lt;li&gt;Copy/paste the &lt;code&gt;*.log&lt;/code&gt; file and run it (the output will open in &lt;code&gt;less&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing Sorbet against pay-server&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is specific to contributing to Sorbet at Stripe.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you are at Stripe and want to test your branch against pay-server, see &lt;a href=&#34;http://go/types/local-dev&#34;&gt;http://go/types/local-dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Writing tests&lt;/h2&gt; &#xA;&lt;p&gt;We write tests by adding files to subfolders of the &lt;code&gt;test/&lt;/code&gt; directory. Individual subfolders are &#34;magic&#34;; each contains specific types of tests. We aspire to have our tests be fully reproducible.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;C++ note&lt;/strong&gt;: In C++, hash functions are only required to produce the same result for the same input within a single execution of a program.&lt;/p&gt; &#xA; &lt;p&gt;Thus, we expect all user-visible outputs to be explicitly sorted using a key stable from one run to the next.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There are many ways to test Sorbet, some &#34;better&#34; than others. We&#39;ve ordered them below in order from most preferable to least preferable. And we always prefer some tests to no tests!&lt;/p&gt; &#xA;&lt;h3&gt;test_corpus tests&lt;/h3&gt; &#xA;&lt;p&gt;The first kind of test can be called either &lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/test/pipeline_test_runner.cc&#34;&gt;test_corpus&lt;/a&gt; tests or &lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/test/testdata/&#34;&gt;testdata&lt;/a&gt; tests, based on the name of the test harness or the folder containing these tests, respectively.&lt;/p&gt; &#xA;&lt;p&gt;To create a test_corpus test, add any file &lt;code&gt;&amp;lt;name&amp;gt;.rb&lt;/code&gt; to &lt;code&gt;test/testdata&lt;/code&gt;, in any folder depth. The file must either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;type check entirely, or&lt;/li&gt; &#xA; &lt;li&gt;throw errors &lt;strong&gt;only&lt;/strong&gt; on lines marked with a comment (see below).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To mark that a line should have errors, append &lt;code&gt;# error: &amp;lt;message&amp;gt;&lt;/code&gt; (the &lt;code&gt;&amp;lt;message&amp;gt;&lt;/code&gt; must match the raised error message). In case there are multiple errors on this line, add an &lt;code&gt;# error: &amp;lt;message&amp;gt;&lt;/code&gt; on its own line just below.&lt;/p&gt; &#xA;&lt;p&gt;Error checks can optionally point to a range of characters rather than a line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;1 + &#39;&#39; # error: `String` doesn&#39;t match `Integer`&#xA;&#xA;rescue Foo, Bar =&amp;gt; baz&#xA;     # ^^^ error: Unable to resolve constant `Foo`&#xA;          # ^^^ error: Unable to resolve constant `Bar`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run this test with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test //test:test_PosTests/testdata/path/to/&amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Expectation tests&lt;/h3&gt; &#xA;&lt;p&gt;Each test_corpus test can be turned into an expectation test by optionally creating any number of &lt;code&gt;&amp;lt;name&amp;gt;.rb.&amp;lt;phase&amp;gt;.exp&lt;/code&gt; files (where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; matches the name of the ruby file for this test). These files contain pretty printed representations of internal data structures, according to what would be printed by &lt;code&gt;-p &amp;lt;phase&amp;gt;&lt;/code&gt;. The snapshot must exactly match the output generated by running &lt;code&gt;sorbet -p &amp;lt;phase&amp;gt; &amp;lt;name&amp;gt;.rb&lt;/code&gt; for the test to pass.&lt;/p&gt; &#xA;&lt;p&gt;You can run this test with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test //test:test_PosTests/testdata/path/to/&amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Files that begin with a prefix and &lt;code&gt;__&lt;/code&gt; will be run together. For example, &lt;code&gt;foo__1.rb&lt;/code&gt; and &lt;code&gt;foo__2.rb&lt;/code&gt; will be run together as test &lt;code&gt;foo&lt;/code&gt;. If such sets of files have &lt;code&gt;*.exp&lt;/code&gt; files associated with them, the &lt;code&gt;*.exp&lt;/code&gt; files must instead follow the pattern &lt;code&gt;&amp;lt;name&amp;gt;.&amp;lt;phase&amp;gt;.exp&lt;/code&gt;, where &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; does not include the &lt;code&gt;__*.rb&lt;/code&gt; suffix. So &lt;code&gt;foo__1.rb&lt;/code&gt; and &lt;code&gt;foo__2.rb&lt;/code&gt; would have an exp file like &lt;code&gt;foo.&amp;lt;pass&amp;gt;.exp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Another exception: for &lt;code&gt;package-tree&lt;/code&gt; exp tests, the filename is always &lt;code&gt;pass.package-tree.exp&lt;/code&gt;, no matter the name of the test.&lt;/p&gt; &#xA;&lt;h3&gt;CLI tests&lt;/h3&gt; &#xA;&lt;p&gt;Any folder &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; that is added to &lt;code&gt;test/cli/&lt;/code&gt; becomes a test. This folder should have a file &lt;code&gt;test.sh&lt;/code&gt; that is executable. When run, its output will be compared against &lt;code&gt;test.out&lt;/code&gt; in that folder.&lt;/p&gt; &#xA;&lt;p&gt;Our bazel setup will produce two targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bazel run //test/cli:test_&amp;lt;name&amp;gt;&lt;/code&gt; will execute the &lt;code&gt;.sh&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bazel test //test/cli:test_&amp;lt;name&amp;gt;&lt;/code&gt; will execute the &lt;code&gt;.sh&lt;/code&gt; and check it against what&#39;s in the &lt;code&gt;.out&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The scripts are run inside Bazel, so they will be executed from the top of the workspace and have access to source files and built targets using their path from the root. In particular, the compiled sorbet binary is available under &lt;code&gt;main/sorbet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;LSP tests&lt;/h3&gt; &#xA;&lt;p&gt;Most LSP tests are expectation tests with additional LSP-specific annotations. They are primarily contained in &lt;code&gt;test/testdata/lsp&lt;/code&gt;, but all files in &lt;code&gt;test/testdata&lt;/code&gt; are tested in LSP mode. You can run a test &lt;code&gt;test/testdata/lsp/&amp;lt;name&amp;gt;.rb&lt;/code&gt; like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bazel test //test:test_LSPTests/testdata/lsp/&amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Testing &#34;Find Definition&#34; and &#34;Find All References&#34;&lt;/h4&gt; &#xA;&lt;p&gt;LSP tests have access to &lt;code&gt;def&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; assertions that you can use to annotate definition and usage sites for a variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  a = 10&#xA;# ^ def: a&#xA;  b = a + 10&#xA;    # ^ usage: a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With these annotations, the test will check that &#34;Find Definition&#34; from the addition will lead to &lt;code&gt;a = 10&lt;/code&gt;, and that &#34;Find All References&#34; from either location will return both the definition and usage.&lt;/p&gt; &#xA;&lt;p&gt;If a variable is re-defined, it can be annotated with a version number:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  a = 10&#xA;# ^ def: a 1&#xA;  a = 20&#xA;# ^ def: a 2&#xA;  b = a + 10&#xA;    # ^ usage: a 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;usage&lt;/code&gt; annotations can accept multiple version numbers, separated by a &lt;code&gt;,&lt;/code&gt;. This is useful if you have variables that get re-defined through multiple-paths:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  if some_condition&#xA;    a = 10&#xA;  # ^ def a 1&#xA;  else&#xA;    a = &#39;hello&#39;&#xA;  # ^ def: a 2&#xA;  end&#xA;&#xA;  p a&#xA;  # ^ usage: a 1,2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a location should not report any definition or usage, then use the magic label &lt;code&gt;(nothing)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;    a = 10&#xA;# ^ def: (nothing)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a location should report multiple definitions (e.g., a class or module opened in multiple files), then you can add a second &lt;code&gt;def&lt;/code&gt; with the same name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Foo&#xA;  #   ^^^ def: foo&#xA;end&#xA;&#xA;class Foo&#xA;  #   ^^^ def: foo&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When marking definitions that correspond to method arguments that have defaults, multiple definitions will need to be marked: one for the argument definition itself and one for its default value. The default value needs to be given a different version number, and also marked &lt;code&gt;default-arg-value&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  def foo(a: 1)&#xA;        # ^ def: a 1&#xA;           # ^ def: a 2 default-arg-value&#xA;    p a&#xA;    # ^ usage: a 1,2&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is due to the translation of defaults into the CFG: there is a synthetic conditional that chooses either to initialize the variable from the argument passed at the send, or to the default value when no value is present.&lt;/p&gt; &#xA;&lt;h4&gt;Testing &#34;Go to Type Definition&#34;&lt;/h4&gt; &#xA;&lt;p&gt;This is somewhat similar to &#34;Find Definition&#34; above, but also slightly different because there&#39;s no analogue of &#34;Find All Type Definitions.&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class A; end&#xA;#     ^ type-def: some-label&#xA;&#xA;aaa = A.new&#xA;# ^ type: some-label&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;type: some-label&lt;/code&gt; assertion says &#34;please simulate a Go to Type Definition here, named &lt;code&gt;some-label&lt;/code&gt;&#34; and the &lt;code&gt;type-def: some-label&lt;/code&gt; assertion says &#34;assert that the results for &lt;code&gt;some-label&lt;/code&gt; are exactly these locations.&#34;&lt;/p&gt; &#xA;&lt;p&gt;That means if the type definition could return multiple locs, the assertions will have to cover all results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class A; end&#xA;#     ^ type-def: AorB&#xA;class B; end&#xA;#     ^ type-def: AorB&#xA;&#xA;aaa = T.let(A.new, T.any(A, B))&#xA;# ^ type: AorB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a location should not report any definition or usage, then use the magic label &lt;code&gt;(nothing)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# typed: false&#xA;class A; end&#xA;aaa = A.new&#xA;# ^ def: (nothing)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Testing hover&lt;/h4&gt; &#xA;&lt;p&gt;LSP tests can also assert the contents of hover responses with &lt;code&gt;hover&lt;/code&gt; assertions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  a = 10&#xA;# ^ hover: Integer(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a location should report the empty string, use the special label &lt;code&gt;(nothing)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;     a = 10&#xA;# ^ hover: (nothing)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Testing completion&lt;/h4&gt; &#xA;&lt;p&gt;LSP tests can also assert the contents of completion responses with &lt;code&gt;completion&lt;/code&gt; assertions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class A&#xA;  def self.foo_1; end&#xA;  def self.foo_2; end&#xA;&#xA;  foo&#xA;#    ^ completion: foo_1, foo_2&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;^&lt;/code&gt; corresponds to the position of the cursor. So in the above example, it&#39;s as if the cursor is like this: &lt;code&gt;foo│&lt;/code&gt;. If the &lt;code&gt;^&lt;/code&gt; had been directly under the last &lt;code&gt;o&lt;/code&gt;, it would have been like this: &lt;code&gt;fo|o&lt;/code&gt;. Only the first &lt;code&gt;^&lt;/code&gt; is used. If you use &lt;code&gt;^^^&lt;/code&gt; in the assertion, the test harness will send a completion assertion at the position of the first caret.&lt;/p&gt; &#xA;&lt;p&gt;You can also write a test for a partial prefix of the completion results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class A&#xA;  def self.foo_1; end&#xA;  def self.foo_2; end&#xA;&#xA;  foo&#xA;#    ^ completion: foo_1, ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the &lt;code&gt;, ...&lt;/code&gt; suffix to the end of a partial list of completion results, and the test harness will ensure that the listed identifiers match a prefix of the completion items. This prefix must still be listed in order.&lt;/p&gt; &#xA;&lt;p&gt;If a location should report zero completion items, use the special message &lt;code&gt;(nothing)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class A&#xA;  def self.foo_1; end&#xA;  def self.foo_2; end&#xA;&#xA;  zzz&#xA;#    ^ completion: (nothing)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To write a test for the snippet that would be inserted into the document if a particular completion item was selected, you can make two files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# -- test/testdata/lsp/completion/mytest.rb --&#xA;class A&#xA;  def self.foo_1; end&#xA;end&#xA;&#xA;A.foo_&#xA;#     ^ apply-completion: [A] item: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;apply-completion&lt;/code&gt; assertion says &#34;make sure the file &lt;code&gt;mytest.A.rbedited&lt;/code&gt; contains the result of inserting the completion snippet for the 0th completion item into the file.&#34;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# -- test/testdata/lsp/completion/mytest.A.rbedited --&#xA;class A&#xA;  def self.foo_1; end&#xA;end&#xA;&#xA;A.foo_1${0}&#xA;#     ^ apply-completion: [A] item: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, the fancy &lt;code&gt;${...}&lt;/code&gt; (tabstop placeholders) show up verbatim in the output if they were sent in the completion response.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s not currently possible to test these parts of a completion response:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;completion kind&lt;/li&gt; &#xA; &lt;li&gt;documentation&lt;/li&gt; &#xA; &lt;li&gt;detail&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For these, your best bet is to test manually in VS Code / your preferred editor and verify that you&#39;re seeing your changes. For documentation specifically, nearly all the code paths are shared with hover, so you can alternatively write a hover test.&lt;/p&gt; &#xA;&lt;h4&gt;Testing workspace symbols (symbol search)&lt;/h4&gt; &#xA;&lt;p&gt;LSP tests can assert that a specific item appears in a symbol search (the &lt;code&gt;textDocument/workspaceSymbols&lt;/code&gt; request) using the &lt;code&gt;symbol-search&lt;/code&gt; assertion:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Project::Foo&#xA;#     ^^^ symbol-search: &#34;Foo&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;symbol-search&lt;/code&gt; can optionally specify &lt;em&gt;how&lt;/em&gt; that item should appear in search results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Project::Foo&#xA;#     ^^^ symbol-search: &#34;Foo&#34;, name = &#34;Foo&#34;, container = &#34;Project&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above, &lt;code&gt;container&lt;/code&gt; can also be the special string &lt;code&gt;&#34;(nothing)&#34;&lt;/code&gt; to indicate that the item has no container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;symbol-search&lt;/code&gt; can also specify the item&#39;s relative rank in the ordered search results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Project::Foo&#xA;#     ^^^ symbol-search: &#34;Foo&#34;, rank = 1&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Testing &#34;Go to Implementation&#34;&lt;/h4&gt; &#xA;&lt;p&gt;Testing the &#34;Go to Implementation&#34; feature is really similar to the testing techniques of the &#34;Go to Type Definition&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;module A&#xA;#      ^ find-implementation: A&#xA;  extend T::Sig&#xA;  extend T::Helpers&#xA;  interface!&#xA;end&#xA;&#xA; class B&#xA;#^^^^^^^ implementation: A&#xA;  extend T::Sig&#xA;  include A&#xA;#         ^ find-implementation: A&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are two types of assertions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;find-implementation: &amp;lt;symbol&amp;gt;&lt;/code&gt; means make a &#34;Go to Implementation&#34; request here. &lt;code&gt;&amp;lt;symbol&amp;gt;&lt;/code&gt; marks the symbol name we are looking for.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;implementation: &amp;lt;symbol&amp;gt;&lt;/code&gt; marks the location which should be returned for the &#34;Go to Implementation&#34; call for a given &lt;code&gt;&amp;lt;symbol&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If the request returns multiple locations, you should mark all of them with &lt;code&gt;implementation: &amp;lt;symbol&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Testing rename constant&lt;/h4&gt; &#xA;&lt;p&gt;To write a test for renaming constants, you need to make at least two files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# -- test/testdata/lsp/refactor/mytest.rb --&#xA;&#xA;# typed: true&#xA;# frozen_string_literal: true&#xA;&#xA;class Foo&#xA;  class Foo&#xA;  end&#xA;end&#xA;&#xA;foo = Foo.new&#xA;#     ^ apply-rename: [A] newName: Bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;apply-rename&lt;/code&gt; assertion here says &#34;simulate a user starting a rename from the position of this caret.&#34; You&#39;ll need to add an &lt;code&gt;.rbedited&lt;/code&gt; file that reflects what the result of the changes should look like. In this case, the file would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# -- test/testdata/lsp/refactor/mytest.A.rbedited --&#xA;&#xA;# typed: true&#xA;# frozen_string_literal: true&#xA;&#xA;class Bar&#xA;  class Foo&#xA;  end&#xA;end&#xA;&#xA;foo = Bar.new&#xA;#     ^ apply-rename: [A] newName: Bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can test that invalid renames aren&#39;t applied by adding &lt;code&gt;invalid: true&lt;/code&gt; to your test, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# -- test/testdata/lsp/refactor/mytest.rb --&#xA;&#xA;# typed: true&#xA;# frozen_string_literal: true&#xA;&#xA;class Foo&#xA;  class Foo&#xA;  end&#xA;end&#xA;&#xA;foo = Foo.new&#xA;#     ^ apply-rename: [A] newName: foo invalid:true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test for a specific error message, add an &lt;code&gt;expectedErrorMessage&lt;/code&gt; argument to the test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# typed: true&#xA;# frozen_string_literal: true&#xA;&#xA;require_relative &#39;./constant__class_definition.rb&#39;&#xA;&#xA;sig { params(foo: Foo::Foo).returns(Foo::Foo) }&#xA;def foo(foo); end&#xA;&#xA;class Baz&#xA;#     ^ apply-rename: [D] newName: Bar invalid: true expectedErrorMessage: Renaming constants defined in .rbi files is not supported; symbol Baz is defined at test/testdata/lsp/rename/constant__rbi_class_reference.rbi&#xA;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add more files that reference the constant you&#39;re renaming, just make sure to add a matching &lt;code&gt;.rbedited&lt;/code&gt; file with the same version.&lt;/p&gt; &#xA;&lt;h4&gt;Testing incremental type checking&lt;/h4&gt; &#xA;&lt;p&gt;In LSP mode, Sorbet runs file updates on a &lt;em&gt;fast path&lt;/em&gt; or a &lt;em&gt;slow path&lt;/em&gt;. It checks the structure of the file before and after the update to determine if the change is covered under the fast path. If it is, it performs further processing to determine the set of files that need to be type checked.&lt;/p&gt; &#xA;&lt;p&gt;LSP tests can define file updates in &lt;code&gt;&amp;lt;name&amp;gt;.&amp;lt;version&amp;gt;.rbupdate&lt;/code&gt; files which contain the contents of &lt;code&gt;&amp;lt;name&amp;gt;.rb&lt;/code&gt; after the update occurs. For example, the file &lt;code&gt;foo.1.rbupdate&lt;/code&gt; contains the updated contents of &lt;code&gt;foo.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the test contains multiple files by using a &lt;code&gt;__&lt;/code&gt; suffixed prefix, then all rbupdates with the same version will be applied in the same update. For example, &lt;code&gt;foo__bar.1.rbupdate&lt;/code&gt; and &lt;code&gt;foo__baz.1.rbupdate&lt;/code&gt; will be applied simultaneously to update &lt;code&gt;foo__bar.rb&lt;/code&gt; and &lt;code&gt;foo__baz.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Inside &lt;code&gt;*.rbupdate&lt;/code&gt; files, you can assert that the slow path ran by adding a line with &lt;code&gt;# assert-slow-path: true&lt;/code&gt;. You can assert that the fast path ran on &lt;code&gt;foo__bar.rb&lt;/code&gt; and &lt;code&gt;foo__baz.rb&lt;/code&gt; with &lt;code&gt;#assert-fast-path: foo__bar.rb,foo__baz.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;LSP recorded tests&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to record an LSP session and use it as a test. We are attempting to move away from this form of testing, as these tests are hard to update and understand. If at all possible, try to add your test case as a regular LSP test.&lt;/p&gt; &#xA;&lt;p&gt;Any folder &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; that is added to &lt;code&gt;test/lsp/&lt;/code&gt; will become a test. This folder should contain a file named &lt;code&gt;&amp;lt;folderName&amp;gt;.rec&lt;/code&gt; that contains a recorded LSP session.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lines that start with &#34;Read:&#34; will be sent to sorbet as input.&lt;/li&gt; &#xA; &lt;li&gt;Lines that start with &#34;Write:&#34; will be expected from sorbet as output.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Updating tests&lt;/h3&gt; &#xA;&lt;p&gt;Frequently when a test is failing, it&#39;s because something inconsequential changed in the captured output, rather than there being a bug in your code.&lt;/p&gt; &#xA;&lt;p&gt;To recapture the traces, you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/scripts/update_exp_files.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will probably want to look through the changes and &lt;code&gt;git checkout&lt;/code&gt; any files with changes that you believe are actually bugs in your code and fix your code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;update_exp_files.sh&lt;/code&gt; updates every snapshot file kind known to Sorbet. This can be slow, depending on what needs to be recompiled and updated. Some faster commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Only update the `*.exp` files in `test/testdata`&#xA;tools/scripts/update_testdata_exp.sh&#xA;&#xA;# Only update the `*.exp` files in `test/testdata/cfg`&#xA;tools/scripts/update_testdata_exp.sh test/testdata/cfg&#xA;&#xA;# Only update a single exp file&#39;s test:&#xA;tools/scripts/update_testdata_exp.sh test/testdata/cfg/next.rb&#xA;&#xA;# Only update the `*.out` files in `test/cli`&#xA;bazel test //test/cli:update&#xA;&#xA;# Update the `*.exp` files in `gems/sorbet/test/hidden-method-finder`&#xA;gems/sorbet/test/hidden-method-finder/update_hidden_methods_exp.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;In general,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;to debug a normal build of sorbet? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;lldb bazel-bin/main/sorbet -- &amp;lt;args&amp;gt; ...&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;(Consider using &lt;code&gt;--config=static-libs&lt;/code&gt; for better debug symbols)&lt;/li&gt; &#xA;   &lt;li&gt;If you see weird Python errors on macOS, try &lt;code&gt;PATH=/usr/bin lldb&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;to debug an existing Sorbet process (i.e., LSP) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;launch Sorbet with the &lt;code&gt;--wait-for-dbg&lt;/code&gt; flag&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;lldb -p &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;set breakpoints and then &lt;code&gt;continue&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, it’s good to get in the practice of fixing bugs by first adding an &lt;code&gt;ENFORCE&lt;/code&gt; (assertion) that would have caught the bug before actually fixing the bug. It’s far easier to fix bugs when there’s a nice error message stating what invariant you’ve violated. &lt;code&gt;ENFORCE&lt;/code&gt;s are free in the release build.&lt;/p&gt; &#xA;&lt;h2&gt;Writing docs&lt;/h2&gt; &#xA;&lt;p&gt;The sources for Sorbet&#39;s documentation website live in the &lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/website/&#34;&gt;&lt;code&gt;website/&lt;/code&gt;&lt;/a&gt; folder. Specifically, the docs live in &lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/website/docs/&#34;&gt;&lt;code&gt;website/docs/&lt;/code&gt;&lt;/a&gt;, are all authored with Markdown, and are built using &lt;a href=&#34;https://docusaurus.io/&#34;&gt;Docusaurus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sorbet/sorbet/master/website/README.md&#34;&gt;→ website/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;^ See here for how to work with the documentation site locally.&lt;/p&gt; &#xA;&lt;h2&gt;Editor and environment&lt;/h2&gt; &#xA;&lt;h3&gt;Bazel&lt;/h3&gt; &#xA;&lt;p&gt;Bazel supports having a persistent cache of previous build results so that rebuilds for the same input files are fast. To enable this feature, run these commands to create a &lt;code&gt;./.bazelrc.local&lt;/code&gt; and cache folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# The .bazelrc.local will live in the sorbet repo so it doesn&#39;t interfere with&#xA;# other bazel-based repos you have.&#xA;echo &#34;build  --disk_cache=$HOME/.cache/sorbet/bazel-cache&#34; &amp;gt;&amp;gt; ./.bazelrc.local&#xA;echo &#34;test   --disk_cache=$HOME/.cache/sorbet/bazel-cache&#34; &amp;gt;&amp;gt; ./.bazelrc.local&#xA;mkdir -p &#34;$HOME/.cache/sorbet/bazel-cache&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple git worktrees&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes it can be nice to have [multiple working trees] in Git. This allows you to have multiple active checkouts Sorbet, sharing the same &lt;code&gt;.git/&lt;/code&gt; folder. To set up a new worktree with Sorbet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tools/scripts/make_worktree.sh &amp;lt;worktree_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shell&lt;/h3&gt; &#xA;&lt;p&gt;Many of the build commands are very long. You might consider shortening the common ones with shell aliases of your choice:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# mnemonic: &#39;s&#39; for sorbet&#xA;alias sb=&#34;bazel build //main:sorbet --config=dbg&#34;&#xA;alias st=&#34;bazel test //... --config=dbg --test_output=errors&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Formatting files&lt;/h3&gt; &#xA;&lt;p&gt;We ensure that C++ files are formatted with &lt;code&gt;clang-format&lt;/code&gt; and that Bazel BUILD files are formatted with &lt;code&gt;buildifier&lt;/code&gt;. To avoid inconsistencies between different versions of these tools, we have scripts which download and run these tools through &lt;code&gt;bazel&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/scripts/format_cxx.sh&#xA;tools/scripts/format_build_files.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CI will fail if there are any unformatted files, so you might want to set up your files to be formatted automatically with one of these options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set up a pre-commit / pre-push hook which runs these scripts.&lt;/li&gt; &#xA; &lt;li&gt;Set up your editor to run these scripts. See below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Editor setup for C++&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;clang&lt;/code&gt; suite of tools has a pretty great story around editor tooling: you can build a &lt;code&gt;compile_commands.json&lt;/code&gt; using Clang&#39;s &lt;a href=&#34;https://clang.llvm.org/docs/JSONCompilationDatabase.html&#34;&gt;Compilation Database&lt;/a&gt; format.&lt;/p&gt; &#xA;&lt;p&gt;Many clang-based tools consume this file to provide language-aware features in, for example, editor integrations.&lt;/p&gt; &#xA;&lt;p&gt;To build a &lt;code&gt;compile_commands.json&lt;/code&gt; file for Sorbet with bazel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tools/scripts/build_compilation_db.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This builds a &lt;code&gt;./compile_commands.json&lt;/code&gt; file (that is gitignored). This file hard-codes some paths into the Bazel sandbox. These files can get stale, especially when they&#39;re generated by Bazel &lt;code&gt;genrule&lt;/code&gt;&#39;s. In particular, the &lt;code&gt;./compile_commands.json&lt;/code&gt; references files in Bazel&#39;s &lt;code&gt;opt&lt;/code&gt; configuration (e.g., whatever was last built with &lt;code&gt;-c opt&lt;/code&gt; / &lt;code&gt;--compilation_mode=opt&lt;/code&gt;). If you&#39;re seeing stale errors, consider running a command like &lt;code&gt;./bazel build //main:sorbet -c opt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You are encouraged to play around with various clang-based tools which use the &lt;code&gt;compile_commands.json&lt;/code&gt; database. Some suggestions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Andersbakken/rtags&#34;&gt;rtags&lt;/a&gt; -- Clang aware jump-to-definition / find references / etc.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install rtags&#xA;&#xA;# Have the rtags daemon be automatically launched by macOS on demand&#xA;brew services start rtags&#xA;&#xA;# cd into sorbet&#xA;# ensure that ./compile_commands.json exists&#xA;&#xA;# Tell rtags to index sorbet using our compile_commands.json file&#xA;rc -J .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There are rtags editor plugins for most text editors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://clang.llvm.org/extra/clangd.html&#34;&gt;clangd&lt;/a&gt; -- Clang-based language server implementation&lt;/p&gt; &lt;p&gt;&lt;code&gt;clangd&lt;/code&gt; supports more features than &lt;code&gt;rtags&lt;/code&gt; (specifically, reporting Diagnostics), but can be somewhat slower at times because it does not pre-index all your code like rtags does.&lt;/p&gt; &lt;p&gt;After successfully compiling Sorbet, point your editor to use the &lt;code&gt;clangd&lt;/code&gt; executable located in &lt;code&gt;bazel-sorbet/external/llvm_toolchain_12_0_0/bin/clangd&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://clang.llvm.org/docs/ClangFormat.html&#34;&gt;clang-format&lt;/a&gt; -- Clang-based source code formatter&lt;/p&gt; &lt;p&gt;We build &lt;code&gt;clang-format&lt;/code&gt; in Bazel to ensure that everyone uses the same version. Here&#39;s how you can get &lt;code&gt;clang-format&lt;/code&gt; out of Bazel to use it in your editor:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Build clang-format with bazel&#xA;./bazel build //tools:clang-format&#xA;&#xA;# Once bazel runs again, this symlink to clang-format will go away.&#xA;# We need to copy it out of bazel so our editor can use it:&#xA;mkdir -p &#34;$HOME/bin&#34;&#xA;cp bazel-bin/tools/clang-format $HOME/bin&#xA;&#xA;# (Be sure that $HOME/bin is on your PATH, or use a path that is)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With &lt;code&gt;clang-format&lt;/code&gt; on your path, you should be able to find an editor plugin that uses it to format your code on save.&lt;/p&gt; &lt;p&gt;Note: our format script passes some extra options to &lt;code&gt;clang-format&lt;/code&gt;. Configure your editor to pass these options along to &lt;code&gt;clang-format&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;-style=file -assume-filename=&amp;lt;CURRENT_FILE&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/clion/&#34;&gt;CLion&lt;/a&gt; -- JetBrains C/C++ IDE&lt;/p&gt; &lt;p&gt;CLion can be made aware of the &lt;code&gt;compile_commands.json&lt;/code&gt; database. Replaces your entire text editing workflow (full-fledged IDE).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.vscode-clangd&#34;&gt;vscode-clangd&lt;/a&gt; -- Clangd extension for VS Code&lt;/p&gt; &lt;p&gt;This extension integrates clangd (see above) with VS Code. It will also run &lt;code&gt;clang-format&lt;/code&gt; whenever you save. &lt;strong&gt;Note: Microsoft&#39;s C/C++ extension does &lt;em&gt;not&lt;/em&gt; work properly with Sorbet&#39;s &lt;code&gt;compile_commands.json&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The settings for this repository automatically configure vscode-clangd to run the clangd executable in the &lt;code&gt;bazel-sorbet&lt;/code&gt; directory. Note that you will need to compile Sorbet once before it will work.&lt;/p&gt; &lt;p&gt;clangd operates on &lt;code&gt;compile_commands.json&lt;/code&gt;, so make sure you run the &lt;code&gt;./tools/scripts/build_compilation_db.sh&lt;/code&gt; script.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are some sample config setups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vim &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jez/dotfiles/raw/dafe23c95fd908719bf477f189335bd1451bd8a7/vim/plug-settings.vim#L649-L676&#34;&gt;rtags (vim-rtags)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jez/dotfiles/raw/dafe23c95fd908719bf477f189335bd1451bd8a7/vim/plug-settings.vim#L288-L303&#34;&gt;clangd + clang-format (ALE)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/elliottt/vim-config/raw/35f328765528f6b322fb7d5a03fb3edd81067805/coc-settings.json#L3-L15&#34;&gt;clangd + clang-format (coc.nvim)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>