<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-22T01:41:48Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sous-chefs/ark</title>
    <updated>2024-01-22T01:41:48Z</updated>
    <id>tag:github.com,2024-01-22:/sous-chefs/ark</id>
    <link href="https://github.com/sous-chefs/ark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Development repository for the ark cookbook&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ark cookbook&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://supermarket.chef.io/cookbooks/ark&#34;&gt;&lt;img src=&#34;https://img.shields.io/cookbook/v/ark.svg?sanitize=true&#34; alt=&#34;Cookbook Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sous-chefs/ark/actions?query=workflow%3Aci&#34;&gt;&lt;img src=&#34;https://github.com/sous-chefs/ark/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;CI State&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/ark/main/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/backers/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/ark/main/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/sponsors/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This cookbook provides &lt;code&gt;ark&lt;/code&gt;, a resource for managing software archives. It manages the fetch-unpack-configure-build-install process common to installing software from source, or from binary distributions that are not fully fledged OS packages.&lt;/p&gt; &#xA;&lt;p&gt;This cookbook started its life as a modified version of Infochimp&#39;s install_from cookbook. It has since been heavily refactored and extended to meet different use cases.&lt;/p&gt; &#xA;&lt;p&gt;Given a simple project archive available at a url:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ark &#39;pig&#39; do&#xA;  url &#39;http://apache.org/pig/pig-0.8.0.tar.gz&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;ark&lt;/code&gt; resource will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fetch it to to &lt;code&gt;/var/cache/chef/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;unpack it to the default path (&lt;code&gt;/usr/local/pig-0.8.0&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;create a symlink for &lt;code&gt;:home_dir&lt;/code&gt; (&lt;code&gt;/usr/local/pig&lt;/code&gt;) pointing to path&lt;/li&gt; &#xA; &lt;li&gt;add specified binary commands to the environment &lt;code&gt;PATH&lt;/code&gt; variable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, the ark will not run again if the &lt;code&gt;:path&lt;/code&gt; is not empty. Ark provides many actions to accommodate different use cases, such as &lt;code&gt;:dump&lt;/code&gt;, &lt;code&gt;:cherry_pick&lt;/code&gt;, &lt;code&gt;:put&lt;/code&gt;, and &lt;code&gt;:install_with_make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For remote files ark supports URLs using the &lt;a href=&#34;http://docs.chef.io/resource_remote_file.html&#34;&gt;remote_file&lt;/a&gt; resource. Local files are accessed with the &lt;code&gt;file://&lt;/code&gt; syntax.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;This cookbook is maintained by the Sous Chefs. The Sous Chefs are a community of Chef cookbook maintainers working together to maintain important cookbooks. If youâ€™d like to know more please visit &lt;a href=&#34;https://sous-chefs.org/&#34;&gt;sous-chefs.org&lt;/a&gt; or come chat with us on the Chef Community Slack in &lt;a href=&#34;https://chefcommunity.slack.com/messages/C2V7B88SF&#34;&gt;#sous-chefs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian/Ubuntu&lt;/li&gt; &#xA; &lt;li&gt;RHEL/CentOS/Scientific/Oracle&lt;/li&gt; &#xA; &lt;li&gt;Fedora&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD&lt;/li&gt; &#xA; &lt;li&gt;SmartOS&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;openSUSE / SUSE Linux Enterprises&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Should work on common Unix/Linux systems with typical userland utilities like tar, gzip, etc. May require the installation of build tools for compiling from source, but that installation is outside the scope of this cookbook.&lt;/p&gt; &#xA;&lt;h3&gt;Chef&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chef 15.3+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cookbooks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;seven_zip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Attributes&lt;/h2&gt; &#xA;&lt;p&gt;Customize the attributes to suit site specific conventions and defaults.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;apache_mirror&#39;]&lt;/code&gt; - if the URL is an apache mirror, use the attribute as the default. default: &lt;code&gt;http://apache.mirrors.tds.net&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;prefix_root&#39;]&lt;/code&gt; - default base location if the &lt;code&gt;prefix_root&lt;/code&gt; is not passed into the resource. default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;prefix_bin&#39;]&lt;/code&gt; - default binary location if the &lt;code&gt;prefix_bin&lt;/code&gt; is not passed into the resource. default: &lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;prefix_home&#39;]&lt;/code&gt; - default home location if the &lt;code&gt;prefix_home&lt;/code&gt; is not passed into the resource. default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;package_dependencies&#39;]&lt;/code&gt; - prerequisite system packages that need to be installed to support ark. default: varies based on platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;tar&#39;]&lt;/code&gt; - allows overriding the default path to the tar binary, which varies based on platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node[&#39;ark&#39;][&#39;sevenzip_binary&#39;]&lt;/code&gt; - allows overriding the default path to the 7zip binary, which is determined based on registry key value&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ark&lt;/code&gt; - does the extract/build/configure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Actions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:install&lt;/code&gt;: extracts the file and creates a &#39;friendly&#39; symbolic link to the extracted directory path&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:configure&lt;/code&gt;: configure ahead of the install action&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:install_with_make&lt;/code&gt;: extracts the archive to a path, runs &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt;, and &lt;code&gt;make install&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:dump&lt;/code&gt;: strips all directories from the archive and dumps the contained files into a specified path&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:cherry_pick&lt;/code&gt;: extract a specified file from an archive and places in specified path&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:put&lt;/code&gt;: extract the archive to a specified path, does not create any symbolic links&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:remove&lt;/code&gt;: removes the extracted directory and related symlink #TODO&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:setup_py&lt;/code&gt;: runs the command &#34;python setup.py&#34; in the extracted directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:setup_py_build&lt;/code&gt;: runs the command &#34;python setup.py build&#34; in the extracted directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:setup_py_install&lt;/code&gt;: runs the command &#34;python setup.py install&#34; in the extracted directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Action: cherry_pick&lt;/h3&gt; &#xA;&lt;p&gt;Extract a specified file from an archive and places in specified path.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters for &lt;code&gt;cherry_pick&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: directory to place file in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;creates&lt;/code&gt;: specific file to cherry-pick.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Action: dump&lt;/h3&gt; &#xA;&lt;p&gt;Strips all directories from the archive and dumps the contained files into a specified path.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: This currently only works for zip archives&lt;/p&gt; &#xA;&lt;h4&gt;Parameters for :dump&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;path&lt;/code&gt;: path to dump files to.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;mode&lt;/code&gt;: file mode for &lt;code&gt;app_home&lt;/code&gt;, as an integer.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;0775&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;creates&lt;/code&gt;: if you are appending files to a given directory, ark needs a condition to test whether the file has already been extracted. You can specify with creates, a file whose existence indicates the ark has previously been extracted and does not need to be extracted again.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Action: put&lt;/h3&gt; &#xA;&lt;p&gt;Extract the archive to a specified path, does not create any symbolic links.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters for :put&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;path&lt;/code&gt;: path to extract to.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;append_env_path&lt;/code&gt;: boolean, if true, append the &lt;code&gt;./bin&lt;/code&gt; directory of the extracted directory to the global &lt;code&gt;PATH&lt;/code&gt; variable for all users.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Attribute Parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;name&lt;/code&gt;: name of the package, defaults to the resource name.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;url&lt;/code&gt;: url for tarball, &lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.bin&lt;/code&gt; (oracle-specific), &lt;code&gt;.war&lt;/code&gt;, and &lt;code&gt;.zip&lt;/code&gt; currently supported. Also supports special syntax&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:name:version:apache_mirror:&lt;/code&gt; that will auto-magically construct download url from the apache mirrors site.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;version&lt;/code&gt;: software version, defaults to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;mode&lt;/code&gt;: file mode for &lt;code&gt;app_home&lt;/code&gt;, is an integer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;prefix_root&lt;/code&gt;: default &lt;code&gt;prefix_root&lt;/code&gt;, for use with &lt;code&gt;:install*&lt;/code&gt; actions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;prefix_home&lt;/code&gt;: default directory prefix for a friendly symlink to the path.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;/usr/local/maven&lt;/code&gt; -&amp;gt; &lt;code&gt;/usr/local/maven-2.2.1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;prefix_bin&lt;/code&gt;: default directory to place a symlink to a binary command.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;/opt/bin/mvn&lt;/code&gt; -&amp;gt; &lt;code&gt;/opt/maven-2.2.1/bin/mvn&lt;/code&gt;, where the &lt;code&gt;prefix_bin&lt;/code&gt; is &lt;code&gt;/opt/bin&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;path&lt;/code&gt;: path to extract the ark to. The &lt;code&gt;:install*&lt;/code&gt; actions overwrite any user-provided values for &lt;code&gt;:path&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;/usr/local/&amp;lt;name&amp;gt;-&amp;lt;version&amp;gt;&lt;/code&gt; for the &lt;code&gt;:install&lt;/code&gt;, &lt;code&gt;:install_with_make&lt;/code&gt; actions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;home_dir&lt;/code&gt;: symbolic link to the path &lt;code&gt;:prefix_root/:name-:version&lt;/code&gt;, does not apply to &lt;code&gt;:dump&lt;/code&gt;, &lt;code&gt;:put&lt;/code&gt;, or &lt;code&gt;:cherry_pick&lt;/code&gt; actions.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;:prefix_root/:name&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;has_binaries&lt;/code&gt;: array of binary commands to symlink into &lt;code&gt;/usr/local/bin/&lt;/code&gt;, you must specify the relative path.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;[ &#39;bin/java&#39;, &#39;bin/javaws&#39; ]&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;append_env_path&lt;/code&gt;: boolean, similar to &lt;code&gt;has_binaries&lt;/code&gt; but less granular. If true, append the &lt;code&gt;./bin&lt;/code&gt; directory of the extracted directory to. the &lt;code&gt;PATH&lt;/code&gt; environment variable for all users, by placing a file in &lt;code&gt;/etc/profile.d/&lt;/code&gt;. The commands are symbolically linked into &lt;code&gt;/usr/bin/*&lt;/code&gt;. This option provides more granularity than the boolean option.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;mvn&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;javac&lt;/code&gt;, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;environment&lt;/code&gt;: hash of environment variables to pass to invoked shell commands like &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;unzip&lt;/code&gt;, &lt;code&gt;configure&lt;/code&gt;, and &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;strip_components&lt;/code&gt;: number of components in path to strip when extracting archive. With default value of &lt;code&gt;1&lt;/code&gt;, ark strips the leading directory from an archive, which is the default for both &lt;code&gt;unzip&lt;/code&gt; and &lt;code&gt;tar&lt;/code&gt; commands.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;autoconf_opts&lt;/code&gt;: an array of command line options for use with the GNU &lt;code&gt;autoconf&lt;/code&gt; script.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;[ &#39;--include=/opt/local/include&#39;, &#39;--force&#39; ]&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;make_opts&lt;/code&gt;: an array of command line options for use with &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;[ &#39;--warn-undefined-variables&#39;, &#39;--load-average=2&#39; ]&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;owner&lt;/code&gt;: owner of extracted directory.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;root&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;group&lt;/code&gt;: group of extracted directory.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;root&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;backup&lt;/code&gt;: The number of backups to be kept in /var/chef/backup (for UNIX- and Linux-based platforms) or C:/chef/backup (for the Microsoft Windows platform). Set to false to prevent backups from being kept.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default: &lt;code&gt;5&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;p&gt;This example copies &lt;code&gt;ivy.tar.gz&lt;/code&gt; to &lt;code&gt;/var/cache/chef/ivy-2.2.0.tar.gz&lt;/code&gt;, unpacks its contents to &lt;code&gt;/usr/local/ivy-2.2.0/&lt;/code&gt; -- stripping the leading directory, and symlinks &lt;code&gt;/usr/local/ivy&lt;/code&gt; to &lt;code&gt;/usr/local/ivy-2.2.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; # install Apache Ivy dependency resolution tool&#xA; ark &#34;ivy&#34; do&#xA;   url &#39;http://someurl.example.com/ivy.tar.gz&#39;&#xA;   version &#39;2.2.0&#39;&#xA;   checksum &#39;89ba5fde0c596db388c3bbd265b63007a9cc3df3a8e6d79a46780c1a39408cb5&#39;&#xA;   action :install&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example copies &lt;code&gt;jdk-7u2-linux-x64.tar.gz&lt;/code&gt; to &lt;code&gt;/var/cache/chef/jdk-7.2.tar.gz&lt;/code&gt;, unpacks its contents to &lt;code&gt;/usr/local/jvm/jdk-7.2/&lt;/code&gt; -- stripping the leading directory, symlinks &lt;code&gt;/usr/local/jvm/default&lt;/code&gt; to &lt;code&gt;/usr/local/jvm/jdk-7.2&lt;/code&gt;, and adds &lt;code&gt;/usr/local/jvm/jdk-7.2/bin/&lt;/code&gt; to the global &lt;code&gt;PATH&lt;/code&gt; for all users. The user &#39;foobar&#39; is the owner of the &lt;code&gt;/usr/local/jvm/jdk-7.2&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#39;jdk&#39; do&#xA;   url &#39;http://download.example.com/jdk-7u2-linux-x64.tar.gz&#39;&#xA;   version &#39;7.2&#39;&#xA;   path &#34;/usr/local/jvm/&#34;&#xA;   home_dir &#34;/usr/local/jvm/default&#34;&#xA;   checksum  &#39;89ba5fde0c596db388c3bbd265b63007a9cc3df3a8e6d79a46780c1a39408cb5&#39;&#xA;   append_env_path true&#xA;   owner &#39;foobar&#39;&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Apache Ivy dependency resolution tool in &lt;code&gt;/resource_name&lt;/code&gt; in this case &lt;code&gt;/usr/local/ivy&lt;/code&gt;, do not symlink, and strip any leading directory if one exists in the tarball:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#34;ivy&#34; do&#xA;    url &#39;http://someurl.example.com/ivy.tar.gz&#39;&#xA;    checksum &#39;89ba5fde0c596db388c3bbd265b63007a9cc3df3a8e6d79a46780c1a39408cb5&#39;&#xA;    action :put&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Apache Ivy dependency resolution tool in &lt;code&gt;/home/foobar/ivy&lt;/code&gt;, strip any leading directory if one exists, don&#39;t keep backup copies of &lt;code&gt;ivy.tar.gz&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#34;ivy&#34; do&#xA;   path &#34;/home/foobar&#34;&#xA;   url &#39;http://someurl.example.com/ivy.tar.gz&#39;&#xA;   checksum &#39;89ba5fde0c596db388c3bbd265b63007a9cc3df3a8e6d79a46780c1a39408cb5&#39;&#xA;   action :put&#xA;   backup false&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Strip all directories and dump files into path specified by the path attribute. You must specify the &lt;code&gt;creates&lt;/code&gt; attribute in order to keep the extraction from running every time. The directory path will be created if it doesn&#39;t already exist:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#34;my_jars&#34; do&#xA;   url  &#34;http://example.com/bunch_of_jars.zip&#34;&#xA;   path &#34;/usr/local/tomcat/lib&#34;&#xA;   creates &#34;mysql.jar&#34;&#xA;   owner &#34;tomcat&#34;&#xA;   action :dump&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extract specific files from a tarball (currently only handles one named file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#39;mysql-connector-java&#39; do&#xA;   url &#39;http://oracle.com/mysql-connector.zip&#39;&#xA;   creates &#39;mysql-connector-java-5.0.8-bin.jar&#39;&#xA;   path &#39;/usr/local/tomcat/lib&#39;&#xA;   action :cherry_pick&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build and install haproxy and use alternative values for &lt;code&gt;prefix_root&lt;/code&gt;, &lt;code&gt;prefix_home&lt;/code&gt;, and &lt;code&gt;prefix_bin&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#34;haproxy&#34; do&#xA;   url  &#34;http://haproxy.1wt.eu/download/1.5/src/snapshot/haproxy-ss-20120403.tar.gz&#34;&#xA;   version &#34;1.5&#34;&#xA;   checksum &#39;ba0424bf7d23b3a607ee24bbb855bb0ea347d7ffde0bec0cb12a89623cbaf911&#39;&#xA;   make_opts [ &#39;TARGET=linux26&#39; ]&#xA;   prefix_root &#39;/opt&#39;&#xA;   prefix_home &#39;/opt&#39;&#xA;   prefix_bin  &#39;/opt/bin&#39;&#xA;   action :install_with_make&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also supply the file extension in case the file extension can not be determined by the URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; ark &#34;test_autogen&#34; do&#xA;   url &#39;https://github.com/zeromq/libzmq/tarball/master&#39;&#xA;   extension &#34;tar.gz&#34;&#xA;   action :install_with_make&#xA; end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who &lt;a href=&#34;https://opencollective.com/sous-chefs/contributors.svg?width=890&amp;amp;button=false&#34;&gt;contribute.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/backers.svg?width=600&amp;amp;avatarHeight=40&#34; alt=&#34;https://opencollective.com/sous-chefs#backers&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/0/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/0/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/1/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/1/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/2/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/2/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/3/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/3/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/4/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/4/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/5/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/5/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/6/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/6/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/7/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/7/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/8/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/8/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/9/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/9/website&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>countries/countries-data-json</title>
    <updated>2024-01-22T01:41:48Z</updated>
    <id>tag:github.com,2024-01-22:/countries/countries-data-json</id>
    <link href="https://github.com/countries/countries-data-json" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ISO 3116 country information in JSON format to be included in other projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Countries data - JSON&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/countries/countries-data-json/workflows/Auto%20Update%20Country%20Data/badge.svg?event=schedule&#34; alt=&#34;Auto Update Country Data&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository represents a collection of all sorts of useful information for every country in the ISO 3166 standard. It contains info for the following standards ISO3166-1 (countries), ISO3166-2 (states/subdivisions), ISO4217 (currency) and E.164 (phone numbers).&lt;/p&gt; &#xA;&lt;p&gt;It is based on data automatically extracted from the &lt;a href=&#34;https://github.com/countries/countries&#34;&gt;&lt;code&gt;countries&lt;/code&gt;&lt;/a&gt; Ruby gem.&lt;/p&gt; &#xA;&lt;p&gt;The project is intended to be used as a git submodule in other projects that rely on this data. It is designed so that it updates itself and follows the &lt;code&gt;countries/countries&lt;/code&gt; repository for updates automatically.&lt;/p&gt; &#xA;&lt;h2&gt;See Also&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/countries/countries-data-yaml&#34;&gt;Countries data - YAML&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2020 Itay Grudev. This script used for automating the data collection is released under The MIT License (MIT), while the data is released as specified in the &lt;code&gt;data/LICENSE&lt;/code&gt; and is also distributed under the MIT license as of now.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cirruslabs/homebrew-cli</title>
    <updated>2024-01-22T01:41:48Z</updated>
    <id>tag:github.com,2024-01-22:/cirruslabs/homebrew-cli</id>
    <link href="https://github.com/cirruslabs/homebrew-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Homebrew formula for Cirrus CLI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cirrus Labs&#39; Homebrew tap&lt;/h1&gt; &#xA;&lt;h2&gt;Tart&lt;/h2&gt; &#xA;&lt;p&gt;To install &lt;a href=&#34;https://github.com/cirruslabs/tart&#34;&gt;Tart Virtualization&lt;/a&gt; run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install cirruslabs/cli/tart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cirrus CLI&lt;/h2&gt; &#xA;&lt;p&gt;To install &lt;a href=&#34;https://github.com/cirruslabs/cirrus-cli&#34;&gt;Cirrus CLI&lt;/a&gt; run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install cirruslabs/cli/cirrus&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>