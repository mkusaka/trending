<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-03T01:36:32Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rails/rails-controller-testing</title>
    <updated>2024-09-03T01:36:32Z</updated>
    <id>tag:github.com,2024-09-03:/rails/rails-controller-testing</id>
    <link href="https://github.com/rails/rails-controller-testing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Brings back `assigns` and `assert_template` to your Rails tests&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rails::Controller::Testing&lt;/h1&gt; &#xA;&lt;p&gt;This gem brings back &lt;code&gt;assigns&lt;/code&gt; to your controller tests as well as &lt;code&gt;assert_template&lt;/code&gt; to both controller and integration tests.&lt;/p&gt; &#xA;&lt;p&gt;These methods were &lt;a href=&#34;https://github.com/rails/rails/issues/18950&#34;&gt;removed in Rails 5&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;rails-controller-testing&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install it yourself as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install rails-controller-testing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RSpec&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/rspec/rspec-rails/issues/1393&#34;&gt;https://github.com/rspec/rspec-rails/issues/1393&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;rspec-rails automatically integrates with this gem since version &lt;code&gt;3.5.0&lt;/code&gt;. Adding the gem to your &lt;code&gt;Gemfile&lt;/code&gt; is sufficient.&lt;/p&gt; &#xA;&lt;p&gt;If you use an older version of rspec-rails, you can manually include the modules in your &lt;code&gt;rails_helper&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  [:controller, :view, :request].each do |type|&#xA;    config.include ::Rails::Controller::Testing::TestProcess, :type =&amp;gt; type&#xA;    config.include ::Rails::Controller::Testing::TemplateAssertions, :type =&amp;gt; type&#xA;    config.include ::Rails::Controller::Testing::Integration, :type =&amp;gt; type&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Outside Rails&lt;/h2&gt; &#xA;&lt;p&gt;For projects and gems using controller tests outside of a Rails application, invoke the &lt;code&gt;Rails::Controller::Testing.install&lt;/code&gt; method inside your test suite setup to include the required modules on controller test cases.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# test/test_helper.rb&#xA;&#xA;require &#39;rails-controller-testing&#39;&#xA;Rails::Controller::Testing.install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;assigns&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;assigns&lt;/code&gt; allows you to access the instance variables that have been passed to your views.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsController &amp;lt; ActionController::Base&#xA;  def index&#xA;    @posts = Post.all&#xA;  end&#xA;end&#xA;&#xA;class PostControllerTest &amp;lt; ActionController::TestCase&#xA;  def test_index&#xA;    get :index&#xA;    assert_equal Post.all, assigns(:posts)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;assert_template&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;assert_template&lt;/code&gt; allows you to assert that certain templates have been rendered.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostControllerTest &amp;lt; ActionController::TestCase&#xA;  def test_index&#xA;    get :index&#xA;    assert_template &#39;posts/index&#39;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>