<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-30T01:40:00Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>djezzzl/database_consistency</title>
    <updated>2022-12-30T01:40:00Z</updated>
    <id>tag:github.com,2022-12-30:/djezzzl/database_consistency</id>
    <link href="https://github.com/djezzzl/database_consistency" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The tool to avoid various issues due to inconsistencies and inefficiencies between a database schema and application models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DatabaseConsistency&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/rb/database_consistency&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/database_consistency.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/djezzzl/database_consistency/actions/workflows/tests.yml?query=event%3Aschedule&#34;&gt;&lt;img src=&#34;https://github.com/djezzzl/database_consistency/actions/workflows/tests.yml/badge.svg?branch=master&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/djezzzl/database_consistency/actions/workflows/rubocop.yml?query=event%3Aschedule&#34;&gt;&lt;img src=&#34;https://github.com/djezzzl/database_consistency/actions/workflows/rubocop.yml/badge.svg?branch=master&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency#support&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/tiers/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The main goal of the project is to help you avoid various issues due to inconsistencies and inefficiencies between a database schema and application models.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If the project helps you or your organization, I would be very grateful if you &lt;a href=&#34;https://github.com/djezzzl/database_consistency#contributing&#34;&gt;contribute&lt;/a&gt; or &lt;a href=&#34;https://opencollective.com/database_consistency#support&#34;&gt;donate&lt;/a&gt;.&lt;br&gt; Your support is an incredible motivation and the biggest reward for my hard work.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For detailed information, please read the &lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the tool can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/columnpresencechecker&#34;&gt;find missing null constraints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/lengthconstraintchecker&#34;&gt;find missing length validations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/nullconstraintchecker&#34;&gt;find missing presence validations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/uniqueindexchecker&#34;&gt;find missing uniqueness validations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/foreignkeychecker&#34;&gt;find missing foreign keys for &lt;code&gt;BelongsTo&lt;/code&gt; associations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/missinguniqueindexchecker&#34;&gt;find missing unique indexes for uniqueness validation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/missingindexchecker&#34;&gt;find missing indexes for &lt;code&gt;HasOne&lt;/code&gt; and &lt;code&gt;HasMany&lt;/code&gt; associations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/primarykeytypechecker&#34;&gt;find primary keys with integer/serial type&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/foreignkeytypechecker&#34;&gt;find mismatching primary key types with their foreign keys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/redundantindexchecker&#34;&gt;find redundant non-unique indexes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/redundantuniqueindexchecker&#34;&gt;find redundant uniqueness constraints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/enumtypechecker&#34;&gt;find mismatching enum types with their values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/foreignkeycascadechecker&#34;&gt;find mismatching foreign key cascades&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/enumvaluechecker&#34;&gt;find inconsistent values between enums in the database and ActiveRecord&#39;s enums/inclusion validations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/casesensitiveuniquevalidationchecker&#34;&gt;find redundant &lt;code&gt;case_sensitive: false&lt;/code&gt; option for unique validations for case-insensitive types&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides that, the tool provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/auto-correction&#34;&gt;auto-correction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/configuration&#34;&gt;flexible configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/wiki/generate-todo&#34;&gt;slow start with TODO files&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We support the following databases: &lt;code&gt;SQLite3&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt; and &lt;code&gt;MySQL&lt;/code&gt;.&lt;br&gt; We support &lt;a href=&#34;https://github.com/rails/rails/tree/master/activerecord&#34;&gt;ActiveRecord&lt;/a&gt; only at the moment. Please upvote the request for other frameworks if you&#39;re interested.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;database_consistency&#39;, group: :development, require: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle exec database_consistency&#xA;NullConstraintChecker fail User code column is required in the database but do not have presence validator&#xA;NullConstraintChecker fail User company_id column is required in the database but do not have presence validator for association (company)&#xA;LengthConstraintChecker fail Company note column has limit in the database but do not have length validator&#xA;MissingUniqueIndexChecker fail User name+email model should have proper unique index in the database&#xA;ForeignKeyChecker fail User company should have foreign key in the database&#xA;ForeignKeyTypeChecker fail User company associated model key (id) with type (integer) mismatches key (company_id) with type (integer(8))&#xA;MissingIndexChecker fail Company user associated model should have proper index in the database&#xA;ForeignKeyTypeChecker fail Company user associated model key (company_id) with type (integer(8)) mismatches key (id) with type (integer)&#xA;MissingIndexChecker fail Country users associated model should have proper index in the database&#xA;ColumnPresenceChecker fail User phone column should be required in the database&#xA;ColumnPresenceChecker fail User name column is required but there is possible null value insert&#xA;UniqueIndexChecker fail User index_users_on_name_and_slug index is unique in the database but do not have uniqueness validator&#xA;RedundantUniqueIndexChecker fail User index_users_on_name_and_slug index uniqueness is redundant as (index_users_on_slug) covers it&#xA;RedundantIndexChecker fail User index_users_on_phone index is redundant as (index_users_on_phone_and_slug) covers it&#xA;ColumnPresenceChecker fail User tmp column (tmp) is missing in table (users) but used for presence validation&#xA;ForeignKeyTypeChecker fail User something association (something) of class (User) relies on field (something_id) of table (users) but it is missing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Funding&lt;/h2&gt; &#xA;&lt;h3&gt;Open Collective Backers&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;re an individual who wants to support the project with a monthly donation. Your logo will be available on the Github page. [&lt;a href=&#34;https://opencollective.com/database_consistency#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/database_consistency/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/backer/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/backer/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Open Collective Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;re an organization that wants to support the project with a monthly donation. Your logo will be available on the Github page. [&lt;a href=&#34;https://opencollective.com/database_consistency#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/database_consistency/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/database_consistency/sponsor/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/djezzzl/database_consistency/issues&#34;&gt;Bug reports&lt;/a&gt; and &lt;a href=&#34;https://github.com/djezzzl/database_consistency/pulls&#34;&gt;pull requests&lt;/a&gt; are welcome on GitHub. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the &lt;a href=&#34;http://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; code of conduct.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Everyone interacting in the &lt;em&gt;DatabaseConsistency&lt;/em&gt; project’s codebases, issue trackers, chat rooms and mailing lists is expected to follow the &lt;a href=&#34;https://raw.githubusercontent.com/djezzzl/database_consistency/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;DatabaseConsistency&lt;/em&gt;&#39;s changelog is available &lt;a href=&#34;https://raw.githubusercontent.com/djezzzl/database_consistency/master/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Evgeniy Demin. See &lt;a href=&#34;https://raw.githubusercontent.com/djezzzl/database_consistency/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; for further details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kinduff/dogapi.dog</title>
    <updated>2022-12-30T01:40:00Z</updated>
    <id>tag:github.com,2022-12-30:/kinduff/dogapi.dog</id>
    <link href="https://github.com/kinduff/dogapi.dog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Dog API provides dog facts as a service!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐶 Dog API&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Dog API&lt;/strong&gt; provides information on over 340 dog breeds, 20 breed groups, and fun facts. Our data is accurate and constantly updated. Easily integrate this information into your own website or application with our user-friendly API. Get started today and discover more about the world of dogs.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with this API, you will need to have Ruby and Rails installed on your system. You will also need to have a PostgreSQL database set up and running.&lt;/p&gt; &#xA;&lt;p&gt;Once you have these prerequisites installed, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository to your local machine&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the project directory and run &lt;code&gt;bundle install&lt;/code&gt; to install all necessary dependencies&lt;/li&gt; &#xA; &lt;li&gt;Set up the database by running &lt;code&gt;rails db:setup&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the API server by running &lt;code&gt;rails server&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to this project! If you have an idea for a new feature or find a bug, please open an issue in this repository.&lt;/p&gt; &#xA;&lt;p&gt;To contribute code to the project, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repository&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch for your changes&lt;/li&gt; &#xA; &lt;li&gt;Make the necessary changes and commit them to your branch&lt;/li&gt; &#xA; &lt;li&gt;Push your branch to your forked repository&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request from your branch to this repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will review your changes and merge them into the project if they are approved.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/kinduff/dogapi.dog/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>learn-co-curriculum/phase-4-nested-resource-routing-lab</title>
    <updated>2022-12-30T01:40:00Z</updated>
    <id>tag:github.com,2022-12-30:/learn-co-curriculum/phase-4-nested-resource-routing-lab</id>
    <link href="https://github.com/learn-co-curriculum/phase-4-nested-resource-routing-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nested Resource Routing Lab&lt;/h1&gt; &#xA;&lt;h2&gt;Learning Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create nested routes&lt;/li&gt; &#xA; &lt;li&gt;Use params in nested routes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;In this lab, we&#39;ll continue working on our Craigslist-style marketplace API, and build out some nested routes to give users easier access to our data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;User -&amp;lt; Item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the lab set up by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ bundle install&#xA;$ rails db:migrate db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is seed data in place so you can test your solution out in Postman. You can also run &lt;code&gt;learn test&lt;/code&gt; to run the tests.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;You will need to handle the requests listed below and return the appropriate JSON data in the response.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; watch out for &lt;a href=&#34;https://api.rubyonrails.org/classes/AbstractController/DoubleRenderError.html&#34;&gt;Rails&#39; &lt;code&gt;DoubleRenderError&lt;/code&gt;&lt;/a&gt; as you work. The error is fairly straightforward: Rails only allows &lt;code&gt;render&lt;/code&gt; to be called once in an action. We have seen one way to avoid this error: by using conditional code to ensure that only one &lt;code&gt;render&lt;/code&gt; executes. A second way to avoid the error is to include an explicit &lt;code&gt;return&lt;/code&gt;, eg: &lt;code&gt;return render json: ...&lt;/code&gt; to keep any later &lt;code&gt;render&lt;/code&gt; statements from executing.&lt;/p&gt; &#xA;&lt;h3&gt;Nested Items Index Route&lt;/h3&gt; &#xA;&lt;p&gt;This route should show all items for one individual user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;GET /users/:user_id/items&#xA;&#xA;Response Body&#xA;-------&#xA;[&#xA;  {&#xA;    &#34;id&#34;: 1,&#xA;    &#34;name&#34;: &#34;Non-stick pan&#34;,&#xA;    &#34;description&#34;: &#34;Sticks a bit&#34;,&#xA;    &#34;price&#34;: 10,&#xA;    &#34;user_id&#34;: 1&#xA;  },&#xA;  {&#xA;    &#34;id&#34;: 1,&#xA;    &#34;name&#34;: &#34;Ceramic plant pots&#34;,&#xA;    &#34;description&#34;: &#34;Plants not included&#34;,&#xA;    &#34;price&#34;: 31,&#xA;    &#34;user_id&#34;: 1&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nested Item Show Route&lt;/h3&gt; &#xA;&lt;p&gt;This route should show one item matching the &lt;code&gt;:id&lt;/code&gt; from the URL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;GET /users/:user_id/items/:id&#xA;&#xA;Response Body&#xA;-------&#xA;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;name&#34;: &#34;Non-stick pan&#34;,&#xA;  &#34;description&#34;: &#34;Sticks a bit&#34;,&#xA;  &#34;price&#34;: 10,&#xA;  &#34;user_id&#34;: 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nested Item Create Route&lt;/h3&gt; &#xA;&lt;p&gt;This route should create a new item that belongs to a user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;POST /users/:user_id/items&#xA;&#xA;Headers:&#xA;-------&#xA;Content-Type: application/json&#xA;&#xA;Request Body:&#xA;-------&#xA;{&#xA;  &#34;name&#34;: &#34;Garden gnomes&#34;,&#xA;  &#34;description&#34;: &#34;No refunds&#34;,&#xA;  &#34;price&#34;: 23&#xA;}&#xA;&#xA;Response Body:&#xA;-------&#xA;{&#xA;  &#34;id&#34;: 2,&#xA;  &#34;name&#34;: &#34;Garden gnomes&#34;,&#xA;  &#34;description&#34;: &#34;No refunds&#34;,&#xA;  &#34;price&#34;: 23,&#xA;  &#34;user_id&#34;: 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/routing.html#nested-resources&#34;&gt;Routing: Nested Resources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>