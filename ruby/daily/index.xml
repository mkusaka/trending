<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T01:32:25Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>heartcombo/devise</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/heartcombo/devise</id>
    <link href="https://github.com/heartcombo/devise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexible authentication solution for Rails with Warden.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/heartcombo/devise/main/devise.png&#34; alt=&#34;Devise Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codeclimate.com/github/heartcombo/devise&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/heartcombo/devise.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Devise is a flexible authentication solution for Rails based on Warden. It:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is Rack based;&lt;/li&gt; &#xA; &lt;li&gt;Is a complete MVC solution based on Rails engines;&lt;/li&gt; &#xA; &lt;li&gt;Allows you to have multiple models signed in at the same time;&lt;/li&gt; &#xA; &lt;li&gt;Is based on a modularity concept: use only what you really need.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s composed of 10 modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/DatabaseAuthenticatable&#34;&gt;Database Authenticatable&lt;/a&gt;: hashes and stores a password in the database to validate the authenticity of a user while signing in. The authentication can be done both through POST requests or HTTP Basic Authentication.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Omniauthable&#34;&gt;Omniauthable&lt;/a&gt;: adds OmniAuth (&lt;a href=&#34;https://github.com/omniauth/omniauth&#34;&gt;https://github.com/omniauth/omniauth&lt;/a&gt;) support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Confirmable&#34;&gt;Confirmable&lt;/a&gt;: sends emails with confirmation instructions and verifies whether an account is already confirmed during sign in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Recoverable&#34;&gt;Recoverable&lt;/a&gt;: resets the user password and sends reset instructions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Registerable&#34;&gt;Registerable&lt;/a&gt;: handles signing up users through a registration process, also allowing them to edit and destroy their account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Rememberable&#34;&gt;Rememberable&lt;/a&gt;: manages generating and clearing a token for remembering the user from a saved cookie.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Trackable&#34;&gt;Trackable&lt;/a&gt;: tracks sign in count, timestamps and IP address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Timeoutable&#34;&gt;Timeoutable&lt;/a&gt;: expires sessions that have not been active in a specified period of time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Validatable&#34;&gt;Validatable&lt;/a&gt;: provides validations of email and password. It&#39;s optional and can be customized, so you&#39;re able to define your own validations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Lockable&#34;&gt;Lockable&lt;/a&gt;: locks an account after a specified number of failed sign-in attempts. Can unlock via email or after a specified time period.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- TOC depthFrom:1 depthTo:6 withLinks:1 orderedList:0 --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#information&#34;&gt;Information&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#the-devise-wiki&#34;&gt;The Devise wiki&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#bug-reports&#34;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#stackoverflow-and-mailing-list&#34;&gt;StackOverflow and Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#rdocs&#34;&gt;RDocs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#example-applications&#34;&gt;Example applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#starting-with-rails&#34;&gt;Starting with Rails?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#controller-filters-and-helpers&#34;&gt;Controller filters and helpers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-models&#34;&gt;Configuring Models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#strong-parameters&#34;&gt;Strong Parameters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-views&#34;&gt;Configuring views&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-controllers&#34;&gt;Configuring controllers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-routes&#34;&gt;Configuring routes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#i18n&#34;&gt;I18n&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#test-helpers&#34;&gt;Test helpers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#controller-tests&#34;&gt;Controller tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#integration-tests&#34;&gt;Integration tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#omniauth&#34;&gt;OmniAuth&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-multiple-models&#34;&gt;Configuring multiple models&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#activejob-integration&#34;&gt;ActiveJob Integration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#password-reset-tokens-and-rails-logs&#34;&gt;Password reset tokens and Rails logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#other-orms&#34;&gt;Other ORMs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#rails-api-mode&#34;&gt;Rails API mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#additional-information&#34;&gt;Additional information&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#warden&#34;&gt;Warden&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h2&gt;Information&lt;/h2&gt; &#xA;&lt;h3&gt;The Devise wiki&lt;/h3&gt; &#xA;&lt;p&gt;The Devise Wiki has lots of additional information about Devise including many &#34;how-to&#34; articles and answers to the most frequently asked questions. Please browse the Wiki after finishing this README:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki&#34;&gt;https://github.com/heartcombo/devise/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bug reports&lt;/h3&gt; &#xA;&lt;p&gt;If you discover a problem with Devise, we would like to know about it. However, we ask that you please review these guidelines before submitting a bug report:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Bug-reports&#34;&gt;https://github.com/heartcombo/devise/wiki/Bug-reports&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have discovered a security related bug, please do &lt;em&gt;NOT&lt;/em&gt; use the GitHub issue tracker. Send an email to &lt;a href=&#34;mailto:heartcombo@googlegroups.com&#34;&gt;heartcombo@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;StackOverflow and Mailing List&lt;/h3&gt; &#xA;&lt;p&gt;If you have any questions, comments, or concerns, please use StackOverflow instead of the GitHub issue tracker:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/devise&#34;&gt;http://stackoverflow.com/questions/tagged/devise&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The deprecated mailing list can still be read on&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/group/plataformatec-devise&#34;&gt;https://groups.google.com/group/plataformatec-devise&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RDocs&lt;/h3&gt; &#xA;&lt;p&gt;You can view the Devise documentation in RDoc format here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://rubydoc.info/github/heartcombo/devise/main/frames&#34;&gt;http://rubydoc.info/github/heartcombo/devise/main/frames&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you need to use Devise with previous versions of Rails, you can always run &#34;gem server&#34; from the command line after you install the gem to access the old documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Example applications&lt;/h3&gt; &#xA;&lt;p&gt;There are a few example applications available on GitHub that demonstrate various features of Devise with different versions of Rails. You can view them here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Example-Applications&#34;&gt;https://github.com/heartcombo/devise/wiki/Example-Applications&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extensions&lt;/h3&gt; &#xA;&lt;p&gt;Our community has created a number of extensions that add functionality above and beyond what is included with Devise. You can view a list of available extensions and add your own here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Extensions&#34;&gt;https://github.com/heartcombo/devise/wiki/Extensions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We hope that you will consider contributing to Devise. Please read this short overview for some information about how to get started:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/Contributing&#34;&gt;https://github.com/heartcombo/devise/wiki/Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will usually want to write tests for your changes. To run the test suite, go into Devise&#39;s top-level directory and run &lt;code&gt;bundle install&lt;/code&gt; and &lt;code&gt;bin/test&lt;/code&gt;. Devise works with multiple Ruby and Rails versions, and ActiveRecord and Mongoid ORMs, which means you can run the test suite with some modifiers: &lt;code&gt;DEVISE_ORM&lt;/code&gt; and &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;DEVISE_ORM&lt;/h3&gt; &#xA;&lt;p&gt;Since Devise supports both Mongoid and ActiveRecord, we rely on this variable to run specific code for each ORM. The default value of &lt;code&gt;DEVISE_ORM&lt;/code&gt; is &lt;code&gt;active_record&lt;/code&gt;. To run the tests for Mongoid, you can pass &lt;code&gt;mongoid&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DEVISE_ORM=mongoid bin/test&#xA;&#xA;==&amp;gt; Devise.orm = :mongoid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When running the tests for Mongoid, you will need to have a MongoDB server (version 2.0 or newer) running on your system.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the command output will show the variable value being used.&lt;/p&gt; &#xA;&lt;h3&gt;BUNDLE_GEMFILE&lt;/h3&gt; &#xA;&lt;p&gt;We can use this variable to tell bundler what Gemfile it should use (instead of the one in the current directory). Inside the &lt;a href=&#34;https://github.com/heartcombo/devise/tree/main/gemfiles&#34;&gt;gemfiles&lt;/a&gt; directory, we have one for each version of Rails we support. When you send us a pull request, it may happen that the test suite breaks using some of them. If that&#39;s the case, you can simulate the same environment using the &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt; variable. For example, if the tests broke using Ruby 2.4.2 and Rails 4.1, you can do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rbenv shell 2.4.2 # or rvm use 2.4.2&#xA;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bundle install&#xA;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bin/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also combine both of them if the tests broke for Mongoid:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bundle install&#xA;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable DEVISE_ORM=mongoid bin/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;p&gt;Devise uses &lt;a href=&#34;https://github.com/seattlerb/minitest&#34;&gt;Mini Test&lt;/a&gt; as test framework.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running all tests:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running tests for an specific file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/test test/models/trackable_test.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running a specific test given a regex:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/test test/models/trackable_test.rb:16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Starting with Rails?&lt;/h2&gt; &#xA;&lt;p&gt;If you are building your first Rails application, we recommend you &lt;em&gt;do not&lt;/em&gt; use Devise. Devise requires a good understanding of the Rails Framework. In such cases, we advise you to start a simple authentication system from scratch. Here&#39;s a few resources that should help you get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Michael Hartl&#39;s online book: &lt;a href=&#34;https://www.railstutorial.org/book/modeling_users&#34;&gt;https://www.railstutorial.org/book/modeling_users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ryan Bates&#39; Railscasts: &lt;a href=&#34;http://railscasts.com/episodes/250-authentication-from-scratch&#34;&gt;http://railscasts.com/episodes/250-authentication-from-scratch&lt;/a&gt; and &lt;a href=&#34;http://railscasts.com/episodes/250-authentication-from-scratch-revised&#34;&gt;http://railscasts.com/episodes/250-authentication-from-scratch-revised&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codecademy&#39;s Ruby on Rails: Authentication and Authorization: &lt;a href=&#34;https://www.codecademy.com/learn/rails-auth&#34;&gt;https://www.codecademy.com/learn/rails-auth&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have solidified your understanding of Rails and authentication mechanisms, we assure you Devise will be very pleasant to work with. &lt;span&gt;😃&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Devise 4.0 works with Rails 4.1 onwards. Add the following line to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;devise&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you need to run the generator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, a number of instructions will appear in the console. Among these instructions, you&#39;ll need to set up the default URL options for the Devise mailer in each environment. Here is a possible configuration for &lt;code&gt;config/environments/development.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.action_mailer.default_url_options = { host: &#39;localhost&#39;, port: 3000 }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generator will install an initializer which describes ALL of Devise&#39;s configuration options. It is &lt;em&gt;imperative&lt;/em&gt; that you take a look at it. When you are done, you are ready to add Devise to any of your models using the generator.&lt;/p&gt; &#xA;&lt;p&gt;In the following command you will replace &lt;code&gt;MODEL&lt;/code&gt; with the class name used for the application’s users (it’s frequently &lt;code&gt;User&lt;/code&gt; but could also be &lt;code&gt;Admin&lt;/code&gt;). This will create a model (if one does not exist) and configure it with the default Devise modules. The generator also configures your &lt;code&gt;config/routes.rb&lt;/code&gt; file to point to the Devise controller.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise MODEL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, check the MODEL for any additional configuration options you might want to add, such as confirmable or lockable. If you add an option, be sure to inspect the migration file (created by the generator if your ORM supports them) and uncomment the appropriate section. For example, if you add the confirmable option in the model, you&#39;ll need to uncomment the Confirmable section in the migration.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should restart your application after changing Devise&#39;s configuration options (this includes stopping spring). Otherwise, you will run into strange errors, for example, users being unable to login and route helpers being undefined.&lt;/p&gt; &#xA;&lt;h3&gt;Controller filters and helpers&lt;/h3&gt; &#xA;&lt;p&gt;Devise will create some helpers to use inside your controllers and views. To set up a controller with user authentication, just add this before_action (assuming your devise model is &#39;User&#39;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;before_action :authenticate_user!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 5, note that &lt;code&gt;protect_from_forgery&lt;/code&gt; is no longer prepended to the &lt;code&gt;before_action&lt;/code&gt; chain, so if you have set &lt;code&gt;authenticate_user&lt;/code&gt; before &lt;code&gt;protect_from_forgery&lt;/code&gt;, your request will result in &#34;Can&#39;t verify CSRF token authenticity.&#34; To resolve this, either change the order in which you call them, or use &lt;code&gt;protect_from_forgery prepend: true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your devise model is something other than User, replace &#34;_user&#34; with &#34;_yourmodel&#34;. The same logic applies to the instructions below.&lt;/p&gt; &#xA;&lt;p&gt;To verify if a user is signed in, use the following helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user_signed_in?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the current signed-in user, this helper is available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;current_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can access the session for this scope:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user_session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After signing in a user, confirming the account or updating the password, Devise will look for a scoped root path to redirect to. For instance, when using a &lt;code&gt;:user&lt;/code&gt; resource, the &lt;code&gt;user_root_path&lt;/code&gt; will be used if it exists; otherwise, the default &lt;code&gt;root_path&lt;/code&gt; will be used. This means that you need to set the root inside your routes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;root to: &#39;home#index&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also override &lt;code&gt;after_sign_in_path_for&lt;/code&gt; and &lt;code&gt;after_sign_out_path_for&lt;/code&gt; to customize your redirect hooks.&lt;/p&gt; &#xA;&lt;p&gt;Notice that if your Devise model is called &lt;code&gt;Member&lt;/code&gt; instead of &lt;code&gt;User&lt;/code&gt;, for example, then the helpers available are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;before_action :authenticate_member!&#xA;&#xA;member_signed_in?&#xA;&#xA;current_member&#xA;&#xA;member_session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring Models&lt;/h3&gt; &#xA;&lt;p&gt;The Devise method in your models also accepts some options to configure its modules. For example, you can choose the cost of the hashing algorithm with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise :database_authenticatable, :registerable, :confirmable, :recoverable, stretches: 13&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Besides &lt;code&gt;:stretches&lt;/code&gt;, you can define &lt;code&gt;:pepper&lt;/code&gt;, &lt;code&gt;:encryptor&lt;/code&gt;, &lt;code&gt;:confirm_within&lt;/code&gt;, &lt;code&gt;:remember_for&lt;/code&gt;, &lt;code&gt;:timeout_in&lt;/code&gt;, &lt;code&gt;:unlock_in&lt;/code&gt; among other options. For more details, see the initializer file that was created when you invoked the &#34;devise:install&#34; generator described above. This file is usually located at &lt;code&gt;/config/initializers/devise.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Strong Parameters&lt;/h3&gt; &#xA;&lt;p&gt;The Parameter Sanitizer API has changed for Devise 4 &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For previous Devise versions see &lt;a href=&#34;https://github.com/heartcombo/devise/tree/3-stable#strong-parameters&#34;&gt;https://github.com/heartcombo/devise/tree/3-stable#strong-parameters&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;When you customize your own views, you may end up adding new attributes to forms. Rails 4 moved the parameter sanitization from the model to the controller, causing Devise to handle this concern at the controller as well.&lt;/p&gt; &#xA;&lt;p&gt;There are just three actions in Devise that allow any set of parameters to be passed down to the model, therefore requiring sanitization. Their names and default permitted parameters are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sign_in&lt;/code&gt; (&lt;code&gt;Devise::SessionsController#create&lt;/code&gt;) - Permits only the authentication keys (like &lt;code&gt;email&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sign_up&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#create&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_confirmation&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;account_update&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#update&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;password_confirmation&lt;/code&gt; and &lt;code&gt;current_password&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case you want to permit additional parameters (the lazy way™), you can do so using a simple before action in your &lt;code&gt;ApplicationController&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  before_action :configure_permitted_parameters, if: :devise_controller?&#xA;&#xA;  protected&#xA;&#xA;  def configure_permitted_parameters&#xA;    devise_parameter_sanitizer.permit(:sign_up, keys: [:username])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above works for any additional fields where the parameters are simple scalar types. If you have nested attributes (say you&#39;re using &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;), then you will need to tell devise about those nestings and types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  before_action :configure_permitted_parameters, if: :devise_controller?&#xA;&#xA;  protected&#xA;&#xA;  def configure_permitted_parameters&#xA;    devise_parameter_sanitizer.permit(:sign_up, keys: [:first_name, :last_name, address_attributes: [:country, :state, :city, :area, :postal_code]])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Devise allows you to completely change Devise defaults or invoke custom behavior by passing a block:&lt;/p&gt; &#xA;&lt;p&gt;To permit simple scalar values for username and email, use this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def configure_permitted_parameters&#xA;  devise_parameter_sanitizer.permit(:sign_in) do |user_params|&#xA;    user_params.permit(:username, :email)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have some checkboxes that express the roles a user may take on registration, the browser will send those selected checkboxes as an array. An array is not one of Strong Parameters&#39; permitted scalars, so we need to configure Devise in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def configure_permitted_parameters&#xA;  devise_parameter_sanitizer.permit(:sign_up) do |user_params|&#xA;    user_params.permit({ roles: [] }, :email, :password, :password_confirmation)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the list of permitted scalars, and how to declare permitted keys in nested hashes and arrays, see&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rails/strong_parameters#nested-parameters&#34;&gt;https://github.com/rails/strong_parameters#nested-parameters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have multiple Devise models, you may want to set up a different parameter sanitizer per model. In this case, we recommend inheriting from &lt;code&gt;Devise::ParameterSanitizer&lt;/code&gt; and adding your own logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class User::ParameterSanitizer &amp;lt; Devise::ParameterSanitizer&#xA;  def initialize(*)&#xA;    super&#xA;    permit(:sign_up, keys: [:username, :email])&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then configure your controllers to use it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ApplicationController &amp;lt; ActionController::Base&#xA;  protected&#xA;&#xA;  def devise_parameter_sanitizer&#xA;    if resource_class == User&#xA;      User::ParameterSanitizer.new(User, :user, params)&#xA;    else&#xA;      super # Use the default one&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example above overrides the permitted parameters for the user to be both &lt;code&gt;:username&lt;/code&gt; and &lt;code&gt;:email&lt;/code&gt;. The non-lazy way to configure parameters would be by defining the before filter above in a custom controller. We detail how to configure and customize controllers in some sections below.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring views&lt;/h3&gt; &#xA;&lt;p&gt;We built Devise to help you quickly develop an application that uses authentication. However, we don&#39;t want to be in your way when you need to customize it.&lt;/p&gt; &#xA;&lt;p&gt;Since Devise is an engine, all its views are packaged inside the gem. These views will help you get started, but after some time you may want to change them. If this is the case, you just need to invoke the following generator, and it will copy all views to your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:views&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have more than one Devise model in your application (such as &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Admin&lt;/code&gt;), you will notice that Devise uses the same views for all models. Fortunately, Devise offers an easy way to customize views. All you need to do is set &lt;code&gt;config.scoped_views = true&lt;/code&gt; inside the &lt;code&gt;config/initializers/devise.rb&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;After doing so, you will be able to have views based on the role like &lt;code&gt;users/sessions/new&lt;/code&gt; and &lt;code&gt;admins/sessions/new&lt;/code&gt;. If no view is found within the scope, Devise will use the default view at &lt;code&gt;devise/sessions/new&lt;/code&gt;. You can also use the generator to generate scoped views:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:views users&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to generate only a few sets of views, like the ones for the &lt;code&gt;registerable&lt;/code&gt; and &lt;code&gt;confirmable&lt;/code&gt; module, you can pass a list of modules to the generator with the &lt;code&gt;-v&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:views -v registrations confirmations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring controllers&lt;/h3&gt; &#xA;&lt;p&gt;If the customization at the views level is not enough, you can customize each controller by following these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create your custom controllers using the generator which requires a scope:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rails generate devise:controllers [scope]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you specify &lt;code&gt;users&lt;/code&gt; as the scope, controllers will be created in &lt;code&gt;app/controllers/users/&lt;/code&gt;. And the sessions controller will look like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController&#xA;  # GET /resource/sign_in&#xA;  # def new&#xA;  #   super&#xA;  # end&#xA;  ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Use the -c flag to specify a controller, for example: &lt;code&gt;rails generate devise:controllers users -c=sessions&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tell the router to use this controller:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_for :users, controllers: { sessions: &#39;users/sessions&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the views from &lt;code&gt;devise/sessions&lt;/code&gt; to &lt;code&gt;users/sessions&lt;/code&gt;. Since the controller was changed, it won&#39;t use the default views located in &lt;code&gt;devise/sessions&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, change or extend the desired controller actions.&lt;/p&gt; &lt;p&gt;You can completely override a controller action:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController&#xA;  def create&#xA;    # custom sign-in code&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or you can simply add new behavior to it:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController&#xA;  def create&#xA;    super do |resource|&#xA;      BackgroundWorker.trigger(resource)&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for triggering background jobs or logging events during certain actions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Remember that Devise uses flash messages to let users know if sign in was successful or unsuccessful. Devise expects your application to call &lt;code&gt;flash[:notice]&lt;/code&gt; and &lt;code&gt;flash[:alert]&lt;/code&gt; as appropriate. Do not print the entire flash hash, print only specific keys. In some circumstances, Devise adds a &lt;code&gt;:timedout&lt;/code&gt; key to the flash hash, which is not meant for display. Remove this key from the hash if you intend to print the entire hash.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring routes&lt;/h3&gt; &#xA;&lt;p&gt;Devise also ships with default routes. If you need to customize them, you should probably be able to do it through the devise_for method. It accepts several options like :class_name, :path_prefix and so on, including the possibility to change path names for I18n:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_for :users, path: &#39;auth&#39;, path_names: { sign_in: &#39;login&#39;, sign_out: &#39;logout&#39;, password: &#39;secret&#39;, confirmation: &#39;verification&#39;, unlock: &#39;unblock&#39;, registration: &#39;register&#39;, sign_up: &#39;cmon_let_me_in&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to check &lt;code&gt;devise_for&lt;/code&gt; &lt;a href=&#34;http://www.rubydoc.info/github/heartcombo/devise/main/ActionDispatch/Routing/Mapper%3Adevise_for&#34;&gt;documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;If you have the need for more deep customization, for instance to also allow &#34;/sign_in&#34; besides &#34;/users/sign_in&#34;, all you need to do is create your routes normally and wrap them in a &lt;code&gt;devise_scope&lt;/code&gt; block in the router:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_scope :user do&#xA;  get &#39;sign_in&#39;, to: &#39;devise/sessions#new&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way, you tell Devise to use the scope &lt;code&gt;:user&lt;/code&gt; when &#34;/sign_in&#34; is accessed. Notice &lt;code&gt;devise_scope&lt;/code&gt; is also aliased as &lt;code&gt;as&lt;/code&gt; in your router.&lt;/p&gt; &#xA;&lt;p&gt;Please note: You will still need to add &lt;code&gt;devise_for&lt;/code&gt; in your routes in order to use helper methods such as &lt;code&gt;current_user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;devise_for :users, skip: :all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;I18n&lt;/h3&gt; &#xA;&lt;p&gt;Devise uses flash messages with I18n, in conjunction with the flash keys :notice and :alert. To customize your app, you can set up your locale file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  devise:&#xA;    sessions:&#xA;      signed_in: &#39;Signed in successfully.&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create distinct messages based on the resource you&#39;ve configured using the singular name given in routes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  devise:&#xA;    sessions:&#xA;      user:&#xA;        signed_in: &#39;Welcome user, you are signed in.&#39;&#xA;      admin:&#xA;        signed_in: &#39;Hello admin!&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Devise mailer uses a similar pattern to create subject messages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;en:&#xA;  devise:&#xA;    mailer:&#xA;      confirmation_instructions:&#xA;        subject: &#39;Hello everybody!&#39;&#xA;        user_subject: &#39;Hello User! Please confirm your email&#39;&#xA;      reset_password_instructions:&#xA;        subject: &#39;Reset instructions&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at our locale file to check all available messages. You may also be interested in one of the many translations that are available on our wiki:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/I18n&#34;&gt;https://github.com/heartcombo/devise/wiki/I18n&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Caution: Devise Controllers inherit from ApplicationController. If your app uses multiple locales, you should be sure to set I18n.locale in ApplicationController.&lt;/p&gt; &#xA;&lt;h3&gt;Test helpers&lt;/h3&gt; &#xA;&lt;p&gt;Devise includes some test helpers for controller and integration tests. In order to use them, you need to include the respective module in your test cases/specs.&lt;/p&gt; &#xA;&lt;h3&gt;Controller tests&lt;/h3&gt; &#xA;&lt;p&gt;Controller tests require that you include &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; on your test case or its parent &lt;code&gt;ActionController::TestCase&lt;/code&gt; superclass. For Rails versions prior to 5, include &lt;code&gt;Devise::Test::ControllerHelpers&lt;/code&gt; instead, since the superclass for controller tests was changed to ActionDispatch::IntegrationTest (for more details, see the &lt;a href=&#34;https://raw.githubusercontent.com/heartcombo/devise/main/#integration-tests&#34;&gt;Integration tests&lt;/a&gt; section).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsControllerTest &amp;lt; ActionController::TestCase&#xA;  include Devise::Test::IntegrationHelpers # Rails &amp;gt;= 5&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsControllerTest &amp;lt; ActionController::TestCase&#xA;  include Devise::Test::ControllerHelpers # Rails &amp;lt; 5&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using RSpec, you can put the following inside a file named &lt;code&gt;spec/support/devise.rb&lt;/code&gt; or in your &lt;code&gt;spec/spec_helper.rb&lt;/code&gt; (or &lt;code&gt;spec/rails_helper.rb&lt;/code&gt; if you are using &lt;code&gt;rspec-rails&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include Devise::Test::ControllerHelpers, type: :controller&#xA;  config.include Devise::Test::ControllerHelpers, type: :view&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just be sure that this inclusion is made &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;require &#39;rspec/rails&#39;&lt;/code&gt; directive.&lt;/p&gt; &#xA;&lt;p&gt;Now you are ready to use the &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods on your controller tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;sign_in @user&#xA;sign_in @user, scope: :admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are testing Devise internal controllers or a controller that inherits from Devise&#39;s, you need to tell Devise which mapping should be used before a request. This is necessary because Devise gets this information from the router, but since controller tests do not pass through the router, it needs to be stated explicitly. For example, if you are testing the user scope, simply use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;test &#39;GET new&#39; do&#xA;  # Mimic the router behavior of setting the Devise scope through the env.&#xA;  @request.env[&#39;devise.mapping&#39;] = Devise.mappings[:user]&#xA;&#xA;  # Use the sign_in helper to sign in a fixture `User` record.&#xA;  sign_in users(:alice)&#xA;&#xA;  get :new&#xA;&#xA;  # assert something&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration tests&lt;/h3&gt; &#xA;&lt;p&gt;Integration test helpers are available by including the &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; module.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class PostsTests &amp;lt; ActionDispatch::IntegrationTest&#xA;  include Devise::Test::IntegrationHelpers&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can use the following &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods in your integration tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;sign_in users(:bob)&#xA;sign_in users(:bob), scope: :admin&#xA;&#xA;sign_out :user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RSpec users can include the &lt;code&gt;IntegrationHelpers&lt;/code&gt; module on their &lt;code&gt;:feature&lt;/code&gt; specs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include Devise::Test::IntegrationHelpers, type: :feature&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unlike controller tests, integration tests do not need to supply the &lt;code&gt;devise.mapping&lt;/code&gt; &lt;code&gt;env&lt;/code&gt; value, as the mapping can be inferred by the routes that are executed in your tests.&lt;/p&gt; &#xA;&lt;p&gt;You can read more about testing your Rails 3 - Rails 4 controllers with RSpec in the wiki:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&#34;&gt;https://github.com/heartcombo/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;OmniAuth&lt;/h3&gt; &#xA;&lt;p&gt;Devise comes with OmniAuth support out of the box to authenticate with other providers. To use it, simply specify your OmniAuth configuration in &lt;code&gt;config/initializers/devise.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.omniauth :github, &#39;APP_ID&#39;, &#39;APP_SECRET&#39;, scope: &#39;user,public_repo&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can read more about OmniAuth support in the wiki:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview&#34;&gt;https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuring multiple models&lt;/h3&gt; &#xA;&lt;p&gt;Devise allows you to set up as many Devise models as you want. If you want to have an Admin model with just authentication and timeout features, in addition to the User model above, just run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Create a migration with the required fields&#xA;create_table :admins do |t|&#xA;  t.string :email&#xA;  t.string :encrypted_password&#xA;  t.timestamps null: false&#xA;end&#xA;&#xA;# Inside your Admin model&#xA;devise :database_authenticatable, :timeoutable&#xA;&#xA;# Inside your routes&#xA;devise_for :admins&#xA;&#xA;# Inside your protected controller&#xA;before_action :authenticate_admin!&#xA;&#xA;# Inside your controllers and views&#xA;admin_signed_in?&#xA;current_admin&#xA;admin_session&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can simply run the Devise generator.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that those models will have completely different routes. They &lt;strong&gt;do not&lt;/strong&gt; and &lt;strong&gt;cannot&lt;/strong&gt; share the same controller for sign in, sign out and so on. In case you want to have different roles sharing the same actions, we recommend that you use a role-based approach, by either providing a role column or using a dedicated gem for authorization.&lt;/p&gt; &#xA;&lt;h3&gt;ActiveJob Integration&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Rails 4.2 and ActiveJob to deliver ActionMailer messages in the background through a queuing back-end, you can send Devise emails through your existing queue by overriding the &lt;code&gt;send_devise_notification&lt;/code&gt; method in your model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def send_devise_notification(notification, *args)&#xA;  devise_mailer.send(notification, self, *args).deliver_later&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Password reset tokens and Rails logs&lt;/h3&gt; &#xA;&lt;p&gt;If you enable the &lt;a href=&#34;http://rubydoc.info/github/heartcombo/devise/main/Devise/Models/Recoverable&#34;&gt;Recoverable&lt;/a&gt; module, note that a stolen password reset token could give an attacker access to your application. Devise takes effort to generate random, secure tokens, and stores only token digests in the database, never plaintext. However the default logging behavior in Rails can cause plaintext tokens to leak into log files:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Action Mailer logs the entire contents of all outgoing emails to the DEBUG level. Password reset tokens delivered to users in email will be leaked.&lt;/li&gt; &#xA; &lt;li&gt;Active Job logs all arguments to every enqueued job at the INFO level. If you configure Devise to use &lt;code&gt;deliver_later&lt;/code&gt; to send password reset emails, password reset tokens will be leaked.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Rails sets the production logger level to INFO by default. Consider changing your production logger level to WARN if you wish to prevent tokens from being leaked into your logs. In &lt;code&gt;config/environments/production.rb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.log_level = :warn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other ORMs&lt;/h3&gt; &#xA;&lt;p&gt;Devise supports ActiveRecord (default) and Mongoid. To select another ORM, simply require it in the initializer file.&lt;/p&gt; &#xA;&lt;h3&gt;Rails API Mode&lt;/h3&gt; &#xA;&lt;p&gt;Rails 5+ has a built-in &lt;a href=&#34;https://edgeguides.rubyonrails.org/api_app.html&#34;&gt;API Mode&lt;/a&gt; which optimizes Rails for use as an API (only). Devise is &lt;em&gt;somewhat&lt;/em&gt; able to handle applications that are built in this mode without additional modifications in the sense that it should not raise exceptions and the like. But some issues may still arise during &lt;code&gt;development&lt;/code&gt;/&lt;code&gt;testing&lt;/code&gt;, as we still don&#39;t know the full extent of this compatibility. (For more information, see &lt;a href=&#34;https://github.com/heartcombo/devise/issues/4947/&#34;&gt;issue #4947&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h4&gt;Supported Authentication Strategies&lt;/h4&gt; &#xA;&lt;p&gt;API-only applications don&#39;t support browser-based authentication via cookies, which is devise&#39;s default. Yet, devise can still provide authentication out of the box in those cases with the &lt;code&gt;http_authenticatable&lt;/code&gt; strategy, which uses HTTP Basic Auth and authenticates the user on each request. (For more info, see this wiki article for &lt;a href=&#34;https://github.com/heartcombo/devise/wiki/How-To:-Use-HTTP-Basic-Authentication&#34;&gt;How To: Use HTTP Basic Authentication&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;The devise default for HTTP Auth is disabled, so it will need to be enabled in the devise initializer for the database strategy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;config.http_authenticatable = [:database]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This restriction does not limit you from implementing custom warden strategies, either in your application or via gem-based extensions for devise. A common authentication strategy for APIs is token-based authentication. For more information on extending devise to support this type of authentication and others, see the wiki article for &lt;a href=&#34;https://github.com/heartcombo/devise/wiki/How-To:-Simple-Token-Authentication-Example#alternatives&#34;&gt;Simple Token Authentication Examples and alternatives&lt;/a&gt; or this blog post on &lt;a href=&#34;http://blog.plataformatec.com.br/2019/01/custom-authentication-methods-with-devise/&#34;&gt;Custom authentication methods with Devise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Testing&lt;/h4&gt; &#xA;&lt;p&gt;API Mode changes the order of the middleware stack, and this can cause problems for &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt;. This problem usually surfaces as an &lt;code&gt;undefined method `[]=&#39; for nil:NilClass&lt;/code&gt; error when using integration test helpers, such as &lt;code&gt;#sign_in&lt;/code&gt;. The solution is simply to reorder the middlewares by adding the following to test.rb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rails.application.config.middleware.insert_before Warden::Manager, ActionDispatch::Cookies&#xA;Rails.application.config.middleware.insert_before Warden::Manager, ActionDispatch::Session::CookieStore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a deeper understanding of this, review &lt;a href=&#34;https://github.com/heartcombo/devise/issues/4696&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally be mindful that without views supported, some email-based flows from Confirmable, Recoverable and Lockable are not supported directly at this time.&lt;/p&gt; &#xA;&lt;h2&gt;Additional information&lt;/h2&gt; &#xA;&lt;h3&gt;Warden&lt;/h3&gt; &#xA;&lt;p&gt;Devise is based on Warden, which is a general Rack authentication framework created by Daniel Neighman. We encourage you to read more about Warden here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wardencommunity/warden&#34;&gt;https://github.com/wardencommunity/warden&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;We have a long list of valued contributors. Check them all at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/heartcombo/devise/graphs/contributors&#34;&gt;https://github.com/heartcombo/devise/graphs/contributors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License. Copyright 2020 Rafael França, Leonardo Tegon, Carlos Antônio da Silva. Copyright 2009-2019 Plataformatec.&lt;/p&gt; &#xA;&lt;p&gt;The Devise logo is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chatwoot/chatwoot</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/chatwoot/chatwoot</id>
    <link href="https://github.com/chatwoot/chatwoot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source customer engagement suite, an alternative to Intercom, Zendesk, Salesforce Service Cloud etc. 🔥💬&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://s3.us-west-2.amazonaws.com/gh-assets.chatwoot.com/brand.svg?sanitize=true&#34; alt=&#34;Woot-logo&#34; width=&#34;240&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;Customer engagement suite, an open-source alternative to Intercom, Zendesk, Salesforce Service Cloud etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&#34; alt=&#34;Deploy to Heroku&#34;&gt; &lt;img width=&#34;150&#34; alt=&#34;Deploy&#34; src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&#34; alt=&#34;Deploy to DigitalOcean&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;Deploy to DO&#34; src=&#34;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://codeclimate.com/github/chatwoot/chatwoot/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/80f9e1a7c72d186289ad/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/circleci/build/github/chatwoot/chatwoot&#34; alt=&#34;CircleCI Badge&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/chatwoot/chatwoot/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/chatwoot/chatwoot&#34; alt=&#34;Docker Pull Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/chatwoot/chatwoot/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/cloud/build/chatwoot/chatwoot&#34; alt=&#34;Docker Build Badge&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/chatwoot/chatwoot&#34; alt=&#34;Commits-per-month&#34;&gt; &lt;a title=&#34;Crowdin&#34; target=&#34;_self&#34; href=&#34;https://chatwoot.crowdin.com/chatwoot&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/e/37ced7eba411064bd792feb3b7a28b16/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/cJXdrwS&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/647412545203994635&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huntr.dev/bounties/disclose&#34;&gt;&lt;img src=&#34;https://cdn.huntr.dev/huntr_security_badge_mono.svg?sanitize=true&#34; alt=&#34;Huntr&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://status.chatwoot.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fuptime.json&#34; alt=&#34;uptime&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://status.chatwoot.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fresponse-time.json&#34; alt=&#34;response time&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;img src=&#34;https://chatwoot-public-assets.s3.amazonaws.com/github/screenshot.png&#34; width=&#34;100%&#34; alt=&#34;Chat dashboard&#34;&gt; &#xA;&lt;p&gt;Chatwoot is an open-source, self-hosted customer engagement suite. Chatwoot lets you view and manage your customer data, communicate with them irrespective of which medium they use, and re-engage them based on their profile.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Chatwoot supports the following conversation channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: Talk to your customers using our live chat widget and make use of our SDK to identify a user and provide contextual support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Facebook&lt;/strong&gt;: Connect your Facebook pages and start replying to the direct messages to your page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instagram&lt;/strong&gt;: Connect your Instagram profile and start replying to the direct messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: Connect your Twitter profiles and reply to direct messages or the tweets where you are mentioned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Telegram&lt;/strong&gt;: Connect your Telegram bot and reply to your customers right from a single dashboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WhatsApp&lt;/strong&gt;: Connect your WhatsApp business account and manage the conversation in Chatwoot.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Line&lt;/strong&gt;: Connect your Line account and manage the conversations in Chatwoot.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SMS&lt;/strong&gt;: Connect your Twilio SMS account and reply to the SMS queries in Chatwoot.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API Channel&lt;/strong&gt;: Build custom communication channels using our API channel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;: Forward all your email queries to Chatwoot and view it in our integrated dashboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And more.&lt;/p&gt; &#xA;&lt;p&gt;Other features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CRM&lt;/strong&gt;: Save all your customer information right inside Chatwoot, use contact notes to log emails, phone calls, or meeting notes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Attributes&lt;/strong&gt;: Define custom attribute attributes to store information about a contact or a conversation and extend the product to match your workflow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shared multi-brand inboxes&lt;/strong&gt;: Manage multiple brands or pages using a shared inbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Private notes&lt;/strong&gt;: Use @mentions and private notes to communicate internally about a conversation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Canned responses (Saved replies)&lt;/strong&gt;: Improve the response rate by adding saved replies for frequently asked questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conversation Labels&lt;/strong&gt;: Use conversation labels to create custom workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto assignment&lt;/strong&gt;: Chatwoot intelligently assigns a ticket to the agents who have access to the inbox depending on their availability and load.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conversation continuity&lt;/strong&gt;: If the user has provided an email address through the chat widget, Chatwoot will send an email to the customer under the agent name so that the user can continue the conversation over the email.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-lingual support&lt;/strong&gt;: Chatwoot supports 10+ languages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful API &amp;amp; Webhooks&lt;/strong&gt;: Extend the capability of the software using Chatwoot’s webhooks and APIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt;: Chatwoot natively integrates with Slack right now. Manage your conversations in Slack without logging into the dashboard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Detailed documentation is available at &lt;a href=&#34;https://www.chatwoot.com/help-center&#34;&gt;chatwoot.com/help-center&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Translation process&lt;/h2&gt; &#xA;&lt;p&gt;The translation process for Chatwoot web and mobile app is managed at &lt;a href=&#34;https://translate.chatwoot.com&#34;&gt;https://translate.chatwoot.com&lt;/a&gt; using Crowdin. Please read the &lt;a href=&#34;https://www.chatwoot.com/docs/contributing/translating-chatwoot-to-your-language&#34;&gt;translation guide&lt;/a&gt; for contributing to Chatwoot.&lt;/p&gt; &#xA;&lt;h2&gt;Branching model&lt;/h2&gt; &#xA;&lt;p&gt;We use the &lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;git-flow&lt;/a&gt; branching model. The base branch is &lt;code&gt;develop&lt;/code&gt;. If you are looking for a stable version, please use the &lt;code&gt;master&lt;/code&gt; or tags labelled as &lt;code&gt;v1.x.x&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Heroku one-click deploy&lt;/h3&gt; &#xA;&lt;p&gt;Deploying Chatwoot to Heroku is a breeze. It&#39;s as simple as clicking this button:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow this &lt;a href=&#34;https://www.chatwoot.com/docs/environment-variables&#34;&gt;link&lt;/a&gt; to understand setting the correct environment variables for the app to work with all the features. There might be breakages if you do not set the relevant environment variables.&lt;/p&gt; &#xA;&lt;h3&gt;DigitalOcean 1-Click Kubernetes deployment&lt;/h3&gt; &#xA;&lt;p&gt;Chatwoot now supports 1-Click deployment to DigitalOcean as a kubernetes app.&lt;/p&gt; &#xA;&lt;a href=&#34;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&#34; alt=&#34;Deploy to DigitalOcean&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;Deploy to DO&#34; src=&#34;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Other deployment options&lt;/h3&gt; &#xA;&lt;p&gt;For other supported options, checkout our &lt;a href=&#34;https://chatwoot.com/deploy&#34;&gt;deployment page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Looking to report a vulnerability? Please refer our &lt;a href=&#34;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Community? Questions? Support ?&lt;/h2&gt; &#xA;&lt;p&gt;If you need help or just want to hang out, come, say hi on our &lt;a href=&#34;https://discord.gg/cJXdrwS&#34;&gt;Discord&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to all these &lt;a href=&#34;https://www.chatwoot.com/docs/contributors&#34;&gt;wonderful people&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/chatwoot/chatwoot/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/chatwoot/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Chatwoot&lt;/em&gt; © 2017-2022, Chatwoot Inc - Released under the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mastodon/mastodon</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/mastodon/mastodon</id>
    <link href="https://github.com/mastodon/mastodon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your self-hosted, globally interconnected microblogging community&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://i.imgur.com/NhZc40l.png&#34; alt=&#34;Mastodon&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mastodon/mastodon/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/mastodon/mastodon.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/mastodon/mastodon&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/mastodon/mastodon.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/mastodon/mastodon&#34;&gt;&lt;img src=&#34;https://img.shields.io/codeclimate/maintainability/mastodon/mastodon.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/mastodon&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/mastodon/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/tootsuite/mastodon/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/tootsuite/mastodon.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mastodon is a &lt;strong&gt;free, open-source social network server&lt;/strong&gt; based on ActivityPub where users can follow friends and discover new ones. On Mastodon, users can publish anything they want: links, pictures, text, video. All Mastodon servers are interoperable as a federated network (users on one server can seamlessly communicate with users from another one, including non-Mastodon software that implements ActivityPub)!&lt;/p&gt; &#xA;&lt;p&gt;Click below to &lt;strong&gt;learn more&lt;/strong&gt; in a video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IPSbNdBmWKE&#34;&gt;&lt;img src=&#34;https://blog.joinmastodon.org/2018/06/why-activitypub-is-the-future/ezgif-2-60f1b00403.gif&#34; alt=&#34;Screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Navigation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org&#34;&gt;Project homepage 🐘&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/mastodon&#34;&gt;Support the development via Patreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org/sponsors&#34;&gt;View sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.joinmastodon.org&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.joinmastodon.org&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org/communities&#34;&gt;Browse Mastodon servers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joinmastodon.org/apps&#34;&gt;Browse Mastodon apps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;img src=&#34;https://docs.joinmastodon.org/elephant.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;30%&#34;&gt; &#xA;&lt;h3&gt;No vendor lock-in: Fully interoperable with any conforming platform&lt;/h3&gt; &#xA;&lt;p&gt;It doesn&#39;t have to be Mastodon; whatever implements ActivityPub is part of the social network! &lt;a href=&#34;https://blog.joinmastodon.org/2018/06/why-activitypub-is-the-future/&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Real-time, chronological timeline updates&lt;/h3&gt; &#xA;&lt;p&gt;Updates of people you&#39;re following appear in real-time in the UI via WebSockets. There&#39;s a firehose view as well!&lt;/p&gt; &#xA;&lt;h3&gt;Media attachments like images and short videos&lt;/h3&gt; &#xA;&lt;p&gt;Upload and view images and WebM/MP4 videos attached to the updates. Videos with no audio track are treated like GIFs; normal videos loop continuously!&lt;/p&gt; &#xA;&lt;h3&gt;Safety and moderation tools&lt;/h3&gt; &#xA;&lt;p&gt;Mastodon includes private posts, locked accounts, phrase filtering, muting, blocking and all sorts of other features, along with a reporting and moderation system. &lt;a href=&#34;https://blog.joinmastodon.org/2018/07/cage-the-mastodon/&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;OAuth2 and a straightforward REST API&lt;/h3&gt; &#xA;&lt;p&gt;Mastodon acts as an OAuth2 provider, so 3rd party apps can use the REST and Streaming APIs. This results in a rich app ecosystem with a lot of choices!&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Tech stack:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt; powers the REST API and other web pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React.js&lt;/strong&gt; and Redux are used for the dynamic parts of the interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; powers the streaming API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; 9.5+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt; 4+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt; 2.5+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; 12+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The repository includes deployment configurations for &lt;strong&gt;Docker and docker-compose&lt;/strong&gt; as well as specific platforms like &lt;strong&gt;Heroku&lt;/strong&gt;, &lt;strong&gt;Scalingo&lt;/strong&gt;, and &lt;strong&gt;Nanobox&lt;/strong&gt;. The &lt;a href=&#34;https://docs.joinmastodon.org/admin/install/&#34;&gt;&lt;strong&gt;standalone&lt;/strong&gt; installation guide&lt;/a&gt; is available in the documentation.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;Vagrant&lt;/strong&gt; configuration is included for development purposes. To use it, complete following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Vagrant and Virtualbox&lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;code&gt;vagrant-hostsupdater&lt;/code&gt; plugin: &lt;code&gt;vagrant plugin install vagrant-hostsupdater&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;vagrant up&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;vagrant ssh -c &#34;cd /vagrant &amp;amp;&amp;amp; foreman start&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;http://mastodon.local&lt;/code&gt; in your browser&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Mastodon is &lt;strong&gt;free, open-source software&lt;/strong&gt; licensed under &lt;strong&gt;AGPLv3&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can open issues for bugs you&#39;ve found or features you think are missing. You can also submit pull requests to this repository or submit translations using Crowdin. To get started, take a look at &lt;a href=&#34;https://raw.githubusercontent.com/mastodon/mastodon/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;. If your contributions are accepted into Mastodon, you can request to be paid through &lt;a href=&#34;https://opencollective.com/mastodon&#34;&gt;our OpenCollective&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IRC channel&lt;/strong&gt;: #mastodon on irc.libera.chat&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2016-2022 Eugen Rochko &amp;amp; other Mastodon contributors (see &lt;a href=&#34;https://raw.githubusercontent.com/mastodon/mastodon/main/AUTHORS.md&#34;&gt;AUTHORS.md&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU Affero General Public License along with this program. If not, see &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jekyll/jekyll</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/jekyll/jekyll</id>
    <link href="https://github.com/jekyll/jekyll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌐 Jekyll is a blog-aware static site generator in Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/jekyll&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/jekyll.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jekyll/jekyll/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/jekyll/jekyll/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;Linux Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/jekyll/jekyll/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/jekyll/jekyll/master.svg?label=Windows%20build&#34; alt=&#34;Windows Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/jekyll/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/jekyll/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;Jekyll does what you tell it to do&amp;nbsp;— no more, no less. It doesn&#39;t try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://jekyllrb.com/philosophy&#34;&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/docs/installation/&#34;&gt;Install&lt;/a&gt; the gem&lt;/li&gt; &#xA; &lt;li&gt;Read up about its &lt;a href=&#34;https://jekyllrb.com/docs/usage/&#34;&gt;Usage&lt;/a&gt; and &lt;a href=&#34;https://jekyllrb.com/docs/configuration/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a gander at some existing &lt;a href=&#34;https://github.com/jekyll/jekyll/wiki/sites&#34;&gt;Sites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jekyll/jekyll/fork&#34;&gt;Fork&lt;/a&gt; and &lt;a href=&#34;https://jekyllrb.com/docs/contributing/&#34;&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt; &#xA; &lt;li&gt;Have questions? Check out our official forum community &lt;a href=&#34;https://talk.jekyllrb.com/&#34;&gt;Jekyll Talk&lt;/a&gt; and &lt;a href=&#34;https://libera.chat&#34;&gt;&lt;code&gt;#jekyll&lt;/code&gt; Channel on Libera IRC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Diving In&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://import.jekyllrb.com/docs/home/&#34;&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt; &#xA; &lt;li&gt;Learn how &lt;a href=&#34;https://jekyllrb.com/docs/front-matter/&#34;&gt;Front Matter&lt;/a&gt; works&lt;/li&gt; &#xA; &lt;li&gt;Put information on your site with &lt;a href=&#34;https://jekyllrb.com/docs/variables/&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Customize the &lt;a href=&#34;https://jekyllrb.com/docs/permalinks/&#34;&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt; &#xA; &lt;li&gt;Use the built-in &lt;a href=&#34;https://jekyllrb.com/docs/templates/&#34;&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt; &#xA; &lt;li&gt;Use custom &lt;a href=&#34;https://jekyllrb.com/docs/plugins/&#34;&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://jekyllrb.com/tutorials/video-walkthroughs/&#34;&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t find the answer to your problem in our &lt;a href=&#34;https://jekyllrb.com/docs/&#34;&gt;docs&lt;/a&gt;, or in the &lt;a href=&#34;https://jekyllrb.com/docs/troubleshooting/&#34;&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href=&#34;https://jekyllrb.com/docs/community/&#34;&gt;community&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a &lt;a href=&#34;https://jekyllrb.com/docs/conduct/&#34;&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of conduct.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our &lt;a href=&#34;https://jekyllrb.com/team/#core-team&#34;&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&#34;https://opencollective.com/jekyll#sponsor&#34;&gt;Become a sponsor!&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 9&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Jekyll Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 &lt;a href=&#34;https://opencollective.com/jekyll#backer&#34;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/jekyll#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/backers.svg?width=890&#34; alt=&#34;Jekyll Backers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jekyll/jekyll/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>joemasilotti/railsdevs.com</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/joemasilotti/railsdevs.com</id>
    <link href="https://github.com/joemasilotti/railsdevs.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The reverse job board for Ruby on Rails developers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rails Devs&lt;/h1&gt; &#xA;&lt;p&gt;The reverse job board for Rails developers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2092156/147028085-eea40303-c572-48c0-b107-0be93cce067c.png&#34; alt=&#34;railsdevs homepage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;railsdevs&lt;/code&gt; empowers independent developers available for their next gig. It is being built around &lt;a href=&#34;https://railsdevs.com/about&#34;&gt;three core values&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Empowering the independent developer&lt;/li&gt; &#xA; &lt;li&gt;Doing everything in public&lt;/li&gt; &#xA; &lt;li&gt;Creating a safe, inclusive environment&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You will need a few non-Ruby packages installed. Install these at once via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew bundle install --no-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or manually:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 3.1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/9.5/libpq.html&#34;&gt;libpq&lt;/a&gt; - &lt;code&gt;brew install libpq&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;libpg&lt;/code&gt; is needed to use the native &lt;code&gt;pg&lt;/code&gt; gem without Rosetta on M1 macs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;postgresql&lt;/a&gt; - &lt;code&gt;brew install postgresql&lt;/code&gt; [Note: PostgreSQL 13+ is required]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; - &lt;code&gt;brew install node&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com&#34;&gt;Yarn&lt;/a&gt; - &lt;code&gt;brew install yarn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io&#34;&gt;Redis&lt;/a&gt; - &lt;code&gt;brew install redis&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org&#34;&gt;Imagemagick&lt;/a&gt; - &lt;code&gt;brew install imagemagick&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/docs/stripe-cli&#34;&gt;Stripe CLI&lt;/a&gt; - &lt;code&gt;brew install stripe/stripe-cli/stripe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ddollar/foreman&#34;&gt;foreman&lt;/a&gt; - &lt;code&gt;gem install foreman&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google Chrome + Chromedriver for system tests - &lt;code&gt;brew install --cask google-chrome chromedriver&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Initial setup&lt;/h3&gt; &#xA;&lt;p&gt;Start PostgreSQL server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew services start postgresql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start Redis server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew services start redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An installation script is included with the repository that will automatically get the application setup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Run the following to start the server and automatically build assets.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires &lt;code&gt;foreman&lt;/code&gt; or &lt;code&gt;overmind&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Requires &lt;code&gt;stripe&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Seeds&lt;/h3&gt; &#xA;&lt;p&gt;Seeding the database, either via &lt;code&gt;rails db:seed&lt;/code&gt; or during &lt;code&gt;bin/setup&lt;/code&gt;, creates a few accounts. Most importantly, use &lt;code&gt;developer@example.com&lt;/code&gt; and &lt;code&gt;business@example.com&lt;/code&gt; with password &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information is in &lt;a href=&#34;https://raw.githubusercontent.com/joemasilotti/railsdevs.com/main/docs/seeds.md&#34;&gt;the docs on seeds&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stripe&lt;/h3&gt; &#xA;&lt;p&gt;You will need to configure Stripe or do a mock configuration (ie set dummy values for the last step listed below) if you are working on anything related to payments.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dashboard.stripe.com/register&#34;&gt;Register for Stripe&lt;/a&gt; and add an account&lt;/li&gt; &#xA; &lt;li&gt;Download the Stripe CLI via &lt;code&gt;brew install stripe/stripe-cli/stripe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Login to the Stripe CLI via &lt;code&gt;stripe login&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure your development credentials &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dashboard.stripe.com/test/apikeys&#34;&gt;Create a Stripe secret key for test mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;stripe listen --forward-to localhost:3000/pay/webhooks/stripe&lt;/code&gt; in order to generate your webhook signing secret.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dashboard.stripe.com/test/products/create&#34;&gt;Create a product&lt;/a&gt; with a recurring, monthly price&lt;/li&gt; &#xA;   &lt;li&gt;Generate your editable development credentials file via &lt;code&gt;EDITOR=&#34;mate --wait&#34; bin/rails credentials:edit --environment development&lt;/code&gt;. You may need to install and provide terminal access to the editor first (mate, subl, and atom should all work). If you run the code above and receive the message &#34;New credentials encrypted and saved&#34;, without having had the opportunity to edit the file first, things have gone astray. You will need to troubleshoot this step based on your OS and desired editor, to ensure you are able to edit the development.yml file before it is encoded and saved. &lt;a href=&#34;https://stackoverflow.com/questions/52370065/issue-to-open-credentials-file&#34;&gt;See here for more details.&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add the secret key, the price, and your webhook signing secret to your development credentials in the following format, and save/close the file:&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;stripe:&#xA;  private_key: sk_test_YOUR_TEST_STRIPE_KEY&#xA;  signing_secret: whsec_YOUR_SIGNING_SECRET&#xA;  price_ids:&#xA;    part_time_plan: price_YOUR_PRODUCT_PRICE_ID&#xA;    full_time_plan: price_ANOTHER_PRODUCT_PRICE_ID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;Application monitoring is powered by &lt;a href=&#34;https://scoutapm.com&#34;&gt;Scout APM&lt;/a&gt;. This helps identify N+1 queries, slow queries, memory bloats, and more. Scout APM is free for open source.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rails test&lt;/code&gt; to run unit/integration tests.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rails test:system&lt;/code&gt; to run system tests, using &lt;code&gt;headless_chrome&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;HEADFUL=1 rails test:system&lt;/code&gt; to run system tests, using &lt;code&gt;headful_chrome&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Significant changes and product updates are documented in the &lt;a href=&#34;https://raw.githubusercontent.com/joemasilotti/railsdevs.com/main/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Open source support&lt;/h2&gt; &#xA;&lt;p&gt;railsdevs uses a free or discounted open source plan from the following companies. Thank you for the support!&lt;/p&gt; &#xA;&lt;a href=&#34;https://tracking.scoutapm.com/t/102858/c/24eac3db-39dd-4863-b972-a35a3e35b72b/NB2HI4DTHIXS65DFOIXGY2JPNA4GWMRZOI======/ter-li-h8k29r&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/2092156/169346365-12f3806f-5a04-494a-a2d6-45611666c57c.png&#34; width=&#34;250&#34; alt=&#34;Scout APM logo&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>testdouble/mocktail</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/testdouble/mocktail</id>
    <link href="https://github.com/testdouble/mocktail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/79303/134366631-9c6cfe67-a9c0-4096-bbea-ba1698a85b0b.png&#34; width=&#34;90%&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Mocktail 🍸&lt;/h1&gt; &#xA;&lt;p&gt;Mocktail is a &lt;a href=&#34;https://github.com/testdouble/contributing-tests/wiki/Test-Double&#34;&gt;test double&lt;/a&gt; library for Ruby that provides a terse and robust API for creating mocks, getting them in the hands of the code you&#39;re testing, stub &amp;amp; verify behavior, and even safely override class methods.&lt;/p&gt; &#xA;&lt;h2&gt;An aperitif&lt;/h2&gt; &#xA;&lt;p&gt;Before getting into the details, let&#39;s demonstrate what Mocktail&#39;s API looks like. Suppose you want to test a &lt;code&gt;Bartender&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Bartender&#xA;  def initialize&#xA;    @shaker = Shaker.new&#xA;    @glass = Glass.new&#xA;    @bar = Bar.new&#xA;  end&#xA;&#xA;  def make_drink(name, customer:)&#xA;    if name == :negroni&#xA;      drink = @shaker.combine(:gin, :campari, :sweet_vermouth)&#xA;      @glass.pour!(drink)&#xA;      @bar.pass(@glass, to: customer)&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could write an isolated unit test with Mocktail like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;shaker = Mocktail.of_next(Shaker)&#xA;glass = Mocktail.of_next(Glass)&#xA;bar = Mocktail.of_next(Bar)&#xA;subject = Bartender.new&#xA;stubs { shaker.combine(:gin, :campari, :sweet_vermouth) }.with { :a_drink }&#xA;stubs { bar.pass(glass, to: &#34;Eileen&#34;) }.with { &#34;🎉&#34; }&#xA;&#xA;result = subject.make_drink(:negroni, customer: &#34;Eileen&#34;)&#xA;&#xA;assert_equal &#34;🎉&#34;, result&#xA;# Oh yeah, and make sure the drink got poured! Silly side effects!&#xA;verify { glass.pour!(:a_drink) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why Mocktail?&lt;/h2&gt; &#xA;&lt;p&gt;Besides helping you avoid a hangover, Mocktail offers several advantages over Ruby&#39;s other mocking libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simpler test recipes&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailof_next&#34;&gt;Mocktail.of_next(type)&lt;/a&gt; both creates your mock and supplies to your subject under test in a single one-liner. No more forcing dependency injection for the sake of your tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WYSIWYG API&lt;/strong&gt;: Want to know how to stub a call to &lt;code&gt;phone.dial(911)&lt;/code&gt;? You just demonstrate the call with &lt;code&gt;stubs { phone.dial(911) }.with { :operator }&lt;/code&gt;. Because stubbing &amp;amp; verifying looks just like the actual call, your tests becomes a sounding board for your APIs as you invent them&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Argument validation&lt;/strong&gt;: Ever see a test pass after a change to a mocked method should have broken it? Not with Mocktail, you haven&#39;t&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mocked class methods&lt;/strong&gt;: Singleton methods on modules and classes can be faked out using &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailreplace&#34;&gt;&lt;code&gt;Mocktail.replace(type)&lt;/code&gt;&lt;/a&gt; without sacrificing thread safety&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Super-duper detailed error messages&lt;/strong&gt; A good mocking library should make coding feel like &lt;a href=&#34;https://en.wikipedia.org/wiki/Paint_by_number&#34;&gt;paint-by-number&lt;/a&gt;, thoughtfully guiding you from one step to the next. Calling a method that doesn&#39;t exist will print a sample definition you can copy-paste. Verification failures will print every call that &lt;em&gt;did&lt;/em&gt; occur. And &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailexplain&#34;&gt;Mocktail.explain()&lt;/a&gt; provides even more introspection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expressive&lt;/strong&gt;: Built-in &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailmatchers&#34;&gt;argument matchers&lt;/a&gt; and a simple API for adding &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#custom-matchers&#34;&gt;custom matchers&lt;/a&gt; allow you to tune your stubbing configuration and call verification to match &lt;em&gt;exactly&lt;/em&gt; what your test intends&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/#mocktailcaptor&#34;&gt;Argument captors&lt;/a&gt; for assertions of very complex arguments, as well as advanced configuration options for stubbing &amp;amp; verification&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ready to order?&lt;/h2&gt; &#xA;&lt;h3&gt;Install the gem&lt;/h3&gt; &#xA;&lt;p&gt;The main ingredient to add to your Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;mocktail&#34;, group: :test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sprinkle in the DSL&lt;/h3&gt; &#xA;&lt;p&gt;Then, in each of your tests or in a test helper, you&#39;ll probably want to include Mocktail&#39;s DSL. (This is optional, however, as every method in the DSL is also available as a singleton method on &lt;code&gt;Mocktail&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;In Minitest, you might add the DSL with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Minitest::Test&#xA;  include Mocktail::DSL&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, in RSpec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.include Mocktail::DSL&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clean up when you&#39;re done&lt;/h3&gt; &#xA;&lt;p&gt;To reset Mocktail&#39;s internal state between tests and avoid test pollution, you should also call &lt;code&gt;Mocktail.reset&lt;/code&gt; after each test:&lt;/p&gt; &#xA;&lt;p&gt;In Minitest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Minitest::Test&#xA;  # Or, if in a Rails test, in a `teardown do…end` block&#xA;  def teardown&#xA;    Mocktail.reset&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And RSpec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RSpec.configure do |config|&#xA;  config.after(:each) do&#xA;    Mocktail.reset&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;The entire public API is listed in the &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/lib/mocktail.rb&#34;&gt;top-level module&#39;s source&lt;/a&gt;. Below is a longer menu to explain what goes into each feature.&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.of&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Mocktail.of(module_or_class)&lt;/code&gt; takes a module or class and returns an instance of an object with fake methods in place of all its instance methods which can then be stubbed or verified.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Clothes; end;&#xA;class Shoe &amp;lt; Clothes&#xA;  def tie(laces)&#xA;  end&#xA;end&#xA;&#xA;shoe = Mocktail.of(Shoe)&#xA;shoe.instance_of?(Shoe) # =&amp;gt; true&#xA;shoe.is_a?(Clothes) # =&amp;gt; true&#xA;shoe.class == Shoe # =&amp;gt; false!&#xA;shoe.to_s # =&amp;gt; #&amp;lt;Mocktail of Shoe:0x00000001343b57b0&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.of_next&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Mocktail.of_next(klass, [count: 1])&lt;/code&gt; takes a class and returns one mock (the default) or an array of multiple mocks. It also effectively overrides the behavior of that class&#39;s constructor to return those mock(s) in order and finally restoring its previous behavior.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you wanted to test the &lt;code&gt;Notifier&lt;/code&gt; class below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Notifier&#xA;  def initialize&#xA;    @mailer = Mailer.new&#xA;  end&#xA;&#xA;  def notify(name)&#xA;    @mailer.deliver!(&#34;Hello, #{name}&#34;)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could write a test like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def test_notifier&#xA;  mailer = Mocktail.of_next(Mailer)&#xA;  subject = Notifier.new&#xA;&#xA;  subject.notify(&#34;Pants&#34;)&#xA;&#xA;  verify { mailer.deliver!(&#34;Hello, Pants&#34;) }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s nothing wrong with creating mocks using &lt;code&gt;Mocktail.of&lt;/code&gt; and passing them to your subject some other way, but this approach allows you to write very terse isolation tests without foisting additional indirection or dependency injection in for your tests&#39; sake.&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.stubs&lt;/h3&gt; &#xA;&lt;p&gt;Configuring a fake method to take a certain action or return a particular value is called &#34;stubbing&#34;. To stub a call with a value, you can call &lt;code&gt;Mocktail.stubs&lt;/code&gt; (or just &lt;code&gt;stubs&lt;/code&gt; if you&#39;ve included &lt;code&gt;Mocktail::DSL&lt;/code&gt;) and then specify an effect that will be invoked whenever that call configuration is satisfied using &lt;code&gt;with&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The API is very simple in the simple case:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class UserRepository&#xA;  def find(id, debug: false); end&#xA;&#xA;  def transaction(&amp;amp;blk); end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could stub responses to a mock of the &lt;code&gt;UserRepository&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;user_repository = Mocktail.of(UserRepository)&#xA;&#xA;stubs { user_repository.find(42) }.with { :a_user }&#xA;user_repository.find(42) # =&amp;gt; :a_user&#xA;user_repository.find(43) # =&amp;gt; nil&#xA;user_repository.find # =&amp;gt; ArgumentError: wrong number of arguments (given 0, expected 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The block passed to &lt;code&gt;stubs&lt;/code&gt; is called the &#34;demonstration&#34;, because it represents an example of the kind of calls that Mocktail should match.&lt;/p&gt; &#xA;&lt;p&gt;If you want to get fancy, you can use matchers to make your demonstration more dynamic. For example, you could match any number with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.numeric) }.with { :another_user }&#xA;user_repository.find(41) # =&amp;gt; :another_user&#xA;user_repository.find(42) # =&amp;gt; :another_user&#xA;user_repository.find(43) # =&amp;gt; :another_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stubbings are last-in-wins, which is why the stubbing above would have overridden the earlier-but-more-specific stubbing of &lt;code&gt;find(42)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A stubbing&#39;s effect can also be changed dynamically based on the actual call that satisfied the demonstration by looking at the &lt;code&gt;call&lt;/code&gt; block argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.is_a(Integer)) }.with { |call|&#xA;  {id: call.args.first}&#xA;}&#xA;user_repository.find(41) # =&amp;gt; {id: 41}&#xA;# Since 42.5 is a Float, the earlier stubbing will win here:&#xA;user_repository.find(42.5) # =&amp;gt; :another_user&#xA;user_repository.find(43) # =&amp;gt; {id: 43}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s certainly more complex to think through, but if your stubbed method takes a block, your demonstration can pass a block of its own and inspect or invoke it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs {&#xA;  user_repository.transaction { |block| block.call == {id: 41} }&#xA;}.with { :successful_transaction }&#xA;&#xA;user_repository.transaction {&#xA;  user_repository.find(41)&#xA;} # =&amp;gt; :successful_transaction&#xA;user_repository.transaction {&#xA;  user_repository.find(40)&#xA;} # =&amp;gt; nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also several advanced options you can pass to &lt;code&gt;stubs&lt;/code&gt; to control its behavior.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;times&lt;/code&gt; will limit the number of times a satisfied stubbing can have its effect:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.any) }.with { :not_found }&#xA;stubs(times: 2) { |m| user_repository.find(1) }.with { :someone }&#xA;&#xA;user_repository.find(1) # =&amp;gt; :someone&#xA;user_repository.find(1) # =&amp;gt; :someone&#xA;user_repository.find(1) # =&amp;gt; :not_found&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ignore_extra_args&lt;/code&gt; will allow a demonstration to be considered satisfied even if it fails to specify arguments and keyword arguments made by the actual call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { user_repository.find(4) }.with { :a_person }&#xA;user_repository.find(4, debug: true) # =&amp;gt; nil&#xA;&#xA;stubs(ignore_extra_args: true) { user_repository.find(4) }.with { :b_person }&#xA;user_repository.find(4, debug: true) # =&amp;gt; :b_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;code&gt;ignore_block&lt;/code&gt; will similarly allow a demonstration to not concern itself with whether an actual call passed the method a block—it&#39;s satisfied either way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { user_repository.transaction }.with { :transaction }&#xA;user_repository.transaction {} # =&amp;gt; nil&#xA;&#xA;stubs(ignore_block: true) { user_repository.transaction }.with { :transaction }&#xA;user_repository.transaction {} # =&amp;gt; :transaction&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.verify&lt;/h3&gt; &#xA;&lt;p&gt;In practice, we&#39;ve found that we stub far more responses than we explicitly verify a particular call took place. That&#39;s because our code normally returns some observable value that is &lt;em&gt;influenced&lt;/em&gt; by our dependencies&#39; behavior, so adding additional assertions that they be called would be redundant. That said, for cases where a dependency doesn&#39;t return a value but just has a necessary side effect, the &lt;code&gt;verify&lt;/code&gt; method exists (and like &lt;code&gt;stubs&lt;/code&gt; is included in &lt;code&gt;Mocktail::DSL&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve gotten the hang of stubbing, you&#39;ll find that the &lt;code&gt;verify&lt;/code&gt; method is intentionally very similar. They almost rhyme.&lt;/p&gt; &#xA;&lt;p&gt;For this example, consider an &lt;code&gt;Auditor&lt;/code&gt; class that our code might need to call to record that certain actions took place.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Auditor&#xA;  def record!(message, user_id:, action: nil); end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you&#39;ve created a mock of the &lt;code&gt;Auditor&lt;/code&gt;, you can start verifying basic calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor = Mocktail.of(Auditor)&#xA;&#xA;verify { auditor.record!(&#34;hello&#34;, user_id: 42) }&#xA;# =&amp;gt; raised Mocktail::VerificationError&#xA;# Expected mocktail of Auditor#record! to be called like:&#xA;#&#xA;#   record!(&#34;hello&#34;, user_id: 42)&#xA;#&#xA;# But it was never called.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wups! Verify will blow up whenever a matching call hasn&#39;t occurred, so it should be called after you&#39;ve invoked your subject under test along with any other assertions you have.&lt;/p&gt; &#xA;&lt;p&gt;If we make a call that satisfies the &lt;code&gt;verify&lt;/code&gt; call&#39;s demonstration, however, you won&#39;t see that error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor.record!(&#34;hello&#34;, user_id: 42)&#xA;&#xA;verify { auditor.record!(&#34;hello&#34;, user_id: 42) } # =&amp;gt; nil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There, nothing happened! Just like any other assertion library, you only hear from &lt;code&gt;verify&lt;/code&gt; when verification fails.&lt;/p&gt; &#xA;&lt;p&gt;Just like with &lt;code&gt;stubs&lt;/code&gt;, you can any built-in or custom matchers can serve as garnishes for your demonstration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor.record!(&#34;hello&#34;, user_id: 42)&#xA;&#xA;verify { |m| auditor.record!(m.is_a(String), user_id: m.numeric) } # =&amp;gt; nil&#xA;# But this will raise a VerificationError:&#xA;verify { |m| auditor.record!(m.is_a(String), user_id: m.that { |arg| arg &amp;gt; 50}) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you pass a block to your demonstration, it will be invoked with any block that was passed to the actual call to the mock. Truthy responses will satisfy the verification and falsey ones will fail:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;auditor.record!(&#34;ok&#34;, user_id: 1) { Time.new }&#xA;&#xA;verify { |m| auditor.record!(&#34;ok&#34;, user_id: 1) { |block| block.call.is_a?(Time) } } # =&amp;gt; nil&#xA;# But this will raise a VerificationError:&#xA;verify { |m| auditor.record!(&#34;ok&#34;, user_id: 1) { |block| block.call.is_a?(Date) } }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; supports the same options as &lt;code&gt;stubs&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;times&lt;/code&gt; will require the demonstrated call happened exactly &lt;code&gt;times&lt;/code&gt; times (by default, the call has to happen 1 or more times)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ignore_extra_args&lt;/code&gt; will allow the demonstration to forego specifying optional arguments while still being considered satisfied&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ignore_block&lt;/code&gt; will similarly allow the demonstration to forego specifying a block, even if the actual call receives one&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mocktail.matchers&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll probably never need to call &lt;code&gt;Mocktail.matchers&lt;/code&gt; directly, because it&#39;s the object that is passed to every demonstration block passed to &lt;code&gt;stubs&lt;/code&gt; and &lt;code&gt;verify&lt;/code&gt;. By default, a stubbing (e.g. &lt;code&gt;stubs { email.send(&#34;text&#34;) }&lt;/code&gt;) is only considered satisfied if every argument passed to an actual call was passed an &lt;code&gt;==&lt;/code&gt; check. Matchers allow us to relax or change that constraint for both regular arguments and keyword arguments so that our demonstrations can match more kinds of method invocations.&lt;/p&gt; &#xA;&lt;p&gt;Matchers allow you to specify stubbings and verifications that look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| email.send(m.is_a(String)) }.with { &#34;I&#39;m an email&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Built-in matchers&lt;/h4&gt; &#xA;&lt;p&gt;These matchers come out of the box:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;any&lt;/code&gt; - Will match any value (even nil) in the given argument position or keyword&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;is_a(type)&lt;/code&gt; - Will match when its &lt;code&gt;type&lt;/code&gt; passes an &lt;code&gt;is_a?&lt;/code&gt; check against the actual argument&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;includes(thing, [**more_things])&lt;/code&gt; - Will match when all of its arguments are contained by the corresponding argument—be it a string, array, hash, or anything that responds to &lt;code&gt;includes?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;matches(pattern)&lt;/code&gt; - Will match when the provided string or pattern passes a &lt;code&gt;match?&lt;/code&gt; test on the corresponding argument; usually used to match strings that contain a particular substring or pattern, but will work with any argument that responds to &lt;code&gt;match?&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;not(thing)&lt;/code&gt; - Will only match when its argument &lt;em&gt;does not&lt;/em&gt; equal (via &lt;code&gt;!=&lt;/code&gt;) the actual argument&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numeric&lt;/code&gt; - Will match when the actual argument is an instance of &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, or (if loaded) &lt;code&gt;BigDecimal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;that { |arg| … }&lt;/code&gt; - Takes a block that will receive the actual argument. If the block returns truthy, it&#39;s considered a match; otherwise, it&#39;s not a match.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Custom matchers&lt;/h4&gt; &#xA;&lt;p&gt;If you want to write your own matchers, check out &lt;a href=&#34;https://raw.githubusercontent.com/testdouble/mocktail/main/lib/mocktail/matchers/includes.rb&#34;&gt;the source for examples&lt;/a&gt;. Once you&#39;ve implemented a class, just pass it to &lt;code&gt;Mocktail.register_matcher&lt;/code&gt; in your test helper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MyAwesomeMatcher &amp;lt; Mocktail::Matchers::Base&#xA;  def self.matcher_name&#xA;    :awesome&#xA;  end&#xA;&#xA;  def match?(actual)&#xA;    &#34;#{@expected}✨&#34; == actual&#xA;  end&#xA;end&#xA;&#xA;Mocktail.register_matcher(MyAwesomeMatcher)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, a stubbing like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;stubs { |m| user_repository.find(m.awesome(11)) }.with { :awesome_user }&#xA;&#xA;user_repository.find(&#34;11&#34;)) # =&amp;gt; nil&#xA;user_repository.find(&#34;11✨&#34;)) # =&amp;gt; :awesome_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.captor&lt;/h3&gt; &#xA;&lt;p&gt;An argument captor is a special kind of matcher… really, it&#39;s a matcher factory. Suppose you have a &lt;code&gt;verify&lt;/code&gt; call for which one of the expected arguments is &lt;em&gt;really&lt;/em&gt; complicated. Since &lt;code&gt;verify&lt;/code&gt; tends to be paired with fire-and-forget APIs that are being invoked for the side effect, this is a pretty common case. You want to be able to effectively snag that value and then run any number of specific assertions against it.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s what &lt;code&gt;Mocktail.captor&lt;/code&gt; is for. It&#39;s easiest to make sense of this by example. Given this &lt;code&gt;BigApi&lt;/code&gt; class that&#39;s presumably being called by your subject at the end of a lot of other work building up a payload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class BigApi&#xA;  def send(payload); end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could capture the value of that payload as part of the verification of the call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;big_api = Mocktail.of(BigApi)&#xA;&#xA;big_api.send({imagine: &#34;that&#34;, this: &#34;is&#34;, a: &#34;huge&#34;, object: &#34;!&#34;})&#xA;&#xA;payload_captor = Mocktail.captor&#xA;verify { big_api.send(payload_captor.capture) } # =&amp;gt; nil!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;verify&lt;/code&gt; above will pass because &lt;em&gt;a&lt;/em&gt; call did happen, but we haven&#39;t asserted anything beyond that yet. What really happened is that &lt;code&gt;payload_captor.capture&lt;/code&gt; actually returned a matcher that will return true for any argument &lt;em&gt;while also sneakily storing a copy of the argument value&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s why we instantiated &lt;code&gt;payload_captor&lt;/code&gt; with &lt;code&gt;Mocktail.captor&lt;/code&gt; outside the demonstration block, so we can inspect its &lt;code&gt;value&lt;/code&gt; after the &lt;code&gt;verify&lt;/code&gt; call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;payload_captor = Mocktail.captor&#xA;verify { big_api.send(payload_captor.capture) } # =&amp;gt; nil!&#xA;&#xA;payload = payload_captor.value # {:imagine=&amp;gt;&#34;that&#34;, :this=&amp;gt;&#34;is&#34;, :a=&amp;gt;&#34;huge&#34;, :object=&amp;gt;&#34;!&#34;}&#xA;assert_equal &#34;huge&#34;, payload[:a]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.replace&lt;/h3&gt; &#xA;&lt;p&gt;Mocktail was written to support isolated test-driven development, which usually results in a lot of boring classes and instance methods. But sometimes you need to mock singleton methods on classes or modules, and we support that too.&lt;/p&gt; &#xA;&lt;p&gt;When you call &lt;code&gt;Mocktail.replace(type)&lt;/code&gt;, all of the singleton methods on the provided type are replaced with fake methods available for stubbing and verification. It&#39;s really that simple.&lt;/p&gt; &#xA;&lt;p&gt;For example, if our &lt;code&gt;Bartender&lt;/code&gt; class has a class method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Bartender&#xA;  def self.cliche_greeting&#xA;    [&#34;It&#39;s 5 o&#39;clock somewhere!&#34;, &#34;Norm!&#34;].sample&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can replace the behavior of the overall class, and then stub how we&#39;d like it to respond, in our test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mocktail.replace(Bartender)&#xA;stubs { Bartender.cliche_greeting }.with { &#34;Norm!&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[&lt;strong&gt;Obligatory warning:&lt;/strong&gt; Mocktail does its best to ensure that other threads won&#39;t be affected when you replace the singleton methods on a type, but your mileage may very! Singleton methods are global and code that introspects or invokes a replaced method in a peculiar-enough way could lead to hard-to-track down bugs. (If this concerns you, then the fact that class methods are effectively global state may be a great reason not to rely too heavily on them!)]&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.explain&lt;/h3&gt; &#xA;&lt;p&gt;Test debugging is hard enough when there &lt;em&gt;aren&#39;t&lt;/em&gt; fake objects flying every which way, so Mocktail tries to make it a little easier on you. In addition to returning useful messages throughout the API, the gem also includes an introspection method &lt;code&gt;Mocktail.explain(thing)&lt;/code&gt;, which returns a human-readable &lt;code&gt;message&lt;/code&gt; and a &lt;code&gt;reference&lt;/code&gt; object with useful attributes (that vary depending on the type of fake &lt;code&gt;thing&lt;/code&gt; you pass in. Below are some things &lt;code&gt;explain()&lt;/code&gt; can do.&lt;/p&gt; &#xA;&lt;h4&gt;Fake instances created by Mocktail&lt;/h4&gt; &#xA;&lt;p&gt;Any instances created by &lt;code&gt;Mocktail.of&lt;/code&gt; or &lt;code&gt;Mocktail.of_next&lt;/code&gt; can be passed to &lt;code&gt;Mocktail.explain&lt;/code&gt;, and they will list out all the calls and stubbings made for each of their fake methods.&lt;/p&gt; &#xA;&lt;p&gt;Suppose these interactions have occurred:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;Mocktail.stubs { ice_tray.fill(:tap_water, 30) }.with { :some_ice }&#xA;&#xA;ice_tray.fill(:tap_water, 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can interrogate what&#39;s going on with the fake instance by passing it to &lt;code&gt;explain&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;explanation = Mocktail.explain(ice_tray)&#xA;&#xA;explanation.reference.type      #=&amp;gt; IceTray&#xA;explanation.reference.double    #=&amp;gt; The ice_tray instance&#xA;explanation.reference.calls     #=&amp;gt; details on each invocation of each method&#xA;explanation.reference.stubbings #=&amp;gt; all stubbings configured for each method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;explanation.message&lt;/code&gt; will return:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This is a fake `IceTray&#39; instance.&#xA;&#xA;It has these mocked methods:&#xA;  - fill&#xA;&#xA;`IceTray#fill&#39; stubbings:&#xA;&#xA;  fill(:tap_water, 30)&#xA;&#xA;`IceTray#fill&#39; calls:&#xA;&#xA;  fill(:tap_water, 50)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Modules and classes with singleton methods replaced&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;ve called &lt;code&gt;Mocktail.replace()&lt;/code&gt; on a class or module, it can also be passed to &lt;code&gt;Mocktail.explain()&lt;/code&gt; for a summary of all the stubbing configurations and calls made against its faked singleton methods for the currently running thread.&lt;/p&gt; &#xA;&lt;p&gt;Imagine a &lt;code&gt;Shop&lt;/code&gt; class with &lt;code&gt;self.open!&lt;/code&gt; and &lt;code&gt;self.close!&lt;/code&gt; singleton methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Mocktail.replace(Shop)&#xA;&#xA;stubs { |m| Shop.open!(m.numeric) }.with { :a_bar }&#xA;&#xA;Shop.open!(42)&#xA;&#xA;Shop.close!(42)&#xA;&#xA;explanation = Mocktail.explain(Shop)&#xA;&#xA;explanation.reference.type      #=&amp;gt; Shop&#xA;explanation.reference.replaced_method_names #=&amp;gt; [:close!, :open!]&#xA;explanation.reference.calls     #=&amp;gt; details on each invocation of each method&#xA;explanation.reference.stubbings #=&amp;gt; all stubbings configured for each method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;code&gt;explanation.message&lt;/code&gt; will return:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;`Shop&#39; is a class that has had its singleton methods faked.&#xA;&#xA;It has these mocked methods:&#xA;  - close!&#xA;  - open!&#xA;&#xA;`Shop.close!&#39; has no stubbings.&#xA;&#xA;`Shop.close!&#39; calls:&#xA;&#xA;  close!(42)&#xA;&#xA;  close!(42)&#xA;&#xA;`Shop.open!&#39; stubbings:&#xA;&#xA;  open!(numeric)&#xA;&#xA;  open!(numeric)&#xA;&#xA;`Shop.open!&#39; calls:&#xA;&#xA;  open!(42)&#xA;&#xA;  open!(42)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Methods on faked instances and replaced types&lt;/h4&gt; &#xA;&lt;p&gt;In addition to passing the test double, you can also pass a reference to any fake method created by Mocktail to &lt;code&gt;Mocktail.explain&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;ice_tray.fill(:chilled, 50)&#xA;&#xA;explanation = Mocktail.explain(ice_tray.method(:fill))&#xA;&#xA;explanation.reference.receiver  #=&amp;gt; a reference to the `ice_tray` instance&#xA;explanation.reference.calls     #=&amp;gt; details on each invocation of the method&#xA;explanation.reference.stubbings #=&amp;gt; all stubbings configured for the method&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above may be handy in cases where you want to assert the number of calls of a method outside the &lt;code&gt;Mocktail.verify&lt;/code&gt; API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;assert_equal 1, explanation.reference.calls.size&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The explanation will also contain a &lt;code&gt;message&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`IceTray#fill&#39; has no stubbings.&#xA;&#xA;`IceTray#fill&#39; calls:&#xA;&#xA;  fill(:chilled, 50)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replaced singleton methods can also be passed to &lt;code&gt;explain()&lt;/code&gt;, so something like &lt;code&gt;Mocktail.explain(Shop.method(:open!))&lt;/code&gt; from the earlier example would also work (with &lt;code&gt;Shop&lt;/code&gt; being the &lt;code&gt;receiver&lt;/code&gt; on the explanation&#39;s &lt;code&gt;reference&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Undefined methods&lt;/h4&gt; &#xA;&lt;p&gt;There&#39;s no API for this one, but Mocktail also offers explanations for methods that don&#39;t exist yet. You&#39;ll see this error message whenever you try to call a method that doesn&#39;t exist on a test double. The message is designed to facilitate &#34;paint-by-numbers&#34; TDD, by including a sample definition of the method you had attempted to call that can be copy-pasted into a source listing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class IceTray&#xA;end&#xA;&#xA;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;ice_tray.fill(:water_type, 30)&#xA;# =&amp;gt; No method `IceTray#fill&#39; exists for call: (NoMethodError)&#xA;#&#xA;#      fill(:water_type, 30)&#xA;#&#xA;#    Need to define the method? Here&#39;s a sample definition:&#xA;#&#xA;#      def fill(water_type, arg)&#xA;#      end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From there, you can just copy-paste the provided method stub as a starting point for your new method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class IceTray&#xA;  def fill(water_type, amount)&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mocktail.explain_nils&lt;/h3&gt; &#xA;&lt;p&gt;Is a faked method returning &lt;code&gt;nil&lt;/code&gt; and you don&#39;t understand why?&lt;/p&gt; &#xA;&lt;p&gt;By default, methods faked by Mocktail will return &lt;code&gt;nil&lt;/code&gt; when no stubbing is satisfied. A frequent frustration, therefore, is when the way &lt;code&gt;stubs {}.with {}&lt;/code&gt; is configured does not satisfy a call the way you expected. To try to make debugging this a little bit easier, the gem provides a top-level &lt;code&gt;Mocktail.explain_nils&lt;/code&gt; method that will return an array of summaries of every call to a faked method that failed to satisfy any stubbings.&lt;/p&gt; &#xA;&lt;p&gt;For example, suppose you stub this &lt;code&gt;fill&lt;/code&gt; method like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;ice_tray = Mocktail.of(IceTray)&#xA;&#xA;stubs { ice_tray.fill(:tap_water, 30) }.with { :normal_ice }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But then you find that your subject under test is just getting &lt;code&gt;nil&lt;/code&gt; back and you don&#39;t understand why:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def prep&#xA;  ice = ice_tray.fill(:tap_water, 50)&#xA;  glass.add(ice) # =&amp;gt; why is `ice` nil?!&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Whenever you&#39;re confused by a nil, you can call &lt;code&gt;Mocktail.explain_nils&lt;/code&gt; for an array containing &lt;code&gt;UnsatisfyingCallExplanation&lt;/code&gt; objects (one for each call to a faked method that did not satisfy any configured stubbings).&lt;/p&gt; &#xA;&lt;p&gt;The returned explanation objects will include both a &lt;code&gt;reference&lt;/code&gt; object to explore as well a summary &lt;code&gt;message&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def prep&#xA;  ice = ice_tray.fill(:tap_water, 50)&#xA;  puts Mocktail.explain_nils.first.message&#xA;  glass.add(ice)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which will print:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This `nil&#39; was returned by a mocked `IceTray#fill&#39; method&#xA;because none of its configured stubbings were satisfied.&#xA;&#xA;The actual call:&#xA;&#xA;  fill(:tap_water, 50)&#xA;&#xA;The call site:&#xA;&#xA;  /path/to/your/code.rb:42:in `prep&#39;&#xA;&#xA;Stubbings configured prior to this call but not satisfied by it:&#xA;&#xA;  fill(:tap_water, 30)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;reference&lt;/code&gt; object will have details of the &lt;code&gt;call&lt;/code&gt; itself, an array of &lt;code&gt;other_stubbings&lt;/code&gt; defined on the faked method, and a &lt;code&gt;backtrace&lt;/code&gt; to determine which call site produced the unexpected &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;h3&gt;Mocktail.reset&lt;/h3&gt; &#xA;&lt;p&gt;This one&#39;s simple: you probably want to call &lt;code&gt;Mocktail.reset&lt;/code&gt; after each test, but you &lt;em&gt;definitely&lt;/em&gt; want to call it if you&#39;re using &lt;code&gt;Mocktail.replace&lt;/code&gt; or &lt;code&gt;Mocktail.of_next&lt;/code&gt; anywhere, since those will affect state that is shared across tests.&lt;/p&gt; &#xA;&lt;p&gt;Calling reset in a &lt;code&gt;teardown&lt;/code&gt; or &lt;code&gt;after(:each)&lt;/code&gt; hook will also improve the usefulness of messages returned by &lt;code&gt;Mocktail.explain&lt;/code&gt; and &lt;code&gt;Mocktail.explain_nils&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;Mocktail is designed following a somewhat academic understanding of what mocking is and how it should be used. Below are several references on this topic.&lt;/p&gt; &#xA;&lt;p&gt;Blog Posts and Papers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Endo-Testing: Unit Testing with Mock Objects](&lt;a href=&#34;https://www2.ccs.neu.edu/research/demeter/related-work/extreme-programming/MockObjectsFinal.PDF&#34;&gt;https://www2.ccs.neu.edu/research/demeter/related-work/extreme-programming/MockObjectsFinal.PDF&lt;/a&gt; by Tim Mackinnon, Steve Freeman, and Philip Craig, the paper that introduced mocking presented by the creators of mocking.&lt;/li&gt; &#xA; &lt;li&gt;Michael Feathers&#39; &lt;a href=&#34;https://michaelfeathers.typepad.com/michael_feathers_blog/2008/06/the-flawed-theo.html&#34;&gt;The Flawed Theory Behind Unit Testing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Books:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bookshop.org/books/growing-object-oriented-software-guided-by-tests/9780321503626&#34;&gt;&lt;em&gt;Growing Object-Oriented Software, Guided by Tests&lt;/em&gt;&lt;/a&gt; by Steve Freeman and Nat Price&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Talks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Af4M8GMoxi4&#34;&gt;Please don’t mock me&lt;/a&gt; by Justin Searls&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Mocktail is created &amp;amp; maintained by the software agency &lt;a href=&#34;https://twitter.com&#34;&gt;Test Double&lt;/a&gt;. If you&#39;ve ever come across our eponymously-named &lt;a href=&#34;https://github.com/testdouble/testdouble.js/&#34;&gt;testdouble.js&lt;/a&gt;, you might find Mocktail&#39;s API to be quite similar. The term &#34;test double&#34; was originally coined by Gerard Meszaros in his book &lt;a href=&#34;http://xunitpatterns.com/Test%20Double.html&#34;&gt;xUnit Test Patterns&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The name is inspired by the innovative Java mocking library &lt;a href=&#34;https://site.mockito.org&#34;&gt;Mockito&lt;/a&gt;. Mocktail also the spiritual successor to &lt;a href=&#34;https://github.com/searls/gimme&#34;&gt;gimme&lt;/a&gt;, which offers a similar API but which fell victim to the limitations of Ruby 1.8.7 (and &lt;a href=&#34;https://twitter.com/searls&#34;&gt;@searls&lt;/a&gt;&#39;s Ruby chops). Gimme was also one of the final projects we collaborated with &lt;a href=&#34;https://github.com/jimweirich&#34;&gt;Jim Weirich&lt;/a&gt; on, so this approach to isolated unit testing holds a special significance to us.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project follows Test Double&#39;s &lt;a href=&#34;https://testdouble.com/code-of-conduct&#34;&gt;code of conduct&lt;/a&gt; for all community interactions, including (but not limited to) one-on-one communications, public posts/comments, code reviews, pull requests, and GitHub issues. If violations occur, Test Double will take any action they deem appropriate for the infraction, up to and including blocking a user from the organization&#39;s repositories.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>postalserver/postal</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/postalserver/postal</id>
    <link href="https://github.com/postalserver/postal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✉️ A fully featured open source mail delivery platform for incoming &amp; outgoing e-mail&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://share.adam.ac/21/logo-g3hWemROTemCYbWlmL.svg?sanitize=true&#34; width=&#34;250&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Postal&lt;/strong&gt; is a complete and fully featured mail server for use by websites &amp;amp; web servers. Think Sendgrid, Mailgun or Postmark but open source and ready for you to run on your own servers. Postal is developed by &lt;a href=&#34;https://k.io&#34;&gt;Krystal&lt;/a&gt; to serve its own mail processing requirements and we have since decided that it should be released as an open source project for the community.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://share.adam.ac/17/k4lA5OuPlU2.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.postalserver.io&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.postalserver.io/install/prerequisites&#34;&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.postalserver.io/welcome/faqs&#34;&gt;FAQs&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://docs.postalserver.io/welcome/feature-list&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/postalserver/postal/discussions&#34;&gt;Ask for help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>openstreetmap/openstreetmap-website</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/openstreetmap/openstreetmap-website</id>
    <link href="https://github.com/openstreetmap/openstreetmap-website" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Rails application that powers OpenStreetMap&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#34;The Rails Port&#34;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openstreetmap/openstreetmap-website/actions?query=workflow%3ALint%20branch%3Amaster%20event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/openstreetmap/openstreetmap-website/workflows/Lint/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openstreetmap/openstreetmap-website/actions?query=workflow%3ATests%20branch%3Amaster%20event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/openstreetmap/openstreetmap-website/workflows/Tests/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/openstreetmap/openstreetmap-website?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/openstreetmap/openstreetmap-website/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is The Rails Port, the &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt; application that powers the &lt;a href=&#34;https://www.openstreetmap.org&#34;&gt;OpenStreetMap&lt;/a&gt; website and API. The software is also known as &#34;openstreetmap-website&#34;.&lt;/p&gt; &#xA;&lt;p&gt;This repository consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The web site, including user accounts, diary entries, user-to-user messaging.&lt;/li&gt; &#xA; &lt;li&gt;The XML-based editing &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/API_v0.6&#34;&gt;API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The integrated version of the &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/ID&#34;&gt;iD&lt;/a&gt; editors.&lt;/li&gt; &#xA; &lt;li&gt;The Browse pages - a web front-end to the OpenStreetMap data.&lt;/li&gt; &#xA; &lt;li&gt;The GPX uploads, browsing and API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A fully-functional Rails Port installation depends on other services, including map tile servers and geocoding services, that are provided by other software. The default installation uses publicly-available services to help with development and testing.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This software is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt&#34;&gt;GNU General Public License 2.0&lt;/a&gt;, a copy of which can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/openstreetmap/openstreetmap-website/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;The Rails Port is a Ruby on Rails application that uses PostgreSQL as its database, and has a large number of dependencies for installation. For full details please see &lt;a href=&#34;https://raw.githubusercontent.com/openstreetmap/openstreetmap-website/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;We&#39;re always keen to have more developers! Pull requests are very welcome.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bugs are recorded in the &lt;a href=&#34;https://github.com/openstreetmap/openstreetmap-website/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Translation is managed by &lt;a href=&#34;https://translatewiki.net/wiki/Translating:OpenStreetMap&#34;&gt;Translatewiki&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;There is a &lt;a href=&#34;https://lists.openstreetmap.org/listinfo/rails-dev&#34;&gt;rails-dev@openstreetmap.org&lt;/a&gt; mailing list for development discussion.&lt;/li&gt; &#xA; &lt;li&gt;IRC - there is the #osm-dev channel on irc.oftc.net.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More details on contributing to the code are in the &lt;a href=&#34;https://raw.githubusercontent.com/openstreetmap/openstreetmap-website/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h1&gt;Maintainers&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tom Hughes &lt;a href=&#34;https://github.com/tomhughes/&#34;&gt;@tomhughes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andy Allan &lt;a href=&#34;https://github.com/gravitystorm/&#34;&gt;@gravitystorm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>elastic/logstash</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/elastic/logstash</id>
    <link href="https://github.com/elastic/logstash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Logstash - transport and process your logs, events, or other data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logstash&lt;/h1&gt; &#xA;&lt;p&gt;Logstash is part of the &lt;a href=&#34;https://www.elastic.co/products&#34;&gt;Elastic Stack&lt;/a&gt; along with Beats, Elasticsearch and Kibana. Logstash is a server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite &#34;stash.&#34; (Ours is Elasticsearch, naturally.). Logstash has over 200 plugins, and you can write your own very easily as well.&lt;/p&gt; &#xA;&lt;p&gt;For more info, see &lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;https://www.elastic.co/products/logstash&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation and getting started guides for Logstash on the &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html&#34;&gt;elastic.co site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For information about building the documentation, see the README in &lt;a href=&#34;https://github.com/elastic/docs&#34;&gt;https://github.com/elastic/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;You can download officially released Logstash binaries, as well as debian/rpm packages for the supported platforms, from &lt;a href=&#34;https://www.elastic.co/downloads/logstash&#34;&gt;downloads page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.elastic.co/c/logstash&#34;&gt;Logstash Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/index.html&#34;&gt;Logstash Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.freenode.net/?channels=logstash&#34;&gt;#logstash on freenode IRC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/products/logstash&#34;&gt;Logstash Product Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/subscriptions&#34;&gt;Elastic Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logstash Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Logstash plugins are hosted in separate repositories under the &lt;a href=&#34;https://github.com/logstash-plugins&#34;&gt;logstash-plugins&lt;/a&gt; github organization. Each plugin is a self-contained Ruby gem which gets published to RubyGems.org.&lt;/p&gt; &#xA;&lt;h3&gt;Writing your own Plugin&lt;/h3&gt; &#xA;&lt;p&gt;Logstash is known for its extensibility. There are hundreds of plugins for Logstash and you can write your own very easily! For more info on developing and testing these plugins, please see the &lt;a href=&#34;https://www.elastic.co/guide/en/logstash/current/contributing-to-logstash.html&#34;&gt;working with plugins section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Plugin Issues and Pull Requests&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please open new issues and pull requests for plugins under its own repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, if you have to report an issue/enhancement for the Elasticsearch output, please do so &lt;a href=&#34;https://github.com/logstash-plugins/logstash-output-elasticsearch/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Logstash core will continue to exist under this repository and all related issues and pull requests can be submitted here.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Logstash Core&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install JDK version 11 or 17. Make sure to set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable to the path to your JDK installation directory. For example &lt;code&gt;set JAVA_HOME=&amp;lt;JDK_PATH&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install JRuby 9.2.x It is recommended to use a Ruby version manager such as &lt;a href=&#34;https://rvm.io/&#34;&gt;RVM&lt;/a&gt; or &lt;a href=&#34;https://github.com/sstephenson/rbenv&#34;&gt;rbenv&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;rake&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; tool using &lt;code&gt;gem install rake&lt;/code&gt; and &lt;code&gt;gem install bundler&lt;/code&gt; respectively.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RVM install (optional)&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use rvm (ruby version manager) to manage Ruby versions on your machine, follow these directions. In the Logstash folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3&#xA;\curl -sSL https://get.rvm.io | bash -s stable --ruby=$(cat .ruby-version)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Check Ruby version&lt;/h3&gt; &#xA;&lt;p&gt;Before you proceed, please check your ruby version by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ruby -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The printed version should be the same as in the &lt;code&gt;.ruby-version&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Building Logstash&lt;/h3&gt; &#xA;&lt;p&gt;The Logstash project includes the source code for all of Logstash, including the Elastic-Licensed X-Pack features and functions; to run Logstash from source using only the OSS-licensed code, export the &lt;code&gt;OSS&lt;/code&gt; environment variable with a value of &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export OSS=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up the location of the source code to build&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export LOGSTASH_SOURCE=1&#xA;export LOGSTASH_PATH=/YOUR/LOGSTASH/DIRECTORY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run Logstash from the repo you must first bootstrap the environment:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can then use &lt;code&gt;bin/logstash&lt;/code&gt; to start Logstash, but there are no plugins installed. To install default plugins, you can run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake plugin:install-default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the 80+ default plugins which makes Logstash ready to connect to multiple data sources, perform transformations and send the results to Elasticsearch and other destinations.&lt;/p&gt; &#xA;&lt;p&gt;To verify your environment, run the following to send your first event:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/logstash -e &#39;input { stdin { } } output { stdout {} }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should start Logstash with stdin input waiting for you to enter an event&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hello world&#xA;2016-11-11T01:22:14.405+0000 0.0.0.0 hello world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advanced: Drip Launcher&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ninjudd/drip&#34;&gt;Drip&lt;/a&gt; is a tool that solves the slow JVM startup problem while developing Logstash. The drip script is intended to be a drop-in replacement for the java command. We recommend using drip during development, in particular for running tests. Using drip, the first invocation of a command will not be faster but the subsequent commands will be swift.&lt;/p&gt; &#xA;&lt;p&gt;To tell logstash to use drip, set the environment variable &lt;code&gt;JAVACMD=`which drip`&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example (but see the &lt;em&gt;Testing&lt;/em&gt; section below before running rspec for the first time):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JAVACMD=`which drip` bin/rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caveats&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Drip does not work with STDIN. You cannot use drip for running configs which use the stdin plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Building Logstash Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To build the Logstash Reference (open source content only) on your local machine, clone the following repos:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/logstash&#34;&gt;logstash&lt;/a&gt; - contains main docs about core features&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/logstash-docs&#34;&gt;logstash-docs&lt;/a&gt; - contains generated plugin docs&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/docs&#34;&gt;docs&lt;/a&gt; - contains doc build files&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have the same branch checked out in &lt;code&gt;logstash&lt;/code&gt; and &lt;code&gt;logstash-docs&lt;/code&gt;. Check out &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;docs&lt;/code&gt; repo.&lt;/p&gt; &#xA;&lt;p&gt;Run the doc build script from within the &lt;code&gt;docs&lt;/code&gt; repo. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build_docs.pl --doc ../logstash/docs/index.asciidoc --chunk=1 -open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Most of the unit tests in Logstash are written using &lt;a href=&#34;http://rspec.info/&#34;&gt;rspec&lt;/a&gt; for the Ruby parts. For the Java parts, we use junit. For testing you can use the &lt;em&gt;test&lt;/em&gt; &lt;code&gt;rake&lt;/code&gt; tasks and the &lt;code&gt;bin/rspec&lt;/code&gt; command, see instructions below:&lt;/p&gt; &#xA;&lt;h3&gt;Core tests&lt;/h3&gt; &#xA;&lt;p&gt;1- To run the core tests you can use the Gradle task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use the &lt;code&gt;rspec&lt;/code&gt; tool to run all tests or run a specific test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/rspec&#xA;bin/rspec spec/foo/bar_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that before running the &lt;code&gt;rspec&lt;/code&gt; command for the first time you need to set up the RSpec test dependencies by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2- To run the subset of tests covering the Java codebase only run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew javaTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3- To execute the complete test-suite including the integration tests run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4- To execute a single Ruby test run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SPEC_OPTS=&#34;-fd -P logstash-core/spec/logstash/api/commands/default_metadata_spec.rb&#34; ./gradlew :logstash-core:rubyTests --tests org.logstash.RSpecTests    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5- To execute single spec for integration test, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew integrationTests -PrubyIntegrationSpecs=specs/slowlog_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes you might find a change to a piece of Logstash code causes a test to hang. These can be hard to debug.&lt;/p&gt; &#xA;&lt;p&gt;If you set &lt;code&gt;LS_JAVA_OPTS=&#34;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&#34;&lt;/code&gt; you can connect to a running Logstash with your IDEs debugger which can be a great way of finding the issue.&lt;/p&gt; &#xA;&lt;h3&gt;Plugins tests&lt;/h3&gt; &#xA;&lt;p&gt;To run the tests of all currently installed plugins:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:plugins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the default set of plugins included in the logstash package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:install-default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Note that if a plugin is installed using the plugin manager &lt;code&gt;bin/logstash-plugin install ...&lt;/code&gt; do not forget to also install the plugins development dependencies using the following command after the plugin installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/logstash-plugin install --development&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building Artifacts&lt;/h2&gt; &#xA;&lt;p&gt;Built artifacts will be placed in the &lt;code&gt;LS_HOME/build&lt;/code&gt; directory, and will create the directory if it is not already present.&lt;/p&gt; &#xA;&lt;p&gt;You can build a Logstash snapshot package as tarball or zip file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleTarDistribution&#xA;./gradlew assembleZipDistribution&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OSS-only artifacts can similarly be built with their own gradle tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleOssTarDistribution&#xA;./gradlew assembleOssZipDistribution&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build .rpm and .deb, but the &lt;a href=&#34;https://github.com/jordansissel/fpm&#34;&gt;fpm&lt;/a&gt; tool is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake artifact:rpm&#xA;rake artifact:deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake artifact:rpm_oss&#xA;rake artifact:deb_oss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using a Custom JRuby Distribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want the build to use a custom JRuby you can do so by setting a path to a custom JRuby distribution&#39;s source root via the &lt;code&gt;custom.jruby.path&lt;/code&gt; Gradle property.&lt;/p&gt; &#xA;&lt;p&gt;E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew clean test -Pcustom.jruby.path=&#34;/path/to/jruby&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project Principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community: If a newbie has a bad time, it&#39;s a bug.&lt;/li&gt; &#xA; &lt;li&gt;Software: Make it work, then make it right, then make it fast.&lt;/li&gt; &#xA; &lt;li&gt;Technology: If it doesn&#39;t do a thing today, we can make it do it tomorrow.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome: ideas, patches, documentation, bug reports, complaints, and even something you drew up on a napkin.&lt;/p&gt; &#xA;&lt;p&gt;Programming is not a required skill. Whatever you&#39;ve seen about open source and maintainers or community members saying &#34;send patches or die&#34; - you will not see that here.&lt;/p&gt; &#xA;&lt;p&gt;It is more important to me that you are able to contribute.&lt;/p&gt; &#xA;&lt;p&gt;For more information about contributing, see the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/logstash/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Homebrew/homebrew-core</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/Homebrew/homebrew-core</id>
    <link href="https://github.com/Homebrew/homebrew-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🍻 Default formulae for the missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Core&lt;/h1&gt; &#xA;&lt;p&gt;Core formulae for the Homebrew package manager.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orgs/Homebrew/discussions&#34;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How do I install these formulae?&lt;/h2&gt; &#xA;&lt;p&gt;Just &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. This is the default tap for Homebrew and is installed by default.&lt;/p&gt; &#xA;&lt;h2&gt;More Documentation, Troubleshooting, Contributing, Security, Community, Donations, License and Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;See these sections in &lt;a href=&#34;https://github.com/Homebrew/brew#homebrew&#34;&gt;Homebrew/brew&#39;s README&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rapid7/metasploit-framework</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/rapid7/metasploit-framework</id>
    <link href="https://github.com/rapid7/metasploit-framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit &lt;a href=&#34;https://travis-ci.org/rapid7/metasploit-framework&#34;&gt;&lt;img src=&#34;https://travis-ci.org/rapid7/metasploit-framework.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/rapid7/metasploit-framework/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/metasploitframework/metasploit-framework/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/metasploitframework/metasploit-framework.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The Metasploit Framework is released under a BSD-style license. See &lt;a href=&#34;https://raw.githubusercontent.com/rapid7/metasploit-framework/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of this software is available from: &lt;a href=&#34;https://metasploit.com&#34;&gt;https://metasploit.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bug tracking and development information can be found at: &lt;a href=&#34;https://github.com/rapid7/metasploit-framework&#34;&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;New bugs and feature requests should be directed to: &lt;a href=&#34;https://r-7.co/MSF-BUGv1&#34;&gt;https://r-7.co/MSF-BUGv1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;API documentation for writing modules can be found at: &lt;a href=&#34;https://rapid7.github.io/metasploit-framework/api&#34;&gt;https://rapid7.github.io/metasploit-framework/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Questions and suggestions can be sent to: Freenode IRC channel or e-mail the metasploit-hackers mailing list&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Generally, you should use &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers&#34;&gt;the free installer&lt;/a&gt;, which contains all of the dependencies and will get you up and running with a few clicks. See the &lt;a href=&#34;https://r-7.co/MSF-DEV&#34;&gt;Dev Environment Setup&lt;/a&gt; if you&#39;d like to deal with dependencies on your own.&lt;/p&gt; &#xA;&lt;h2&gt;Using Metasploit&lt;/h2&gt; &#xA;&lt;p&gt;Metasploit can do all sorts of things. The first thing you&#39;ll want to do is start &lt;code&gt;msfconsole&lt;/code&gt;, but after that, you&#39;ll probably be best served by reading &lt;a href=&#34;https://www.offensive-security.com/metasploit-unleashed/&#34; title=&#34;Metasploit Unleashed&#34;&gt;Metasploit Unleashed&lt;/a&gt;, the &lt;a href=&#34;https://metasploit.github.io&#34;&gt;great community resources&lt;/a&gt;, or the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/wiki/Setting-Up-a-Metasploit-Development-Environment&#34; title=&#34;Metasploit Development Environment Setup&#34;&gt;Dev Environment Setup&lt;/a&gt; guide on GitHub, which will walk you through the whole process from installing all the dependencies, to cloning the repository, and finally to submitting a pull request. For slightly more information, see &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheOdinProject/theodinproject</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/TheOdinProject/theodinproject</id>
    <link href="https://github.com/TheOdinProject/theodinproject" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Main Website for The Odin Project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Odin Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.theodinproject.com/&#34;&gt;The Odin Project&lt;/a&gt; (TOP) is an open-source curriculum for learning full-stack web development. Our mission is to provide a comprehensive curriculum to learn web development for free. We help users learn the skills and build the impressive portfolio of projects they need to get hired as a web developer.&lt;/p&gt; &#xA;&lt;p&gt;Some of the topics we cover include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Ruby on Rails&lt;/li&gt; &#xA; &lt;li&gt;SQL&lt;/li&gt; &#xA; &lt;li&gt;HTML and CSS&lt;/li&gt; &#xA; &lt;li&gt;Javascript&lt;/li&gt; &#xA; &lt;li&gt;Node&lt;/li&gt; &#xA; &lt;li&gt;React&lt;/li&gt; &#xA; &lt;li&gt;How to go about getting a job in the industry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repo contains the TOP app which pulls in lesson content as well as front-end and back-end code. To see the actual lesson content that gets pulled in, please go to the &lt;a href=&#34;https://github.com/TheOdinProject/curriculum&#34;&gt;TOP curriculum repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our community can be found on the &lt;a href=&#34;https://discord.gg/fbFCkYabZB&#34;&gt;TOP Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.circleci.com/pipelines/github/TheOdinProject/theodinproject&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/TheOdinProject/theodinproject.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Odin Project depends on open-source contributions to improve, grow, and thrive. We welcome contributors of all experience levels and backgrounds to help maintain this awesome curriculum and community. If you would like to contribute to our curriculum, be sure to thoroughly read our &lt;a href=&#34;https://github.com/TheOdinProject/theodinproject/raw/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Significant Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eriktrautman&#34;&gt;Erik Trautman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/afshinator&#34;&gt;Afshin Moktari&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gorchov&#34;&gt;Josh Gorchov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zkay&#34;&gt;Joe Sawyer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mach1010&#34;&gt;Bill Walker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ngehani&#34;&gt;Neil Gehani&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/Iawhite76&#34;&gt;Ian White&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/dominathan&#34;&gt;Nathan Hall&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/AbbyJonesDev&#34;&gt;Abby Jones&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KevinMulhern&#34;&gt;Kevin Mulhern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arku&#34;&gt;Arun Kumar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codyloyd&#34;&gt;Cody Loyd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CouchofTomato&#34;&gt;Austin Mason&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/I3uckwheat&#34;&gt;Briggs Elsperger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/105ron&#34;&gt;Rhys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leosoaivan&#34;&gt;L. P. Soai-Van&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mindovermiles262&#34;&gt;Andy Duss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adachiu&#34;&gt;Ada Chiu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marvingay&#34;&gt;Marvin Gay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rlmoser99&#34;&gt;Rachel Moser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CatQueenCodes&#34;&gt;Grace Schwartz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twalton83&#34;&gt;Tatiana Walton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kashura&#34;&gt;Valera Kushnir&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;http://www.github.com/eriktrautman&#34;&gt;Erik Trautman&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>forem/forem</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/forem/forem</id>
    <link href="https://github.com/forem/forem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;For empowering community 🌱&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Forem 🌱&lt;/h1&gt; &#xA; &lt;strong&gt;For Empowering Community&lt;/strong&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://app.travis-ci.com/github/forem/forem&#34;&gt; &lt;img src=&#34;https://api.travis-ci.com/forem/forem.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/w/forem/forem&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;a href=&#34;https://github.com/forem/forem/issues?q=is%3Aissue+is%3Aopen+label%3A%22ready+for+dev%22&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/forem/forem/ready for dev&#34; alt=&#34;GitHub issues ready for dev&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/forem/forem&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&#34; alt=&#34;GitPod badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Welcome to the &lt;a href=&#34;https://forem.com&#34;&gt;Forem&lt;/a&gt; codebase, the platform that powers &lt;a href=&#34;https://dev.to&#34;&gt;dev.to&lt;/a&gt;. We are so excited to have you. With your help, we can build out Forem’s usability, scalability, and stability to better serve our communities.&lt;/p&gt; &#xA;&lt;h2&gt;What is Forem?&lt;/h2&gt; &#xA;&lt;p&gt;Forem is open source software for building communities. Communities for your peers, customers, fanbases, families, friends, and any other time and space where people need to come together to be part of a collective. &lt;a href=&#34;https://dev.to/devteam/for-empowering-community-2k6h&#34;&gt;See our announcement post&lt;/a&gt; for a high-level overview of what Forem is.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.to&#34;&gt;dev.to&lt;/a&gt; (or just DEV) is hosted by Forem. It is a community of software developers who write articles, take part in discussions, and build their professional profiles. We value supportive and constructive dialogue in the pursuit of great code and career growth for all members. The ecosystem spans from beginner to advanced developers, and all are welcome to find their place within our community. ❤️&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#what-is-forem&#34;&gt;What is Forem?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#local&#34;&gt;Local&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#containers&#34;&gt;Containers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#installation-documentation&#34;&gt;Installation Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#developer-documentation&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#core-team&#34;&gt;Core team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#vulnerability-disclosure&#34;&gt;Vulnerability disclosure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;For a place to have open discussions on features, voice your ideas, or get help with general questions please visit our community at &lt;a href=&#34;https://forem.dev/&#34;&gt;forem.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to contribute to Forem! Please check out the &lt;a href=&#34;https://developers.forem.com/contributing-guide/forem&#34;&gt;Contributing to Forem guide&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This section provides a high-level quick start guide. If you&#39;re looking for a more thorough installation guide (for example &lt;a href=&#34;https://developers.forem.com/getting-started/installation/mac&#34;&gt;with macOS&lt;/a&gt;, you&#39;ll want to refer to our complete &lt;a href=&#34;https://developers.forem.com/&#34;&gt;Developer Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We run on a &lt;a href=&#34;https://rubyonrails.org/&#34;&gt;Rails&lt;/a&gt; backend, and we are currently transitioning to a &lt;a href=&#34;https://preactjs.com/&#34;&gt;Preact&lt;/a&gt;-first frontend.&lt;/p&gt; &#xA;&lt;p&gt;A more complete overview of our stack is available in &lt;a href=&#34;https://developers.forem.com/technical-overview/stack&#34;&gt;our docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;strong&gt;launch Forem in Gitpod&lt;/strong&gt;, navigate to &lt;a href=&#34;https://gitpod.io/#https://github.com/%7Byour_github_username%7D/forem&#34;&gt;https://gitpod.io/#https://github.com/{your_github_username}/forem&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;h4&gt;Local&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt;: we recommend using &lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt; to install the Ruby version listed on the badge.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/&#34;&gt;Yarn&lt;/a&gt; 1.x: please refer to their &lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install&#34;&gt;installation guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; 11 or higher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imagemagick.org/&#34;&gt;ImageMagick&lt;/a&gt;: please refer to ImageMagick&#39;s &lt;a href=&#34;https://imagemagick.org/script/download.php&#34;&gt;installation instructions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; 4 or higher.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Containers&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/libpod&#34;&gt;Podman&lt;/a&gt; 1.9.2 or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/podman-compose&#34;&gt;Podman Compose&lt;/a&gt; 0.1.5 or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;OS X&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Docker Desktop for Mac&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Please see our installation guides, such as the &lt;a href=&#34;https://developers.forem.com/getting-started/installation/mac&#34;&gt;one for macOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developer Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.forem.com&#34;&gt;Check out our dedicated docs page for more technical documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Core team&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/ben&#34;&gt;@benhalpern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/jess&#34;&gt;@jessleenyc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/peter&#34;&gt;@peterkimfrank&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/maestromac&#34;&gt;@maestromac&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/andy&#34;&gt;@zhao-andy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/lightalloy&#34;&gt;@lightalloy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dev.to/joshpuetz&#34;&gt;@joshpuetz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/juliannatetreault&#34;&gt;@juliannatetreault&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/ridhwana&#34;&gt;@ridhwana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/fdoxyz&#34;&gt;@fdoxyz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/msarit&#34;&gt;@msarit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/jdoss&#34;&gt;@jdoss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/coffeecraftcode&#34;&gt;@cmgorton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/andygeorge&#34;&gt;@andygeorge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/phannon716&#34;&gt;@phannon716&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/s_aitchison&#34;&gt;@s_aitchison&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/rt4914&#34;&gt;@rt4914&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/jeremyf&#34;&gt;@jeremyf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/dscottS3&#34;&gt;@dscottS3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/asheren&#34;&gt;@asheren&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Vulnerability disclosure&lt;/h2&gt; &#xA;&lt;p&gt;Forem is the open source software which powers &lt;a href=&#34;https://dev.to&#34;&gt;DEV&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We welcome security research on DEV under the terms of our &lt;a href=&#34;https://dev.to/security&#34;&gt;vulnerability disclosure policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to the &lt;a href=&#34;https://github.com/twitter/twemoji&#34;&gt;Twemoji project&lt;/a&gt; for the usage of their emojis.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file in our repository for the full text.&lt;/p&gt; &#xA;&lt;p&gt;Like many open source projects, we require that contributors provide us with a Contributor License Agreement (CLA). By submitting code to the Forem project, you are granting us a right to use that code under the terms of the CLA.&lt;/p&gt; &#xA;&lt;p&gt;Our version of the CLA was adapted from the Microsoft Contributor License Agreement, which they generously made available to the public domain under Creative Commons CC0 1.0 Universal.&lt;/p&gt; &#xA;&lt;p&gt;Any questions, please refer to our &lt;a href=&#34;https://developers.forem.com/licensing/&#34;&gt;license FAQ&lt;/a&gt; doc or email &lt;a href=&#34;mailto:yo@dev.to&#34;&gt;yo@dev.to&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Sloan, the sloth mascot&#34; width=&#34;250px&#34; src=&#34;https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/31047/af153cd6-9994-4a68-83f4-8ddf3e13f0bf.jpg&#34;&gt; &lt;br&gt; &lt;strong&gt;Happy Coding&lt;/strong&gt; ❤️ &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/forem/forem/main/#Table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lewagon/setup</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/lewagon/setup</id>
    <link href="https://github.com/lewagon/setup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup instructions for Le Wagon&#39;s students on their first day of Web Development Bootcamp&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;In Chinese?&lt;/h2&gt; &#xA;&lt;p&gt;如果你在参加中文课程，请打开&lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/README.cn.md&#34;&gt;中文设置指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;¿En Español?&lt;/h2&gt; &#xA;&lt;p&gt;Haga clic en &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/README.es.md&#34;&gt;este enlace&lt;/a&gt; para acceder a la versión en español de la configuración.&lt;/p&gt; &#xA;&lt;h2&gt;En Français ?&lt;/h2&gt; &#xA;&lt;p&gt;Clique sur &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/README.fr.md&#34;&gt;ce lien&lt;/a&gt; pour accéder à la version française du setup.&lt;/p&gt; &#xA;&lt;h2&gt;In English&lt;/h2&gt; &#xA;&lt;p&gt;Setup guides for &lt;a href=&#34;https://www.lewagon.com&#34;&gt;Le Wagon&lt;/a&gt; Web Development course. Please choose your operating system (OS):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/macos.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/setup/master/images/apple_logo.png&#34; alt=&#34;macOS&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/windows.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/setup/master/images/windows_logo.png&#34; alt=&#34;Windows&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/setup/master/ubuntu.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/setup/master/images/linux_logo.png&#34; alt=&#34;Ubuntu&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>bayandin/awesome-awesomeness</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/bayandin/awesome-awesomeness</id>
    <link href="https://github.com/bayandin/awesome-awesomeness" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of awesome awesomeness&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Awesomeness&lt;/h1&gt; &#xA;&lt;p&gt;A curated list of amazingly awesome awesomeness.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming Languages Package Manager&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/damon-kwok/awesome-package-manager&#34;&gt;Package-Manager&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming Languages&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ohenley/awesome-ada&#34;&gt;Ada(Spark)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jdauphant/awesome-ansible&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ahkscript/awesome-AutoHotkey&#34;&gt;AutoHotkey&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/J2TeaM/awesome-AutoIt&#34;&gt;AutoIt&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://notabug.org/koz.ross/awesome-c&#34;&gt;C&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fffaraz/awesome-cpp&#34;&gt;C/C++&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/onqtam/awesome-cmake&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Clojure &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/mbuczko/awesome-clojure&#34;&gt;by @mbuczko&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/razum2um/awesome-clojure&#34;&gt;by @razum2um&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/seancoyne/awesome-coldfusion&#34;&gt;ColdFusion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Common Lisp &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/CodyReichert/awesome-cl&#34;&gt;Common Lisp Libraries&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/GustavBertram/awesome-common-lisp-learning-list&#34;&gt;Learning Common Lisp&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/soroushchehresa/awesome-coronavirus&#34;&gt;Coronavirus&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/veelenga/awesome-crystal&#34;&gt;Crystal&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/zhaopuming/awesome-d&#34;&gt;D&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Fr0sT-Brutal/awesome-delphi&#34;&gt;Delphi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/h4cc/awesome-elixir&#34;&gt;Elixir&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/isRuslan/awesome-elm&#34;&gt;Elm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Erlang &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/0xAX/erlang-bookmarks&#34;&gt;by @0xAX&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/drobakowski/awesome-erlang&#34;&gt;by @drobakowski&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/unbalancedparentheses/spawnedshelter&#34;&gt;by @unbalancedparentheses&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fsprojects/awesome-fsharp&#34;&gt;F#&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rabbiabram/awesome-fortran&#34;&gt;Fortran&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tmrts/go-patterns&#34;&gt;Go Patterns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kdabir/awesome-groovy&#34;&gt;Groovy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/krispo/awesome-haskell&#34;&gt;Haskell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/joaomilho/awesome-idris&#34;&gt;Idris&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/akullpp/awesome-java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sorrycc/awesome-javascript&#34;&gt;JavaScript&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/AngularClass/awesome-angular&#34;&gt;Angular 2&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/nmec/awesome-ember&#34;&gt;Ember.js&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/micromata/awesome-javascript-learning&#34;&gt;JavaScript Learning Resources&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/ellerbrock/awesome-koa&#34;&gt;Koa&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome-nodejs&#34;&gt;Node.js&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/bcoe/awesome-cross-platform-nodejs&#34;&gt;Cross-platform Node.js&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/talentlessguy/awesome-node-esm&#34;&gt;Node ESM&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/enaqx/awesome-react&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/flagello/awesome-sveltejs&#34;&gt;Svelte&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/vuejs/awesome-vue&#34;&gt;VueJS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/svaksha/Julia.jl&#34;&gt;Julia&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/KotlinBy/awesome-kotlin&#34;&gt;Kotlin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bipinvaylu/awesome-kotlin-native&#34;&gt;Kotlin/Native&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Lua &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/forhappy/awesome-lua&#34;&gt;by @forhappy&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/LewisJEllis/awesome-lua&#34;&gt;by @lewisjellis&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ramnes/awesome-mongodb&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/shlomi-noach/awesome-mysql&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;.NET - &lt;a href=&#34;https://github.com/mehdihadeli/awesome-dotnet-core-education&#34;&gt;by @mehdihadeli&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/quozd/awesome-dotnet&#34;&gt;by @quozd&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/tallesl/net-libraries-that-make-your-life-easier&#34;&gt;by @tallesl&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/thangchung/awesome-dotnet-core&#34;&gt;by @thangchung&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/VPashkov/awesome-nim&#34;&gt;Nim&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ocaml-community/awesome-ocaml&#34;&gt;OCaml&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hachiojipm/awesome-perl&#34;&gt;Perl&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ziadoz/awesome-php&#34;&gt;PHP&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/FriendsOfCake/awesome-cakephp&#34;&gt;CakePHP&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dhamaniasad/awesome-postgres&#34;&gt;Postgres&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Python &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/kirang89/pycrumbs&#34;&gt;by @kirang89&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/svaksha/pythonidae&#34;&gt;by @svaksha&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/trekhleb/learn-python&#34;&gt;by @trekhleb&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/vinta/awesome-python&#34;&gt;by @vinta&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/quobit/awesome-python-in-education&#34;&gt;awesome-python-in-education&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/qinwf/awesome-R&#34;&gt;R&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Ruby &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/dreikanter/ruby-bookmarks&#34;&gt;by @dreikanter&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/markets/awesome-ruby&#34;&gt;by @markets&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Sdogruyol/awesome-ruby&#34;&gt;by @Sdogruyol&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/asyraffff/Open-Source-Ruby-and-Rails-Apps&#34;&gt;by @asyraffff&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rust-unofficial/awesome-rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/huyingjie/awesome-SAS&#34;&gt;SAS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lauris/awesome-scala&#34;&gt;Scala&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/alebcay/awesome-shell&#34;&gt;Shell&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Swift &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/matteocrippa/awesome-swift&#34;&gt;by @matteocrippa&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/MaxChen/awesome-swift-and-tutorial-resources&#34;&gt;by @MaxChen&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Wolg/awesome-swift&#34;&gt;by @Wolg&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://swift.zeef.com/robin.eggenkamp&#34;&gt;from ZEEF by @Edubits&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;TypeScript &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/brookshi/awesome-typescript-projects&#34;&gt;by @brookshi&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/dzharii/awesome-typescript&#34;&gt;by @dzharii&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/ellerbrock/awesome-typescript&#34;&gt;by @ellerbrock&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/vlang/awesome-v&#34;&gt;V&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;General&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/phanan/htaccess&#34;&gt;.htaccess&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Accessibility &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/a11yproject/a11yproject.com&#34;&gt;by @a11yproject&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/brunopulis/awesome-a11y&#34;&gt;by @brunopulis&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lorabv/awesome-agile&#34;&gt;Agile&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/algolia/awesome-algolia&#34;&gt;Algolia&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tayllan/awesome-algorithms&#34;&gt;Algorithms&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/enjalot/algovis&#34;&gt;Algorithms Visualisation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/okulbilisim/awesome-big-o&#34;&gt;Big O Notation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/awesome-aws&#34;&gt;Amazon Web Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/onurakpolat/awesome-analytics&#34;&gt;Analytics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/JStumpp/awesome-android&#34;&gt;Android&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/LinuxCafeFederation/awesome-android&#34;&gt;Android Apps&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/pedronveloso/awesome-android-release-notes&#34;&gt;Android Release Notes&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/ashishb/android-security-awesome&#34;&gt;Android Security&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/wasabeef/awesome-android-ui&#34;&gt;Android UI&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/HenryHoggard/awesome-arm-exploitation&#34;&gt;ARM Exploitation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/simskij/awesome-software-architecture&#34;&gt;Software Architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Lembed/Awesome-arduino&#34;&gt;Arduino&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/owainlewis/awesome-artificial-intelligence&#34;&gt;Artificial intelligence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;API &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Kikobeats/awesome-api&#34;&gt;by @Kikobeats&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/toddmotto/public-apis&#34;&gt;by @toddmotto&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/joeljfischer/awesome-apple&#34;&gt;Apple&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/iCHAIT/awesome-macOS&#34;&gt;OS X&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/ashishb/osx-and-ios-security-awesome&#34;&gt;OS X and iOS Security&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/beaconinside/awesome-beacon&#34;&gt;Beacons&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Big data &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/onurakpolat/awesome-bigdata&#34;&gt;by @onurakpolat&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/zenkay/bigdata-ecosystem&#34;&gt;by @zenkay&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/youngwookim/awesome-hadoop&#34;&gt;Hadoop&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/AdrienTorris/awesome-blazor&#34;&gt;Blazor&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Blockchain &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/0xtokens/awesome-blockchain&#34;&gt;by @0xtokens&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/imbaniac/awesome-blockchain&#34;&gt;by @imbaniac&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/coderplex/awesome-blockchain&#34;&gt;by @coderplex&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/hitripod/awesome-blockchain&#34;&gt;by @hitripod&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/iNiKe/awesome-blockchain&#34;&gt;by @iNiKe&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/igorbarinov/awesome-blockchain&#34;&gt;by @igorbarinov&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/istinspring/awesome-blockchain&#34;&gt;by @istinspring&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/openblockchains/awesome-blockchains&#34;&gt;by @openblockchains&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/kennethreitz/awesome-coins&#34;&gt;by @kennethreitz&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/holographicio/awesome-token-sale&#34;&gt;awesome-token-sale&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Bitcoin &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/btcbrdev/awesome-btcdev&#34;&gt;by @btcbrdev&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/igorbarinov/awesome-bitcoin&#34;&gt;by @igorbarinov&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/alexk111/awesome-bitcoin-payment-processors&#34;&gt;Bitcoin Payment Processors&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Ethereum &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/vinsgo/awesome-ethereum&#34;&gt;by @vinsgo&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/pirapira/awesome-ethereum-virtual-machine&#34;&gt;awesome-ethereum-virtual-machine&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/Tom2718/Awesome-Ethereum&#34;&gt;by @Tom2718&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/vhpoet/awesome-ripple&#34;&gt;Ripple&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/melvin0008/awesome-projects-boilerplates&#34;&gt;Boilerplates&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Books &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/EbookFoundation/free-programming-books&#34;&gt;Free Programming Books&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/ligurio/free-software-testing-books&#34;&gt;Free Software Testing Books&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/hackerkid/Mind-Expanding-Books&#34;&gt;Mind Expanding Books&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/therebelrobot/awesome-bootstrap&#34;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/SaintFenix/Awesome-BSD-Ports-Programs-And-Projects&#34;&gt;BSD Software&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/componently-com/awesome-building-blocks-for-web-apps&#34;&gt;Building Blocks for Web Apps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lindelof/awesome-web-effect&#34;&gt;Web Effect&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nordicgiant2/awesome-landing-page&#34;&gt;Landing Page&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/riderx/awesome-capacitor&#34;&gt;Capacitor&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ZYSzys/awesome-captcha&#34;&gt;Captcha&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mauriciovieira/awesome-challenges&#34;&gt;Challenges&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rishirdua/awesome-code-formatters&#34;&gt;Code Formatters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/awesome-community-detection&#34;&gt;Community Detection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lnishan/awesome-competitive-programming&#34;&gt;Competitive Programming&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jbhuang0604/awesome-computer-vision&#34;&gt;Computer Vision&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/RichardLitt/awesome-conferences&#34;&gt;Conferences&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ciandcd/awesome-ciandcd&#34;&gt;Continuous Delivery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mortenjust/awesome-conversational/&#34;&gt;Conversational UI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/busterc/awesome-cordova&#34;&gt;Cordova&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/prakhar1989/awesome-courses&#34;&gt;Courses&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/shime/creative-commons-media&#34;&gt;Creative Commons Media&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Cryptography &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/MaciejCzyzewski/retter&#34;&gt;by @MaciejCzyzewski&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/sobolevn/awesome-cryptography&#34;&gt;by @sobolevn&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/coinpride/CryptoList&#34;&gt;by @coinpride&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pFarb/awesome-crypto-papers&#34;&gt;Crypto Papers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sotayamashita/awesome-css&#34;&gt;CSS&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/troxler/awesome-css-frameworks&#34;&gt;CSS Frameworks&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bulutyazilim/awesome-datascience&#34;&gt;Data Science&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/jupyter-naas/awesome-notebooks&#34;&gt;Notebooks&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Data Science with Python &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/r0f1/datascience&#34;&gt;by @r0f1&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/krzjoa/awesome-python-data-science&#34;&gt;by @krzjoa&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fasouto/awesome-dataviz&#34;&gt;Data Visualization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/numetriclabz/awesome-db&#34;&gt;Database&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/dahlia/awesome-sqlalchemy&#34;&gt;SQLAlchemy&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Datasets &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/caesar0301/awesome-public-datasets&#34;&gt;by @caesar0301&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/leomaurodesenv/game-datasets&#34;&gt;by @leomaurodesenv&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Deep Learning &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/ChristosChristofidis/awesome-deep-learning&#34;&gt;by @ChristosChristofidis&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/guillaume-chevalier/awesome-deep-learning-resources&#34;&gt;by @guillaume-chevalier&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/tigerneil/awesome-deep-rl&#34;&gt;by @tigerneil&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/nerox8664/awesome-computer-vision-models&#34;&gt;by @nerox8664&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/awesome-decision-tree-papers&#34;&gt;Decision Tree Papers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/DovAmir/awesome-design-patterns&#34;&gt;Design Patterns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/LisaDziuba/Awesome-Design-Tools&#34;&gt;Design Tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gztchan/awesome-design&#34;&gt;Design&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jondot/awesome-devenv&#34;&gt;Dev Env&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/joubertredrat/awesome-devops&#34;&gt;DevOps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TaptuIT/awesome-devsecops&#34;&gt;DevSecOps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/wsvincent/awesome-django&#34;&gt;Django&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/veggiemonk/awesome-docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/PharkMillups/beautiful-docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/webpro/awesome-dotfiles&#34;&gt;Dotfiles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome-electron&#34;&gt;Electron&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/emacs-tw/awesome-emacs&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nhivp/Awesome-Embedded&#34;&gt;Embedded&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/HussainAther/awesome-ethics&#34;&gt;Ethics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kdeldycke/awesome-falsehood&#34;&gt;Falsehood&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mjhea0/awesome-fastapi&#34;&gt;FastAPI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/andrewda/awesome-frc&#34;&gt;FIRST Robotics Competition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mjhea0/awesome-flask&#34;&gt;Flask&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lborgav/awesome-fluidapp&#34;&gt;FluidApp Resources&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Solido/awesome-flutter&#34;&gt;Flutter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/brabadu/awesome-fonts&#34;&gt;Fonts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ishanvyas22/awesome-open-source-systems&#34;&gt;Free Open Source Software (FOSS)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/awesome-fraud-detection-papers&#34;&gt;Fraud Detection Papers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ripienaar/free-for-dev&#34;&gt;Free Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Frontend &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/dypsilon/frontend-dev-bookmarks&#34;&gt;by @dypsilon&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/moklick/frontend-stuff&#34;&gt;by @moklick&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ellisonleao/magictools&#34;&gt;Game Development&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/leereilly/games&#34;&gt;Games&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;GIF &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Kikobeats/awesome-gif&#34;&gt;by @Kikobeats&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/vsouza/awesome-gists&#34;&gt;Gists&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dictcp/awesome-git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kikobeats/awesome-github&#34;&gt;GitHub&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/stefanbuck/awesome-browser-extensions-for-github&#34;&gt;Browser extensions for GitHub&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/AntBranch/awesome-github&#34;&gt;GitHub - Chinese&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/awesome-gradient-boosting-papers&#34;&gt;Gradient Boosting Papers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/awesome-graph-classification&#34;&gt;Graph Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/chentsulin/awesome-graphql&#34;&gt;GraphQL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/btomashvili/awesome-growth-hacking&#34;&gt;Growth Hacking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Guides &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/narkoz/guides&#34;&gt;by @narkoz&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/RichardLitt/awesome-styleguides&#34;&gt;by @RichardLitt&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Hacking &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/carpedm20/awesome-hacking&#34;&gt;by @carpedm20&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Hack-with-Github/Awesome-Hacking&#34;&gt;by @Hack-with-Github&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/diegocard/awesome-html5&#34;&gt;HTML5&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/paralax/awesome-honeypots&#34;&gt;Honeypots&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bnb/awesome-hyper&#34;&gt;Hyper&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/meirwah/awesome-incident-response&#34;&gt;Incident Response&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/heyalexej/awesome-images&#34;&gt;Images&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/oskar-j/awesome-image-coloring&#34;&gt;Image coloring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jpomykala/awesome-i18n&#34;&gt;Internationalization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/HQarroum/awesome-iot&#34;&gt;Internet of Things (IOT)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/vsouza/awesome-ios&#34;&gt;iOS&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/v-braun/awesome-cocoa&#34;&gt;Cocoa Controls&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/dkhamsing/open-source-ios-apps&#34;&gt;Open Source Apps&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/cjwirth/awesome-ios-ui&#34;&gt;UI&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/burningtree/awesome-json&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markusschanta/awesome-jupyter&#34;&gt;Jupyter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/deephacks/awesome-jvm&#34;&gt;JVM&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/monksy/awesome-kafka&#34;&gt;Kafka&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ahmdrefat/awesome-koans&#34;&gt;Koans&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/chiraggude/awesome-laravel&#34;&gt;Laravel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/LappleApple/awesome-leading-and-managing&#34;&gt;Leadership and Management&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/adius/awesome-lego&#34;&gt;Lego&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Friz-zy/awesome-linux-containers&#34;&gt;Linux Containers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/itech001/awesome-linux-resources&#34;&gt;Linux resources&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Lists &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/bayandin/awesome-awesomeness&#34;&gt;by @bayandin&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/jnv/lists&#34;&gt;by @jnv&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;by @sindresorhus&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;[Mac] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/xyNNN/awesome-mac&#34;&gt;by @xyNNN&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/justin-j/awesome-mac-apps&#34;&gt;by @justin-j&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/josephmisiti/awesome-machine-learning&#34;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rshipp/awesome-malware-analysis&#34;&gt;Malware Analysis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sachin1092/awesome-material&#34;&gt;Material Design&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/rossant/awesome-math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mikecroucher/awesome-MATLAB&#34;&gt;Matlab&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dreamingechoes/awesome-mental-health&#34;&gt;Mental Health&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/carlosperate/awesome-microbit&#34;&gt;micro:bit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kelvins/awesome-mlops&#34;&gt;MLOps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/alec-c4/awesome-mobile&#34;&gt;Mobile marketing and development&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/myshov/awesome-mobile-web-development&#34;&gt;Mobile Web Development&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/crazy-canux/awesome-monitoring&#34;&gt;Monitoring&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/roaldnefs/awesome-prometheus&#34;&gt;Prometheus&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/samber/awesome-prometheus-alerts&#34;&gt;Prometheus alerting rules&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/awesome-monte-carlo-tree-search-papers&#34;&gt;Monte Carlo Tree Search Papers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lucasmaiaesilva/awesome-motion-design-web&#34;&gt;Motion Design for Web&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/fcambus/nginx-resources&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Newsletters &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/vredniy/awesome-newsletters&#34;&gt;by @vredniy&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/webpro/awesome-newsletters&#34;&gt;by @webpro&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/mpron/awesome-newsletters&#34;&gt;by @mpron&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/aviaryan/awesome-no-login-web-apps&#34;&gt;No Login Web Apps&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/silky/awesome-open-science&#34;&gt;Open Science&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ibaaj/awesome-OpenSourcePhotography&#34;&gt;Open Source Photography&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/papers-we-love/papers-we-love&#34;&gt;Papers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Ghosh/awesome-podcasts&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/HussainAther/awesome-philosophy&#34;&gt;Philosophy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pditommaso/awesome-pipeline&#34;&gt;Pipelines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hugo53/awesome-ProductManager&#34;&gt;Product Manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Protocols &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/amir-arad/awesome-osc&#34;&gt;OSC&lt;/a&gt; (open sound control)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coreb1t/awesome-pentest-cheat-sheets&#34;&gt;Pentest Cheat Sheets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/quick-look-plugins&#34;&gt;Quick Look Plugins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kjw0612/awesome-random-forest&#34;&gt;Random-Forest&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Raspberry Pi &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/blackout314/awesome-raspberry-pi&#34;&gt;by @blackout314&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/thibmaek/awesome-raspberry-pi&#34;&gt;by @thibmaek&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jondot/awesome-react-native&#34;&gt;React Native&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/matiassingers/awesome-readme&#34;&gt;README&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/aloisdg/awesome-regex&#34;&gt;Regex&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lukasz-madon/awesome-remote-job&#34;&gt;Remote Job&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hugo53/awesome-RemoteWork&#34;&gt;Remote Work&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/marmelab/awesome-rest&#34;&gt;REST&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kiloreux/awesome-robotics&#34;&gt;Robotics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/protontypes/awesome-robotic-tooling&#34;&gt;Robotic Tooling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kjw0612/awesome-rnn&#34;&gt;RNN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/binhnguyennus/awesome-scalability&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome-scifi&#34;&gt;Science Fiction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Search Engine Optimization (SEO) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/marcobiedermann/search-engine-optimization&#34;&gt;by @marcobiedermann&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/sneg55/curatedseotools&#34;&gt;by @sneg55&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/teles/awesome-seo&#34;&gt;by @teles&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sbilly/awesome-security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kickball/awesome-selfhosted&#34;&gt;Selfhosted&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/anaibol/awesome-serverless&#34;&gt;Serverless&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/puresec/awesome-serverless-security/&#34;&gt;Serverless Security&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lawrencegripper/awesome-servicefabric&#34;&gt;Service Fabric&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mmcgrana/services-engineering&#34;&gt;Services Engineering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/adius/awesome-sheet-music&#34;&gt;Sheet Music&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/matiassingers/awesome-slack&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hwclass/awesome-sound&#34;&gt;Sound&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/elburz/awesome-space&#34;&gt;Space&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Hunter-Github/awesome-space-books&#34;&gt;Books and manuals&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/edobashira/speech-language-processing&#34;&gt;Speech and Natural Language Processing&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/arbox/nlp-with-ruby&#34;&gt;NLP with Ruby&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/yoloseem/awesome-sphinxdoc&#34;&gt;Sphinx Documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/KrishMunot/awesome-startup&#34;&gt;Startup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mre/awesome-static-analysis/&#34;&gt;Static Analysis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/RichardLitt/awesome-styleguides&#34;&gt;Styleguides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dreikanter/sublime-bookmarks&#34;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/protontypes/awesome-sustainable-technology&#34;&gt;Sustainable Technology&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/willianjusten/awesome-svg&#34;&gt;SVG&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gurre/awesome-swedish-opensource&#34;&gt;Swedish&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kahun/awesome-sysadmin&#34;&gt;Sysadmin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/miketheman/awesome-taglines&#34;&gt;Taglines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/aniftyco/awesome-tailwindcss&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/JanVanRyswyck/awesome-talks&#34;&gt;Talks&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/hzoo/awesome-gametalks&#34;&gt;Gaming&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ebertti/awesome-telegram&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/k4m4/terminals-are-sexy&#34;&gt;Terminals Are Sexy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/atinfo/awesome-test-automation&#34;&gt;Test Automation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TheJambo/awesome-testing&#34;&gt;Testing&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/aliesbelik/awesome-jmeter&#34;&gt;JMeter&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hslatman/awesome-threat-intelligence&#34;&gt;Threat Intelligence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/cjbarber/ToolsOfTheTrade&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Twilio-org/awesome-twilio&#34;&gt;Twilio&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/RyanNielson/awesome-unity&#34;&gt;Unity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kevinwuhoo/ui-styleguides&#34;&gt;UI Styleguide&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/anubhavsrivastava/awesome-ui-component-library&#34;&gt;UI Components for Styleguide&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sirredbeard/Awesome-UNIX&#34;&gt;UNIX&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/iJackUA/awesome-vagrant&#34;&gt;Vagrant&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jaredthecoder/awesome-vehicle-security&#34;&gt;Vehicle Security&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Vim &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/akrawchyk/awesome-vim&#34;&gt;by @akrawchyk&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/matteocrippa/awesome-vim&#34;&gt;by @matteocrippa&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/vinjn/awesome-vulkan&#34;&gt;Vulkan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/davidsonfellipe/awesome-wpo&#34;&gt;Web Performance Optimization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mateusortiz/webcomponents-the-right-way&#34;&gt;WebComponents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/miziomon/awesome-wordpress&#34;&gt;Wordpress&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/therebelrobot/awesome-workshopper&#34;&gt;Workshops&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benoitjadinon/awesome-xamarin&#34;&gt;Xamarin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;XMPP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/shantanu-deshmukh/awesome-ejabberd&#34;&gt;Ejabberd&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Jolg42/awesome-typography&#34;&gt;Typography&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;&lt;img src=&#34;http://i.creativecommons.org/l/by/4.0/88x31.png&#34; alt=&#34;Creative Commons License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bullet-train-co/bullet_train</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/bullet-train-co/bullet_train</id>
    <link href="https://github.com/bullet-train-co/bullet_train" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Open Source Ruby on Rails SaaS Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bullet Train Application Template&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re new to Bullet Train, start with the &lt;a href=&#34;https://bullettrain.co/docs&#34;&gt;Bullet Train Developer Documentation&lt;/a&gt; and the &lt;a href=&#34;https://bullettrain.co/docs/getting-started&#34;&gt;Getting Started&lt;/a&gt; guide. You should also &lt;a href=&#34;https://discord.gg/bullettrain&#34;&gt;join the community Discord server&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Building a New Application with Bullet Train&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re building a new application with Bullet Train, you don&#39;t want to &#34;Fork&#34; the template repository on GitHub. Instead, you should:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the template repository:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone git@github.com:bullet-train-co/bullet_train.git your_new_project_name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter the project directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd your_new_project_name&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the configuration script:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bin/configure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Open-source development sponsored by:&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.clickfunnels.com&#34;&gt;&lt;img src=&#34;https://images.clickfunnel.com/uploads/digital_asset/file/176632/clickfunnels-dark-logo.svg?sanitize=true&#34; width=&#34;575&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Provisioning a Production Environment&lt;/h2&gt; &#xA;&lt;p&gt;You can use this public repository to provision a new application and then push your private application code there later.&lt;/p&gt; &#xA;&lt;h3&gt;Heroku&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=http://github.com/bullet-train-co/bullet_train&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Heroku&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clicking this button will take you to the first step of a process that, when completed, will provision production-grade infrastructure and services for your Bullet Train application which will cost about &lt;strong&gt;$140/month&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once that process has completed, be sure to complete the other steps from the &lt;a href=&#34;https://bullettrain.co/docs/heroku&#34;&gt;Deploying to Heroku&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Render&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://render.com/deploy?repo=https://github.com/bullet-train-co/bullet_train&#34;&gt;&lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy to Render&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clicking this button will take you to the first step of a process that, when completed, will provision production-grade infrastructure for your Bullet Train application which will cost about &lt;strong&gt;$30/month&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you&#39;re done deploying to Render, you need to go into &#34;Dashboard&#34; &amp;gt; &#34;web&#34;, copy the server URL, and then go into &#34;Env Groups&#34; &amp;gt; &#34;settings&#34; and paste the URL into the value for &lt;code&gt;BASE_URL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to Bullet Train&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re looking contribute to Bullet Train, you should &#34;Fork&#34; this template repository on GitHub, like so:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Visit &lt;a href=&#34;https://github.com/bullet-train-co/bullet_train&#34;&gt;https://github.com/bullet-train-co/bullet_train&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &#34;Fork&#34; in the top-right corner.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the account where you want to fork the repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &#34;Code&#34; button on the new repository and copy the SSH path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone your forked repository using the SSH path you copied, like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone git@github.com:your-account/bullet_train.git&#xA;cd bullet_train&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the setup script:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the application:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This &lt;code&gt;README.md&lt;/code&gt; file will be replaced with &lt;a href=&#34;https://raw.githubusercontent.com/bullet-train-co/bullet_train/main/README.example.md&#34;&gt;&lt;code&gt;README.example.md&lt;/code&gt;&lt;/a&gt; after running &lt;code&gt;bin/configure&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CocoaPods/CocoaPods</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/CocoaPods/CocoaPods</id>
    <link href="https://github.com/CocoaPods/CocoaPods" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Cocoa Dependency Manager.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/CocoaPods/shared_resources/master/assets/cocoapods-banner-readme.png&#34; alt=&#34;CocoaPods Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods: The Cocoa dependency manager&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CocoaPods/CocoaPods/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/CocoaPods/CocoaPods/Specs&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/cocoapods&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/cocoapods&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/CocoaPods/CocoaPods/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/8f0fe544baf2ae1acc2b/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/CocoaPods/CocoaPods/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/8f0fe544baf2ae1acc2b/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CocoaPods manages dependencies for your Xcode projects.&lt;/p&gt; &#xA;&lt;p&gt;You specify the dependencies for your project in a simple text file: your &lt;code&gt;Podfile&lt;/code&gt;. CocoaPods recursively resolves dependencies between libraries, fetches source code for all dependencies, and creates and maintains an Xcode workspace to build your project. The latest released Xcode versions and the prior version are supported.&lt;/p&gt; &#xA;&lt;p&gt;Installing and updating CocoaPods is very easy. Don&#39;t miss the &lt;a href=&#34;https://guides.cocoapods.org/using/getting-started.html#installation&#34;&gt;Installation guide&lt;/a&gt; and the &lt;a href=&#34;https://guides.cocoapods.org/using/getting-started.html&#34;&gt;Getting Started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project Goals&lt;/h2&gt; &#xA;&lt;p&gt;CocoaPods aims to improve the engagement with, and discoverability of, third party open-source Cocoa libraries. These project goals influence and drive the design of CocoaPods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create and share libraries, and use them in your own projects, without creating extra work for library authors. Integrate non-CocoaPods libraries and hack on your own fork of any CocoaPods library with a simple transparent &lt;code&gt;Podspec&lt;/code&gt; standard.&lt;/li&gt; &#xA; &lt;li&gt;Allow library authors to structure their libraries however they like.&lt;/li&gt; &#xA; &lt;li&gt;Save time for library authors by automating a lot of Xcode work not related to their libraries&#39; functionality.&lt;/li&gt; &#xA; &lt;li&gt;Support any source management system. (Currently supported are &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;svn&lt;/code&gt;, &lt;code&gt;mercurial&lt;/code&gt;, &lt;code&gt;bazaar&lt;/code&gt;, and various types of archives downloaded over HTTP.)&lt;/li&gt; &#xA; &lt;li&gt;Promote a culture of distributed collaboration on pods, but also provide features only possible with a centralised solution to foster a community.&lt;/li&gt; &#xA; &lt;li&gt;Build tools on top of the core Cocoa development system, including those typically deployed to other operating systems, such as web-services.&lt;/li&gt; &#xA; &lt;li&gt;Provide opinionated and automated integration, but make it completely optional. You may manually integrate your CocoaPods dependencies into your Xcode project as you see fit, with or without a workspace.&lt;/li&gt; &#xA; &lt;li&gt;Solve everyday problems for Cocoa and Xcode developers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Lovingly sponsored by a collection of companies, see the footer of &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods.org&lt;/a&gt; for an up-to-date list.&lt;/p&gt; &#xA;&lt;h2&gt;Collaborate&lt;/h2&gt; &#xA;&lt;p&gt;All CocoaPods development happens on GitHub. Contributions make for good karma and we &lt;a href=&#34;https://blog.cocoapods.org/starting-open-source/&#34;&gt;welcome new&lt;/a&gt; contributors with joy. We take contributors seriously, and thus have a contributor &lt;a href=&#34;https://raw.githubusercontent.com/CocoaPods/CocoaPods/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Link&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods.org&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Homepage and search for Pods.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://twitter.com/CocoaPods&#34;&gt;@CocoaPods&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Follow CocoaPods on Twitter to stay up to date.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://blog.cocoapods.org&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The CocoaPods blog.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://groups.google.com/group/cocoapods&#34;&gt;Mailing List&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Feel free to ask any kind of question.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://guides.cocoapods.org&#34;&gt;Guides&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Everything you want to know about CocoaPods.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/CocoaPods/raw/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;See the changes introduced in each CocoaPods version.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://feeds.cocoapods.org/new-pods.rss&#34;&gt;New Pods RSS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Don&#39;t miss any new Pods.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaPods/CocoaPods/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Find out the standards we hold ourselves to.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;p&gt;CocoaPods is composed of the following projects:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/CocoaPods/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/CocoaPods/CocoaPods/Specs&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/CocoaPods&#34;&gt;CocoaPods&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The CocoaPods command line tool.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://guides.cocoapods.org&#34;&gt;guides&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Core/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/CocoaPods/Core/Specs&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Core&#34;&gt;CocoaPods Core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Support for working with specifications and podfiles.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://guides.cocoapods.org/contributing/components.html&#34;&gt;docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/cocoapods-downloader/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/CocoaPods/CocoaPods-Downloader/Spec&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/cocoapods-downloader&#34;&gt;CocoaPods Downloader&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Downloaders for various source types.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/cocoapods-downloader&#34;&gt;docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Xcodeproj/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/CocoaPods/Xcodeproj/Specs&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Xcodeproj&#34;&gt;Xcodeproj&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Create and modify Xcode projects from Ruby.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/xcodeproj&#34;&gt;docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://travis-ci.org/CocoaPods/CLAide&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/CocoaPods/CLAide/master.svg?style=flat&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/CLAide&#34;&gt;CLAide&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A small command-line interface framework.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/claide&#34;&gt;docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Molinillo/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/CocoaPods/Molinillo/test&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Molinillo&#34;&gt;Molinillo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;A powerful generic dependency resolver.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/molinillo&#34;&gt;docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/CocoaPods/Specs&#34;&gt;Master Repo &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Master repository of specifications.&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://guides.cocoapods.org/making/specs-and-specs-repo.html&#34;&gt;guides&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>rubysec/ruby-advisory-db</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/rubysec/ruby-advisory-db</id>
    <link href="https://github.com/rubysec/ruby-advisory-db" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A database of vulnerable Ruby Gems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruby Advisory Database&lt;/h1&gt; &#xA;&lt;p&gt;The Ruby Advisory Database is a community effort to compile all security advisories that are relevant to Ruby libraries.&lt;/p&gt; &#xA;&lt;p&gt;You can check your own Gemfile.locks against this database by using &lt;a href=&#34;https://github.com/rubysec/bundler-audit&#34;&gt;bundler-audit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Ruby security!&lt;/h2&gt; &#xA;&lt;p&gt;Do you know about a vulnerability that isn&#39;t listed in this database? Open an issue or submit a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;The database is a list of directories that match the names of Ruby libraries on &lt;a href=&#34;https://rubygems.org/&#34;&gt;rubygems.org&lt;/a&gt;. Within each directory are one or more advisory files for the Ruby library. These advisory files are named using the advisories&#39; &lt;a href=&#34;https://cve.mitre.org/&#34;&gt;CVE&lt;/a&gt; identifier number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gems/:&#xA;  actionpack/:&#xA;    CVE-2014-0130.yml  CVE-2014-7818.yml  CVE-2014-7829.yml  CVE-2015-7576.yml&#xA;    CVE-2015-7581.yml  CVE-2016-0751.yml  CVE-2016-0752.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;p&gt;Each advisory file contains the advisory information in &lt;a href=&#34;http://www.yaml.org/&#34;&gt;YAML&lt;/a&gt; format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;gem: examplegem&#xA;cve: 2013-0156&#xA;date: 2013-05-01&#xA;url: https://github.com/rubysec/ruby-advisory-db/issues/123456&#xA;title: |&#xA;  Ruby on Rails params_parser.rb Action Pack Type Casting Parameter Parsing&#xA;  Remote Code Execution&#xA;&#xA;description: |&#xA;  Ruby on Rails contains a flaw in params_parser.rb of the Action Pack.&#xA;  The issue is triggered when a type casting error occurs during the parsing&#xA;  of parameters. This may allow a remote attacker to potentially execute&#xA;  arbitrary code.&#xA;&#xA;cvss_v2: 10.0&#xA;cvss_v3: 9.8&#xA;&#xA;patched_versions:&#xA;  - ~&amp;gt; 2.3.15&#xA;  - ~&amp;gt; 3.0.19&#xA;  - ~&amp;gt; 3.1.10&#xA;  - &#34;&amp;gt;= 3.2.11&#34;&#xA;unaffected_versions:&#xA;  - ~&amp;gt; 2.4.3&#xA;&#xA;related:&#xA;  cve:&#xA;    - 2013-1234567&#xA;    - 2013-1234568&#xA;  url:&#xA;    - https://github.com/rubysec/ruby-advisory-db/issues/123457&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Schema&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gem&lt;/code&gt; [String] (required): Name of the affected gem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;library&lt;/code&gt; [String] (optional): Name of the ruby library which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;framework&lt;/code&gt; [String] (optional): Name of the framework which the affected gem belongs to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;platform&lt;/code&gt; [String] (optional): If this vulnerability is platform-specific, name of platform this vulnerability affects (e.g. jruby)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cve&lt;/code&gt; [String] (optional): Common Vulnerabilities and Exposures (CVE) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;osvdb&lt;/code&gt; [Integer] (optional): Open Sourced Vulnerability Database (OSVDB) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghsa&lt;/code&gt; [String] (optional): GitHub Security Advisory (GHSA) ID.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;url&lt;/code&gt; [String] (required): The URL to the full advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; [String] (required): The title of the advisory or individual vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date&lt;/code&gt; [Date] (required): The public disclosure date of the advisory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt; [String] (required): One or more paragraphs describing the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v2&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/v2/guide&#34;&gt;CVSSv2&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cvss_v3&lt;/code&gt; [Float] (optional): The &lt;a href=&#34;https://www.first.org/cvss/user-guide&#34;&gt;CVSSv3&lt;/a&gt; score for the vulnerability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unaffected_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the unaffected versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;patched_versions&lt;/code&gt; [Array&amp;lt;String&amp;gt;] (optional): The version requirements for the patched versions of the Ruby library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;related&lt;/code&gt; [Hash&amp;lt;Array&amp;lt;String&amp;gt;&amp;gt;] (optional): Sometimes an advisory references many urls and other identifiers. Supported keys: &lt;code&gt;cve&lt;/code&gt;, &lt;code&gt;ghsa&lt;/code&gt;, &lt;code&gt;osvdb&lt;/code&gt;, and &lt;code&gt;url&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;notes&lt;/code&gt; [String] (optional): Internal notes regarding the vulnerability&#39;s inclusion in this database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;p&gt;Prior to submitting a pull request, run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle install&#xA;bundle exec rspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub Advisory Sync&lt;/h3&gt; &#xA;&lt;p&gt;There is a script that will create initial yaml files for RubyGem advisories which are in the &lt;a href=&#34;https://developer.github.com/v4/object/securityadvisory/&#34;&gt;GitHub Security Advisory API&lt;/a&gt;, but are not already in this dataset. This script can be periodically run to ensure this repo has all the data that is present in the GitHub Advisory data.&lt;/p&gt; &#xA;&lt;p&gt;The GitHub Advisory API requires a token to access it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It can be a completely scopeless token (recommended); it does not require any permissions at all.&lt;/li&gt; &#xA; &lt;li&gt;Get yours at &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;https://github.com/settings/tokens&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the GitHub Advisory sync, start by executing the rake task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GH_API_TOKEN=&amp;lt;your GitHub API Token&amp;gt; bundle exec rake sync_github_advisories&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The rake task will write yaml files for any missing advisories.&lt;/li&gt; &#xA; &lt;li&gt;Those files must be further edited. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;cvss_v3&lt;/code&gt; field by following the CVE link and getting it from page&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;patched_versions&lt;/code&gt; field, using the comments at the bottom of the file&lt;/li&gt; &#xA;   &lt;li&gt;Fill in &lt;code&gt;unaffected_versions&lt;/code&gt;, optional, if there are unaffected_versions&lt;/li&gt; &#xA;   &lt;li&gt;delete the GitHub data at the bottom of the yaml file&lt;/li&gt; &#xA;   &lt;li&gt;double check all the data, commit it, and make a PR &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;The GitHub Advisory data is structured opposite of RubySec unfortunately: GitHub identifies version range which are vulnerable; RubySec identifies version ranges which are not vulnerable. This is why some manual work to translate is needed.&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/rubysec/ruby-advisory-db/raw/master/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This database also includes data from the &lt;a href=&#34;http://www.osvdb.org/&#34;&gt;Open Sourced Vulnerability Database&lt;/a&gt; developed by the Open Security Foundation (OSF) and its contributors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github-changelog-generator/github-changelog-generator</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/github-changelog-generator/github-changelog-generator</id>
    <link href="https://github.com/github-changelog-generator/github-changelog-generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatically generate change log from your tags, issues, labels and pull requests on GitHub.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/github_changelog_generator&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/github_changelog_generator.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/github-changelog-generator/github-changelog-generator&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/github-changelog-generator/github-changelog-generator.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://inch-ci.org/github/github-changelog-generator/github-changelog-generator&#34;&gt;&lt;img src=&#34;http://inch-ci.org/github/github-changelog-generator/github-changelog-generator.svg?sanitize=true&#34; alt=&#34;Inline docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/github-changelog-generator/chat?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/github-changelog-generator/chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/github-changelog-generator/chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;github-changelog-generator &lt;img src=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/images/logo.jpg&#34; alt=&#34;GitHub Logo&#34;&gt;&lt;/h1&gt; &#xA;&lt;!--&#xA;To update TOC, please run:&#xA;&gt; doctoc ./README.md --github&#xA; --&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#changelog-generation-has-never-been-so-easy&#34;&gt;Changelog generation has never been so easy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#whats-the-point-of-a-changelog&#34;&gt;&lt;em&gt;What’s the point of a changelog?&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#why-should-i-care&#34;&gt;&lt;em&gt;Why should I care?&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#running-with-cli&#34;&gt;Running with CLI:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#running-with-docker&#34;&gt;Running with Docker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#output-example&#34;&gt;Output example&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#params&#34;&gt;Params&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#params-file&#34;&gt;Params File&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#github-token&#34;&gt;GitHub token&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#migrating-from-a-manual-changelog&#34;&gt;Migrating from a manual changelog&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#rake-task&#34;&gt;Rake task&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#features-and-advantages-of-this-project&#34;&gt;Features and advantages of this project&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#using-the-summary-section-feature&#34;&gt;Using the summary section feature&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#projects-using-this-library&#34;&gt;Projects using this library&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#practical-use-cases&#34;&gt;Practical Use Cases&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#creating-github-release-notes&#34;&gt;Creating Github Release Notes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#am-i-missing-some-essential-feature&#34;&gt;Am I missing some essential feature?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#contact-us&#34;&gt;Contact us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h3&gt;Changelog generation has never been so easy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Fully automated changelog generation&lt;/strong&gt; - This gem generates a changelog file based on &lt;strong&gt;tags&lt;/strong&gt;, &lt;strong&gt;issues&lt;/strong&gt; and merged &lt;strong&gt;pull requests&lt;/strong&gt; (and splits them into separate lists according to labels) from &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) GitHub.&lt;/p&gt; &#xA;&lt;p&gt;Since you don&#39;t have to fill your &lt;code&gt;CHANGELOG.md&lt;/code&gt; manually now: just run the script, relax and take a cup of &lt;span&gt;☕&lt;/span&gt; before your next release! &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;What’s the point of a changelog?&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To make it easier for users and contributors to see precisely what notable changes have been made between each release (or version) of the project.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;Why should I care?&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Because software tools are for &lt;em&gt;people&lt;/em&gt;. &#34;Changelogs make it easier for users and contributors to see precisely what notable changes have been made between each release (or version) of the project.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;➡&lt;/span&gt; &lt;em&gt;&lt;a href=&#34;https://keepachangelog.com&#34;&gt;https://keepachangelog.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;GitHub Changelog Generator is a &lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;Ruby&lt;/a&gt; program, distributed as a RubyGem. The Ruby language homepage has an &lt;a href=&#34;https://www.ruby-lang.org/en/documentation/installation/&#34;&gt;Installation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install the gem like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install github_changelog_generator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending on your system, you &lt;em&gt;may&lt;/em&gt; need to run the shell as an Administrator (Windows), or use &lt;code&gt;sudo gem install github_changelog_generator&lt;/code&gt; (Linux).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Running with CLI:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;   github_changelog_generator -u github_project_namespace -p github_project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(where the project namespace is &lt;em&gt;likely&lt;/em&gt; your username if it&#39;s a project you own, but it could also be the namespace of the project)&lt;/p&gt; &#xA;&lt;h3&gt;Running with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker&lt;/a&gt; is an alternative to installing Ruby and the gem.&lt;/p&gt; &#xA;&lt;p&gt;Example invocation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -it --rm -v &#34;$(pwd)&#34;:/usr/local/src/your-app githubchangeloggenerator/github-changelog-generator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For GitHub Enterprise repos, specify &lt;em&gt;both&lt;/em&gt; &lt;code&gt;--github-site&lt;/code&gt; and &lt;code&gt;--github-api&lt;/code&gt; options:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; $ github_changelog_generator --github-site=&#34;https://github.yoursite.com&#34; \&#xA;                            --github-api=&#34;https://github.yoursite.com/api/v3/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This generates a &lt;code&gt;CHANGELOG.md&lt;/code&gt;, with pretty Markdown formatting.&lt;/p&gt; &#xA;&lt;h2&gt;Output example&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Look at &lt;strong&gt;&lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/strong&gt; for this project&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/skywinder/ActionSheetPicker-3.0/raw/develop/CHANGELOG.md&#34;&gt;ActionSheetPicker-3.0/CHANGELOG.md&lt;/a&gt; was generated by command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ github_changelog_generator -u github-changelog-generator -p ActionSheetPicker-3.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In general, it looks like this:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;&lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/tree/1.2.5&#34;&gt;1.2.5&lt;/a&gt; (2015-01-15)&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/compare/1.2.4...1.2.5&#34;&gt;Full Changelog&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Implemented enhancements:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Use milestone to specify in which version bug was fixed &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/issues/22&#34;&gt;#22&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Fixed bugs:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Error when trying to generate log for repo without tags &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/issues/32&#34;&gt;#32&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Merged pull requests:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;PrettyPrint class is included using lowercase &#39;pp&#39; &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/pull/43&#34;&gt;#43&lt;/a&gt; (&lt;a href=&#34;https://github.com/schwing&#34;&gt;schwing&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;support enterprise github via command line options &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/pull/42&#34;&gt;#42&lt;/a&gt; (&lt;a href=&#34;https://github.com/glenlovett&#34;&gt;glenlovett&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Params&lt;/h3&gt; &#xA;&lt;p&gt;Print help for all command-line options to learn more details:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ github_changelog_generator --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details about params, read the Wiki page: &lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/wiki/Advanced-change-log-generation-examples&#34;&gt;&lt;strong&gt;Advanced changelog generation examples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Params File&lt;/h3&gt; &#xA;&lt;p&gt;In your project root, you can put a params file named &lt;code&gt;.github_changelog_generator&lt;/code&gt; to override default params:&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;unreleased=false&#xA;future-release=5.0.0&#xA;since-tag=1.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub token&lt;/h3&gt; &#xA;&lt;p&gt;GitHub only allows &lt;strong&gt;50 unauthenticated requests per hour&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, it&#39;s recommended to run this script with authentication by using a &lt;strong&gt;token&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/settings/tokens/new?description=GitHub%20Changelog%20Generator%20token&#34;&gt;Generate a token here&lt;/a&gt; - you only need &#34;repo&#34; scope for private repositories&lt;/li&gt; &#xA; &lt;li&gt;Either: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run the script with &lt;code&gt;--token &amp;lt;your-40-digit-token&amp;gt;&lt;/code&gt;; &lt;strong&gt;OR&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set the &lt;code&gt;CHANGELOG_GITHUB_TOKEN&lt;/code&gt; environment variable to your 40 digit token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can set an environment variable by running the following command at the prompt, or by adding it to your shell profile (e.g., &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, etc):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export CHANGELOG_GITHUB_TOKEN=&#34;«your-40-digit-github-token»&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, if you get a message like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;API rate limit exceeded for github_username.&#xA;See: https://developer.github.com/v3/#rate-limiting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s time to create this token! (Or, wait an hour for GitHub to reset your unauthenticated request limit.)&lt;/p&gt; &#xA;&lt;h2&gt;Migrating from a manual changelog&lt;/h2&gt; &#xA;&lt;p&gt;Knowing how dedicated you are to your project, you probably haven&#39;t been waiting for &lt;code&gt;github-changelog-generator&lt;/code&gt; to keep a changelog. But you probably don&#39;t want your project&#39;s open issues and PRs for all past features listed in your historic changelog, either.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s where &lt;code&gt;--base &amp;lt;your-manual-changelog.md&amp;gt;&lt;/code&gt; comes in handy! This option lets append your old manual changelog to the end of the generated entries.&lt;/p&gt; &#xA;&lt;p&gt;If you have a &lt;code&gt;HISTORY.md&lt;/code&gt; file in your project, it will automatically be picked as the static historical changelog and appended.&lt;/p&gt; &#xA;&lt;h3&gt;Rake task&lt;/h3&gt; &#xA;&lt;p&gt;You love &lt;code&gt;rake&lt;/code&gt;? We do, too! So, we&#39;ve made it even easier for you: we&#39;ve provided a &lt;code&gt;rake&lt;/code&gt; task library for your changelog generation.&lt;/p&gt; &#xA;&lt;p&gt;Configure the task in your &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;github_changelog_generator/task&#39;&#xA;&#xA;GitHubChangelogGenerator::RakeTask.new :changelog do |config|&#xA;  config.user = &#39;username&#39;&#xA;  config.project = &#39;project-name&#39;&#xA;  config.since_tag = &#39;0.1.14&#39;&#xA;  config.future_release = &#39;0.2.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All command-line options can be passed to the &lt;code&gt;rake&lt;/code&gt; task as &lt;code&gt;config&lt;/code&gt; parameters. And since you&#39;re naming the &lt;code&gt;rake&lt;/code&gt; task yourself, you can create as many as you want.&lt;/p&gt; &#xA;&lt;p&gt;You can look for params names from the &lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/raw/master/lib/github_changelog_generator/parser.rb&#34;&gt;parser source code (#setup_parser)&lt;/a&gt;. For example, to translate the bugs label to Portuguese, instead of setting &lt;code&gt;config.bugs_label&lt;/code&gt;, you have to set &lt;code&gt;config.bug_prefix&lt;/code&gt;, and so on.&lt;/p&gt; &#xA;&lt;h2&gt;Features and advantages of this project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate canonical, neat changelog file, with default sections that follow &lt;a href=&#34;http://keepachangelog.com&#34;&gt;basic changelog guidelines&lt;/a&gt; &lt;span&gt;💎&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally generate &lt;strong&gt;Unreleased&lt;/strong&gt; changes (closed issues that have not released yet) &lt;span&gt;💫&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GitHub Enterprise support&lt;/strong&gt; via command line options! &lt;span&gt;🏭&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flexible format &lt;strong&gt;customization&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Customize&lt;/strong&gt; issues that &lt;strong&gt;should be added&lt;/strong&gt; to changelog &lt;span&gt;✳&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Custom date formats&lt;/strong&gt; supported (but keep &lt;a href=&#34;http://xkcd.com/1179/&#34;&gt;ISO 8601&lt;/a&gt; in mind!) &lt;span&gt;📅&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Manually specify the version that fixed an issue (for cases when the issue&#39;s Closed date doesn&#39;t match) by giving the issue&#39;s &lt;code&gt;milestone&lt;/code&gt; the same name as the tag of version &lt;span&gt;📌&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Automatically &lt;strong&gt;exclude specific issues&lt;/strong&gt; that are irrelevant to your changelog (by default, any issue labeled &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;duplicate&lt;/code&gt;, &lt;code&gt;invalid&lt;/code&gt;, or &lt;code&gt;wontfix&lt;/code&gt;) &lt;span&gt;✂&lt;/span&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Distinguish&lt;/strong&gt; issues &lt;strong&gt;by labels&lt;/strong&gt;. &lt;span&gt;🔎&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Merged pull requests (all merged pull-requests) &lt;span&gt;🔀&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Bug fixes (issues labeled &lt;code&gt;bug&lt;/code&gt;) &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Enhancements (issues labeled &lt;code&gt;enhancement&lt;/code&gt;) &lt;span&gt;🌟&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Issues (closed issues with no labels) &lt;span&gt;🚱&lt;/span&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manually include or exclude issues by labels &lt;span&gt;🔧&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Customize lots more! Tweak the changelog to fit your preferences &lt;span&gt;🎩&lt;/span&gt; (&lt;em&gt;See &lt;code&gt;github_changelog_generator --help&lt;/code&gt; for details)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using the summary section feature&lt;/h3&gt; &#xA;&lt;p&gt;For each version, you can add a &lt;em&gt;release summary&lt;/em&gt; with text, images, gif animations, etc, and show new features and notes clearly to the user. This is done using GitHub metadata.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: adding the release summary for v1.0.0:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new GitHub Issue&lt;/li&gt; &#xA; &lt;li&gt;In the Issue&#39;s &lt;em&gt;Description&lt;/em&gt; field, add your release summary content&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;![image](https://user-images.githubusercontent.com/12690315/45935880-006a8200-bfeb-11e8-958e-ff742ae66b96.png)&#xA;&#xA;Hello, World! &lt;span&gt;🎉&lt;/span&gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Set the Issue Label &lt;code&gt;release-summary&lt;/code&gt; and add it to the GitHub Milestone &lt;code&gt;v1.0.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Close the Issue and execute &lt;code&gt;github-changelog-generator&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The result looks like this:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;&lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/tree/1.0.0&#34;&gt;v1.0.0&lt;/a&gt; (2014-11-07)&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/compare/0.1.0...1.0.0&#34;&gt;Full Changelog&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12690315/45935880-006a8200-bfeb-11e8-958e-ff742ae66b96.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Hello, World! &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Implemented enhancements:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Add some features&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Alternatives&lt;/h3&gt; &#xA;&lt;p&gt;Here is a &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/wiki/Alternatives&#34;&gt;wikipage list of alternatives&lt;/a&gt; that I found. But none satisfied my requirements.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you know other projects, feel free to edit this Wiki page!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Projects using this library&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s a &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/wiki/Projects-using-Github-Changelog-Generator&#34;&gt;wikipage list of projects&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve used this project in a live app, please let me know! Nothing makes me happier than seeing someone else take my work and go wild with it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you are using &lt;code&gt;github_changelog_generator&lt;/code&gt; to generate your project&#39;s changelog, or know of other projects using it, please &lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/wiki/Projects-using-Github-Changelog-Generator&#34;&gt;add it to this list&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Practical Use Cases&lt;/h2&gt; &#xA;&lt;h3&gt;Creating Github Release Notes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;github_changelog_generator&lt;/code&gt; can be used in combination with the &lt;a href=&#34;https://cli.github.com/&#34;&gt;github cli&lt;/a&gt; to create release notes. Use the &lt;code&gt;--since-tag&lt;/code&gt; and &lt;code&gt;--output&lt;/code&gt; options of &lt;code&gt;github_changelog_generator&lt;/code&gt; to create a changelog for the current release and store the results in a file. In the example below, version &lt;code&gt;2.0.0&lt;/code&gt; is the current release and version &lt;code&gt;1.0.0&lt;/code&gt; is the previous release.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p build&#xA;github_changelog_generator \&#xA;  --since-tag 1.0.0 \&#xA;  --output build/changelog.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use the &lt;a href=&#34;https://cli.github.com/manual/gh_release_create&#34;&gt;release create&lt;/a&gt; feature of the github cli to create a new github release&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gh release create 2.0.0 \&#xA;  --notes-file build/changelog.md \&#xA;  --title 2.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Am I missing some essential feature?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Nothing is impossible!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open an &lt;a href=&#34;https://github.com/github-changelog-generator/Github-Changelog-Generator/issues/new/choose&#34;&gt;issue&lt;/a&gt; and let&#39;s make the generator better together!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Bug reports, feature requests, patches, and well-wishes are always welcome.&lt;/em&gt; &lt;span&gt;❗&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;I already use GitHub Releases. Why do I need this?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;GitHub Releases is a very good thing. And it&#39;s very good practice to maintain it. (Not a lot of people are using it yet!) &lt;span&gt;㊗&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;BTW: I would like to support GitHub Releases in &lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/issues/56&#34;&gt;next releases&lt;/a&gt; ;)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m not trying to compare the quality of handwritten and auto-generated logs. That said....&lt;/p&gt; &#xA;&lt;p&gt;An auto-generated changelog really helps, even if you manually fill in the release notes!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;My Ruby version is very old, can I use this?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When your Ruby is old, and you don&#39;t want to upgrade, and you want to control which libraries you use, you can use Bundler.&lt;/p&gt; &#xA;&lt;p&gt;In a Gemfile, perhaps in a non-deployed &lt;code&gt;:development&lt;/code&gt; group, add this gem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;group :development do&#xA;  gem &#39;github_changelog_generator&#39;, require: false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can keep back dependencies like rack, which currently is only compatible with Ruby &amp;gt;= 2.2.2. So, use an older version for your app by adding a line like this to the Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;rack&#39;, &#39;~&amp;gt; 1.6&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way, you can keep on using github_changelog_generator, even if you can&#39;t get the latest version of Ruby installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;Windows: 1.14.x wants to create a file on an invalid path. Why?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Windows: &lt;a href=&#34;https://github.com/github-changelog-generator/github-changelog-generator/issues/458&#34;&gt;v1.14.0 introduced a bug where it attempts to create /tmp/github_changelog-logger.log... which isn&#39;t a valid path on Windows and thus fails&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Workaround: Create a &lt;code&gt;C:\tmp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Would you like to contribute to this project? &lt;a href=&#34;https://raw.githubusercontent.com/github-changelog-generator/github-changelog-generator/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; has all the details on how to do that.&lt;/p&gt; &#xA;&lt;h2&gt;Contact us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/github-changelog-generator/chat?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;Join the chat at gitter : github-changelog-generator&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GitHub Changelog Generator is released under the &lt;a href=&#34;http://www.opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>spree/spree</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/spree/spree</id>
    <link href="https://github.com/spree/spree" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source multi-language/multi-currency/multi-store eCommerce platform&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spree/spree-dev-docs/54abf615c5280eda8f2308de96d6290f72c1fb1b/spree_vendo_user_doc.png&#34; alt=&#34;Spree Commerce - a headless open-source ecommerce platform for multi-store, marketplace, or B2B global brands&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://spreecommerce.org&#34;&gt;Spree Commerce&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/spree&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/spree.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/spree/spree/test_coverage&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/8277fc2bb0b1f777084f/test_coverage&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spree&lt;/strong&gt; is a headless open source e-commerce platform for global brands.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spreecommerce.org/stories/&#34;&gt;Success Stories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spreecommerce.org/integrations/&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spree/spree/milestones?direction=asc&amp;amp;sort=due_date&amp;amp;state=open&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.spreecommerce.org/&#34;&gt;Join our Slack community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/headless-ecommerce-api/&#34;&gt;Headless Commerce&lt;/a&gt;&lt;/strong&gt; - build mobile apps or custom storefronts in any technology, &lt;a href=&#34;https://github.com/spree/spree-storefront-api-v2-js-sdk&#34;&gt;JS/TS SDK available&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/spree-pwa-progressive-web-application/&#34;&gt;PWA&lt;/a&gt;&lt;/strong&gt; - offline shopping experiences like native mobile apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/international-sales-demo/&#34;&gt;Global Commerce&lt;/a&gt;&lt;/strong&gt; - multi currency and multi language support out of the box, different shipping methods / costs for different regions, advanced tax calculation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Store&lt;/strong&gt; - host multiple brands / stores on one Spree instance with different branding, configuration, payment methods, shipping options, product catalogs etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://spreecommerce.org/use-cases/multi-vendor-marketplace-demo/&#34;&gt;Multi-vendor marketplace&lt;/a&gt;&lt;/strong&gt; - run your own marketplace with multiple suppliers with dedicated Supplier Dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Responsive Admin Panel&lt;/strong&gt; - manage and curate products, users, orders, returns, shipments &amp;amp; more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Orders&lt;/strong&gt; - robust system for orders, shipments, returns and refunds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Carts&lt;/strong&gt; - comprehensive and advanced discounts system&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - over 30 payment provider integration out of the box plus API to integrate any other gateway&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run everywhere&lt;/strong&gt; - cloud, VPS, Docker, Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battle Tested&lt;/strong&gt; - used by thousands of merchants around the globe in all categories since 2007!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully customizable&lt;/strong&gt; - pick and choose parts you want to use and customize everything else (storefront, order processing, API, etc) to create unique solutions that your business requires&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;More features available via extensions&lt;/strong&gt; - dozens of extensions built by community, ready for use for free!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsored by&lt;/h2&gt; &#xA;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/spree/spree-dev-docs/master/.gitbook/assets/spree_vendo_user_doc_2.png&#34; a&gt; &lt;/a&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://getvendo.com?utm_source=spree_github&#34;&gt;Vendo&lt;/a&gt; is a great fit for marketplaces of all sizes - either with own fulfillment and multiple warehouses or in a dropshipping model. Vendo &lt;strong&gt;automates everything&lt;/strong&gt; from &lt;strong&gt;vendor onboarding&lt;/strong&gt;, accepting buyer &lt;strong&gt;payments in over 135 currencies&lt;/strong&gt;, to supplier &lt;strong&gt;payouts in 50 countries&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Vendo ensures excellent buyer experience with smooth product discovery and search, a multitude of payment methods and optimal shipping cost calculation. Vendo keeps suppliers happy with easy onboarding, automated products sync using their preferred method and easy payouts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.getvendo.com/users/new?typeform-source=spree_github&#34;&gt;Start your 14-day free trial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev-docs.spreecommerce.org/getting-started/installation&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev-docs.spreecommerce.org/&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.spreecommerce.org/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spree/spree-storefront-api-v2-js-sdk&#34;&gt;JavaScript / TypeScript SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Spree is an open source project and we love contributions in any form - pull requests, issues, feature ideas!&lt;/p&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;https://dev-docs.spreecommerce.org/contributing/index&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Spree is released under the &lt;a href=&#34;https://github.com/spree/spree/raw/main/license.md&#34;&gt;New BSD License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lewagon/active-record-boilerplate</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/lewagon/active-record-boilerplate</id>
    <link href="https://github.com/lewagon/active-record-boilerplate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ActiveRecord boilerplate for demo @lewagon&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ActiveRecord Boilerplate&lt;/h2&gt; &#xA;&lt;p&gt;This is a starting point for the Activerecord Basics lecture using sqlite. During the lecture, you need to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone The project&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Explain &lt;code&gt;rake -T&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Explain &lt;code&gt;config/database.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;rake db:create&lt;/code&gt; / &lt;code&gt;rake db:drop&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create and run 2 migrations&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cloudfoundry/haproxy-boshrelease</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/cloudfoundry/haproxy-boshrelease</id>
    <link href="https://github.com/cloudfoundry/haproxy-boshrelease" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A BOSH release for haproxy (based on cf-release&#39;s haproxy job)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BOSH Release for haproxy&lt;/h1&gt; &#xA;&lt;p&gt;Questions? Pop in our &lt;a href=&#34;https://cloudfoundry.slack.com/messages/haproxy-boshrelease/&#34;&gt;slack channel&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;This BOSH release is an attempt to get a more customizable/secure haproxy release than what is provided in &lt;a href=&#34;https://github.com/cloudfoundry/cf-release&#34;&gt;cf-release&lt;/a&gt;. It allows users to blacklist internal-only domains, preventing potential Host header spoofing from allowing unauthorized access of internal APIs. It also allows for better control over haproxy&#39;s timeouts, for greater resiliency under heavy load.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To deploy this BOSH release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/cloudfoundry-community/haproxy-boshrelease.git&#xA;cd haproxy-boshrelease&#xA;&#xA;export BOSH_ENVIRONMENT=&amp;lt;alias&amp;gt;&#xA;export BOSH_DEPLOYMENT=haproxy&#xA;bosh2 deploy manifests/haproxy.yml \&#xA;  -v haproxy-backend-port=80 \&#xA;  -v &#34;haproxy-backend-servers=[10.10.10.10,10.10.10.11]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make alterations to the deployment you can use the &lt;code&gt;bosh2 deploy [-o operator-file.yml]&lt;/code&gt; flag to provide &lt;a href=&#34;https://bosh.io/docs/cli-ops-files.html&#34;&gt;operations files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternately you can build a manifest using &lt;code&gt;templates/make_manifest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can either use the templates + examples provided to merge this in with an existing CloudFoundry deployment, or create a new deployment using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make_manifest &amp;lt;aws-ec2|warden&amp;gt; &amp;lt;comma-separated-list-of-router-servers&amp;gt; &amp;lt;additional_templates&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;make_manifest&lt;/code&gt; requires &lt;a href=&#34;https://github.com/geofffranks/spruce&#34;&gt;spruce v1.8.9&lt;/a&gt; or newer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Example for bare bones bosh-lite haproxy release on warden&#xA;templates/make_manifest warden 10.244.0.22&#xA;bosh deploy&#xA;&#xA;# Example for using keepalive with haproxy on warden:&#xA;KEEPALIVED_VIP=10.244.50.2 templates/make_manifest warden 10.244.0.22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;Feel free to contribute back to this via a pull request on a feature branch! Once merged, we&#39;ll cut a new final release for you.&lt;/p&gt; &#xA;&lt;h3&gt;Unit Tests and Linting&lt;/h3&gt; &#xA;&lt;p&gt;If you change any erb logic in the jobs directory please add a corresponding test to &lt;code&gt;spec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run these tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd haproxy_boshrelease&#xA;bundle install&#xA;bundle exec rake spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run lint with rubocop&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd haproxy_boshrelease&#xA;bundle install&#xA;bundle exec rake lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To watch the tests while developing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd haproxy_boshrelease&#xA;bundle install&#xA;bundle exec guard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PRs will be automatically tested by &lt;a href=&#34;https://concourse.cfi.sapcloud.io/teams/main/pipelines/haproxy-boshrelease&#34;&gt;https://concourse.cfi.sapcloud.io/teams/main/pipelines/haproxy-boshrelease&lt;/a&gt; once a maintainer has labelled the PR with the &lt;code&gt;approved&lt;/code&gt; label&lt;/p&gt; &#xA;&lt;h3&gt;Acceptance tests&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cloudfoundry/haproxy-boshrelease/master/acceptance-tests/README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kilimchoi/engineering-blogs</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/kilimchoi/engineering-blogs</id>
    <link href="https://github.com/kilimchoi/engineering-blogs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of engineering blogs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Software Engineering Blogs &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt; &lt;sup&gt;Special thanks to:&lt;/sup&gt; &lt;a href=&#34;https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=engblogs&amp;amp;utm_source=github&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA; &lt;div&gt;&#xA;  &lt;a href=&#34;https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=engblogs&amp;amp;utm_source=github&#34;&gt; &lt;img src=&#34;https://dashboard.doppler.com/imgs/logo-long.svg?sanitize=true&#34; width=&#34;230&#34; alt=&#34;Doppler&#34;&gt; &lt;/a&gt;&#xA; &lt;/div&gt;&#xA; &lt;a href=&#34;https://doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=engblogs&amp;amp;utm_source=github&#34;&gt; &lt;b&gt;All your environment variables, in one place&lt;/b&gt; &#xA;  &lt;div&gt; &#xA;   &lt;sub&gt;Stop struggling with scattered API keys, hacking together home-brewed tools,&lt;/sub&gt; &#xA;   &lt;br&gt; &#xA;   &lt;sup&gt;and avoiding access controls. Keep your team and servers in sync with Doppler.&lt;/sup&gt; &#xA;  &lt;/div&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#companies-1&#34;&gt;Companies&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#-companies&#34;&gt;#&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#a-companies&#34;&gt;A&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#b-companies&#34;&gt;B&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#c-companies&#34;&gt;C&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#d-companies&#34;&gt;D&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#e-companies&#34;&gt;E&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#f-companies&#34;&gt;F&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#g-companies&#34;&gt;G&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#h-companies&#34;&gt;H&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#i-companies&#34;&gt;I&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#j-companies&#34;&gt;J&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#k-companies&#34;&gt;K&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#l-companies&#34;&gt;L&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#m-companies&#34;&gt;M&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#n-companies&#34;&gt;N&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#o-companies&#34;&gt;O&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#p-companies&#34;&gt;P&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#q-companies&#34;&gt;Q&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#r-companies&#34;&gt;R&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#s-companies&#34;&gt;S&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#t-companies&#34;&gt;T&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#u-companies&#34;&gt;U&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#v-companies&#34;&gt;V&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#w-companies&#34;&gt;W&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#x-companies&#34;&gt;X&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#y-companies&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#z-companies&#34;&gt;Z&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#individualsgroup-contributors-1&#34;&gt;Individuals/Group Contributors&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#-individuals&#34;&gt;#&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#a-individuals&#34;&gt;A&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#b-individuals&#34;&gt;B&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#c-individuals&#34;&gt;C&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#d-individuals&#34;&gt;D&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#e-individuals&#34;&gt;E&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#f-individuals&#34;&gt;F&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#g-individuals&#34;&gt;G&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#h-individuals&#34;&gt;H&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#i-individuals&#34;&gt;I&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#j-individuals&#34;&gt;J&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#k-individuals&#34;&gt;K&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#l-individuals&#34;&gt;L&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#m-individuals&#34;&gt;M&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#n-individuals&#34;&gt;N&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#o-individuals&#34;&gt;O&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#p-individuals&#34;&gt;P&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#q-individuals&#34;&gt;Q&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#r-individuals&#34;&gt;R&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#s-individuals&#34;&gt;S&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#t-individuals&#34;&gt;T&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#u-individuals&#34;&gt;U&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#v-individuals&#34;&gt;V&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#w-individuals&#34;&gt;W&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#x-individuals&#34;&gt;X&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#y-individuals&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#z-individuals&#34;&gt;Z&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#productstechnologies-1&#34;&gt;Products/Technologies&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#-technologies&#34;&gt;#&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#a-technologies&#34;&gt;A&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#b-technologies&#34;&gt;B&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#c-technologies&#34;&gt;C&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#d-technologies&#34;&gt;D&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#e-technologies&#34;&gt;E&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#f-technologies&#34;&gt;F&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#g-technologies&#34;&gt;G&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#h-technologies&#34;&gt;H&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#i-technologies&#34;&gt;I&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#j-technologies&#34;&gt;J&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#k-technologies&#34;&gt;K&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#l-technologies&#34;&gt;L&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#m-technologies&#34;&gt;M&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#n-technologies&#34;&gt;N&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#o-technologies&#34;&gt;O&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#p-technologies&#34;&gt;P&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#q-technologies&#34;&gt;Q&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#r-technologies&#34;&gt;R&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#s-technologies&#34;&gt;S&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#t-technologies&#34;&gt;T&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#u-technologies&#34;&gt;U&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#v-technologies&#34;&gt;V&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#w-technologies&#34;&gt;W&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#x-technologies&#34;&gt;X&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#y-technologies&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/#z-technologies&#34;&gt;Z&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Companies&lt;/h3&gt; &#xA;&lt;h4&gt;# companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;500px &lt;a href=&#34;https://developers.500px.com/&#34;&gt;https://developers.500px.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;8th Light &lt;a href=&#34;https://8thlight.com/blog/&#34;&gt;https://8thlight.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;99designs &lt;a href=&#34;https://99designs.com/tech-blog/&#34;&gt;https://99designs.com/tech-blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;A companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AdRoll &lt;a href=&#34;http://tech.adroll.com/blog/&#34;&gt;http://tech.adroll.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Addepar &lt;a href=&#34;https://medium.com/build-addepar&#34;&gt;https://medium.com/build-addepar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Affinity &lt;a href=&#34;https://build.affinity.co/&#34;&gt;https://build.affinity.co/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Airbrake &lt;a href=&#34;https://airbrake.io/blog/&#34;&gt;https://airbrake.io/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AirPair &lt;a href=&#34;https://www.airpair.com/software-experts&#34;&gt;https://www.airpair.com/software-experts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Advanced Web Machinery &lt;a href=&#34;https://advancedweb.hu/&#34;&gt;https://advancedweb.hu/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Airbnb &lt;a href=&#34;https://medium.com/airbnb-engineering&#34;&gt;https://medium.com/airbnb-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Airtame &lt;a href=&#34;https://airtame.engineering&#34;&gt;https://airtame.engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Algolia &lt;a href=&#34;https://blog.algolia.com/&#34;&gt;https://blog.algolia.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Allegro.tech &lt;a href=&#34;https://allegro.tech&#34;&gt;https://allegro.tech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Appnexus &lt;a href=&#34;https://techblog.appnexus.com/&#34;&gt;https://techblog.appnexus.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arkency &lt;a href=&#34;http://blog.arkency.com/&#34;&gt;http://blog.arkency.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Artsy &lt;a href=&#34;http://artsy.github.io/&#34;&gt;http://artsy.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Asana &lt;a href=&#34;https://blog.asana.com/category/eng/&#34;&gt;https://blog.asana.com/category/eng/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Atlassian &lt;a href=&#34;https://developer.atlassian.com/blog/&#34;&gt;https://developer.atlassian.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Atomic Object &lt;a href=&#34;https://spin.atomicobject.com/&#34;&gt;https://spin.atomicobject.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Auth0 &lt;a href=&#34;https://auth0.com/blog/&#34;&gt;https://auth0.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Avenue Code &lt;a href=&#34;http://blog.avenuecode.com/&#34;&gt;http://blog.avenuecode.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AWS &lt;a href=&#34;https://aws.amazon.com/blogs/aws/&#34;&gt;https://aws.amazon.com/blogs/aws/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Azavea &lt;a href=&#34;https://www.azavea.com/blog/category/software-development/&#34;&gt;https://www.azavea.com/blog/category/software-development/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;B companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Babbel &lt;a href=&#34;https://bytes.babbel.com/en/&#34;&gt;https://bytes.babbel.com/en/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Backtrace &lt;a href=&#34;https://backtrace.io/blog/&#34;&gt;https://backtrace.io/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Badoo &lt;a href=&#34;https://techblog.badoo.com/&#34;&gt;https://techblog.badoo.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Baidu Research &lt;a href=&#34;http://research.baidu.com/Blog&#34;&gt;http://research.baidu.com/Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bandcamp &lt;a href=&#34;https://bandcamptech.wordpress.com/&#34;&gt;https://bandcamptech.wordpress.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Base Lab &lt;a href=&#34;https://lab.getbase.com/category/engineering/&#34;&gt;https://lab.getbase.com/category/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bazaarvoice &lt;a href=&#34;https://blog.developer.bazaarvoice.com/&#34;&gt;https://blog.developer.bazaarvoice.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BBC &lt;a href=&#34;https://medium.com/bbc-design-engineering/&#34;&gt;https://medium.com/bbc-design-engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Benchling &lt;a href=&#34;https://benchling.engineering/&#34;&gt;https://benchling.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BenefitFocus &lt;a href=&#34;https://www.benefitfocus.com/blogs/design-engineering&#34;&gt;https://www.benefitfocus.com/blogs/design-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bigcommerce &lt;a href=&#34;http://www.bigeng.io/&#34;&gt;http://www.bigeng.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Binary Studio &lt;a href=&#34;https://binary-studio.com/blog/&#34;&gt;https://binary-studio.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bitly &lt;a href=&#34;http://word.bitly.com/&#34;&gt;http://word.bitly.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BitTorrent &lt;a href=&#34;http://engineering.bittorrent.com/&#34;&gt;http://engineering.bittorrent.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BlaBlaCar &lt;a href=&#34;http://blablatech.com/blog/&#34;&gt;http://blablatech.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BlackRock &lt;a href=&#34;http://rockthecode.io/&#34;&gt;http://rockthecode.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blender &lt;a href=&#34;https://code.blender.org/&#34;&gt;https://code.blender.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blogfoster &lt;a href=&#34;http://engineering.blogfoster.com/&#34;&gt;http://engineering.blogfoster.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Booking.com &lt;a href=&#34;https://blog.booking.com/&#34;&gt;https://blog.booking.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Boxever &lt;a href=&#34;http://www.boxever.com/blog/&#34;&gt;http://www.boxever.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brandwatch &lt;a href=&#34;http://engineering.brandwatch.com/&#34;&gt;http://engineering.brandwatch.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Buzzfeed &lt;a href=&#34;https://www.buzzfeed.com/techblog&#34;&gt;https://www.buzzfeed.com/techblog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;C companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Canva &lt;a href=&#34;https://engineering.canva.com&#34;&gt;https://engineering.canva.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Capgemini &lt;a href=&#34;https://capgemini.github.io/&#34;&gt;https://capgemini.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CenturyLink &lt;a href=&#34;https://www.ctl.io/developers/blog&#34;&gt;https://www.ctl.io/developers/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cerner &lt;a href=&#34;http://engineering.cerner.com/&#34;&gt;http://engineering.cerner.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chaps &lt;a href=&#34;https://blog.chaps.io/&#34;&gt;https://blog.chaps.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chartbeat &lt;a href=&#34;http://engineering.chartbeat.com/&#34;&gt;http://engineering.chartbeat.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chef &lt;a href=&#34;https://blog.chef.io&#34;&gt;https://blog.chef.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clever &lt;a href=&#34;https://engineering.clever.com/&#34;&gt;https://engineering.clever.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CleverTap &lt;a href=&#34;https://clevertap.com/blog/tag/engineering/&#34;&gt;https://clevertap.com/blog/tag/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CloudBees &lt;a href=&#34;https://www.previous.cloudbees.com/blog&#34;&gt;https://www.previous.cloudbees.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cloudera &lt;a href=&#34;https://blog.cloudera.com/&#34;&gt;https://blog.cloudera.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cloudflare &lt;a href=&#34;https://blog.cloudflare.com/&#34;&gt;https://blog.cloudflare.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CockroachDB &lt;a href=&#34;https://www.cockroachlabs.com/blog/&#34;&gt;https://www.cockroachlabs.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code Better &lt;a href=&#34;http://codebetter.com/&#34;&gt;http://codebetter.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codelitt &lt;a href=&#34;https://www.codelitt.com/blog/&#34;&gt;https://www.codelitt.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codemancers &lt;a href=&#34;https://crypt.codemancers.com/&#34;&gt;https://crypt.codemancers.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codementor &lt;a href=&#34;https://www.codementor.io/tutorial&#34;&gt;https://www.codementor.io/tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CodeName One &lt;a href=&#34;http://www.codenameone.com/blog.html&#34;&gt;http://www.codenameone.com/blog.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codeship &lt;a href=&#34;https://blog.codeship.com/&#34;&gt;https://blog.codeship.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Coinbase &lt;a href=&#34;https://engineering.coinbase.com/&#34;&gt;https://engineering.coinbase.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Collective Idea &lt;a href=&#34;https://collectiveidea.com/blog&#34;&gt;https://collectiveidea.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commercetools &lt;a href=&#34;https://techblog.commercetools.com/&#34;&gt;https://techblog.commercetools.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Condé Nast &lt;a href=&#34;https://technology.condenast.com/&#34;&gt;https://technology.condenast.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Confluent &lt;a href=&#34;https://www.confluent.io/blog&#34;&gt;https://www.confluent.io/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Convox &lt;a href=&#34;https://convox.com/blog&#34;&gt;https://convox.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Coolblue &lt;a href=&#34;http://devblog.coolblue.nl/&#34;&gt;http://devblog.coolblue.nl/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Credit Karma &lt;a href=&#34;https://engineering.creditkarma.com/&#34;&gt;https://engineering.creditkarma.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Criteo &lt;a href=&#34;https://medium.com/criteo-labs&#34;&gt;https://medium.com/criteo-labs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Crowdfire &lt;a href=&#34;https://crowdfire.engineering/&#34;&gt;https://crowdfire.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CSC - IT Center For Science - Cloud Team &lt;a href=&#34;https://cloud.blog.csc.fi/&#34;&gt;https://cloud.blog.csc.fi/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Curalate &lt;a href=&#34;http://engineering.curalate.com/&#34;&gt;http://engineering.curalate.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;D companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data Artisans &lt;a href=&#34;https://data-artisans.com/blog/&#34;&gt;https://data-artisans.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Databricks &lt;a href=&#34;https://databricks.com/blog&#34;&gt;https://databricks.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DataFox &lt;a href=&#34;http://eng.datafox.co/&#34;&gt;http://eng.datafox.co/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deezer &lt;a href=&#34;https://deezer.io/&#34;&gt;https://deezer.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DeferPanic &lt;a href=&#34;https://deferpanic.com/blog/&#34;&gt;https://deferpanic.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deliveroo &lt;a href=&#34;https://deliveroo.engineering/&#34;&gt;https://deliveroo.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DigitalOcean &lt;a href=&#34;https://blog.digitalocean.com/tag/engineering/&#34;&gt;https://blog.digitalocean.com/tag/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discord &lt;a href=&#34;https://blog.discordapp.com/&#34;&gt;https://blog.discordapp.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docker &lt;a href=&#34;https://blog.docker.com/&#34;&gt;https://blog.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DoorDash &lt;a href=&#34;https://blog.doordash.com/tagged/engineering&#34;&gt;https://blog.doordash.com/tagged/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Doximity &lt;a href=&#34;https://engineering.doximity.com&#34;&gt;https://engineering.doximity.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Drivy &lt;a href=&#34;https://drivy.engineering/&#34;&gt;https://drivy.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dropbox &lt;a href=&#34;https://blogs.dropbox.com/tech/&#34;&gt;https://blogs.dropbox.com/tech/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;E companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ebay &lt;a href=&#34;https://www.ebayinc.com/stories/blogs/tech/&#34;&gt;https://www.ebayinc.com/stories/blogs/tech/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;eFounders &lt;a href=&#34;https://medium.com/unexpected-token&#34;&gt;https://medium.com/unexpected-token&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eharmony &lt;a href=&#34;http://www.eharmony.com/engineering/&#34;&gt;http://www.eharmony.com/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Elastic &lt;a href=&#34;https://www.elastic.co/blog/category/engineering&#34;&gt;https://www.elastic.co/blog/category/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Engine Yard &lt;a href=&#34;https://blog.engineyard.com/&#34;&gt;https://blog.engineyard.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Entelo &lt;a href=&#34;https://sourcecode.entelo.com/&#34;&gt;https://sourcecode.entelo.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Envato &lt;a href=&#34;https://webuild.envato.com/&#34;&gt;https://webuild.envato.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Envoy &lt;a href=&#34;https://envoy.engineering/&#34;&gt;https://envoy.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Erlang Solutions &lt;a href=&#34;https://www.erlang-solutions.com/blog.html&#34;&gt;https://www.erlang-solutions.com/blog.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Etsy &lt;a href=&#34;https://codeascraft.com/&#34;&gt;https://codeascraft.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eventbrite &lt;a href=&#34;https://www.eventbrite.com/engineering/&#34;&gt;https://www.eventbrite.com/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Evernote &lt;a href=&#34;https://evernote.com/blog/&#34;&gt;https://evernote.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Evil Martians &lt;a href=&#34;https://evilmartians.com/chronicles/&#34;&gt;https://evilmartians.com/chronicles/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expedia &lt;a href=&#34;https://medium.com/expedia-group-tech&#34;&gt;https://medium.com/expedia-group-tech&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;F companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook &lt;a href=&#34;https://code.facebook.com/posts/&#34;&gt;https://code.facebook.com/posts/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook AI Research &lt;a href=&#34;https://engineering.fb.com/category/ai-research/&#34;&gt;https://engineering.fb.com/category/ai-research/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Faraday &lt;a href=&#34;http://blog.faraday.io/&#34;&gt;http://blog.faraday.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Feedzai &lt;a href=&#34;https://medium.com/feedzaitech&#34;&gt;https://medium.com/feedzaitech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fiftythree &lt;a href=&#34;http://making.fiftythree.com/&#34;&gt;http://making.fiftythree.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Findmypast &lt;a href=&#34;http://tech.findmypast.com/&#34;&gt;http://tech.findmypast.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Finn.no &lt;a href=&#34;http://tech.finn.no/&#34;&gt;http://tech.finn.no/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Firmafon &lt;a href=&#34;https://dev.firmafon.dk/blog/&#34;&gt;https://dev.firmafon.dk/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flickr &lt;a href=&#34;http://code.flickr.net/&#34;&gt;http://code.flickr.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flipboard &lt;a href=&#34;http://engineering.flipboard.com/&#34;&gt;http://engineering.flipboard.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Foursquare &lt;a href=&#34;https://engineering.foursquare.com/&#34;&gt;https://engineering.foursquare.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Freeletics &lt;a href=&#34;https://freeletics.engineering/&#34;&gt;https://freeletics.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Funding Circle &lt;a href=&#34;https://engineering.fundingcircle.com/&#34;&gt;https://engineering.fundingcircle.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Future Processing &lt;a href=&#34;https://www.future-processing.pl/technical-blog/&#34;&gt;https://www.future-processing.pl/technical-blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fynd &lt;a href=&#34;http://gofynd.io/blog&#34;&gt;http://gofynd.io/blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;G companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Galois &lt;a href=&#34;https://galois.com/blog/&#34;&gt;https://galois.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GameChanger &lt;a href=&#34;http://tech.gc.com/&#34;&gt;http://tech.gc.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Geoblink &lt;a href=&#34;https://tech.geoblink.com&#34;&gt;https://tech.geoblink.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gilt &lt;a href=&#34;http://tech.gilt.com&#34;&gt;http://tech.gilt.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GIPHY &lt;a href=&#34;https://engineering.giphy.com/&#34;&gt;https://engineering.giphy.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub &lt;a href=&#34;https://githubengineering.com/&#34;&gt;https://githubengineering.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub Old &lt;a href=&#34;https://github.com/blog/category/engineering&#34;&gt;https://github.com/blog/category/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GoCardless &lt;a href=&#34;https://gocardless.com/blog/tagged/engineering/&#34;&gt;https://gocardless.com/blog/tagged/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Good Eggs &lt;a href=&#34;https://team.goodeggs.com&#34;&gt;https://team.goodeggs.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google Online Security &lt;a href=&#34;https://security.googleblog.com/&#34;&gt;https://security.googleblog.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Google Research &lt;a href=&#34;https://research.googleblog.com/&#34;&gt;https://research.googleblog.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GoSquared &lt;a href=&#34;https://engineering.gosquared.com/&#34;&gt;https://engineering.gosquared.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GO-JEK &lt;a href=&#34;https://blog.gojekengineering.com/&#34;&gt;https://blog.gojekengineering.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grab &lt;a href=&#34;http://engineering.grab.com/&#34;&gt;http://engineering.grab.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grafana &lt;a href=&#34;https://grafana.com/blog/&#34;&gt;https://grafana.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grammarly &lt;a href=&#34;https://tech.grammarly.com/blog/index.html&#34;&gt;https://tech.grammarly.com/blog/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Graphcool &lt;a href=&#34;https://blog.graph.cool/&#34;&gt;https://blog.graph.cool/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grofers &lt;a href=&#34;https://lambda.grofers.com/&#34;&gt;https://lambda.grofers.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grouper &lt;a href=&#34;http://blog.joingrouper.com/&#34;&gt;http://blog.joingrouper.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Groupon &lt;a href=&#34;https://engineering.groupon.com/&#34;&gt;https://engineering.groupon.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Guardian &lt;a href=&#34;https://www.theguardian.com/info/developer-blog&#34;&gt;https://www.theguardian.com/info/developer-blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gusto &lt;a href=&#34;http://engineering.gusto.com/&#34;&gt;http://engineering.gusto.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;H companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HackerEarth &lt;a href=&#34;http://engineering.hackerearth.com/&#34;&gt;http://engineering.hackerearth.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Haptik &lt;a href=&#34;https://haptik.ai/tech/&#34;&gt;https://haptik.ai/tech/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Harry&#39;s &lt;a href=&#34;http://engineering.harrys.com/&#34;&gt;http://engineering.harrys.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HashiCorp &lt;a href=&#34;https://www.hashicorp.com/blog/&#34;&gt;https://www.hashicorp.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hashnode &lt;a href=&#34;https://engineering.hashnode.com/&#34;&gt;https://engineering.hashnode.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hashrocket &lt;a href=&#34;https://hashrocket.com/blog&#34;&gt;https://hashrocket.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hasura &lt;a href=&#34;https://blog.hasura.io/&#34;&gt;https://blog.hasura.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Haus &lt;a href=&#34;https://engineering.haus.com&#34;&gt;https://engineering.haus.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Heap &lt;a href=&#34;https://heap.engineering/&#34;&gt;https://heap.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Helpshift &lt;a href=&#34;https://medium.com/helpshift-engineering/&#34;&gt;https://medium.com/helpshift-engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HERE &lt;a href=&#34;https://developer.here.com/blog&#34;&gt;https://developer.here.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Heroku &lt;a href=&#34;https://blog.heroku.com/engineering&#34;&gt;https://blog.heroku.com/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HireArt &lt;a href=&#34;http://code.hireart.com/&#34;&gt;http://code.hireart.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HomeAway &lt;a href=&#34;https://tech.homeaway.com/&#34;&gt;https://tech.homeaway.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Honeybadger &lt;a href=&#34;http://blog.honeybadger.io/&#34;&gt;http://blog.honeybadger.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hootsuite &lt;a href=&#34;http://code.hootsuite.com/&#34;&gt;http://code.hootsuite.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hostinger &lt;a href=&#34;https://www.hostinger.com/blog/engineering/&#34;&gt;https://www.hostinger.com/blog/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Housing.com &lt;a href=&#34;https://medium.com/engineering-housing&#34;&gt;https://medium.com/engineering-housing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HubSpot &lt;a href=&#34;http://product.hubspot.com/blog/topic/engineering&#34;&gt;http://product.hubspot.com/blog/topic/engineering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;I companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IBM developerWorks &lt;a href=&#34;https://developer.ibm.com/dwblog/&#34;&gt;https://developer.ibm.com/dwblog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IFTTT &lt;a href=&#34;http://engineering.ifttt.com/&#34;&gt;http://engineering.ifttt.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IMVU &lt;a href=&#34;https://engineering.imvu.com/&#34;&gt;https://engineering.imvu.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Imaginea &lt;a href=&#34;https://blog.imaginea.com/&#34;&gt;https://blog.imaginea.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Imgur &lt;a href=&#34;https://blog.imgur.com/category/eng/&#34;&gt;https://blog.imgur.com/category/eng/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Indeed &lt;a href=&#34;http://engineering.indeedblog.com/blog/&#34;&gt;http://engineering.indeedblog.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Instacart &lt;a href=&#34;https://tech.instacart.com/&#34;&gt;https://tech.instacart.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Instagram &lt;a href=&#34;https://engineering.instagram.com/&#34;&gt;https://engineering.instagram.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Intel &lt;a href=&#34;https://software.intel.com/en-us/blogs/&#34;&gt;https://software.intel.com/en-us/blogs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Intent HQ &lt;a href=&#34;http://engineering.intenthq.com/&#34;&gt;http://engineering.intenthq.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Intent Media &lt;a href=&#34;http://intentmedia.com/blog/&#34;&gt;http://intentmedia.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Intercom &lt;a href=&#34;https://engineering.intercom.io/&#34;&gt;https://engineering.intercom.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Intuit &lt;a href=&#34;https://quickbooks-engineering.intuit.com/&#34;&gt;https://quickbooks-engineering.intuit.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;InVision &lt;a href=&#34;http://engineering.invisionapp.com/&#34;&gt;http://engineering.invisionapp.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;J companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jane Street &lt;a href=&#34;https://blogs.janestreet.com/category/ocaml/&#34;&gt;https://blogs.janestreet.com/category/ocaml/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jet Technology &lt;a href=&#34;https://tech.jet.com/&#34;&gt;https://tech.jet.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jobandtalent &lt;a href=&#34;https://jobandtalent.engineering/&#34;&gt;https://jobandtalent.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;JobTeaser &lt;a href=&#34;https://medium.com/jobteaser-dev-team/&#34;&gt;https://medium.com/jobteaser-dev-team/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jolly Good Code &lt;a href=&#34;https://jollygoodcode.github.io/&#34;&gt;https://jollygoodcode.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Just Eat &lt;a href=&#34;https://tech.just-eat.com/&#34;&gt;https://tech.just-eat.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;K companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Khan Academy &lt;a href=&#34;http://engineering.khanacademy.org&#34;&gt;http://engineering.khanacademy.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kickstarter &lt;a href=&#34;https://www.kickstarter.com/backing-and-hacking&#34;&gt;https://www.kickstarter.com/backing-and-hacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;King &lt;a href=&#34;https://techblog.king.com/&#34;&gt;https://techblog.king.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kinvolk &lt;a href=&#34;https://kinvolk.io/blog/&#34;&gt;https://kinvolk.io/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kogan.com &lt;a href=&#34;https://devblog.kogan.com/&#34;&gt;https://devblog.kogan.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kolosek &lt;a href=&#34;https://kolosek.com/blog/&#34;&gt;https://kolosek.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;L companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Latacora &lt;a href=&#34;https://latacora.singles/&#34;&gt;https://latacora.singles/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Laterooms &lt;a href=&#34;http://engineering.laterooms.com/&#34;&gt;http://engineering.laterooms.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LendingHome &lt;a href=&#34;https://tech.lendinghome.com/&#34;&gt;https://tech.lendinghome.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LINE &lt;a href=&#34;https://engineering.linecorp.com/en/blog&#34;&gt;https://engineering.linecorp.com/en/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LinkedIn &lt;a href=&#34;https://engineering.linkedin.com/blog&#34;&gt;https://engineering.linkedin.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LiveChat &lt;a href=&#34;https://developers.livechatinc.com/blog/&#34;&gt;https://developers.livechatinc.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LiveRamp &lt;a href=&#34;https://liveramp.com/engineering/&#34;&gt;https://liveramp.com/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Localytics &lt;a href=&#34;http://eng.localytics.com/&#34;&gt;http://eng.localytics.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lyft &lt;a href=&#34;https://eng.lyft.com/&#34;&gt;https://eng.lyft.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;M companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Made Tech &lt;a href=&#34;https://www.madetech.com/blog&#34;&gt;https://www.madetech.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mallow Tech &lt;a href=&#34;http://blog.mallow-tech.com/&#34;&gt;http://blog.mallow-tech.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mandrill &lt;a href=&#34;http://blog.mandrill.com/&#34;&gt;http://blog.mandrill.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MapTiler &lt;a href=&#34;https://www.maptiler.com/blog/&#34;&gt;https://www.maptiler.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Medallia &lt;a href=&#34;http://engineering.medallia.com/blog/&#34;&gt;http://engineering.medallia.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Medium &lt;a href=&#34;https://medium.com/medium-eng&#34;&gt;https://medium.com/medium-eng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MemSQL &lt;a href=&#34;http://blog.memsql.com/content/engineering/&#34;&gt;http://blog.memsql.com/content/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mesosphere &lt;a href=&#34;https://mesosphere.com/blog/&#34;&gt;https://mesosphere.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Python Engineering &lt;a href=&#34;https://blogs.msdn.microsoft.com/pythonengineering/&#34;&gt;https://blogs.msdn.microsoft.com/pythonengineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mixmax &lt;a href=&#34;https://engineering.mixmax.com/&#34;&gt;https://engineering.mixmax.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mixpanel &lt;a href=&#34;https://code.mixpanel.com/&#34;&gt;https://code.mixpanel.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MongoDB &lt;a href=&#34;https://engineering.mongodb.com/&#34;&gt;https://engineering.mongodb.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Monsanto &lt;a href=&#34;http://engineering.monsanto.com/&#34;&gt;http://engineering.monsanto.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Moove-it &lt;a href=&#34;https://blog.moove-it.com/&#34;&gt;https://blog.moove-it.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Automation Team &lt;a href=&#34;https://planet.mozilla.org/ateam/&#34;&gt;https://planet.mozilla.org/ateam/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Hacks &lt;a href=&#34;https://hacks.mozilla.org/&#34;&gt;https://hacks.mozilla.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Release Engineering &lt;a href=&#34;https://planet.mozilla.org/releng/&#34;&gt;https://planet.mozilla.org/releng/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Myntra &lt;a href=&#34;https://medium.com/myntra-engineering&#34;&gt;https://medium.com/myntra-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Myntra Data Science &lt;a href=&#34;https://medium.com/myntra-engineering/tagged/data-science&#34;&gt;https://medium.com/myntra-engineering/tagged/data-science&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;N companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Netflix &lt;a href=&#34;https://medium.com/netflix-techblog&#34;&gt;https://medium.com/netflix-techblog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;New York Times &lt;a href=&#34;https://open.blogs.nytimes.com&#34;&gt;https://open.blogs.nytimes.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nextdoor &lt;a href=&#34;https://engblog.nextdoor.com/&#34;&gt;https://engblog.nextdoor.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nordic APIs &lt;a href=&#34;https://nordicapis.com/blog/&#34;&gt;https://nordicapis.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Novoda &lt;a href=&#34;https://www.novoda.com/blog/&#34;&gt;https://www.novoda.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NPR Apps &lt;a href=&#34;http://blog.apps.npr.org/&#34;&gt;http://blog.apps.npr.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nvidia &lt;a href=&#34;https://blogs.nvidia.com/&#34;&gt;https://blogs.nvidia.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;O companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OCTO Technology &lt;a href=&#34;https://blog.octo.com/en/&#34;&gt;https://blog.octo.com/en/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Okta &lt;a href=&#34;https://developer.okta.com/blog/&#34;&gt;https://developer.okta.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OLX &lt;a href=&#34;https://tech.olx.com/&#34;&gt;https://tech.olx.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OmniTI &lt;a href=&#34;https://omniti.com/seeds/stop-collaborate-and-listen-notify&#34;&gt;https://omniti.com/seeds/stop-collaborate-and-listen-notify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenDNS &lt;a href=&#34;https://engineering.opendns.com/&#34;&gt;https://engineering.opendns.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenTable &lt;a href=&#34;http://tech.opentable.com/&#34;&gt;http://tech.opentable.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenTable UK &lt;a href=&#34;http://tech.opentable.co.uk/&#34;&gt;http://tech.opentable.co.uk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Oursky &lt;a href=&#34;https://code.oursky.com/&#34;&gt;https://code.oursky.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Oyster &lt;a href=&#34;http://tech.oyster.com/&#34;&gt;http://tech.oyster.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Opensooq &lt;a href=&#34;http://engineering.opensooq.com/&#34;&gt;http://engineering.opensooq.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;P companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Panorama Education &lt;a href=&#34;http://engineering.panoramaed.com/&#34;&gt;http://engineering.panoramaed.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paperless Post &lt;a href=&#34;https://www.paperlesspost.com/blog/teams/tech/&#34;&gt;https://www.paperlesspost.com/blog/teams/tech/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paypal &lt;a href=&#34;https://www.paypal-engineering.com/&#34;&gt;https://www.paypal-engineering.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Periscope Data &lt;a href=&#34;https://www.periscopedata.com/blog&#34;&gt;https://www.periscopedata.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PicCollage &lt;a href=&#34;https://tech.pic-collage.com/&#34;&gt;https://tech.pic-collage.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pinterest &lt;a href=&#34;https://medium.com/@Pinterest_Engineering&#34;&gt;https://medium.com/@Pinterest_Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pivotal &lt;a href=&#34;https://engineering.pivotal.io&#34;&gt;https://engineering.pivotal.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pluralsight &lt;a href=&#34;https://www.pluralsight.com/guides&#34;&gt;https://www.pluralsight.com/guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Postman &lt;a href=&#34;https://medium.com/better-practices&#34;&gt;https://medium.com/better-practices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Postmark &lt;a href=&#34;https://postmarkapp.com/blog&#34;&gt;https://postmarkapp.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Postmates &lt;a href=&#34;https://blog.postmates.com/tagged/engineering&#34;&gt;https://blog.postmates.com/tagged/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prezi &lt;a href=&#34;https://medium.com/prezi-engineering&#34;&gt;https://medium.com/prezi-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prolific Interactive &lt;a href=&#34;http://blog.prolificinteractive.com/category/development/&#34;&gt;http://blog.prolificinteractive.com/category/development/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PubNub: &lt;a href=&#34;https://www.pubnub.com/blog/&#34;&gt;https://www.pubnub.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PullReview &lt;a href=&#34;http://blog.8thcolor.com/&#34;&gt;http://blog.8thcolor.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pusher &lt;a href=&#34;https://making.pusher.com/&#34;&gt;https://making.pusher.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Q companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quora &lt;a href=&#34;https://engineering.quora.com/&#34;&gt;https://engineering.quora.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;R companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raizlabs &lt;a href=&#34;https://www.raizlabs.com/dev/&#34;&gt;https://www.raizlabs.com/dev/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RapidAPI &lt;a href=&#34;http://blog.rapidapi.com/&#34;&gt;http://blog.rapidapi.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;REA Group &lt;a href=&#34;https://www.rea-group.com/category/tech/&#34;&gt;https://www.rea-group.com/category/tech/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Realm.io &lt;a href=&#34;https://realm.io/news/&#34;&gt;https://realm.io/news/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Redbubble &lt;a href=&#34;http://artplustech.com/&#34;&gt;http://artplustech.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Redino &lt;a href=&#34;http://redino.net/blog/&#34;&gt;http://redino.net/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Red Hat &lt;a href=&#34;https://developers.redhat.com/blog/&#34;&gt;https://developers.redhat.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Remind &lt;a href=&#34;http://engineering.remind.com/&#34;&gt;http://engineering.remind.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RetailMeNot &lt;a href=&#34;https://medium.com/retailmenot-engineering/&#34;&gt;https://medium.com/retailmenot-engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rightscale &lt;a href=&#34;http://eng.rightscale.com/&#34;&gt;http://eng.rightscale.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Riot Games &lt;a href=&#34;https://engineering.riotgames.com/&#34;&gt;https://engineering.riotgames.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RisingStack &lt;a href=&#34;https://blog.risingstack.com/&#34;&gt;https://blog.risingstack.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robert Elder Software &lt;a href=&#34;http://blog.robertelder.org/&#34;&gt;http://blog.robertelder.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RoseHosting &lt;a href=&#34;https://www.rosehosting.com/blog/&#34;&gt;https://www.rosehosting.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Runtastic &lt;a href=&#34;https://www.runtastic.com/blog/en/category/tech/&#34;&gt;https://www.runtastic.com/blog/en/category/tech/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;S companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Salesforce &lt;a href=&#34;https://developer.salesforce.com/blogs/engineering/&#34;&gt;https://developer.salesforce.com/blogs/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Schibsted Tech Polska &lt;a href=&#34;http://www.schibsted.pl/blog/&#34;&gt;http://www.schibsted.pl/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scrapinghub &lt;a href=&#34;https://blog.scrapinghub.com/&#34;&gt;https://blog.scrapinghub.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scrunch &lt;a href=&#34;https://tech.scrunch.com/blog/&#34;&gt;https://tech.scrunch.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Secret Escapes &lt;a href=&#34;http://tech.secretescapes.com/&#34;&gt;http://tech.secretescapes.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Segment &lt;a href=&#34;https://segment.com/blog/categories/engineering/&#34;&gt;https://segment.com/blog/categories/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Semantics3 &lt;a href=&#34;https://engineering.semantics3.com&#34;&gt;https://engineering.semantics3.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Semaphore CI Community &lt;a href=&#34;https://semaphoreci.com/community&#34;&gt;https://semaphoreci.com/community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Semaphore CI Engineering &lt;a href=&#34;http://semaphoreci.com/blog/tags/engineering.html&#34;&gt;http://semaphoreci.com/blog/tags/engineering.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sensible &lt;a href=&#34;http://blog.sensible.io/&#34;&gt;http://blog.sensible.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Serverless &lt;a href=&#34;https://serverless.com/blog/&#34;&gt;https://serverless.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Settled &lt;a href=&#34;https://engineroom.settled.co.uk/&#34;&gt;https://engineroom.settled.co.uk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shape Security &lt;a href=&#34;http://engineering.shapesecurity.com/&#34;&gt;http://engineering.shapesecurity.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sharethis &lt;a href=&#34;https://www.sharethis.com/category/engineering/&#34;&gt;https://www.sharethis.com/category/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shazam &lt;a href=&#34;https://blog.shazam.com/&#34;&gt;https://blog.shazam.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shopify &lt;a href=&#34;https://engineering.shopify.com&#34;&gt;https://engineering.shopify.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ShowMax &lt;a href=&#34;https://tech.showmax.com&#34;&gt;https://tech.showmax.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shyp &lt;a href=&#34;https://medium.com/shyp-engineering&#34;&gt;https://medium.com/shyp-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sift Science &lt;a href=&#34;https://blog.siftscience.com/?category=Engineering&#34;&gt;https://blog.siftscience.com/?category=Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simple &lt;a href=&#34;https://www.simple.com/engineering&#34;&gt;https://www.simple.com/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SitePoint &lt;a href=&#34;https://sitepoint.com&#34;&gt;https://sitepoint.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sky Betting &amp;amp; Gaming &lt;a href=&#34;http://engineering.skybettingandgaming.com/&#34;&gt;http://engineering.skybettingandgaming.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Skyscanner &lt;a href=&#34;http://codevoyagers.com/&#34;&gt;http://codevoyagers.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://slack.engineering/&#34;&gt;https://slack.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SlideShare &lt;a href=&#34;https://engineering.linkedin.com/blog/topic/slideshare&#34;&gt;https://engineering.linkedin.com/blog/topic/slideshare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Small Improvements &lt;a href=&#34;https://tech.small-improvements.com/&#34;&gt;https://tech.small-improvements.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SmartRecruiters &lt;a href=&#34;https://up.smartrecruiters.com&#34;&gt;https://up.smartrecruiters.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Snyk &lt;a href=&#34;https://snyk.io/blog&#34;&gt;https://snyk.io/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Songkick &lt;a href=&#34;https://devblog.songkick.com/&#34;&gt;https://devblog.songkick.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Soshace &lt;a href=&#34;https://blog.soshace.com/en/&#34;&gt;https://blog.soshace.com/en/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Soundcloud &lt;a href=&#34;https://developers.soundcloud.com/blog/&#34;&gt;https://developers.soundcloud.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SourceClear &lt;a href=&#34;https://blog.sourceclear.com/&#34;&gt;https://blog.sourceclear.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Speedledger &lt;a href=&#34;http://engineering.speedledger.com/&#34;&gt;http://engineering.speedledger.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Spotify &lt;a href=&#34;https://labs.spotify.com/&#34;&gt;https://labs.spotify.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sqreen &lt;a href=&#34;https://blog.sqreen.io/&#34;&gt;https://blog.sqreen.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Square &lt;a href=&#34;https://corner.squareup.com/&#34;&gt;https://corner.squareup.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Squarespace &lt;a href=&#34;https://engineering.squarespace.com/&#34;&gt;https://engineering.squarespace.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow &lt;a href=&#34;https://stackoverflow.blog/engineering/&#34;&gt;https://stackoverflow.blog/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stackshare &lt;a href=&#34;https://stackshare.io/feed&#34;&gt;https://stackshare.io/feed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stitch Fix &lt;a href=&#34;http://multithreaded.stitchfix.com/blog/&#34;&gt;http://multithreaded.stitchfix.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stormpath &lt;a href=&#34;https://stormpath.com/blog/&#34;&gt;https://stormpath.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Strava &lt;a href=&#34;https://medium.com/strava-engineering/&#34;&gt;https://medium.com/strava-engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stride &lt;a href=&#34;https://blog.stridenyc.com/&#34;&gt;https://blog.stridenyc.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stripe &lt;a href=&#34;https://stripe.com/blog&#34;&gt;https://stripe.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SurveyMonkey &lt;a href=&#34;https://engineering.surveymonkey.com/&#34;&gt;https://engineering.surveymonkey.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swiggy &lt;a href=&#34;https://bytes.swiggy.com/&#34;&gt;https://bytes.swiggy.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;T companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Takipi &lt;a href=&#34;http://blog.takipi.com/&#34;&gt;http://blog.takipi.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Target &lt;a href=&#34;https://target.github.io/&#34;&gt;https://target.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TaskRabbit &lt;a href=&#34;http://tech.taskrabbit.com/&#34;&gt;http://tech.taskrabbit.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Teamwork &lt;a href=&#34;https://engineroom.teamwork.com/&#34;&gt;https://engineroom.teamwork.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Teespring &lt;a href=&#34;http://teespring.engineering/&#34;&gt;http://teespring.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;theScore &lt;a href=&#34;http://techblog.thescore.com/&#34;&gt;http://techblog.thescore.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thoughtbot &lt;a href=&#34;https://robots.thoughtbot.com/&#34;&gt;https://robots.thoughtbot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ThoughtWorks &lt;a href=&#34;https://www.thoughtworks.com/insights&#34;&gt;https://www.thoughtworks.com/insights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thumbtack &lt;a href=&#34;https://www.thumbtack.com/engineering/&#34;&gt;https://www.thumbtack.com/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ticketmaster &lt;a href=&#34;https://tech.ticketmaster.com/&#34;&gt;https://tech.ticketmaster.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Timescale &lt;a href=&#34;https://blog.timescale.com/&#34;&gt;https://blog.timescale.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tinder &lt;a href=&#34;https://tech.gotinder.com/&#34;&gt;https://tech.gotinder.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Toptal &lt;a href=&#34;https://www.toptal.com/blog/&#34;&gt;https://www.toptal.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TrackMaven &lt;a href=&#34;http://engineroom.trackmaven.com/&#34;&gt;http://engineroom.trackmaven.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Transferwise &lt;a href=&#34;http://tech.transferwise.com/&#34;&gt;http://tech.transferwise.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trello &lt;a href=&#34;https://tech.trello.com/&#34;&gt;https://tech.trello.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TripAdvisor &lt;a href=&#34;http://engineering.tripadvisor.com/&#34;&gt;http://engineering.tripadvisor.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trivago &lt;a href=&#34;http://tech.trivago.com/&#34;&gt;http://tech.trivago.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TrueCar &lt;a href=&#34;https://www.drivenbycode.com/&#34;&gt;https://www.drivenbycode.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tumblr &lt;a href=&#34;https://engineering.tumblr.com/&#34;&gt;https://engineering.tumblr.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twilio &lt;a href=&#34;https://www.twilio.com/blog/&#34;&gt;https://www.twilio.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter &lt;a href=&#34;https://blog.twitter.com/engineering&#34;&gt;https://blog.twitter.com/engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitch &lt;a href=&#34;https://blog.twitch.tv/tagged/engineering&#34;&gt;https://blog.twitch.tv/tagged/engineering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;U companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uber &lt;a href=&#34;http://eng.uber.com/&#34;&gt;http://eng.uber.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Universe &lt;a href=&#34;https://engineering.universe.com&#34;&gt;https://engineering.universe.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Upday &lt;a href=&#34;https://upday.github.io/&#34;&gt;https://upday.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UpGrad &lt;a href=&#34;https://engineering.upgrad.com&#34;&gt;https://engineering.upgrad.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;V companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vena Solutions &lt;a href=&#34;https://engineering.vena.io/&#34;&gt;https://engineering.vena.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Venmo &lt;a href=&#34;http://blog.venmo.com/?category=Engineering&#34;&gt;http://blog.venmo.com/?category=Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VersionEye &lt;a href=&#34;https://blog.versioneye.com/&#34;&gt;https://blog.versioneye.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vevo &lt;a href=&#34;http://blog.vevo.com/&#34;&gt;http://blog.vevo.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Viget &lt;a href=&#34;https://www.viget.com/articles/category/code#articles&#34;&gt;https://www.viget.com/articles/category/code#articles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vine &lt;a href=&#34;http://engineering.vine.co/&#34;&gt;http://engineering.vine.co/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vinted &lt;a href=&#34;http://engineering.vinted.com/&#34;&gt;http://engineering.vinted.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VNGRS &lt;a href=&#34;http://blog.vngrs.com/&#34;&gt;http://blog.vngrs.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VTS &lt;a href=&#34;https://buildingvts.com/&#34;&gt;https://buildingvts.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;W companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WalmartLabs &lt;a href=&#34;https://medium.com/walmartlabs/&#34;&gt;https://medium.com/walmartlabs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wattpad &lt;a href=&#34;http://engineering.wattpad.com/&#34;&gt;http://engineering.wattpad.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wayfair &lt;a href=&#34;http://engineering.wayfair.com/&#34;&gt;http://engineering.wayfair.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wealthfront &lt;a href=&#34;http://eng.wealthfront.com/&#34;&gt;http://eng.wealthfront.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;We Are Wizards &lt;a href=&#34;https://blog.wearewizards.io/&#34;&gt;https://blog.wearewizards.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WebEngage &lt;a href=&#34;http://engineering.webengage.com/&#34;&gt;http://engineering.webengage.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wemake.services &lt;a href=&#34;https://medium.com/wemake-services&#34;&gt;https://medium.com/wemake-services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WePay &lt;a href=&#34;https://wecode.wepay.com/&#34;&gt;https://wecode.wepay.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wimdu &lt;a href=&#34;http://tech.wimdu.com/&#34;&gt;http://tech.wimdu.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wingify &lt;a href=&#34;http://engineering.wingify.com/&#34;&gt;http://engineering.wingify.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wolox &lt;a href=&#34;https://medium.com/@WoloxEngineering/&#34;&gt;https://medium.com/@WoloxEngineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wombat Security Technologies &lt;a href=&#34;http://development.wombatsecurity.com/&#34;&gt;http://development.wombatsecurity.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wonga Technology &lt;a href=&#34;http://tech.wonga.com/&#34;&gt;http://tech.wonga.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WyeWorks &lt;a href=&#34;https://wyeworks.com/blog/&#34;&gt;https://wyeworks.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;X companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;XING &lt;a href=&#34;https://tech.xing.com/&#34;&gt;https://tech.xing.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Xmartlabs &lt;a href=&#34;https://blog.xmartlabs.com/&#34;&gt;https://blog.xmartlabs.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Y companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Yahoo &lt;a href=&#34;https://yahooeng.tumblr.com/&#34;&gt;https://yahooeng.tumblr.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Yammer &lt;a href=&#34;https://medium.com/yammer-engineering&#34;&gt;https://medium.com/yammer-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Yelp &lt;a href=&#34;https://engineeringblog.yelp.com/&#34;&gt;https://engineeringblog.yelp.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;YLD! &lt;a href=&#34;https://blog.yld.io&#34;&gt;https://blog.yld.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Z companies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zalando &lt;a href=&#34;https://tech.zalando.com/blog/&#34;&gt;https://tech.zalando.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zapier &lt;a href=&#34;https://zapier.com/engineering/&#34;&gt;https://zapier.com/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ZeeMee &lt;a href=&#34;https://zeemee.engineering/&#34;&gt;https://zeemee.engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zendesk &lt;a href=&#34;https://medium.com/zendesk-engineering&#34;&gt;https://medium.com/zendesk-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zendesk(old) &lt;a href=&#34;https://developer.zendesk.com/blog&#34;&gt;https://developer.zendesk.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zenefits &lt;a href=&#34;https://engineering.zenefits.com/posts/&#34;&gt;https://engineering.zenefits.com/posts/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zillow &lt;a href=&#34;https://www.zillow.com/engineering/&#34;&gt;https://www.zillow.com/engineering/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zomato &lt;a href=&#34;https://engineering.zomato.com/&#34;&gt;https://engineering.zomato.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zoosk &lt;a href=&#34;https://about.zoosk.com/en/engineering-blog/&#34;&gt;https://about.zoosk.com/en/engineering-blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zulily &lt;a href=&#34;https://engineering.zulily.com/&#34;&gt;https://engineering.zulily.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zumba &lt;a href=&#34;http://tech.zumba.com/&#34;&gt;http://tech.zumba.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zynga &lt;a href=&#34;https://www.zynga.com/blogs/engineering&#34;&gt;https://www.zynga.com/blogs/engineering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Individuals/Group Contributors&lt;/h3&gt; &#xA;&lt;h4&gt;# individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0xADADA &lt;a href=&#34;https://0xadada.pub/&#34;&gt;https://0xadada.pub/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;A individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Aaron Patterson &lt;a href=&#34;http://tenderlovemaking.com/&#34;&gt;http://tenderlovemaking.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Abhinaba Basu &lt;a href=&#34;https://blogs.msdn.com/b/abhinaba/&#34;&gt;https://blogs.msdn.com/b/abhinaba/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Abu Ashraf Masnun &lt;a href=&#34;http://masnun.com/&#34;&gt;http://masnun.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adam Bard &lt;a href=&#34;https://adambard.com/blog/&#34;&gt;https://adambard.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adam Leventhal &lt;a href=&#34;http://dtrace.org/blogs/ahl/&#34;&gt;http://dtrace.org/blogs/ahl/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adam Tuliper &lt;a href=&#34;http://www.adamtuliper.com/&#34;&gt;http://www.adamtuliper.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Addy Osmani &lt;a href=&#34;https://addyosmani.com/blog/&#34;&gt;https://addyosmani.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adrian Colyer &lt;a href=&#34;https://blog.acolyer.org/&#34;&gt;https://blog.acolyer.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alan Storm &lt;a href=&#34;http://alanstorm.com/&#34;&gt;http://alanstorm.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alex Rogozhnikov &lt;a href=&#34;https://arogozhnikov.github.io/&#34;&gt;https://arogozhnikov.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alex Russell &lt;a href=&#34;https://infrequently.org/&#34;&gt;https://infrequently.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Allison Kaptur &lt;a href=&#34;http://akaptur.com/&#34;&gt;http://akaptur.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Amit Merchant &lt;a href=&#34;https://www.amitmerchant.com/&#34;&gt;https://www.amitmerchant.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Anders Aarvik &lt;a href=&#34;http://aarvik.dk/&#34;&gt;http://aarvik.dk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andreas Schuster &lt;a href=&#34;https://computer.forensikblog.de/en/&#34;&gt;https://computer.forensikblog.de/en/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrew Bancroft &lt;a href=&#34;http://www.andrewcbancroft.com/&#34;&gt;http://www.andrewcbancroft.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrew Brampton &lt;a href=&#34;https://blog.bramp.net/&#34;&gt;https://blog.bramp.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrew Ray &lt;a href=&#34;https://blog.andrewray.me/&#34;&gt;https://blog.andrewray.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrey Akinshin &lt;a href=&#34;http://aakinshin.net/blog/&#34;&gt;http://aakinshin.net/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Antirez &lt;a href=&#34;http://antirez.com/latest/0&#34;&gt;http://antirez.com/latest/0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ariejan de Vroom &lt;a href=&#34;https://ariejan.net/&#34;&gt;https://ariejan.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ariya Hidayat &lt;a href=&#34;https://ariya.io/&#34;&gt;https://ariya.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Armin Ronacher &lt;a href=&#34;http://lucumr.pocoo.org/&#34;&gt;http://lucumr.pocoo.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Axel Rauschmayer &lt;a href=&#34;http://www.2ality.com/&#34;&gt;http://www.2ality.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;B individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bad Concurrency &lt;a href=&#34;http://bad-concurrency.blogspot.com/&#34;&gt;http://bad-concurrency.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Barry Warsaw &lt;a href=&#34;https://www.wefearchange.org/&#34;&gt;https://www.wefearchange.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bartlomiej Filipek &lt;a href=&#34;http://www.bfilipek.com/&#34;&gt;http://www.bfilipek.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ben McCormick &lt;a href=&#34;https://benmccormick.org/&#34;&gt;https://benmccormick.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bill the Lizard &lt;a href=&#34;http://www.billthelizard.com/&#34;&gt;http://www.billthelizard.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bjørn Johansen &lt;a href=&#34;https://bjornjohansen.no/&#34;&gt;https://bjornjohansen.no/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blake Erickson &lt;a href=&#34;https://blog.blakeerickson.com/&#34;&gt;https://blog.blakeerickson.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Blundell&#39;s Android Tutorials &lt;a href=&#34;http://blog.blundellapps.co.uk&#34;&gt;http://blog.blundellapps.co.uk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bohops &lt;a href=&#34;https://bohops.com/&#34;&gt;https://bohops.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brandon Rhodes &lt;a href=&#34;http://rhodesmill.org/brandon/&#34;&gt;http://rhodesmill.org/brandon/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brendan Eich &lt;a href=&#34;https://brendaneich.com/&#34;&gt;https://brendaneich.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brendan Gregg &lt;a href=&#34;http://www.brendangregg.com/blog/&#34;&gt;http://www.brendangregg.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Brujo Benavides &lt;a href=&#34;https://medium.com/@elbrujohalcon&#34;&gt;https://medium.com/@elbrujohalcon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bryan Cantrill &lt;a href=&#34;http://dtrace.org/blogs/bmc/&#34;&gt;http://dtrace.org/blogs/bmc/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;C individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Carlos Becker &lt;a href=&#34;https://carlosbecker.com&#34;&gt;https://carlosbecker.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chen Hui Jing &lt;a href=&#34;https://www.chenhuijing.com/blog/&#34;&gt;https://www.chenhuijing.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chien Tran &lt;a href=&#34;http://thelazylog.com/&#34;&gt;http://thelazylog.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chris Hager &lt;a href=&#34;https://www.metachris.com/blog/&#34;&gt;https://www.metachris.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chris Wellons &lt;a href=&#34;http://nullprogram.com/&#34;&gt;http://nullprogram.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clay McLeod &lt;a href=&#34;http://blog.claymcleod.io/&#34;&gt;http://blog.claymcleod.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cocoa Is My Girlfriend &lt;a href=&#34;http://www.cimgf.com/&#34;&gt;http://www.cimgf.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code with style! &lt;a href=&#34;https://codewithstyle.info/&#34;&gt;https://codewithstyle.info/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Codrops &lt;a href=&#34;https://tympanus.net/codrops/&#34;&gt;https://tympanus.net/codrops/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;D individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Daily JS &lt;a href=&#34;https://medium.com/dailyjs&#34;&gt;https://medium.com/dailyjs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Daily Tech Video &lt;a href=&#34;http://dailytechvideo.com/&#34;&gt;http://dailytechvideo.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dan Luu &lt;a href=&#34;https://danluu.com/&#34;&gt;https://danluu.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Daniel Doubrovkine (dB.) &lt;a href=&#34;http://code.dblock.org/&#34;&gt;http://code.dblock.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Daniel Schmidt &lt;a href=&#34;https://medium.com/@dschmidt1992&#34;&gt;https://medium.com/@dschmidt1992&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dave Atchley &lt;a href=&#34;http://www.datchley.name/&#34;&gt;http://www.datchley.name/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dave Beazley &lt;a href=&#34;http://www.dabeaz.com/blog.html&#34;&gt;http://www.dabeaz.com/blog.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dave Cheney &lt;a href=&#34;https://dave.cheney.net/&#34;&gt;https://dave.cheney.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;David Walsh &lt;a href=&#34;https://davidwalsh.name/&#34;&gt;https://davidwalsh.name/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dean Hume &lt;a href=&#34;http://deanhume.com/&#34;&gt;http://deanhume.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deborah Digges &lt;a href=&#34;http://deborah-digges.github.io/&#34;&gt;http://deborah-digges.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dennis Felsing &lt;a href=&#34;https://hookrace.net/&#34;&gt;https://hookrace.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dennis Yurichev &lt;a href=&#34;https://yurichev.com/blog/&#34;&gt;https://yurichev.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dereuromark &lt;a href=&#34;http://www.dereuromark.de/&#34;&gt;http://www.dereuromark.de/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discover Meteor &lt;a href=&#34;https://www.discovermeteor.com/blog&#34;&gt;https://www.discovermeteor.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Domenico Luciani &lt;a href=&#34;https://domenicoluciani.com&#34;&gt;https://domenicoluciani.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dot Dev (.dev) &lt;a href=&#34;https://dotdev.co&#34;&gt;https://dotdev.co&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dragan Djuric &lt;a href=&#34;http://dragan.rocks&#34;&gt;http://dragan.rocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dragan Gaic &lt;a href=&#34;http://www.gajotres.net/&#34;&gt;http://www.gajotres.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Drew DeVault &lt;a href=&#34;https://drewdevault.com/&#34;&gt;https://drewdevault.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;E individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edan Kwan &lt;a href=&#34;http://blog.edankwan.com/&#34;&gt;http://blog.edankwan.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eddie Smith &lt;a href=&#34;http://www.practicallyefficient.com/&#34;&gt;http://www.practicallyefficient.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edgar Aroutiounian &lt;a href=&#34;https://hyegar.com/&#34;&gt;https://hyegar.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edward Faulkner &lt;a href=&#34;https://eaf4.com/&#34;&gt;https://eaf4.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Elegant Code &lt;a href=&#34;http://elegantcode.com/&#34;&gt;http://elegantcode.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eli Bendersky &lt;a href=&#34;http://eli.thegreenplace.net/&#34;&gt;http://eli.thegreenplace.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eric Elliot &lt;a href=&#34;https://medium.com/javascript-scene/&#34;&gt;https://medium.com/javascript-scene/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eric Lippert &lt;a href=&#34;https://ericlippert.com/&#34;&gt;https://ericlippert.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Erik Runyon &lt;a href=&#34;https://erikrunyon.com/&#34;&gt;https://erikrunyon.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Evan Hahn &lt;a href=&#34;http://evanhahn.com/&#34;&gt;http://evanhahn.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Evan Jones &lt;a href=&#34;http://www.evanjones.ca/chronological.html&#34;&gt;http://www.evanjones.ca/chronological.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Evan Miller &lt;a href=&#34;http://www.evanmiller.org/&#34;&gt;http://www.evanmiller.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Evan Tahler &lt;a href=&#34;https://blog.evantahler.com/&#34;&gt;https://blog.evantahler.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;F individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fabrizio Branca &lt;a href=&#34;http://fbrnc.net/&#34;&gt;http://fbrnc.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Federico Cargnelutti &lt;a href=&#34;https://blog.fedecarg.com/&#34;&gt;https://blog.fedecarg.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Federico Tomassetti &lt;a href=&#34;https://tomassetti.me/&#34;&gt;https://tomassetti.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Filippo Valsorda &lt;a href=&#34;https://blog.filippo.io/&#34;&gt;https://blog.filippo.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Freek Van der Herten &lt;a href=&#34;https://murze.be/&#34;&gt;https://murze.be/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;G individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gleb Bahmutov &lt;a href=&#34;https://glebbahmutov.com/blog/&#34;&gt;https://glebbahmutov.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Glenn Engstrand &lt;a href=&#34;http://glennengstrand.info&#34;&gt;http://glennengstrand.info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Graham King &lt;a href=&#34;https://www.darkcoding.net/&#34;&gt;https://www.darkcoding.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Grzegorz Gajos &lt;a href=&#34;http://ggajos.com/&#34;&gt;http://ggajos.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Guido van Rossum &lt;a href=&#34;http://neopythonic.blogspot.com/&#34;&gt;http://neopythonic.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Guilherme Rodrigues &lt;a href=&#34;https://firstdoit.com/&#34;&gt;https://firstdoit.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;H individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hayden James &lt;a href=&#34;https://haydenjames.io/&#34;&gt;https://haydenjames.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Henrik Lau Eriksson &lt;a href=&#34;https://conductofcode.io/&#34;&gt;https://conductofcode.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Henrik Warne &lt;a href=&#34;https://henrikwarne.com/&#34;&gt;https://henrikwarne.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;High Scalability &lt;a href=&#34;http://highscalability.com/&#34;&gt;http://highscalability.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Huon Wilson &lt;a href=&#34;http://huonw.github.io/&#34;&gt;http://huonw.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hypriot &lt;a href=&#34;http://blog.hypriot.com/&#34;&gt;http://blog.hypriot.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;I individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ian Hummel &lt;a href=&#34;https://themodernlife.github.io/&#34;&gt;https://themodernlife.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ian Sommerville &lt;a href=&#34;http://iansommerville.com/systems-software-and-technology/&#34;&gt;http://iansommerville.com/systems-software-and-technology/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Idontgetoutmuch&#39;s Weblog &lt;a href=&#34;https://idontgetoutmuch.wordpress.com/&#34;&gt;https://idontgetoutmuch.wordpress.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ievgen Kuzminov &lt;a href=&#34;http://stdout.in/&#34;&gt;http://stdout.in/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ilija Eftimov &lt;a href=&#34;http://ieftimov.com/&#34;&gt;http://ieftimov.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ilya Grigorik &lt;a href=&#34;https://www.igvita.com/&#34;&gt;https://www.igvita.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Itamar Turner-Trauring &lt;a href=&#34;https://codewithoutrules.com&#34;&gt;https://codewithoutrules.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ivan Ursul &lt;a href=&#34;https://ivanursul.com/&#34;&gt;https://ivanursul.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;J individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jacopo Tarantino &lt;a href=&#34;https://jack.ofspades.com/&#34;&gt;https://jack.ofspades.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jake Trent &lt;a href=&#34;https://jaketrent.com&#34;&gt;https://jaketrent.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jake Wharton &lt;a href=&#34;http://jakewharton.com/blog&#34;&gt;http://jakewharton.com/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jake Yesbeck &lt;a href=&#34;http://jakeyesbeck.com/&#34;&gt;http://jakeyesbeck.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;James Hague &lt;a href=&#34;http://prog21.dadgum.com/&#34;&gt;http://prog21.dadgum.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;James Long &lt;a href=&#34;http://jlongster.com/archive&#34;&gt;http://jlongster.com/archive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jamis Buck &lt;a href=&#34;http://weblog.jamisbuck.org/&#34;&gt;http://weblog.jamisbuck.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jan Lelis &lt;a href=&#34;https://idiosyncratic-ruby.com/&#34;&gt;https://idiosyncratic-ruby.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jay Fields &lt;a href=&#34;http://blog.jayfields.com&#34;&gt;http://blog.jayfields.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jeff Atwood &lt;a href=&#34;https://blog.codinghorror.com/&#34;&gt;https://blog.codinghorror.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jeff Preshing &lt;a href=&#34;http://preshing.com/&#34;&gt;http://preshing.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jeremy Kun &lt;a href=&#34;https://jeremykun.com/&#34;&gt;https://jeremykun.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jerry Gamblin &lt;a href=&#34;https://jerrygamblin.com/&#34;&gt;https://jerrygamblin.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jesal Gadhia &lt;a href=&#34;https://jes.al/&#34;&gt;https://jes.al/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jessie Frazelle &lt;a href=&#34;https://blog.jessfraz.com/&#34;&gt;https://blog.jessfraz.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jesus Castello &lt;a href=&#34;http://www.blackbytes.info/&#34;&gt;http://www.blackbytes.info/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Joe Armstrong &lt;a href=&#34;https://joearms.github.io/&#34;&gt;https://joearms.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Joe Nelson &lt;a href=&#34;https://begriffs.com/&#34;&gt;https://begriffs.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Joel Spolsky &lt;a href=&#34;https://www.joelonsoftware.com/&#34;&gt;https://www.joelonsoftware.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Johannes Brodwall &lt;a href=&#34;http://johannesbrodwall.com/&#34;&gt;http://johannesbrodwall.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;John Resig &lt;a href=&#34;https://johnresig.com/category/blog/&#34;&gt;https://johnresig.com/category/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;John Wittenauer &lt;a href=&#34;http://www.johnwittenauer.net/&#34;&gt;http://www.johnwittenauer.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jon Kensy &lt;a href=&#34;http://www.jonkensy.com/&#34;&gt;http://www.jonkensy.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jon Skeet &lt;a href=&#34;https://codeblog.jonskeet.uk/&#34;&gt;https://codeblog.jonskeet.uk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jonas Plum &lt;a href=&#34;https://blog.cugu.eu/&#34;&gt;https://blog.cugu.eu/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Dekhtiar &lt;a href=&#34;http://www.born2data.com/&#34;&gt;http://www.born2data.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Snook &lt;a href=&#34;https://snook.ca/&#34;&gt;https://snook.ca/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Josh Haberman &lt;a href=&#34;http://blog.reverberate.org/&#34;&gt;http://blog.reverberate.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Josh Sherman &lt;a href=&#34;https://joshtronic.com/&#34;&gt;https://joshtronic.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Juan Treminio &lt;a href=&#34;https://jtreminio.com&#34;&gt;https://jtreminio.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Julia Evans &lt;a href=&#34;https://jvns.ca/&#34;&gt;https://jvns.ca/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Junior Grossi &lt;a href=&#34;https://blog.jgrossi.com/&#34;&gt;https://blog.jgrossi.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Justin Weiss &lt;a href=&#34;https://www.justinweiss.com/articles/archives/&#34;&gt;https://www.justinweiss.com/articles/archives/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Juri Strumpflohner &lt;a href=&#34;https://juristr.com/blog/&#34;&gt;https://juristr.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;K individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;K. Harrison &lt;a href=&#34;https://useyourloaf.com/&#34;&gt;https://useyourloaf.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kai Hendry &lt;a href=&#34;https://hendry.iki.fi/&#34;&gt;https://hendry.iki.fi/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kevin Burke &lt;a href=&#34;https://kev.inburke.com/&#34;&gt;https://kev.inburke.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kirill Shevchenko &lt;a href=&#34;https://medium.com/@kirill_shevch&#34;&gt;https://medium.com/@kirill_shevch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kyle Kingsbury &lt;a href=&#34;https://aphyr.com/&#34;&gt;https://aphyr.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;L individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lambda the Ultimate &lt;a href=&#34;http://lambda-the-ultimate.org/&#34;&gt;http://lambda-the-ultimate.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Larry Land &lt;a href=&#34;https://lg.io/&#34;&gt;https://lg.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lazarus Lazaridis &lt;a href=&#34;https://iridakos.com&#34;&gt;https://iridakos.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lea Verou &lt;a href=&#34;http://lea.verou.me/&#34;&gt;http://lea.verou.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lerner Consulting Blog &lt;a href=&#34;http://blog.lerner.co.il/&#34;&gt;http://blog.lerner.co.il/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Life Plus Linux &lt;a href=&#34;http://lifepluslinux.blogspot.in/&#34;&gt;http://lifepluslinux.blogspot.in/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LiveOverflow &lt;a href=&#34;https://liveoverflow.com/blog/index.html&#34;&gt;https://liveoverflow.com/blog/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Luciano Mammino &lt;a href=&#34;https://loige.co/&#34;&gt;https://loige.co/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;M individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manu Sporny &lt;a href=&#34;http://manu.sporny.org/&#34;&gt;http://manu.sporny.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marc Plano-Lesay &lt;a href=&#34;https://enoent.fr&#34;&gt;https://enoent.fr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marcelo Rinesi &lt;a href=&#34;https://blog.rinesi.com/&#34;&gt;https://blog.rinesi.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marco Pivetta &lt;a href=&#34;http://ocramius.github.io/&#34;&gt;http://ocramius.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Marek Majkowski &lt;a href=&#34;https://idea.popcount.org/&#34;&gt;https://idea.popcount.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mark Seaborn &lt;a href=&#34;http://lackingrhoticity.blogspot.de/&#34;&gt;http://lackingrhoticity.blogspot.de/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Martin Fowler &lt;a href=&#34;https://martinfowler.com/&#34;&gt;https://martinfowler.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mary Rose Cook &lt;a href=&#34;https://maryrosecook.com/blog/&#34;&gt;https://maryrosecook.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matt Aimonetti &lt;a href=&#34;https://matt.aimonetti.net/&#34;&gt;https://matt.aimonetti.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matt Cutts &lt;a href=&#34;https://www.mattcutts.com/blog/&#34;&gt;https://www.mattcutts.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matt Might &lt;a href=&#34;http://matt.might.net/articles/&#34;&gt;http://matt.might.net/articles/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matt Warren &lt;a href=&#34;http://mattwarren.org/&#34;&gt;http://mattwarren.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matthew Green &lt;a href=&#34;https://blog.cryptographyengineering.com/&#34;&gt;https://blog.cryptographyengineering.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Michael Crump &lt;a href=&#34;https://michaelcrump.net/&#34;&gt;https://michaelcrump.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Michaël Gallego &lt;a href=&#34;http://www.michaelgallego.fr/articles/&#34;&gt;http://www.michaelgallego.fr/articles/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Michael Herman &lt;a href=&#34;http://mherman.org/&#34;&gt;http://mherman.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Miguel Quinones &lt;a href=&#34;https://www.miqu.me/&#34;&gt;https://www.miqu.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mike Ash &lt;a href=&#34;https://www.mikeash.com/pyblog/&#34;&gt;https://www.mikeash.com/pyblog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mike Fogus &lt;a href=&#34;http://blog.fogus.me/&#34;&gt;http://blog.fogus.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Milosz Galazka &lt;a href=&#34;https://blog.sleeplessbeastie.eu/&#34;&gt;https://blog.sleeplessbeastie.eu/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Miro Cupak &lt;a href=&#34;https://mirocupak.com/&#34;&gt;https://mirocupak.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Monica Dinculescu &lt;a href=&#34;https://meowni.ca/&#34;&gt;https://meowni.ca/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Monstermuffin &lt;a href=&#34;https://blog.monstermuffin.org/&#34;&gt;https://blog.monstermuffin.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mykhailo Kozik &lt;a href=&#34;http://mishadoff.com/&#34;&gt;http://mishadoff.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;N individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Natasha Murashev &lt;a href=&#34;https://natashatherobot.com&#34;&gt;https://natashatherobot.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nelson Elhage &lt;a href=&#34;https://blog.nelhage.com/&#34;&gt;https://blog.nelhage.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nic Raboy &lt;a href=&#34;https://www.thepolyglotdeveloper.com/blog/&#34;&gt;https://www.thepolyglotdeveloper.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nick Craver &lt;a href=&#34;https://nickcraver.com/blog/&#34;&gt;https://nickcraver.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nick Desaulniers &lt;a href=&#34;https://nickdesaulniers.github.io/&#34;&gt;https://nickdesaulniers.github.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nick Galbreath &lt;a href=&#34;http://www.client9.com/&#34;&gt;http://www.client9.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nicolas Liochon &lt;a href=&#34;http://blog.thislongrun.com/&#34;&gt;http://blog.thislongrun.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nicolai Parlog (CodeFX) &lt;a href=&#34;http://codefx.org&#34;&gt;http://codefx.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nikola Brežnjak &lt;a href=&#34;http://www.nikola-breznjak.com/blog/&#34;&gt;http://www.nikola-breznjak.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nikolay Nemshilov &lt;a href=&#34;http://nikolay.rocks/&#34;&gt;http://nikolay.rocks/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NSHipster &lt;a href=&#34;http://nshipster.com/&#34;&gt;http://nshipster.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nate Berkopec &lt;a href=&#34;http://www.nateberkopec.com/&#34;&gt;http://www.nateberkopec.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;O individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ofer Zelig &lt;a href=&#34;https://fullstack.info&#34;&gt;https://fullstack.info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ole Begemann &lt;a href=&#34;https://oleb.net/blog/&#34;&gt;https://oleb.net/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Oona Räisänen &lt;a href=&#34;http://www.windytan.com/&#34;&gt;http://www.windytan.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;P individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pamela Fox &lt;a href=&#34;http://blog.pamelafox.org/&#34;&gt;http://blog.pamelafox.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pat Shaughnessy &lt;a href=&#34;http://patshaughnessy.net/&#34;&gt;http://patshaughnessy.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paul Graham &lt;a href=&#34;http://www.paulgraham.com/articles.html&#34;&gt;http://www.paulgraham.com/articles.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paul Irish &lt;a href=&#34;https://www.paulirish.com/&#34;&gt;https://www.paulirish.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paul Lewis &lt;a href=&#34;https://aerotwist.com/blog/&#34;&gt;https://aerotwist.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Paweł Chudzik &lt;a href=&#34;https://blog.pchudzik.com/&#34;&gt;https://blog.pchudzik.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Peter Norvig &lt;a href=&#34;http://norvig.com/&#34;&gt;http://norvig.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Peter Steinberger &lt;a href=&#34;http://petersteinberger.com/&#34;&gt;http://petersteinberger.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Peteris Krumins &lt;a href=&#34;http://www.catonmat.net/blog/&#34;&gt;http://www.catonmat.net/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Petr Mitrichev &lt;a href=&#34;http://petr-mitrichev.blogspot.com/&#34;&gt;http://petr-mitrichev.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Philip Walton &lt;a href=&#34;https://philipwalton.com/&#34;&gt;https://philipwalton.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Philipp Oppermann &lt;a href=&#34;https://os.phil-opp.com/&#34;&gt;https://os.phil-opp.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pony Foo &lt;a href=&#34;https://ponyfoo.com/&#34;&gt;https://ponyfoo.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Piotr Pasich &lt;a href=&#34;http://piotrpasich.com/&#34;&gt;http://piotrpasich.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Piotr Wittchen &lt;a href=&#34;http://blog.wittchen.biz.pl/&#34;&gt;http://blog.wittchen.biz.pl/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;R individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rachel Kroll &lt;a href=&#34;https://rachelbythebay.com/w/&#34;&gt;https://rachelbythebay.com/w/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Radek Pazdera &lt;a href=&#34;http://radek.io&#34;&gt;http://radek.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Radim Řehůřek &lt;a href=&#34;https://radimrehurek.com/blog/&#34;&gt;https://radimrehurek.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ramon Fried &lt;a href=&#34;https://nativeguru.wordpress.com/&#34;&gt;https://nativeguru.wordpress.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ray Wenderlich &lt;a href=&#34;https://www.raywenderlich.com/&#34;&gt;https://www.raywenderlich.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Raymond Chen &lt;a href=&#34;https://blogs.msdn.microsoft.com/oldnewthing/&#34;&gt;https://blogs.msdn.microsoft.com/oldnewthing/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Raymond Hettinger &lt;a href=&#34;https://rhettinger.wordpress.com/&#34;&gt;https://rhettinger.wordpress.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ReactJS News &lt;a href=&#34;https://reactjsnews.com&#34;&gt;https://reactjsnews.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Real Python &lt;a href=&#34;https://realpython.com/blog/&#34;&gt;https://realpython.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Reginald Braithwaite &lt;a href=&#34;http://raganwald.com/#essays&#34;&gt;http://raganwald.com/#essays&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Regular Geek &lt;a href=&#34;http://regulargeek.com/&#34;&gt;http://regulargeek.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rob Allen &lt;a href=&#34;https://akrabat.com/&#34;&gt;https://akrabat.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robert C. Martin &lt;a href=&#34;http://blog.cleancoder.com/&#34;&gt;http://blog.cleancoder.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robin Ward &lt;a href=&#34;https://eviltrout.com/&#34;&gt;https://eviltrout.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robin Wilson &lt;a href=&#34;http://blog.rtwilson.com/&#34;&gt;http://blog.rtwilson.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rudy Huyn &lt;a href=&#34;http://www.rudyhuyn.com/blog/&#34;&gt;http://www.rudyhuyn.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rudolf Olah &lt;a href=&#34;https://neverfriday.com/blog/&#34;&gt;https://neverfriday.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ruslan Spivak &lt;a href=&#34;https://ruslanspivak.com/&#34;&gt;https://ruslanspivak.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;S individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sakib Sami &lt;a href=&#34;https://www.sakib.ninja&#34;&gt;https://www.sakib.ninja&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sam Saffron &lt;a href=&#34;https://samsaffron.com/&#34;&gt;https://samsaffron.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sergey Zhuk &lt;a href=&#34;http://sergeyzhuk.me/&#34;&gt;http://sergeyzhuk.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Schakko &lt;a href=&#34;https://schakko.de&#34;&gt;https://schakko.de&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scott Hanselman &lt;a href=&#34;http://www.hanselman.com/blog/&#34;&gt;http://www.hanselman.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scott Johnson &lt;a href=&#34;http://www.fuzzyblog.io/blog/&#34;&gt;http://www.fuzzyblog.io/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simon Reimler &lt;a href=&#34;https://devdactic.com/devblog/&#34;&gt;https://devdactic.com/devblog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Srinivas Tamada &lt;a href=&#34;https://www.9lessons.info/&#34;&gt;https://www.9lessons.info/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Abuse &lt;a href=&#34;http://www.stackabuse.com/&#34;&gt;http://www.stackabuse.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stanko Tadić &lt;a href=&#34;https://muffinman.io&#34;&gt;https://muffinman.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stefan Parker &lt;a href=&#34;http://codebeforethehorse.tumblr.com/&#34;&gt;http://codebeforethehorse.tumblr.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stephen Colebourne &lt;a href=&#34;http://blog.joda.org/&#34;&gt;http://blog.joda.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Steve Bellovin &lt;a href=&#34;https://www.cs.columbia.edu/~smb/blog/control/&#34;&gt;https://www.cs.columbia.edu/~smb/blog/control/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Steve Yegge &lt;a href=&#34;https://steve-yegge.blogspot.com/&#34;&gt;https://steve-yegge.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sudhagar &lt;a href=&#34;http://sudhagar.com/&#34;&gt;http://sudhagar.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swizec Teller &lt;a href=&#34;https://swizec.com/blog/&#34;&gt;https://swizec.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;T individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tania Rascia &lt;a href=&#34;https://tania.dev/&#34;&gt;https://tania.dev/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tero Parviainen &lt;a href=&#34;http://teropa.info/&#34;&gt;http://teropa.info/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;That Thing In Swift &lt;a href=&#34;https://thatthinginswift.com/&#34;&gt;https://thatthinginswift.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Coded Self &lt;a href=&#34;http://www.thecodedself.com&#34;&gt;http://www.thecodedself.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Daily WTF &lt;a href=&#34;http://thedailywtf.com/&#34;&gt;http://thedailywtf.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thomas Young &lt;a href=&#34;http://upcoder.com&#34;&gt;http://upcoder.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tikhon Jelvis &lt;a href=&#34;http://jelv.is/blog/&#34;&gt;http://jelv.is/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Todd Motto &lt;a href=&#34;https://toddmotto.com/&#34;&gt;https://toddmotto.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;T.J. Maher &lt;a href=&#34;http://adventuresinautomation.blogspot.com/&#34;&gt;http://adventuresinautomation.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;U individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Una Kravets &lt;a href=&#34;https://una.im/&#34;&gt;https://una.im/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Undocumented Matlab &lt;a href=&#34;http://undocumentedmatlab.com/&#34;&gt;http://undocumentedmatlab.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;V individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vanilla Java &lt;a href=&#34;http://vanillajava.blogspot.com/&#34;&gt;http://vanillajava.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vlad Mihalcea &lt;a href=&#34;https://vladmihalcea.com/&#34;&gt;https://vladmihalcea.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;W individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wilfred Hughes &lt;a href=&#34;http://www.wilfred.me.uk/&#34;&gt;http://www.wilfred.me.uk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;William Kennedy &lt;a href=&#34;https://www.goinggo.net/&#34;&gt;https://www.goinggo.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wojtek Gawroński &lt;a href=&#34;http://www.afronski.pl/&#34;&gt;http://www.afronski.pl/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Y individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Yegor Bugayenko &lt;a href=&#34;http://www.yegor256.com/&#34;&gt;http://www.yegor256.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Yifan Lu &lt;a href=&#34;http://yifan.lu/&#34;&gt;http://yifan.lu/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Z individuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zach Holman &lt;a href=&#34;https://zachholman.com/&#34;&gt;https://zachholman.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zolmeister &lt;a href=&#34;https://zolmeister.com/&#34;&gt;https://zolmeister.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Products/Technologies&lt;/h3&gt; &#xA;&lt;h4&gt;A technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android &lt;a href=&#34;https://android-developers.blogspot.com/&#34;&gt;https://android-developers.blogspot.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Atom.io &lt;a href=&#34;http://blog.atom.io/&#34;&gt;http://blog.atom.io/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;B technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bootstrap.com &lt;a href=&#34;https://blog.getbootstrap.com/&#34;&gt;https://blog.getbootstrap.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;C technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Crystal &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;https://crystal-lang.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;G technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://blog.golang.org/&#34;&gt;https://blog.golang.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;I technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IPFS &lt;a href=&#34;https://ipfs.io/blog/&#34;&gt;https://ipfs.io/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;J technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;jOOQ &lt;a href=&#34;https://blog.jooq.org/&#34;&gt;https://blog.jooq.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;K technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Klipse &lt;a href=&#34;http://blog.klipse.tech/&#34;&gt;http://blog.klipse.tech/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kotlin &lt;a href=&#34;https://blog.jetbrains.com/kotlin/&#34;&gt;https://blog.jetbrains.com/kotlin/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;L technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Laravel &lt;a href=&#34;https://laravel-news.com/blog/&#34;&gt;https://laravel-news.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;M technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Edge &lt;a href=&#34;https://blogs.windows.com/msedgedev/&#34;&gt;https://blogs.windows.com/msedgedev/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;N technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.NET &lt;a href=&#34;https://blogs.msdn.microsoft.com/dotnet/&#34;&gt;https://blogs.msdn.microsoft.com/dotnet/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;R technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;React &lt;a href=&#34;https://reactjs.org/blog/&#34;&gt;https://reactjs.org/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;React Native &lt;a href=&#34;http://facebook.github.io/react-native/blog/&#34;&gt;http://facebook.github.io/react-native/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Red &lt;a href=&#34;http://www.red-lang.org&#34;&gt;http://www.red-lang.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RocksDB &lt;a href=&#34;http://rocksdb.org/blog&#34;&gt;http://rocksdb.org/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rust &lt;a href=&#34;https://blog.rust-lang.org/&#34;&gt;https://blog.rust-lang.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;S technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sketch &lt;a href=&#34;https://blog.sketchapp.com/&#34;&gt;https://blog.sketchapp.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swift &lt;a href=&#34;https://developer.apple.com/swift/blog/&#34;&gt;https://developer.apple.com/swift/blog/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;V technologies&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vertabelo &lt;a href=&#34;http://www.vertabelo.com/blog&#34;&gt;http://www.vertabelo.com/blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;RSS feeds&lt;/h1&gt; &#xA;&lt;p&gt;You can find an opml file to import rss feeds here: &lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/engineering_blogs.opml&#34;&gt;engineering_blogs.opml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions welcome! Read the &lt;a href=&#34;https://raw.githubusercontent.com/kilimchoi/engineering-blogs/master/contributing.md&#34;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Licensed under a &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>d12frosted/homebrew-emacs-plus</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/d12frosted/homebrew-emacs-plus</id>
    <link href="https://github.com/d12frosted/homebrew-emacs-plus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emacs Plus formulae for the Homebrew package manager&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+begin_html&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;256px&#34; src=&#34;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/emacs.png&#34; alt=&#34;Banner&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Emacs Plus&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/d12frosted/homebrew-emacs-plus/actions?query=workflow%3A%22Emacs+29%22&#34;&gt; &lt;img src=&#34;https://github.com/d12frosted/homebrew-emacs-plus/workflows/Emacs%2029/badge.svg?sanitize=true&#34; alt=&#34;Emacs 29 CI Status Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/d12frosted/homebrew-emacs-plus/actions?query=workflow%3A%22Emacs+28%22&#34;&gt; &lt;img src=&#34;https://github.com/d12frosted/homebrew-emacs-plus/workflows/Emacs%2028/badge.svg?sanitize=true&#34; alt=&#34;Emacs 28 CI Status Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/d12frosted/homebrew-emacs-plus/actions?query=workflow%3A%22Emacs+27%22&#34;&gt; &lt;img src=&#34;https://github.com/d12frosted/homebrew-emacs-plus/workflows/Emacs%2027/badge.svg?sanitize=true&#34; alt=&#34;Emacs 27 CI Status Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/d12frosted/homebrew-emacs-plus/actions?query=workflow%3A%22Emacs+26%22&#34;&gt; &lt;img src=&#34;https://github.com/d12frosted/homebrew-emacs-plus/workflows/Emacs%2026/badge.svg?sanitize=true&#34; alt=&#34;Emacs 26 CI Status Badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; #+end_html &#xA;&lt;p&gt;** About&lt;/p&gt; &#xA;&lt;p&gt;#+begin_html &lt;img align=&#34;right&#34; width=&#34;40%&#34; src=&#34;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/screenshot-01.png&#34; alt=&#34;Screenshot&#34;&gt; #+end_html&lt;/p&gt; &#xA;&lt;p&gt;Emacs+ is [[https://www.gnu.org/software/emacs/emacs.html][→ GNU Emacs]] formulae for macOS [[https://brew.sh][→ Homebrew]] package manager. It offers a wide rage of extra functionality over regular [[https://formulae.brew.sh/formula/emacs#default][→ Emacs]] package. Emacs+ intent is to give the most of &#39;plus&#39; stuff by default, leaving only controversial options as opt-in. Please refer to [[#options][→ Options]] section for more information.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src bash $ brew tap d12frosted/emacs-plus $ brew install emacs-plus [options] # install the latest release (Emacs 28) $ brew install emacs-plus@29 [options] # install Emacs 29 (master) $ brew install emacs-plus@28 [options] # install Emacs 28 $ brew install emacs-plus@27 [options] # install Emacs 27 $ brew install emacs-plus@26 [options] # install Emacs 26 #+end_src&lt;/p&gt; &#xA;&lt;p&gt;Feel free to open an issue or contact me via email if you face any issues, questions or feature requests. I love pull requests, so do send them. You might want to check [[docs/development-guidelines.org][→ Development guidelines]] to have better understanding on how to contribute.&lt;/p&gt; &#xA;&lt;p&gt;** Table of Contents :TOC_3:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[#about][About]]&lt;/li&gt; &#xA; &lt;li&gt;[[#install][Install]]&lt;/li&gt; &#xA; &lt;li&gt;[[#reinstall][Reinstall]]&lt;/li&gt; &#xA; &lt;li&gt;[[#emacs-29][Emacs 29]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#included][Included]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#options][Options]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#emacs-28][Emacs 28]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#included-1][Included]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#options-1][Options]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#emacs-27][Emacs 27]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#included-2][Included]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#options-2][Options]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#emacs-26][Emacs 26]]&lt;/li&gt; &#xA; &lt;li&gt;[[#features-explained][Features explained]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#injected-path][Injected PATH]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#no-titlebar][No Titlebar]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#xwidgets-webkit][Xwidgets (webkit)]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#system-appearance-change][System appearance change]]&lt;/li&gt; &#xA;   &lt;li&gt;[[#gccemacs][gccemacs]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#icons][Icons]]&lt;/li&gt; &#xA; &lt;li&gt;[[#emacs-configuration][Emacs configuration]]&lt;/li&gt; &#xA; &lt;li&gt;[[#known-issues][Known Issues]] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[[#emacs-dependency-in-other-formulas][=emacs= dependency in other formulas]]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[[#screenshots][Screenshots]]&lt;/li&gt; &#xA; &lt;li&gt;[[#acknowledgements][Acknowledgements]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Install&lt;/p&gt; &#xA;&lt;p&gt;Emacs Plus contains separate formulas for different Emacs versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;=emacs-plus= install current release version (Emacs 28);&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=emacs-plus@29= install Emacs 29, development version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=emacs-plus@28= install Emacs 28, current release version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=emacs-plus@27= install Emacs 27, previous release version;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;=emacs-plus@26= install Emacs 26, previous release version;&lt;/p&gt; &lt;p&gt;#+begin_src bash $ brew tap d12frosted/emacs-plus $ brew install emacs-plus [options] # install the latest release (Emacs 28) $ brew install emacs-plus@29 [options] # install Emacs 29 $ brew install emacs-plus@28 [options] # install Emacs 28 $ brew install emacs-plus@27 [options] # install Emacs 27 $ brew install emacs-plus@26 [options] # install Emacs 26 #+end_src&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default (without any addition options) this formula install Cocoa version of Emacs with support of =gnutls=, =imagemagick= (not included by default with =emacs-plus@29= and emacs-plus@29), =librsvg=, =libxml2=, dynamic modules and multicolor fonts. Please see the list of available options to disable any bit of default behaviour or add even more stuff.&lt;/p&gt; &#xA;&lt;p&gt;** Reinstall&lt;/p&gt; &#xA;&lt;p&gt;If you wish to reinstall =emacs-plus= with you should not use =reinstall= command of =brew= (not related to this formula, it&#39;s a general advice). Instead, you should =uninstall= a package and then =install= it with desired options.&lt;/p&gt; &#xA;&lt;p&gt;Avoid =reinstall= even if you want to =reinstall= with the same set of options, otherwise you will likely to get compilation errors! For example, [[https://github.com/d12frosted/homebrew-emacs-plus/issues/218][#218]] and [[https://github.com/d12frosted/homebrew-emacs-plus/issues/321][#321]].&lt;/p&gt; &#xA;&lt;p&gt;In short, =brew= doesn&#39;t really support options. They break time to time ([[https://github.com/Homebrew/brew/issues/4793][brew#4793]], [[https://github.com/Homebrew/brew/issues/7397][brew#7397]], [[https://github.com/Homebrew/brew/issues/7498][brew#7498]] to show a few).&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC bash $ brew uninstall emacs-plus $ brew install emacs-plus [options] #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** Emacs 29&lt;/p&gt; &#xA;&lt;p&gt;*** Included&lt;/p&gt; &#xA;&lt;p&gt;By default =emacs-plus@29= uses the following features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Injected =PATH= value from user shell (see separate section explaining this feature).&lt;/li&gt; &#xA; &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; &#xA; &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Options&lt;/p&gt; &#xA;&lt;p&gt;| Option | Description | |---------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-no-frame-refocus= | disables frame re-focus (ie. closing one frame does not refocus another one) | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][→ with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--with-imagemagick= | build with =imagemagick= support | | =--with-native-comp= | build with native compilation aka [[#gccemacs][→ gccemacs]] |&lt;/p&gt; &#xA;&lt;p&gt;** Emacs 28&lt;/p&gt; &#xA;&lt;p&gt;*** Included&lt;/p&gt; &#xA;&lt;p&gt;By default =emacs-plus@28= uses the following features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Injected =PATH= value from user shell (see separate section explaining this feature).&lt;/li&gt; &#xA; &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; &#xA; &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Options&lt;/p&gt; &#xA;&lt;p&gt;| Option | Description | |---------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-no-frame-refocus= | disables frame re-focus (ie. closing one frame does not refocus another one) | | =--with-no-titlebar= | build [[#no-titlebar][→ without titlebar]] | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][→ with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--with-imagemagick= | build with =imagemagick= support | | =--HEAD= | build from =emacs-28= branch | | =--with-native-comp= | build with native compilation aka [[#gccemacs][→ gccemacs]] | | | |&lt;/p&gt; &#xA;&lt;p&gt;** Emacs 27&lt;/p&gt; &#xA;&lt;p&gt;*** Included&lt;/p&gt; &#xA;&lt;p&gt;By default =emacs-plus@27= uses the following features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cocoa version, e.g. builds =Emacs.app=.&lt;/li&gt; &#xA; &lt;li&gt;Unconditional support for =gnutls=, =librsvg=, =libxml2=, =little-cms2= and dynamic modules.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Options&lt;/p&gt; &#xA;&lt;p&gt;| Option | Description | |---------------------------+------------------------------------------------------------------------------| | =--with-ctags= | don&#39;t remove the ctags executable that Emacs provides | | =--with-dbus= | build with dbus support | | =--with-debug= | build with debug symbols and debugger friendly optimizations | | =--with-mailutils= | build with mailutils support | | =--with-no-frame-refocus= | disables frame re-focus (ie. closing one frame does not refocus another one) | | =--with-no-titlebar= | build [[#no-titlebar][→ without titlebar]] | | =--with-x11= | build with x11 support | | =--with-xwidgets= | build [[#xwidgets-webkit][→ with xwidgets]] support | | =--without-cocoa= | build a non-Cocoa version of Emacs (terminal only) | | =--without-imagemagick= | build without =imagemagick= support | | =--HEAD= | build from =emacs-27= branch |&lt;/p&gt; &#xA;&lt;p&gt;** Emacs 26&lt;/p&gt; &#xA;&lt;p&gt;Emacs 26 comes without any available options due to [[https://github.com/d12frosted/homebrew-emacs-plus/issues/195][→ #195]].&lt;/p&gt; &#xA;&lt;p&gt;** Features explained&lt;/p&gt; &#xA;&lt;p&gt;*** Injected PATH&lt;/p&gt; &#xA;&lt;p&gt;#+begin_quote Ever find that a command works in your shell, but not in Emacs?&lt;/p&gt; &#xA;&lt;p&gt;(c) @purcell #+end_quote&lt;/p&gt; &#xA;&lt;p&gt;In macOS applications are started in the login environment, meaning that all user defined environment variables are not available in application process. In the most cases it&#39;s not a big deal, but in Emacs it becomes a source of troubles as we want to use binaries from the non-standard locations (for example, those installed via package managers).&lt;/p&gt; &#xA;&lt;p&gt;There is a wonderful solution to overcome this problem, [[https://github.com/purcell/exec-path-from-shell][purcell/exec-path-from-shell]]. As with any package that is not preinstalled with Emacs, you need to discover it first, and then install it. And while being a well known package and popular package (top 100 on MELPA), not everyone install it. In addition, with =native-comp= feature you might need it&#39;s functionality before any package is bootstrapped.&lt;/p&gt; &#xA;&lt;p&gt;All that being said, during installation Emacs+ injects value of =PATH= into =Emacs.app/Contents/Info.plist= file, making this value available whenever you start =Emacs.app= from Finder, Docker, Spotlight, =open= command in Terminal or via =launchd=. This solves a wide range of problems for GUI users without the need to use [[https://github.com/purcell/exec-path-from-shell][purcell/exec-path-from-shell]], but if needed you can still fall back to this wonderful package, especially if you need other variables.&lt;/p&gt; &#xA;&lt;p&gt;In case you have a non-trivial setup relying on specific value of =PATH= inherited from current terminal session, it is advised to start Emacs using =/opt/homebrew/bin/emacs= instead of =open -n -a /path/to/Emacs.app=, because =open= messes around with =PATH= value even without Emacs+ injection. You can find more information in [[https://github.com/d12frosted/homebrew-emacs-plus/issues/469][#469]].&lt;/p&gt; &#xA;&lt;p&gt;And if for some reason PATH injection doesn&#39;t work for you, report it either in [[https://github.com/d12frosted/homebrew-emacs-plus/issues/469][#469]] or open a new issue.&lt;/p&gt; &#xA;&lt;p&gt;*** No Titlebar&lt;/p&gt; &#xA;&lt;p&gt;This patch is enabled with the =--with-no-titlebar= option for =emacs-plus@27= and =emacs-plus@28=. It is meant for use with window tiling applications like [[https://github.com/koekeishiya/yabai][→ yabai]], [[https://github.com/koekeishiya/chunkwm][→ chunkwm]] or [[https://github.com/ianyh/Amethyst][→ amethyst]] so that the titlebar won&#39;t take up screen real estate. If you see gaps between your emacs frames and other windows, try this:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC emacs-lisp (setq frame-resize-pixelwise t) #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;In =emacs-plus@29= this option is not available anymore as you can achieve the same result using Emacs Lisp by adding the following line in your =early-init.el= file:&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (add-to-list &#39;default-frame-alist &#39;(undecorated . t)) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;*** Xwidgets (webkit)&lt;/p&gt; &#xA;&lt;p&gt;Browse the web in Emacs as in modern browser.&lt;/p&gt; &#xA;&lt;p&gt;The original [[https://www.emacswiki.org/emacs/EmacsXWidgets][→ Emacs xwidgets]] builds and works on macOS however must be used with X11 and hence not practical option on macOS. This version enables =xwidgets= on native macOS Cocoa via embedding a native webkit window.&lt;/p&gt; &#xA;&lt;p&gt;More details can be seen here [[https://github.com/veshboo/emacs][→ Veshboo&#39;s emacs branch]].&lt;/p&gt; &#xA;&lt;p&gt;*** System appearance change&lt;/p&gt; &#xA;&lt;p&gt;This patch is enabled by default and can&#39;t be disabled. It adds a hook, =ns-system-appearance-change-functions=, that is called once the system appearance is changed. Functions added to this hook will be called with one argument, a symbol that is either =light= or =dark=. This mainly allows loading a different theme to better match the system appearance.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src emacs-lisp (defun my/apply-theme (appearance) &#34;Load theme, taking current system APPEARANCE into consideration.&#34; (mapc #&#39;disable-theme custom-enabled-themes) (pcase appearance (&#39;light (load-theme &#39;tango t)) (&#39;dark (load-theme &#39;tango-dark t))))&lt;/p&gt; &#xA;&lt;p&gt;(add-hook &#39;ns-system-appearance-change-functions #&#39;my/apply-theme) #+end_src&lt;/p&gt; &#xA;&lt;p&gt;Note that this hook is also run once when Emacs is initialized, so simply adding the above to your =init.el= will allow matching the system appearance upon startup. You can also determine what the current system appearance is by inspecting the value of the =ns-system-appearance= variable.&lt;/p&gt; &#xA;&lt;p&gt;The hook is NOT run in TTY Emacs sessions.&lt;/p&gt; &#xA;&lt;p&gt;*** gccemacs&lt;/p&gt; &#xA;&lt;p&gt;#+begin_quote gccemacs is a modified Emacs capable of compiling and running Emacs Lisp as native code in form of re-loadable elf files. As the name suggests this is achieved blending together Emacs and the gcc infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;[[https://akrl.sdf.org/gccemacs.html][→ Andrea Corallo]] #+end_quote&lt;/p&gt; &#xA;&lt;p&gt;While =gccemacs= gives performance boost in many scenarios, this feature is still experimental and might require time and effort from your side for it to work! Use at our own risk :)&lt;/p&gt; &#xA;&lt;p&gt;Please see official [[https://akrl.sdf.org/gccemacs.html][→ gccemacs documentation]] for more information.&lt;/p&gt; &#xA;&lt;p&gt;Knows issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;=ld: library not found for -lSystem=. This only happens on older versions of =gcc= installed by Homebrew. Please execute =$ brew reinstall gcc libgccjit= to resolve this issue.&lt;/li&gt; &#xA; &lt;li&gt;Errors during compilation of your =init.el=. Try running Emacs with =-Q= option and give it some time to compile everything (maybe run =M-x= to force compilation) - you shall see buffer =&lt;em&gt;Async-native-compile-log&lt;/em&gt;= in the list of buffers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Icons&lt;/p&gt; &#xA;&lt;p&gt;| Option | Author | Image | URL | |-----------------------------------------------+----------------------------+--------------------------------------------------------+---------| | =--with-EmacsIcon1-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon1_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon2-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon2_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon3-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon3_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon4-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon4_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon5-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon5_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon6-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon6_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon7-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon7_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon8-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon8_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-EmacsIcon9-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/EmacsIcon9_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-cacodemon-icon= | [[https://gitlab.com/wildwestrom][→ Christian Westrom]] | [[/icons/preview/cacodemon_128.png]] | [[https://gitlab.com/wildwestrom/emacs-doom-icon][→ Link]] | | =--with-dragon-icon= | [[https://github.com/willbchang][→ Will B Chang]] | [[/icons/preview/dragon_128.png]] | [[https://github.com/willbchang/emacs-dragon-icon][→ Link]] | | =--with-elrumo1-icon= | [[https://github.com/elrumo][→ Elias]] | [[/icons/preview/elrumo1_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/303#issuecomment-763928162][→ Link]] | | =--with-elrumo2-icon= | [[https://github.com/elrumo][→ Elias]] | [[/icons/preview/elrumo2_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/303#issuecomment-763928162][→ Link]] | | =--with-emacs-card-blue-deep-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/emacs-card-blue-deep_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-emacs-card-british-racing-green-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/emacs-card-british-racing-green_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-emacs-card-carmine-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/emacs-card-carmine_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-emacs-card-green-icon= | [[https://github.com/jasonm23][→ Jason Milkins]] | [[/icons/preview/emacs-card-green_128.png]] | [[https://github.com/emacsfodder/emacs-icons-project][→ Link]] | | =--with-gnu-head-icon= | [[https://github.com/aurium][→ Aurélio A. Heckert]] | [[/icons/preview/gnu-head_128.png]] | [[https://www.gnu.org/graphics/heckert_gnu.html][→ Link]] | | =--with-memeplex-slim-icon= | [[https://github.com/memeplex][→ memeplex]] | [[/icons/preview/memeplex-slim_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/419#issuecomment-966735773][→ Link]] | | =--with-memeplex-wide-icon= | [[https://github.com/memeplex][→ memeplex]] | [[/icons/preview/memeplex-wide_128.png]] | [[https://github.com/d12frosted/homebrew-emacs-plus/issues/419#issuecomment-966735773][→ Link]] | | =--with-modern-alecive-flatwoken-icon= | [[https://www.iconarchive.com/artist/alecive.html][→ Alessandro Roncone]] | [[/icons/preview/modern-alecive-flatwoken_128.png]] | [[https://www.iconarchive.com/show/flatwoken-icons-by-alecive.html][→ Link]] | | =--with-modern-asingh4242-icon= | [[https://imgur.com/user/asingh4242][→ Asingh4242]] | [[/icons/preview/modern-asingh4242_128.png]] | [[https://imgur.com/YGxjLZw][→ Link]] | | =--with-modern-azhilin-icon= | Andrew Zhilin | [[/icons/preview/modern-azhilin_128.png]] | [[https://commons.wikimedia.org/wiki/File:Emacs-icon-48x48.png][→ Link]] | | =--with-modern-bananxan-icon= | [[https://www.deviantart.com/bananxan][→ BananXan]] | [[/icons/preview/modern-bananxan_128.png]] | [[https://www.deviantart.com/bananxan/art/Emacs-icon-207744728][→ Link]] | | =--with-modern-black-dragon-icon= | [[https://www.cleanpng.com/users/@osike.html][→ Osike]] | [[/icons/preview/modern-black-dragon_128.png]] | [[https://www.cleanpng.com/png-spacemacs-computer-software-command-line-interface-3947037][→ Link]] | | =--with-modern-black-gnu-head-icon= | [[http://www.aha-soft.com][→ Aha-Soft]] | [[/icons/preview/modern-black-gnu-head_128.png]] | [[https://www.iconfinder.com/iconsets/flat-round-system][→ Link]] | | =--with-modern-black-variant-icon= | [[https://www.deviantart.com/blackvariant/about][→ BlackVariant]] | [[/icons/preview/modern-black-variant_128.png]] | [[https://www.deviantart.com/blackvariant][→ Link]] | | =--with-modern-bokehlicia-captiva-icon= | [[https://www.deviantart.com/bokehlicia][→ Bokehlicia]] | [[/icons/preview/modern-bokehlicia-captiva_128.png]] | [[https://www.iconarchive.com/show/captiva-icons-by-bokehlicia/emacs-icon.html][→ Link]] | | =--with-modern-cg433n-icon= | [[https://github.com/cg433n][→ cg433n]] | [[/icons/preview/modern-cg433n_128.png]] | [[https://github.com/cg433n/emacs-mac-icon][→ Link]] | | =--with-modern-doom-icon= | [[http://eccentric-j.com/][→ Eccentric J]] | [[/icons/preview/modern-doom_128.png]] | [[https://github.com/eccentric-j/doom-icon][→ Link]] | | =--with-modern-doom3-icon= | [[http://eccentric-j.com/][→ Eccentric J]] | [[/icons/preview/modern-doom3_128.png]] | [[https://github.com/eccentric-j/doom-icon][→ Link]] | | =--with-modern-icon= | Unknown | [[/icons/preview/modern_128.png]] | Unknown | | =--with-modern-mzaplotnik-icon= | [[https://commons.wikimedia.org/wiki/User:MZaplotnik][→ Matjaz Zaplotnik]] | [[/icons/preview/modern-mzaplotnik_128.png]] | [[https://commons.wikimedia.org/wiki/File:Emacs-icon-48x48.svg][→ Link]] | | =--with-modern-nuvola-icon= | [[https://en.wikipedia.org/wiki/David_Vignoni][→ David Vignoni]] | [[/icons/preview/modern-nuvola_128.png]] | [[https://commons.wikimedia.org/wiki/File:Nuvola_apps_emacs_vector.svg][→ Link]] | | =--with-modern-orange-icon= | [[https://github.com/VentGrey][→ Omar Jair Purata Funes]] | [[/icons/preview/modern-orange_128.png]] | [[https://github.com/PapirusDevelopmentTeam/papirus-icon-theme/issues/1742][→ Link]] | | =--with-modern-paper-icon= | [[https://github.com/snwh][→ Sam Hewitt]] | [[/icons/preview/modern-paper_128.png]] | [[https://github.com/snwh/paper-icon-theme/blob/master/Paper/512x512/apps/emacs.png][→ Link]] | | =--with-modern-papirus-icon= | [[https://github.com/PapirusDevelopmentTeam][→ Papirus Development Team]] | [[/icons/preview/modern-papirus_128.png]] | [[https://github.com/PapirusDevelopmentTeam/papirus-icon-theme][→ Link]] | | =--with-modern-pen-3d-icon= | Unknown | [[/icons/preview/modern-pen-3d_128.png]] | [[https://download-mirror.savannah.gnu.org/releases/emacs/icons][→ Link]] | | =--with-modern-pen-black-icon= | [[https://gitlab.com/csantosb][→ Cayetano Santos]] | [[/icons/preview/modern-pen-black_128.png]] | [[https://gitlab.com/uploads/-/system/project/avatar/11430322/emacs_icon_132408.png][→ Link]] | | =--with-modern-pen-icon= | [[https://github.com/nanasess][→ Kentaro Ohkouchi]] | [[/icons/preview/modern-pen_128.png]] | [[https://github.com/nanasess/EmacsIconCollections][→ Link]] | | =--with-modern-pen-lds56-icon= | [[http://lds56.github.io/about][→ lds56]] | [[/icons/preview/modern-pen-lds56_128.png]] | [[http://lds56.github.io/notes/emacs-icon-redesigned][→ Link]] | | =--with-modern-purple-flat-icon= | [[https://jeremiahfoster.com][→ Jeremiah Foster]] | [[/icons/preview/modern-purple-flat_128.png]] | [[https://icon-icons.com/icon/emacs/103962][→ Link]] | | =--with-modern-sexy-v1-icon= | [[https://emacs.sexy][→ Emacs is Sexy]] | [[/icons/preview/modern-sexy-v1_128.png]] | [[https://emacs.sexy][→ Link]] | | =--with-modern-sexy-v2-icon= | [[https://emacs.sexy][→ Emacs is Sexy]] | [[/icons/preview/modern-sexy-v2_128.png]] | [[https://emacs.sexy][→ Link]] | | =--with-modern-sjrmanning-icon= | [[https://github.com/sjrmanning][→ sjrmannings]] | [[/icons/preview/modern-sjrmanning_128.png]] | [[https://github.com/sjrmanning/emacs-icon][→ Link]] | | =--with-modern-vscode-icon= | [[https://github.com/vdegenne][→ Valentin Degenne]] | [[/icons/preview/modern-vscode_128.png]] | [[https://github.com/VSCodeEmacs/Emacs][→ Link]] | | =--with-modern-yellow-icon= | Unknown | [[/icons/preview/modern-yellow_128.png]] | [[http://getdrawings.com/emacs-icon#emacs-icon-75.png][→ Link]] | | =--with-nobu417-big-sur-icon= | [[https://github.com/nobu417][→ Nobuyuki Sato]] | [[/icons/preview/nobu417-big-sur_128.png]] | [[https://github.com/nobu417/emacs-icon-replacement-for-macos-big-sur][→ Link]] | | =--with-retro-emacs-logo-icon= | [[https://www.ee.ryerson.ca/~elf/][→ Luis Fernandes]] | [[/icons/preview/retro-emacs-logo_128.png]] | [[https://en.m.wikipedia.org/wiki/File:Emacs-logo.svg][→ Link]] | | =--with-retro-gnu-meditate-levitate-icon= | Nevrax Design Team | [[/icons/preview/retro-gnu-meditate-levitate_128.png]] | [[https://www.gnu.org/graphics/meditate.en.html][→ Link]] | | =--with-retro-sink-bw-icon= | Unknown | [[/icons/preview/retro-sink-bw_128.png]] | [[https://www.teuton.org/~ejm/emacsicon/][→ Link]] | | =--with-retro-sink-icon= | [[https://www.teuton.org/~ejm/][→ Erik Mugele]] | [[/icons/preview/retro-sink_128.png]] | [[https://www.teuton.org/~ejm/emacsicon/][→ Link]] | | =--with-spacemacs-icon= | [[https://github.com/nashamri][→ Nasser Alshammari]] | [[/icons/preview/spacemacs_128.png]] | [[https://github.com/nashamri/spacemacs-logo][→ Link]] |&lt;/p&gt; &#xA;&lt;p&gt;** Emacs configuration&lt;/p&gt; &#xA;&lt;p&gt;Emacs is a journey. And for some of you these projects might be inspiring.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[https://github.com/purcell/emacs.d][→ Steve Purcell&#39;s .emacs.d]]&lt;/li&gt; &#xA; &lt;li&gt;[[https://github.com/syl20bnr/spacemacs/][→ Spacemacs]]&lt;/li&gt; &#xA; &lt;li&gt;[[https://github.com/hlissner/doom-emacs][→ doom-emacs]]&lt;/li&gt; &#xA; &lt;li&gt;[[https://github.com/bbatsov/prelude][→ Prelude]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;** Known Issues&lt;/p&gt; &#xA;&lt;p&gt;Please checkout [[https://github.com/d12frosted/homebrew-emacs-plus/issues][→ Issues]] page for a list of all known issues. But here are several you should be aware of.&lt;/p&gt; &#xA;&lt;p&gt;*** =emacs= dependency in other formulas&lt;/p&gt; &#xA;&lt;p&gt;In some cases (like when installing =cask=) regular =emacs= package will be required. In such cases you might want to install all dependencies manually (except for =emacs=) and then install desired package with =--ignore-dependencies= option.&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC bash $ brew install cask --ignore-dependencies #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** Screenshots&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_HTML&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/screenshot-01.png&#34;&gt; &lt;/p&gt; #+END_HTML &#xA;&lt;p&gt;#+BEGIN_HTML&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/d12frosted/homebrew-emacs-plus/master/images/screenshot-02.png&#34;&gt; &lt;/p&gt; #+END_HTML &#xA;&lt;p&gt;** Acknowledgements&lt;/p&gt; &#xA;&lt;p&gt;Many thanks to all [[https://github.com/d12frosted/homebrew-emacs-plus/graphs/contributors][→ contributors]], issue reporters and bottle providers ([[https://github.com/wadkar][→ Sudarshan Wadkar]], [[https://github.com/jonhermansen][→ Jon Hermansen]]).&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to patrons [[https://www.patreon.com/d12frosted][supporting]] existence of this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[https://github.com/jidicula][→ Johanan Idicula]]&lt;/li&gt; &#xA; &lt;li&gt;[[http://github.com/lyndondrake][→ Lyndon Drake]]&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ruby/ruby</title>
    <updated>2022-05-31T01:32:25Z</updated>
    <id>tag:github.com,2022-05-31:/ruby/ruby</id>
    <link href="https://github.com/ruby/ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Ruby Programming Language [mirror]&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MinGW%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MinGW/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MinGW&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22MJIT%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/MJIT/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: MJIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Ubuntu%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ruby/ruby/actions?query=workflow%3A%22Windows%22&#34;&gt;&lt;img src=&#34;https://github.com/ruby/ruby/workflows/Windows/badge.svg?sanitize=true&#34; alt=&#34;Actions Status: Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/ruby/ruby/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0sy8rrxut4o0k960/branch/master?svg=true&#34; alt=&#34;AppVeyor status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/ruby/ruby&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/ruby/ruby.svg?branch=master&#34; alt=&#34;Travis Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/ruby/ruby/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/ruby/ruby.svg?sanitize=true&#34; alt=&#34;Cirrus Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Ruby?&lt;/h1&gt; &#xA;&lt;p&gt;Ruby is an interpreted object-oriented programming language often used for web development. It also offers many scripting features to process plain text and serialized files, or manage system tasks. It is simple, straightforward, and extensible.&lt;/p&gt; &#xA;&lt;h2&gt;Features of Ruby&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Normal&lt;/strong&gt; Object-oriented Features (e.g. class, method calls)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; Object-oriented Features (e.g. mix-in, singleton-method)&lt;/li&gt; &#xA; &lt;li&gt;Operator Overloading&lt;/li&gt; &#xA; &lt;li&gt;Exception Handling&lt;/li&gt; &#xA; &lt;li&gt;Iterators and Closures&lt;/li&gt; &#xA; &lt;li&gt;Garbage Collection&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Loading of Object Files (on some architectures)&lt;/li&gt; &#xA; &lt;li&gt;Highly Portable (works on many Unix-like/POSIX compatible platforms as well as Windows, macOS, etc.) cf. &lt;a href=&#34;https://github.com/ruby/ruby/raw/master/doc/maintainers.rdoc#label-Platform+Maintainers&#34;&gt;https://github.com/ruby/ruby/blob/master/doc/maintainers.rdoc#label-Platform+Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to get Ruby with Git&lt;/h2&gt; &#xA;&lt;p&gt;For a complete list of ways to install Ruby, including using third-party tools like rvm, see:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/downloads/&#34;&gt;https://www.ruby-lang.org/en/downloads/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The mirror of the Ruby source tree can be checked out with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are some other branches under development. Try the following command to see the list of branches:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git ls-remote https://github.com/ruby/ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also want to use &lt;a href=&#34;https://git.ruby-lang.org/ruby.git&#34;&gt;https://git.ruby-lang.org/ruby.git&lt;/a&gt; (actual master of Ruby source) if you are a committer.&lt;/p&gt; &#xA;&lt;h2&gt;Ruby home page&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/en/master/index.html&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ruby-lang.org/ja/master/index.html&#34;&gt;Japanese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mailing list&lt;/h2&gt; &#xA;&lt;p&gt;There is a mailing list to discuss Ruby. To subscribe to this list, please send the following phrase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;subscribe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in the mail body (not subject) to the address &lt;a href=&#34;mailto:ruby-talk-request@ruby-lang.org?subject=Join%20Ruby%20Mailing%20List&amp;amp;body=subscribe&#34;&gt;ruby-talk-request@ruby-lang.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copying&lt;/h2&gt; &#xA;&lt;p&gt;See the file &lt;a href=&#34;rdoc-ref:COPYING&#34;&gt;COPYING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Questions about the Ruby language can be asked on the &lt;a href=&#34;https://www.ruby-lang.org/en/community/mailing-lists&#34;&gt;Ruby-Talk&lt;/a&gt; mailing list or on websites like &lt;a href=&#34;https://stackoverflow.com&#34;&gt;https://stackoverflow.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bugs should be reported at &lt;a href=&#34;https://bugs.ruby-lang.org&#34;&gt;https://bugs.ruby-lang.org&lt;/a&gt;. Read &lt;a href=&#34;https://docs.ruby-lang.org/en/master/reporting_issues_md.html&#34;&gt;&#34;Reporting Issues&#34;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.ruby-lang.org/en/master/contributing_md.html&#34;&gt;&#34;Contributing to Ruby&#34;&lt;/a&gt;, which includes setup and build instructions.&lt;/p&gt; &#xA;&lt;h2&gt;The Author&lt;/h2&gt; &#xA;&lt;p&gt;Ruby was originally designed and developed by Yukihiro Matsumoto (Matz) in 1995.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:matz@ruby-lang.org&#34;&gt;matz@ruby-lang.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>