<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-23T01:39:27Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>whitesmith/rubycritic</title>
    <updated>2022-10-23T01:39:27Z</updated>
    <id>tag:github.com,2022-10-23:/whitesmith/rubycritic</id>
    <link href="https://github.com/whitesmith/rubycritic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Ruby code quality reporter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RubyCritic&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/rubycritic&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/rubycritic.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/whitesmith/rubycritic&#34;&gt;&lt;img src=&#34;https://travis-ci.org/whitesmith/rubycritic.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/whitesmith/rubycritic&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/whitesmith/rubycritic/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/logo.png&#34; alt=&#34;RubyCritic Icon&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;RubyCritic is a gem that wraps around static analysis gems such as &lt;a href=&#34;https://github.com/troessner/reek&#34;&gt;Reek&lt;/a&gt;, &lt;a href=&#34;https://github.com/seattlerb/flay&#34;&gt;Flay&lt;/a&gt; and &lt;a href=&#34;https://github.com/seattlerb/flog&#34;&gt;Flog&lt;/a&gt; to provide a quality report of your Ruby code.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#analyzer-configuration&#34;&gt;Analyzer Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#alternative-usage-methods&#34;&gt;Alternative Usage Methods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#rake-task&#34;&gt;Rake Task&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#compatibility&#34;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#improving-rubyCritic&#34;&gt;Improving RubyCritic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This gem provides features such as:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;An overview of your project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/overview.png&#34; alt=&#34;RubyCritic overview screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;An index of the project files with their respective number of smells:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/code.png&#34; alt=&#34;RubyCritic code index screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;An index of the smells detected:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/smells.png&#34; alt=&#34;RubyCritic smells index screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;When analysing code like the following:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Dirty&#xA;  def awful(x, y)&#xA;    if y&#xA;      @screen = widgets.map {|w| w.each {|key| key += 3}}&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It basically turns something like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/reek.png&#34; alt=&#34;Reek output screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Into something like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/smell-details.png&#34; alt=&#34;RubyCritic file code screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;It uses your source control system (only Git, Mercurial and Perforce are currently supported) to compare your currently uncommitted changes with your last commit.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: If your code is not as you expect it to be after running RubyCritic, please check your source control system stash.&lt;/p&gt; &#xA;&lt;p&gt;Checkout the &lt;code&gt;/docs&lt;/code&gt; if you want to read more about our &lt;a href=&#34;https://github.com/whitesmith/rubycritic/raw/master/docs/core-metrics.md&#34;&gt;core metrics&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;RubyCritic can be installed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install rubycritic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d rather install RubyCritic using Bundler, add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;rubycritic&#34;, require: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Running &lt;code&gt;rubycritic&lt;/code&gt; with no arguments will analyse all the Ruby files in the current directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rubycritic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can pass &lt;code&gt;rubycritic&lt;/code&gt; a list of files and directories to check:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rubycritic app lib/foo.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full list of the command-line options run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rubycritic --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command flag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-v&lt;/code&gt; / &lt;code&gt;--version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Displays the current version and exits&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-p&lt;/code&gt; / &lt;code&gt;--path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set path where report will be saved (tmp/rubycritic by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-f&lt;/code&gt; / &lt;code&gt;--format&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Report smells in the given format(s)&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--custom-format path:classname&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Load and instantiate custom formatter(s)&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-s&lt;/code&gt; / &lt;code&gt;--minimum-score&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set a minimum score (FLOAT: ex: 96.28), default: 0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-m&lt;/code&gt; / &lt;code&gt;--mode-ci&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use CI mode&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-b&lt;/code&gt; / &lt;code&gt;--branch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set branch to compare&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-t&lt;/code&gt; / &lt;code&gt;--maximum-decrease&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Threshold for score difference between two branches&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--deduplicate-symlinks&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;De-duplicate symlinks based on their final target&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--suppress-ratings&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Suppress letter ratings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--no-browser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Do not open html report with browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Available output formats:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;html&lt;/code&gt; (default; will open in a browser)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;console&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lint&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/docs/formatters.md&#34;&gt;custom formatters docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Faster, analyses diffs w.r.t base_branch (default: master), see &lt;code&gt;-b&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Works only with &lt;code&gt;-b&lt;/code&gt;, default: 0&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You also can use a config file. Just create a &lt;code&gt;.rubycritic.yml&lt;/code&gt; on your project root path.&lt;/p&gt; &#xA;&lt;p&gt;Here are one example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;mode_ci:&#xA;  enabled: true # default is false&#xA;  branch: &#39;production&#39; # default is master&#xA;branch: &#39;production&#39; # default is master&#xA;path: &#39;/tmp/mycustompath&#39; # Set path where report will be saved (tmp/rubycritic by default)&#xA;threshold_score: 10 # default is 0&#xA;deduplicate_symlinks: true # default is false&#xA;suppress_ratings: true # default is false&#xA;no_browser: true # default is false&#xA;formats: # Available values are: html, json, console, lint. Default value is html.&#xA;  - console&#xA;minimum_score: 95 # default is 0&#xA;paths: # Files to analyse.&#xA;  - &#39;app/controllers/&#39;&#xA;  - &#39;app/models/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Analyzer Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/troessner/reek&#34;&gt;&lt;code&gt;Reek&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;RubyCritic&lt;/code&gt; utilizes &lt;code&gt;Reek&lt;/code&gt;&#39;s default &lt;a href=&#34;https://github.com/troessner/reek#configuration-file&#34;&gt;configuration loading mechanism&lt;/a&gt;. This means that if you have an existing &lt;code&gt;Reek&lt;/code&gt; configuration file, you can just put this into your project root and &lt;code&gt;RubyCritic&lt;/code&gt; will respect this configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seattlerb/flay&#34;&gt;&lt;code&gt;flay&lt;/code&gt;&lt;/a&gt;: We use &lt;code&gt;flay&lt;/code&gt;&#39;s default configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seattlerb/flog&#34;&gt;&lt;code&gt;flog&lt;/code&gt;&lt;/a&gt;: We use &lt;code&gt;flog&lt;/code&gt;&#39;s default configuration with a couple of &lt;a href=&#34;https://github.com/whitesmith/rubycritic/raw/master/lib/rubycritic/analysers/helpers/flog.rb#L5&#34;&gt;smaller tweaks&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;all&lt;/code&gt;: Forces &lt;code&gt;flog&lt;/code&gt; to report scores on all classes and methods. Without this option &lt;code&gt;flog&lt;/code&gt; will only give results up to a certain threshold.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;continue&lt;/code&gt;: Makes it so that &lt;code&gt;flog&lt;/code&gt; does not abort when a ruby file cannot be parsed.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;methods&lt;/code&gt;: Configures &lt;code&gt;flog&lt;/code&gt; to skip code outside of methods. It prevents &lt;code&gt;flog&lt;/code&gt; from reporting on the &#34;methods&#34; &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt;. It also prevents &lt;code&gt;flog&lt;/code&gt; from reporting on Rails methods like &lt;code&gt;before_action&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Alternative Usage Methods&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re fond of Guard you might like &lt;a href=&#34;https://github.com/whitesmith/guard-rubycritic&#34;&gt;guard-rubycritic&lt;/a&gt;. It automatically analyses your Ruby files as they are modified.&lt;/p&gt; &#xA;&lt;p&gt;For continuous integration, you can give &lt;a href=&#34;http://jenkins-ci.org/&#34;&gt;Jenkins CI&lt;/a&gt; a spin. With it, you can &lt;a href=&#34;https://github.com/whitesmith/rubycritic/raw/master/docs/building-own-code-climate.md&#34;&gt;easily build your own (poor-man&#39;s) Code Climate&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;Rake Task&lt;/h3&gt; &#xA;&lt;p&gt;You can use RubyCritic as Rake command in its most simple form like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;rubycritic/rake_task&#34;&#xA;&#xA;RubyCritic::RakeTask.new&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A more sophisticated Rake task that would make use of all available configuration options could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RubyCritic::RakeTask.new do |task|&#xA;  # Name of RubyCritic task. Defaults to :rubycritic.&#xA;  task.name    = &#39;something_special&#39;&#xA;&#xA;  # Glob pattern to match source files. Defaults to FileList[&#39;.&#39;].&#xA;  task.paths   = FileList[&#39;vendor/**/*.rb&#39;]&#xA;&#xA;  # You can pass all the options here in that are shown by &#34;rubycritic -h&#34; except for&#xA;  # &#34;-p / --path&#34; since that is set separately. Defaults to &#39;&#39;.&#xA;  task.options = &#39;--mode-ci --format json&#39;&#xA;&#xA;  # Defaults to false&#xA;  task.verbose = true&#xA;&#xA;  # Fail the Rake task if RubyCritic doesn&#39;t pass. Defaults to true&#xA;  task.fail_on_error = true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RubyCritic will try to open the generated report with a browser by default. If you don&#39;t want this you can prevent this behaviour by setting the options correspondingly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;RubyCritic::RakeTask.new do |task|&#xA;  task.options = &#39;--no-browser&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to create multiple Rake tasks (e.g., for local &amp;amp; for ci-specific configuration), you can do so! If you decide to do this, you should provide a clearer description for each task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# for local&#xA;RubyCritic::RakeTask.new(&#34;local&#34;, &#34;Run RubyCritic (local configuration)&#34; do |task|&#xA;  # ...&#xA;end&#xA;&#xA;# for CI&#xA;RubyCritic::RakeTask.new(&#34;ci&#34;, &#34;Run RubyCritic (CI configuration)&#34; do |task|&#xA;  task.options = &#34;--mode-ci&#34;&#xA;  # ...&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Formatters&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/whitesmith/rubycritic/main/docs/formatters.md&#34;&gt;formatters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;RubyCritic is supporting Ruby versions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Ruby version&lt;/th&gt; &#xA;   &lt;th&gt;Latest RubyCritic version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/whitesmith/rubycritic/tree/v4.7.0&#34;&gt;v4.7.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/whitesmith/rubycritic/tree/v4.7.0&#34;&gt;v4.7.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.6&lt;/td&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.7&lt;/td&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0&lt;/td&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.1&lt;/td&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Improving RubyCritic&lt;/h2&gt; &#xA;&lt;p&gt;RubyCritic doesn&#39;t have to remain a second choice to other code quality analysis services. Together, we can improve it and continue to build on the great code metric tools that are available in the Ruby ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;Arguably, the &lt;a href=&#34;https://github.com/charliesome/better_errors&#34;&gt;better_errors gem&lt;/a&gt; only got popular after receiving a &lt;a href=&#34;https://github.com/charliesome/better_errors/pull/22&#34;&gt;(pretty awesome) Pull Request&lt;/a&gt; that changed its page design.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, Pull Requests that improve the look and feel of the gem, that tweak the calculation of ratings or that fix existing issues will be most welcome. Just commenting on an issue and giving some insight into how something should work will be appreciated. No contribution is too small.&lt;/p&gt; &#xA;&lt;p&gt;See RubyCritic&#39;s &lt;a href=&#34;https://github.com/whitesmith/rubycritic/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; about how to proceed.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;RubyCritics&lt;/code&gt; initial author was &lt;a href=&#34;https://github.com/guilhermesimoes&#34;&gt;Guilherme Simões&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The current core team consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Onumis&#34;&gt;Nuno Silva&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasmazza&#34;&gt;Lucas Mazza&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/troessner&#34;&gt;Timo Rößner&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/whitesmith/rubycritic/raw/main/images/whitesmith.png&#34; alt=&#34;Whitesmith&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;RubyCritic is maintained and funded by &lt;a href=&#34;http://www.whitesmith.co/&#34;&gt;Whitesmith&lt;/a&gt;. Tweet your questions or suggestions to &lt;a href=&#34;https://twitter.com/Whitesmithco&#34;&gt;@Whitesmithco&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>