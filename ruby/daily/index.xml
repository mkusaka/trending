<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:34:33Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>turingschool-examples/snowy-voice-1828</title>
    <updated>2024-05-29T01:34:33Z</updated>
    <id>tag:github.com,2024-05-29:/turingschool-examples/snowy-voice-1828</id>
    <link href="https://github.com/turingschool-examples/snowy-voice-1828" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hotel It on the Mountain&lt;/h1&gt; &#xA;&lt;p&gt;This repository requires and has been tested on Ruby v3.2.2 and is based on Rails 7.1.3.&lt;/p&gt; &#xA;&lt;p&gt;RSpec and Shoulda-Matchers have been installed and set up.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;fork this repo&lt;/li&gt; &#xA; &lt;li&gt;clone your fork&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone &amp;lt;repo_name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd &amp;lt;repo_name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rails db:{drop,create,migrate,seed}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When you run &lt;code&gt;bundle exec rspec&lt;/code&gt; you should have 2 passing tests.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Work on this assessment independently. DO NOT discuss with anyone.&lt;/li&gt; &#xA; &lt;li&gt;You are allowed to use any references including notes, Google, lesson plans, etc.&lt;/li&gt; &#xA; &lt;li&gt;Read each story carefully before you start working.&lt;/li&gt; &#xA; &lt;li&gt;Commit Frequently, about every 15 - 30 minutes&lt;/li&gt; &#xA; &lt;li&gt;Push your code to your fork &lt;strong&gt;once the time is up (not before!)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;The use of scaffolding is not permitted on this assessment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Submission&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Once the time for the assessment is up&lt;/strong&gt;, push your code to your fork and create a pull request to the &lt;code&gt;turingschool-examples&lt;/code&gt; repository. Include the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your Name&lt;/li&gt; &#xA; &lt;li&gt;A reflection on how you felt you did with this challenge&lt;/li&gt; &#xA; &lt;li&gt;What story you got through&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TDD all new work&lt;/li&gt; &#xA; &lt;li&gt;Model methods and relationships must be fully tested.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Not Required&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No visual styling is required or expected&lt;/li&gt; &#xA; &lt;li&gt;You do not need to test for or create any model validations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Challenge Description&lt;/h2&gt; &#xA;&lt;p&gt;You have been contracted by a luxurious mountain ski hotel &amp;amp; resort to keep track of all of the hotels, the rooms of that hotel, and the guests that stay there.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hotels have a name and a location. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex: &lt;code&gt;name: &#39;Echo Mountain Inn&#39;, location: &#39;Echo Mountain&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rooms have a rate (price per night), and a suite designation. (For simplicity, let&#39;s assume the rate is a whole dollar price and use an integer.) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex: &lt;code&gt;rate: 125, suite: &#34;Presidential&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Guests have a name and the number of nights they&#39;ll be staying. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ex: &lt;code&gt;name: &#39;Charlize Theron&#39;, nights: 3&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hotels have many Rooms.&lt;/li&gt; &#xA; &lt;li&gt;Rooms belong to a Hotel.&lt;/li&gt; &#xA; &lt;li&gt;Guests have many Rooms.&lt;/li&gt; &#xA; &lt;li&gt;Rooms have many Guests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of the initial model set up and testing has been done for you. Make sure your models &amp;amp; relationships are ready before starting user stories. You do not need to test for or create any model validations.&lt;/p&gt; &#xA;&lt;h2&gt;User Stories&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 1&#xA;Guest Show&#xA;&#xA;As a visitor&#xA;When I visit a guest&#39;s show page&#xA;I see the guest&#39;s name&#xA;And I see a list of all the rooms they&#39;ve stayed in&#xA;including the room&#39;s suite, nightly rate, and the name of the hotel that it belongs to.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 2&#xA;Add a Guest to a Room&#xA;&#xA;As a visitor&#xA;When I visit a guest&#39;s show page&#xA;Then I see a form to add a room to this guest.&#xA;When I fill in a field with the id of an existing room&#xA;And I click submit&#xA;Then I am redirected back to the guest&#39;s show page&#xA;And I see the room now listed under this guest&#39;s rooms.&#xA;(You do not have to test for a sad path, for example if the ID submitted is not an existing room)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Story 3&#xA;Rooms Index&#xA;&#xA;As a visitor&#xA;When I visit the rooms index page&#xA;Then I see a list of all rooms&#xA;including the room&#39;s suite, nightly rate, and the name of the hotel that it belongs to&#xA;and the number of guests that have stayed in that room.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Extension&#xA;&#xA;As a visitor,&#xA;When I visit a hotel&#39;s show page,&#xA;Then I see a unique list of all guests that have stayed at this hotel.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>