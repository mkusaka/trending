<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-20T01:31:49Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lewagon/data-setup</title>
    <updated>2022-06-20T01:31:49Z</updated>
    <id>tag:github.com,2022-06-20:/lewagon/data-setup</id>
    <link href="https://github.com/lewagon/data-setup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup instructions for Le Wagon&#39;s students on their first day of Data Science Bootcamp&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Â¿En EspaÃ±ol?&lt;/h2&gt; &#xA;&lt;p&gt;Haz clic en &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/README.es.md&#34;&gt;este link&lt;/a&gt; para acceder a la versiÃ³n en espaÃ±ol del setup.&lt;/p&gt; &#xA;&lt;h2&gt;In English&lt;/h2&gt; &#xA;&lt;h3&gt;Data Science Bootcamp Setup&lt;/h3&gt; &#xA;&lt;p&gt;Please choose your operating system (OS):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/macOS.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/images/apple.png&#34; alt=&#34;macOS&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/WINDOWS.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/images/windows.png&#34; alt=&#34;Windows&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/LINUX.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/images/linux.png&#34; alt=&#34;Linux&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Keep your setup current after the bootcamp&lt;/h3&gt; &#xA;&lt;p&gt;Please choose your operating system (OS):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/macOS_keep_current.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/images/apple.png&#34; alt=&#34;macOS&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/WINDOWS_keep_current.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/images/windows.png&#34; alt=&#34;Windows&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/LINUX_keep_current.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lewagon/data-setup/master/images/linux.png&#34; alt=&#34;Linux&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>ankane/chartkick</title>
    <updated>2022-06-20T01:31:49Z</updated>
    <id>tag:github.com,2022-06-20:/ankane/chartkick</id>
    <link href="https://github.com/ankane/chartkick" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create beautiful JavaScript charts with one line of Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chartkick&lt;/h1&gt; &#xA;&lt;p&gt;Create beautiful JavaScript charts with one line of Ruby. No more fighting with charting libraries!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chartkick.com&#34;&gt;See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ðŸ”¥&lt;/span&gt; For admin charts and dashboards, check out &lt;a href=&#34;https://github.com/ankane/blazer/&#34;&gt;Blazer&lt;/a&gt;, and for advanced visualizations, check out &lt;a href=&#34;https://github.com/ankane/vega&#34;&gt;Vega&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ðŸ’•&lt;/span&gt; A perfect companion to &lt;a href=&#34;https://github.com/ankane/groupdate&#34;&gt;Groupdate&lt;/a&gt;, &lt;a href=&#34;https://github.com/ankane/hightop&#34;&gt;Hightop&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ankane/active_median&#34;&gt;ActiveMedian&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/chartkick/actions&#34;&gt;&lt;img src=&#34;https://github.com/ankane/chartkick/workflows/build/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your applicationâ€™s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;chartkick&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then follow the instructions for your framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#rails-7--importmap&#34;&gt;Rails 7 / Importmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#rails-7--esbuild-or-webpack&#34;&gt;Rails 7 / esbuild or Webpack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#rails-6--webpacker&#34;&gt;Rails 6 / Webpacker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#rails-5--sprockets&#34;&gt;Rails 5 / Sprockets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This sets up Chartkick with &lt;a href=&#34;https://www.chartjs.org/&#34;&gt;Chart.js&lt;/a&gt;. For other charting libraries and frameworks, see &lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#installation&#34;&gt;detailed instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Rails 7 / Importmap&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;code&gt;config/importmap.rb&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pin &#34;chartkick&#34;, to: &#34;chartkick.js&#34;&#xA;pin &#34;Chart.bundle&#34;, to: &#34;Chart.bundle.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick&#34;&#xA;import &#34;Chart.bundle&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rails 7 / esbuild or Webpack&lt;/h3&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add chartkick chart.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick/chart.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rails 6 / Webpacker&lt;/h3&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add chartkick chart.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick/chart.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rails 5 / Sprockets&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require chartkick&#xA;//= require Chart.bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Charts&lt;/h2&gt; &#xA;&lt;p&gt;Line chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart User.group_by_day(:created_at).count %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pie chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= pie_chart Goal.group(:name).count %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Column chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= column_chart Task.group_by_hour_of_day(:created_at, format: &#34;%l %P&#34;).count %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bar chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= bar_chart Shirt.group(:size).sum(:price) %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Area chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= area_chart Visit.group_by_minute(:created_at).maximum(:load_time) %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scatter chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= scatter_chart City.pluck(:size, :population) %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Geo chart - &lt;em&gt;Google Charts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= geo_chart Medal.group(:country).count %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Timeline - &lt;em&gt;Google Charts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= timeline [&#xA;  [&#34;Washington&#34;, &#34;1789-04-29&#34;, &#34;1797-03-03&#34;],&#xA;  [&#34;Adams&#34;, &#34;1797-03-03&#34;, &#34;1801-03-03&#34;],&#xA;  [&#34;Jefferson&#34;, &#34;1801-03-03&#34;, &#34;1809-03-03&#34;]&#xA;] %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple series&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart [&#xA;  {name: &#34;Workout&#34;, data: {&#34;2021-01-01&#34; =&amp;gt; 3, &#34;2021-01-02&#34; =&amp;gt; 4}},&#xA;  {name: &#34;Call parents&#34;, data: {&#34;2021-01-01&#34; =&amp;gt; 5, &#34;2021-01-02&#34; =&amp;gt; 3}}&#xA;] %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart Feat.group(:goal_id).group_by_week(:created_at).count %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Data&lt;/h2&gt; &#xA;&lt;p&gt;Data can be a hash, array, or URL.&lt;/p&gt; &#xA;&lt;h4&gt;Hash&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart({&#34;2021-01-01&#34; =&amp;gt; 2, &#34;2021-01-02&#34; =&amp;gt; 3}) %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Array&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart [[&#34;2021-01-01&#34;, 2], [&#34;2021-01-02&#34;, 3]] %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;URL&lt;/h4&gt; &#xA;&lt;p&gt;Make your pages load super fast and stop worrying about timeouts. Give each chart its own endpoint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart completed_tasks_charts_path %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in your controller, pass the data as JSON.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class ChartsController &amp;lt; ApplicationController&#xA;  def completed_tasks&#xA;    render json: Task.group_by_day(:completed_at).count&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For multiple series, add &lt;code&gt;chart_json&lt;/code&gt; at the end.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;render json: Task.group(:goal_id).group_by_day(:completed_at).count.chart_json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;Id, width, and height&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, id: &#34;users-chart&#34;, width: &#34;800px&#34;, height: &#34;500px&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Min and max values&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, min: 1000, max: 5000 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;min&lt;/code&gt; defaults to 0 for charts with non-negative values. Use &lt;code&gt;nil&lt;/code&gt; to let the charting library decide.&lt;/p&gt; &#xA;&lt;p&gt;Min and max for x-axis - &lt;em&gt;Chart.js&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, xmin: &#34;2021-01-01&#34;, xmax: &#34;2022-01-01&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Colors&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, colors: [&#34;#b00&#34;, &#34;#666&#34;] %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stacked columns or bars&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= column_chart data, stacked: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Discrete axis&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, discrete: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Label (for single series)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, label: &#34;Value&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Axis titles&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, xtitle: &#34;Time&#34;, ytitle: &#34;Population&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Straight lines between points instead of a curve&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, curve: false %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hide points&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, points: false %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Show or hide legend&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, legend: false %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify legend position&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, legend: &#34;bottom&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Donut chart&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= pie_chart data, donut: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prefix, useful for currency - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, prefix: &#34;$&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Suffix, useful for percentages - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, suffix: &#34;%&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set a thousands separator - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, thousands: &#34;,&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set a decimal separator - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, decimal: &#34;,&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set significant digits - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, precision: 3 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set rounding - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, round: 2 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Show insignificant zeros, useful for currency - &lt;em&gt;Chart.js, Highcharts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, round: 2, zeros: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Friendly byte sizes - &lt;em&gt;Chart.js&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, bytes: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify the message when data is loading&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, loading: &#34;Loading...&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify the message when data is empty&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, empty: &#34;No data&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refresh data from a remote source every &lt;code&gt;n&lt;/code&gt; seconds&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart url, refresh: 60 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass options directly to the charting library with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, library: {backgroundColor: &#34;#eee&#34;} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the documentation for &lt;a href=&#34;https://www.chartjs.org/docs/&#34;&gt;Chart.js&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/chart/interactive/docs/gallery&#34;&gt;Google Charts&lt;/a&gt;, and &lt;a href=&#34;https://api.highcharts.com/highcharts&#34;&gt;Highcharts&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;p&gt;To customize datasets in Chart.js, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, dataset: {borderWidth: 10} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass this option to individual series as well.&lt;/p&gt; &#xA;&lt;h3&gt;Global Options&lt;/h3&gt; &#xA;&lt;p&gt;To set options for all of your charts, create an initializer &lt;code&gt;config/initializers/chartkick.rb&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Chartkick.options = {&#xA;  height: &#34;400px&#34;,&#xA;  colors: [&#34;#b00&#34;, &#34;#666&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Customize the html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Chartkick.options[:html] = &#39;&amp;lt;div id=&#34;%{id}&#34; style=&#34;height: %{height};&#34;&amp;gt;%{loading}&amp;lt;/div&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You capture the JavaScript in a content block with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Chartkick.options[:content_for] = :charts_js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in your layout, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= yield :charts_js %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Padrino, use &lt;code&gt;yield_content&lt;/code&gt; instead of &lt;code&gt;yield&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is great for including all of your JavaScript at the bottom of the page.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Series&lt;/h3&gt; &#xA;&lt;p&gt;You can pass a few options with a series:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;color&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dataset&lt;/code&gt; - &lt;em&gt;Chart.js only&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;points&lt;/code&gt; - &lt;em&gt;Chart.js only&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curve&lt;/code&gt; - &lt;em&gt;Chart.js only&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the charting library directly, get the code with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, code: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The code will be logged to the JavaScript console. JavaScript functions cannot be logged, so it may not be identical.&lt;/p&gt; &#xA;&lt;h3&gt;Download Charts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Chart.js only&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Give users the ability to download charts. It all happens in the browser - no server-side code needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, download: true %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Safari will open the image in a new window instead of downloading.&lt;/p&gt; &#xA;&lt;p&gt;Set the filename&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, download: {filename: &#34;boom&#34;} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the background color&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, download: {background: &#34;#ffffff&#34;} %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set title&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, title: &#34;Awesome chart&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;chartkick&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, choose your charting library.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#chart-js&#34;&gt;Chart.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#google-charts&#34;&gt;Google Charts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/#highcharts&#34;&gt;Highcharts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Chart.js&lt;/h3&gt; &#xA;&lt;p&gt;For Rails 7 / Importmap, in &lt;code&gt;config/importmap.rb&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pin &#34;chartkick&#34;, to: &#34;chartkick.js&#34;&#xA;pin &#34;Chart.bundle&#34;, to: &#34;Chart.bundle.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick&#34;&#xA;import &#34;Chart.bundle&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 6 / Webpacker, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add chartkick chart.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick/chart.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 5 / Sprockets, in &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require chartkick&#xA;//= require Chart.bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Google Charts&lt;/h3&gt; &#xA;&lt;p&gt;In your layout or views, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= javascript_include_tag &#34;https://www.gstatic.com/charts/loader.js&#34; %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 7 / Importmap, in &lt;code&gt;config/importmap.rb&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pin &#34;chartkick&#34;, to: &#34;chartkick.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 6 / Webpacker, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add chartkick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 5 / Sprockets, in &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require chartkick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To specify a language or Google Maps API key, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;Chartkick.configure({language: &#34;de&#34;, mapsApiKey: &#34;...&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;before your charts.&lt;/p&gt; &#xA;&lt;h3&gt;Highcharts&lt;/h3&gt; &#xA;&lt;p&gt;For Rails 7 / Importmap, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/importmap pin highcharts --download&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;config/importmap.rb&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pin &#34;chartkick&#34;, to: &#34;chartkick.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick&#34;&#xA;import Highcharts from &#34;highcharts&#34;&#xA;&#xA;window.Highcharts = Highcharts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 6 / Webpacker, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add chartkick highcharts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;chartkick/highcharts&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rails 5 / Sprockets, download &lt;a href=&#34;https://code.highcharts.com/highcharts.js&#34;&gt;highcharts.js&lt;/a&gt; into &lt;code&gt;vendor/assets/javascripts&lt;/code&gt; (or use &lt;code&gt;yarn add highcharts&lt;/code&gt; in Rails 5.1+), and in &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//= require chartkick&#xA;//= require highcharts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sinatra and Padrino&lt;/h3&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://raw.githubusercontent.com/ankane/chartkick/master/vendor/assets/javascripts/chartkick.js&#34;&gt;chartkick.js&lt;/a&gt; and include it manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;chartkick.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then include the charting library.&lt;/p&gt; &#xA;&lt;p&gt;Chart.js - download &lt;a href=&#34;https://unpkg.com/chart.js@3/dist/chart.js&#34;&gt;Chart.js&lt;/a&gt; and the &lt;a href=&#34;https://unpkg.com/chartjs-adapter-date-fns@2/dist/chartjs-adapter-date-fns.bundle.js&#34;&gt;date-fns adapter bundle&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;chart.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;chartjs-adapter-date-fns.bundle.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Google Charts&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://www.gstatic.com/charts/loader.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Highcharts - download &lt;a href=&#34;https://code.highcharts.com/highcharts.js&#34;&gt;highcharts.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;highcharts.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple Libraries&lt;/h3&gt; &#xA;&lt;p&gt;If more than one charting library is loaded, choose between them with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-erb&#34;&gt;&amp;lt;%= line_chart data, adapter: &#34;google&#34; %&amp;gt; &amp;lt;!-- or highcharts or chartjs --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JavaScript API&lt;/h2&gt; &#xA;&lt;p&gt;Access a chart with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var chart = Chartkick.charts[&#34;chart-id&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the underlying chart object with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.getChartObject()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.getElement()&#xA;chart.getData()&#xA;chart.getOptions()&#xA;chart.getAdapter()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the data with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.updateData(newData)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify new options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.setOptions(newOptions)&#xA;// or&#xA;chart.updateData(newData, newOptions)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refresh the data from a remote source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.refreshData()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Redraw the chart with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.redraw()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Destroy the chart with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chart.destroy()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Loop over charts with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Chartkick.eachChart( function(chart) {&#xA;  // do something&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Content Security Policy (CSP)&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ankane/chartkick/raw/master/guides/Content-Security-Policy.md&#34;&gt;how to configure CSP&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;No Ruby? No Problem&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/ankane/chartkick.js&#34;&gt;chartkick.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gorails.com/episodes/charts-with-chartkick-and-groupdate&#34;&gt;Charts with Chartkick and Groupdate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=W92AlkwQn3M&#34;&gt;Creando grÃ¡ficos en Ruby on Rails con Chartkick y Chart.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/make-easy-graphs-and-charts-on-rails-with-chartkick/&#34;&gt;Make Easy Graphs and Charts on Rails with Chartkick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/graphs-on-rails-chartkick-in-practice/&#34;&gt;Practical Graphs on Rails: Chartkick in Practice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;h3&gt;4.0&lt;/h3&gt; &#xA;&lt;p&gt;If you use Sprockets, update the gem and youâ€™re good to go!&lt;/p&gt; &#xA;&lt;p&gt;If you use Webpacker, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn upgrade chartkick --latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use Chart.js with Webpacker, also run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn upgrade chart.js --latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;, change:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;require(&#34;chartkick&#34;)&#xA;require(&#34;chart.js&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;require(&#34;chartkick/chart.js&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/ankane/chartkick/raw/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Everyone is encouraged to help improve this project. Here are a few ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankane/chartkick/issues&#34;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs and &lt;a href=&#34;https://github.com/ankane/chartkick/pulls&#34;&gt;submit pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write, clarify, or fix documentation&lt;/li&gt; &#xA; &lt;li&gt;Suggest or add new features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get started with development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ankane/chartkick.git&#xA;cd chartkick&#xA;bundle install&#xA;bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>axsuul/cookbook-littlechef</title>
    <updated>2022-06-20T01:31:49Z</updated>
    <id>tag:github.com,2022-06-20:/axsuul/cookbook-littlechef</id>
    <link href="https://github.com/axsuul/cookbook-littlechef" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chef Cookbook for installing Littlechef&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;This is a Chef cookbook for installing littlechef. Pretty basic stuff.&lt;/p&gt; &#xA;&lt;p&gt;Now accepting pull requests.&lt;/p&gt;</summary>
  </entry>
</feed>