<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-15T01:40:58Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zakird/wkhtmltopdf_binary_gem</title>
    <updated>2024-01-15T01:40:58Z</updated>
    <id>tag:github.com,2024-01-15:/zakird/wkhtmltopdf_binary_gem</id>
    <link href="https://github.com/zakird/wkhtmltopdf_binary_gem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby gem containing easily installable access to wkhtmltopdf application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Installation and usage&lt;/h1&gt; &#xA;&lt;p&gt;Install in your Gemfile as usual&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#39;wkhtmltopdf-binary&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In many environments, this is all you need to do. This gem installs a binary stub that tries to determine which wkhtmltopdf binary will work on your system, and point to the packaged binary that most closely matches.&lt;/p&gt; &#xA;&lt;p&gt;In some environments, invoking this binary will result in an error, saying the needed permissions are not available. This is because &lt;code&gt;wkhtmltopdf-binary&lt;/code&gt; ships with gzipped binaries for many platforms, and then picks the appropriate one upon first use and unzips it into the same directory. So if your ruby gem binaries are installed here:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/usr/lib/ruby/versions/2.6/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The various wkhtmltopdf-binaries will be installed here:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/usr/lib/ruby/versions/2.6/lib/ruby/gems/2.6.0/gems/wkhtmltopdf-binary-0.12.5.1/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Giving write access whatever user is running your program (e.g. web server, background job processor), e.g. your own personal user in a dev environment, will fix the problem. After the binary is uncompressed, write access can be revoked again if desired.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chmod -R 777 /usr/lib/ruby/versions/2.6/lib/ruby/gems/2.6.0/gems/wkhtmltopdf-binary-0.12.5.1/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Gem Development&lt;/h1&gt; &#xA;&lt;h2&gt;Extracting binaries&lt;/h2&gt; &#xA;&lt;p&gt;Hints for extracting binaries from &lt;a href=&#34;https://wkhtmltopdf.org/downloads.html&#34;&gt;https://wkhtmltopdf.org/downloads.html&lt;/a&gt; (dpkg and rpm2cpio is available on Homebrew).&lt;/p&gt; &#xA;&lt;p&gt;Debian/Ubuntu&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dpkg -x wkhtmltox_0.12.5-1.trusty_amd64.deb .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CentOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rpm2cpio wkhtmltox-0.12.5-1.centos7.x86_64.rpm | cpio -idmv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Archlinux/manjaro&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar -xf wkhtmltox-0.12.6-1.archlinux.x86_64.tar.xz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;macOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xar -xf wkhtmltox-0.12.5-1.macos-cocoa.pkg&#xA;cat Payload | gunzip -dc | cpio -i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compression&lt;/h2&gt; &#xA;&lt;p&gt;Binaries should be compressed with &lt;code&gt;gzip --best&lt;/code&gt; after extracting. The matching binary will be extracted on first execution of &lt;code&gt;bin/wkhtmltopdf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Hints for compressing binaries&lt;/p&gt; &#xA;&lt;p&gt;Debian/Ubuntu user/local/bin refers to the extracted binaries directory gzip --best -c usr/local/bin/wkhtmltopdf &amp;gt; wkhtmltopdf_ubuntu_22.04.amd64.gz&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;To execute gem tests locally, install in your OS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Docker compose&lt;/li&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Bundler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, execute the commands below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zakird/wkhtmltopdf_binary_gem&#xA;cd wkhtmltopdf_binary_gem/&#xA;bundle install&#xA;bundle exec rake&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>maybe-finance/synth</title>
    <updated>2024-01-15T01:40:58Z</updated>
    <id>tag:github.com,2024-01-15:/maybe-finance/synth</id>
    <link href="https://github.com/maybe-finance/synth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern fintech tools for modern businesses&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Synth: Modern fintech tools for modern businesses&lt;/h1&gt; &#xA;&lt;p&gt;Synth aims to build a modern fintech stack and data platform for modern businesses.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re aiming to be hyper-transparent, fully open-source and community-driven.&lt;/p&gt; &#xA;&lt;p&gt;This codebase is currently in a very early stage of development.&lt;/p&gt; &#xA;&lt;p&gt;In addition, much of the data that is used in the app is not open-source (due to licensing restrictions). We&#39;re working on making as much of the data open-source as possible, but the reality is that some of the data will need to be licensed from third parties in order to be useful.&lt;/p&gt; &#xA;&lt;p&gt;Where possible we&#39;ll at least provide sample data so that you can get the app working locally.&lt;/p&gt; &#xA;&lt;h2&gt;Codebase&lt;/h2&gt; &#xA;&lt;p&gt;The codebase is vanilla &lt;a href=&#34;https://rubyonrails.org/&#34;&gt;Rails&lt;/a&gt; and &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres&lt;/a&gt;. Quite a simple setup.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ruby &amp;gt;3 (specific version is in &lt;code&gt;Gemfile&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;postgresql (if using stock &lt;code&gt;config/database.yml&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd maybe&#xA;bundle install&#xA;rails db:setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run the rails web server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;External Services&lt;/h2&gt; &#xA;&lt;p&gt;Currently the app relies either Google or GitHub for authentication. The easiest of which to set up is GitHub.&lt;/p&gt; &#xA;&lt;p&gt;You can find the necessary API keys in &lt;code&gt;.env.example&lt;/code&gt;, which you can copy to &lt;code&gt;.env&lt;/code&gt; and fill in the values.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s still very early days for this so your mileage will vary here and lots of things will break.&lt;/p&gt; &#xA;&lt;p&gt;But almost any contribution will be beneficial at this point. Check the &lt;a href=&#34;https://github.com/maybe-finance/synth/issues&#34;&gt;current Issues&lt;/a&gt; to see where you can jump in!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve got an improvement, just send in a pull request!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you&#39;ve got feature ideas, simply &lt;a href=&#34;https://github.com/maybe-finance/synth/issues/new&#34;&gt;open a new issues&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the conversation in our &lt;a href=&#34;https://discord.gg/rDZFvtGcxx&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://twitter.com/synth_finance&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>toddmoy/OPMLtoJSON</title>
    <updated>2024-01-15T01:40:58Z</updated>
    <id>tag:github.com,2024-01-15:/toddmoy/OPMLtoJSON</id>
    <link href="https://github.com/toddmoy/OPMLtoJSON" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script for turning outline markup into json.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Usage: ./OPMLtoJSON.rb &amp;lt;path/to/inputfile.opml&amp;gt; &amp;gt; &amp;lt;path/to/outputfile.json&amp;gt;&lt;/p&gt;</summary>
  </entry>
</feed>