<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:37:16Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>templatus/templatus-hotwire</title>
    <updated>2023-12-26T01:37:16Z</updated>
    <id>tag:github.com,2023-12-26:/templatus/templatus-hotwire</id>
    <link href="https://github.com/templatus/templatus-hotwire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Opinionated template for starting new web applications with Ruby on Rails and Hotwire&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/templatus/templatus-hotwire/actions&#34;&gt;&lt;img src=&#34;https://github.com/templatus/templatus-hotwire/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dashboard.cypress.io/projects/5d6bqs/runs&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://dashboard.cypress.io/badge/simple/5d6bqs&amp;amp;style=flat-square&amp;amp;logo=cypress&#34; alt=&#34;Cypress&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Templatus (Hotwire edition)&lt;/h1&gt; &#xA;&lt;p&gt;Templatus is an opinionated template to build web applications with Ruby on Rails and Hotwire. It simplifies the process of setting up a new application while following best practices.&lt;/p&gt; &#xA;&lt;p&gt;Live demo available at &lt;a href=&#34;https://templatus-hotwire.ledermann.dev&#34;&gt;https://templatus-hotwire.ledermann.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Similar projects&lt;/h2&gt; &#xA;&lt;p&gt;There are two sister repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For using Vue.js instead of Hotwire: &lt;a href=&#34;https://github.com/templatus/templatus-vue/&#34;&gt;https://github.com/templatus/templatus-vue/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For using Inertia and Svelte.js instead of Hotwire: &lt;a href=&#34;https://github.com/templatus/templatus-inertia/&#34;&gt;https://github.com/templatus/templatus-inertia/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features / Technology stack&lt;/h2&gt; &#xA;&lt;h3&gt;Backend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ruby-lang.org/de/&#34;&gt;Ruby&lt;/a&gt; 3.2&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt; 7.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.rubyonrails.org/action_cable_overview.html&#34;&gt;ActionCable&lt;/a&gt; for WebSocket communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; for using as SQL database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sidekiq.org/&#34;&gt;Sidekiq&lt;/a&gt; for background processing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; for Caching, ActionCable, and Sidekiq&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Frontend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hotwire.io/&#34;&gt;Hotwire&lt;/a&gt; for building the frontend without using much JavaScript by sending HTML instead of JSON over the wire&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; for static type checking in Stimulus controllers and other script code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viewcomponent.org/&#34;&gt;ViewComponent&lt;/a&gt; for creating reusable, testable &amp;amp; encapsulated view components&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/slim-template/slim&#34;&gt;Slim&lt;/a&gt; for writing templates instead of ERB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS 3&lt;/a&gt; to not have to write CSS at all&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://heroicons.com/&#34;&gt;Heroicons&lt;/a&gt; for beautiful hand-crafted SVG icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt; for bundling JavaScript and CSS with Hot Module Replacement (HMR) in development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puma/puma-dev&#34;&gt;Puma-dev&lt;/a&gt; for using .test-domain and HTTPS in development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DarthSim/overmind&#34;&gt;Overmind&lt;/a&gt; for starting up the application locally (Procfile handling like Foreman)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bkeepers/dotenv&#34;&gt;dotenv&lt;/a&gt; to load environment variables from .env into ENV&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt; for auto-formatting JavaScript and Ruby code in Visual Studio Code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/allmarkedup/lookbook&#34;&gt;Lookbook&lt;/a&gt; as development UI for ViewComponent&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ctran/annotate_models&#34;&gt;annotate&lt;/a&gt; for annotating models and routes&lt;/li&gt; &#xA; &lt;li&gt;Live reloading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linting and testing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubocop.org/&#34;&gt;RuboCop&lt;/a&gt; for Ruby static code analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; for JavaScript static code analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rspec.info/&#34;&gt;RSpec&lt;/a&gt; for Ruby testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thoughtbot/factory_bot&#34;&gt;Factory Bot&lt;/a&gt; for setting up Ruby objects as test data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cypress.io/&#34;&gt;Cypress&lt;/a&gt; for E2E testing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; for production deployment, NOT for development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ledermann/docker-rails-base&#34;&gt;DockerRailsBase&lt;/a&gt; for fast building an optimized Docker image based on Alpine Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt; for testing, linting, and building Docker image&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/about-dependabot-version-updates&#34;&gt;Dependabot&lt;/a&gt; configuration for updating dependencies (with auto-merge)&lt;/li&gt; &#xA; &lt;li&gt;Ready for serving assets via CDN like CloudFront&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.honeybadger.io/&#34;&gt;Honeybadger&lt;/a&gt; for error tracking in Ruby and JavaScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rorvswild.com/&#34;&gt;RorVsWild&lt;/a&gt; for performance monitoring&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plausible.io/&#34;&gt;Plausible&lt;/a&gt; for privacy friendly analytics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lockup.interdiscipline.com/&#34;&gt;Lockup&lt;/a&gt; to place a staging server behind a basic codeword&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Production&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/roidrage/lograge&#34;&gt;Lograge&lt;/a&gt; for single-line logging&lt;/li&gt; &#xA; &lt;li&gt;Gzip compression of dynamic responses (HTML, JSON) using &lt;a href=&#34;https://github.com/rack/rack/raw/master/lib/rack/deflater.rb&#34;&gt;Rack::Deflater&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fine-tuned Content Security Policy (CSP)&lt;/li&gt; &#xA; &lt;li&gt;Ready for PWA (manifest, service-worker)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Metrics&lt;/h2&gt; &#xA;&lt;p&gt;This template is developed with optimized performance and security in mind. The following benchmarks are performed against the demo installation on production. It uses an inexpensive virtual server on the &lt;a href=&#34;https://www.hetzner.com/de/cloud&#34;&gt;Hetzner Cloud&lt;/a&gt; behind a &lt;a href=&#34;https://traefik.io/traefik/&#34;&gt;Traefik&lt;/a&gt; setup.&lt;/p&gt; &#xA;&lt;h3&gt;Lighthouse site performance&lt;/h3&gt; &#xA;&lt;p&gt;100% in all categories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/lighthouse.png&#34; alt=&#34;Lighthouse&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Security headers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://securityheaders.com/?q=templatus-hotwire.ledermann.dev&amp;amp;followRedirects=on&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/security-headers.png&#34; alt=&#34;Security headers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;What&#39;s the red &lt;em&gt;Permissions-Policy&lt;/em&gt; badge? This seems to be fixed with one of the next Rails update: &lt;a href=&#34;https://github.com/rails/rails/pull/41994&#34;&gt;https://github.com/rails/rails/pull/41994&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mozilla Observatory&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://observatory.mozilla.org/analyze/templatus-hotwire.ledermann.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/mozilla-observatory.png&#34; alt=&#34;Mozilla Observatory&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WebPageTest&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.webpagetest.org/result/220530_BiDcQQ_83b754931114d99469b521e72731eb4d/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/web-page-test.png&#34; alt=&#34;WebPageTest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GTmetrix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gtmetrix.com/reports/templatus-hotwire.ledermann.dev/rSqolxsw/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/GTmetrix.png&#34; alt=&#34;GTmetrix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Check-your-website&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://check-your-website.server-daten.de/?q=templatus-hotwire.ledermann.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/check-your-website.png&#34; alt=&#34;Check-your-website&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;JavaScript size&lt;/h3&gt; &#xA;&lt;p&gt;159 KB of compiled JavaScript (minified, uncompressed). The largest parts are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Turbo with ActionCable (72 KB)&lt;/li&gt; &#xA; &lt;li&gt;Stimulus (32 KB)&lt;/li&gt; &#xA; &lt;li&gt;Honeybadger (25 KB)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ RAILS_ENV=production bin/rails assets:precompile&#xA;yarn install v1.22.21&#xA;[1/5] 🔍  Resolving packages...&#xA;success Already up-to-date.&#xA;✨  Done in 0.08s.&#xA;Building with Vite ⚡️&#xA;vite v5.0.10 building for production...&#xA;transforming...&#xA;✓ 47 modules transformed.&#xA;rendering chunks...&#xA;computing gzip size...&#xA;../../public/vite/.vite/manifest-assets.json         0.10 kB │ gzip:  0.09 kB&#xA;../../public/vite/assets/logo-3amqgDdM.svg           0.50 kB │ gzip:  0.30 kB&#xA;../../public/vite/.vite/manifest.json                0.79 kB │ gzip:  0.28 kB&#xA;../../public/vite/assets/application-khfDISII.css   23.42 kB │ gzip:  5.03 kB&#xA;../../public/vite/assets/application-AGZF-dBE.js     3.65 kB │ gzip:  1.44 kB │ map:   9.85 kB&#xA;../../public/vite/assets/index-GVA0YpUy.js           9.48 kB │ gzip:  3.02 kB │ map:  31.38 kB&#xA;../../public/vite/assets/vendor-EJSvyBgX.js        178.04 kB │ gzip: 48.05 kB │ map: 598.94 kB&#xA;✓ built in 785ms&#xA;Build with Vite complete: /Users/ledermann/Projects/templatus-hotwire/public/vite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Network transfer&lt;/h3&gt; &#xA;&lt;p&gt;Small footprint: The demo application transfers only &lt;strong&gt;62 KB&lt;/strong&gt; of (compressed) data on the first visit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/templatus/templatus-hotwire/main/docs/network.png&#34; alt=&#34;Network&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker build time&lt;/h3&gt; &#xA;&lt;p&gt;With multi-stage building and using &lt;a href=&#34;https://github.com/ledermann/docker-rails-base&#34;&gt;DockerRailsBase&lt;/a&gt; the build of the Docker image takes very little time. Currently, the build job requires about 1,5 minutes on GitHub Actions (see &lt;a href=&#34;https://github.com/templatus/templatus-hotwire/actions&#34;&gt;https://github.com/templatus/templatus-hotwire/actions&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Docker image size&lt;/h3&gt; &#xA;&lt;p&gt;The Docker image is based on Alpine Linux and is optimized for minimal size (currently &lt;strong&gt;117 MB&lt;/strong&gt; uncompressed disk size). It includes just the bare minimum - no build tools like Node.js, no JS sources (just the compiled assets), no tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ container-diff analyze ghcr.io/templatus/templatus-hotwire -n&#xA;&#xA;-----Size-----&#xA;&#xA;Analysis for ghcr.io/templatus/templatus-hotwire:&#xA;IMAGE                                      DIGEST       SIZE&#xA;ghcr.io/templatus/templatus-hotwire        sha256:... 116.7M&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Install for development&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo locally:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:templatus/templatus-hotwire.git&#xA;cd templatus-hotwire&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install PostgreSQL, Redis, and puma-dev (if not already present). On a Mac with HomeBrew, run this to install from the &lt;code&gt;Brewfile&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install and set up &lt;a href=&#34;https://github.com/puma/puma-dev&#34;&gt;puma-dev&lt;/a&gt; to use HTTPS for development. Do this on macOS:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo puma-dev -setup&#xA;puma-dev -install&#xA;puma-dev link&#xA;&#xA;# Use Vite via puma-dev proxy&#xA;# Adopted from https://github.com/puma/puma-dev#webpack-dev-server&#xA;echo 3036 &amp;gt; ~/.puma-dev/vite.templatus-hotwire&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Setup the application to install gems and NPM packages and create the database:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Start the application locally:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open &lt;a href=&#34;https://templatus-hotwire.test&#34;&gt;https://templatus-hotwire.test&lt;/a&gt; in your browser.&lt;/p&gt; &#xA;&lt;h3&gt;Preview components in LookBook&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open &lt;a href=&#34;https://templatus-hotwire.test/lookbook/&#34;&gt;https://templatus-hotwire.test/lookbook/&lt;/a&gt; in your browser.&lt;/p&gt; &#xA;&lt;h3&gt;Running linters&lt;/h3&gt; &#xA;&lt;p&gt;RuboCop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/rubocop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ESLint:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/yarn lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running tests locally&lt;/h3&gt; &#xA;&lt;p&gt;Ruby tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/rspec&#xA;open coverage/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JavaScript unit tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/yarn test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;E2E tests with Cypress:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/cypress open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This opens Cypress and starts Rails in &lt;code&gt;development&lt;/code&gt; environment, but with &lt;code&gt;CYPRESS=true&lt;/code&gt;, so the &lt;code&gt;test&lt;/code&gt; database is used. This allows code editing without class reloading and recompiling assets.&lt;/p&gt; &#xA;&lt;p&gt;To run Cypress in headless mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/cypress run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Test deployment locally&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker network create public&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>volcengine/volcengine-specs</title>
    <updated>2023-12-26T01:37:16Z</updated>
    <id>tag:github.com,2023-12-26:/volcengine/volcengine-specs</id>
    <link href="https://github.com/volcengine/volcengine-specs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Volcengine CocoaPods specs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;volcengine-specs&lt;/h1&gt; &#xA;&lt;p&gt;Volcengine CocoaPods specs.&lt;/p&gt; &#xA;&lt;p&gt;火山引擎 iOS CocoaPods 仓库。&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;source &#39;https://cdn.cocoapods.org/&#39;&#xA;source &#39;https://github.com/volcengine/volcengine-specs.git&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;pod &#39;XXXSDK&#39;, &#39;~&amp;gt; 1.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guides.cocoapods.org/syntax/podfile.html#podfile&#34;&gt;Podfile Syntax Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>paketo-buildpacks/php-dist</title>
    <updated>2023-12-26T01:37:16Z</updated>
    <id>tag:github.com,2023-12-26:/paketo-buildpacks/php-dist</id>
    <link href="https://github.com/paketo-buildpacks/php-dist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PHP Distribution Cloud Native Buildpack&lt;/h1&gt; &#xA;&lt;p&gt;The PHP Distribution CNB provides the PHP binary distribution. The buildpack installs the PHP binary distribution onto the $PATH which makes it available for subsequent buildpacks. These buildpacks can then use that distribution to run PHP tooling. The PHP Web CNB is an example of a buildpack that utilizes the PHP binary.&lt;/p&gt; &#xA;&lt;h2&gt;Integration&lt;/h2&gt; &#xA;&lt;p&gt;The PHP Distribution CNB provides php as a dependency. Downstream buildpacks, like &lt;a href=&#34;https://github.com/paketo-buildpacks/php-composer&#34;&gt;PHP Composer CNB&lt;/a&gt; can require the php dependency by generating a &lt;a href=&#34;https://github.com/buildpacks/spec/raw/master/buildpack.md#build-plan-toml&#34;&gt;Build Plan TOML&lt;/a&gt; file that looks like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[requires]]&#xA;&#xA;  # The name of the PHP dependency is &#34;php&#34;. This value is considered&#xA;  # part of the public API for the buildpack and will not change without a plan&#xA;  # for deprecation.&#xA;  name = &#34;php&#34;&#xA;&#xA;  # The PHP buildpack supports some non-required metadata options.&#xA;  [requires.metadata]&#xA;&#xA;    # Setting the build flag to true will ensure that the PHP&#xA;    # depdendency is available on the $PATH for subsequent buildpacks during&#xA;    # their build phase. If you are writing a buildpack that needs to run PHP&#xA;    # during its build process, this flag should be set to true.&#xA;    build = true&#xA;&#xA;    # Setting the launch flag to true will ensure that the PHP&#xA;    # dependency is available on the $PATH for the running application. If you are&#xA;    # writing an application that needs to run PHP at runtime, this flag should&#xA;    # be set to true.&#xA;    launch = true&#xA;&#xA;    # Optional. If not provided, the buildpack will provide the default version from buildpack.toml.&#xA;    # To request a specific version, you can specify a semver constraint such as &#34;8.*&#34;, &#34;8.0.*&#34;,&#xA;    # or even &#34;8.0.4&#34;.&#xA;    version = &#34;8.0.4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To package this buildpack for consumption:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./scripts/package.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This builds the buildpack&#39;s Go source using GOOS=linux by default. You can supply another value as the first argument to package.sh.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This buildpack is released under version 2.0 of the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run Tests&lt;/h2&gt; &#xA;&lt;p&gt;To run all unit tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/unit.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run all integration tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/integration.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Buildpack Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;PHP Version&lt;/h3&gt; &#xA;&lt;p&gt;Specifying the PHP Dist version through buildpack.yml configuration is deprecated.&lt;/p&gt; &#xA;&lt;p&gt;To migrate from using &lt;code&gt;buildpack.yml&lt;/code&gt; please set the &lt;code&gt;$BP_PHP_VERSION&lt;/code&gt; environment variable at build time either directly (ex. &lt;code&gt;pack build my-app --env BP_PHP_VERSION=7.3.*&lt;/code&gt;) or through a &lt;a href=&#34;https://github.com/buildpacks/spec/raw/main/extensions/project-descriptor.md&#34;&gt;&lt;code&gt;project.toml&lt;/code&gt; file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# this allows you to specify a version constraint for the `php` depdendency&#xA;# any valid semver constaints (e.g. 7.*) are also acceptable&#xA;$BP_PHP_VERSION=&#34;7.3.*&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PHP library directory&lt;/h3&gt; &#xA;&lt;p&gt;The PHP library directory is available to PHP via an include path in the PHP configuration. By default it is set to &lt;code&gt;/workspace/lib&lt;/code&gt; and can be overriden by setting the &lt;code&gt;BP_PHP_LIB_DIR&lt;/code&gt; environment variable at build-time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$BP_PHP_LIB_DIR=&#34;some-directory&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Provide custom &lt;code&gt;.ini&lt;/code&gt; files&lt;/h3&gt; &#xA;&lt;p&gt;Custom &lt;code&gt;.ini&lt;/code&gt; files can be provided from users to amend the default &lt;code&gt;php.ini&lt;/code&gt; file. This can be done by placing an &lt;code&gt;ini&lt;/code&gt;-type configuration file inside &lt;code&gt;&amp;lt;application directory&amp;gt;/.php.ini.d/&lt;/code&gt;. Its path will be made available via the &lt;code&gt;PHP_INI_SCAN_DIR&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Debug Logs&lt;/h2&gt; &#xA;&lt;p&gt;For extra debug logs from the image build process, set the &lt;code&gt;$BP_LOG_LEVEL&lt;/code&gt; environment variable to &lt;code&gt;DEBUG&lt;/code&gt; at build-time (ex. &lt;code&gt;pack build my-app --env BP_LOG_LEVEL=DEBUG&lt;/code&gt; or through a &lt;a href=&#34;https://github.com/buildpacks/spec/raw/main/extensions/project-descriptor.md&#34;&gt;&lt;code&gt;project.toml&lt;/code&gt; file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>