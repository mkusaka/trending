<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-29T01:43:37Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>asciidoctor/asciidoctor-pdf</title>
    <updated>2023-05-29T01:43:37Z</updated>
    <id>tag:github.com,2023-05-29:/asciidoctor/asciidoctor-pdf</id>
    <link href="https://github.com/asciidoctor/asciidoctor-pdf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“ƒ Asciidoctor PDF: A native PDF converter for AsciiDoc based on Asciidoctor and Prawn, written entirely in Ruby.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Asciidoctor PDF: A native PDF converter for AsciiDoc&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Asciidoctor PDF is a native PDF converter for AsciiDoc that serves the &lt;code&gt;pdf&lt;/code&gt; backend. It bypasses the step of generating an intermediary format such as DocBook, Apache FO, or LaTeX in order to produce PDF. Instead, you use Asciidoctor PDF to convert your documents directly from AsciiDoc to PDF with Asciidoctor. The aim of this library is to take the pain out of creating PDF documents from AsciiDoc.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock note&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Note&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;The documentation for the latest, stable release of Asciidoctor PDF is available at &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/&#34; class=&#34;bare&#34;&gt;https://docs.asciidoctor.org/pdf-converter/latest/&lt;/a&gt;.&lt;/p&gt; &#xA;       &lt;/div&gt; &#xA;       &lt;div class=&#34;paragraph&#34;&gt; &#xA;        &lt;p&gt;If youâ€™re looking for the documentation for Asciidoctor PDF 1.6, refer to the &lt;a href=&#34;https://github.com/asciidoctor/asciidoctor-pdf/tree/v1.6.x#readme&#34;&gt;README&lt;/a&gt; in the v1.6.x branch. Asciidoctor PDF 1.6 is no longer being developed and will reach EOL later this year. You are encouraged to migrate to Asciidoctor PDF 2 as soon as possible.&lt;/p&gt; &#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;!-- toc disabled --&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Asciidoctor PDF converts an AsciiDoc document directly to a PDF document. The style and layout of the PDF are controlled by a dedicated theme file. To the degree possible, Asciidoctor PDF supports all the features of AsciiDoc that are supported by Asciidoctor. It also provides &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/features/&#34;&gt;PDF-specific features&lt;/a&gt;. However, there are &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/features/#limitations&#34;&gt;certain limitations&lt;/a&gt; imposed by the PDF format and the PDF library this extension uses.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Asciidoctor PDF uses the Prawn gem and Prawnâ€™s extensions, such as prawn-svg and prawn-table, to generate a PDF document. &lt;a href=&#34;https://prawnpdf.org&#34;&gt;Prawn&lt;/a&gt; is a general purpose PDF generator for Ruby that features high-level APIs for common needs like setting up the page and inserting images and low-level APIs for positioning and rendering text and graphics.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock tip&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Tip&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; For the latest Asciidoctor PDF features and fixes, see &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/whats-new/&#34;&gt;Whatâ€™s New in Asciidoctor PDF&lt;/a&gt;. &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Asciidoctor PDF is built on Asciidoctor. Like Asciidoctor, Asciidoctor PDF is a Ruby application. Therefore, to use it, youâ€™ll need a Ruby runtime.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The supported Ruby runtimes are Ruby 2.7 or greater and JRuby 9.2 or greater. However, we always recommend using the most recent release of Ruby or JRuby. All required libraries (i.e., gems) will be installed automatically when you install Asciidoctor PDF, which will be covered in the &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/#install-asciidoctor-pdf&#34;&gt;next section&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To check if you have Ruby available, run the &lt;code&gt;ruby&lt;/code&gt; command to print the installed version:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ ruby -v&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Make sure this command reports a Ruby version that starts with 2.7 (or a JRuby version that starts with 9.2). If so, youâ€™re ready to proceed. If not, head over to &lt;a href=&#34;https://rvm.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rvm.io&lt;/a&gt; to get RVM and use it to install Ruby.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;install-asciidoctor-pdf&#34;&gt;Install Asciidoctor PDF&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You can install Asciidoctor PDF using the &lt;code&gt;gem install&lt;/code&gt; command. Weâ€™ll use this command to install the Asciidoctor PDF gem named &lt;strong&gt;asciidoctor-pdf&lt;/strong&gt; thatâ€™s published on RubyGems.org. Pass the name of the gem to the &lt;code&gt;gem install&lt;/code&gt; command as follows:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ gem install asciidoctor-pdf&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Installing Asciidoctor PDF will install a number of other gems mentioned in these docs, including asciidoctor, prawn, prawn-svg, prawn-table, prawn-icon, and ttfunk. For the most part, the versions of these dependencies are locked to the version of Asciidoctor PDF. The patch versions are allowed to vary. Please note that the minimum supported version of the asciidoctor gem (Asciidoctor) is 2.0.10.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For further installation information about installing Asciidoctor PDF, see &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/install/&#34;&gt;the installation documentation&lt;/a&gt;. For troubleshooting help, see &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/install/#installation-troubleshooting&#34;&gt;Installation troubleshooting&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;install-a-prerelease-or-development-version&#34;&gt;Install a prerelease or development version&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To install the latest prerelease of the &lt;strong&gt;asciidoctor-pdf&lt;/strong&gt; gem from RubyGems.org (if a prerelease is available), use the following command:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ gem install asciidoctor-pdf --pre&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You can also &lt;a href=&#34;https://github.com/asciidoctor/asciidoctor-pdf/raw/main/CONTRIBUTING-CODE.adoc&#34;&gt;run the code from source&lt;/a&gt; if you want to use a development version or participate in development.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;optional-dependencies&#34;&gt;Optional dependencies&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;There are several optional features of this converter that require additional gems to be installed. Those features are as follows.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;dlist&#34;&gt; &#xA;   &lt;dl&gt; &#xA;    &lt;dt class=&#34;hdlist1&#34;&gt;&#xA;     Source highlighting&#xA;    &lt;/dt&gt; &#xA;    &lt;dd&gt; &#xA;     &lt;p&gt;Youâ€™ll need to &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/syntax-highlighting/&#34;&gt;install a syntax highlighter&lt;/a&gt; to use source highlighting (build-time only).&lt;/p&gt; &#xA;    &lt;/dd&gt; &#xA;    &lt;dt class=&#34;hdlist1&#34;&gt;&#xA;     PDF optimization&#xA;    &lt;/dt&gt; &#xA;    &lt;dd&gt; &#xA;     &lt;p&gt;If you want to optimize your PDF, youâ€™ll need rghost or hexapdf. See &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/optimize-pdf/&#34;&gt;Optimize the PDF&lt;/a&gt; for installation and usage instructions.&lt;/p&gt; &#xA;    &lt;/dd&gt; &#xA;    &lt;dt class=&#34;hdlist1&#34;&gt;&#xA;     Automatic hyphenation&#xA;    &lt;/dt&gt; &#xA;    &lt;dd&gt; &#xA;     &lt;p&gt;To turn on automatic hyphenation using the &lt;code&gt;hyphens&lt;/code&gt; attribute, youâ€™ll need to install the &lt;code&gt;text-hyphen&lt;/code&gt; gem:&lt;/p&gt; &#xA;     &lt;div class=&#34;literalblock&#34;&gt; &#xA;      &lt;div class=&#34;content&#34;&gt; &#xA;       &lt;pre&gt;$ gem install text-hyphen&lt;/pre&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/dd&gt; &#xA;    &lt;dt class=&#34;hdlist1&#34;&gt;&#xA;     Accelerated image decoding&#xA;    &lt;/dt&gt; &#xA;    &lt;dd&gt; &#xA;     &lt;p&gt;Ruby is not particularly fast at decoding images, and the image formats it supports are limited. To help, you can install prawn-gmagick, which delegates the work of decoding images to GraphicsMagick. Refer to &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/image-paths-and-formats/#other-image-formats&#34;&gt;Supporting additional image file formats&lt;/a&gt; for instructions about how to enable this integration.&lt;/p&gt; &#xA;    &lt;/dd&gt; &#xA;   &lt;/dl&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Check the &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/install/#table-minimum-version&#34;&gt;minimum supported version table&lt;/a&gt; to make sure youâ€™re using a supported version of the dependency.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;run-the-application&#34;&gt;Run the Application&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Assuming all the required gems install properly, verify you can run the &lt;code&gt;asciidoctor-pdf&lt;/code&gt; script:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ asciidoctor-pdf -v&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you see the version of Asciidoctor PDF printed, youâ€™re ready to use Asciidoctor PDF!&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Letâ€™s grab an AsciiDoc document to distill and start putting Asciidoctor PDF to use.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you donâ€™t already have an AsciiDoc document to work with, you can use the &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/examples/basic-example.html&#34;&gt;basic-example.adoc&lt;/a&gt; file found in the &lt;em&gt;examples&lt;/em&gt; directory of this project. Copy it to the current directory as follows:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ cp examples/basic-example.adoc .&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Letâ€™s take a look at the contents of that file.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/examples/basic-example.html&#34;&gt;basic-example.adoc&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Itâ€™s time to convert the AsciiDoc document directly to PDF.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;convert-asciidoc-to-pdf&#34;&gt;Convert AsciiDoc to PDF&lt;/h3&gt; &#xA;   &lt;div class=&#34;admonitionblock important&#34;&gt; &#xA;    &lt;table&gt; &#xA;     &lt;tbody&gt;&#xA;      &lt;tr&gt; &#xA;       &lt;td class=&#34;icon&#34;&gt; &#xA;        &lt;div class=&#34;title&#34;&gt;&#xA;         Important&#xA;        &lt;/div&gt; &lt;/td&gt; &#xA;       &lt;td class=&#34;content&#34;&gt; Youâ€™ll need the &lt;code&gt;rouge&lt;/code&gt; gem installed to run this example since it uses the &lt;code&gt;source-highlighter&lt;/code&gt; attribute with the value of &lt;code&gt;rouge&lt;/code&gt;. &lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt;&#xA;    &lt;/table&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Converting to PDF is as straightforward as running the &lt;code&gt;asciidoctor-pdf&lt;/code&gt; script using Ruby and passing the AsciiDoc document as the first argument:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ asciidoctor-pdf basic-example.adoc&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This command is a shorter way of running &lt;code&gt;asciidoctor&lt;/code&gt; with the PDF converter and backend enabled:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ asciidoctor -r asciidoctor-pdf -b pdf basic-example.adoc&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The &lt;code&gt;asciidoctor-pdf&lt;/code&gt; command saves you from having to remember these low-level options. Thatâ€™s why we provide it.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;When the script completes, you should see the file &lt;em class=&#34;path&#34;&gt;basic-example.pdf&lt;/em&gt; in the current directory. Asciidoctor creates the output file in the same directory as the input file by default. Open the &lt;em class=&#34;path&#34;&gt;basic-example.pdf&lt;/em&gt; file with a PDF viewer to see the result.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;imageblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;img src=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/docs/modules/ROOT/images/basic-example-pdf-screenshot.png&#34; alt=&#34;Screenshot of PDF document&#34; width=&#34;960&#34;&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;title&#34;&gt;&#xA;     Figure 1. Example PDF document rendered in a PDF viewer&#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;For more information about how to use Asciidoctor PDF and PDF-specific AsciiDoc syntax, see the &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/&#34;&gt;Asciidoctor PDF documentation&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The layout and styling of the PDF is driven by a YAML configuration file. To learn how the theming system works and how to create and apply custom themes, refer to the &lt;a href=&#34;https://docs.asciidoctor.org/pdf-converter/latest/theme/&#34;&gt;Asciidoctor PDF theming documentation&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/CONTRIBUTING.html&#34;&gt;contributing guide&lt;/a&gt;. To help develop Asciidoctor PDF, or to simply use the development version, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/CONTRIBUTING-CODE.html&#34;&gt;developing and contributing code guide&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;authors&#34;&gt;Authors&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Asciidoctor PDF was written by &lt;a href=&#34;https://github.com/mojavelinux&#34;&gt;Dan Allen&lt;/a&gt; and &lt;a href=&#34;https://github.com/graphitefriction&#34;&gt;Sarah White&lt;/a&gt; of OpenDevise Inc. on behalf of the Asciidoctor Project.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;copyright&#34;&gt;Copyright&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Copyright Â© 2014-present OpenDevise Inc. and the Asciidoctor Project. Free use of this software is granted under the terms of the MIT License.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For the full text of the license, see the &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/LICENSE&#34; class=&#34;bare&#34;&gt;LICENSE&lt;/a&gt; file. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/asciidoctor/asciidoctor-pdf/main/NOTICE.html&#34;&gt;NOTICE&lt;/a&gt; file for information about third-party Open Source software in use.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>ubicloud/ubicloud</title>
    <updated>2023-05-29T01:43:37Z</updated>
    <id>tag:github.com,2023-05-29:/ubicloud/ubicloud</id>
    <link href="https://github.com/ubicloud/ubicloud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open source portable cloud&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ubicloud &lt;a href=&#34;https://github.com/ubicloud/ubicloud/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/ubicloud/ubicloud/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ubicloud/ubicloud/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/ubicloud/ubicloud/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Ubicloud is an open source portable cloud. It provides IaaS cloud features in common hardware and network environments, such as those available in Hetzner, OVH, Datapacket, Equinix Metal, AWS Bare Metal, and others.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Start up Ubicloud&#39;s control plane and connect to its dashboard. The first time you connect, you&#39;ll need to sign up.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:ubicloud/ubicloud.git&#xA;&#xA;# Generate secrets for demo&#xA;./demo/generate_env&#xA;&#xA;# Run containers: db-migrator, app (web &amp;amp; respirate), postgresql&#xA;docker-compose -f demo/docker-compose.yml up&#xA;&#xA;# Visit localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The control plane is responsible for cloudifying bare metal Linux machines. When you click to &#34;Create a Virtual Machine&#34;, you&#39;ll see example providers. The easiest way to build your own cloud is to lease instances from one of those providers. For example: &lt;a href=&#34;https://www.hetzner.com/sb&#34;&gt;https://www.hetzner.com/sb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you do, click add VM Hosts from the ubicloud dashboard. Ubicloud uses SSH to manage Linux machines; and will provide you with a public SSH key. You&#39;ll need to add this SSH key to your Linux machine&#39;s authorized keys, typically located in &lt;code&gt;/root/.ssh/authorized_keys&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ubicloud/ubicloud/assets/993199/93bc42c4-9c10-479e-ab2d-e585c0db9657&#34; alt=&#34;Cloudify Linux Machine&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you add a VM Host, Ubicloud will cloudify that machine. You can then provision and manage cloud services on those machines.&lt;/p&gt; &#xA;&lt;p&gt;Later when you create VMs, Ubicloud will assign them IPv6 addresses. If your ISP doesn&#39;t support IPv6, please use a VPN or tunnel broker such Mullvad or Hurricane Electric&#39;s &lt;a href=&#34;https://tunnelbroker.net/&#34;&gt;https://tunnelbroker.net/&lt;/a&gt; to connect.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Ubicloud is in public alpha. You can provide us your feedback, get help, or ask us to support your network environment in the &lt;a href=&#34;https://github.com/ubicloud/ubicloud/discussions&#34;&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also find our cloud services and their statuses below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ubicloud/ubicloud/main/doc/vm.md&#34;&gt;Elastic Compute&lt;/a&gt;: Public Alpha&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ubicloud/ubicloud/main/doc/net.md&#34;&gt;Virtual Networking&lt;/a&gt;: Public Alpha&lt;/li&gt; &#xA; &lt;li&gt;Blob Storage via MinIO Hosting: Draft&lt;/li&gt; &#xA; &lt;li&gt;Attribute-Based Access Control (ABAC) Authorization: Draft&lt;/li&gt; &#xA; &lt;li&gt;IPv4 Support: Draft&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why use it&lt;/h2&gt; &#xA;&lt;p&gt;In the past decade, there has been a massive shift to the cloud. AWS, Azure, and Google Cloud offer services that make life easier for start-ups and enterprises alike. But these offerings have you rent computers at a premium. If you want to run your own hardware or even just have a clear migration path to do so in the future, you need to consider how locked in you are to these commercial platforms. Ideally, before the bills swallow your business.&lt;/p&gt; &#xA;&lt;p&gt;Ubicloud aims to run common cloud services anywhere. Whether that&#39;s low-cost bare metal providers like Hetzner or OVH, or on your colocated hardware. This gives you enormous portability. With that portability, you can benefit from cost savings, avoid vendor lock-in, and meet your security &amp;amp; compliance needs.&lt;/p&gt; &#xA;&lt;p&gt;Today, AWS provides about two hundred cloud services. Ultimately, we will implement 10% of the cloud services that make up 80% of that consumption.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Ubicloud follows an established architectural pattern in building public cloud services. A control plane manages a data plane, where the data plane usually leverages open source software.&lt;/p&gt; &#xA;&lt;p&gt;We implement our control plane in Ruby and have it communicate with Linux bare metal servers using SSH. We use Cloud Hypervisor to run virtual machines; and implement virtualized networking using IPsec. Our blob storage system is a managed MinIO cluster. We use SPDK for network block devices.&lt;/p&gt; &#xA;&lt;p&gt;For the control plane, we have a Ruby program that connects to Postgres. We base the source code organization on the &lt;a href=&#34;https://github.com/jeremyevans/roda-sequel-stack&#34;&gt;Roda-Sequel Stack&lt;/a&gt; with some modifications. As the name indicates, we use &lt;a href=&#34;https://roda.jeremyevans.net/&#34;&gt;Roda&lt;/a&gt; for HTTP code and &lt;a href=&#34;http://sequel.jeremyevans.net/&#34;&gt;Sequel&lt;/a&gt; for database queries.&lt;/p&gt; &#xA;&lt;p&gt;We manage web authentication with &lt;a href=&#34;http://rodauth.jeremyevans.net/&#34;&gt;RodAuth&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We communicate with servers using SSH, via the library &lt;a href=&#34;https://github.com/net-ssh/net-ssh&#34;&gt;net-ssh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For our tests, we use &lt;a href=&#34;https://rspec.info/&#34;&gt;RSpec&lt;/a&gt;. We also automatically lint and format the code using &lt;a href=&#34;https://rubocop.org/&#34;&gt;RuboCop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the web console&#39;s visual design, we use &lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt; with components from &lt;a href=&#34;https://tailwindui.com&#34;&gt;Tailwind UI&lt;/a&gt;. We also use jQuery for interactivity.&lt;/p&gt; &#xA;&lt;p&gt;Any method of obtaining of Ruby and Postgres versions is acceptable, but if you have no opinion on this, our development team uses &lt;code&gt;asdf-vm&lt;/code&gt; as &lt;a href=&#34;https://raw.githubusercontent.com/ubicloud/ubicloud/main/DEVELOPERS.md&#34;&gt;documented here in detail.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alphagov/service-manual-publisher</title>
    <updated>2023-05-29T01:43:37Z</updated>
    <id>tag:github.com,2023-05-29:/alphagov/service-manual-publisher</id>
    <link href="https://github.com/alphagov/service-manual-publisher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Publishes the Service Manual on GOV.UK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Service Manual Publisher&lt;/h1&gt; &#xA;&lt;p&gt;Service Manual Publisher is used for publishing and maintaining &lt;a href=&#34;https://www.gov.uk/service-manual&#34;&gt;https://www.gov.uk/service-manual&lt;/a&gt;. This application, together with &lt;a href=&#34;https://github.com/alphagov/service-manual-frontend&#34;&gt;Service Manual Frontend&lt;/a&gt; replaced the previous &lt;a href=&#34;https://github.com/alphagov/government-service-design-manual&#34;&gt;Jekyll-based service manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Nomenclature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Guide&lt;/strong&gt;: A guide is the main document format used for manuals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Guide Community&lt;/strong&gt;: A profile page that represents the community who curate a collection of guides.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Topic&lt;/strong&gt;: A collection of guides.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Point&lt;/strong&gt;: A point from the service standard.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technical documentation&lt;/h2&gt; &#xA;&lt;p&gt;This is a Ruby on Rails app, and should follow &lt;a href=&#34;https://docs.publishing.service.gov.uk/manual/conventions-for-rails-applications.html&#34;&gt;our Rails app conventions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://github.com/alphagov/govuk-docker&#34;&gt;GOV.UK Docker environment&lt;/a&gt; to run the application and its tests with all the necessary dependencies. Follow &lt;a href=&#34;https://github.com/alphagov/govuk-docker#usage&#34;&gt;the usage instructions&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Use GOV.UK Docker to run any commands that follow.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running the test suite&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec rake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Further documentation&lt;/h2&gt; &#xA;&lt;p&gt;There is some &lt;a href=&#34;https://raw.githubusercontent.com/alphagov/service-manual-publisher/main/docs/arch/002-disparity-between-database-and-publishing-api.md&#34;&gt;disparity between the content as it appears in the database, and the content as it appears in the publishing api&lt;/a&gt;. This will need to be addressed if we switch to using the Publishing API as our main data store in the future.&lt;/p&gt; &#xA;&lt;p&gt;The Service manual&#39;s guide pages have a nested URL structure which is unusual for GOV.UK. The pros and cons to the nested URL structure are &lt;a href=&#34;https://raw.githubusercontent.com/alphagov/service-manual-publisher/main/docs/arch/001-nested-url-structure.md&#34;&gt;retrospectively documented&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alphagov/service-manual-publisher/main/LICENCE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>