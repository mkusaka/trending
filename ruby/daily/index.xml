<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-17T01:38:01Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>natalie-lang/natalie</title>
    <updated>2022-10-17T01:38:01Z</updated>
    <id>tag:github.com,2022-10-17:/natalie-lang/natalie</id>
    <link href="https://github.com/natalie-lang/natalie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a unique Ruby implementation, compiled to C++ (WIP)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Natalie&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/natalie-lang/natalie/actions?query=workflow%3ABuild+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/natalie-lang/natalie/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;github build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://builds.sr.ht/~tim/natalie?&#34;&gt;&lt;img src=&#34;https://builds.sr.ht/~tim/natalie.svg?sanitize=true&#34; alt=&#34;builds.sr.ht status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/natalie-lang/natalie/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Natalie is a very early-stage work-in-progress Ruby implementation.&lt;/p&gt; &#xA;&lt;p&gt;It provides an ahead-of-time compiler using C++ and gcc/clang as the backend. Also, the language has a REPL that performs incremental compilation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/natalie-lang/natalie/master/examples/demo.gif&#34; alt=&#34;demo screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is much work left to do before this is useful. Please let me know if you want to help!&lt;/p&gt; &#xA;&lt;h2&gt;Helping Out&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! You can learn more about how I work on Natalie via the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLWUx_XkUoGTq-nkbhnk6PN4m109ISo5BX&#34;&gt;hacking session videos on YouTube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to get started right now would be to find a method on an object that is not yet implemented and make it yourself! Also take a look at &lt;a href=&#34;https://github.com/natalie-lang/natalie/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;good first issues&lt;/a&gt;. (See the &#39;Building&#39; and &#39;Running Tests&#39; sections below for some helpful steps.)&lt;/p&gt; &#xA;&lt;p&gt;We have a very quiet &lt;a href=&#34;https://discord.gg/hnHp2tdQyn&#34;&gt;Discord server&lt;/a&gt; -- come and hang out!&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Natalie is tested on macOS, OpenBSD, and Ubuntu Linux. Windows is not yet supported.&lt;/p&gt; &#xA;&lt;p&gt;Natalie requires a system Ruby (MRI) to host the compiler, for now.&lt;/p&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;autoconf&lt;/li&gt; &#xA; &lt;li&gt;automake&lt;/li&gt; &#xA; &lt;li&gt;libtool&lt;/li&gt; &#xA; &lt;li&gt;make&lt;/li&gt; &#xA; &lt;li&gt;gcc or clang&lt;/li&gt; &#xA; &lt;li&gt;Ruby 2.7.x or Ruby 3.0.x (&lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt; preferred)&lt;/li&gt; &#xA; &lt;li&gt;ccache (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install the above prerequisites on your platform, then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/natalie-lang/natalie&#xA;cd natalie&#xA;rake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting Build Errors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Don&#39;t use &lt;code&gt;sudo&lt;/code&gt;!&lt;/strong&gt; If you already made that mistake, then you should &lt;code&gt;sudo rm -rf build&lt;/code&gt; and try again.&lt;/li&gt; &#xA; &lt;li&gt;If you get an error about file permissions, e.g. unable to write a file to somewhere like &lt;code&gt;/usr/lib/ruby&lt;/code&gt;, or another path that would require root, then you have a couple options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use a tool like &lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt; to install a Ruby verison in your home directory. Gems will also be installed there. Run &lt;code&gt;rbenv version&lt;/code&gt; to see which version is currently selected. Run &lt;code&gt;rbenv shell&lt;/code&gt; followed by a version to select that version.&lt;/li&gt; &#xA;   &lt;li&gt;Specify where to install gems with something like: &lt;pre&gt;&lt;code&gt;mkdir -p ~/gems&#xA;export GEM_HOME=~/gems&#xA;&lt;/code&gt;&lt;/pre&gt; You&#39;ll just have to remember to do that every time you open a new terminal tab.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you get an error about missing &lt;code&gt;bundler&lt;/code&gt;, then your operating system probably didn&#39;t install it alongside Ruby. You can run &lt;code&gt;gem install bundler&lt;/code&gt; to get it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Currently, the default build is the &#34;debug&#34; build, since Nataile is in active development. But you can build in release mode with &lt;code&gt;rake build_release&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;REPL:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/natalie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run a Ruby script:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/natalie examples/hello.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Compile a file to an executable:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/natalie examples/hello.rb -c hello&#xA;./hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using With Docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t natalie .                                            # build image&#xA;docker run -it --rm natalie                                          # repl&#xA;docker run -it --rm natalie -e &#34;p 2 * 3&#34;                             # immediate&#xA;docker run -it --rm -v$(pwd)/myfile.rb:/myfile.rb natalie /myfile.rb # execute a local rb file&#xA;docker run -it --rm --entrypoint bash natalie                        # bash prompt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;To run a test (or spec), you can run it like a normal Ruby script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/natalie spec/core/string/strip_spec.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run the tests and tell you if there are any failures.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run all the tests that we expect to pass, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lastly, if you need to run a handful of tests locally, you can use the &lt;code&gt;test/runner.rb&lt;/code&gt; helper script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/natalie test/runner.rb test/natalie/if_test.rb test/natalie/loop_test.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;What&#39;s the difference between the &#39;spec/&#39; and &#39;test/&#39; directories?&lt;/h3&gt; &#xA;&lt;p&gt;The files in &lt;code&gt;spec/&lt;/code&gt; come from the excellent &lt;a href=&#34;https://github.com/ruby/spec&#34;&gt;ruby/spec&lt;/a&gt; project, which is a community-curated repo of test files that any Ruby implementation can use to compare its conformance to what MRI (Matz&#39;s Ruby Interpreter) does. We copy specs over as we implement the part of the language that they cover.&lt;/p&gt; &#xA;&lt;p&gt;Everything in &lt;code&gt;test/&lt;/code&gt; is stuff we wrote while working on Natalie. These are tests that helped us bootstrap certain parts of the language and/or weren&#39;t covered as much as we would like by the official Ruby specs. We use this to supplement the specs in &lt;code&gt;spec/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright &amp;amp; License&lt;/h2&gt; &#xA;&lt;p&gt;Natalie is copyright 2021, Tim Morgan and contributors. Natalie is licensed under the MIT License; see the &lt;code&gt;LICENSE&lt;/code&gt; file in this directory for the full text.&lt;/p&gt; &#xA;&lt;p&gt;Some parts of this program are copied from other sources, and the copyright belongs to the respective owner:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;file(s)&lt;/th&gt; &#xA;   &lt;th&gt;copyright&lt;/th&gt; &#xA;   &lt;th&gt;license&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dtoa.c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;David M. Gay, Lucent Technologies&lt;/td&gt; &#xA;   &lt;td&gt;custom permissive&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fiber_object.*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Evan Jones&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;big_int.*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Syed Faheel Ahmad&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;spec/*&lt;/code&gt; (see &lt;code&gt;spec/LICENSE&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Engine Yard, Inc.&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;version.rb&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Engine Yard, Inc.&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See each file above for full copyright and license text.&lt;/p&gt;</summary>
  </entry>
</feed>