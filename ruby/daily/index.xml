<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:35:51Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iancanderson/ingreedy</title>
    <updated>2024-05-12T01:35:51Z</updated>
    <id>tag:github.com,2024-05-12:/iancanderson/ingreedy</id>
    <link href="https://github.com/iancanderson/ingreedy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;natural language parsing of recipe ingredients, making sense of amounts, units, and ingredients&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;result = Ingreedy.parse(&#39;1 lb. potatoes&#39;)&#xA;print result.amount&#xA;  #=&amp;gt; 1.0&#xA;print result.unit&#xA;  #=&amp;gt; :pound&#xA;print result.ingredient&#xA;  #=&amp;gt; &#34;potatoes&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;I18n and custom dictionaries&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Ingreedy.dictionaries[:fr] = { &#xA;  units: { dash: [&#39;pincée&#39;] }, &#xA;  numbers: { &#39;une&#39; =&amp;gt; 1 }, &#xA;  prepositions: [&#39;de&#39;] &#xA;}&#xA;&#xA;Ingreedy.locale = :fr # Also automatically follows I18n.locale if available&#xA;&#xA;result = Ingreedy.parse(&#39;une pincée de sucre&#39;)&#xA;print result.amount&#xA;  #=&amp;gt; 1.0&#xA;print result.unit&#xA;  #=&amp;gt; :dash&#xA;print result.ingredient&#xA;  #=&amp;gt; &#34;sucre&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Handling amounts&lt;/h3&gt; &#xA;&lt;p&gt;By default, Ingreedy will convert all amounts to a rational number:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;result = Ingreedy.parse(&#34;1 1/2 cups flour&#34;)&#xA;print result.amount&#xA;  #=&amp;gt; 3/2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, setting &lt;code&gt;Ingreedy.preverse_amounts = true&lt;/code&gt;, will allow amounts to be detected and returned as originally input:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Ingreedy.preserve_amounts = true&#xA;&#xA;result = Ingreedy.parse(&#34;1 1/2 cups flour&#34;)&#xA;print result.amount&#xA;  #=&amp;gt; 1 1/2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://hangryingreedytest.herokuapp.com/&#34;&gt;Live demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Pieces of Flair&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://badge.fury.io/rb/ingreedy&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/ingreedy.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://travis-ci.org/iancanderson/ingreedy&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/iancanderson/ingreedy.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeclimate.com/github/iancanderson/ingreedy&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/iancanderson/ingreedy.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coveralls.io/r/iancanderson/ingreedy&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/iancanderson/ingreedy/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;Run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rspec spec&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>