<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-26T01:46:07Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openblockchains/awesome-blockchains</title>
    <updated>2023-06-26T01:46:07Z</updated>
    <id>tag:github.com,2023-06-26:/openblockchains/awesome-blockchains</id>
    <link href="https://github.com/openblockchains/awesome-blockchains" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection about awesome blockchains - open distributed public databases w/ crypto hashes incl. git ;-). Blockchains are the new tulips 🌷🌷🌷. Distributed is the new centralized.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Mining Digital Gold one Block at a Time?! • Don&#39;t Expect to Get Insanely Rich (Quick) • Tulips &lt;span&gt;🌷&lt;/span&gt;&lt;span&gt;🌷&lt;/span&gt;&lt;span&gt;🌷&lt;/span&gt; (like Blockchains) are Great and Gorgeous (and will Endure)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;b0 = Block.first(&#xA;        { from: &#34;Dutchgrown&#34;, to: &#34;Vincent&#34;, what: &#34;Tulip Bloemendaal Sunset&#34;, qty: 10 },&#xA;        { from: &#34;Keukenhof&#34;,  to: &#34;Anne&#34;,    what: &#34;Tulip Semper Augustus&#34;,    qty: 7  } )&#xA;&#xA;b1 = Block.next( b0,&#xA;        { from: &#34;Flowers&#34;,    to: &#34;Ruben&#34;,   what: &#34;Tulip Admiral van Eijck&#34;,  qty: 5  },&#xA;        { from: &#34;Vicent&#34;,     to: &#34;Anne&#34;,    what: &#34;Tulip Bloemendaal Sunset&#34;, qty: 3  },&#xA;        { from: &#34;Anne&#34;,       to: &#34;Julia&#34;,   what: &#34;Tulip Semper Augustus&#34;,    qty: 1  },&#xA;        { from: &#34;Julia&#34;,      to: &#34;Luuk&#34;,    what: &#34;Tulip Semper Augustus&#34;,    qty: 1  } )&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Source: &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/blockchain.rb/blockchain_with_transactions.rb&#34;&gt;&lt;code&gt;blockchain_with_transactions.rb&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Awesome Blockchains&lt;/h1&gt; &#xA;&lt;p&gt;A collection about awesome blockchains - open distributed databases w/ crypto hashes incl. git ;-). Blockchains are the new tulips &lt;span&gt;🌷&lt;/span&gt;&lt;span&gt;🌷&lt;/span&gt;&lt;span&gt;🌷&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#frequently-asked-questions-faqs--answers&#34;&gt;Frequently Asked Questions (F.A.Q.s) &amp;amp; Answers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#do-it-yourself-diy---build-your-own-blockchain&#34;&gt;Do-It-Yourself (DIY) - Build Your Own Blockchain&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#python&#34;&gt;Python&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#ruby&#34;&gt;Ruby&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#javascript&#34;&gt;JavaScript&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#java&#34;&gt;Java&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#blockchain-articles&#34;&gt;Blockchain Articles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#blockchain-books&#34;&gt;Blockchain Books&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#blockchain-lite-crypto-hash-libraries&#34;&gt;Blockchain (Lite) Crypto Hash Libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#git-git-git---the-stupid-content-tracker-with-crypto-hashes&#34;&gt;Git, Git, Git - The Stupid Content Tracker with Crypto Hashes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#classic-tulip-mania&#34;&gt;Classic Tulip Mania&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#awesome-awesomeness&#34;&gt;Awesome Awesomeness&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s News?&lt;/h2&gt; &#xA;&lt;p&gt;For blockchain books, see the new &lt;a href=&#34;https://openblockchains.github.io/crypto-books/&#34;&gt;&lt;strong&gt;Best of Crypto Books page »&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Open Blockchains Book of the Year 2020 Award Goes To...&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/libra-shrugged.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://davidgerard.co.uk/blockchain/libra/&#34;&gt;&lt;strong&gt;Libra Shrugged: How Facebook Tried to Take Over the Money&lt;/strong&gt;&lt;/a&gt; by David Gerard, November 2020, 182 Pages -- &lt;em&gt;Introduction: Taking over the money ++ A user&#39;s guide to Libra ++ The genesis of Libra: Beller&#39;s blockchain ++ To launch a Libra: Let’s start a crypto ++ Bitcoin: why Libra is like this ++ The Libra White Papers ++ Banking the unbanked ++ The Libra Reserve plan and economic stability ++ Libra, privacy and your digital identity ++ The regulators recoil in horror ++ David Marcus before the US House and Senate ++ July to September 2019: Libra runs the gauntlet ++ October 2019: Libra&#39;s bad month ++ Mark Zuckerberg before the US House ++ November 2019: The comedown ++ Central bank digital currencies ++ Epilogue: Libra 2.0: not dead yet ++ Appendix: 2010–2013: The rise and fall of Facebook Credits&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more about Diem (formerly Libra), see the &lt;a href=&#34;https://github.com/openblockchains/awesome-diem&#34;&gt;Awesome Diem (formerly Libra) and Move page »&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For crypto quotes, see the new &lt;a href=&#34;https://github.com/openblockchains/crypto-quotes&#34;&gt;&lt;strong&gt;100+ Best of Crypto Quotes - I HODL, you HODL, we HODL! - BREAKING: BITCOIN JUST BROKE $22 000! page »&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Best Crypto Quote &#34;Oracle Saying&#34; of the Year 2020 Award Goes To...&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;SEC Investor Education:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Don&#39;t understand an investment?&lt;/li&gt; &#xA;  &lt;li&gt;Don&#39;t invest in it.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Yes, but what if there&#39;s only 21 million of it?&lt;/p&gt; &#xA;&lt;p&gt;- Trolly McTrollface&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions (F.A.Q.s) &amp;amp; Answers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: What&#39;s a Blockchain?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: A blockchain is a distributed database with a list (that is, chain) of records (that is, blocks) linked and secured by digital fingerprints (that is, cryptho hashes). Example from &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/blockchain.rb/blockchain.rb&#34;&gt;&lt;code&gt;blockchain.rb&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[#&amp;lt;Block:0x1eed2a0&#xA;  @timestamp     = 1637-09-15 20:52:38,&#xA;  @data          = &#34;Genesis&#34;,&#xA;  @previous_hash = &#34;0000000000000000000000000000000000000000000000000000000000000000&#34;,&#xA;  @hash          = &#34;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1eec9a0&#xA;  @timestamp     = 1637-09-15 21:02:38,&#xA;  @data          = &#34;Transaction Data...&#34;,&#xA;  @previous_hash = &#34;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&#34;,&#xA;  @hash          = &#34;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1eec838&#xA;  @timestamp     = 1637-09-15 21:12:38,&#xA;  @data          = &#34;Transaction Data......&#34;,&#xA;  @previous_hash = &#34;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&#34;,&#xA;  @hash          = &#34;be50017ee4bbcb33844b3dc2b7c4e476d46569b5df5762d14ceba9355f0a85f4&#34;&amp;gt;,&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/blockchain-jesus.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: What&#39;s a Hash? What&#39;s a (One-Way) Crypto(graphic) Hash Digest Checksum&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;A: A hash e.g. &lt;code&gt;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&lt;/code&gt; is a small digest checksum calculated with a one-way crypto(graphic) hash digest checksum function e.g. SHA256 (Secure Hash Algorithm 256 Bits) from the data. Example from &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/blockchain.rb/blockchain.rb&#34;&gt;&lt;code&gt;blockchain.rb&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def calc_hash&#xA;  sha = Digest::SHA256.new&#xA;  sha.update( @timestamp.to_s + @previous_hash + @data )&#xA;  sha.hexdigest   ## returns &#34;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&#34;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A blockchain uses&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the block timestamp (e.g. &lt;code&gt;1637-09-15 20:52:38&lt;/code&gt;) and&lt;/li&gt; &#xA; &lt;li&gt;the hash from the previous block (e.g. &lt;code&gt;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&lt;/code&gt;) and finally&lt;/li&gt; &#xA; &lt;li&gt;the block data (e.g. &lt;code&gt;Transaction Data...&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;to calculate the new hash digest checksum, that is, the hash e.g. &lt;code&gt;be50017ee4bbcb33844b3dc2b7c4e476d46569b5df5762d14ceba9355f0a85f4&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: What&#39;s a Merkle Tree?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: A Merkle tree is a hash tree named after Ralph Merkle who patented the concept in 1979 (the patent expired in 2002). A hash tree is a generalization of hash lists or hash chains where every leaf node (in the tree) is labelled with a data block and every non-leaf node (in the tree) is labelled with the crypto(graphic) hash of the labels of its child nodes. For more see the &lt;a href=&#34;https://en.wikipedia.org/wiki/Merkle_tree&#34;&gt;Merkle tree&lt;/a&gt; Wikipedia Article.&lt;/p&gt; &#xA;&lt;p&gt;Note: By adding crypto(graphic) hash functions you can &#34;merkelize&#34; any data structure.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: What&#39;s a Merkelized DAG (Directed Acyclic Graph)?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: It&#39;s a blockchain secured by crypto(graphic) hashes that uses a directed acyclic graph data structure (instead of linear &#34;classic&#34; linked list).&lt;/p&gt; &#xA;&lt;p&gt;Note: Git uses merkelized dag (directed acyclic graph)s for its blockchains.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: Is the Git Repo a Blockchain?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;A: Yes, every branch in the git repo is a blockchain. The &#34;classic&#34; Satoshi-blockchain is like a git repo with a single master branch (only).&lt;/p&gt; &#xA;&lt;h2&gt;Do-It-Yourself (DIY) - Build Your Own Blockchain&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/fake-dilbert-blockchain.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#python&#34;&gt;Python&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#ruby&#34;&gt;Ruby&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#javascript&#34;&gt;JavaScript&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#java&#34;&gt;Java&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#go&#34;&gt;Go&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Let&#39;s Build the Tiniest Blockchain in Python Series&lt;/strong&gt; by Gerald Nash&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b&#34;&gt;&lt;strong&gt;Let&#39;s Build the Tiniest Blockchain In Less Than 50 Lines of Python (Part 1)&lt;/strong&gt;&lt;/a&gt;, July 2016&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/crypto-currently/lets-make-the-tiniest-blockchain-bigger-ac360a328f4d&#34;&gt;&lt;strong&gt;Let&#39;s Make the Tiniest Blockchain Bigger With More Lines of Python (Part 2)&lt;/strong&gt;&lt;/a&gt;, July 2016&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- break --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://ecomunsing.com/build-your-own-blockchain&#34;&gt;&lt;strong&gt;Build Your Own Blockchain: A Python Tutorial&lt;/strong&gt;&lt;/a&gt; by Eric Munsing, March 2017, &lt;a href=&#34;https://github.com/emunsing/tutorials/raw/master/BuildYourOwnBlockchain.ipynb&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hackernoon.com/learn-blockchains-by-building-one-117428612f46&#34;&gt;&lt;strong&gt;Learn Blockchains by Building One (in Python)&lt;/strong&gt;&lt;/a&gt; by Daniel van Flymen, September 2017, &lt;a href=&#34;https://github.com/dvf/blockchain&#34;&gt;(Source)&lt;/a&gt; -- The fastest way to learn how Blockchains work is to build one&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build Your Own Blockchain (in Python 3) Series&lt;/strong&gt; by Jack Schultz, &lt;a href=&#34;https://github.com/jackschultz/jbc&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigishdata.com/2017/10/17/write-your-own-blockchain-part-1-creating-storing-syncing-displaying-mining-and-proving-work/&#34;&gt;&lt;strong&gt;Part 1: Creating, Storing, Syncing, Displaying, Mining, and Proving Work&lt;/strong&gt;&lt;/a&gt;, October 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigishdata.com/2017/10/27/build-your-own-blockchain-part-2-syncing-chains-from-different-nodes/&#34;&gt;&lt;strong&gt;Part 2: Syncing Chains From Different Nodes&lt;/strong&gt;&lt;/a&gt;, October 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bigishdata.com/2017/11/02/build-your-own-blockchain-part-3-writing-nodes-that-mine/&#34;&gt;&lt;strong&gt;Part 3: Writing Nodes that Mine and Talk&lt;/strong&gt;&lt;/a&gt;, November 2017&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- break --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/&#34;&gt;&lt;strong&gt;A Practical Introduction to Blockchain with Python&lt;/strong&gt;&lt;/a&gt; by Adil Moujahid, March 2018, &lt;a href=&#34;https://github.com/adilmoujahid/blockchain-python-tutorial&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ruby&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.akitaonrails.com/2017/11/01/how-does-bitcoin-force-consensus-among-byzantine-generals&#34;&gt;&lt;strong&gt;How Does Bitcoin Force Consensus Among Byzantine Generals?&lt;/strong&gt;&lt;/a&gt; by Fabio Akita, November 2017&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://planetruby.github.io/calendar/advent2017/01-blockchain-lite&#34;&gt;&lt;strong&gt;blockchain-lite - Build your own blockchains with crypto hashes; revolutionize the world with blockchains, blockchains, blockchains one block at a time!&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Ruby Advent Calendar 2017 / Day 1, December 2017&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://planetruby.github.io/calendar/advent2017/19-merkletree.html&#34;&gt;&lt;strong&gt;merkletree library - Build Your Own Crypto Hash Trees; Grow Your Own Money on Trees&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Ruby Advent Calendar 2017 / Day 19, December 2017&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://planetruby.github.io/calendar/advent2017/24-centralbank.html&#34;&gt;&lt;strong&gt;centralbank command line tool (and library) - Print Your Own Money / Cryptocurrency; Run Your Own Federated Central Bank Nodes on the Blockchain Peer-to-Peer over HTTP&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Ruby Advent Calendar 2017 / Day 24, December 2017&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://antoinefink.com/building-a-blockchain-and-cryptocurrency-in-ruby&#34;&gt;&lt;strong&gt;A guide to building a blockchain &amp;amp; cryptocurrency from scratch&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/antoinefink/melon&#34;&gt;(Source)&lt;/a&gt; by Antoine Fink, April 2021&lt;/p&gt; &#xA;&lt;h3&gt;Crystal&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52&#34;&gt;&lt;strong&gt;Write your own blockchain and Proof-of-Work (PoW) algorithm using Crystal&lt;/strong&gt;&lt;/a&gt; by Bradford Lamson-Scribner, May 2018, &lt;a href=&#34;https://github.com/bradford-hamilton/crystal-blockchain&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.savjee.be/2017/07/Writing-tiny-blockchain-in-JavaScript/&#34;&gt;&lt;strong&gt;Writing a Tiny Blockchain in JavaScript&lt;/strong&gt;&lt;/a&gt; by Xavier Decuyper, July 2017&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.darrenbeck.co.uk/blockchain/nodejs/nodejscrypto/&#34;&gt;&lt;strong&gt;Node.js Blockchain Imlementation: BrewChain: Chain+WebSockets+HTTP Server&lt;/strong&gt;&lt;/a&gt; by Darren Beck, November 2017, &lt;a href=&#34;https://github.com/dbbddb/BrewChain&#34;&gt;(Source)&lt;/a&gt; -- Protecting the tea making ledger from unscrupulous colleagues&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nambrot/blockchain-in-js&#34;&gt;&lt;strong&gt;Build your own Blockchain in Javascript/Visualization of Blockchains&lt;/strong&gt;&lt;/a&gt; by Nam Chu Hoai, January 2018&lt;/p&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lhartikk.github.io&#34;&gt;&lt;strong&gt;Naivecoin: a tutorial for building a cryptocurrency&lt;/strong&gt;&lt;/a&gt; by Lauri Hartikka, &lt;a href=&#34;https://github.com/lhartikk/naivecoin&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Java&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa&#34;&gt;&lt;strong&gt;Creating Your First Blockchain with Java, Part 1&lt;/strong&gt;&lt;/a&gt; by Kass, December 2017, &lt;a href=&#34;https://github.com/CryptoKass/NoobChain-Tutorial-Part-1&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kotlin&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580&#34;&gt;&lt;strong&gt;Let&#39;s implement a cryptocurrency in Kotlin&lt;/strong&gt;&lt;/a&gt; by Vasily Fomin, July 2018, &lt;a href=&#34;https://github.com/VasilyFomin/kCoin&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://medium.com/@benjaminsky/blockchain-by-example-in-sql-server-8376b410128&#34;&gt;&lt;strong&gt;Blockchain by Example in SQL Server&lt;/strong&gt;&lt;/a&gt; by Benjamin Campbell, December 2017, &lt;a href=&#34;https://github.com/benjaminsky/BlockchainMessenger&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rust&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Building Blockchain in Rust Series&lt;/strong&gt; by Jacob Lindahl, GeekLaunch, &lt;a href=&#34;https://github.com/GeekLaunch/blockchain-rust&#34;&gt;(Source)&lt;/a&gt;, &lt;a href=&#34;https://github.com/GeekLaunch/slides&#34;&gt;(Slide Decks in PDF)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/geeklaunch/blockchain-in-rust-01-blocks-hashing-4192f2265d3d&#34;&gt;&lt;strong&gt;Part 1: Blocks and Hashing&lt;/strong&gt;&lt;/a&gt;, January 2019&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/geeklaunch/blockchain-in-rust-02-mining-companion-guide-9106b7a7696d&#34;&gt;&lt;strong&gt;Part 2: Mining&lt;/strong&gt;&lt;/a&gt;, January 2019&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/geeklaunch/blockchain-in-rust-03-chains-checks-companion-guide-2714e1a76654&#34;&gt;&lt;strong&gt;Part 3: Chains and Checks&lt;/strong&gt;&lt;/a&gt;, January 2019&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Building Blockchain in Go Series&lt;/strong&gt; by Ivan Kuznetsov, &lt;a href=&#34;https://github.com/Jeiwan/blockchain_go&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-1/&#34;&gt;&lt;strong&gt;Part 1: Basic Prototype&lt;/strong&gt;&lt;/a&gt;, August 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-2/&#34;&gt;&lt;strong&gt;Part 2: Proof-of-Work&lt;/strong&gt;&lt;/a&gt;, August 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-3/&#34;&gt;&lt;strong&gt;Part 3: Persistence and CLI&lt;/strong&gt;&lt;/a&gt;, August 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-4/&#34;&gt;&lt;strong&gt;Part 4: Transactions 1&lt;/strong&gt;&lt;/a&gt;, September 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-5/&#34;&gt;&lt;strong&gt;Part 5: Addresses&lt;/strong&gt;&lt;/a&gt;, September 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-6/&#34;&gt;&lt;strong&gt;Part 6: Transactions 2&lt;/strong&gt;&lt;/a&gt;, September 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeiwan.cc/posts/building-blockchain-in-go-part-7/&#34;&gt;&lt;strong&gt;Part 7: Network&lt;/strong&gt;&lt;/a&gt;, October 2017&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- break --&gt; &#xA;&lt;p&gt;Blockchain Series in Go by by Coral Health &lt;a href=&#34;https://github.com/mycoralhealth/blockchain-tutorial&#34;&gt;(Source)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc&#34;&gt;&lt;strong&gt;Code your own blockchain in less than 200 lines of Go!&lt;/strong&gt;&lt;/a&gt; by Coral Health, January 2018&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mycoralhealth/part-2-networking-code-your-own-blockchain-in-less-than-200-lines-of-go-17fe1dad46e1&#34;&gt;&lt;strong&gt;Part 2: Networking — Code your own blockchain in less than 200 lines of Go!&lt;/strong&gt;&lt;/a&gt; by Coral Health, February 2018&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mycoralhealth/code-your-own-blockchain-mining-algorithm-in-go-82c6a71aba1f&#34;&gt;&lt;strong&gt;Code your own blockchain mining algorithm in Go!&lt;/strong&gt;&lt;/a&gt; by Coral Health, March 2018&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--&#xA;  it&#39;s more about bitcoin (and not about blockchain really)&#xA;### C#&#xA;&#xA;[**Programming The Blockchain in C#**](https://programmingblockchain.gitbooks.io/programmingblockchain/)&#xA;--&gt; &#xA;&lt;h3&gt;Talk Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geraldb/talks/raw/master/blockchain.md&#34;&gt;&lt;strong&gt;Blockchain! Blockchain! Blockchain! - Build Your Own Blockchains in JavaScript from Zero (Scratch)&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Vienna.js, September 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geraldb/talks/raw/master/blockchain_ruby.md&#34;&gt;&lt;strong&gt;Blockchain! Blockchain! Blockchain! - Build Your Own Blockchains in Ruby from Zero (Scratch)&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Vienna.rb, Dezember 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geraldb/talks/raw/master/hyperledger.md&#34;&gt;&lt;strong&gt;Blockchain vs (Hyper) Ledger -- Inside (Hyper) Ledger Lite - Add Transactions One Block at a Time and Balance the Accounts (Books)&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Hyperledger Vienna, March 2018&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geraldb/talks/raw/master/blockchain_go.md&#34;&gt;&lt;strong&gt;Blockchain! Blockchain! Blockchain! - Build Your Own Blockchains in Go from Zero (Scratch)&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer, Vienna.go, April 2018&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/danistefanovic/build-your-own-x#build-your-own-blockchain--cryptocurrency&#34;&gt;&lt;strong&gt;Build your own Blockchain / Cryptocurrency&lt;/strong&gt;&lt;/a&gt; @ Build your own (insert technology here)&lt;/p&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;h4&gt;Blockchain from Scratch - Ruby Version&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Block&#xA;&#xA;  attr_reader :timestamp&#xA;  attr_reader :data&#xA;  attr_reader :previous_hash&#xA;  attr_reader :hash&#xA;&#xA;  def initialize(data, previous_hash)&#xA;    @timestamp     = Time.now&#xA;    @data          = data&#xA;    @previous_hash = previous_hash&#xA;    @hash          = calc_hash&#xA;  end&#xA;&#xA;  def self.first( data=&#34;Genesis&#34; )    # create genesis (big bang! first) block&#xA;    ## note: uses all zero for previous_hash (&#34;0&#34;)&#xA;    Block.new( data, &#34;0000000000000000000000000000000000000000000000000000000000000000&#34; )&#xA;  end&#xA;&#xA;  def self.next( previous, data=&#34;Transaction Data...&#34; )&#xA;    Block.new( data, previous.hash )&#xA;  end&#xA;&#xA;private&#xA;&#xA;  def calc_hash&#xA;    sha = Digest::SHA256.new&#xA;    sha.update( @timestamp.to_s + @previous_hash + @data )&#xA;    sha.hexdigest&#xA;  end&#xA;&#xA;end  # class Block&#xA;&#xA;&#xA;#####&#xA;## let&#39;s get started&#xA;##   build a blockchain a block at a time&#xA;&#xA;b0 = Block.first( &#34;Genesis&#34; )&#xA;b1 = Block.next( b0, &#34;Transaction Data...&#34; )&#xA;b2 = Block.next( b1, &#34;Transaction Data......&#34; )&#xA;b3 = Block.next( b2, &#34;More Transaction Data...&#34; )&#xA;&#xA;blockchain = [b0, b1, b2, b3]&#xA;&#xA;pp blockchain&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Source: &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/blockchain.rb/blockchain.rb&#34;&gt;&lt;code&gt;blockchain.rb&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;will pretty print (pp) something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[#&amp;lt;Block:0x1eed2a0&#xA;  @timestamp     = 1637-09-15 20:52:38,&#xA;  @data          = &#34;Genesis&#34;,&#xA;  @previous_hash = &#34;0000000000000000000000000000000000000000000000000000000000000000&#34;,&#xA;  @hash          = &#34;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1eec9a0&#xA;  @timestamp     = 1637-09-15 21:02:38,&#xA;  @data          = &#34;Transaction Data...&#34;,&#xA;  @previous_hash = &#34;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&#34;,&#xA;  @hash          = &#34;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1eec838&#xA;  @timestamp     = 1637-09-15 21:12:38,&#xA;  @data          = &#34;Transaction Data......&#34;,&#xA;  @previous_hash = &#34;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&#34;,&#xA;  @hash          = &#34;be50017ee4bbcb33844b3dc2b7c4e476d46569b5df5762d14ceba9355f0a85f4&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1eec6d0&#xA;  @timestamp     = 1637-09-15 21:22:38,&#xA;  @data          = &#34;More Transaction Data...&#34;,&#xA;  @previous_hash = &#34;be50017ee4bbcb33844b3dc2b7c4e476d46569b5df5762d14ceba9355f0a85f4&#34;,&#xA;  @hash          = &#34;5ee2981606328abfe0c3b1171440f0df746c1e1f8b3b56c351727f7da7ae5d8d&#34;&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Comments from the &lt;a href=&#34;https://www.reddit.com/r/ruby/comments/70c30f/build_your_own_blockchain_in_20_lines_of_ruby/&#34;&gt;reddit ruby posting&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Wait, so a blockchain is just a linked list?&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;No. A linked list is only required to have a reference to the previous element, a block must have an identifier depending on the previous block&#39;s identifier, meaning that you cannot replace a block without recomputing every single block that comes after. In this implementation that happens as the previous digest is input in the calc_hash method.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;What about Proof of Work / Waste?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s add a proof of work / waste to the blockchain. In the classic blockchain you have to compute a block hash that starts with leading zeros (&lt;code&gt;00&lt;/code&gt;). The more leading zeros the harder (more difficult) to compute. Let&#39;s keep it easy to compute with two leading zeros (&lt;code&gt;00&lt;/code&gt;), that is, 16^2 = 256 possibilites (^1,2). Three leading zeros (&lt;code&gt;000&lt;/code&gt;) would be 16^3 = 4_096 possibilites and four zeros (&lt;code&gt;0000&lt;/code&gt;) would be 16^4 = 65_536 and so on.&lt;/p&gt; &#xA;&lt;p&gt;(^1): 16 possibilties because it&#39;s a hex or hexadecimal or base 16 number, that is, &lt;code&gt;0&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; &lt;code&gt;2&lt;/code&gt; &lt;code&gt;3&lt;/code&gt; &lt;code&gt;4&lt;/code&gt; &lt;code&gt;6&lt;/code&gt; &lt;code&gt;7&lt;/code&gt; &lt;code&gt;8&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; (10) &lt;code&gt;b&lt;/code&gt; (11) &lt;code&gt;c&lt;/code&gt; (12) &lt;code&gt;d&lt;/code&gt; (13) &lt;code&gt;e&lt;/code&gt; (14) &lt;code&gt;f&lt;/code&gt; (15).&lt;/p&gt; &#xA;&lt;p&gt;(^2): A random secure hash algorithm needs on average 256 tries (might be lets say 305 tries, for example, because it&#39;s NOT a perfect statistic distribution of possibilities).&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def compute_hash_with_proof_of_work( difficulty=&#34;00&#34; )&#xA;  nonce = 0&#xA;  loop do&#xA;    hash = calc_hash_with_nonce( nonce )&#xA;    if hash.start_with?( difficulty )&#xA;      return [nonce,hash]     ## bingo! proof of work if hash starts with leading zeros (00)&#xA;    else&#xA;      nonce += 1              ## keep trying (and trying and trying)&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;def calc_hash_with_nonce( nonce=0 )&#xA;  sha = Digest::SHA256.new&#xA;  sha.update( nonce.to_s + @timestamp.to_s + @previous_hash + @data )&#xA;  sha.hexdigest&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Source: &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/blockchain.rb/blockchain_with_proof_of_work.rb&#34;&gt;&lt;code&gt;blockchain_with_proof_of_work.rb&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s rerun the sample with the proof of work machinery added. Now the sample will pretty print (pp) something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[#&amp;lt;Block:0x1e204f0&#xA;  @timestamp     = 1637-09-20 20:13:38,&#xA;  @data          = &#34;Genesis&#34;,&#xA;  @previous_hash = &#34;0000000000000000000000000000000000000000000000000000000000000000&#34;,&#xA;  @nonce         = 242,&#xA;  @hash          = &#34;00b8e77e27378f9aa0afbcea3a2882bb62f6663771dee053364beb1887e18bcf&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1e56e20&#xA;  @timestamp     = 1637-09-20 20:23:38,&#xA;  @data          = &#34;Transaction Data...&#34;,&#xA;  @previous_hash = &#34;00b8e77e27378f9aa0afbcea3a2882bb62f6663771dee053364beb1887e18bcf&#34;,&#xA;  @nonce         = 46,&#xA;  @hash          = &#34;00aae8d2e9387e13c71b33f8cd205d336ac250d2828011f5970062912985a9af&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1e2bd58&#xA;  @timestamp     = 1637-09-20 20:33:38,&#xA;  @data          = &#34;Transaction Data......&#34;,&#xA;  @previous_hash = &#34;00aae8d2e9387e13c71b33f8cd205d336ac250d2828011f5970062912985a9af&#34;,&#xA;  @nonce         = 350,&#xA;  @hash          = &#34;00ea45e0f4683c3bec4364f349ee2b6816be0c9fd95cfd5ffcc6ed572c62f190&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1fa8338&#xA;  @timestamp     = 1637-09-20 20:43:38,&#xA;  @data          = &#34;More Transaction Data...&#34;,&#xA;  @previous_hash = &#34;00ea45e0f4683c3bec4364f349ee2b6816be0c9fd95cfd5ffcc6ed572c62f190&#34;,&#xA;  @nonce         = 59,&#xA;  @hash          = &#34;00436f0fca677652963e904ce4c624606a255946b921132d5b1f70f7d86c4ab8&#34;&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the difference? All hashes now start with leading zeros (&lt;code&gt;00&lt;/code&gt;) and the nonce is the random &#34;lucky number&#34; that makes it happen. That&#39;s the magic behind the proof of work.&lt;/p&gt; &#xA;&lt;h5&gt;Blockchain from Scratch - JavaScript Version&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;class Block {&#xA;&#xA;  constructor(data, previousHash) {&#xA;    this.timestamp    = new Date()&#xA;    this.data         = data&#xA;    this.previousHash = previousHash&#xA;    this.hash         = this.calcHash()&#xA;  }&#xA;&#xA;  calcHash() {&#xA;    var sha = SHA256.create()&#xA;    sha.update( this.timestamp.toString() + this.previousHash + this.data )&#xA;    return sha.hex()&#xA;  }&#xA;&#xA;  static first( data=&#34;Genesis&#34; ) {    // create genesis (big bang! first) block&#xA;    // uses all-zero previousHash&#xA;    return new Block( data, &#34;0000000000000000000000000000000000000000000000000000000000000000&#34; )&#xA;  }&#xA;&#xA;  static next( previous, data=&#34;Transaction Data...&#34; ) {&#xA;    return new Block( data, previous.hash )&#xA;  }&#xA;}&#xA;&#xA;&#xA;//////&#xA;// let&#39;s get started&#xA;//   build a blockchain a block at a time&#xA;&#xA;b0 = Block.first( &#34;Genesis&#34; )&#xA;b1 = Block.next( b0, &#34;Transaction Data...&#34; )&#xA;b2 = Block.next( b1, &#34;Transaction Data......&#34; )&#xA;b3 = Block.next( b2, &#34;More Transaction Data...&#34; )&#xA;&#xA;&#xA;blockchain = [b0, b1, b2, b3]&#xA;&#xA;console.log( blockchain )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Source: &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/blockchain.js/blockchain.js&#34;&gt;&lt;code&gt;blockchain.js&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;will log something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ Block {&#xA;     timestamp    : 1637-09-18 08:25:54,&#xA;     data         : &#39;Genesis&#39;,&#xA;     previousHash : &#39;0000000000000000000000000000000000000000000000000000000000000000&#39;,&#xA;     hash         : &#39;c396de4c03ddb5275661982adc75ce5fc5905d2a2457d1266c74436c1f3c50f1&#39; },&#xA;   Block {&#xA;     timestamp    : 1637-09-18 08:35:54,&#xA;     data         : &#39;Transaction Data...&#39;,&#xA;     previousHash : &#39;c396de4c03ddb5275661982adc75ce5fc5905d2a2457d1266c74436c1f3c50f1&#39;,&#xA;     hash         : &#39;493131e09c069645c82795c96e4715cea0f5558be514b5096d853a5b9899154a&#39; },&#xA;   Block {&#xA;     timestamp    : 1637-09-18 08:45:54,&#xA;     data         : &#39;Transaction Data......&#39;,&#xA;     previousHash : &#39;493131e09c069645c82795c96e4715cea0f5558be514b5096d853a5b9899154a&#39;,&#xA;     hash         : &#39;97aa3cb5052615d60ff8e6b41bef606562588c4874f011970ac2f218e2f0f4a8&#39; },&#xA;   Block {&#xA;     timestamp    : 1637-09-18 08:55:54,&#xA;     data         : &#39;More Transaction Data...&#39;,&#xA;     previousHash : &#39;97aa3cb5052615d60ff8e6b41bef606562588c4874f011970ac2f218e2f0f4a8&#39;,&#xA;     hash         : &#39;e10e020f832e46c2b60e1c3c0412bd370b2fde5f0f782c16eb87d0313ea0d3a3&#39; } ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Blockchain Articles&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://rufuspollock.com/2016/07/02/reflections-on-the-blockchain&#34;&gt;&lt;strong&gt;Reflections on the Blockchain&lt;/strong&gt;&lt;/a&gt; by Rufus Pollock (Open Knowledge Foundation), July 2016 -- &lt;em&gt;The DAO: Code is not Law – and It’s Dangerous to Think So ++ The Internet changed the world - surely the Blockchain will too? ++ Gold-rush or Internet-rush? ++ Governance Matters in Bitcoin ++ The Myth of a Costless, Ownerless Network ++ Lessons from History&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tonyarcieri.com/on-the-dangers-of-a-blockchain-monoculture&#34;&gt;&lt;strong&gt;On the Dangers of a Blockchain Monoculture&lt;/strong&gt;&lt;/a&gt; by Tony Arcieri, January 2016 -- &lt;em&gt;The Bitcoin blockchain: the world&#39;s worst database ++ Next-generation protocols ++ Decentralized ledger protocols ++ Bitcoin-NG ++ Blockchain! Blockchain! Blockchain! ++ The great decentralized database in the sky&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tbray.org/ongoing/When/201x/2017/05/13/Not-Believing-in-Blockchain&#34;&gt;&lt;strong&gt;I Don’t Believe in Blockchain&lt;/strong&gt;&lt;/a&gt; by Tim Bray, May 2017&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.igvita.com/2014/05/05/minimum-viable-block-chain/&#34;&gt;&lt;strong&gt;Minimum Viable Blockchain&lt;/strong&gt;&lt;/a&gt; by Ilya Grigorik, May 2014 -- &lt;em&gt;Securing transactions with triple-entry bookkeeping ++ Securing transactions with PKI ++ Balance = Σ(receipts) ++ Multi-party transfers &amp;amp; verification ++ Double-spending and distributed consensus - Requirements for a distributed consensus network; Protecting the network from Sybil attacks; Proof-of-work as a participation requirement ++ Building the minimum viable blockchain - Adding &#34;blocks&#34; &amp;amp; transaction fee incentives; Racing to claim the transaction fees; Resolving chain conflicts; Blocks are never final ++ Properties of the (minimum viable) blockchain&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/blockchains-by-analogies-and-applications&#34;&gt;&lt;strong&gt;Blockchains by analogies and applications: How blockchain compares to Git, Raft, and other technologies.&lt;/strong&gt;&lt;/a&gt; by Kieren James-Lubin, January 2016 -- &lt;em&gt;Blockchains are databases ++ Understanding transactions ++ Persistent, replicated databases (related technology: Git) ++ Peer-to-peer networks (related technology: BitTorrent) ++ Distributed consensus (related technology: distributed databases, Raft) ++ Minting new coins (mining) ++ Embedded identities (related technology: TLS) ++ Smart contracts: Like SQL expressions &amp;amp; triggers ++ What can we really do with blockchains?&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Blockchain Books&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://davidgerard.co.uk/blockchain/table-of-contents/&#34;&gt;&lt;strong&gt;Attack of the 50 Foot Blockchain: Bitcoin, Blockchain, Ethereum &amp;amp; Smart Contracts&lt;/strong&gt;&lt;/a&gt; by David Gerard, London, 2017 -- &lt;em&gt;What is a bitcoin? ++ The Bitcoin ideology ++ The incredible promises of Bitcoin! ++ Early Bitcoin: the rise to the first bubble ++ How Bitcoin mining centralised ++ Who is Satoshi Nakamoto? ++ Spending bitcoins in 2017 ++ Trading bitcoins in 2017: the second crypto bubble ++ Altcoins ++ Smart contracts, stupid humans ++ Business bafflegab, but on the Blockchain ++ Case study: Why you can’t put the music industry on a blockchain&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitcoinbook/bitcoinbook/raw/second_edition/ch09.asciidoc&#34;&gt;&lt;strong&gt;Mastering Bitcoin - Programming the Open Blockchain&lt;/strong&gt;&lt;/a&gt; 2nd Edition, by Andreas M. Antonopoulos, 2017 - FREE (Online Source Version) -- &lt;em&gt;What Is Bitcoin? ++ How Bitcoin Works ++ Bitcoin Core: The Reference Implementation ++ Keys, Addresses ++ Wallets ++ Transactions ++ Advanced Transactions and Scripting ++ The Bitcoin Network ++ The Blockchain ++ Mining and Consensus ++ Bitcoin Security ++ Blockchain Applications&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/trolly-ponzi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BEWARE: Bitcoin is a gigantic ponzi scheme¹. To the moon!? The new gold standard!? Do NOT &#34;invest&#34; trying to get-rich-quick HODLing. Why not? The bitcoin code is archaic and out-of-date. Burn, baby, burn! Proof-of-work / waste is a global energy environmental disaster using 300 kW/h per bitcoin transaction (!) that&#39;s about 179 kilograms of CO₂ emissions². Programmable money (or the internet of value) for all future generations with (bitcoin) script without loops and jumps (gotos) and all &#34;stateless&#34;!? LOL.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;¹: (Source: &lt;a href=&#34;https://bitsblocks.github.io/bitcoin-maximalist&#34;&gt;Best of Bitcoin Maximalist - Scammers, Morons, Clowns, Shills &amp;amp; BagHODLers - Inside The New New Crypto Ponzi Economics&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;²: Assuming let&#39;s say 0.596 kilograms of CO₂ per kW/h (that&#39;s the energy efficiency in Germany) that&#39;s about 179 kilograms of CO₂ per bitcoin transaction (300 kW/h × 0.596 kg). For more insights see the &lt;a href=&#34;https://digiconomist.net/bitcoin-energy-consumption&#34;&gt;Bitcoin Energy Consumption Index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jimmysong/programmingbitcoin&#34;&gt;&lt;strong&gt;Programming Bitcoin from Scratch&lt;/strong&gt;&lt;/a&gt; by Jimmy Song, 2019 - FREE (Online Source Version) -- &lt;em&gt;&lt;a href=&#34;https://github.com/jimmysong/programmingbitcoin/raw/master/ch06.asciidoc&#34;&gt;Chapter 6 - Script&lt;/a&gt; - How Script Works • Example Operations • Parsing the Script Fields • Combining the Script Fields • Standard Scripts • p2pk • Problems with p2pk • Solving the Problems with p2pkh • Scripts Can Be Arbitrarily Constructed • Conclusion ++&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://github.com/jimmysong/programmingbitcoin/raw/master/ch08.asciidoc&#34;&gt;Chapter 8 - Pay-to-Script Hash&lt;/a&gt; - Bare Multisig • Coding OP_CHECKMULTISIG • Problems with Bare Multisig • Pay-to-Script-Hash (p2sh) • Coding p2sh • Conclusion ++&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://github.com/jimmysong/programmingbitcoin/raw/master/ch13.asciidoc&#34;&gt;Chapter 13 - Segregated Witness&lt;/a&gt; - Pay-to-Witness-Pubkey-Hash (p2wpkh) • p2wpkh Transactions • p2sh-p2wpkh • Coding p2wpkh and p2sh-p2wpkh • Pay-to-Witness-Script-Hash (p2wsh) • p2sh-p2wsh • Coding p2wsh and p2sh-p2wsh • Other Improvements • Conclusion&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openblockchains/programming-bitcoin-script&#34;&gt;&lt;strong&gt;Programming Bitcoin Script Transaction (Crypto) Contracts Step-by-Step ( Beta / Rough Draft )&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer et al, 2019 - FREE (Online Version) -- &lt;em&gt;Let&#39;s start with building your own bitcoin stack machine from zero / scratch and let&#39;s run your own bitcoin ops (operations)...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yukimotopress/programming-blockchains-step-by-step&#34;&gt;&lt;strong&gt;Programming Blockchains in Ruby from Scratch Step-by-Step Starting w/ Crypto Hashes... ( Beta / Rough Draft )&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer et al, 2018 - FREE (Online Version) -- &lt;em&gt;(Crypto) Hash ++ (Crypto) Block ++ (Crypto) Block with Proof-of-Work ++ Blockchain! Blockchain! Blockchain! ++ Blockchain Broken? ++ Timestamping ++ Mining, Mining, Mining - What&#39;s Your Hash Rate? ++ Bitcoin, Bitcoin, Bitcoin ++ (Crypto) Block with Transactions (Tx)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ethereumbook/ethereumbook&#34;&gt;&lt;strong&gt;Mastering Ethereum - Building Contract Services and Decentralized Apps on the Blockchain&lt;/strong&gt;&lt;/a&gt; - by Andreas M. Antonopoulos, Gavin Wood, 2018 - FREE (Online Source Version) &lt;em&gt;What is Ethereum ++ Introduction ++ Ethereum Clients ++ Ethereum Testnets ++ Keys and Addresses ++ Wallets ++ Transactions ++ Contract Services ++ Tokens ++ Oracles ++ Accounting &amp;amp; Gas ++ EVM (Ethereum Virtual Machine) ++ Consensus ++ DevP2P (Peer-To-Peer) Protocol ++ Dev Tools and Frameworks ++ Decentralized Apps ++ Ethereum Standards (EIPs/ERCs)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.manning.com/books/building-ethereum-dapps&#34;&gt;&lt;strong&gt;Building Decentralized Apps on the Ethereum Blockchain&lt;/strong&gt;&lt;/a&gt; by Roberto Infante, 2018 - FREE chapter 1 -- &lt;em&gt;Understanding decentralized applications ++ The Ethereum blockchain ++ Building contract services in (JavaScript-like) Solidity ++ Running contract services on the Ethereum blockchain ++ Developing Ethereum Decentralized apps with Truffle ++ Best design and security practice&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openblockchains/programming-cryptocontracts&#34;&gt;&lt;strong&gt;Programming Crypto Blockchain Contracts Step-by-Step Book / Guide ( Beta / Rough Draft )&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer et al, 2019 - FREE (Online Version) -- &lt;em&gt;Let&#39;s Start with Ponzi &amp;amp; Pyramid Schemes. Run Your Own Lotteries, Gambling Casinos and more on the Blockchain World Computer...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://yukimotopress.github.io/blockchains&#34;&gt;&lt;strong&gt;Programming Cryptocurrencies and Blockchains in Ruby ( Beta / Rough Draft )&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer et al, 2018 - FREE (Online Version) @ Yuki &amp;amp; Moto Press Bookshelf -- &lt;em&gt;Digital $$$ Alchemy - What&#39;s a Blockchain? - How-To Turn Digital Bits Into $$$ or €€€? • Decentralize Payments. Decentralize Transactions. Decentralize Blockchains. • The Proof of the Pudding is ... The Bitcoin (BTC) Blockchain(s) ++ Building Blockchains from Scratch - A Blockchain in Ruby in 20 Lines! A Blockchain is a Data Structure • What about Proof-of-Work? What about Consensus? • Find the Lucky Number - Nonce == Number Used Once ++ Adding Transactions - The World&#39;s Worst Database - Bitcoin Blockchain Mining • Tulips on the Blockchain! Adding Transactions ++ Blockchain Lite - Basic Blocks • Proof-of-Work Blocks • Transactions ++ Merkle Tree - Build Your Own Crypto Hash Trees; Grow Your Own Money on Trees • What&#39;s a Merkle Tree? • Transactions ++ Central Bank - Run Your Own Federated Central Bank Nodes on the Blockchain Peer-to-Peer over HTTP • Inside Mining - Printing Cryptos, Cryptos, Cryptos on the Blockchain ++ Awesome Crypto ++ Case Studies - Dutch Gulden • Shilling • CryptoKitties (and CryptoCopycats)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.ibm.com/blockchain/what-is-blockchain.html&#34;&gt;&lt;strong&gt;Blockchain for Dummies, IBM Limited Edition&lt;/strong&gt;&lt;/a&gt; by Manav Gupta, 2017 - FREE (Digital Download w/ Email) -- &lt;em&gt;Grasping Blockchain Fundamentals ++ Taking a Look at How Blockchain Works ++ Propelling Business with Blockchains ++ Blockchain in Action: Use Cases ++ Hyperledger, a Linux Foundation Project ++ Ten Steps to Your First Blockchain application&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitsblocks/get-rich-quick-bible&#34;&gt;&lt;strong&gt;Get Rich Quick &#34;Business Blockchain&#34; Bible - The Secrets of Free Easy Money&lt;/strong&gt;&lt;/a&gt;, 2018 - FREE -- &lt;em&gt;Step 1: Sell hot air. How? ++ Step 2: Pump up your tokens. How? ++ Step 3: Revolutionize the World. How?&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitsblocks/bitcoin-maximalist&#34;&gt;&lt;strong&gt;Best of Bitcoin Maximalist - Scammers, Morons, Clowns, Shills &amp;amp; BagHODLers - Inside The New New Crypto Ponzi Economics&lt;/strong&gt;&lt;/a&gt; by Trolly McTrollface, et al, 2018 - FREE&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitsblocks/crypto-facts&#34;&gt;&lt;strong&gt;Crypto Facts - Decentralize Payments - Efficient, Low Cost, Fair, Clean - True or False?&lt;/strong&gt;&lt;/a&gt; by Nouriel Roubini, David Gerard, et al, 2018 - FREE&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitsblocks/crypto-bubbles&#34;&gt;&lt;strong&gt;Crypto is the Mother of All Scams and (Now Busted) Bubbles - While Blockchain Is The Most Over-Hyped Technology Ever, No Better than a Spreadsheet/Database&lt;/strong&gt;&lt;/a&gt; by Nouriel Roubini, 2018 - FREE&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitsblocks/islandcoin-whitepaper&#34;&gt;&lt;strong&gt;IslandCoin White Paper - A Pen and Paper Cash System - How to Run a Blockchain on a Deserted Island&lt;/strong&gt;&lt;/a&gt; by Tal Kol -- &lt;em&gt;Motivation ++ Consensus ++ Transaction and Block Specification - Transaction format • Block format • Genesis block ++ References&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Blockchain (Lite) Crypto Hash Libraries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#ruby&#34;&gt;Ruby&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/#javascript&#34;&gt;JavaScript&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ruby&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;blockchain.lite&lt;/strong&gt; (github: &lt;a href=&#34;https://github.com/openblockchains/blockchain.lite.rb&#34;&gt;openblockchains/blockchain.lite.rb&lt;/a&gt;, gem: &lt;a href=&#34;https://rubygems.org/gems/blockchain-lite&#34;&gt;blockchain-lite&lt;/a&gt;) - build your own blockchain with crypto hashes - revolutionize the world with blockchains, blockchains, blockchains one block at a time&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;blockchain-lite&#39;&#xA;&#xA;b0 = Block.first( &#34;Genesis&#34; )&#xA;b1 = Block.next( b0, &#34;Transaction Data...&#34; )&#xA;b2 = Block.next( b1, &#34;Transaction Data......&#34; )&#xA;b3 = Block.next( b2, &#34;More Transaction Data...&#34; )&#xA;&#xA;blockchain = [b0, b1, b2, b3]&#xA;&#xA;pp blockchain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will pretty print (pp) something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[#&amp;lt;Block:0x1eed2a0&#xA;  @timestamp     = 1637-09-15 20:52:38,&#xA;  @data          = &#34;Genesis&#34;,&#xA;  @previous_hash = &#34;0000000000000000000000000000000000000000000000000000000000000000&#34;,&#xA;  @hash          = &#34;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&#34;&amp;gt;,&#xA; #&amp;lt;Block:0x1eec9a0&#xA;  @timestamp     = 1637-09-15 21:02:38,&#xA;  @data          = &#34;Transaction Data...&#34;,&#xA;  @hash          = &#34;eb8ecbf6d5870763ae246e37539d82e37052cb32f88bb8c59971f9978e437743&#34;,&#xA;  @previous_hash = &#34;edbd4e11e69bc399a9ccd8faaea44fb27410fe8e3023bb9462450a0a9c4caa1b&#34;&amp;gt;,&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;blockchain.lite&lt;/strong&gt; (github: &lt;a href=&#34;https://github.com/openblockchains/blockchain.lite.js&#34;&gt;openblockchains/blockchain.lite.js&lt;/a&gt;, npm: &lt;a href=&#34;https://www.npmjs.com/package/blockchain-lite&#34;&gt;blockchain-lite&lt;/a&gt;) - build your own blockchain with crypto hashes - revolutionize the world with blockchains, blockchains, blockchains one block at a time&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Blocks = require( &#34;blockchain-lite&#34; )&#xA;&#xA;// use basic block&#xA;let Block = Blocks.basic&#xA;&#xA;let b0 = Block.first( &#39;Genesis&#39; )&#xA;let b1 = Block.next( b0, &#39;Transaction Data...&#39; )&#xA;let b2 = Block.next( b1, &#39;Transaction Data......&#39; )&#xA;let b3 = Block.next( b2, &#39;More Transaction Data...&#39; )&#xA;&#xA;let blockchain = [b0, b1, b2, b3]&#xA;&#xA;console.log( blockchain )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will log something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ Block {&#xA;    timestamp:     2017-09-25 17:03:38,&#xA;    data:         &#39;Genesis&#39;,&#xA;    previousHash: &#39;0000000000000000000000000000000000000000000000000000000000000000&#39;,&#xA;    hash:         &#39;08f4fa71628c5bc6b430228738bc8c41afaf508ece0b1cf9c9cac53d02e11829&#39; },&#xA;  Block {&#xA;    timestamp:     2017-09-25 17:13:38,&#xA;    data:         &#39;Transaction Data...&#39;,&#xA;    previousHash: &#39;08f4fa71628c5bc6b430228738bc8c41afaf508ece0b1cf9c9cac53d02e11829&#39;,&#xA;    hash:         &#39;740a4aeb3441484c96d1e7f63d31b716220ccee3b6fe94547cae2afbb6010626&#39; },&#xA;  Block {&#xA;    timestamp:     2017-09-25 17:23:38,&#xA;    data:         &#39;Transaction Data......&#39;,&#xA;    previousHash: &#39;740a4aeb3441484c96d1e7f63d31b716220ccee3b6fe94547cae2afbb6010626&#39;,&#xA;    hash:         &#39;28b6892a069e2ff7f1c3128ab495d7cd9b9b1636a51a7f69db93a14b1ee6b1a7&#39; },&#xA;  Block {&#xA;    timestamp:     2017-09-25 17:33:38,&#xA;    data:         &#39;More Transaction Data...&#39;,&#xA;    previousHash: &#39;28b6892a069e2ff7f1c3128ab495d7cd9b9b1636a51a7f69db93a14b1ee6b1a7&#39;,&#xA;    hash:         &#39;4cc0329b2c0cb32e0451fa3179bd944d4cd0fcf410939172f979e9fd2aa9f5f3&#39; } ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Git, Git, Git - The Stupid Content Tracker with Crypto Hashes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Everything is local. Distributed is the new centralized.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/xkcd1597.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quotes - Blockchains and Git&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Yep, that&#39;s the joke. Nobody has been able to explain to me how the &#34;blockchain&#34; buzzword is significantly different to &#34;git repo&#34;. -- &lt;a href=&#34;https://twitter.com/yaakov_h/status/902659507255312384&#34;&gt;Yaakov&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;But if you said &#34;let&#39;s build a currency where all transactions are stored in a git repo&#34; you wouldn&#39;t be taken seriously for even 24 hrs. -- &lt;a href=&#34;https://twitter.com/yaakov_h/status/902659847224664064&#34;&gt;Yaakov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Soon explaining git like &#34;a git repo is like a blockchain with commits instead of blocks&#34;. -- &lt;a href=&#34;https://twitter.com/nicoberger/status/901776907418697729&#34;&gt;Nicolás Berger&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&#34;A local branch is like a state channel. It can be pushed and merged into the master blockchain at any moment.&#34; -- &lt;a href=&#34;https://twitter.com/nicoberger/status/901777571456614400&#34;&gt;Nicolás Berger&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The #Blockchain has changed the world. Here I make the argument that the #Blockchain is just like #git. -- &lt;a href=&#34;https://twitter.com/sjkelleyjr/status/901464041163341824&#34;&gt;Jackson Kelley&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;git merge [-m REF] [-g BLOB] --push&lt;/code&gt; Merge and push all signed commits to the blockchain. -- &lt;a href=&#34;https://twitter.com/git_commands/status/935574015015612416&#34;&gt;Git Commands&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Books&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learnenough.com/git-tutorial&#34;&gt;&lt;strong&gt;Learn Enough Git to Be Dangerous&lt;/strong&gt;&lt;/a&gt; by Michael Hartl - FREE (Online Version) -- &lt;em&gt;Getting started ++ Backing up and sharing ++ Intermediate workflow ++ Collaborating ++ Conclusion ++ Advanced setup&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book&#34;&gt;&lt;strong&gt;Pro Git&lt;/strong&gt;&lt;/a&gt; by Scott Chacon and Ben Straub, 2nd Edition, 2014 - FREE (Online Version) -- &lt;em&gt;Getting Started ++ Git Basics ++ Git Branching ++ Git on the Server ++ Distributed Git ++ GitHub ++ Git Tools ++ Customizing Git ++ Git and Other Systems ++ Git Internals ++ A1: Git in Other Environments ++ A2: Embedding Git in your Applications ++ A3: Git Commands&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Git gets easier once you get the basic idea that branches are homeomorphic endofunctors mapping submanifolds of a Hilbert space. -- Anonymous&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Open Distributed Databases on Git&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openfootball&#34;&gt;&lt;strong&gt;football.db&lt;/strong&gt;&lt;/a&gt; - open public domain football datasets (incl. clubs, national teams, leagues, match schedules, etc.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openmundi&#34;&gt;&lt;strong&gt;world.db&lt;/strong&gt;&lt;/a&gt; - open public domain world (country) datasets&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openbeer&#34;&gt;&lt;strong&gt;beer.db&lt;/strong&gt;&lt;/a&gt; - open public domain beer &amp;amp; brewery datasets&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Add a beer transaction to the #blockchain on #git and win a free Wiener Lager beer! Cheers. Prost. -- &lt;a href=&#34;https://twitter.com/austriacodes/status/907240018435088384&#34;&gt;Gerald Bauer @ Austria Codes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Open Distributed (Hyper) Ledger Books on Git&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitshilling/bitshilling&#34;&gt;&lt;strong&gt;Shilling (or Schilling)&lt;/strong&gt;&lt;/a&gt; - Shilling on the Blockchain! - Rock-Solid Alpine Dollar from Austria&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/TULIPS.md&#34;&gt;&lt;strong&gt;Tulips&lt;/strong&gt;&lt;/a&gt; - Tulips on the Blockchain! - Learn by Example from the Real World (Anno 1637) - Buy! Sell! Hold! Enjoy the Beauty of Admiral of Admirals, Semper Augustus, and More&lt;/p&gt; &#xA;&lt;h2&gt;Classic Tulip Mania&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;A period in the Dutch Golden Age during which contract prices for bulbs of the recently introduced tulip reached extraordinarily high levels and then dramatically collapsed in February 1637.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/tulipmania-ii.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quotes - Blockchains are the next Internets / Tulips&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;People who compare digital tokens to tulips are essentially saying digital tokens are a bubble backed by nothing but pure hype and speculation.&lt;/p&gt; &#xA; &lt;p&gt;What they fail to understand is that tulips come from dirt, not a blockchain.&lt;/p&gt; &#xA; &lt;p&gt;And as we all know, blockchain is possibly the best technological innovation since the internet. It will have a tremendous impact on global business and society in general. -- &lt;a href=&#34;http://tuliptoken.com&#34;&gt;TulipToken&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Books&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tulipomania: The Story of the World&#39;s Most Coveted Flower &amp;amp; the Extraordinary Passions It Aroused&lt;/strong&gt; by Mike Dash, 2001 -- &lt;em&gt;A Mania for Tulips ++ The Valley of Tien Shan ++ Within the Abode of Bliss ++ Stranger from the East ++ Clusius ++ Leiden ++ An Adornment to the Cleavage ++ The Tulip in the Mirror ++ Florists ++ Boom ++ At the Sign of the Golden Grape ++ The Orphans of Wouter Winkel ++ Bust ++ Goddess of Whores ++ At the Court of the Tulip King ++ Late Flowering&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tulipmania: Money, Honor, and Knowledge in the Dutch Golden Age&lt;/strong&gt; by Anne Goldgar, 2007 -- &lt;em&gt;Something Strange ++ Art &amp;amp; Flowers ++ Bloemisten ++ Grieving Money ++ Bad Faith ++ Cabbage Fever ++ Glossary ++ A Note on Money&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/tulipmania.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Breaking News: CryptoKitties (Yes, Cute Little Cartoon Cats) on the Blockchain!&lt;/h2&gt; &#xA;&lt;p&gt;Collectible. Breedable. Adorable.&lt;/p&gt; &#xA;&lt;p&gt;Collect and breed digital cats. Start meow. Buy! Sell! Hold!&lt;/p&gt; &#xA;&lt;p&gt;Learn more @ &lt;a href=&#34;https://cryptokitties.co&#34;&gt;cryptokitties.co&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/cryptokitties-top10-sales.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- note: changed pic; was:&#xA;   ![](i/cryptokitties.png)&#xA;  --&gt; &#xA;&lt;p&gt;Latest (and Greatest) Investment Opportunity!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Blockchain has unlocked the magic of digital scarcity, and combining that with the power of making the digital goods persistent gives them a potential value that is only limited by how much prestige a wealthy person might place on ownership of the item.&lt;/p&gt; &#xA; &lt;p&gt;-- &lt;a href=&#34;https://twitter.com/tokenizedcap/status/938460753589424128&#34;&gt;Justin Poirier&lt;/a&gt;‏&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All I want for Christmas is a CryptoKitty.&lt;/p&gt; &#xA; &lt;p&gt;-- &lt;a href=&#34;https://twitter.com/kaylaw/status/938590748655550464&#34;&gt;Kayla Williams&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I got a fever. And the only prescription is more CryptoKitties.&lt;/p&gt; &#xA; &lt;p&gt;-- &lt;a href=&#34;https://twitter.com/ceduardosalazar/status/938558630663634944&#34;&gt;Eduardo Salazar&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;My Gen 7 CryptoKitty #104375. The Future is Meow.&lt;/p&gt; &#xA; &lt;p&gt;-- &lt;a href=&#34;https://twitter.com/TheAnshulDhawan/status/938551642202324993&#34;&gt;Anshul Dhawan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/cryptokitties-genes01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Fabulous Persian Spock Gerbil Gold Cottoncandy - Extremely rare gen 5 swift virgin | 2.9 ETH&lt;/li&gt; &#xA;  &lt;li&gt;Rarity: 0.00264% Gen 5 JAGUAR FABULOUS GOLD DALI!! VIRGIN!&lt;/li&gt; &#xA;  &lt;li&gt;Rarity: 0.0015% Princess Bubblegum is now for sale! Gen 12 | Brisk | Virgin | Chartreux | Bubblegum | Otaku | Emeraldgreen | Saycheese | Mauveover | Spock - Starts ETH 20/Ends ETH 10&lt;/li&gt; &#xA;  &lt;li&gt;Gold ducat, Gen 5, Virgin, Swift. Very cheap&lt;/li&gt; &#xA;  &lt;li&gt;Cheap Gen 1 cute kittie with rare genes! Only 0.125 ETH&lt;/li&gt; &#xA;  &lt;li&gt;UNIQUE Virgin Peach Googly Gold Mauveover gen:2 cooldown:1 0.87992% RARE&lt;/li&gt; &#xA;  &lt;li&gt;SUPER CHEAP: Gerbil, Ragdoll, Scarlet, Chestnut, Cotton Candy!!! 0.02 ETH (~$14)&lt;/li&gt; &#xA;  &lt;li&gt;I&#39;m giving away a Gen 1 FAST Gold for free...&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;-- &lt;a href=&#34;https://www.reddit.com/r/CryptoKittiesMarket&#34;&gt;CrypoKittiesMarket&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Awesome CryptoKitties (and CryptoCopycats)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/cryptokitties-modernart-paintings.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection about Awesome CryptoKitties (Yes, Cute Little Cartoon Cats) on the Blockchain! and CryptoCopycats - digital collectibles secured on a distributed public databases w/ crypto hashes. Are CryptoPuppies the new CryptoKitties? Learn by Example from the Real World (Anno 2017) - Buy! Sell! Hodl!&lt;/p&gt; &#xA;&lt;p&gt;More @ &lt;a href=&#34;https://github.com/cryptocopycats/awesome-cryptokitties&#34;&gt;cryptocopycats/awesome-cryptokitties&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openblockchains/awesome-blockchains/master/i/cryptokitties-modernart-paintings-iii.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Events, Meetups, Orgs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Revolutionize the world one country at a time. Blockchainers of the world, unite!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/austriacodes/blockchain-austria&#34;&gt;&lt;strong&gt;Blockchain Austria • Blockkette Österreich&lt;/strong&gt;&lt;/a&gt; -- distributed centralized page for blockchain meetups &amp;amp; orgs in Austria (Central Europe)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Awesome Awesomeness&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;A curated list of awesome lists.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Xel/Blockchain-stuff&#34;&gt;&lt;strong&gt;Blockchain Stuff&lt;/strong&gt;&lt;/a&gt; -- a curated list of blockchain and general cryptocurrency resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://roadmap.sh/blockchain&#34;&gt;&lt;strong&gt;Blockchain Roadmap&lt;/strong&gt;&lt;/a&gt; -- a step-by-step roadmap / guide to become a blockchain programmer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/igorbarinov/awesome-blockchain&#34;&gt;&lt;strong&gt;Awesome Blockchain&lt;/strong&gt;&lt;/a&gt; by Igor Barinov et al -- a curated list of the bitcoin blockchain services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imbaniac/awesome-blockchain&#34;&gt;&lt;strong&gt;Awesome Blockchain&lt;/strong&gt;&lt;/a&gt; by Tim Reznich et al -- a curated list of blockchain services and exchanges&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/istinspring/awesome-blockchain&#34;&gt;&lt;strong&gt;Awesome Blockchain&lt;/strong&gt;&lt;/a&gt; by &lt;code&gt;istinspring&lt;/code&gt; et al -- a curated list of awesome projects and services based on blockchain technology&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kennethreitz/awesome-coins&#34;&gt;&lt;strong&gt;Awesome Coins&lt;/strong&gt;&lt;/a&gt; by Kenneth Reitz et al -- a guide to crypto-currencies and their algos&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openblockchains/awesome-cryptokitties&#34;&gt;&lt;strong&gt;Awesome CryptoKitties (and CryptoCopycats)&lt;/strong&gt;&lt;/a&gt; by Gerald Bauer et al -- a curated list about the awesome crypto kitties and copycats&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dictcp/awesome-git&#34;&gt;&lt;strong&gt;Awesome Git&lt;/strong&gt;&lt;/a&gt; by Dick Tang et al -- a curated list of amazingly awesome Git tools, resources and shiny things&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;&lt;strong&gt;Awesome&lt;/strong&gt;&lt;/a&gt; by Sindre Sorhus et al -- a curated list of awesome lists&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Meta&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://publicdomainworks.github.io/buttons/zero88x31.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The awesome list is dedicated to the public domain. Use it as you please with no restrictions whatsoever.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bluetwin/rubybox</title>
    <updated>2023-06-26T01:46:07Z</updated>
    <id>tag:github.com,2023-06-26:/bluetwin/rubybox</id>
    <link href="https://github.com/bluetwin/rubybox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby on Rails port of dropbox.com&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>