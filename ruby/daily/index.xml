<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-12T01:37:58Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>caley-io/caley</title>
    <updated>2024-02-12T01:37:58Z</updated>
    <id>tag:github.com,2024-02-12:/caley-io/caley</id>
    <link href="https://github.com/caley-io/caley" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A new era for emails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Caley.io A New Era for Emails&lt;/h1&gt; &#xA;&lt;img width=&#34;2310&#34; alt=&#34;Screenshot 2023-12-29 at 14 33 35&#34; src=&#34;https://github.com/caley-io/caley/assets/15782436/274f1430-8eb5-4650-98f2-debdfec4a8e9&#34;&gt; &#xA;&lt;p&gt;&lt;b&gt;Get involved: &lt;a href=&#34;https://discord.gg/4B6QWxv2&#34;&gt;Discord&lt;/a&gt; • &lt;a href=&#34;https://caley.io&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://github.com/caley-io/caley/issues&#34;&gt;Issues&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;The Product&lt;/h2&gt; &#xA;&lt;p&gt;Caley.io reimagines your inbox with a fusion of AI brilliance and unmatched efficiency. Think smarter analytics, streamlined conversations, and effortless newsletter management all in one sleek package. More than an email client, it&#39;s your unfair advantage.&lt;/p&gt; &#xA;&lt;h2&gt;Local Development Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby &amp;gt;3 (see &lt;code&gt;Gemfile&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL &amp;gt;9.3 (ideally, latest stable version)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After cloning the repo, the basic setup commands are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd caley&#xA;cp .env.example .env&#xA;bundle install&#xA;rails db:setup&#xA;bin/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; to see the app. You can use the following credentials to log in (generated by DB seed):&lt;/p&gt; &#xA;&lt;p&gt;Email: &lt;a href=&#34;mailto:user@caley.local&#34;&gt;user@caley.local&lt;/a&gt; Password: password&lt;/p&gt; &#xA;&lt;p&gt;For further instructions, see guides below.&lt;/p&gt; &#xA;&lt;h3&gt;Setup Guides&lt;/h3&gt; &#xA;&lt;h4&gt;Dev Container (optional)&lt;/h4&gt; &#xA;&lt;p&gt;This is 100% optional and meant for devs who don&#39;t want to worry about installing requirements manually for their platform. You can follow &lt;a href=&#34;https://code.visualstudio.com/docs/devcontainers/containers&#34;&gt;this guide&lt;/a&gt; to learn more about Dev Containers.&lt;/p&gt; &#xA;&lt;h4&gt;Mac&lt;/h4&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://github.com/caley-io/caley/wiki/Mac-Dev-Setup-Guide&#34;&gt;Mac dev setup guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://github.com/caley-io/caley/wiki/Linux-Dev-Setup-Guide&#34;&gt;Linux dev setup guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://github.com/caley-io/caley/wiki/Windows-Dev-Setup-Guide&#34;&gt;Windows dev setup guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Testing Emails&lt;/h3&gt; &#xA;&lt;p&gt;In development, we use &lt;code&gt;letter_opener&lt;/code&gt; to automatically open emails in your browser. When an email sends locally, a new browser tab will open with a preview.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Before contributing, you&#39;ll likely find it helpful to &lt;a href=&#34;https://github.com/caley-io/caley/wiki&#34;&gt;understand context and general vision/direction&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve done that, please visit our &lt;a href=&#34;https://github.com/caley-io/caley/raw/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to get started!&lt;/p&gt; &#xA;&lt;h2&gt;Self Hosting&lt;/h2&gt; &#xA;&lt;p&gt;Our long term goal is to make self-hosting as easy as possible. That said, during these early stages of building the product, we are focusing our efforts on development.&lt;/p&gt; &#xA;&lt;p&gt;We will update this section as we get closer to an initial release.&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://github.com/caley-io/caley/wiki/Self-Hosting-Setup-Guide&#34;&gt;guide on self hosting here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Repo Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/df98a3d367e25c3052772e6c00022da9cb393167.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright &amp;amp; license&lt;/h2&gt; &#xA;&lt;p&gt;Caley.io is distributed under an &lt;a href=&#34;https://github.com/caley-io/caley/raw/main/LICENSE&#34;&gt;AGPLv3 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kobaltz/mission_control-servers</title>
    <updated>2024-02-12T01:37:58Z</updated>
    <id>tag:github.com,2024-02-12:/kobaltz/mission_control-servers</id>
    <link href="https://github.com/kobaltz/mission_control-servers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monitor for Ruby on Rails applications&#39; server resources&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MissionControl::Servers&lt;/h1&gt; &#xA;&lt;p&gt;The goal of MissionControl::Servers is to provide a simple monitoring of the resources on your Ruby on Rails application. You can either use this directly on the projects or create a separate Ruby on Rails application to mount this in.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;bundle add &#34;mission_control-servers&#34;&#xA;bin/rails mission_control_servers:install:migrations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a mount to your &lt;code&gt;config/routes.rb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;mount MissionControl::Servers::Engine =&amp;gt; &#34;/mission_control-servers&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Within your application, you can make some configuration changes in how the gem operates. Below are the default configuration options. You can override these options by creating an initializer file.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you&#39;re wanting to use MissionControl::Servers in a single project, then there is no need to have the ability to create multiple projects. You can set the &lt;code&gt;single_project_mode&lt;/code&gt; to true which will hide the ability to create new projects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# config/initializers/mission_control_servers.rb&#xA;MissionControl::Servers.configure do |config|&#xA;  config.single_project_mode = true&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Create a project. Once you create a project, you can easily copy the script specific to that project.&lt;/p&gt; &#xA;&lt;p&gt;Install a script which captures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hostname&lt;/li&gt; &#xA; &lt;li&gt;CPU Usage&lt;/li&gt; &#xA; &lt;li&gt;Memory Usage&lt;/li&gt; &#xA; &lt;li&gt;Free Memory&lt;/li&gt; &#xA; &lt;li&gt;Free Disk Space&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The data will be retained for 7 days automatically. After 7 days, the data will start truncating itself so that it doesn&#39;t take up much disk space within the database.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to put the dashboard on something like a Raspberry Pi, you can use the &lt;code&gt;dark&lt;/code&gt; parameter to change the dashboard to a dark mode automatically. This will hopefully help provide a &#34;hands off&#34; approach to setting up the kiosk mode.&lt;/p&gt; &#xA;&lt;h2&gt;URL Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Dark Mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;http://localhost:3000/mission_control-servers/projects?dark=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interval&lt;/h3&gt; &#xA;&lt;p&gt;You can also adjust the interval when you have multiple servers on a project. The default setting is 10 seconds between servers, but this can be adjusted with an URL Parameter. The &lt;code&gt;interval&lt;/code&gt; value is entered in seconds.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;http://localhost:3000/mission_control-servers/projects?interval=10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Combo History&lt;/h3&gt; &#xA;&lt;p&gt;By default, the CPU Usage and Memory Usage Line Chart will be combined, but you can add the URL Parameter &lt;code&gt;?combo=false&lt;/code&gt; to toggle this behavior. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;http://localhost:3000/mission_control-servers/projects?combo=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kobaltz/mission_control-servers/assets/635114/6070efe4-0c1a-4e61-b604-b5929a050009&#34; alt=&#34;ScreenShot-2024-02-10-08-55-20&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Combining URL Parameters&lt;/h3&gt; &#xA;&lt;p&gt;If you need to change multiple settings, you can chain these in the URL Parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;http://localhost:3000/mission_control-servers/projects?interval=30&amp;amp;dark=true&amp;amp;combo=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Protecting the Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;You can protect the dashboard by using a constraint. This will allow you to only allow certain users to access the dashboard. However, the ingress still needs to be accessible by the servers which are being monitored. In order to install the script on the servers, you also have to expose the endpoint for the script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Rails.application.routes.draw do&#xA;  get &#39;/mission_control-servers/projects/:project_id/script&#39;, to: &#39;mission_control/servers/scripts#show&#39;&#xA;  post &#39;/mission_control-servers/projects/:project_id/ingress&#39;, to: &#39;mission_control/servers/ingresses#create&#39;&#xA;  &#xA;  constraints AdminConstraint do&#xA;    mount MissionControl::Servers::Engine =&amp;gt; &#34;/mission_control-servers&#34;&#xA;  end&#xA;  &#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, we have directly given a path to the ingress, but locked down everything else to the AdminConstraint. The AdminConstraint takes in the request and calls the &lt;code&gt;matches?&lt;/code&gt; method. If the method returns true, then the routes will be defined for that request.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class AdminConstraint&#xA;  def self.matches?(request)&#xA;    true&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can see a demo of the application at &lt;a href=&#34;https://dashboard.railsenv.com/&#34;&gt;https://dashboard.railsenv.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Simple Installation&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kobaltz/mission_control-servers/assets/635114/78f96ff6-ac14-4798-96a5-59a59eff574c&#34; alt=&#34;ScreenShot-2024-02-06-08-50-39&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;View all of your projects&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kobaltz/mission_control-servers/assets/635114/6f524e6e-1d4d-4587-9949-f1f3c57724c8&#34; alt=&#34;ScreenShot-2024-02-06-21-34-07&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detailed Dashboard updates automatically&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kobaltz/mission_control-servers/assets/635114/b5c3cc44-b1b2-46ec-8b84-1290358e5ae3&#34; alt=&#34;ScreenShot-2024-02-10-00-26-22&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dark Mode support added in v0.1.4 (you can set this with a URL Param dark=true)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kobaltz/mission_control-servers/assets/635114/f09652a9-db88-4cf9-a834-e6c85c7e785a&#34; alt=&#34;ScreenShot-2024-02-10-08-50-24&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kobaltz/mission_control-servers/assets/635114/12dc2e6b-b491-42f2-b53e-61e78088e22d&#34; alt=&#34;ScreenShot-2024-02-10-00-25-48&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The gem is available as open source under the terms of the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jameswritescode/atheme-ruby</title>
    <updated>2024-02-12T01:37:58Z</updated>
    <id>tag:github.com,2024-02-12:/jameswritescode/atheme-ruby</id>
    <link href="https://github.com/jameswritescode/atheme-ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A ruby way to access the Atheme IRC Services XMLRPC interface.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Atheme Ruby&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://badge.fury.io/rb/atheme&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/atheme.png&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/jameswritescode/atheme-ruby&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/jameswritescode/atheme-ruby.png&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gemnasium.com/jameswritescode/atheme-ruby&#34;&gt;&lt;img src=&#34;https://gemnasium.com/jameswritescode/atheme-ruby.png&#34; alt=&#34;Dependency Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A ruby way to access the &lt;a href=&#34;http://www.atheme.net&#34;&gt;Atheme IRC Services&lt;/a&gt; XMLRPC interface.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gem &#39;atheme&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install it yourself as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install atheme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You need to be using &lt;a href=&#34;http://www.atheme.net&#34;&gt;Atheme IRC Services&lt;/a&gt; with httpd and XMLRPC enabled.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Atheme.configure hostname: &#39;example.com&#39;, port: 1234, protocol: &#39;http&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional: &lt;code&gt;protocol&lt;/code&gt; (default http)&lt;/p&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;cookie = Atheme.login(&#39;nickname&#39;, &#39;password&#39;) # Returns an authcookie&#xA;&#xA;Atheme.set_user(cookie, &#39;nickname&#39;, &#39;ip.add.re.ss&#39;) # Sets the users info for commands&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Services commands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Atheme::ChanServ.info &#39;#channel&#39;&#xA;Atheme::NickServ.set &#39;email&#39;, &#39;james@example.com&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any command can be used that the user has access to use.&lt;/p&gt; &#xA;&lt;p&gt;Command format: &lt;code&gt;Atheme::ServiceName.command &#39;param&#39;, &#39;param&#39;, ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see supported services &lt;a href=&#34;https://github.com/jameswritescode/atheme-ruby/raw/master/lib/atheme.rb#L24&#34;&gt;go here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each command will return an object of the &lt;code&gt;Atheme::Service&lt;/code&gt; that is used. All will always have &lt;code&gt;#raw_services_output&lt;/code&gt; that has the raw services output.&lt;/p&gt; &#xA;&lt;p&gt;Some commands will return an object with additional methods on them depending if a parser exists for that command. &lt;a href=&#34;https://github.com/jameswritescode/atheme-ruby/tree/master/lib/atheme/parsers&#34;&gt;Parsers can be seen here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;In order to be able to generate VCR cassettes properly when testing (minus those that already exist!) you must run a local IRC server with Atheme with httpd and XMLRPC enabled (listening on &lt;code&gt;localhost:1234&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork it&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/my-new-feature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Create new Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>