<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-10T01:45:52Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rails/mrsk</title>
    <updated>2023-01-10T01:45:52Z</updated>
    <id>tag:github.com,2023-01-10:/rails/mrsk</id>
    <link href="https://github.com/rails/mrsk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Deploy Docker containers with zero downtime to any host&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MRSK&lt;/h1&gt; &#xA;&lt;p&gt;MRSK ships zero-downtime deploys of Rails apps packed as containers to any host. It uses the dynamic reverse-proxy Traefik to hold requests while the new application container is started and the old one is wound down. It works across multiple hosts at the same time, using SSHKit to execute commands.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the gem with &lt;code&gt;bundle add mrsk&lt;/code&gt;, then run &lt;code&gt;rake mrsk:init&lt;/code&gt;, and then edit the new file in &lt;code&gt;config/deploy.yml&lt;/code&gt; to use the proper service name, image reference, servers to deploy on, and so on. It could look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;service: hey&#xA;image: 37s/hey&#xA;servers:&#xA;  - xxx.xxx.xxx.xxx&#xA;  - xxx.xxx.xxx.xxx&#xA;env:&#xA;  DATABASE_URL: mysql2://db1/hey_production/&#xA;  REDIS_URL: redis://redis1:6379/1&#xA;registry:&#xA;  server: registry.digitalocean.com&#xA;  username: &amp;lt;%= Rails.application.credentials.registry[&#34;username&#34;] %&amp;gt;&#xA;  password: &amp;lt;%= Rails.application.credentials.registry[&#34;password&#34;] %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then ensure your encrypted credentials have the registry username + password by editing them with &lt;code&gt;rails credentials:edit&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;registry:&#xA;  username: real-user-name&#xA;  password: real-password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you&#39;re ready to deploy a multi-arch image (FIXME: currently you need to manually run &lt;code&gt;docker buildx create --use&lt;/code&gt; once first):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake mrsk:deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Log into the registry both locally and remotely&lt;/li&gt; &#xA; &lt;li&gt;Build the image using the standard Dockerfile in the root of the application.&lt;/li&gt; &#xA; &lt;li&gt;Push the image to the registry.&lt;/li&gt; &#xA; &lt;li&gt;Pull the image from the registry on the servers.&lt;/li&gt; &#xA; &lt;li&gt;Ensure Traefik is running and accepting traffic on port 80.&lt;/li&gt; &#xA; &lt;li&gt;Stop any containers running a previous versions of the app.&lt;/li&gt; &#xA; &lt;li&gt;Start a new container with the version of the app that matches the current git version hash.&lt;/li&gt; &#xA; &lt;li&gt;Prune unused images and stopped containers to ensure servers don&#39;t fill up.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Voila! All the servers are now serving the app on port 80. If you&#39;re just running a single server, you&#39;re ready to go. If you&#39;re running multiple servers, you need to put a load balancer in front of them.&lt;/p&gt; &#xA;&lt;h2&gt;Operations&lt;/h2&gt; &#xA;&lt;h3&gt;Executing commands&lt;/h3&gt; &#xA;&lt;p&gt;If you need to execute commands inside the Rails containers, you can use &lt;code&gt;rake mrsk:app:exec&lt;/code&gt;, &lt;code&gt;rake mrsk:app:exec:once&lt;/code&gt;, &lt;code&gt;rake mrsk:app:exec:rails&lt;/code&gt;, and &lt;code&gt;rake mrsk:app:exec:once:rails&lt;/code&gt;. Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Runs command on all servers&#xA;rake mrsk:app:exec CMD=&#39;ruby -v&#39;&#xA;App Host: xxx.xxx.xxx.xxx&#xA;ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]&#xA;&#xA;App Host: xxx.xxx.xxx.xxx&#xA;ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]&#xA;&#xA;# Runs command on first server&#xA;rake mrsk:app:exec:once CMD=&#39;cat .ruby-version&#39;&#xA;3.1.3&#xA;&#xA;# Runs Rails command on all servers&#xA;rake mrsk:app:exec:rails CMD=about&#xA;App Host: xxx.xxx.xxx.xxx&#xA;About your application&#39;s environment&#xA;Rails version             7.1.0.alpha&#xA;Ruby version              ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]&#xA;RubyGems version          3.3.26&#xA;Rack version              2.2.5&#xA;Middleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::Callbacks, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper&#xA;Application root          /rails&#xA;Environment               production&#xA;Database adapter          sqlite3&#xA;Database schema version   20221231233303&#xA;&#xA;App Host: xxx.xxx.xxx.xxx&#xA;About your application&#39;s environment&#xA;Rails version             7.1.0.alpha&#xA;Ruby version              ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]&#xA;RubyGems version          3.3.26&#xA;Rack version              2.2.5&#xA;Middleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::Callbacks, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper&#xA;Application root          /rails&#xA;Environment               production&#xA;Database adapter          sqlite3&#xA;Database schema version   20221231233303&#xA;&#xA;# Runs Rails command on first server&#xA;rake mrsk:app:exec:once:rails CMD=&#39;db:version&#39;&#xA;database: storage/production.sqlite3&#xA;Current version: 20221231233303&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inspecting&lt;/h3&gt; &#xA;&lt;p&gt;You can see the state of your servers by running &lt;code&gt;rake mrsk:info&lt;/code&gt;. It&#39;ll show something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Traefik Host: xxx.xxx.xxx.xxx&#xA;CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES&#xA;6195b2a28c81   traefik   &#34;/entrypoint.sh --pr…&#34;   30 minutes ago   Up 19 minutes   0.0.0.0:80-&amp;gt;80/tcp, :::80-&amp;gt;80/tcp   traefik&#xA;&#xA;Traefik Host: 164.92.105.119&#xA;CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES&#xA;de14a335d152   traefik   &#34;/entrypoint.sh --pr…&#34;   30 minutes ago   Up 19 minutes   0.0.0.0:80-&amp;gt;80/tcp, :::80-&amp;gt;80/tcp   traefik&#xA;&#xA;App Host: 164.90.145.60&#xA;CONTAINER ID   IMAGE                                                                         COMMAND                  CREATED          STATUS          PORTS      NAMES&#xA;badb1aa51db3   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   &#34;/rails/bin/docker-e…&#34;   13 minutes ago   Up 13 minutes   3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123&#xA;&#xA;App Host: 164.92.105.119&#xA;CONTAINER ID   IMAGE                                                                         COMMAND                  CREATED          STATUS          PORTS      NAMES&#xA;1d3c91ed1f55   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   &#34;/rails/bin/docker-e…&#34;   13 minutes ago   Up 13 minutes   3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also see just info for app containers with &lt;code&gt;rake mrsk:app:info&lt;/code&gt; or just for Traefik with &lt;code&gt;rake mrsk:traefik:info&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Rollback&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve discovered a bad deploy, you can quickly rollback by reactivating the old, paused container image. You can see what old containers are available for rollback by running &lt;code&gt;rake mrsk:app:containers&lt;/code&gt;. It&#39;ll give you a presentation similar to &lt;code&gt;rake mrsk:app:info&lt;/code&gt;, but include all the old containers as well. Showing something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;App Host: 164.92.105.119&#xA;CONTAINER ID   IMAGE                                                                         COMMAND                  CREATED          STATUS                      PORTS      NAMES&#xA;1d3c91ed1f51   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   &#34;/rails/bin/docker-e…&#34;   19 minutes ago   Up 19 minutes               3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123&#xA;539f26b28369   registry.digitalocean.com/user/app:e5d9d7c2b898289dfbc5f7f1334140d984eedae4   &#34;/rails/bin/docker-e…&#34;   31 minutes ago   Exited (1) 27 minutes ago              chat-e5d9d7c2b898289dfbc5f7f1334140d984eedae4&#xA;&#xA;App Host: 164.90.145.60&#xA;CONTAINER ID   IMAGE                                                                         COMMAND                  CREATED          STATUS                      PORTS      NAMES&#xA;badb1aa51db4   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   &#34;/rails/bin/docker-e…&#34;   19 minutes ago   Up 19 minutes               3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123&#xA;6f170d1172ae   registry.digitalocean.com/user/app:e5d9d7c2b898289dfbc5f7f1334140d984eedae4   &#34;/rails/bin/docker-e…&#34;   31 minutes ago   Exited (1) 27 minutes ago              chat-e5d9d7c2b898289dfbc5f7f1334140d984eedae4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the example above, we can see that &lt;code&gt;e5d9d7c2b898289dfbc5f7f1334140d984eedae4&lt;/code&gt; was the last version, so it&#39;s available as a rollback target. We can perform this rollback by running &lt;code&gt;rake mrsk:rollback VERSION=e5d9d7c2b898289dfbc5f7f1334140d984eedae4&lt;/code&gt;. That&#39;ll stop &lt;code&gt;6ef8a6a84c525b123c5245345a8483f86d05a123&lt;/code&gt; and then start &lt;code&gt;e5d9d7c2b898289dfbc5f7f1334140d984eedae4&lt;/code&gt;. Because the old container is still available, this is very quick. Nothing to download from the registry.&lt;/p&gt; &#xA;&lt;p&gt;Note that by default old containers are pruned after 3 days when you run &lt;code&gt;rake mrsk:deploy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Removing&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to remove the entire application, including Traefik, containers, images, and registry session, you can run &lt;code&gt;rake mrsk:remove&lt;/code&gt;. This will leave the servers clean.&lt;/p&gt; &#xA;&lt;h2&gt;Stage of development&lt;/h2&gt; &#xA;&lt;p&gt;This is alpha software. Lots of stuff is missing. Here are some of the areas we seek to improve:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adapterize commands to work with Podman and other container runners&lt;/li&gt; &#xA; &lt;li&gt;Possibly switching to a bin/mrsk command rather than raw rake&lt;/li&gt; &#xA; &lt;li&gt;Integrate with cloud CI pipelines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MRSK is released under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DataDog/chef-datadog</title>
    <updated>2023-01-10T01:45:52Z</updated>
    <id>tag:github.com,2023-01-10:/DataDog/chef-datadog</id>
    <link href="https://github.com/DataDog/chef-datadog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chef cookbook for Datadog Agent &amp; Integrations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datadog Chef Cookbook&lt;/h1&gt; &#xA;&lt;p&gt;The Datadog Chef recipes are used to deploy Datadog&#39;s components and configuration automatically. The cookbook includes support for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Datadog Agent v7.x (default)&lt;/li&gt; &#xA; &lt;li&gt;Datadog Agent v6.x&lt;/li&gt; &#xA; &lt;li&gt;Datadog Agent v5.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This page may discuss features that are not available for your selected version. Check the README of the git tag or gem version for your version&#39;s documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;The Datadog Chef cookbook is compatible with &lt;code&gt;chef-client&lt;/code&gt; &amp;gt;= 12.7. If you need support for Chef &amp;lt; 12.7, use a &lt;a href=&#34;https://github.com/DataDog/chef-datadog/releases/tag/v2.18.0&#34;&gt;release 2.x of the cookbook&lt;/a&gt;. See the &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h4&gt;Platforms&lt;/h4&gt; &#xA;&lt;p&gt;The following platforms are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AlmaLinux (requires Chef 16 &amp;gt;= 16.10.8 or Chef &amp;gt;= 17.0.69)&lt;/li&gt; &#xA; &lt;li&gt;Amazon Linux&lt;/li&gt; &#xA; &lt;li&gt;CentOS&lt;/li&gt; &#xA; &lt;li&gt;Debian&lt;/li&gt; &#xA; &lt;li&gt;RedHat (RHEL 8 requires Chef &amp;gt;= 15)&lt;/li&gt; &#xA; &lt;li&gt;Rocky (requires Chef 16 &amp;gt;= 16.17.4 or Chef &amp;gt;= 17.1.35)&lt;/li&gt; &#xA; &lt;li&gt;Scientific Linux&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;SUSE (requires Chef &amp;gt;= 13.3)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Cookbooks&lt;/h4&gt; &#xA;&lt;p&gt;The following Opscode cookbooks are dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;apt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chef_handler&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yum&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;apt&lt;/code&gt; cookbook v7.1+ is needed to install the Agent on Debian 9+.&lt;/p&gt; &#xA;&lt;h4&gt;Chef&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chef 12 users&lt;/strong&gt;: Depending on your version of Chef 12, additional dependency constraints may apply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Chef &amp;lt; 12.14&#xA;depends &#39;yum&#39;, &#39;&amp;lt; 5.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# Chef &amp;lt; 12.9&#xA;depends &#39;apt&#39;, &#39;&amp;lt; 6.0.0&#39;&#xA;depends &#39;yum&#39;, &#39;&amp;lt; 5.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chef 13 users&lt;/strong&gt;: With Chef 13 and &lt;code&gt;chef_handler&lt;/code&gt; 1.x, you may have trouble using the &lt;code&gt;dd-handler&lt;/code&gt; recipe. The known workaround is to update your dependency to &lt;code&gt;chef_handler&lt;/code&gt; &amp;gt;= 2.1.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the cookbook to your Chef server with &lt;a href=&#34;https://docs.chef.io/berkshelf/&#34;&gt;Berkshelf&lt;/a&gt; or &lt;a href=&#34;https://docs.chef.io/knife/&#34;&gt;Knife&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# Berksfile&#xA;cookbook &#39;datadog&#39;, &#39;~&amp;gt; 4.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Knife&#xA;knife cookbook site install datadog&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/chef-datadog/main/#datadog-attributes&#34;&gt;Datadog-specific attributes&lt;/a&gt; in a role, environment, or another recipe:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;node.default[&#39;datadog&#39;][&#39;api_key&#39;] = &#34;&amp;lt;YOUR_DD_API_KEY&amp;gt;&#34;&#xA;&#xA;node.default[&#39;datadog&#39;][&#39;application_key&#39;] = &#34;&amp;lt;YOUR_DD_APP_KEY&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Upload the updated cookbook to your Chef server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;berks upload&#xA;# or&#xA;knife cookbook upload datadog&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After uploading, add the cookbook to your node&#39;s &lt;code&gt;run_list&lt;/code&gt; or &lt;code&gt;role&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&#34;run_list&#34;: [&#xA;  &#34;recipe[datadog::dd-agent]&#34;&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait for the next scheduled &lt;code&gt;chef-client&lt;/code&gt; run or trigger it manually.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Dockerized environment&lt;/h3&gt; &#xA;&lt;p&gt;To build a Docker environment, use the files under &lt;code&gt;docker_test_env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd docker_test_env&#xA;docker build -t chef-datadog-container .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the container use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v /dev/vboxdrv:/dev/vboxdrv --privileged=true chef-datadog-container&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then attach a console to the container or use the VScode remote-container feature to develop inside the container.&lt;/p&gt; &#xA;&lt;h4&gt;Datadog attributes&lt;/h4&gt; &#xA;&lt;p&gt;The following methods are available for adding your &lt;a href=&#34;https://app.datadoghq.com/organization-settings/api-keys&#34;&gt;Datadog API and application keys&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As node attributes with an &lt;code&gt;environment&lt;/code&gt; or &lt;code&gt;role&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;As node attributes by declaring the keys in another cookbook at a higher precedence level.&lt;/li&gt; &#xA; &lt;li&gt;In the node &lt;code&gt;run_state&lt;/code&gt; by setting &lt;code&gt;node.run_state[&#39;datadog&#39;][&#39;api_key&#39;]&lt;/code&gt; in another cookbook preceding Datadog&#39;s recipes in the &lt;code&gt;run_list&lt;/code&gt;. This approach does not store the credential in clear text on the Chef Server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When using the run state to store your API and application keys, set them at compile time before &lt;code&gt;datadog::dd-handler&lt;/code&gt; in the run list.&lt;/p&gt; &#xA;&lt;h4&gt;Extra configuration&lt;/h4&gt; &#xA;&lt;p&gt;To add additional elements to the Agent configuration file (typically &lt;code&gt;datadog.yaml&lt;/code&gt;) that are not directly available as attributes of the cookbook, use the &lt;code&gt;node[&#39;datadog&#39;][&#39;extra_config&#39;]&lt;/code&gt; attribute. This is a hash attribute, which is marshaled into the configuration file accordingly.&lt;/p&gt; &#xA;&lt;h5&gt;Examples&lt;/h5&gt; &#xA;&lt;p&gt;The following code sets the field &lt;code&gt;secret_backend_command&lt;/code&gt; in the configuration file &lt;code&gt;datadog.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt; default_attributes(&#xA;   &#39;datadog&#39; =&amp;gt; {&#xA;     &#39;extra_config&#39; =&amp;gt; {&#xA;       &#39;secret_backend_command&#39; =&amp;gt; &#39;/sbin/local-secrets&#39;&#xA;     }&#xA;   }&#xA; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;secret_backend_command&lt;/code&gt; can also be set using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;default[&#39;datadog&#39;][&#39;extra_config&#39;][&#39;secret_backend_command&#39;] = &#39;/sbin/local-secrets&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For nested attributes, use object syntax. The following code sets the field &lt;code&gt;logs_config&lt;/code&gt; in the configuration file &lt;code&gt;datadog.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;default[&#39;datadog&#39;][&#39;extra_config&#39;][&#39;logs_config&#39;] = { &#39;use_port_443&#39; =&amp;gt; true }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AWS OpsWorks Chef deployment&lt;/h4&gt; &#xA;&lt;p&gt;Follow the steps below to deploy the Datadog Agent with Chef on AWS OpsWorks:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add Chef custom JSON:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;datadog&#34;:{&#34;agent_major_version&#34;: 7, &#34;api_key&#34;: &#34;&amp;lt;API_KEY&amp;gt;&#34;, &#34;application_key&#34;: &#34;&amp;lt;APP_KEY&amp;gt;&#34;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Include the recipe in the &lt;code&gt;install-lifecycle&lt;/code&gt; recipe:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;include_recipe &#39;::dd-agent&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;p&gt;Enable Agent integrations by including the &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/chef-datadog/main/#recipes&#34;&gt;recipe&lt;/a&gt; and configuration details in your role’s run-list and attributes. &lt;strong&gt;Note&lt;/strong&gt;: You can use the &lt;code&gt;datadog_monitor&lt;/code&gt; resource for enabling Agent integrations without a recipe.&lt;/p&gt; &#xA;&lt;p&gt;Associate your recipes with the desired &lt;code&gt;roles&lt;/code&gt;, for example &lt;code&gt;role:chef-client&lt;/code&gt; should contain &lt;code&gt;datadog::dd-handler&lt;/code&gt; and &lt;code&gt;role:base&lt;/code&gt; should start the Agent with &lt;code&gt;datadog::dd-agent&lt;/code&gt;. Below is an example role with the &lt;code&gt;dd-handler&lt;/code&gt;, &lt;code&gt;dd-agent&lt;/code&gt;, and &lt;code&gt;mongo&lt;/code&gt; recipes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;name &#39;example&#39;&#xA;description &#39;Example role using DataDog&#39;&#xA;&#xA;default_attributes(&#xA;  &#39;datadog&#39; =&amp;gt; {&#xA;    &#39;agent_major_version&#39; =&amp;gt; 7,&#xA;    &#39;api_key&#39; =&amp;gt; &#39;&amp;lt;YOUR_DD_API_KEY&amp;gt;&#39;,&#xA;    &#39;application_key&#39; =&amp;gt; &#39;&amp;lt;YOUR_DD_APP_KEY&amp;gt;&#39;,&#xA;    &#39;mongo&#39; =&amp;gt; {&#xA;      &#39;instances&#39; =&amp;gt; [&#xA;        {&#39;host&#39; =&amp;gt; &#39;localhost&#39;, &#39;port&#39; =&amp;gt; &#39;27017&#39;}&#xA;      ]&#xA;    }&#xA;  }&#xA;)&#xA;&#xA;run_list %w(&#xA;  recipe[datadog::dd-agent]&#xA;  recipe[datadog::dd-handler]&#xA;  recipe[datadog::mongo]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;data_bags&lt;/code&gt; are not used in this recipe because it is unlikely to have multiple API keys with only one application key.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;By default, the current major version of this cookbook installs Agent v7. The following attributes are available to control the Agent version installed:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;agent_major_version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pin the major version of the Agent to 5, 6, or 7 (default).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;agent_version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pin a specific Agent version (recommended).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;agent_package_action&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(Linux only) Defaults to &lt;code&gt;&#39;install&#39;&lt;/code&gt; (recommended), &lt;code&gt;&#39;upgrade&#39;&lt;/code&gt; to get automatic Agent updates (not recommended, use the default and change the pinned &lt;code&gt;agent_version&lt;/code&gt; to upgrade).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;agent_flavor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(Linux only) Defaults to &lt;code&gt;&#39;datadog-agent&#39;&lt;/code&gt; to install the datadog-agent, can be set to &lt;code&gt;&#39;datadog-iot-agent&#39;&lt;/code&gt; to install the IOT agent.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See the sample &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/attributes/default.rb&#34;&gt;attributes/default.rb&lt;/a&gt; for your cookbook version for all available attributes.&lt;/p&gt; &#xA;&lt;h3&gt;Upgrade&lt;/h3&gt; &#xA;&lt;p&gt;Some attribute names have changed from version 3.x to 4.x of the cookbook. Use this reference table to update your configuration:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;Cookbook 3.x&lt;/th&gt; &#xA;   &lt;th&gt;Cookbook 4.x&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Install Agent 7.x&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_major_version&#39; =&amp;gt; 7&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Install Agent 6.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent6&#39; =&amp;gt; true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_major_version&#39; =&amp;gt; 6&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Install Agent 5.x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent6&#39; =&amp;gt; false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_major_version&#39; =&amp;gt; 5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pin agent version&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_version&#39;&lt;/code&gt; or &lt;code&gt;&#39;agent6_version&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_version&#39;&lt;/code&gt; for all versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change package_action&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_package_action&#39;&lt;/code&gt; or &lt;code&gt;&#39;agent6_package_action&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;agent_package_action&#39;&lt;/code&gt; for all versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change APT repo URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;aptrepo&#39;&lt;/code&gt; or &lt;code&gt;&#39;agent6_aptrepo&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;aptrepo&#39;&lt;/code&gt; for all versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change APT repo dist&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;aptrepo_dist&#39;&lt;/code&gt; or &lt;code&gt;&#39;agent6_aptrepo_dist&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;aptrepo_dist&#39;&lt;/code&gt; for all versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change YUM repo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;yumrepo&#39;&lt;/code&gt; or &lt;code&gt;&#39;agent6_yumrepo&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;yumrepo&#39;&lt;/code&gt; for all versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change SUSE repo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;yumrepo_suse&#39;&lt;/code&gt; or &lt;code&gt;&#39;agent6_yumrepo_suse&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;yumrepo_suse&#39;&lt;/code&gt; for all versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Use one of the following methods to upgrade from Agent v6 to v7:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set &lt;code&gt;agent_major_version&lt;/code&gt; to &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;agent_package_action&lt;/code&gt; to &lt;code&gt;install&lt;/code&gt;, and pin a specific v7 version as &lt;code&gt;agent_version&lt;/code&gt; (recommended).&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;agent_major_version&lt;/code&gt; to &lt;code&gt;7&lt;/code&gt; and &lt;code&gt;agent_package_action&lt;/code&gt; to &lt;code&gt;upgrade&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following example upgrades from Agent v6 to v7. The same applies if you are upgrading from Agent v5 to v6.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;default_attributes(&#xA;  &#39;datadog&#39; =&amp;gt; {&#xA;    &#39;agent_major_version&#39; =&amp;gt; 7,&#xA;    &#39;agent_version&#39; =&amp;gt; &#39;7.25.1&#39;,&#xA;    &#39;agent_package_action&#39; =&amp;gt; &#39;install&#39;,&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Downgrade&lt;/h3&gt; &#xA;&lt;p&gt;To downgrade the Agent version, set the &lt;code&gt;&#39;agent_major_version&#39;&lt;/code&gt;, &lt;code&gt;&#39;agent_version&#39;&lt;/code&gt;, and &lt;code&gt;&#39;agent_allow_downgrade&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following example downgrades to Agent v6. The same applies if you are downgrading to Agent v5.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  default_attributes(&#xA;    &#39;datadog&#39; =&amp;gt; {&#xA;      &#39;agent_major_version&#39; =&amp;gt; 6,&#xA;      &#39;agent_version&#39; =&amp;gt; &#39;6.10.0&#39;,&#xA;      &#39;agent_allow_downgrade&#39; =&amp;gt; true&#xA;    }&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uninstall&lt;/h3&gt; &#xA;&lt;p&gt;To uninstall the Agent, remove the &lt;code&gt;dd-agent&lt;/code&gt; recipe and add the &lt;code&gt;remove-dd-agent&lt;/code&gt; recipe with no attributes.&lt;/p&gt; &#xA;&lt;h2&gt;Recipes&lt;/h2&gt; &#xA;&lt;p&gt;Access the &lt;a href=&#34;https://github.com/DataDog/chef-datadog/tree/master/recipes&#34;&gt;Datadog Chef recipes on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Default&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/recipes/default.rb&#34;&gt;default recipe&lt;/a&gt; is a placeholder.&lt;/p&gt; &#xA;&lt;h3&gt;Agent&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/recipes/dd-agent.rb&#34;&gt;dd-agent recipe&lt;/a&gt; installs the Datadog Agent on the target system, sets your &lt;a href=&#34;https://app.datadoghq.com/organization-settings/api-keys&#34;&gt;Datadog API key&lt;/a&gt;, and starts the service to report on local system metrics.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Windows users upgrading the Agent from versions &amp;lt;= 5.10.1 to &amp;gt;= 5.12.0, set the &lt;code&gt;windows_agent_use_exe&lt;/code&gt; attribute to &lt;code&gt;true&lt;/code&gt;. For more details, see the &lt;a href=&#34;https://github.com/DataDog/dd-agent/wiki/Windows-Agent-Installation&#34;&gt;dd-agent wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Handler&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/recipes/dd-handler.rb&#34;&gt;dd-handler recipe&lt;/a&gt; installs the &lt;a href=&#34;https://rubygems.org/gems/chef-handler-datadog&#34;&gt;chef-handler-datadog&lt;/a&gt; gem and invokes the handler at the end of a Chef run to report the details to the news feed.&lt;/p&gt; &#xA;&lt;h3&gt;DogStatsD&lt;/h3&gt; &#xA;&lt;p&gt;To install a language-specific library that interacts with DogStatsD:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/recipes/dogstatsd-ruby.rb&#34;&gt;dogstatsd-ruby recipe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python: Add a dependency on the &lt;code&gt;poise-python&lt;/code&gt; cookbook to your custom/wrapper cookbook, and use the resource below. For more details, see the &lt;a href=&#34;https://github.com/poise/poise-python&#34;&gt;poise-python repository&lt;/a&gt;. &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;python_package &#39;dogstatsd-python&#39; # assumes python and pip are installed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tracing&lt;/h3&gt; &#xA;&lt;p&gt;To install a language-specific library for application tracing (APM):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby: &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/recipes/ddtrace-ruby.rb&#34;&gt;ddtrace-ruby recipe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python: Add a dependency on the &lt;code&gt;poise-python&lt;/code&gt; cookbook to your custom/wrapper cookbook, and use the resource below. For more details, see the &lt;a href=&#34;https://github.com/poise/poise-python&#34;&gt;poise-python repository&lt;/a&gt;. &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;python_package &#39;ddtrace&#39; # assumes python and pip are installed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;p&gt;There are many &lt;a href=&#34;https://github.com/DataDog/chef-datadog/tree/master/recipes&#34;&gt;recipes&lt;/a&gt; to assist you with deploying Agent integration configuration files and dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;System-probe&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/DataDog/chef-datadog/raw/master/recipes/system-probe.rb&#34;&gt;system-probe recipe&lt;/a&gt; is automatically included by default. It writes the &lt;code&gt;system-probe.yaml&lt;/code&gt; file. This behavior can be disabled by setting &lt;code&gt;node[&#39;datadog&#39;][&#39;system_probe&#39;][&#39;manage_config&#39;]&lt;/code&gt; to false.&lt;/p&gt; &#xA;&lt;p&gt;To enable &lt;a href=&#34;https://github.com/DataDog/chef-datadog/tree/master/recipes&#34;&gt;Network Performance Monitoring&lt;/a&gt; (NPM) in &lt;code&gt;system-probe.yaml&lt;/code&gt;, set &lt;code&gt;node[&#39;datadog&#39;][&#39;system_probe&#39;][&#39;network_enabled&#39;]&lt;/code&gt; to true.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note for Windows users&lt;/strong&gt;: NPM is supported on Windows with Agent v6.27+ and v7.27+. It ships as an optional component that is only installed if &lt;code&gt;node[&#39;datadog&#39;][&#39;system_probe&#39;][&#39;network_enabled&#39;]&lt;/code&gt; is set to true when the Agent is installed or upgraded. Because of this, existing installations might need to do an uninstall and reinstall of the Agent once to install the NPM component, unless the Agent is upgraded at the same time.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;Integrations without recipes&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;datadog_monitor&lt;/code&gt; resource for enabling Agent integrations without a recipe.&lt;/p&gt; &#xA;&lt;h4&gt;Actions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:add&lt;/code&gt;: (default) Enables the integration by setting up the configuration file, adding the correct permissions to the file, and restarting the Agent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:remove&lt;/code&gt;: Disables an integration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Syntax&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;datadog_monitor &#39;name&#39; do&#xA;  init_config                       Hash # default value: {}&#xA;  instances                         Array # default value: []&#xA;  logs                              Array # default value: []&#xA;  use_integration_template          true, false # default value: false&#xA;  action                            Symbol # defaults to :add&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#39;name&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The name of the Agent integration to configure and enable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;instances&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The fields used to fill values under the &lt;code&gt;instances&lt;/code&gt; section in the integration configuration file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;init_config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The fields used to fill values under the the &lt;code&gt;init_config&lt;/code&gt; section in the integration configuration file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The fields used to fill values under the the &lt;code&gt;logs&lt;/code&gt; section in the integration configuration file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;use_integration_template&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; (recommended) to use the default template, which writes the values of &lt;code&gt;instances&lt;/code&gt;, &lt;code&gt;init_config&lt;/code&gt;, and &lt;code&gt;logs&lt;/code&gt; in the YAML under their respective keys. This defaults to &lt;code&gt;false&lt;/code&gt; for backward compatibility, but may default to &lt;code&gt;true&lt;/code&gt; in a future major version of the cookbook.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;This example enables the ElasticSearch integration by using the &lt;code&gt;datadog_monitor&lt;/code&gt; resource. It provides the instance configuration (in this case: the URL to connect to ElasticSearch) and sets the &lt;code&gt;use_integration_template&lt;/code&gt; flag to use the default configuration template. Also, it notifies the &lt;code&gt;service[datadog-agent]&lt;/code&gt; resource to restart the Agent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Agent installation must be above this recipe in the run list.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;include_recipe &#39;::dd-agent&#39;&#xA;&#xA;datadog_monitor &#39;elastic&#39; do&#xA;  instances  [{&#39;url&#39; =&amp;gt; &#39;http://localhost:9200&#39;}]&#xA;  use_integration_template true&#xA;  notifies :restart, &#39;service[datadog-agent]&#39; if node[&#39;datadog&#39;][&#39;agent_start&#39;]&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/DataDog/chef-datadog/tree/master/recipes&#34;&gt;Datadog integration Chef recipes&lt;/a&gt; for additional examples.&lt;/p&gt; &#xA;&lt;h3&gt;Integration versions&lt;/h3&gt; &#xA;&lt;p&gt;To install a specific version of a Datadog integration, use the &lt;code&gt;datadog_integration&lt;/code&gt; resource.&lt;/p&gt; &#xA;&lt;h4&gt;Actions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:install&lt;/code&gt;: (default) Installs an integration with the specified version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:remove&lt;/code&gt;: Removes an integration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Syntax&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;datadog_integration &#39;name&#39; do&#xA;  version                      String         # version to install for :install action&#xA;  action                       Symbol         # defaults to :install&#xA;  third_party                  [true, false]  # defaults to :false&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#39;name&#39;&lt;/code&gt;: The name of the Agent integration to install, for example: &lt;code&gt;datadog-apache&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: The version of the integration to install (only required with the &lt;code&gt;:install&lt;/code&gt; action).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;third_party&lt;/code&gt;: Set to false if installing a Datadog integration, true otherwise. Available for Datadog Agents version 6.21/7.21 and higher only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;This example installs version &lt;code&gt;1.11.0&lt;/code&gt; of the ElasticSearch integration by using the &lt;code&gt;datadog_integration&lt;/code&gt; resource.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Agent installation must be above this recipe in the run list.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;include_recipe &#39;::dd-agent&#39;&#xA;&#xA;datadog_integration &#39;datadog-elastic&#39; do&#xA;  version &#39;1.11.0&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the available versions of the integrations, see the integration-specific &lt;code&gt;CHANGELOG.md&lt;/code&gt; in the &lt;a href=&#34;https://github.com/DataDog/integrations-core&#34;&gt;integrations-core repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: For Chef Windows users, the &lt;code&gt;chef-client&lt;/code&gt; must have read access to the &lt;code&gt;datadog.yaml&lt;/code&gt; file when the &lt;code&gt;datadog-agent&lt;/code&gt; binary available on the node is used by this resource.&lt;/p&gt;</summary>
  </entry>
</feed>