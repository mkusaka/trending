<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-05T08:28:23Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cmsc330-umd/spring23</title>
    <updated>2023-02-05T08:28:23Z</updated>
    <id>tag:github.com,2023-02-05:/cmsc330-umd/spring23</id>
    <link href="https://github.com/cmsc330-umd/spring23" rel="alternate"></link>
    <summary type="html">&lt;p&gt;List of projects and Discussion Repos for Github Classrooms&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;CMSC330 Spring 2023&lt;/h3&gt; &#xA;&lt;p&gt;List of projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classroom.github.com/a/uXj0y7qf&#34;&gt;Project 0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classroom.github.com/a/qe6I5Kns&#34;&gt;Project 1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;List of discussions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cmsc330-umd/spring23/tree/main/discussions/d0_git&#34;&gt;Discussion 0 - Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cmsc330-umd/spring23/tree/main/discussions/d1_ruby&#34;&gt;Discussion 1 - Ruby&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ronin-rb/ronin</title>
    <updated>2023-02-05T08:28:23Z</updated>
    <id>tag:github.com,2023-02-05:/ronin-rb/ronin</id>
    <link href="https://github.com/ronin-rb/ronin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ronin is a free and Open Source Ruby toolkit for security research and development. Ronin also allows for the rapid development and distribution of code, exploits, payloads, etc, via 3rd party git repositories.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ronin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin/actions/workflows/ruby.yml&#34;&gt;&lt;img src=&#34;https://github.com/ronin-rb/ronin/actions/workflows/ruby.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/ronin-rb/ronin&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/ronin-rb/ronin.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/rb/ronin&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/ronin.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ronin-rb.dev&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ronin-rb.dev/docs/ronin/frames&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/6WAb3PsVX9&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/ronin_rb&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://infosec.exchange/@ronin_rb&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ronin-rb.dev/&#34;&gt;Ronin&lt;/a&gt; is a free and Open Source &lt;a href=&#34;https://www.ruby-lang.org&#34;&gt;Ruby&lt;/a&gt; toolkit for security research and development. Ronin contains many different &lt;a href=&#34;https://raw.githubusercontent.com/ronin-rb/ronin/main/#synopsis&#34;&gt;CLI commands&lt;/a&gt; and &lt;a href=&#34;https://github.com/ronin-rb/&#34;&gt;Ruby libraries&lt;/a&gt; for a variety of security tasks, such as encoding/decoding data, filter IPs/hosts/URLs, querying ASNs, querying DNS, HTTP, &lt;a href=&#34;https://github.com/ronin-rb/ronin-vulns#synopsis&#34;&gt;scanning for web vulnerabilities&lt;/a&gt;, &lt;a href=&#34;https://github.com/ronin-rb/ronin-web-spider#readme&#34;&gt;spidering websites&lt;/a&gt;, &lt;a href=&#34;https://github.com/ronin-rb/ronin-repos#synopsis&#34;&gt;install 3rd party repositories&lt;/a&gt; of &lt;a href=&#34;https://github.com/ronin-rb/ronin-exploits#readme&#34;&gt;exploits&lt;/a&gt; and/or &lt;a href=&#34;https://github.com/ronin-rb/ronin-payloads#readme&#34;&gt;payloads&lt;/a&gt;, &lt;a href=&#34;https://github.com/ronin-rb/ronin-exploits#synopsis&#34;&gt;run exploits&lt;/a&gt;, &lt;a href=&#34;https://github.com/ronin-rb/ronin-exploits#examples&#34;&gt;write new exploits&lt;/a&gt;, &lt;a href=&#34;https://github.com/ronin-rb/ronin-db#synopsis&#34;&gt;managing local databases&lt;/a&gt;, &lt;a href=&#34;https://github.com/ronin-rb/ronin-fuzzer#readme&#34;&gt;fuzzing data&lt;/a&gt;, and much more.&lt;/p&gt; &#xA;&lt;h3&gt;Who is Ronin for?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CTF players&lt;/li&gt; &#xA; &lt;li&gt;Bug bounty hunters&lt;/li&gt; &#xA; &lt;li&gt;Security Researchers&lt;/li&gt; &#xA; &lt;li&gt;Security Engineers&lt;/li&gt; &#xA; &lt;li&gt;Developers&lt;/li&gt; &#xA; &lt;li&gt;Students&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What does Ronin provide?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A toolkit of useful commands.&lt;/li&gt; &#xA; &lt;li&gt;A fully-loaded Ruby REPL.&lt;/li&gt; &#xA; &lt;li&gt;An ecosystem of high-quality security related Ruby libraries, API, and commands.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What can you do with Ronin?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quickly process and query various data using the &lt;code&gt;ronin&lt;/code&gt; commands.&lt;/li&gt; &#xA; &lt;li&gt;Efficiently work with code and data in the &lt;code&gt;ronin irb&lt;/code&gt; Ruby REPL.&lt;/li&gt; &#xA; &lt;li&gt;Rapidly prototype Ruby scripts using &lt;a href=&#34;https://github.com/ronin-rb/ronin-support#readme&#34;&gt;ronin-support&lt;/a&gt; and other &lt;code&gt;ronin&lt;/code&gt; libraries.&lt;/li&gt; &#xA; &lt;li&gt;Install 3rd-party &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; repositories of exploits, payloads, or other code, using &lt;a href=&#34;https://github.com/ronin-rb/ronin-repos#readme&#34;&gt;ronin-repos&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Import and query data using the &lt;a href=&#34;https://github.com/ronin-rb/ronin-db#readme&#34;&gt;ronin-db&lt;/a&gt; database.&lt;/li&gt; &#xA; &lt;li&gt;Fuzz data using &lt;a href=&#34;https://github.com/ronin-rb/ronin-fuzzer#readme&#34;&gt;ronin-fuzzer&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use common payloads or write your own using &lt;a href=&#34;https://github.com/ronin-rb/ronin-payloads#readme&#34;&gt;ronin-payloads&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write/run exploits using &lt;a href=&#34;https://github.com/ronin-rb/ronin-exploits#readme&#34;&gt;ronin-exploits&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Scan for web vulnerabilities using &lt;a href=&#34;https://github.com/ronin-rb/ronin-vulns#readme&#34;&gt;ronin-vulns&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Synopsis&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ronin [options] [COMMAND [ARGS...]]&#xA;&#xA;Options:&#xA;    -h, --help                       Print help information&#xA;&#xA;Arguments:&#xA;    [COMMAND]                        The command name to run&#xA;    [ARGS ...]                       Additional arguments for the command&#xA;&#xA;Commands:&#xA;    asn&#xA;    banner-grab&#xA;    bitflip&#xA;    cert-dump&#xA;    cert-gen&#xA;    cert-grab&#xA;    decode, dec&#xA;    decrypt&#xA;    dns&#xA;    email-addr&#xA;    encode, enc&#xA;    encrypt&#xA;    entropy&#xA;    escape&#xA;    extract&#xA;    grep&#xA;    help&#xA;    hexdump&#xA;    highlight&#xA;    hmac&#xA;    homoglyph&#xA;    host&#xA;    http&#xA;    ip&#xA;    iprange&#xA;    irb&#xA;    md5&#xA;    netcat, nc&#xA;    new&#xA;    proxy&#xA;    public-suffix-list&#xA;    quote&#xA;    rot&#xA;    sha1&#xA;    sha256&#xA;    sha512&#xA;    strings&#xA;    tld-list&#xA;    tips&#xA;    typo&#xA;    typosquat&#xA;    unescape&#xA;    unhexdump&#xA;    unquote&#xA;    url&#xA;    xor&#xA;&#xA;Additional Ronin Commands:&#xA;    $ ronin-repos&#xA;    $ ronin-db&#xA;    $ ronin-web&#xA;    $ ronin-fuzzer&#xA;    $ ronin-payloads&#xA;    $ ronin-exploits&#xA;    $ ronin-vulns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List ronin commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View a man-page for a command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin help COMMAND&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get a random tip on how to use &lt;code&gt;ronin&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin tips&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the Ronin Ruby REPL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin irb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a new Ruby script with &lt;a href=&#34;https://github.com/ronin-rb/ronin-support#readme&#34;&gt;ronin-support&lt;/a&gt; preloaded:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin new script foo.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a new Ruby project with a &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin new project foo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Binary&lt;/h3&gt; &#xA;&lt;p&gt;Hexdumps data in a variety of formats:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin hexdump /bin/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Un-hexdumps a hexdump file back into it&#39;s original raw binary data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin unhexdump -o data.bin hexdump.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print all printable strings from a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin strings /bin/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print all alphabetic strings from a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin strings --alpha /bin/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print all alpha-numeric strings from a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin strings --alpha-num /bin/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print all numeric strings from a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin strings --numeric /bin/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print all hexadecimal strings from a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin strings --hex /bin/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate through all of the Bit-flips of a domain name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin bitflip microsoft --alpha-num --append .com&#xA;licrosoft.com&#xA;oicrosoft.com&#xA;iicrosoft.com&#xA;eicrosoft.com&#xA;Microsoft.com&#xA;mhcrosoft.com&#xA;mkcrosoft.com&#xA;mmcrosoft.com&#xA;macrosoft.com&#xA;mycrosoft.com&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encoding&lt;/h3&gt; &#xA;&lt;p&gt;Base64 encode a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin encode --base64 --string &#34;foo bar baz&#34;&#xA;Zm9vIGJhciBiYXo=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Zlib compresses, Base64 encodes, and then URI encode a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin encode --zlib --base64 --uri --string &#34;foo bar&#34;&#xA;%65%4A%78%4C%79%38%39%58%53%45%6F%73%41%67%41%4B%63%41%4B%61%0A&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Base64 decode a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin decode --base64 --string &#34;Zm9vIGJhciBiYXo=&#34;&#xA;foo bar baz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;URI decode, Base64 decode, and then zlib inflates a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin decode --uri --base64 --zlib --string &#34;%65%4A%78%4C%79%38%39%58%53%45%6F%73%41%67%41%4B%63%41%4B%61%0A&#34;&#xA;foo bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;URI escape a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin escape --uri --string &#34;foo bar&#34;&#xA;foo%20bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;URI unescape a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin unescape --uri --string &#34;foo%20bar&#34;&#xA;foo bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert a file into a quoted C string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin quote --c file.bin&#xA;&#34;...&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert a file into a quoted JavaScript string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin quote --js file.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unquote a C string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin unquote --c --string &#39;&#34;\x66\x6f\x6f\x20\x62\x61\x72&#34;&#39;&#xA;foo bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Text&lt;/h3&gt; &#xA;&lt;p&gt;De-obfuscate an email address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin email-addr --deobfuscate &#34;john [dot] smith [at] example [dot] com&#34;&#xA;john.smith@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate through all of the obfuscations of an email address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin email-addr --enum-obfuscations john.smith@example.com&#xA;john.smith @ example.com&#xA;john.smith AT example.com&#xA;john.smith at example.com&#xA;john.smith[AT]example.com&#xA;john.smith[at]example.com&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extract high-entropy data from a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin entropy -e 5.0 index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Grep for common patterns of data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin grep --hash index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Extract common patterns from data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin extract --hash index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a random typo of a word:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin typo microsoft&#xA;microssoft&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate over every typo variation of a word:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin typo --enum microsoft&#xA;microosoft&#xA;microsooft&#xA;microssoft&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a random homoglyph version of a word:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin homoglyph CEO&#xA;CＥO&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate over every homoglyph variation of a word:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin homoglyph --enum CEO&#xA;ϹEO&#xA;СEO&#xA;ⅭEO&#xA;ＣEO&#xA;CΕO&#xA;CЕO&#xA;CＥO&#xA;CEΟ&#xA;CEО&#xA;CEＯ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Syntax-highlights a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin highlight index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cryptography&lt;/h3&gt; &#xA;&lt;p&gt;AES-256 encrypt a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin encrypt --cipher aes-256-cbc --password &#34;...&#34; file.txt &amp;gt; encrypted.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Decrypt data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin decrypt --cipher aes-256-cbc --password &#34;...&#34; encrypted.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generates an HMAC for a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin hmac --hash sha1 --password &#34;too many secrets&#34; data.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generates an HMAC for a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin hmac --hash sha1 --password &#34;too many secrets&#34; --string &#34;...&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate an MD5 checksum of a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin md5 --string &#34;hello world&#34;&#xA;5eb63bbbe01eeed093cb22bb8f5acdc3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the MD5 checksum of a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin md5 file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the MD5 checksum of every line in a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin md5 --multiline file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate an SHA1 checksum of a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha1 --string &#34;hello world&#34;&#xA;2aae6c35c94fcfb415dbe95f408b9ce91ee846ed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the SHA1 checksum of a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha1 file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the SHA1 checksum of every line in a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha1 --multiline file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate an SHA256 checksum of a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha256 --string &#34;hello world&#34;&#xA;b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the SHA256 checksum of a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha256 file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the SHA256 checksum of every line in a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha256 --multiline file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate an SHA512 checksum of a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha512 --string &#34;hello world&#34;&#xA;309ecc489c12d6eb4cc40f50c902f2b4d0ed77ee511a7c7a9bcd3ca86d4cd86f989dd35bc5ff499670da34255b45b0cfd830e81f605dcf7dc5542e93ae9cd76f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the SHA512 checksum of a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha512 file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Calculate the SHA512 checksum of every line in a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin sha512 --multiline file.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ROT-13 encodes a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin rot --string &#34;The quick brown fox jumps over the lazy dog&#34;&#xA;Gur dhvpx oebja sbk whzcf bire gur ynml qbt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;XOR encodes a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin xor --key ABC --string &#34;The quick brown fox jumps over the lazy dog&#34;&#xA;&#34;\x15*&amp;amp;a36(!(a 1.5-a$,9b)4/32b,7&#39;1a6+$b/ 8:a&amp;amp;,&amp;amp;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Networking&lt;/h3&gt; &#xA;&lt;p&gt;Query the ASN of an IP address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin asn -I 4.2.2.1&#xA;4.0.0.0/9 AS3356 (US) LEVEL3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the system&#39;s external/public IP address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin ip --public&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert an IP address to decimal format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin ip --decimal 127.0.0.1&#xA;2130706433&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Convert a file of IP addresses into URLs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin ip --file targets.txt --http&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate over every IP address in the IP CIDR range:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin iprange 10.1.0.0/15&#xA;10.0.0.1&#xA;10.0.0.2&#xA;10.0.0.3&#xA;10.0.0.4&#xA;10.0.0.5&#xA;10.0.0.6&#xA;10.0.0.7&#xA;10.0.0.8&#xA;10.0.0.9&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate over every IP address in the IP glob range:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin iprange 10.1-3.0.*&#xA;10.1.0.1&#xA;10.1.0.2&#xA;10.1.0.3&#xA;10.1.0.4&#xA;10.1.0.5&#xA;10.1.0.6&#xA;10.1.0.7&#xA;10.1.0.8&#xA;10.1.0.9&#xA;10.1.0.10&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate over every IP address between two IP addresses:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin iprange --start 10.0.0.1 --stop 10.0.3.33&#xA;10.0.0.1&#xA;10.0.0.2&#xA;10.0.0.3&#xA;10.0.0.4&#xA;10.0.0.5&#xA;10.0.0.6&#xA;10.0.0.7&#xA;10.0.0.8&#xA;10.0.0.9&#xA;10.0.0.10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connect to a remote TCP service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat -v example.com 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen on a local TCP port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat -v -l 1337&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connect to a remote SSL/TLS service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat -v --ssl example.com 443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connect to a remote UDP service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat -v -u example.com 1337&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen on a local UDP port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat -v -u -l 1337&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Opens a UNIX socket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat -v --unix /path/to/unix.socket&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hexdump all data received from a socket:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin netcat --hexdump example.com 80&#xA;GET / HTTP/1.1&#xA;Host: example.com&#xA;User-Agent: Ruby&#xA;&#xA;00000000  48 54 54 50 2f 31 2e 31 20 32 30 30 20 4f 4b 0d  |HTTP/1.1 200 OK.|&#xA;00000010  0a 41 67 65 3a 20 32 35 30 38 30 36 0d 0a 43 61  |.Age: 250806..Ca|&#xA;00000020  63 68 65 2d 43 6f 6e 74 72 6f 6c 3a 20 6d 61 78  |che-Control: max|&#xA;00000030  2d 61 67 65 3d 36 30 34 38 30 30 0d 0a 43 6f 6e  |-age=604800..Con|&#xA;00000040  74 65 6e 74 2d 54 79 70 65 3a 20 74 65 78 74 2f  |tent-Type: text/|&#xA;00000050  68 74 6d 6c 3b 20 63 68 61 72 73 65 74 3d 55 54  |html; charset=UT|&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;DNS&lt;/h4&gt; &#xA;&lt;p&gt;Query DNS records:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin dns -t TXT github.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find all registered TLDs for a host name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin host --enum-tlds --registered github.com&#xA;github.ac&#xA;github.actor&#xA;github.ae&#xA;github.africa&#xA;github.agency&#xA;github.ai&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find all registered public suffixes for a host name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin host --enum-suffix --registered github.com&#xA;example.com.ag&#xA;example.ai&#xA;example.al&#xA;example.am&#xA;example.com.ar&#xA;example.at&#xA;example.co.at&#xA;example.or.at&#xA;example.com.au&#xA;example.be&#xA;example.com.bh&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enumerate over every possible typosquat variation of a domain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin typosquat microsoft.com&#xA;microosoft.com&#xA;microsooft.com&#xA;microssoft.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find all of the registered typosquat domains for a valid domain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin typosquat --registered microsoft.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find all of the typosquat domains with addresses for a valid domain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin typosquat --has-addresses microsoft.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find all of the unregistered typosquat domains for a valid domain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin typosquat --unregistered microsoft.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SSL/TLS Certs&lt;/h4&gt; &#xA;&lt;p&gt;Dump information about a SSL/TLS certificate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin cert-dump https://example.com/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download a SSL/TLS certificate from a host and port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin cert-grab github.com:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a new SSL/TLS certificate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin cert-gen -c test.com -O &#34;Test Co&#34; -U &#34;Test Dept&#34; \&#xA;                 -L &#34;Test City&#34; -S NY -C US&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;HTTP&lt;/h4&gt; &#xA;&lt;p&gt;Perform an HTTP &lt;code&gt;GET&lt;/code&gt; request (with syntax highlighting):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin http https://example.com/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Send an HTTP request with additional headers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin http --post --header &#34;Authorization: ...&#34; https://foo.bar/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Send an HTTP request with a known &lt;code&gt;User-Agent&lt;/code&gt; string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin http --post --user-agent chrome-android https://foo.bar/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Send an HTTP request with a custom &lt;code&gt;User-Agent&lt;/code&gt; string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin http --post --user-agent-string &#34;...&#34; https://foo.bar/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open an interactive HTTP shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin http --shell https://example.com/&#xA;https://example.com/&amp;gt; help&#xA;  help [COMMAND]                      &#x9;Prints the list of commands or additional help&#xA;  get PATH[?QUERY] [BODY]             &#x9;Performs a GET request&#xA;  head PATH[?QUERY]                   &#x9;Performs a HEAD request&#xA;  patch PATH[?QUERY] [BODY]           &#x9;Performs a PATCH request&#xA;  post PATH[?QUERY] [BODY]            &#x9;Performs a POST request&#xA;  put PATH [BODY]                     &#x9;Performs a PUT request&#xA;  copy PATH DEST                      &#x9;Performs a COPY request&#xA;  delete PATH[?QUERY]                 &#x9;Performs a DELETE request&#xA;  lock PATH[?QUERY]                   &#x9;Performs a LOCK request&#xA;  options PATH[?QUERY]                &#x9;Performs a OPTIONS request&#xA;  mkcol PATH[?QUERY]                  &#x9;Performs a MKCOL request&#xA;  move PATH[?QUERY] DEST              &#x9;Performs a MOVE request&#xA;  propfind PATH[?QUERY]               &#x9;Performs a PROPFIND request&#xA;  proppatch PATH[?QUERY]              &#x9;Performs a PROPPATCH request&#xA;  trace PATH[?QUERY]                  &#x9;Performs a TRACE request&#xA;  unlock PATH[?QUERY]                 &#x9;Performs a UNLOCK request&#xA;  cd PATH                             &#x9;Changes the base URL path&#xA;  headers [{set | unset} NAME [VALUE]]&#x9;Manages the request headers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print the HTTP status of every URL in a file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ronin url --file urls.txt --status&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;See Also&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-repos#synopsis&#34;&gt;ronin-repos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-db#synopsis&#34;&gt;ronin-db&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-web#synopsis&#34;&gt;ronin-web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-fuzzer#synopsis&#34;&gt;ronin-fuzzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-payloads#synopsis&#34;&gt;ronin-payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-exploits#synopsis&#34;&gt;ronin-exploits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-vulns#synopsis&#34;&gt;ronin-vulns&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gcc.gnu.org/&#34;&gt;gcc&lt;/a&gt; / &lt;a href=&#34;http://clang.llvm.org/&#34;&gt;clang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/automake/&#34;&gt;make&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;libsqlite3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ruby-lang.org&#34;&gt;Ruby&lt;/a&gt; &amp;gt;= 3.0.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/postmodern/open_namespace#readme&#34;&gt;open_namespace&lt;/a&gt; ~&amp;gt; 0.4&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rouge-ruby/rouge#readme&#34;&gt;rouge&lt;/a&gt; ~&amp;gt; 3.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/socketry/async-io#readme&#34;&gt;async-io&lt;/a&gt; ~&amp;gt; 1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/postmodern/wordlist.rb#readme&#34;&gt;wordlist&lt;/a&gt; ~&amp;gt; 1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-support#readme&#34;&gt;ronin-support&lt;/a&gt; ~&amp;gt; 1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-core#readme&#34;&gt;ronin-core&lt;/a&gt; ~&amp;gt; 0.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-repos#readme&#34;&gt;ronin-repos&lt;/a&gt; ~&amp;gt; 0.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-db#readme&#34;&gt;ronin-db&lt;/a&gt; ~&amp;gt; 0.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-fuzzer#readme&#34;&gt;ronin-fuzzer&lt;/a&gt; ~&amp;gt; 0.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-web#readme&#34;&gt;ronin-web&lt;/a&gt; ~&amp;gt; 1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-code-asm#readme&#34;&gt;ronin-code-asm&lt;/a&gt; ~&amp;gt; 1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-code-sql#readme&#34;&gt;ronin-code-sql&lt;/a&gt; ~&amp;gt; 2.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-payloads#readme&#34;&gt;ronin-payloads&lt;/a&gt; ~&amp;gt; 0.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-exploits#readme&#34;&gt;ronin-exploits&lt;/a&gt; ~&amp;gt; 1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin-vulns#readme&#34;&gt;ronin-vulns&lt;/a&gt; ~&amp;gt; 0.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Bash Script&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -o ronin-install.sh https://raw.githubusercontent.com/ronin-rb/scripts/main/ronin-install.sh &amp;amp;&amp;amp; bash ronin-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ gem install ronin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, there are also &lt;a href=&#34;https://hub.docker.com/r/roninrb/ronin&#34;&gt;Docker images&lt;/a&gt; available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull roninrb/ronin&#xA;docker run -it ronin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, if you want to mount your home directory into the docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --mount type=bind,source=&#34;$HOME&#34;,target=/home/ronin -it ronin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronin-rb/ronin/fork&#34;&gt;Fork It!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone It!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd ronin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git checkout -b my_feature&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code It!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundle exec rake spec&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git push origin my_feature&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2023 Hal Brodigan (postmodern.mod3 at gmail.com)&lt;/p&gt; &#xA;&lt;p&gt;Ronin is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;Ronin is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with Ronin. If not, see &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>