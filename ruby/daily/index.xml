<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-12T01:37:09Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Jacky-LinPeng/cocoapods-xlbuild</title>
    <updated>2023-10-12T01:37:09Z</updated>
    <id>tag:github.com,2023-10-12:/Jacky-LinPeng/cocoapods-xlbuild</id>
    <link href="https://github.com/Jacky-LinPeng/cocoapods-xlbuild" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于cocoapods扩展依赖库编译插件，生成预编译静态库，提高编译速度的插件。支持编译使用静态库提高速度，调试直接使用源码，方便调试&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cocoapods-xlbuild&lt;/h1&gt; &#xA;&lt;p&gt;利用cocoapods，生成预编译静态库，提高编译速度的插件。支持编译使用静态库提高速度，调试直接使用源码，方便调试&lt;/p&gt; &#xA;&lt;h2&gt;背景&lt;/h2&gt; &#xA;&lt;p&gt;随着项目的不断迭代，项目代码及依赖三方库和内部库越来越多，导致项目编译时间越来越长，浪费大量开发时间。 cocoapods-xlbuild插件将三方库打包为静态库，从而提高项目编译时间&lt;/p&gt; &#xA;&lt;h2&gt;安装插件&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ gem install cocoapods-xlbuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;修改 podfile 文件，加入以下代码&lt;/p&gt; &#xA;&lt;h4&gt;1. 使用静态库编译（推荐）：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;plugin &#39;cocoapods-xlbuild&#39;&#xA;use_frameworks! :linkage =&amp;gt; :static&#xA;use_static_binary!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用动态库编译(动态库会拖累app使用时间，推荐使用静态库)：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;plugin &#39;cocoapods-xlbuild&#39;&#xA;use_frameworks!&#xA;use_dynamic_binary!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. 如果某个库不想使用预编译加参数 :binary =&amp;gt; false&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;AFNetworking&#39;, :binary =&amp;gt; false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注意： 如果对某个库使用 &lt;code&gt;:binary =&amp;gt; false&lt;/code&gt; 则它的依赖库也不会预编译。 如果只想让当前库不参加预编译，依赖库参加预编译，可以将依赖库写在Podfile文件中 举个🌰： YTKNetwork、AFNetworking 都不参加预编译&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;YTKNetwork&#39;, :binary =&amp;gt; false &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;YTKNetwork不参加预编译，AFNetworking参与预编译&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;YTKNetwork&#39;, :binary =&amp;gt; false &#xA;pod &#39;AFNetworking&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. 可以设置编译参数，默认不设置 例如：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;set_custom_xcodebuild_options_for_prebuilt_frameworks :simulator =&amp;gt; &#34;ARCHS=$(ARCHS_STANDARD)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. 设置编译完成后移除源码，默认保存&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;remove_source_code_for_prebuilt_frameworks!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. 设置Frameworks缓存仓库 install加速 例如:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;set_local_frameworks_cache_path     &#39;/Users/xxx/Desktop/CacheFrameworks&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;源码调试&lt;/h2&gt; &#xA;&lt;p&gt;不要设置 &lt;code&gt;remove_source_code_for_prebuilt_frameworks!&lt;/code&gt; 选项，保留源码 源码将会放入pod工程 &lt;code&gt;SourceCode&lt;/code&gt; 文件夹下，可以直接进行源码调试功能&lt;/p&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;p&gt;目前是直接将静态库引入至Pods中，注意将Pods添加到gitignore中，否则将会提交至git仓库中&lt;/p&gt; &#xA;&lt;p&gt;如果工程里面一开始配置的是打包成动态库，后面再改成静态库需要将Pod目录删掉再重新执行pod install，否则就会导致某个pod版本更新了却未重新构建&lt;/p&gt; &#xA;&lt;h2&gt;参考&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/leavez/cocoapods-binary&#34;&gt;https://github.com/leavez/cocoapods-binary&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pdcodeunder/cocoapods-ppbuild&#34;&gt;https://github.com/pdcodeunder/cocoapods-ppbuild&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;p&gt;如果喜欢，给个 星星⭐️ 鼓励一下&lt;/p&gt;</summary>
  </entry>
</feed>