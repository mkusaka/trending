<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-29T01:34:38Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sous-chefs/nodejs</title>
    <updated>2023-09-29T01:34:38Z</updated>
    <id>tag:github.com,2023-09-29:/sous-chefs/nodejs</id>
    <link href="https://github.com/sous-chefs/nodejs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Development repository for the nodejs cookbook&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/redguide/nodejs&#34;&gt;nodejs-cookbook&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://supermarket.chef.io/cookbooks/nodejs&#34;&gt;&lt;img src=&#34;https://img.shields.io/cookbook/v/nodejs.svg?sanitize=true&#34; alt=&#34;Cookbook Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sous-chefs/nodejs/actions?query=workflow%3Aci&#34;&gt;&lt;img src=&#34;https://github.com/sous-chefs/nodejs/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;CI State&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/nodejs/main/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/backers/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/nodejs/main/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/sponsors/badge.svg?sanitize=true&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Installs node.js/npm and includes a resource for managing npm packages&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;This cookbook is maintained by the Sous Chefs. The Sous Chefs are a community of Chef cookbook maintainers working together to maintain important cookbooks. If youâ€™d like to know more please visit &lt;a href=&#34;https://sous-chefs.org/&#34;&gt;sous-chefs.org&lt;/a&gt; or come chat with us on the Chef Community Slack in &lt;a href=&#34;https://chefcommunity.slack.com/messages/C2V7B88SF&#34;&gt;#sous-chefs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian/Ubuntu&lt;/li&gt; &#xA; &lt;li&gt;RHEL/CentOS/Scientific/Amazon/Oracle&lt;/li&gt; &#xA; &lt;li&gt;openSUSE&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Source installs require GCC 4.8+, which is not included on older distro releases&lt;/p&gt; &#xA;&lt;h3&gt;Chef&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chef Infra Client 15.3+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cookbooks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ark&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Include the nodejs recipe to install node on your system based on the default installation method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;include_recipe &#34;nodejs&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install methods&lt;/h3&gt; &#xA;&lt;h4&gt;Package&lt;/h4&gt; &#xA;&lt;p&gt;Install node from packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;node[&#39;nodejs&#39;][&#39;install_method&#39;] = &#39;package&#39; # Not necessary because it&#39;s the default&#xA;include_recipe &#34;nodejs&#34;&#xA;# Or&#xA;include_recipe &#34;nodejs::nodejs_from_package&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default this will setup deb/rpm repositories from nodesource.com, which include up to date NodeJS packages. If you prefer to use distro provided package you can disable this behavior by setting &lt;code&gt;node[&#39;nodejs&#39;][&#39;install_repo&#39;]&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Binary&lt;/h4&gt; &#xA;&lt;p&gt;Install node from official prebuilt binaries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;node[&#39;nodejs&#39;][&#39;install_method&#39;] = &#39;binary&#39;&#xA;include_recipe &#34;nodejs&#34;&#xA;&#xA;# Or&#xA;include_recipe &#34;nodejs::nodejs_from_binary&#34;&#xA;&#xA;# Or set a specific version of nodejs to be installed&#xA;node.default[&#39;nodejs&#39;][&#39;install_method&#39;] = &#39;binary&#39;&#xA;node.default[&#39;nodejs&#39;][&#39;version&#39;] = &#39;5.9.0&#39;&#xA;node.default[&#39;nodejs&#39;][&#39;binary&#39;][&#39;checksum&#39;] = &#39;99c4136cf61761fac5ac57f80544140a3793b63e00a65d4a0e528c9db328bf40&#39;&#xA;&#xA;# Or fetch the binary from your own location&#xA;node.default[&#39;nodejs&#39;][&#39;install_method&#39;] = &#39;binary&#39;&#xA;node.default[&#39;nodejs&#39;][&#39;binary&#39;][&#39;url&#39;] = &#39;https://s3.amazonaws.com/my-bucket/node-v7.8.0-linux-x64.tar.gz&#39;&#xA;node.default[&#39;nodejs&#39;][&#39;binary&#39;][&#39;checksum&#39;] = &#39;0bd86f2a39221b532172c7d1acb57f0b0cba88c7b82ea74ba9d1208b9f6f9697&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Source&lt;/h4&gt; &#xA;&lt;p&gt;Install node from sources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;node[&#39;nodejs&#39;][&#39;install_method&#39;] = &#39;source&#39;&#xA;include_recipe &#34;nodejs&#34;&#xA;# Or&#xA;include_recipe &#34;nodejs::nodejs_from_source&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Chocolatey&lt;/h4&gt; &#xA;&lt;p&gt;Install node from chocolatey:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-chef&#34;&gt;node[&#39;nodejs&#39;][&#39;install_method&#39;] = &#39;chocolatey&#39;&#xA;include_recipe &#34;nodejs&#34;&#xA;# Or&#xA;include_recipe &#34;nodejs::nodejs_from_chocolatey&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NPM&lt;/h2&gt; &#xA;&lt;p&gt;Npm is included in nodejs installs by default. By default, we are using it and call it &lt;code&gt;embedded&lt;/code&gt;. Adding recipe &lt;code&gt;nodejs::npm&lt;/code&gt; assure you to have npm installed and let you choose install method with &lt;code&gt;node[&#39;nodejs&#39;][&#39;npm&#39;][&#39;install_method&#39;]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;include_recipe &#34;nodejs::npm&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Warning:&lt;/em&gt; This recipe will include the &lt;code&gt;nodejs&lt;/code&gt; recipe, which by default includes &lt;code&gt;nodejs::nodejs_from_package&lt;/code&gt; if you did not set &lt;code&gt;node[&#39;nodejs&#39;][&#39;install_method&#39;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;npm_package&lt;/h3&gt; &#xA;&lt;p&gt;note: This resource was previously named nodejs_npm. Calls to that resource name will still function, but cookbooks should be updated for the new npm_package resource name.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm_package&lt;/code&gt; lets you install npm packages from various sources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;npm registry:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;name: &lt;code&gt;property :package&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;version: &lt;code&gt;property :version&lt;/code&gt; (optional)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;url: &lt;code&gt;property :url&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for git use &lt;code&gt;git://{your_repo}&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;from a json (package.json by default): &lt;code&gt;property :json&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;use &lt;code&gt;true&lt;/code&gt; for default&lt;/li&gt; &#xA;   &lt;li&gt;use a &lt;code&gt;String&lt;/code&gt; to specify json file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Packages can be installed globally (by default) or in a directory (by using &lt;code&gt;attribute :path&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;You can specify an &lt;code&gt;NPM_TOKEN&lt;/code&gt; environment variable for accessing &lt;a href=&#34;https://docs.npmjs.com/private-modules/intro&#34;&gt;NPM private modules&lt;/a&gt; by using &lt;code&gt;attribute :npm_token&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can specify a &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable, in the case that some element of your installation depends on this by using &lt;code&gt;attribute :node_env&lt;/code&gt;. E.g., using &lt;a href=&#34;https://www.npmjs.com/package/config&#34;&gt;&lt;code&gt;node-config&lt;/code&gt;&lt;/a&gt; as part of your postinstall script. Please note that adding the &lt;code&gt;--production&lt;/code&gt; option will override this to &lt;code&gt;NODE_ENV=production&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can append more specific options to npm command with &lt;code&gt;attribute :options&lt;/code&gt; array :&lt;/p&gt; &#xA;&lt;p&gt;You can specify auto_update as false to stop the npm install command from running and updating an installed package. Running the command will update packages within restrictions imposed by a package.json file. The default behavior is to update automatically.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use an array of options (w/ dash), they will be added to npm call.&lt;/li&gt; &#xA; &lt;li&gt;ex: &lt;code&gt;[&#39;--production&#39;,&#39;--force&#39;]&lt;/code&gt; or &lt;code&gt;[&#39;--force-latest&#39;]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can specify live_stream true for the resource to have the package install information included in the chef-client log outout for better npm package diagnostics and trouble shooting.&lt;/p&gt; &#xA;&lt;p&gt;This LWRP attempts to use vanilla npm as much as possible (no custom wrapper).&lt;/p&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;npm_package &#39;express&#39;&#xA;&#xA;npm_package &#39;async&#39; do&#xA;  version &#39;0.6.2&#39;&#xA;end&#xA;&#xA;npm_package &#39;request&#39; do&#xA;  url &#39;github mikeal/request&#39;&#xA;end&#xA;&#xA;npm_package &#39;grunt&#39; do&#xA;  path &#39;/home/random/grunt&#39;&#xA;  json true&#xA;  user &#39;random&#39;&#xA;  node_env &#39;staging&#39;&#xA;end&#xA;&#xA;npm_package &#39;my_private_module&#39; do&#xA;  path &#39;/home/random/myproject&#39; # The root path to your project, containing a package.json file&#xA;  json true&#xA;  npm_token &#39;12345-abcde-e5d4c3b2a1&#39;&#xA;  user &#39;random&#39;&#xA;  options [&#39;--production&#39;] # Only install dependencies. Skip devDependencies&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sous-chefs/nodejs/main/test/cookbooks/nodejs_test/recipes/npm.rb&#34;&gt;Working Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or add packages via attributes (which accept the same attributes as the LWRP above):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;nodejs&#34;: {&#xA;  &#34;npm_packages&#34;: [&#xA;    {&#xA;      &#34;name&#34;: &#34;express&#34;&#xA;    },&#xA;    {&#xA;      &#34;name&#34;: &#34;async&#34;,&#xA;      &#34;version&#34;: &#34;0.6.2&#34;&#xA;    },&#xA;    {&#xA;      &#34;name&#34;: &#34;request&#34;,&#xA;      &#34;url&#34;: &#34;github mikeal/request&#34;&#xA;    }&#xA;    {&#xA;      &#34;name&#34;: &#34;grunt&#34;,&#xA;      &#34;path&#34;: &#34;/home/random/grunt&#34;,&#xA;      &#34;json&#34;: true,&#xA;      &#34;user&#34;: &#34;random&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who &lt;a href=&#34;https://opencollective.com/sous-chefs/contributors.svg?width=890&amp;amp;button=false&#34;&gt;contribute.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/backers.svg?width=600&amp;amp;avatarHeight=40&#34; alt=&#34;https://opencollective.com/sous-chefs#backers&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/0/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/0/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/1/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/1/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/2/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/2/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/3/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/3/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/4/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/4/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/5/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/5/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/6/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/6/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/7/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/7/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/8/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/8/website&#34;&gt; &lt;img src=&#34;https://opencollective.com/sous-chefs/sponsor/9/avatar.svg?avatarHeight=100&#34; alt=&#34;https://opencollective.com/sous-chefs/sponsor/9/website&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>macOScontainers/homebrew-formula</title>
    <updated>2023-09-29T01:34:38Z</updated>
    <id>tag:github.com,2023-09-29:/macOScontainers/homebrew-formula</id>
    <link href="https://github.com/macOScontainers/homebrew-formula" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;macOS &lt;em&gt;native&lt;/em&gt; containers&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;admonitionblock warning&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Warning&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; This software is &lt;em&gt;very&lt;/em&gt; alpha. Use at your own risk. &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_installation&#34;&gt;Installation&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;macOS Catalina or newer&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Disable &lt;a href=&#34;https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection&#34;&gt;System Integrity Protection&lt;/a&gt;. SIP &lt;a href=&#34;https://github.com/containerd/containerd/discussions/5525#discussioncomment-2685649&#34;&gt;doesnâ€™t allow&lt;/a&gt; to &lt;code&gt;chroot&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;# Install packages&#xA;brew install --cask macfuse&#xA;brew install docker docker-buildx macOScontainers/formula/dockerd&#xA;&#xA;# Start services&#xA;sudo brew services start containerd&#xA;sudo brew services start dockerd&#xA;&#xA;# Set up BuildKit&#xA;mkdir -p ~/.docker/cli-plugins&#xA;ln -sfn /opt/homebrew/opt/docker-buildx/bin/docker-buildx ~/.docker/cli-plugins/docker-buildx&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_usage&#34;&gt;Usage&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Authenticate to GitHub Container Registry using &lt;a href=&#34;https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry&#34;&gt;instructions&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;echo &amp;lt;YOUR_ACCESS_TOKEN&amp;gt; | docker login ghcr.io -u &amp;lt;GITHUB_USERNAME&amp;gt; --password-stdin&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Then, run your first macOS container:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker run --rm -it ghcr.io/macoscontainers/macos-jail/ventura:latest echo &#34;Hello from macOS container ^_^&#34;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_how_does_it_work&#34;&gt;How does it work?&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;See &lt;a href=&#34;https://github.com/macOScontainers/rund#rund&#34;&gt;rund&lt;/a&gt; repository for under-the-hood machinery.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>