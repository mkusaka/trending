<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-21T01:43:53Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ankane/polars-ruby</title>
    <updated>2023-01-21T01:43:53Z</updated>
    <id>tag:github.com,2023-01-21:/ankane/polars-ruby</id>
    <link href="https://github.com/ankane/polars-ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blazingly fast DataFrames for Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Polars Ruby&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;ðŸ”¥&lt;/span&gt; Blazingly fast DataFrames for Ruby, powered by &lt;a href=&#34;https://github.com/pola-rs/polars&#34;&gt;Polars&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankane/polars-ruby/actions&#34;&gt;&lt;img src=&#34;https://github.com/ankane/polars-ruby/workflows/build/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add this line to your applicationâ€™s Gemfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;gem &#34;polars-df&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This library follows the &lt;a href=&#34;https://pola-rs.github.io/polars/py-polars/html/reference/index.html&#34;&gt;Polars Python API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars.read_csv(&#34;iris.csv&#34;)&#xA;  .lazy&#xA;  .filter(Polars.col(&#34;sepal_length&#34;) &amp;gt; 5)&#xA;  .groupby(&#34;species&#34;)&#xA;  .agg(Polars.all.sum)&#xA;  .collect&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can follow &lt;a href=&#34;https://pola-rs.github.io/polars-book/user-guide/introduction.html&#34;&gt;Polars tutorials&lt;/a&gt; and convert the code to Ruby in many cases. Feel free to open an issue if you run into problems.&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/polars-df/Polars/Series&#34;&gt;Series&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/polars-df/Polars/DataFrame&#34;&gt;DataFrame&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rubydoc.info/gems/polars-df/Polars/LazyFrame&#34;&gt;LazyFrame&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Creating DataFrames&lt;/h3&gt; &#xA;&lt;p&gt;From a CSV&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars.read_csv(&#34;file.csv&#34;)&#xA;&#xA;# or lazily with&#xA;Polars.scan_csv(&#34;file.csv&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From Parquet&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars.read_parquet(&#34;file.parquet&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From Active Record&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars.read_sql(User.all)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From a hash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars::DataFrame.new({&#xA;  a: [1, 2, 3],&#xA;  b: [&#34;one&#34;, &#34;two&#34;, &#34;three&#34;]&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From an array of series&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars::DataFrame.new([&#xA;  Polars::Series.new(&#34;a&#34;, [1, 2, 3]),&#xA;  Polars::Series.new(&#34;b&#34;, [&#34;one&#34;, &#34;two&#34;, &#34;three&#34;])&#xA;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Attributes&lt;/h2&gt; &#xA;&lt;p&gt;Get number of rows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.height&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get column names&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.columns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check if a column exists&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.include?(name)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Selecting Data&lt;/h2&gt; &#xA;&lt;p&gt;Select a column&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select multiple columns&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[[&#34;a&#34;, &#34;b&#34;]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select first rows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.head&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select last rows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.tail&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Filtering&lt;/h2&gt; &#xA;&lt;p&gt;Filter on a condition&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[Polars.col(&#34;a&#34;) == 2]&#xA;df[Polars.col(&#34;a&#34;) != 2]&#xA;df[Polars.col(&#34;a&#34;) &amp;gt; 2]&#xA;df[Polars.col(&#34;a&#34;) &amp;gt;= 2]&#xA;df[Polars.col(&#34;a&#34;) &amp;lt; 2]&#xA;df[Polars.col(&#34;a&#34;) &amp;lt;= 2]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And, or, and exclusive or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[(Polars.col(&#34;a&#34;) &amp;gt; 1) &amp;amp; (Polars.col(&#34;b&#34;) == &#34;two&#34;)] # and&#xA;df[(Polars.col(&#34;a&#34;) &amp;gt; 1) | (Polars.col(&#34;b&#34;) == &#34;two&#34;)] # or&#xA;df[(Polars.col(&#34;a&#34;) &amp;gt; 1) ^ (Polars.col(&#34;b&#34;) == &#34;two&#34;)] # xor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Operations&lt;/h2&gt; &#xA;&lt;p&gt;Basic operations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;] + 5&#xA;df[&#34;a&#34;] - 5&#xA;df[&#34;a&#34;] * 5&#xA;df[&#34;a&#34;] / 5&#xA;df[&#34;a&#34;] % 5&#xA;df[&#34;a&#34;] ** 2&#xA;df[&#34;a&#34;].sqrt&#xA;df[&#34;a&#34;].abs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rounding&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].round(2)&#xA;df[&#34;a&#34;].ceil&#xA;df[&#34;a&#34;].floor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Logarithm&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].log # natural log&#xA;df[&#34;a&#34;].log(10)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exponentiation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].exp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Trigonometric functions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].sin&#xA;df[&#34;a&#34;].cos&#xA;df[&#34;a&#34;].tan&#xA;df[&#34;a&#34;].asin&#xA;df[&#34;a&#34;].acos&#xA;df[&#34;a&#34;].atan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hyperbolic functions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].sinh&#xA;df[&#34;a&#34;].cosh&#xA;df[&#34;a&#34;].tanh&#xA;df[&#34;a&#34;].asinh&#xA;df[&#34;a&#34;].acosh&#xA;df[&#34;a&#34;].atanh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Summary statistics&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].sum&#xA;df[&#34;a&#34;].mean&#xA;df[&#34;a&#34;].median&#xA;df[&#34;a&#34;].quantile(0.90)&#xA;df[&#34;a&#34;].min&#xA;df[&#34;a&#34;].max&#xA;df[&#34;a&#34;].std&#xA;df[&#34;a&#34;].var&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Grouping&lt;/h2&gt; &#xA;&lt;p&gt;Group&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.groupby(&#34;a&#34;).count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Works with all summary statistics&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.groupby(&#34;a&#34;).max&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple groups&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.groupby([&#34;a&#34;, &#34;b&#34;]).count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Combining Data Frames&lt;/h2&gt; &#xA;&lt;p&gt;Add rows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.vstack(other_df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add columns&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.hstack(other_df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inner join&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.join(other_df, on: &#34;a&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Left join&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.join(other_df, on: &#34;a&#34;, how: &#34;left&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Encoding&lt;/h2&gt; &#xA;&lt;p&gt;One-hot encoding&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.to_dummies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Conversion&lt;/h2&gt; &#xA;&lt;p&gt;Array of rows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.rows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hash of series&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.to_h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CSV&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.to_csv&#xA;# or&#xA;df.write_csv(&#34;data.csv&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parquet&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.write_parquet(&#34;data.parquet&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Types&lt;/h2&gt; &#xA;&lt;p&gt;You can specify column types when creating a data frame&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Polars::DataFrame.new(data, columns: {&#34;a&#34; =&amp;gt; Polars::Int32, &#34;b&#34; =&amp;gt; Polars::Float32})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Supported types are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;boolean - &lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;float - &lt;code&gt;Float64&lt;/code&gt;, &lt;code&gt;Float32&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;integer - &lt;code&gt;Int64&lt;/code&gt;, &lt;code&gt;Int32&lt;/code&gt;, &lt;code&gt;Int16&lt;/code&gt;, &lt;code&gt;Int8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;unsigned integer - &lt;code&gt;UInt64&lt;/code&gt;, &lt;code&gt;UInt32&lt;/code&gt;, &lt;code&gt;UInt16&lt;/code&gt;, &lt;code&gt;UInt8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;string - &lt;code&gt;Utf8&lt;/code&gt;, &lt;code&gt;Categorical&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;temporal - &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Datetime&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;Duration&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get column types&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df.schema&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a specific column&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].dtype&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cast a column&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;df[&#34;a&#34;].cast(Polars::Int32)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://raw.githubusercontent.com/ankane/polars-ruby/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Everyone is encouraged to help improve this project. Here are a few ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ankane/polars-ruby/issues&#34;&gt;Report bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs and &lt;a href=&#34;https://github.com/ankane/polars-ruby/pulls&#34;&gt;submit pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write, clarify, or fix documentation&lt;/li&gt; &#xA; &lt;li&gt;Suggest or add new features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get started with development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ankane/polars-ruby.git&#xA;cd polars-ruby&#xA;bundle install&#xA;bundle exec rake compile&#xA;bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>