<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Ruby Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T01:34:39Z</updated>
  <subtitle>Daily Trending of Ruby in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jekyll/jekyll</title>
    <updated>2022-06-05T01:34:39Z</updated>
    <id>tag:github.com,2022-06-05:/jekyll/jekyll</id>
    <link href="https://github.com/jekyll/jekyll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üåê Jekyll is a blog-aware static site generator in Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rubygems.org/gems/jekyll&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/jekyll.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jekyll/jekyll/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/jekyll/jekyll/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;Linux Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/jekyll/jekyll/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/jekyll/jekyll/master.svg?label=Windows%20build&#34; alt=&#34;Windows Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/jekyll/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/jekyll/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;Jekyll does what you tell it to do&amp;nbsp;‚Äî no more, no less. It doesn&#39;t try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://jekyllrb.com/philosophy&#34;&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/docs/installation/&#34;&gt;Install&lt;/a&gt; the gem&lt;/li&gt; &#xA; &lt;li&gt;Read up about its &lt;a href=&#34;https://jekyllrb.com/docs/usage/&#34;&gt;Usage&lt;/a&gt; and &lt;a href=&#34;https://jekyllrb.com/docs/configuration/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Take a gander at some existing &lt;a href=&#34;https://github.com/jekyll/jekyll/wiki/sites&#34;&gt;Sites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jekyll/jekyll/fork&#34;&gt;Fork&lt;/a&gt; and &lt;a href=&#34;https://jekyllrb.com/docs/contributing/&#34;&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt; &#xA; &lt;li&gt;Have questions? Check out our official forum community &lt;a href=&#34;https://talk.jekyllrb.com/&#34;&gt;Jekyll Talk&lt;/a&gt; and &lt;a href=&#34;https://libera.chat&#34;&gt;&lt;code&gt;#jekyll&lt;/code&gt; Channel on Libera IRC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Diving In&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://import.jekyllrb.com/docs/home/&#34;&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt; &#xA; &lt;li&gt;Learn how &lt;a href=&#34;https://jekyllrb.com/docs/front-matter/&#34;&gt;Front Matter&lt;/a&gt; works&lt;/li&gt; &#xA; &lt;li&gt;Put information on your site with &lt;a href=&#34;https://jekyllrb.com/docs/variables/&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Customize the &lt;a href=&#34;https://jekyllrb.com/docs/permalinks/&#34;&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt; &#xA; &lt;li&gt;Use the built-in &lt;a href=&#34;https://jekyllrb.com/docs/templates/&#34;&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt; &#xA; &lt;li&gt;Use custom &lt;a href=&#34;https://jekyllrb.com/docs/plugins/&#34;&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://jekyllrb.com/tutorials/video-walkthroughs/&#34;&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t find the answer to your problem in our &lt;a href=&#34;https://jekyllrb.com/docs/&#34;&gt;docs&lt;/a&gt;, or in the &lt;a href=&#34;https://jekyllrb.com/docs/troubleshooting/&#34;&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href=&#34;https://jekyllrb.com/docs/community/&#34;&gt;community&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a &lt;a href=&#34;https://jekyllrb.com/docs/conduct/&#34;&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of conduct.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our &lt;a href=&#34;https://jekyllrb.com/team/#core-team&#34;&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&#34;https://opencollective.com/jekyll#sponsor&#34;&gt;Become a sponsor!&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jekyll/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;Jekyll Sponsor 9&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://raw.githubusercontent.com/jekyll/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Jekyll Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! üôè &lt;a href=&#34;https://opencollective.com/jekyll#backer&#34;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/jekyll#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/jekyll/backers.svg?width=890&#34; alt=&#34;Jekyll Backers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jekyll/jekyll/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stripe/stripe-ruby</title>
    <updated>2022-06-05T01:34:39Z</updated>
    <id>tag:github.com,2022-06-05:/stripe/stripe-ruby</id>
    <link href="https://github.com/stripe/stripe-ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ruby library for the Stripe API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stripe Ruby Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/rb/stripe&#34;&gt;&lt;img src=&#34;https://badge.fury.io/rb/stripe.svg?sanitize=true&#34; alt=&#34;Gem Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/stripe/stripe-ruby&#34;&gt;&lt;img src=&#34;https://travis-ci.org/stripe/stripe-ruby.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Stripe Ruby library provides convenient access to the Stripe API from applications written in the Ruby language. It includes a pre-defined set of classes for API resources that initialize themselves dynamically from API responses which makes it compatible with a wide range of versions of the Stripe API.&lt;/p&gt; &#xA;&lt;p&gt;The library also provides other features. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy configuration path for fast setup and use.&lt;/li&gt; &#xA; &lt;li&gt;Helpers for pagination.&lt;/li&gt; &#xA; &lt;li&gt;Built-in mechanisms for the serialization of parameters according to the expectations of Stripe&#39;s API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://stripe.com/docs/api?lang=ruby&#34;&gt;Ruby API docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.youtube.com/playlist?list=PLy1nL-pvL2M50RmP6ie-gdcSnfOuQCRYk&#34;&gt;video demonstrations&lt;/a&gt; covering how to use the library.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You don&#39;t need this source code unless you want to modify the gem. If you just want to use the package, just run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem install stripe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to build the gem from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gem build stripe.gemspec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ruby 2.3+.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bundler&lt;/h3&gt; &#xA;&lt;p&gt;If you are installing via bundler, you should be sure to use the https rubygems source in your Gemfile, as any gems fetched over http could potentially be compromised in transit and alter the code of gems fetched securely over https:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;source &#39;https://rubygems.org&#39;&#xA;&#xA;gem &#39;rails&#39;&#xA;gem &#39;stripe&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The library needs to be configured with your account&#39;s secret key which is available in your &lt;a href=&#34;https://dashboard.stripe.com/account/apikeys&#34;&gt;Stripe Dashboard&lt;/a&gt;. Set &lt;code&gt;Stripe.api_key&lt;/code&gt; to its value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;stripe&#39;&#xA;Stripe.api_key = &#39;sk_test_...&#39;&#xA;&#xA;# list customers&#xA;Stripe::Customer.list()&#xA;&#xA;# retrieve single customer&#xA;Stripe::Customer.retrieve(&#39;cus_123456789&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Per-request Configuration&lt;/h3&gt; &#xA;&lt;p&gt;For apps that need to use multiple keys during the lifetime of a process, like one that uses &lt;a href=&#34;https://stripe.com/connect&#34;&gt;Stripe Connect&lt;/a&gt;, it&#39;s also possible to set a per-request key and/or account:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#34;stripe&#34;&#xA;&#xA;Stripe::Customer.list(&#xA;  {},&#xA;  {&#xA;    api_key: &#39;sk_test_...&#39;,&#xA;    stripe_account: &#39;acct_...&#39;,&#xA;    stripe_version: &#39;2018-02-28&#39;,&#xA;  }&#xA;)&#xA;&#xA;Stripe::Customer.retrieve(&#xA;  &#39;cus_123456789&#39;,&#xA;  {&#xA;    api_key: &#39;sk_test_...&#39;,&#xA;    stripe_account: &#39;acct_...&#39;,&#xA;    stripe_version: &#39;2018-02-28&#39;,&#xA;  }&#xA;)&#xA;&#xA;Stripe::Customer.retrieve(&#xA;  {&#xA;    id: &#39;cus_123456789&#39;,&#xA;    expand: %w(balance_transaction)&#xA;  },&#xA;  {&#xA;    stripe_version: &#39;2018-02-28&#39;,&#xA;    api_key: &#39;sk_test_...&#39;,&#xA;  }&#xA;)&#xA;&#xA;Stripe::Customer.capture(&#xA;  &#39;cus_123456789&#39;,&#xA;  {},&#xA;  {&#xA;    stripe_version: &#39;2018-02-28&#39;,&#xA;    api_key: &#39;sk_test_...&#39;,&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep in mind that there are different method signatures depending on the action:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When operating on a collection (e.g. &lt;code&gt;.list&lt;/code&gt;, &lt;code&gt;.create&lt;/code&gt;) the method signature is &lt;code&gt;method(params, opts)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;When operating on resource (e.g. &lt;code&gt;.capture&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;) the method signature is &lt;code&gt;method(id, params, opts)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;One exception is that &lt;code&gt;retrieve&lt;/code&gt;, despite being an operation on a resource, has the signature &lt;code&gt;retrieve(id, opts)&lt;/code&gt;. In addition, it will accept a Hash for the &lt;code&gt;id&lt;/code&gt; param but will extract the &lt;code&gt;id&lt;/code&gt; key out and use the others as options.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accessing a response object&lt;/h3&gt; &#xA;&lt;p&gt;Get access to response objects by initializing a client and using its &lt;code&gt;request&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;client = Stripe::StripeClient.new&#xA;customer, resp = client.request do&#xA;  Stripe::Customer.retrieve(&#39;cus_123456789&#39;,)&#xA;end&#xA;puts resp.request_id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring a proxy&lt;/h3&gt; &#xA;&lt;p&gt;A proxy can be configured with &lt;code&gt;Stripe.proxy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.proxy = &#39;https://user:pass@example.com:1234&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring an API Version&lt;/h3&gt; &#xA;&lt;p&gt;By default, the library will use the API version pinned to the account making a request. This can be overridden with this global option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.api_version = &#39;2018-02-28&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://stripe.com/docs/api/versioning?lang=ruby&#34;&gt;versioning in the API reference&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring CA Bundles&lt;/h3&gt; &#xA;&lt;p&gt;By default, the library will use its own internal bundle of known CA certificates, but it&#39;s possible to configure your own:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.ca_bundle_path = &#39;path/to/ca/bundle&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring Automatic Retries&lt;/h3&gt; &#xA;&lt;p&gt;You can enable automatic retries on requests that fail due to a transient problem by configuring the maximum number of retries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.max_network_retries = 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Various errors can trigger a retry, like a connection error or a timeout, and also certain API responses like HTTP status &lt;code&gt;409 Conflict&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stripe.com/docs/api/idempotent_requests?lang=ruby&#34;&gt;Idempotency keys&lt;/a&gt; are added to requests to guarantee that retries are safe.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring Timeouts&lt;/h3&gt; &#xA;&lt;p&gt;Open, read and write timeouts are configurable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.open_timeout = 30 # in seconds&#xA;Stripe.read_timeout = 80&#xA;Stripe.write_timeout = 30 # only supported on Ruby 2.6+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please take care to set conservative read timeouts. Some API requests can take some time, and a short timeout increases the likelihood of a problem within our servers.&lt;/p&gt; &#xA;&lt;h3&gt;Logging&lt;/h3&gt; &#xA;&lt;p&gt;The library can be configured to emit logging that will give you better insight into what it&#39;s doing. The &lt;code&gt;info&lt;/code&gt; logging level is usually most appropriate for production use, but &lt;code&gt;debug&lt;/code&gt; is also available for more verbosity.&lt;/p&gt; &#xA;&lt;p&gt;There are a few options for enabling it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the environment variable &lt;code&gt;STRIPE_LOG&lt;/code&gt; to the value &lt;code&gt;debug&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ export STRIPE_LOG=info&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;Stripe.log_level&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.log_level = Stripe::LEVEL_INFO&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Instrumentation&lt;/h3&gt; &#xA;&lt;p&gt;The library has various hooks that user code can tie into by passing a block to &lt;code&gt;Stripe::Instrumentation.subscribe&lt;/code&gt; to be notified about specific events.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;request_begin&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Invoked when an HTTP request starts. Receives &lt;code&gt;RequestBeginEvent&lt;/code&gt; with the following properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: HTTP method. (&lt;code&gt;Symbol&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Request path. (&lt;code&gt;String&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;user_data&lt;/code&gt;: A hash on which users can set arbitrary data, and which will be passed through to &lt;code&gt;request_end&lt;/code&gt; invocations. This could be used, for example, to assign unique IDs to each request, and it&#39;d work even if many requests are running in parallel. All subscribers share the same object for any particular request, so they must be careful to use unique keys that will not conflict with other subscribers. (&lt;code&gt;Hash&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;request_end&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Invoked when an HTTP request finishes, regardless of whether it terminated with a success or error. Receives &lt;code&gt;RequestEndEvent&lt;/code&gt; with the following properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: Request duration in seconds. (&lt;code&gt;Float&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http_status&lt;/code&gt;: HTTP response code (&lt;code&gt;Integer&lt;/code&gt;) if available, or &lt;code&gt;nil&lt;/code&gt; in case of a lower level network error.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: HTTP method. (&lt;code&gt;Symbol&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;num_retries&lt;/code&gt;: The number of retries. (&lt;code&gt;Integer&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Request path. (&lt;code&gt;String&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;user_data&lt;/code&gt;: A hash on which users may have set arbitrary data in &lt;code&gt;request_begin&lt;/code&gt;. See above for more information. (&lt;code&gt;Hash&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;request_id&lt;/code&gt;. HTTP request identifier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe::Instrumentation.subscribe(:request_end) do |request_event|&#xA;  tags = {&#xA;    method: request_event.method,&#xA;    resource: request_event.path.split(&#39;/&#39;)[2],&#xA;    code: request_event.http_status,&#xA;    retries: request_event.num_retries&#xA;  }&#xA;  StatsD.distribution(&#39;stripe_request&#39;, request_event.duration, tags: tags)&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Writing a Plugin&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re writing a plugin that uses the library, we&#39;d appreciate it if you identified using &lt;code&gt;#set_app_info&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.set_app_info(&#39;MyAwesomePlugin&#39;, version: &#39;1.2.34&#39;, url: &#39;https://myawesomeplugin.info&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This information is passed along when the library makes calls to the Stripe API.&lt;/p&gt; &#xA;&lt;h3&gt;Request latency telemetry&lt;/h3&gt; &#xA;&lt;p&gt;By default, the library sends request latency telemetry to Stripe. These numbers help Stripe improve the overall latency of its API for all users.&lt;/p&gt; &#xA;&lt;p&gt;You can disable this behavior if you prefer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Stripe.enable_telemetry = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;The test suite depends on &lt;a href=&#34;https://github.com/stripe/stripe-mock&#34;&gt;stripe-mock&lt;/a&gt;, so make sure to fetch and run it from a background terminal (&lt;a href=&#34;https://github.com/stripe/stripe-mock&#34;&gt;stripe-mock&#39;s README&lt;/a&gt; also contains instructions for installing via Homebrew and other methods):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go get -u github.com/stripe/stripe-mock&#xA;stripe-mock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec rake test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a single test suite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec ruby -Ilib/ test/stripe/util_test.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run a single test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec ruby -Ilib/ test/stripe/util_test.rb -n /should.convert.names.to.symbols/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the linter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec rake rubocop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update bundled CA certificates from the &lt;a href=&#34;http://curl.haxx.se/docs/caextract.html&#34;&gt;Mozilla cURL release&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle exec rake update_certs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the bundled &lt;a href=&#34;https://github.com/stripe/stripe-mock&#34;&gt;stripe-mock&lt;/a&gt; by editing the version number found in &lt;code&gt;.travis.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!--&#xA;# vim: set tw=79:&#xA;--&gt;</summary>
  </entry>
  <entry>
    <title>vcr/vcr</title>
    <updated>2022-06-05T01:34:39Z</updated>
    <id>tag:github.com,2022-06-05:/vcr/vcr</id>
    <link href="https://github.com/vcr/vcr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Record your test suite&#39;s HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;vcr&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vcr/vcr/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/vcr/vcr/actions/workflows/test.yml/badge.svg?branch=master&#34; alt=&#34;CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://github.com/vcr/vcr/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/vcr/vcr.svg?style=flat-square&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rubygems.org/gems/vcr&#34;&gt;&lt;img src=&#34;https://img.shields.io/gem/v/vcr.svg?style=flat-square&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr#backer&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backers/badge.svg?style=flat-square&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr#sponsor&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsors/badge.svg?style=flat-square&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Record your test suite&#39;s HTTP interactions and replay them during future test runs for fast, deterministic, accurate tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Help Wanted&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re looking for more maintainers. If you&#39;d like to help maintain a well-used gem please spend some time reviewing pull requests, issues, or participating in discussions.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;rubygems&#39;&#xA;require &#39;test/unit&#39;&#xA;require &#39;vcr&#39;&#xA;&#xA;VCR.configure do |config|&#xA;  config.cassette_library_dir = &#34;fixtures/vcr_cassettes&#34;&#xA;  config.hook_into :webmock&#xA;end&#xA;&#xA;class VCRTest &amp;lt; Test::Unit::TestCase&#xA;  def test_example_dot_com&#xA;    VCR.use_cassette(&#34;synopsis&#34;) do&#xA;      response = Net::HTTP.get_response(URI(&#39;http://www.iana.org/domains/reserved&#39;))&#xA;      assert_match /Example domains/, response.body&#xA;    end&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run this test once, and VCR will record the HTTP request to &lt;code&gt;fixtures/vcr_cassettes/synopsis.yml&lt;/code&gt;. Run it again, and VCR will replay the response from iana.org when the HTTP request is made. This test is now fast (no real HTTP requests are made anymore), deterministic (the test will continue to pass, even if you are offline, or iana.org goes down for maintenance) and accurate (the response will contain the same headers and body you get from a real request). You can use a different cassette library directory (e.g., &#34;test/vcr_cassettes&#34;).&lt;/p&gt; &#xA;&lt;p&gt;NOTE: To avoid storing any sensitive information in cassettes, check out &lt;a href=&#34;https://relishapp.com/vcr/vcr/v/5-0-0/docs/configuration/filter-sensitive-data&#34;&gt;Filter Sensitive Data&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rails and Minitest:&lt;/strong&gt; Do &lt;em&gt;not&lt;/em&gt; use &#39;test/fixtures&#39; as the directory if you&#39;re using Rails and Minitest (Rails will instead transitively load any files in that directory as models).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically records and replays your HTTP interactions with minimal setup/configuration code.&lt;/li&gt; &#xA; &lt;li&gt;Supports and works with the HTTP stubbing facilities of multiple libraries. Currently, the following are supported: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bblimke/webmock&#34;&gt;WebMock&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/excon/excon&#34;&gt;Excon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supports multiple HTTP libraries: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/toland/patron&#34;&gt;Patron&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/taf2/curb&#34;&gt;Curb&lt;/a&gt; (when using WebMock -- only supports Curl::Easy at the moment)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nahi/httpclient&#34;&gt;HTTPClient&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/igrigorik/em-http-request&#34;&gt;em-http-request&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.ruby-doc.org/stdlib/libdoc/net/http/rdoc/index.html&#34;&gt;Net::HTTP&lt;/a&gt; (when using WebMock)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt; (Typhoeus::Hydra, but not Typhoeus::Easy or Typhoeus::Multi)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/geemus/excon&#34;&gt;Excon&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/lostisland/faraday&#34;&gt;Faraday&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;And of course any library built on Net::HTTP, such as &lt;a href=&#34;https://github.com/sparklemotion/mechanize&#34;&gt;Mechanize&lt;/a&gt;, &lt;a href=&#34;https://github.com/jnunemaker/httparty&#34;&gt;HTTParty&lt;/a&gt; or &lt;a href=&#34;https://github.com/rest-client/rest-client&#34;&gt;Rest Client&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Request matching is configurable based on HTTP method, URI, host, path, body and headers, or you can easily implement a custom request matcher to handle any need.&lt;/li&gt; &#xA; &lt;li&gt;The same request can receive different responses in different tests--just use different cassettes.&lt;/li&gt; &#xA; &lt;li&gt;The recorded requests and responses are stored on disk in a serialization format of your choice (currently YAML and JSON are built in, and you can easily implement your own custom serializer) and can easily be inspected and edited.&lt;/li&gt; &#xA; &lt;li&gt;Dynamic responses are supported using ERB.&lt;/li&gt; &#xA; &lt;li&gt;Optionally re-records cassettes on a configurable regular interval to keep them fresh and current.&lt;/li&gt; &#xA; &lt;li&gt;Disables all HTTP requests that you don&#39;t explicitly allow.&lt;/li&gt; &#xA; &lt;li&gt;Simple Cucumber integration is provided using tags.&lt;/li&gt; &#xA; &lt;li&gt;Includes convenient RSpec macros and integration with RSpec 2 metadata.&lt;/li&gt; &#xA; &lt;li&gt;Known to work well with many popular Ruby libraries including RSpec 1 &amp;amp; 2, Cucumber, Test::Unit, Capybara, Mechanize, Rest Client and HTTParty.&lt;/li&gt; &#xA; &lt;li&gt;Includes Rack and Faraday middleware.&lt;/li&gt; &#xA; &lt;li&gt;Supports filtering sensitive data from the response body&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The docs come in two flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://relishapp.com/vcr/vcr/docs&#34;&gt;relish docs&lt;/a&gt; contain example-based documentation (VCR&#39;s Cucumber suite, in fact). It&#39;s a good place to look when you are first getting started with VCR, or if you want to see an example of how to use a feature.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://www.rubydoc.info/gems/vcr/frames&#34;&gt;rubydoc.info docs&lt;/a&gt; contain API documentation. The API docs contain detailed info about all of VCR&#39;s public API.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://github.com/vcr/vcr/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; doc for info about what&#39;s new and changed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is also a Railscast (from 2011), which will get you up and running in no-time &lt;a href=&#34;http://railscasts.com/episodes/291-testing-with-vcr&#34;&gt;http://railscasts.com/episodes/291-testing-with-vcr&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Release Policy&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;VCR follows the principles of &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt;. The &lt;a href=&#34;https://rubydoc.info/gems/vcr/frames&#34;&gt;API documentation&lt;/a&gt; defines VCR&#39;s public API. Patch level releases contain only bug fixes. Minor releases contain backward-compatible new features. Major new releases contain backwards-incompatible changes to the public API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruby Interpreter Compatibility&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;VCR versions 6.x are tested on the following ruby interpreters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MRI 3.1&lt;/li&gt; &#xA; &lt;li&gt;MRI 3.0&lt;/li&gt; &#xA; &lt;li&gt;MRI 2.7&lt;/li&gt; &#xA; &lt;li&gt;MRI 2.6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vcr/vcr/releases/tag/v6.0.0&#34;&gt;VCR 6.0.0&lt;/a&gt; is the last version supporting &amp;gt;= 2.4. Upcoming releases will only explicitly support &amp;gt;= 2.6.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source hosted on &lt;a href=&#34;https://github.com/vcr/vcr&#34;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Direct questions and discussions on &lt;a href=&#34;https://github.com/vcr/vcr/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Report bugs/issues on &lt;a href=&#34;https://github.com/vcr/vcr/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Pull requests are very welcome! Please include spec and/or feature coverage for every patch, and create a topic branch for every separate change you make.&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://github.com/vcr/vcr/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guide for instructions on running the specs and features.&lt;/li&gt; &#xA; &lt;li&gt;Code quality metrics are checked by &lt;a href=&#34;https://codeclimate.com/github/vcr/vcr&#34;&gt;Code Climate&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Documentation is generated with &lt;a href=&#34;https://yardoc.org/&#34;&gt;YARD&lt;/a&gt; (&lt;a href=&#34;https://rubydoc.info/gems/yard/file/docs/GettingStarted.md&#34;&gt;cheat sheet&lt;/a&gt;). To generate while developing:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yard server --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ports in Other Languages&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sigmavirus24/betamax&#34;&gt;Betamax&lt;/a&gt; (Python)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kevin1024/vcrpy&#34;&gt;VCR.py&lt;/a&gt; (Python)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thegreatape/betamax&#34;&gt;Betamax&lt;/a&gt; (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orchestrate-io/dvr&#34;&gt;DVR&lt;/a&gt; (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dnaeon/go-vcr&#34;&gt;Go VCR&lt;/a&gt; (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wjlroe/betamax&#34;&gt;Betamax&lt;/a&gt; (Clojure)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ifesdjeen/vcr-clj&#34;&gt;vcr-clj&lt;/a&gt; (Clojure)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mleech/scotch&#34;&gt;scotch&lt;/a&gt; (C#/.NET)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfloryan/Betamax.Net&#34;&gt;Betamax.NET&lt;/a&gt; (C#/.NET)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/parroty/exvcr&#34;&gt;ExVCR&lt;/a&gt; (Elixir)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cordawyn/havcr&#34;&gt;HAVCR&lt;/a&gt; (Haskell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acoulton/mimic&#34;&gt;Mimic&lt;/a&gt; (PHP/Kohana)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/php-vcr/php-vcr&#34;&gt;PHP-VCR&lt;/a&gt; (PHP)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ijpiantanida/talkback&#34;&gt;Talkback&lt;/a&gt; (JavaScript/Node)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org/martijnthe/nsurlconnectionvcr&#34;&gt;NSURLConnectionVCR&lt;/a&gt; (Objective-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dstnbrkr/VCRURLConnection&#34;&gt;VCRURLConnection&lt;/a&gt; (Objective-C)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/venmo/DVR&#34;&gt;DVR&lt;/a&gt; (Swift)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/diegoeche/vhs&#34;&gt;VHS&lt;/a&gt; (Erlang)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/betamaxteam/betamax&#34;&gt;Betamax&lt;/a&gt; (Java)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ucarion/http_replayer&#34;&gt;http_replayer&lt;/a&gt; (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airbnb/okreplay&#34;&gt;OkReplay&lt;/a&gt; (Java/Android)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/vcr&#34;&gt;vcr&lt;/a&gt; (R)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Related Projects&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quidproquo/mr_video&#34;&gt;Mr. Video&lt;/a&gt; (Rails engine for managing VCR cassettes and episodes)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Similar Libraries in Ruby&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sandro/ephemeral_response&#34;&gt;Ephemeral Response&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martinbtt/net-http-spy&#34;&gt;Net::HTTP Spy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisyoung/netrecorder&#34;&gt;NetRecorder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oesmith/puffing-billy&#34;&gt;Puffing Billy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/artemave/REST-assured&#34;&gt;REST-assured&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsmestad/stale_fish&#34;&gt;Stale Fish&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trydionel/web_fixtures&#34;&gt;WebFixtures&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aslakhellesoy&#34;&gt;Aslak Helles√∏y&lt;/a&gt; for &lt;a href=&#34;https://github.com/aslakhellesoy/cucumber&#34;&gt;Cucumber&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bblimke&#34;&gt;Bartosz Blimke&lt;/a&gt; for &lt;a href=&#34;https://github.com/bblimke/webmock&#34;&gt;WebMock&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisk&#34;&gt;Chris Kampmeier&lt;/a&gt; for &lt;a href=&#34;https://github.com/chrisk/fakeweb&#34;&gt;FakeWeb&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisyoung&#34;&gt;Chris Young&lt;/a&gt; for &lt;a href=&#34;https://github.com/chrisyoung/netrecorder&#34;&gt;NetRecorder&lt;/a&gt;, the inspiration for VCR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dbalatero&#34;&gt;David Balatero&lt;/a&gt; and &lt;a href=&#34;https://github.com/i0rek&#34;&gt;Hans Hasselberg&lt;/a&gt; for help with &lt;a href=&#34;https://github.com/typhoeus/typhoeus&#34;&gt;Typhoeus&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geemus&#34;&gt;Wesley Beary&lt;/a&gt; for help with &lt;a href=&#34;https://github.com/geemus/excon&#34;&gt;Excon&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jacobkg&#34;&gt;Jacob Green&lt;/a&gt; for help with ongoing VCR maintenance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrbrdo&#34;&gt;Jan Berdajs&lt;/a&gt; and &lt;a href=&#34;https://github.com/djberg96&#34;&gt;Daniel Berger&lt;/a&gt; for improvements to thread-safety.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks also to the following people who have contributed patches or helpful suggestions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aaronbrethorst&#34;&gt;Aaron Brethorst&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wenzowski&#34;&gt;Alexander Wenzowski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/austenito&#34;&gt;Austen Ito&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/avdi&#34;&gt;Avdi Grimm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/bblimke&#34;&gt;Bartosz Blimke&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benjaminoakes&#34;&gt;Benjamin Oakes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/benhutton&#34;&gt;Ben Hutton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bradleyisotope&#34;&gt;Bradley Isotope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kirkconnell&#34;&gt;Carlos Kirkconnell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cjolly&#34;&gt;Chad Jolly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisle&#34;&gt;Chris Le&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cgunther&#34;&gt;Chris Gunther&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emaiax&#34;&gt;Eduardo Maia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubymaverick&#34;&gt;Eric Allam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ezkl&#34;&gt;Ezekiel Templin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/closedbracket&#34;&gt;Flaviu Simihaian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gordoncww&#34;&gt;Gordon Wilson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i0rek&#34;&gt;Hans Hasselberg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Hermanverschooten&#34;&gt;Herman Verschooten&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sigmavirus24&#34;&gt;Ian Cordasco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ingemar&#34;&gt;Ingemar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quidproquo&#34;&gt;Ilya Scharrenbroich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jacobkg&#34;&gt;Jacob Green&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbence&#34;&gt;James Bence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jayshepherd&#34;&gt;Jay Shepherd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fluxx&#34;&gt;Jeff Pollard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/begriffs&#34;&gt;Joe Nelson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JonathanTron&#34;&gt;Jonathan Tron&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsmestad&#34;&gt;Justin Smestad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kbaum&#34;&gt;Karl Baum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kris-luminar&#34;&gt;Kris Luminar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kurtfunai&#34;&gt;Kurt Funai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/plukevdh&#34;&gt;Luke van der Hoeven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/markburns&#34;&gt;Mark Burns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kavu&#34;&gt;Max Riveiro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vrish88&#34;&gt;Michael Lavrisha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mdemare&#34;&gt;Michiel de Mare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kcdragon&#34;&gt;Mike Dalton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mislav&#34;&gt;Mislav Marohniƒá&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nbibler&#34;&gt;Nathaniel Bibler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/noahd1&#34;&gt;Noah Davis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opsb&#34;&gt;Oliver Searle-Barnes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rauchy&#34;&gt;Omer Rauchwerger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pacoguzman&#34;&gt;Paco Guzm√°n&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jumanjiman&#34;&gt;Paul Morgan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/playupchris&#34;&gt;playupchris&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ronwsmith&#34;&gt;Ron Smith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanb&#34;&gt;Ryan Bates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhburrows&#34;&gt;Ryan Burrows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rmcastil&#34;&gt;Ryan Castillo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sfsekaran&#34;&gt;Sathya Sekaran&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ScotterC&#34;&gt;Scott Carleton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shayfrendt&#34;&gt;Shay Frendt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/southpolesteve&#34;&gt;Steve Faulkner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bendycode&#34;&gt;Stephen Anderson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tlunter&#34;&gt;Todd Lunter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tylerhunt&#34;&gt;Tyler Hunt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ugisozols&#34;&gt;Uƒ£is Ozols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vzvu3k6k&#34;&gt;vzvu3k6k&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/geemus&#34;&gt;Wesley Beary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Backers&lt;/h1&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&#34;https://opencollective.com/vcr#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/vcr/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/0/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/1/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/2/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/3/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/4/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/5/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/6/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/7/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/8/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/9/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/10/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/11/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/12/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/13/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/14/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/15/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/16/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/17/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/18/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/19/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/20/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/21/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/22/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/23/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/24/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/25/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/26/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/27/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/28/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/backer/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/backer/29/avatar&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&#34;https://opencollective.com/vcr#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/vcr/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/0/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/1/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/2/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/3/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/4/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/5/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/6/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/7/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/8/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/9/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/10/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/11/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/12/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/13/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/14/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/15/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/16/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/17/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/18/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/19/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/20/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/21/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/22/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/23/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/24/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/25/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/26/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/27/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/28/avatar&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vcr/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vcr/sponsor/29/avatar&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>