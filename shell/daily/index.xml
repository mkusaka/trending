<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-22T01:44:36Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cryptoc0ding/pancakeswap-prediction</title>
    <updated>2023-01-22T01:44:36Z</updated>
    <id>tag:github.com,2023-01-22:/cryptoc0ding/pancakeswap-prediction</id>
    <link href="https://github.com/cryptoc0ding/pancakeswap-prediction" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The bot that uses signals from TradingView to predict the price of BNB for Up or Down in PancakeSwap&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;[üî• UPDATE] PancakeSwap Prediction Bot&lt;/h1&gt; &#xA;&lt;p&gt;This is a PancakeSwap Prediction game bot, it includes backtesting code so you can try new strategies changing the &lt;code&gt;env&lt;/code&gt; variables on a risk free environment.&lt;/p&gt; &#xA;&lt;p&gt;It works with PancakePredictionV2 (&lt;a href=&#34;https://pancakeswap.finance/prediction&#34;&gt;https://pancakeswap.finance/prediction&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;üí° How to use&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Provide your private key to .env PRIVATE_KEY field&#xA;2. Clone repo&#xA;4. Start the app &#xA;5. Enjoy winning!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üîì How to convert seed phrase to Private Key&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;A lot of wallets don&#39;t provide you the private key, but just the **seed phrase** ( 12 words ). So here you will learn how to convert that to a private key:&#xA;1. Enter [Here](https://youtu.be/eAXdLEZFbiw) and follow the instructions. Website used is [this one](https://iancoleman.io/bip39/).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cryptoc0ding/pancakeswap-prediction/main/img/image1.png&#34; alt=&#34;alt PancakeSwap Prediction Bot-Winner Screenshot&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cryptoc0ding/pancakeswap-prediction/main/img/image2.png&#34; alt=&#34;alt Candle Genie Bot-Winner Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Strategy&lt;/h3&gt; &#xA;&lt;p&gt;It bets on the biggest of the bull or bear payout.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;const bet = roundBullAmount &amp;lt; roundBearAmount ? &#39;bull&#39; : &#39;bear&#39;;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To increase the bet amount the bot uses this strategy (check the .env to modify the multiplier and the initial bet amount)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;https://en.wikipedia.org/wiki/Martingale_(probability_theory)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;‚ö†Ô∏è Beware of forks. I do not give any guarantee that the fork may turn out to be a scam.&lt;/h3&gt; &#xA;&lt;h3&gt;üí• Disclaimer&lt;/h3&gt; &#xA;&lt;p&gt;All investment strategies and investments involve risk of loss. &lt;strong&gt;Nothing contained in this program, scripts, code or repository should be construed as investment advice.&lt;/strong&gt; Any reference to an investment&#39;s past or potential performance is not, and should not be construed as, a recommendation or as a guarantee of any specific outcome or profit. By using this program you accept all liabilities, and that no claims can be made against the developers or others connected with the program.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Cyb0r9/SocialBox</title>
    <updated>2023-01-22T01:44:36Z</updated>
    <id>tag:github.com,2023-01-22:/Cyb0r9/SocialBox</id>
    <link href="https://github.com/Cyb0r9/SocialBox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SocialBox is a Bruteforce Attack Framework [ Facebook , Gmail , Instagram ,Twitter ] , Coded By Belahsan Ouerghi&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SocialBox&lt;/h1&gt; &#xA;&lt;p&gt;SocialBox is a Bruteforce Attack Framework [ Facebook , Gmail , Instagram ,Twitter ] , Coded By Belahsan Ouerghi&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install git&#xA;git clone https://github.com/TunisianEagles/SocialBox.git&#xA;cd SocialBox&#xA;chmod +x SocialBox.sh&#xA;chmod +x install-sb.sh&#xA;./install-sb.sh&#xA;./SocialBox.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Screenshots :&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TunisianEagles/SocialBox/master/Screenshots/sb.png&#34; alt=&#34;Test Image 8&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tested On :&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backbox linux&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu&lt;/li&gt; &#xA; &lt;li&gt;Kali linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/ouerghi.belahsan&#34;&gt;Contact&lt;/a&gt; - Belahsan Ouerghi&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Authors :&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;facebook : Imad&lt;/li&gt; &#xA; &lt;li&gt;gmail : Ha3MrX&lt;/li&gt; &#xA; &lt;li&gt;instagram : thelinuxchoice&lt;/li&gt; &#xA; &lt;li&gt;Twitter : thelinuxchoice&lt;/li&gt; &#xA; &lt;li&gt;SocialBox : Belahsan Ouerghi&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nezhar/wordpress-docker-compose</title>
    <updated>2023-01-22T01:44:36Z</updated>
    <id>tag:github.com,2023-01-22:/nezhar/wordpress-docker-compose</id>
    <link href="https://github.com/nezhar/wordpress-docker-compose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy Wordpress development with Docker and Docker Compose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WPDC - WordPress Docker Compose&lt;/h1&gt; &#xA;&lt;p&gt;Easy WordPress development with Docker and Docker Compose.&lt;/p&gt; &#xA;&lt;p&gt;With this project you can quickly run the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/wordpress/&#34;&gt;WordPress and WP CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/phpmyadmin/phpmyadmin/&#34;&gt;phpMyAdmin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/mysql/&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nezhar/wordpress-docker-compose/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nezhar/wordpress-docker-compose/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nezhar/wordpress-docker-compose/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nezhar/wordpress-docker-compose/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have the latest versions of &lt;strong&gt;Docker&lt;/strong&gt; and &lt;strong&gt;Docker Compose&lt;/strong&gt; installed on your machine.&lt;/p&gt; &#xA;&lt;p&gt;Clone this repository or copy the files from this repository into a new folder. In the &lt;strong&gt;docker-compose.yml&lt;/strong&gt; file you may change the IP address (in case you run multiple containers) or the database from MySQL to MariaDB.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to &lt;a href=&#34;https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user&#34;&gt;add your user to the &lt;code&gt;docker&lt;/code&gt; group&lt;/a&gt; when using Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Copy the example environment into &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit the &lt;code&gt;.env&lt;/code&gt; file to change the default IP address, MySQL root password and WordPress database name.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Open a terminal and &lt;code&gt;cd&lt;/code&gt; to the folder in which &lt;code&gt;docker-compose.yml&lt;/code&gt; is saved and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This creates two new folders next to your &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wp-data&lt;/code&gt; ‚Äì used to store and restore database dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wp-app&lt;/code&gt; ‚Äì the location of your WordPress application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The containers are now built and running. You should be able to access the WordPress installation with the configured IP in the browser address. By default it is &lt;code&gt;http://127.0.0.1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For convenience you may add a new entry into your hosts file.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Starting containers&lt;/h3&gt; &#xA;&lt;p&gt;You can start the containers with the &lt;code&gt;up&lt;/code&gt; command in daemon mode (by adding &lt;code&gt;-d&lt;/code&gt; as an argument) or by using the &lt;code&gt;start&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Stopping containers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Removing containers&lt;/h3&gt; &#xA;&lt;p&gt;To stop and remove all the containers use the&lt;code&gt;down&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-v&lt;/code&gt; if you need to remove the database volume which is used to persist the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Project from existing source&lt;/h3&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;docker-compose.yml&lt;/code&gt; file into a new directory. In the directory you create two folders:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wp-data&lt;/code&gt; ‚Äì here you add the database dump&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wp-app&lt;/code&gt; ‚Äì here you copy your existing WordPress code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can now use the &lt;code&gt;up&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create the containers and populate the database with the given dump. You may set your host entry and change it in the database, or you simply overwrite it in &lt;code&gt;wp-config.php&lt;/code&gt; by adding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;define(&#39;WP_HOME&#39;,&#39;http://wp-app.local&#39;);&#xA;define(&#39;WP_SITEURL&#39;,&#39;http://wp-app.local&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating database dumps&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;./export.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Developing a Theme&lt;/h3&gt; &#xA;&lt;p&gt;Configure the volume to load the theme in the container in the &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;volumes:&#xA;  - ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Developing a Plugin&lt;/h3&gt; &#xA;&lt;p&gt;Configure the volume to load the plugin in the container in the &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;volumes:&#xA;  - ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;WP CLI&lt;/h3&gt; &#xA;&lt;p&gt;The docker compose configuration also provides a service for using the &lt;a href=&#34;https://developer.wordpress.org/cli/commands/&#34;&gt;WordPress CLI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sample command to install WordPress:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose run --rm wpcli core install --url=http://localhost --title=test --admin_user=admin --admin_email=test@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or to list installed plugins:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose run --rm wpcli plugin list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For an easier usage you may consider adding an alias for the CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias wp=&#34;docker-compose run --rm wpcli&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way you can use the CLI command above as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wp plugin list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;phpMyAdmin&lt;/h3&gt; &#xA;&lt;p&gt;You can also visit &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt; to access phpMyAdmin after starting the containers.&lt;/p&gt; &#xA;&lt;p&gt;The default username is &lt;code&gt;root&lt;/code&gt;, and the password is the same as supplied in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>