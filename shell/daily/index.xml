<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-16T01:36:12Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>newbit1/rootAVD</title>
    <updated>2023-09-16T01:36:12Z</updated>
    <id>tag:github.com,2023-09-16:/newbit1/rootAVD</id>
    <link href="https://github.com/newbit1/rootAVD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script to root AVDs running with QEMU Emulator from Android Studio&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rootAVD&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://forum.xda-developers.com/m/newbit.1350876&#34;&gt;newbit @ xda-developers&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A Script to...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;root your Android Studio Virtual Device (AVD), with Magisk (Stable, Canary or Alpha)&lt;/li&gt; &#xA; &lt;li&gt;patch its fstab&lt;/li&gt; &#xA; &lt;li&gt;download and install the USB HOST Permissions Module for Magisk&lt;/li&gt; &#xA; &lt;li&gt;install custom build Kernel and its Modules&lt;/li&gt; &#xA; &lt;li&gt;download and install AOSP prebuilt Kernel and its Modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...within seconds.&lt;/p&gt; &#xA;&lt;h2&gt;Install Magisk&lt;/h2&gt; &#xA;&lt;h3&gt;Download rootAVD via&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/newbit1/rootAVD/archive/refs/heads/master.zip&#34;&gt;Click&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/newbit1/rootAVD.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Preconditions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the AVD is running&lt;/li&gt; &#xA; &lt;li&gt;a working Internet connection for the Menu&lt;/li&gt; &#xA; &lt;li&gt;a command prompt / terminal is opened&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;adb shell&lt;/code&gt; will connect to the running AVD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Case Examples&lt;/h3&gt; &#xA;&lt;h4&gt;on MacOS&lt;/h4&gt; &#xA;&lt;img src=&#34;https://github.com/newbit1/video-files/raw/master/rootAVD_MacOS.gif&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA;&lt;h4&gt;BlueStacks 4 on MacOS&lt;/h4&gt; &#xA;&lt;img src=&#34;https://github.com/newbit1/video-files/raw/master/rootAVD_MacOS_BlueStacks.gif&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA;&lt;h4&gt;on Windows&lt;/h4&gt; &#xA;&lt;img src=&#34;https://github.com/newbit1/video-files/raw/master/rootAVD_Windows.gif&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA;&lt;h4&gt;on Linux&lt;/h4&gt; &#xA;&lt;img src=&#34;https://github.com/newbit1/video-files/raw/master/rootAVD_Linux.gif&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA;&lt;h4&gt;Fake Boot.img on MacOS&lt;/h4&gt; &#xA;&lt;img src=&#34;https://github.com/newbit1/video-files/raw/master/rootAVD_MacOS_FAKEBOOTIMG.gif&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &#xA;&lt;h3&gt;How to Install ADB (Android SDK Platform-Tools)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Android Studio -&amp;gt; SDK Manager -&amp;gt; Android SDK -&amp;gt; SDK Tools -&amp;gt; Check on &lt;strong&gt;Android SDK Platform-Tools&lt;/strong&gt; -&amp;gt; Apply&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/37043777/140064719-ea2dd704-1aea-4c38-9725-3edbdafe7924.png&#34; width=&#34;200&#34; height=&#34;200&#34;&gt; &#xA;&lt;h2&gt;rootAVD Help Menu&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;rootAVD A Script to root AVD by NewBit XDA&#xA;&#xA;Usage:  rootAVD [DIR/ramdisk.img] [OPTIONS] | [EXTRA ARGUMENTS]&#xA;or:     rootAVD [ARGUMENTS]&#xA;&#xA;Arguments:&#xA;        ListAllAVDs                     Lists Command Examples for ALL installed AVDs&#xA;&#xA;        InstallApps                     Just install all APKs placed in the Apps folder&#xA;&#xA;Main operation mode:&#xA;        DIR                             a path to an AVD system-image&#xA;                                        - must always be the 1st Argument after rootAVD&#xA;&#xA;ADB Path | Ramdisk DIR| ANDROID_HOME:&#xA;        [M]ac/Darwin:                   export PATH=~/Library/Android/sdk/platform-tools:$PATH&#xA;                                        export PATH=$ANDROID_HOME/platform-tools:$PATH&#xA;                                        system-images/android-$API/google_apis_playstore/x86_64/&#xA;&#xA;        [L]inux:                        export PATH=~/Android/Sdk/platform-tools:$PATH&#xA;                                        export PATH=$ANDROID_HOME/platform-tools:$PATH&#xA;                                        system-images/android-$API/google_apis_playstore/x86_64/&#xA;&#xA;        [W]indows:                      set PATH=%LOCALAPPDATA%\Android\Sdk\platform-tools;%PATH%&#xA;                                        system-images\android-$API\google_apis_playstore\x86_64\&#xA;&#xA;        ANDROID_HOME:                   By default, the script uses %LOCALAPPDATA%, to set its Android Home&#xA;                                        directory, search for AVD system-images and ADB binarys. This behaviour&#xA;                                        can be overwritten by setting the ANDROID_HOME variable.&#xA;                                        e.g. set ANDROID_HOME=%USERPROFILE%\Downloads\sdk&#xA;&#xA;        $API:                           25,29,30,31,32,33,34,UpsideDownCake,etc.&#xA;&#xA;Options:&#xA;        restore                         restore all existing .backup files, but doesn&#39;t delete them&#xA;                                        - the AVD doesn&#39;t need to be running&#xA;                                        - no other Argument after will be processed&#xA;&#xA;        InstallKernelModules            install custom build kernel and its modules into ramdisk.img&#xA;                                        - kernel (bzImage) and its modules (initramfs.img) are inside rootAVD&#xA;                                        - both files will be deleted after installation&#xA;&#xA;        InstallPrebuiltKernelModules    download and install an AOSP prebuilt kernel and its modules into ramdisk.img&#xA;                                        - similar to InstallKernelModules, but the AVD needs to be online&#xA;&#xA;Options are exclusive, only one at the time will be processed.&#xA;&#xA;Extra Arguments:&#xA;        DEBUG                           Debugging Mode, prevents rootAVD to pull back any patched file&#xA;&#xA;        PATCHFSTAB                      fstab.ranchu will get patched to automount Block Devices like /dev/block/sda1&#xA;                                        - other entries can be added in the script as well&#xA;                                        - a custom build Kernel might be necessary&#xA;&#xA;        GetUSBHPmodZ                    The USB HOST Permissions Module Zip will be downloaded into /sdcard/Download&#xA;&#xA;        FAKEBOOTIMG                     Creates a fake Boot.img file that can directly be patched from the Magisk APP&#xA;                                        - Magisk will be launched to patch the fake Boot.img within 60s&#xA;                                        - the fake Boot.img will be placed under /sdcard/Download/fakeboot.img&#xA;&#xA;Extra Arguments can be combined, there is no particular order.&#xA;&#xA;Notes: rootAVD will&#xA;- always create .backup files of ramdisk*.img and kernel-ranchu&#xA;- replace both when done patching&#xA;- show a Menu, to choose the Magisk Version (Stable || Canary || Alpha), if the AVD is online&#xA;- make the choosen Magisk Version to its local&#xA;- install all APKs placed in the Apps folder&#xA;- use %LOCALAPPDATA%\Android\Sdk to search for AVD system images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux &amp;amp; MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Command Examples:&#xA;./rootAVD.sh&#xA;./rootAVD.sh ListAllAVDs&#xA;./rootAVD.sh InstallApps&#xA;&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img restore&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-33/google_apis_playstore/x86_64/ramdisk.img AddRCscripts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Command Examples: for ALL installed AVDs&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;./rootAVD.sh&#xA;./rootAVD.sh ListAllAVDs&#xA;./rootAVD.sh InstallApps&#xA;&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img restore&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-25/google_apis/armeabi-v7a/ramdisk.img AddRCscripts&#xA;&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img restore&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-25/google_apis/x86_64/ramdisk.img AddRCscripts&#xA;&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img restore&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-30/google_apis_playstore/x86/ramdisk.img AddRCscripts&#xA;&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img restore&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk-qemu.img AddRCscripts&#xA;&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img restore&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-30/android-automotive-playstore/x86_64/ramdisk.img AddRCscripts&#xA;&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img FAKEBOOTIMG&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img restore&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img InstallKernelModules&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img InstallPrebuiltKernelModules&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;./rootAVD.sh system-images/android-29/android-automotive-playstore/x86/ramdisk.img AddRCscripts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Command Examples:&#xA;rootAVD.bat&#xA;rootAVD.bat ListAllAVDs&#xA;rootAVD.bat InstallApps&#xA;&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img FAKEBOOTIMG&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img restore&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img InstallKernelModules&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Command Examples: for ALL installed AVDs&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img FAKEBOOTIMG&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img restore&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img InstallKernelModules&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules&#xA;rootAVD.bat system-images\android-33\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img FAKEBOOTIMG&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img restore&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img InstallKernelModules&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img FAKEBOOTIMG&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img restore&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img InstallKernelModules&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img InstallPrebuiltKernelModules&#xA;rootAVD.bat system-images\android-25\google_apis_playstore\armeabi-v7a\ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;64 Bit Only Systems needs Magisk 23.x&lt;/li&gt; &#xA; &lt;li&gt;In the Menu, you can choose between the newest Magisk, Canary, Stable and Alpha, Version.&lt;/li&gt; &#xA; &lt;li&gt;With the new Option &lt;code&gt;s&lt;/code&gt;, you can see and download any other Versions of Magisk&lt;/li&gt; &#xA; &lt;li&gt;Once choosen, the script will make that Version to your local one.&lt;/li&gt; &#xA; &lt;li&gt;Prebuilt Kernel and Modules will be pulled from &lt;a href=&#34;https://android.googlesource.com/kernel/prebuilts&#34;&gt;AOSP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Starting Magisk from Terminal via &lt;code&gt;adb shell monkey -p com.topjohnwu.magisk -c android.intent.category.LAUNCHER 1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;API 28 (Pie) is &lt;strong&gt;not supported&lt;/strong&gt; at all -&amp;gt; &lt;a href=&#34;https://source.android.com/devices/bootloader/partitions/system-as-root#sar-partitioning&#34;&gt;because&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Magisk Versions &amp;gt;= 26.x can only be proper installed with the FAKEBOOTIMG argument &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;due to the &lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases/tag/v26.1&#34;&gt;New sepolicy.rule Implementation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android 14 needs Magisk Version &amp;gt;= 26.x to be rooted&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ANDROID_HOME&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default location can be overwritten by setting the &lt;code&gt;ANDROID_HOME&lt;/code&gt; variable&lt;/li&gt; &#xA; &lt;li&gt;In both cases, the script will search in it for AVD system-images and adb binarys&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ANDROID_HOME&lt;/code&gt; Sets the path to the SDK installation directory -&amp;gt; &lt;a href=&#34;https://developer.android.com/tools/variables#envar&#34;&gt;AOSP Variables reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes for Apk Developers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://su.chainfire.eu&#34;&gt;How-To SU&lt;/a&gt; from &lt;a href=&#34;https://github.com/Chainfire&#34;&gt;Chainfire&#39;s&lt;/a&gt; &lt;a href=&#34;https://github.com/Chainfire/libsuperuser&#34;&gt;libsuperuser&lt;/a&gt; - Guidelines for problem-free su usage (for Android Developers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/libsu&#34;&gt;TopJohnWu&#39;s libsu&lt;/a&gt; - An Android library providing a complete solution for apps using root permissions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fake Boot.img Function&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;During runtime, the script will launch the Magisk APK so that you can patch the fake Boot.img within 60s&lt;/li&gt; &#xA; &lt;li&gt;The script also detects if there is already a patched Boot.img present&lt;/li&gt; &#xA; &lt;li&gt;This feature lets you also update and switch between Magisk Versions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Updating a patched ramdisk will delete the overlay.d folder, all mods are gone!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If Magisk can&#39;t open a file manager, i.e. on Automotive AVDs, &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;download and install the famous &lt;a href=&#34;https://www.lonelycatgames.com/apps/xplore&#34;&gt;X-plore file manager&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The script switches to user 0, so that you can see &lt;code&gt;/sdcard/Download/fakeboot.img&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2 Ways to boot the AVD into Safe Mode&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1st Way - If the AVD still boots normal: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tap and Hold the &lt;strong&gt;Power Button&lt;/strong&gt; until the 3 Options appear&lt;/li&gt; &#xA;   &lt;li&gt;Tap and Hold the &lt;strong&gt;Power Off Button&lt;/strong&gt; until &lt;strong&gt;Reboot to safe mode&lt;/strong&gt; appears&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2nd Way - If the AVD stuck while booting (&lt;strong&gt;black&lt;/strong&gt; screen): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tap and Hold the &lt;strong&gt;Volume Down Button&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The Time Window is between the &lt;strong&gt;Launching Emulator Bar&lt;/strong&gt; is approx &lt;strong&gt;half way&lt;/strong&gt; until the &lt;strong&gt;Google Boot Screen&lt;/strong&gt; appears&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Confirmation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On the Bottom Left Corner reads: &lt;strong&gt;Safe mode&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Automotive Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After patching the ramdisk.img and cycle power, switch to user 0 via &lt;code&gt;adb shell am switch-user 0&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;open the Magisk App and the &lt;strong&gt;Requires Additional Setup&lt;/strong&gt; pops up -&amp;gt; reboot AVD&lt;/li&gt; &#xA;   &lt;li&gt;switch again to user 0 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;open the Magisk App -&amp;gt; Settings -&amp;gt; Multiuser Mode -&amp;gt; &lt;strong&gt;User-Independent&lt;/strong&gt; -&amp;gt; reboot AVD&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Every time you want to Grant Su Permissions, switch to user 0 and then back to 10 &lt;code&gt;adb shell am switch-user 10&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alternative, you can install the Module &lt;a href=&#34;https://github.com/newbit1/msum&#34;&gt;Magisk Single User Mod&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;and remove all user higher than 0 i.e. &lt;code&gt;adb shell pm remove-user 13&lt;/code&gt; or &lt;code&gt;adb shell pm remove-user 10&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BlueStacks 4 Notes on MacOs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modules are working&lt;/li&gt; &#xA; &lt;li&gt;Zygisk doesn&#39;t work&lt;/li&gt; &#xA; &lt;li&gt;The Home Screen Apk closes as soon as Magisk APP is installed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;but you can start Magisk from Terminal via &lt;code&gt;adb shell monkey -p com.topjohnwu.magisk -c android.intent.category.LAUNCHER 1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;and Hide the Magisk APP to Settings i.e.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ADB Connection is very buggy, &lt;code&gt;adb kill-server&lt;/code&gt; is necessary quite often&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/guide-build-mod-avd-kernel-android10-x86_64-29-root-magisk-usb-passthrough-linux.4212719&#34;&gt;XDA [GUIDE] Build / Mod AVD Kernel Android 10 / 11 rootAVD [Magisk] [USB passthrough Linux] [Google Play Store API]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/newbit1/usbhostpermissons&#34;&gt;Inject Android Hardware USB HOST Permissions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/script-rootavd-root-your-android-studio-virtual-device-emulator-with-magisk-android-11-linux-darwin-macos-win-google-play-store-apis.4218123&#34;&gt;XDA [SCRIPT] rootAVD - root your Android Studio Virtual Device emulator with Magisk [Android 12][Linux][Darwin/MacOS][WIN][Google Play Store APIs]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/newbit1/rootCROS&#34;&gt;rootCROS - A Script to root your Google Chrome OS installed on a non Chromebook Device&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;XDA [GUIDE] How to [Build|Mod|Update] a custom AVD Kernel and its Modules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/t/guide-build-mod-update-kernel-ranchu-goldfish-5-4-5-10-gki-ramdisk-img-modules-rootavd-android-11-r-12-s-avd-google-play-store-api.4220697&#34;&gt;[GUIDE][Build|Mod|Update][kernel-ranchu][goldfish][5.4][5.10][GKI][ramdisk.img][modules][rootAVD][Android 11(R) 12(S)][AVD][Google Play Store API]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to root AVDs without Play Store (Google APIs) out of the box&lt;/h3&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;open a terminal -&amp;gt; win + r &lt;code&gt;cmd&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;add emulator to your PATH&lt;/li&gt; &#xA;   &lt;li&gt;find your AVD&lt;/li&gt; &#xA;   &lt;li&gt;launch your AVD with the &lt;code&gt;-writable-system&lt;/code&gt; argument&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt; set PATH=%LOCALAPPDATA%\Android\Sdk\emulator;%PATH%&#xA; emulator -list-avds&#xA; &#x9;Pixel_4_API_29&#xA; emulator -avd Pixel_4_API_29 -writable-system&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;open a 2nd terminal -&amp;gt; win + r &lt;code&gt;cmd&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;enter the following commands one by one&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt; set PATH=%LOCALAPPDATA%\Android\Sdk\platform-tools;%PATH%&#xA; adb root&#xA; adb shell avbctl disable-verification&#xA; adb disable-verity&#xA; adb reboot&#xA; adb root&#xA; adb remount&#xA; adb shell&#xA; generic_x86_64:/ #&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/newbit1/rootAVD/master/CompatibilityChart.md&#34;&gt;Compatibility Chart&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Archive&lt;/summary&gt; ### Magisk v23.0 Alpha Successfully tested with Stock Kernel on * [[Oct. 2021] - Android 12 (S) API 32 Google Apis Play Store x86_64 Sv2 r01 Windows Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-Sv2_r01-windows.zip) * [[Oct. 2021] - Android 12 (S) API 32 Google Apis Play Store x86_64 Sv2 r01 Darwin/MacOS Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-Sv2_r01-darwin.zip) * [[Oct. 2021] - Android 12 (S) API 31 Google Apis Play Store ARM 64 v8a r08 (M1) Darwin/MacOS Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/arm64-v8a-31_r08-darwin.zip) * [[Oct. 2021] - Android 11 (R) API 30 Google Apis Play Store ARM 64 v8a r10 (M1) Darwin/MacOS Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/arm64-v8a-30_r10-darwin.zip) * [[Oct. 2021] - Android 12 (S) API 31 Google Apis Play Store x86_64 r08 Darwin/MacOS Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-31_r08-darwin.zip) * [[Oct. 2021] - Android 11 (R) API 30 Google Apis Play Store x86 r09 Darwin/MacOS Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-30_r09-darwin.zip) * [[Oct. 2021] - Android 11 (R) API 30 Google Apis Play Store x86_64 r10 Darwin/MacOS Production Build](https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-30_r10-darwin.zip) &#xA; &lt;h3&gt;Magisk v22.1+ Successfully tested with Stock Kernel on&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-26_r07.zip&#34;&gt;[Oct. 2021] - Android 8 (Oreo) API 26 Google Apis Play Store x86 r07 Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-24_r19.zip&#34;&gt;[Oct. 2021] - Android 7 (Nougat) API 24 Google Apis Play Store x86 r19 Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis/x86_64-24_r27.zip&#34;&gt;[Oct. 2021] - Android 7 (Nougat) API 24 Google Apis x86_64 r27 Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-30_r09-windows.zip&#34;&gt;[Oct. 2021] - Android 11 (R) API 30 Google Apis Play Store x86 r09 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-29_r08-windows.zip&#34;&gt;[Oct. 2021] - Android 10 (Q) API 29 Google Apis Play Store x86 r08 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-30_r09-darwin.zip&#34;&gt;[Oct. 2021] - Android 11 (R) API 30 Google Apis Play Store x86 r09 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-29_r08-darwin.zip&#34;&gt;[Oct. 2021] - Android 10 (Q) API 29 Google Apis Play Store x86 r08 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r05-darwin.zip&#34;&gt;[June 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r05 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r04-darwin.zip&#34;&gt;[Apr. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r04 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/android-wear/x86-26_r04.zip&#34;&gt;[May. 2021] - Android Wear 8 (Oreo) API 26 Google Apis Play Store x86 r04 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/android-tv/x86-30_r03.zip&#34;&gt;[May. 2021] - Android TV 11 (R) API 30 Google Apis Play Store x86 r03 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/android-tv/x86-29_r03.zip&#34;&gt;[May. 2021] - Android TV 10 (Q) API 29 Google Apis Play Store x86 r03 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/android-automotive/x86-29_r01.zip&#34;&gt;[May. 2021] - Android 10 (Q) API 29 Google Apis Play Store x86 r01 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r03-windows.zip&#34;&gt;[Apr. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r03 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r03-darwin.zip&#34;&gt;[Apr. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r03 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r02-darwin.zip&#34;&gt;[Mar. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r02 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r01-darwin.zip&#34;&gt;[Mar. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r01 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r02-windows.zip&#34;&gt;[Mar. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r02 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-S_r01-windows.zip&#34;&gt;[Mar. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r01 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis/x86_64-S_r01.zip&#34;&gt;[Mar. 2021] - Android 12 (S) API 30 Google Apis Play Store x86_64 r01 Darwin/MacOS User Debug Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-30_r10-darwin.zip&#34;&gt;[Mar. 2021] - Android 11 (R) API 30 Google Apis Play Store x86_64 r10 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-30_r10-windows.zip&#34;&gt;[Mar. 2021] - Android 11 (R) API 30 Google Apis Play Store x86_64 r10 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-29_r08-darwin.zip&#34;&gt;[Mar. 2021] - Android 10 (Q) API 29 Google Apis Play Store x86_64 r08 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-29_r08-windows.zip&#34;&gt;[Mar. 2021] - Android 10 (Q) API 29 Google Apis Play Store x86_64 r08 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Change Logs&lt;/h3&gt; &#xA;&lt;h4&gt;[August 2023]&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[rootAVD.sh] - Added Pagesize Padding in the fakeboot.img&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - Updated the creation of the fakeboot.img&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - Added another way of checking the AVDs Internet connection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;[July 2023]&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[rootAVD.bat] - Fixed file ListAllAVDs not found bug&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - Fixed some errors with double spaces&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - Added TestADBWORKDIR routine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;[June 2023]&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[rootAVD.sh] - improved finding BusyBox routine, and once again&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - rewritten the file and folder handling entirely, Darwin and Linux&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - improved finding BusyBox routine, again&lt;/li&gt; &#xA; &lt;li&gt;[General] - Added &lt;code&gt;.gitattributes&lt;/code&gt; with &lt;code&gt;*.sh text eol=lf&lt;/code&gt; to force UNIX line ending on Windows&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - rewritten the file and folder handling entirely&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - fixed typos and bug fixes&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - updated the TestADB routine, adb path will now be set automatically&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - updated Exit calls&lt;/li&gt; &#xA; &lt;li&gt;[General] - updated the README.md&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;[May 2023]&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[rootAVD.sh] - removed Busybox from Script&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;[April 2023]&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[General] - added link to X-plore file manager&lt;/li&gt; &#xA; &lt;li&gt;[General] - added link to Magisk Single User Mod&lt;/li&gt; &#xA; &lt;li&gt;[General] - added switching to user 0 when running FAKEBOOTIMG&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.bat] - changed return 1 to return 0&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - changed return 1 to return 0&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - changed copy and move routine&lt;/li&gt; &#xA; &lt;li&gt;[rootAVD.sh] - added support for ramdisk-qemu.img&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Archive&lt;/summary&gt; &#xA; &lt;h3&gt;Change Logs&lt;/h3&gt; &#xA; &lt;h4&gt;[December 2022]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Fixed arithmetic syntax error in decompress_ramdisk&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[November 2022]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[General] - Bug fixes&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Updated to Magisk Stable Version 25.2&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added FAKEBOOTIMG Use Case Examples as Gif&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added support for adding the stub.apk if present&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added support for already patched ramdisk files&lt;/li&gt; &#xA;  &lt;li&gt;[General] - removed the EnvFixTask Argument&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Bug fixes&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added FAKEBOOTIMG Argument that creates a fake Boot.img which can be patched directed from the Magisk APK&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[March 2022]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added toggleRamdisk Argument that toggles between patched and stock ramdisk&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Changed the need of a Magisk.zip file&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added Use Case Examples as Gif&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added Option to Download older Magisk Versions&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added BlueStacks 4 Support on MacOS&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Bug fixes&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[February 2022]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[General] - Updated to Magisk Stable Version 24.1&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[October 2021]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added get Up-To-Date Script Routine if Script is broken&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Updated LZ4 decompression Routine&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Updated InstallPrebuiltKernelModules Routine to support ARM64 Kernels&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Updated Busybox Extraction Routine&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added Multiarch Busybox Binarys and 64-Bit Only Support&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added Alpha Channel to the Menu&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.bat] - Added Shut Down Feature&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added Shut Down Feature&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added Android 12 (S) API 31 Status&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added Link to Android AppSecs Video about rootAVD&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[July 2021]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[rootAVD.bat] - Changed TestADB&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added rootCROS Project to Links&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[June 2021]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[General] - Android 12 (S) r05&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[May 2021]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[General] - Updated to Magisk App v23.0&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added &#34;AddRCscripts&#34; Argument that *&lt;em&gt;install all custom &lt;em&gt;.rc scripts, placed in the rootAVD folder, into ramdisk.img/overlay.d/sbin&lt;/em&gt;&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added BusyBox Binary after the rootAVD script&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.bat] - Added ListAllAVDs and InstallApps as Arguments&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added &#34;ListAllAVDs&#34; Argument that &lt;strong&gt;Lists Command Examples for ALL installed AVDs&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added &#34;InstallApps&#34; Argument to &lt;strong&gt;Just install all APKs placed in the Apps folder&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.bat] - Added comprehensive Help Menu&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[Apr. 2021]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[General] - Added comprehensive Help Menu&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Changed &#34;DEBUG&#34; &#34;PATCHFSTAB&#34; &#34;GetUSBHPmodZ&#34; to Arguments&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Fixed some typos and functions&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Add a Menu to choose the prebuilt Kernel and Modules Version to install&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added &#34;InstallPrebuiltKernelModules&#34; download/update/install prebuilt kernel and modules&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added 2 Ways to boot the AVD into Safe Mode&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added Android S rev 3 support&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added &#34;InstallKernelModules&#34; update/install custom build kernel and modules&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added update_lib_modules function&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Added &#34;restore&#34; to put back your backup files&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Updated local Magisk App v22.1&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added Option to Download the USB HOST Permissions Module&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;[Mar. 2021]&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[General] - Add a Download Manager Function for bad TLS record using wget&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.bat] - Adjustments to run with the updated rootAVD.sh&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Add a Menu to choose the Magisk Version to install&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added EnvFixTask Argument to fix Requires Additional Setup in Android S&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Changed to BusyBox (D)ASH Standalone&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Re-Structured Script&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added &#34;Additional Setup Required&#34; manually for Android S&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Updated shakalaca&#39;s Ramdisk Repack Routine&lt;/li&gt; &#xA;  &lt;li&gt;[rootAVD.sh] - Added Compression Detection for LZ4 and GZ&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Fixed some bugs and typos&lt;/li&gt; &#xA;  &lt;li&gt;[General] - Updated to Magisk App v22.0&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Magisk v21.4 Successfully tested with Stock Kernel on&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-30_r10-darwin.zip&#34;&gt;[Jan. 2021] - Android 11 (R) API 30 Google Apis Play Store x86_64 r10 Darwin/MacOS Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-30_r10-windows.zip&#34;&gt;[Jan. 2021] - Android 11 (R) API 30 Google Apis Play Store x86_64 r10 Windows Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-30_r10-linux.zip&#34;&gt;[Jan. 2021] - Android 11 (R) API 30 Google Apis Play Store x86_64 r10 Linux Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-30_r09-linux.zip&#34;&gt;[Jan. 2021] - Android 11 (R) API 30 Google Apis Play Store x86 r09 Linux Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86_64-29_r08-linux.zip&#34;&gt;[Dec. 2019] - Android 10 (Q) API 29 Google Apis Play Store x86_64 r09 Linux Production Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis/x86_64-29_r11.zip&#34;&gt;[Dec. 2019] - Android 10 (Q) API 29 Google Apis x86_64 r11 User Debug Build&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://dl.google.com/android/repository/sys-img/google_apis_playstore/x86-24_r19.zip&#34;&gt;[Jan. 2021] - Android 7 (Nougat) API 24 Google Apis Play Store x86 r19 Production Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/m/topjohnwu.4470081&#34;&gt;topjohnwu @ xda-developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/magisk-files&#34;&gt;topjohnwu Magisk File Host&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;topjohnwu Magisk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Magisk-Modules-Repo&#34;&gt;Magisk-Modules-Repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/m/shakalaca.1813976&#34;&gt;shakalaca @ xda-developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shakalaca/MagiskOnEmulator&#34;&gt;shakalaca MagiskOnEmulator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.xda-developers.com/m/huskydg.11455139&#34;&gt;huskydg @ xda-developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HuskyDG/MagiskOnEmu&#34;&gt;huskydg MagiskOnEmu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/cjus/1047794#gistcomment-3313785&#34;&gt;Akianonymus _json_value&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tadfisher/android-nixpkgs&#34;&gt;Tad Fisher Android Nixpkgs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seebz&#34;&gt;Sébastien Corne magisk-single-user&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remote-android/redroid-doc/tree/master/native_bridge&#34;&gt;remote-android Native Bridge Support in ReDroid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vvb2060/magisk_files/&#34;&gt;vvb2060 Magisk Alpha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://markdown-editor.github.io/&#34;&gt;All-in-one Markdown editor by terrylinooo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.htmeditor.com/author/&#34;&gt;Online Free WYSIWYG HTML Editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmltidy.net&#34;&gt;HTML Tidy - Online Markup Corrector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acronis.design/ffmpeg-imagemagick-convert-video-to-gif-using-the-terminal-app-in-macos-657948adf900&#34;&gt;ffmpeg + ImageMagick. Convert video to GIF by using Terminal.app in macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net/kazam&#34;&gt;Kazam Screencaster&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>