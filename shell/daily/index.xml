<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-07T01:49:38Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spiritLHLS/Oracle-server-keep-alive-script</title>
    <updated>2023-02-07T01:49:38Z</updated>
    <id>tag:github.com,2023-02-07:/spiritLHLS/Oracle-server-keep-alive-script</id>
    <link href="https://github.com/spiritLHLS/Oracle-server-keep-alive-script" rel="alternate"></link>
    <summary type="html">&lt;p&gt;甲骨文服务器保活脚本(Oracle keep alive)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Oracle-server-keep-alive-script&lt;/h1&gt; &#xA;&lt;h2&gt;甲骨文服务器保活脚本&lt;/h2&gt; &#xA;&lt;p&gt;所有资源都是动态占用，实时调整，避免服务器有别的任何资源已经超过限额了仍然再占用资源。&lt;/p&gt; &#xA;&lt;p&gt;适配系统：暂时已在Ubuntu，Debian中验证无问题，别的主流系统应该也没有问题&lt;/p&gt; &#xA;&lt;p&gt;可选占用：CPU，内存，带宽&lt;/p&gt; &#xA;&lt;p&gt;安装完毕后等待5分钟看看占用情况(CPU占用初始压力参数很低，时间不够看不出负载的)，如果超过10分钟无占用则有问题请卸载脚本反馈问题&lt;/p&gt; &#xA;&lt;p&gt;因为更新有延迟需要等待CDN加载最新脚本，请留意脚本当前更新日期：2023.02.05&lt;/p&gt; &#xA;&lt;h3&gt;开发完毕，测试中，有问题请在issues中反馈&lt;/h3&gt; &#xA;&lt;p&gt;选项1安装，选项2卸载，选项3退出脚本&lt;/p&gt; &#xA;&lt;p&gt;安装过程中无脑回车则全部可选的占用都占用，不需要什么占用输入&lt;code&gt;n&lt;/code&gt;再回车&lt;/p&gt; &#xA;&lt;p&gt;最后会询问是否需要带宽占用的参数自定义，这时候默认选项就是&lt;code&gt;n&lt;/code&gt;，回车就使用默认配置，输入&lt;code&gt;y&lt;/code&gt;再回车则需要按照提示自定义参数&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/spiritLHLS/Oracle-server-keep-alive-script/main/oalive.sh -o oalive.sh &amp;amp;&amp;amp; chmod +x oalive.sh &amp;amp;&amp;amp; bash oalive.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;或&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash oalive.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;或&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(wget -qO- --no-check-certificate https://raw.githubusercontent.com/spiritLHLS/Oracle-server-keep-alive-script/main/oalive.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;说明&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU占用有计算素数模式和科学计算模式可自由选择，设定占用区间为15~25%&lt;/li&gt; &#xA; &lt;li&gt;CPU占用是动态的，每几秒检测一遍，计算任务动态调整，检测间隔也是动态调整&lt;/li&gt; &#xA; &lt;li&gt;CPU占用增加了双重保险，不仅动态调整，还在守护进程中设置了最高占用&lt;/li&gt; &#xA; &lt;li&gt;CPU占用默认25%最高(核数✖12%如果低于25%时设置，高于25%则按照计算后的比例来)&lt;/li&gt; &#xA; &lt;li&gt;CPU占用特殊处理了多核(3核或者4核)的情况，保证CPU历史占用足够&lt;/li&gt; &#xA; &lt;li&gt;内存占用设定占用20%总内存，占用300秒休息300秒&lt;/li&gt; &#xA; &lt;li&gt;内存占用每300秒检测一遍，动态调整增加占用的大小，如果你内存大于20%则不增加占用&lt;/li&gt; &#xA; &lt;li&gt;带宽占用每45分钟下载一次1G~10G大小的文件进行占用，只下载不保存，下载过程中不会占用硬盘&lt;/li&gt; &#xA; &lt;li&gt;带宽占用动态调整实际下载带宽/速率，限制下载时长最长10分钟，每次下载前先测试最大可用带宽实时调整为20%带宽下载&lt;/li&gt; &#xA; &lt;li&gt;占用过程中使用守护进程和开机自启服务，保证占用任务持续且有效&lt;/li&gt; &#xA; &lt;li&gt;可选择一键卸载所有占用服务，卸载会将所有脚本和服务卸载，包括任务、守护进程和开机自启的设置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;友链&lt;/h3&gt; &#xA;&lt;p&gt;VPS融合怪测评脚本&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/spiritLHLS/ecs&#34;&gt;https://github.com/spiritLHLS/ecs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/spiritLHLS/Oracle-server-keep-alive-script&#34;&gt;&lt;img src=&#34;https://starchart.cc/spiritLHLS/Oracle-server-keep-alive-script.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SEO关键词&lt;/h3&gt; &#xA;&lt;p&gt;甲骨文保活，甲骨文OCI保活，甲骨文资源占用，甲骨文免费服务器，甲骨文服务器闲置使用必备。&lt;/p&gt; &#xA;&lt;p&gt;资源定期浪费，可用于 Oracle 甲骨文保活。&lt;/p&gt; &#xA;&lt;p&gt;为了应对甲骨文最新回收机制而作的脚本。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>score-spec/score-compose</title>
    <updated>2023-02-07T01:49:38Z</updated>
    <id>tag:github.com,2023-02-07:/score-spec/score-compose</id>
    <link href="https://github.com/score-spec/score-compose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reference implementation for docker-compose target platform support&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/docs/images/banner.png&#34; alt=&#34;Score banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/docs/images/logo.svg?sanitize=true&#34; alt=&#34;Score&#34;&gt; Score overview&lt;/h1&gt; &#xA;&lt;p&gt;Score aims to improve developer productivity and experience by reducing the risk of configuration inconsistencies between local and remote environments. It provides developer-centric workload specification (&lt;code&gt;score.yaml&lt;/code&gt;) which captures a workloads runtime requirements in a platform-agnostic manner.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;score.yaml&lt;/code&gt; specification file can be executed against a &lt;em&gt;Score Implementation CLI&lt;/em&gt;, a conversion tool for application developers to generate environment specific configuration. In combination with environment specific parameters, the CLI tool can run your workload in the target environment by generating a platform-specific configuration file such as &lt;code&gt;docker-compose.yaml&lt;/code&gt; or a Helm &lt;code&gt;values.yaml&lt;/code&gt;. Learn more &lt;a href=&#34;https://github.com/score-spec/spec#-what-is-score&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/docs/images/install.svg?sanitize=true&#34; alt=&#34;Installation&#34;&gt; Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install &lt;code&gt;score-compose&lt;/code&gt;, follow the instructions as described in our &lt;a href=&#34;https://docs.score.dev/docs/get-started/install/&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/docs/images/overview.svg?sanitize=true&#34; alt=&#34;Get Started&#34;&gt; Get Started&lt;/h2&gt; &#xA;&lt;p&gt;If you already have a &lt;code&gt;score.yaml&lt;/code&gt; file defined, you can simply run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Prepare a compose.yaml file&#xA;score-compose run -f /tmp/score.yaml -o /tmp/compose.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;run&lt;/code&gt; tells the CLI to translate the Score file to a Docker Compose file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-f&lt;/code&gt; is the path to the Score file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--env&lt;/code&gt; specifies the path to the output file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re just getting started, follow &lt;a href=&#34;https://docs.score.dev/docs/get-started/score-compose-hello-world/&#34;&gt;this guide&lt;/a&gt; to run your first Hello World program with &lt;code&gt;score-compose&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/docs/images/get-involved.svg?sanitize=true&#34; alt=&#34;Get involved&#34;&gt; Get involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Give the project a star!&lt;/li&gt; &#xA; &lt;li&gt;Contact us via Email: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;mailto:team@score.dev&#34;&gt;team@score.dev&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;mailto:abuse@score.dev&#34;&gt;abuse@score.dev&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;See our &lt;a href=&#34;https://docs.score.dev&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/docs/images/contributing.svg?sanitize=true&#34; alt=&#34;Contributing&#34;&gt; Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write a &lt;a href=&#34;https://score.dev/blog&#34;&gt;blog post&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Provide feedback on our &lt;a href=&#34;https://github.com/score-spec/spec/raw/main/roadmap.md#get-involved&#34;&gt;road map and releases board&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Contribute.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.&lt;/p&gt; &#xA;&lt;p&gt;If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also open an issue with the tag &lt;code&gt;enhancement&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project.&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch. &lt;code&gt;git checkout -b feature/feature-name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes. &lt;code&gt;git commit -s -m &#34;Add some AmazingFeature&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch. &lt;code&gt;git push origin feature/feature-name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;You can find our documentation at &lt;a href=&#34;https://docs.score.dev/docs&#34;&gt;docs.score.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/score-spec/spec/raw/main/roadmap.md&#34;&gt;Roadmap&lt;/a&gt;. You can &lt;a href=&#34;https://github.com/score-spec/spec/raw/main/roadmap.md#get-involved&#34;&gt;submit an idea&lt;/a&gt; anytime.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Code of conduct&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/score-spec/score-compose/main/code_of_conduct.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vernesong/OpenClash</title>
    <updated>2023-02-07T01:49:38Z</updated>
    <id>tag:github.com,2023-02-07:/vernesong/OpenClash</id>
    <link href="https://github.com/vernesong/OpenClash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Clash Client For OpenWrt&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vernesong/OpenClash/dev/img/logo.png&#34; alt=&#34;Clash&#34; width=&#34;200&#34;&gt; &lt;br&gt;OpenClash&lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/Dreamacro/clash/releases/tag/v1.13.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Clash-v1.13.0-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/vernesong/OpenClash/tree/v0.45.87-beta&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/source code-v0.45.87--beta-green.svg&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/vernesong/OpenClash/releases/tag/v0.45.87-beta&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/New Release-v0.45.87--beta-orange.svg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 本插件是一个可运行在 OpenWrt 上的&lt;a href=&#34;https://github.com/Dreamacro/clash&#34; target=&#34;_blank&#34;&gt; Clash &lt;/a&gt;客户端 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 兼容 Shadowsocks、ShadowsocksR、Vmess、Trojan、Snell 等协议，根据灵活的规则配置实现策略代理 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; - 感谢&lt;a href=&#34;https://github.com/frainzy1477&#34; target=&#34;_blank&#34;&gt; frainzy1477 &lt;/a&gt;，本插件基于&lt;a href=&#34;https://github.com/frainzy1477/luci-app-clash&#34; target=&#34;_blank&#34;&gt; Luci For Clash &lt;/a&gt;进行二次开发 - &lt;/p&gt; &#xA;&lt;h2&gt;使用手册&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vernesong/OpenClash/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;下载地址&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IPK &lt;a href=&#34;https://github.com/vernesong/OpenClash/releases&#34;&gt;前往下载&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;依赖&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;luci&lt;/li&gt; &#xA; &lt;li&gt;luci-base&lt;/li&gt; &#xA; &lt;li&gt;dnsmasq-full&lt;/li&gt; &#xA; &lt;li&gt;coreutils&lt;/li&gt; &#xA; &lt;li&gt;coreutils-nohup&lt;/li&gt; &#xA; &lt;li&gt;bash&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;ca-certificates&lt;/li&gt; &#xA; &lt;li&gt;ipset&lt;/li&gt; &#xA; &lt;li&gt;ip-full&lt;/li&gt; &#xA; &lt;li&gt;libcap&lt;/li&gt; &#xA; &lt;li&gt;libcap-bin&lt;/li&gt; &#xA; &lt;li&gt;ruby&lt;/li&gt; &#xA; &lt;li&gt;ruby-yaml&lt;/li&gt; &#xA; &lt;li&gt;unzip&lt;/li&gt; &#xA; &lt;li&gt;iptables(iptables)&lt;/li&gt; &#xA; &lt;li&gt;kmod-ipt-nat(iptables)&lt;/li&gt; &#xA; &lt;li&gt;iptables-mod-tproxy(iptables)&lt;/li&gt; &#xA; &lt;li&gt;iptables-mod-extra(iptables)&lt;/li&gt; &#xA; &lt;li&gt;kmod-tun(TUN模式)&lt;/li&gt; &#xA; &lt;li&gt;luci-compat(Luci &amp;gt;= 19.07)&lt;/li&gt; &#xA; &lt;li&gt;ip6tables-mod-nat(iptables-ipv6)&lt;/li&gt; &#xA; &lt;li&gt;kmod-inet-diag(PROCESS-NAME)&lt;/li&gt; &#xA; &lt;li&gt;kmod-nft-tproxy(Firewall4)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;编译&lt;/h2&gt; &#xA;&lt;p&gt;从 OpenWrt 的 &lt;a href=&#34;https://archive.openwrt.org/snapshots/trunk/ar71xx/generic/OpenWrt-SDK-ar71xx-generic_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2&#34;&gt;SDK&lt;/a&gt; 编译&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 解压下载好的 SDK&#xA;tar xjf OpenWrt-SDK-ar71xx-generic_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2&#xA;cd OpenWrt-SDK-ar71xx-*&#xA;&#xA;# Clone 项目&#xA;mkdir package/luci-app-openclash&#xA;cd package/luci-app-openclash&#xA;git init&#xA;git remote add -f origin https://github.com/vernesong/OpenClash.git&#xA;git config core.sparsecheckout true&#xA;echo &#34;luci-app-openclash&#34; &amp;gt;&amp;gt; .git/info/sparse-checkout&#xA;git pull --depth 1 origin master&#xA;git branch --set-upstream-to=origin/master master&#xA;&#xA;# 编译 po2lmo (如果有po2lmo可跳过)&#xA;pushd luci-app-openclash/tools/po2lmo&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;popd&#xA;&#xA;# 开始编译&#xA;&#xA;# 先回退到SDK主目录&#xA;cd ../..&#xA;make package/luci-app-openclash/luci-app-openclash/compile V=99&#xA;&#xA;# IPK文件位置&#xA;./bin/ar71xx/packages/base/luci-app-openclash_0.39.7-beta_all.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 同步源码&#xA;cd package/luci-app-openclash/luci-app-openclash&#xA;git pull&#xA;&#xA;# 您也可以直接拷贝 `luci-app-openclash` 文件夹至其他 `OpenWrt` 项目的 `Package` 目录下随固件编译&#xA;&#xA;make menuconfig&#xA;# 选择要编译的包 LuCI -&amp;gt; Applications -&amp;gt; luci-app-openclash&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;许可&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vernesong/OpenClash/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;内核 &lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;clash&lt;/a&gt; by &lt;a href=&#34;https://github.com/Dreamacro&#34;&gt;Dreamacro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;本项目代码基于 &lt;a href=&#34;https://github.com/frainzy1477/luci-app-clash&#34;&gt;Luci For Clash&lt;/a&gt; by &lt;a href=&#34;https://github.com/frainzy1477&#34;&gt;frainzy1477&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GEOIP数据库 &lt;a href=&#34;https://dev.maxmind.com/geoip/geoip2/geolite2/&#34;&gt;GeoLite2&lt;/a&gt; by &lt;a href=&#34;https://www.maxmind.com&#34;&gt;MaxMind&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IP检查 &lt;a href=&#34;https://github.com/SukkaW/MyIP&#34;&gt;MyIP&lt;/a&gt; by &lt;a href=&#34;https://github.com/SukkaW&#34;&gt;SukkaW&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;控制面板 &lt;a href=&#34;https://github.com/Dreamacro/clash-dashboard&#34;&gt;clash-dashboard&lt;/a&gt; by &lt;a href=&#34;https://github.com/Dreamacro&#34;&gt;Dreamacro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;控制面板 &lt;a href=&#34;https://github.com/haishanh/yacd&#34;&gt;yacd&lt;/a&gt; by &lt;a href=&#34;https://github.com/haishanh&#34;&gt;haishanh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;lhie1规则 &lt;a href=&#34;https://github.com/lhie1/Rules&#34;&gt;lhie1-Rules&lt;/a&gt; by &lt;a href=&#34;https://github.com/lhie1&#34;&gt;lhie1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ConnersHua规则 &lt;a href=&#34;https://github.com/ConnersHua/Profiles/tree/master&#34;&gt;ConnersHua-Rules&lt;/a&gt; by &lt;a href=&#34;https://github.com/ConnersHua&#34;&gt;ConnersHua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;游戏规则 &lt;a href=&#34;https://github.com/FQrabbit/SSTap-Rule&#34;&gt;SSTap-Rule&lt;/a&gt; by &lt;a href=&#34;https://github.com/FQrabbit&#34;&gt;FQrabbit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;流媒体解锁检测 &lt;a href=&#34;https://github.com/lmc999/RegionRestrictionCheck&#34;&gt;RegionRestrictionCheck&lt;/a&gt; by &lt;a href=&#34;https://github.com/lmc999&#34;&gt;lmc999&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;请作者喝杯咖啡&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PayPal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://ko-fi.com/vernesong&#34;&gt;&lt;img width=&#34;300&#34; src=&#34;https://www.ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;USDT-TRC20&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/USDT-Wallet.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;比特币-BTC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/BTC-Wallet.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;以太币-ETH&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/ETH-Wallet.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;预览&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行状态&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/state.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全局设置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/settings.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;服务器&amp;amp;策略组&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/servers.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;规则&amp;amp;策略组&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/game-settings.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;配置文件订阅&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/config-subscribe.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;配置文件管理&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/config.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行日志&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/vernesong/OpenClash/raw/master/img/log.png&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>