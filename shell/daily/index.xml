<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-14T01:42:11Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>juleast/GeneratePIF</title>
    <updated>2023-12-14T01:42:11Z</updated>
    <id>tag:github.com,2023-12-14:/juleast/GeneratePIF</id>
    <link href="https://github.com/juleast/GeneratePIF" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Automatic script for PIF config generation&lt;/h1&gt; &#xA;&lt;h4&gt;*Please read all instructions carefully before asking any questions!&lt;/h4&gt; &#xA;&lt;h3&gt;What is this?&lt;/h3&gt; &#xA;&lt;p&gt;This repo has scripts for generating custom PIF config files to use with PIF v14 and dev versions.&lt;/p&gt; &#xA;&lt;h3&gt;How to use this?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You first need to clone the repo and navigate to it: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/juleast/GeneratePIF.git&#xA;# Navigate to the cloned directory&#xA;cd GeneratePIF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;The script has two files. The first one is &lt;code&gt;clone_device.sh&lt;/code&gt; and the second is &lt;code&gt;gen_pif_custom.sh&lt;/code&gt; modified from &lt;a href=&#34;https://github.com/osm0sis&#34;&gt;@osm0sis&lt;/a&gt;&#39; original &lt;code&gt;gen_pif_custom.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;You need to copy a device repo from tadi&#39;s device dump (link in step 1) and paste it when prompted after running the first script.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Screenshot instructions --&amp;gt; &lt;a href=&#34;https://imgur.com/a/dL88uHQ&#34;&gt;click here&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Termux Users&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For those who want to use the Termux app to run these scripts on your phone, make sure you have the latest F-Droid release. Get it &lt;a href=&#34;https://f-droid.org/repo/com.termux_118.apk&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In order to run the script properly on Termux, &lt;code&gt;git&lt;/code&gt; needs to be properly installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;First update the package mirrors then install git: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg update&#xA;pkg install git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If everything was updated and installed correctly, you can proceed to the main instructions as normal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The structure&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Skip running all the scripts individually by running &lt;code&gt;start.sh&lt;/code&gt; file instead. Running them individually can still be useful if you just want to repeat regenerating the json files only.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make &lt;code&gt;start.sh&lt;/code&gt; exectuable and run &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x start.sh&#xA;# Run the script&#xA;./start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can skip to &lt;a href=&#34;https://raw.githubusercontent.com/juleast/GeneratePIF/main/#step-8&#34;&gt;step 8&lt;/a&gt; if you run &lt;code&gt;start.sh&lt;/code&gt; file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The first script clones a repo from a device repo link the user will provide from the dump repo: &lt;a href=&#34;https://dumps.tadiphone.dev/dumps/&#34;&gt;https://dumps.tadiphone.dev/dumps/&lt;/a&gt;. It initializes the git repo without checkout so that we don&#39;t have to download unnecessary files.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Make sure the script is exectuable first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x clone_device.sh&#xA;# Then run&#xA;./clone_device.sh&#xA;&#xA;# Pro tip:&#xA;# If you are lazy you can always type the first couple of lines and&#xA;# add the &#39;*&#39; to search for the trailing letters/characters of the file&#xA;# name as long as no file has a similar name to the script&#xA;./clone*&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The required files are cloned individually using &lt;code&gt;git checkout branch -- filename&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We only need two files for &lt;code&gt;gen_pif_custom.sh&lt;/code&gt; to generate the config file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;build.prop&lt;/code&gt; file from &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;vendor&lt;/code&gt; directories are cloned.&lt;/li&gt; &#xA;     &lt;li&gt;For just in case, the &lt;code&gt;build.prop&lt;/code&gt; from &lt;code&gt;system/product&lt;/code&gt; is also cloned if available.&lt;/li&gt; &#xA;     &lt;li&gt;Do not worry if the script outputs some errors. As long as the end result has at least 2 files, you are good. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;In rare cases I have seen the fingerprints generate just fine with only one file but this is not always the case. Make sure to check that the end result produces &lt;strong&gt;ALL&lt;/strong&gt; json properties properly. Reference &lt;a href=&#34;https://raw.githubusercontent.com/juleast/GeneratePIF/main/#file-format&#34;&gt;File format&lt;/a&gt; section for more info.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The script will then move and rename files appropriately for the second script to use in the &lt;strong&gt;root&lt;/strong&gt; of the repo directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the second script.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Make sure the script is exectuable first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x gen_pif_custom.sh&#xA;# Then run&#xA;./gen_pif.custom.sh&#xA;&#xA;# Or use the shortened version&#xA;./gen*&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Running the second script will output a list of directories in the root of the script&#39;s directory for you to choose.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;You will see something like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### System build.prop to custom.pif.json/.prop creator ###&#xA;# by osm0sis @ xda-developers&#xA;# and modified by Juleast @ https://github.com/juleast&#xA;#&#xA;# Choose your cloned directory by referencing the number&#xA;# next to each directory name. (ignore .git or empty name directories)&#xA;1. .git&#xA;2. judyp&#xA;&#xA;Enter number:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Inputting the number corresponding to the desired directory will navigate to it and work its magic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;step-8&#34;&gt;&lt;/a&gt;You will find your &lt;code&gt;custom.pif.json&lt;/code&gt; file in the directory you chose in step 7.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;For Termux users&lt;/strong&gt;, the home directory of Termux is usually hidden in the temp directory. Thus, what I advise is to copy the generated file before you close Termux to avoid confusions and not have to dig through your phone&#39;s file manager app. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ie. If you cloned and generated a fingerprint for LG V35 (judyp), you will see a folder named &lt;code&gt;judyp&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Navigate to the directory and copy the file you generated &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd judyp&#xA;cp custom.pif.json /sdcard/Downloads&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rename this file to &lt;code&gt;pif.json&lt;/code&gt; and move it inside &lt;code&gt;/data/adb&lt;/code&gt; folder on your device using your favorite root explorer.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if you know how to use adb and shell commands: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp path_to_your_file /data/adb/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;For manual generation&lt;/h4&gt; &#xA;&lt;p&gt;If you would like to take on the tedious task of finding each prop value and then copying it to your json file, here is a list of prop names that each json config property corresponds to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PRODUCT: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ro.product.name&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.system.name&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.product.name&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;DEVICE: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ro.product.device&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.system.device&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.product.name&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MANUFACTURER: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ro.product.manufacturer&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.system.manufacturer&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.product.manufacturer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;BRAND: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ro.product.brand&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.system.brand&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.product.brand&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MODEL: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ro.product.model&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.system.model&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.product.model&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FINGERPRINT: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ro.build.fingerprint&lt;/li&gt; &#xA;   &lt;li&gt;ro.system.build.fingerprint&lt;/li&gt; &#xA;   &lt;li&gt;ro.product.build.fingerprint&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then save your file like this:&lt;/p&gt; &#xA;&lt;h2&gt;File format&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;PRODUCT&#34;: &#34;taimen&#34;,&#xA;  &#34;DEVICE&#34;: &#34;taimen&#34;,&#xA;  &#34;MANUFACTURER&#34;: &#34;Google&#34;,&#xA;  &#34;BRAND&#34;: &#34;google&#34;,&#xA;  &#34;MODEL&#34;: &#34;Pixel 2 XL&#34;,&#xA;  &#34;FINGERPRINT&#34;: &#34;google/taimen/taimen:8.1.0/OPM4.171019.021.R1/4833808:user/release-keys&#34;,&#xA;  &#34;SECURITY_PATCH&#34;: &#34;2018-07-05&#34;,&#xA;  &#34;FIRST_API_LEVEL&#34;: &#34;26&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*Above fingerprint is already banned and is only an example.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/osm0sis&#34;&gt;@osm0sis&lt;/a&gt; for the &lt;code&gt;gen_pif_custom.sh&lt;/code&gt; script on &lt;a href=&#34;https://xdaforums.com/t/tools-zips-scripts-osm0sis-odds-and-ends-multiple-devices-platforms.2239421/post-89173470&#34;&gt;xda&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>