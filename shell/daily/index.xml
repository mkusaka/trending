<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-12T01:36:26Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>snail007/proxy_admin_free</title>
    <updated>2022-12-12T01:36:26Z</updated>
    <id>tag:github.com,2022-12-12:/snail007/proxy_admin_free</id>
    <link href="https://github.com/snail007/proxy_admin_free" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proxy是高性能全功能的http代理、https代理、socks5代理、内网穿透、内网穿透p2p、内网穿透代理、内网穿透反向代理、内网穿透服务器、Websocket代理、TCP代理、UDP代理、DNS代理、DNS加密代理，代理API认证，全能跨平台代理服务器。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About ProxyAdmin&lt;/h1&gt; &#xA;&lt;p&gt;ProxyAdmin is a powerful web console of &lt;a href=&#34;https://github.com/snail007/goproxy&#34;&gt;snail007/goproxy&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/snail007/proxy_admin_free/master/README_ZH.md&#34;&gt;中文简介&lt;/a&gt; | &lt;a href=&#34;https://snail.gitee.io/proxy/manual/zh&#34;&gt;snail007/goproxy manual&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;h3&gt;HTTP(S) Proxies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/http_en.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Socks5 Proxies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/socks5_en.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Internal NAT&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/nat_en.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Remote Desktop - VNC &amp;amp; Web-SSH&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/rdp.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DIY Service&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/diy_en.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Client Arguments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/client_args.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;View Logging&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/logging.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debug Mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/debugging.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Full Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/demo_cn.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Start Using&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Installation&lt;/h3&gt; &#xA;&lt;p&gt;If your VPS is a Linux 64-bit system, you only need to execute the following sentence to complete the automatic installation and configuration.&lt;/p&gt; &#xA;&lt;p&gt;Tip: All operations require root privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -L https://mirrors.host900.com/https://raw.githubusercontent.com/snail007/proxy_admin_free/master/install_auto.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The installation is complete, the configuration directory is /etc/gpa. For more detailed usage, please refer to the manual directory above to learn more about the features you want to use.&lt;/p&gt; &#xA;&lt;p&gt;If the installation fails or your vps is not a linux64-bit system, follow the manual installation steps below. &amp;nbsp;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;Select the file that is appropriate for your system and download it, &lt;a href=&#34;https://github.com/snail007/proxy_admin_free/releases&#34;&gt;click to download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux &amp;amp;&amp;amp; MacOS&lt;/h3&gt; &#xA;&lt;p&gt;The root account is executed:&lt;/p&gt; &#xA;&lt;p&gt;`cd Enter &#34;proxy-admin directory&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./proxy-admin install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install using the assistant tool&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The administrator opens goproxy_helper.exe and can install/uninstall/restart the service with one click.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://mirrors.host900.com/https://github.com/snail007/proxy_admin_free/raw/master/res/images/gh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Command line installation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The administrator account executes cmd.exe&lt;/p&gt; &#xA;&lt;p&gt;`cd Enter &#34;proxy-admin directory&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;proxy-admin.exe install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Access&lt;/h3&gt; &#xA;&lt;p&gt;After the installation is successful, open the browser to access: &lt;a href=&#34;http://127.0.0.1:32080&#34;&gt;http://127.0.0.1:32080&lt;/a&gt;, the first default account is root, the password is 123, remember to modify the first time after login.&lt;/p&gt; &#xA;&lt;p&gt;Configuration file path:&lt;/p&gt; &#xA;&lt;p&gt;Linux &amp;amp;&amp;amp; MacOS is located in /etc/gpa/app.toml&lt;/p&gt; &#xA;&lt;p&gt;Windows is located at C:\gpa\app.toml&lt;/p&gt; &#xA;&lt;p&gt;You can configure the listening port and logging.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling services&lt;/h2&gt; &#xA;&lt;h3&gt;Linux &amp;amp;&amp;amp; MacOS&lt;/h3&gt; &#xA;&lt;p&gt;The root account is executed:&lt;/p&gt; &#xA;&lt;p&gt;`cd Enter &#34;proxy-admin directory&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./proxy-admin uninstall&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;The administrator account executes cmd.exe&lt;/p&gt; &#xA;&lt;p&gt;`cd Enter &#34;proxy-admin directory&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;proxy-admin.exe uninstall&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Service Management&lt;/h2&gt; &#xA;&lt;p&gt;The following operations must be done before the service is installed.&lt;/p&gt; &#xA;&lt;p&gt;There are two ways to manage services:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use the program proxy-admin to manage the service.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;proxy-admin install install as system service&lt;/p&gt; &#xA;&lt;p&gt;proxy-admin uninstall uninstall service&lt;/p&gt; &#xA;&lt;p&gt;proxy-admin start&lt;/p&gt; &#xA;&lt;p&gt;proxy-admin stop&lt;/p&gt; &#xA;&lt;p&gt;proxy-admin restart&lt;/p&gt; &#xA;&lt;p&gt;proxy-admin backup backup data&lt;/p&gt; &#xA;&lt;p&gt;proxy-admin restore restore data&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Manage using system service management tools.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The proxy-admin system service name is: proxyadmin&lt;/p&gt; &#xA;&lt;p&gt;Linux can be managed by systemctl.&lt;/p&gt; &#xA;&lt;p&gt;MacOS can be managed by commands below.&lt;/p&gt; &#xA;&lt;p&gt;Windows can be managed using the system&#39;s Service Manager.&lt;/p&gt; &#xA;&lt;h2&gt;UPDATE&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;proxy-admin update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Force update.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;proxy-admin update -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;c:\&#xA;cd gpa&#xA;proxy-admin update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Force update.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;c:\&#xA;cd gpa&#xA;proxy-admin update -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/yinqi&#34;&gt;Back to the light&lt;/a&gt; The back-end template provided us a comfortable interactive experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gogf/gf&#34;&gt;GoFrame&lt;/a&gt; provides a convenient and powerful framework to make the agent backstage development more fluent.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linux-surface/linux-surface</title>
    <updated>2022-12-12T01:36:26Z</updated>
    <id>tag:github.com,2022-12-12:/linux-surface/linux-surface</id>
    <link href="https://github.com/linux-surface/linux-surface" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux Kernel for Surface Devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux Surface&lt;/h1&gt; &#xA;&lt;p&gt;Linux running on the Microsoft Surface devices. Follow the instructions below to install the latest kernel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/linux-surface/linux-surface/issues/96&#34;&gt;Announcements and Updates&lt;/a&gt; | &lt;a href=&#34;https://github.com/linux-surface/linux-surface/issues/205&#34;&gt;Upstream Status&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported Devices&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Surface Book&lt;/li&gt; &#xA; &lt;li&gt;Surface Book 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Book 3&lt;/li&gt; &#xA; &lt;li&gt;Surface 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Go&lt;/li&gt; &#xA; &lt;li&gt;Surface Go 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Go 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 4&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 5&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop Go&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop Go 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop Studio&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 4&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro (5th Gen) / Surface Pro 2017&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 6&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 7&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 7+&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 8&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 9&lt;/li&gt; &#xA; &lt;li&gt;Surface Studio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Features / What&#39;s Working&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Supported-Devices-and-Features#feature-matrix&#34;&gt;feature matrix&lt;/a&gt; for more information about each device.&lt;/p&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For the most part, things are tested on a Surface Book 2. While most things are reportedly fully working on other devices, your mileage may vary. Please look at the issues list for possible exceptions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and Setup&lt;/h2&gt; &#xA;&lt;p&gt;We provide package repositories for the patched kernel and other utilities. Please refer to the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup&#34;&gt;detailed installation and setup guide&lt;/a&gt;. There, you may also find device-specific caveats. In case you have disk encryption set up or plan to use it, take care to follow the respective instructions in the installation guide and have a look at the respective &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Disk-Encryption&#34;&gt;wiki page&lt;/a&gt;. After installation, you may want to have a look at the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki&#34;&gt;wiki&lt;/a&gt; and the &lt;code&gt;contrib/&lt;/code&gt; directory for useful tweaks.&lt;/p&gt; &#xA;&lt;p&gt;If you want to compile the kernel yourself (e.g. if your distribution is not supported), please have a look at the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Compiling-the-Kernel-from-Source&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Information&lt;/h2&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are getting stuck at boot when loading the ramdisk, you need to install the Processor Microcode Firmware for Intel CPUs (usually found under Additional Drivers in Software and Updates).&lt;/li&gt; &#xA; &lt;li&gt;Using TLP can cause slowdowns, laggy performance, and occasional hangs if not configured properly! You have been warned.&lt;/li&gt; &#xA; &lt;li&gt;If you want to use hibernate instead of suspend, you need to create a swap partition or file, please follow your distribution&#39;s instructions (or &lt;a href=&#34;https://fitzcarraldoblog.wordpress.com/2018/07/14/configuring-lubuntu-18-04-to-enable-hibernation-using-a-swap-file&#34;&gt;here&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;If you have questions or need support, please join our &lt;a href=&#34;https://matrix.to/#/#linux-surface:matrix.org&#34;&gt;Matrix Space&lt;/a&gt;! This space contains&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://matrix.to/#/#linux-surface-support:matrix.org&#34;&gt;support channel&lt;/a&gt; for general support and&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://matrix.to/#/#linux-surface-development:matrix.org&#34;&gt;development channel&lt;/a&gt; for all development related questions and discussions. If you prefer IRC, you can also join in via our channel at &lt;a href=&#34;https://web.libera.chat/#linux-surface&#34;&gt;&lt;code&gt;libera.chat/#linux-surface&lt;/code&gt;&lt;/a&gt;, to which the matrix room is bridged to.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains patches, which are either derivative work targeting a specific already licensed source, i.e. parts of the Linux kernel, or introduce new parts to the Linux kernel. These patches fall thus, if not explicitly stated otherwise, under the license of the source they are targeting, or if they introduce new code, the license they explicitly specify inside of the patch. Please refer to the specific patch and source in question for further information. License texts can be obtained at &lt;a href=&#34;https://github.com/torvalds/linux/tree/master/LICENSES&#34;&gt;https://github.com/torvalds/linux/tree/master/LICENSES&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stupidloud/nanopi-openwrt</title>
    <updated>2022-12-12T01:36:26Z</updated>
    <id>tag:github.com,2022-12-12:/stupidloud/nanopi-openwrt</id>
    <link href="https://github.com/stupidloud/nanopi-openwrt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Openwrt for Nanopi R1S R2S R4S R5S 香橙派 R1 Plus 固件编译 纯净版与大杂烩&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nanopi R1S R2S R2C R4S X86 Openwrt 固件&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;刷机工具&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80&#34;&gt;下载地址&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E&#34;&gt;更新说明&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#%E4%BD%BF%E7%94%A8%E6%8F%90%E7%A4%BA&#34;&gt;使用提示&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#%E5%9B%BA%E4%BB%B6%E7%89%B9%E6%80%A7&#34;&gt;固件特性&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#%E7%BB%88%E7%AB%AF%E5%86%85%E5%9C%A8%E7%BA%BF%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95&#34;&gt;在线升级&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#1%E5%88%86%E9%92%9F%E7%94%9F%E6%88%90%E8%87%AA%E5%B7%B1%E6%89%80%E9%9C%80%E5%9B%BA%E4%BB%B6&#34;&gt;1分钟生成自己所需固件&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;下载地址：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stupidloud/nanopi-openwrt/tags&#34;&gt;https://github.com/stupidloud/nanopi-openwrt/tags&lt;/a&gt;&lt;br&gt; (img.gz档不需要解压，可以直接使用刷机工具刷入)&lt;/p&gt; &#xA;&lt;h3&gt;使用提示：&lt;/h3&gt; &#xA;&lt;p&gt;默认用户名是root, 密码是password，局域网IP为192.168.2.1&lt;br&gt; 烧制完固件插入tf卡并启动完成，电脑端显示“网络（已连接）”之后，在浏览器输入 &lt;a href=&#34;http://immortalwrt/&#34;&gt;http://immortalwrt/&lt;/a&gt; 可以直接打开路由器后台，无需修改本地连接设置或者查看IP地址。&lt;br&gt; 如果网络状态一直是未识别（上电超过5分钟），请直接插拔一次电源重启试试。&lt;/p&gt; &#xA;&lt;h3&gt;终端内在线升级方法：&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -qO- https://github.com/stupidloud/nanopi-openwrt/raw/master/scripts/autoupdate-bash.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;slim版&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -qO- https://github.com/stupidloud/nanopi-openwrt/raw/master/scripts/autoupdate-bash.sh | ver=-slim bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(脚本由gary lau提供，非常感谢！)&lt;/p&gt; &#xA;&lt;h3&gt;固件特性：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;slim版固件只有OpenWrt本体，但内置了“本地软件源”，包含大部分常用插件，不喜欢固件预装繁杂插件的人可以选择这个版本，进入后台软件包选装所需插件&lt;/li&gt; &#xA; &lt;li&gt;采用ext4文件系统，刷卡之后可自行使用分区工具对sd卡扩容根分区至最大&lt;/li&gt; &#xA; &lt;li&gt;支持usb无线网卡（RTL8821CU芯片，例如COMFAST 811AC），可以驱动无线网卡运行在5G频段&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;a href=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/#%E7%BB%88%E7%AB%AF%E5%86%85%E5%9C%A8%E7%BA%BF%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95&#34;&gt;在线升级&lt;/a&gt;时，根分区会自动扩容，方便折腾&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1分钟生成自己所需固件&lt;/h3&gt; &#xA;&lt;p&gt;因为本项目预编译了Image builder，生成固件仅需1-3分钟，如果有兴趣自定义固件可以Fork本项目，编辑设备对应的config.seed文件，例如r2s.config.seed, 去掉(整行删除)不需要的luci app软件包配置行，添加自己所需的软件，可用软件的列表可以在github actions构件输出处获取，例如&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/56048681/114531174-3beafb80-9c7e-11eb-8bcc-b098c3b1cee8.png&#34; width=&#34;250&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/56048681/124495884-43d4ba80-ddeb-11eb-95e9-fb096dcfda45.png&#34; width=&#34;250&#34;&gt;&lt;br&gt; 完成之后进入Actions，点击左侧Build，点击右侧Run workflow输入设备名（r2s/r2c/r4s/r1s/r1s-h3/r1p/r1p-lts）&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/56048681/114531768-c7648c80-9c7e-11eb-8d72-fe38f9df960d.png&#34; width=&#34;250&#34;&gt;&lt;br&gt; 再点击Run即可获取自己所需的固件&lt;/p&gt; &#xA;&lt;h3&gt;更新说明：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stupidloud/nanopi-openwrt/raw/master/CHANGELOG.md&#34;&gt;https://github.com/stupidloud/nanopi-openwrt/blob/master/CHANGELOG.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;本固件NAT基准性能测试：&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/stupidloud/nanopi-openwrt/master/assets/NAT.jpg&#34; width=&#34;450&#34;&gt; &#xA;&lt;h4&gt;固件源码：&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/immortalwrt/immortalwrt&#34;&gt;https://github.com/immortalwrt/immortalwrt&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>