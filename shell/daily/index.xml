<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-17T01:33:49Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>morytyann/OpenWrt-mihomo</title>
    <updated>2024-08-17T01:33:49Z</updated>
    <id>tag:github.com,2024-08-17:/morytyann/OpenWrt-mihomo</id>
    <link href="https://github.com/morytyann/OpenWrt-mihomo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A project contains mihomo packages for OpenWrt.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/morytyann/OpenWrt-mihomo?style=for-the-badge&#34; alt=&#34;GitHub License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/morytyann/OpenWrt-mihomo/release.yml?style=for-the-badge&amp;amp;label=release&#34; alt=&#34;GitHub Actions Workflow Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/morytyann/OpenWrt-mihomo?style=for-the-badge&#34; alt=&#34;GitHub Tag&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/morytyann/OpenWrt-mihomo/total?style=for-the-badge&#34; alt=&#34;GitHub Downloads (all assets, all releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/morytyann/OpenWrt-mihomo?style=for-the-badge&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OpenWrt-mihomo&lt;/h1&gt; &#xA;&lt;p&gt;A project contains mihomo packages for OpenWrt.&lt;/p&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Transparent Proxy (TPROXY/TUN, IPv4 and/or IPv6)&lt;/li&gt; &#xA; &lt;li&gt;Access Control&lt;/li&gt; &#xA; &lt;li&gt;Compatible with Multiple WAN&lt;/li&gt; &#xA; &lt;li&gt;Profile Mixin&lt;/li&gt; &#xA; &lt;li&gt;Profile Editor&lt;/li&gt; &#xA; &lt;li&gt;Scheduled Restart&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/morytyann/OpenWrt-mihomo/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Mixin and Update profile.&lt;/li&gt; &#xA; &lt;li&gt;Run mihomo.&lt;/li&gt; &#xA; &lt;li&gt;Run hijack prepare script.&lt;/li&gt; &#xA; &lt;li&gt;Add exclusions. (wan/wan6 inbound, firewall rule/redirect, UPnP)&lt;/li&gt; &#xA; &lt;li&gt;Add router hijack.&lt;/li&gt; &#xA; &lt;li&gt;Add lan hijack with access control.&lt;/li&gt; &#xA; &lt;li&gt;Set scheduled restart.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note that the steps above may change base on config.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# add mihomo feeds&#xA;echo &#34;src-git mihomo https://github.com/morytyann/OpenWrt-mihomo.git;main&#34; &amp;gt;&amp;gt; &#34;feeds.conf.default&#34;&#xA;# update &amp;amp; install feeds&#xA;./scripts/feeds update -a&#xA;./scripts/feeds install -a&#xA;# make package&#xA;make package/luci-app-mihomo/compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ipk file will be found under &lt;code&gt;bin/packages/your_architecture/mihomo&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ca-bundle&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;inotifywait&lt;/li&gt; &#xA; &lt;li&gt;yq&lt;/li&gt; &#xA; &lt;li&gt;firewall4&lt;/li&gt; &#xA; &lt;li&gt;kmod-nft-tproxy&lt;/li&gt; &#xA; &lt;li&gt;ip-full&lt;/li&gt; &#xA; &lt;li&gt;kmod-tun&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only support firewall4 and will never support firewall3&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>sdushantha/tmpmail</title>
    <updated>2024-08-17T01:33:49Z</updated>
    <id>tag:github.com,2024-08-17:/sdushantha/tmpmail</id>
    <link href="https://github.com/sdushantha/tmpmail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A temporary email right from your terminal written in POSIX sh&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/sdushantha/tmpmail/master/images/logo.png&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A temporary email right from your terminal written in POSIX sh&lt;/p&gt;&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sdushantha/tmpmail/master/images/demo.gif&#34; align=&#34;right&#34;&gt; &lt;code&gt;tmpmail&lt;/code&gt; is a command line utility written in POSIX &lt;code&gt;sh&lt;/code&gt; that allows you to create a temporary email address and receive emails to the temporary email address. It uses 1secmail&#39;s &lt;a href=&#34;https://www.1secmail.com/api/&#34;&gt;API&lt;/a&gt; to receive emails.&lt;/p&gt; &#xA;&lt;p&gt;By default &lt;code&gt;w3m&lt;/code&gt; is used to render the HTML emails on the terminal. But if you prefer another text based web browser or would rather view the email in a GUI web browser such as Firefox, simply use the &lt;code&gt;--browser&lt;/code&gt; argument followed by the command needed to launch the web browser of your choice.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;w3m&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xclip&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install locally&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download the tmpmail file and make it executable&#xA;$ curl -L &#34;https://raw.githubusercontent.com/sdushantha/tmpmail/master/tmpmail&#34; &amp;gt; tmpmail &amp;amp;&amp;amp; chmod +x tmpmail&#xA;&#xA;# Then move it somewhere in your $PATH. Here is an example:&#xA;$ mv tmpmail ~/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;AUR&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;tmpmail&lt;/code&gt; is available on the &lt;a href=&#34;https://aur.archlinux.org/packages/tmpmail-git/&#34;&gt;AUR&lt;/a&gt;, which is currently being maintained by &lt;a href=&#34;https://github.com/b12f&#34;&gt;Benjamin BÃ¤dorf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ yay -S tmpmail-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/pacstall/pacstall&#34;&gt;Pacstall&lt;/a&gt; (Debian/Ubuntu)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;tmpmail&lt;/code&gt; is available on the &lt;a href=&#34;https://github.com/pacstall/pacstall-programs/raw/master/packages/tmpmail-bin/tmpmail-bin.pacscript&#34;&gt;pacstall-programs repository&lt;/a&gt;, which is being currently being maintained by &lt;a href=&#34;https://github.com/wizard-28&#34;&gt;wizard-28&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pacstall -I tmpmail-bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nixpkgs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;tmpmail&lt;/code&gt; is also available in the &lt;a href=&#34;https://search.nixos.org/packages?channel=unstable&amp;amp;show=tmpmail&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;query=tmpmail&#34;&gt;nix package collection (only unstable currently)&lt;/a&gt;, which is maintained by &lt;a href=&#34;https://github.com/legendofmiracles&#34;&gt;legendofmiracles&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Either add it to your system packages, install it with nix-env or try it out in a ephemeral nix-shell &lt;code&gt;nix-shell -p tmpmail&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;clone this repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker build -t mail .; # Dockerfile available in source code&#xA;$ docker run -it mail;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail --help&#xA;tmpmail&#xA;tmpmail -h | --version&#xA;tmpmail -g [ADDRESS]&#xA;tmpmail [-t | -b BROWSER] -r | ID&#xA;&#xA;When called with no option and no argument, tmpmail lists the messages in&#xA;the inbox and their numeric IDs.  When called with one argument, tmpmail&#xA;shows the email message with specified ID.&#xA;&#xA;-b, --browser BROWSER&#xA;        Specify BROWSER that is used to render the HTML of&#xA;        the email (default: w3m)&#xA;    --clipboard-cmd COMMAND&#xA;        Specify the COMMAND to use for copying the email address to your&#xA;        clipboard (default: xclip -selection c)&#xA;-c, --copy&#xA;        Copy the email address to your clipboard&#xA;-d, --domains&#xA;        Show list of available domains&#xA;-g, --generate [ADDRESS]&#xA;        Generate a new email address, either the specified ADDRESS, or&#xA;        randomly create one&#xA;-h, --help&#xA;        Show help&#xA;-r, --recent&#xA;        View the most recent email message&#xA;-t, --text&#xA;        View the email as raw text, where all the HTML tags are removed.&#xA;        Without this option, HTML is used.&#xA;--version&#xA;        Show version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;Create random email&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail --generate&#xA;xoithrjagpx@1secmail.net&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create custom email&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail --generate mycustomemail@1secmail.com&#xA;mycustomemail@1secmail.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the inbox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail&#xA;[ Inbox for wdebivbyjor@1secmail.com ]&#xA;&#xA;83414443   username@example.com   Test Email&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the email&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail 83414443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the most recent email&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View emails as pure text&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tmpmail -t 83414443&#xA;To: wdebivbyjor@1secmail.com&#xA;From: username@example.com&#xA;Subject: Test Email&#xA;&#xA;Hello World&#xA;&#xA;[Attachments]&#xA;https://is.gd/aBCdEf [apple.jpg]&#xA;https://is.gd/AbCDeF [ball.jpg]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This script is heavily inspired by Mitch Weaver&#39;s &lt;a href=&#34;https://github.com/mitchweaver/bin/raw/master/OLD/1secmail&#34;&gt;&lt;code&gt;1secmail&lt;/code&gt;&lt;/a&gt; script&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>IceWhaleTech/ZimaOS</title>
    <updated>2024-08-17T01:33:49Z</updated>
    <id>tag:github.com,2024-08-17:/IceWhaleTech/ZimaOS</id>
    <link href="https://github.com/IceWhaleTech/ZimaOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/zima.svg?sanitize=true&#34; width=&#34;100&#34;&gt; &#xA; &lt;h1&gt;ZimaOS Open Beta Program&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/IceWhaleTech/zimaos-rauc/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/IceWhaleTech/zimaos-rauc?include_prereleases&amp;amp;style=flat-square&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/IceWhaleTech/zimaos-rauc/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/IceWhaleTech/zimaos-rauc/total?style=flat-square&#34; alt=&#34;download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://icewhale.community/t/welcome-to-the-zimaos-open-beta-program/295&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contact-community-blue?style=flat-square&#34; alt=&#34;community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Welcome to join the open beta program of ZimaOS. ZimaOS is evolved from CasaOS, and we have built a release version of ZimaOS for better hardware compatibility and update experience. It will perfectly adapt to the Zima series hardware and also be compatible with x86-64 systems with UEFI.&lt;/p&gt; &#xA;&lt;p&gt;It is built using Buildroot and has stable OTA update functionality. Based on CasaOS, we have built a series of new applications. You can find the specific differences between it and CasaOS from the table below:&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/feature.png&#34; width=&#34;640&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;This project is just for releasing test images, if you want to discuss related issues, feel free to go to our forum. &lt;a href=&#34;https://icewhale.community/t/welcome-to-the-zimaos-open-beta-program/295&#34;&gt;Icewhale Communit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Distribution Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lightweight and memory-efficient&lt;/li&gt; &#xA; &lt;li&gt;Minimized I/O&lt;/li&gt; &#xA; &lt;li&gt;Over The Air (OTA) updates&lt;/li&gt; &#xA; &lt;li&gt;Offline updates&lt;/li&gt; &#xA; &lt;li&gt;Better disk management capabilities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported hardware&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ZimaBoard&lt;/li&gt; &#xA; &lt;li&gt;ZimaBlade&lt;/li&gt; &#xA; &lt;li&gt;ZimaCubeï¼in preparationï¼&lt;/li&gt; &#xA; &lt;li&gt;Generic x86-64 (e.g. Intel NUC)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To boot ZimaOS, the BIOS needs to have UEFI boot mode enabled and Secure Boot disabled.&lt;/p&gt; &#xA;&lt;p&gt;Next, we need to write the ZimaOS image to the âboot mediumâ, which is the medium your zima device or x86-64 hardware will boot from when it is running ZimaOS.&lt;/p&gt; &#xA;&lt;h3&gt;Extra&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/IceWhaleTech/zimaos-rauc/assets/9485680/41351861-ec4c-45b7-bbc6-3c796607e4c4&#34;&gt;Zima-screen0.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The ZimaOS USB installation image has been released. Use Balena Etcher to burn the installation image to a USB disk. Now you can use this installer to install ZimaOS to any internal hard disk.&lt;/p&gt; &#xA;&lt;p&gt;Note that it still requires UEFI boot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://casaos.oss-cn-shanghai.aliyuncs.com/IceWhaleTech/zimaos-rauc/latest/zimaos_zimacube_installer.img&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have also released images in a variety of VM formats, which you can download as needed from the Release page.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Typically an internal medium like S-ATA hard disk, S-ATA SSD, M.2 SSD, or a non-removable eMMC is used for the x86-64 boot medium. Alternatively, an external medium can be used such as a USB SDD, though this is not recommended.&lt;/p&gt; &#xA;&lt;p&gt;To write the ZimaOS image to the boot medium on your x86-64 hardware, there are 2 different methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Write the ZimaOS disk image from your desktop computer directly to the boot medium (e.g. using a USB to S-ATA adapter). If you can use this method, proceed to âWrite the image to your boot mediumâ and follow all steps. If you have non-removable internal mediums or donât have the necessary adapter, try the next method instead.&lt;/li&gt; &#xA; &lt;li&gt;Create a âlive operating systemâ on a USB device running e.g. Ubuntu (how-to guide). Insert it into your system and boot the live operating system. Then follow from step 2 in âWrite the image to your boot mediumâ.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Ubuntu dependencies for Etcher&lt;/h3&gt; &#xA;&lt;p&gt;When installing Etcher on Ubuntu you may need to install the fuse dependency first, to do this run the following commands in the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository universe&#xA;sudo apt update&#xA;sudo apt install libfuse2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write the image to your boot medium&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Attach the ZimaOS boot medium (storage device) to your computer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and start Balena Etcher. You may need to run it with administrator privileges on Windows.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the image to your computer.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Copy the URL for the image.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If there are multiple links below, make sure to select the correct link for your version of Generic x86-64.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://casaos.oss-cn-shanghai.aliyuncs.com/IceWhaleTech/zimaos-rauc/latest/zimaos_zimacube.img.xz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Select and copy the URL or use the âcopyâ button that appear when you hover it&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Paste the URL into your browser to start the download.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select Flash from file and select the image you just downloaded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Flash from URL does not work on some systems.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/etcher_1.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select target.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/etcher_2.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the boot medium (storage device) you want to use for your installation.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/etcher_3.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select &lt;strong&gt;Flash!&lt;/strong&gt; to start writing the image.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/etcher_4.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When Balena Etcher has finished writing the image, you will see a confirmation.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/IceWhaleTech/ZimaOS/main/assets/etcher_5.png&#34;&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Start up your Zima device or Generic x86-64 device&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you used your desktop system to write the ZimaOS image directly to a boot medium like an S-ATA SSD, connect this back to your Generic x86-64 system.&lt;/li&gt; &#xA; &lt;li&gt;If you used a live operating system (e.g. Ubuntu), shut it down and remove the live operating system USB device. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Plug in an Ethernet cable that is connected to the network.&lt;/li&gt; &#xA;   &lt;li&gt;Power the system on. If you have a screen connected to the Zima device or Generic x86-64 system, after a minute when you see &lt;code&gt;ZimaOS Welcome banner&lt;/code&gt;, it will show the link of webgui. or you can visit ZimaOS via &lt;a href=&#34;https://findzima.com&#34;&gt;https://findzima.com&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Default ssh login/password is &lt;code&gt;root/testonly&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation on Proxmox&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/IceWhaleTech/zimaos-rauc/issues/5&#34;&gt;Follow the link&lt;/a&gt;. Thanks &lt;a href=&#34;https://github.com/silycr&#34;&gt;@silycr&lt;/a&gt; for the tutorial!&lt;/p&gt;</summary>
  </entry>
</feed>