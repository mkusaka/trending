<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-18T01:41:57Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>blindma1den/Backup-Utility</title>
    <updated>2024-01-18T01:41:57Z</updated>
    <id>tag:github.com,2024-01-18:/blindma1den/Backup-Utility</id>
    <link href="https://github.com/blindma1den/Backup-Utility" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This script automates the regular backup process for specified directories on a Linux server. It creates timestamped backup files. For educational purposes only.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Backup-Utility&lt;/h1&gt; &#xA;&lt;p&gt;This script automates the regular backup process for specified directories on a Linux server. It creates timestamped backup files. For educational purposes only.&lt;/p&gt; &#xA;&lt;p&gt;How it works?&lt;/p&gt; &#xA;&lt;p&gt;Prepare the Environment: Ensure you have access to a Linux server or a Linux machine where you want to perform backups. Create the Script: Use a text editor such as nano or vi to create the script. You can copy and paste the script code I mentioned earlier. For example: bash Copy code nano backup.sh Then, paste the script code into the text editor and save it. Give Execute Permissions to the Script: Run the following command to give execute permissions to the script: bash Copy code chmod +x backup.sh Set the Paths: In the script, make sure to modify the origin and destination variables with the paths of the directories you want to back up and the location where you want to store the backups. Manually Run the Script: To manually run the script and perform a backup, simply execute the following command: bash Copy code ./backup.sh The script will compress the files from the source directory and create a backup in the destination directory. Schedule Automatic Execution (Optional): If you want the script to run automatically at regular intervals, you can schedule it using the cron utility. To edit the cron table, run: bash Copy code crontab -e Then, add a line like this to schedule daily execution at a specific time: bash Copy code 0 2 * * * /path/to/backup/script.sh This will run the script every day at 2:00 AM. Adjust the values to suit your specific needs. Remember to customize the paths and scheduling according to your specific requirements and setup. This script is a basic example, and you can customize it to fit your environment and needs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dockur/windows</title>
    <updated>2024-01-18T01:41:57Z</updated>
    <id>tag:github.com,2024-01-18:/dockur/windows</id>
    <link href="https://github.com/dockur/windows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows in a Docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Windows&lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://github.com/dockur/windows/raw/master/.github/logo.png&#34; title=&#34;Logo&#34; style=&#34;max-width:100%;&#34; width=&#34;128&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://github.com/dockur/windows/&#34;&gt;&lt;img src=&#34;https://github.com/dockur/windows/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/dockurr/windows/latest?arch=amd64&amp;amp;sort=semver&amp;amp;color=066da5&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/dockurr/windows/latest?color=066da5&amp;amp;label=size&#34; alt=&#34;Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dockurr/windows.svg?style=flat&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Windows in a docker container.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-platform&lt;/li&gt; &#xA; &lt;li&gt;ISO downloader&lt;/li&gt; &#xA; &lt;li&gt;KVM acceleration&lt;/li&gt; &#xA; &lt;li&gt;Web-based viewer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  windows:&#xA;    image: dockurr/windows&#xA;    container_name: windows&#xA;    devices:&#xA;      - /dev/kvm&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    ports:&#xA;      - 8006:8006&#xA;      - 3389:3389/tcp&#xA;      - 3389:3389/udp&#xA;    stop_grace_period: 2m&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm -p 8006:8006 --device=/dev/kvm --cap-add NET_ADMIN dockurr/windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I use it?&lt;/h3&gt; &lt;p&gt;Very simple! These are the steps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the container and get some coffee.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Connect to port 8006 of the container in your web browser.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Sit back and relax while the magic happens, the whole installation will be performed fully automatic.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once you see the desktop, your Windows installation is ready for use. Enjoy it, and don&#39;t forget to star this repo!&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I select the Windows version?&lt;/h3&gt; &lt;p&gt;By default, Windows 11 will be installed. But you can add the &lt;code&gt;VERSION&lt;/code&gt; environment variable to your compose file, in order to specify an alternative Windows version to download:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  VERSION: &#34;win11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Select from the values below:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;win11&lt;/code&gt; (Windows 11)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win10&lt;/code&gt; (Windows 10)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win81&lt;/code&gt; (Windows 8.1)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win22&lt;/code&gt; (Windows Server 2022)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win19&lt;/code&gt; (Windows Server 2019)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;win16&lt;/code&gt; (Windows Server 2016)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I increase the amount of CPU or RAM?&lt;/h3&gt; &lt;p&gt;By default, 2 CPU cores and 4 GB of RAM are allocated to the container, as those are the minimum requirements of Windows 11.&lt;/p&gt; &lt;p&gt;To increase this, add the following environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  RAM_SIZE: &#34;8G&#34;&#xA;  CPU_CORES: &#34;4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the size of the disk?&lt;/h3&gt; &lt;p&gt;To expand the default size of 64 GB, add the &lt;code&gt;DISK_SIZE&lt;/code&gt; setting to your compose file and set it to your preferred capacity:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DISK_SIZE: &#34;256G&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can also be used to resize the existing disk to a larger capacity without any data loss.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the storage location?&lt;/h3&gt; &lt;p&gt;To change the storage location, include the following bind mount in your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;volumes:&#xA;  - /var/win:/storage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Replace the example path &lt;code&gt;/var/win&lt;/code&gt; with the desired storage folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I perform a manual installation?&lt;/h3&gt; &lt;p&gt;If you prefer to perform the installation manually in order to customize some options, such as selecting another edition, add the following environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  MANUAL: &#34;Y&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then follow these steps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the container and connect to port 8006 of the container in your web browser. After the download is finished, you will see the Windows installation screen.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the installation by clicking &lt;code&gt;Install now&lt;/code&gt;. On the next screen, press &#39;OK&#39; when prompted to &lt;code&gt;Load driver&lt;/code&gt; and select the &lt;code&gt;VirtIO SCSI&lt;/code&gt; driver from the list that matches your Windows version. So for Windows 11, select &lt;code&gt;D:\amd64\w11\vioscsi.inf&lt;/code&gt; and click &#39;Next&#39;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Accept the license agreement and select your preferred Windows edition, like Home or Pro.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Choose &lt;code&gt;Custom: Install Windows only (advanced)&lt;/code&gt;, and click &lt;code&gt;Load driver&lt;/code&gt; on the next screen. Select &#39;Browse&#39; and navigate to the &lt;code&gt;D:\NetKVM\w11\amd64&lt;/code&gt; folder, and click &#39;OK&#39;. Select the &lt;code&gt;VirtIO Ethernet Adapter&lt;/code&gt; from the list and click &#39;Next&#39;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Select &#39;Drive 0&#39; and click &#39;Next&#39;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Wait until Windows finishes copying files and completes the installation.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once you see the desktop, open File Explorer and navigate to the CD-ROM drive (E:). Double-click on &lt;code&gt;virtio-win-gt-x64.msi&lt;/code&gt; and proceed to install the VirtIO drivers.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Now your Windows installation is ready for use. Enjoy it, and don&#39;t forget to star this repo!&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I install an unsupported version?&lt;/h3&gt; &lt;p&gt;You can specify an URL in the &lt;code&gt;VERSION&lt;/code&gt; environment variable, in order to download a custom ISO file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  VERSION: &#34;https://example.com/win.iso&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;During the installation you will need to add some drivers as described in &lt;a href=&#34;https://github.com/dockur/windows/tree/master?tab=readme-ov-file#how-do-i-perform-a-manual-installation&#34;&gt;manual installation&lt;/a&gt; above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I pass-through a disk?&lt;/h3&gt; &lt;p&gt;It is possible to pass-through disk devices directly by adding them to your compose file in this way:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DEVICE: &#34;/dev/sda&#34;&#xA;  DEVICE2: &#34;/dev/sdb&#34;&#xA;devices:&#xA;  - /dev/sda&#xA;  - /dev/sdb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Use &lt;code&gt;DEVICE&lt;/code&gt; if you want it to become your main drive, and use &lt;code&gt;DEVICE2&lt;/code&gt; and higher to add them as secondary drives.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I verify if my system supports KVM?&lt;/h3&gt; &lt;p&gt;To verify if your system supports KVM, run the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cpu-checker&#xA;sudo kvm-ok&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you receive an error from &lt;code&gt;kvm-ok&lt;/code&gt; indicating that KVM acceleration can&#39;t be used, check the virtualization settings in the BIOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is this project legal?&lt;/h3&gt; &lt;p&gt;Yes, this project contains only open-source code and does not distribute any copyrighted material. Neither does it try to circumvent any copyright protection measures. So under all applicable laws, this project would be considered legal.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The product names, logos, brands, and other trademarks referred to within this project are the property of their respective trademark holders. This project is not affiliated, sponsored, or endorsed by Microsoft Corporation.&lt;/p&gt;</summary>
  </entry>
</feed>