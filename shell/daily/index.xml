<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-22T01:44:34Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>a406010503/Miui_Camera</title>
    <updated>2023-07-22T01:44:34Z</updated>
    <id>tag:github.com,2023-07-22:/a406010503/Miui_Camera</id>
    <link href="https://github.com/a406010503/Miui_Camera" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一個基於 MIUI 13-14（Android 12-13）適配的 Magisk 相機模組。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://i.imgur.com/wz2b85J.png&#34; alt=&#34;logo&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://i.imgur.com/jm0M0rG.png&#34; alt=&#34;logo&#34;&gt; &#xA; &lt;h1&gt;Miui相機功能補全-Miui_Camera&lt;/h1&gt; &#xA; &lt;p&gt; &lt;b&gt;&lt;a href=&#34;https://github.com/a406010503/Miui_Camera/raw/main/README_en.md&#34;&gt;English&lt;/a&gt; 丨 繁體中文&lt;/b&gt; &lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/a406010503/Miui_Camera/releases&#34;&gt;&lt;img alt=&#34;GitHub all releases&#34; src=&#34;https://img.shields.io/github/downloads/a406010503/Miui_Camera/total?label=Downloads&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/a406010503/Miui_Camera/issues&#34;&gt;&lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/a406010503/Miui_Camera&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://crowdin.com/project/miui-camera-mod&#34;&gt;&lt;img alt=&#34;localized&#34; src=&#34;https://badges.crowdin.net/miui-camera-mod/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/a406010503/Miui_Camera/&#34;&gt;&lt;img alt=&#34;Stars&#34; src=&#34;https://img.shields.io/github/stars/a406010503/Miui_Camera?label=stars&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://t.me/HolyBearHome&#34;&gt;&lt;img alt=&#34;Telegram Group&#34; src=&#34;https://img.shields.io/badge/聖小熊の小屋-Telegram-blue.svg?logo=telegram&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/a406010503/Miui_Camera/raw/main/LICENSE&#34;&gt;&lt;img alt=&#34;GitHub license&#34; src=&#34;https://img.shields.io/github/license/a406010503/Miui_Camera&#34;&gt;&lt;/a&gt;&#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/a406010503/Miui_Camera/releases/latest&#34;&gt;&lt;img alt=&#34;Release&#34; src=&#34;https://img.shields.io/github/v/release/a406010503/Miui_Camera?label=release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/a406010503/Miui_Camera/releases/&#34;&gt;&lt;img alt=&#34;Pre&#34; src=&#34;https://img.shields.io/github/v/tag/a406010503/Miui_Camera?color=orange&amp;amp;include_prereleases&amp;amp;label=Pre-release&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA; &lt;p&gt;一個基於 &lt;b&gt;MIUI 13-14（Android 12-13）&lt;/b&gt; 適配的 Magisk 相機模組&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;重大公告&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;因發生相機創作侵害事件，本項目的免費版本與付費版本即日起永久停止更新，感謝大家一直以來的支持。&lt;/li&gt; &#xA; &lt;li&gt;內測版本仍持續更新，僅開放給部分受邀用戶使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;注意&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;徠卡相機具體請見【&lt;a href=&#34;https://github.com/a406010503/Miui_Camera/raw/main/Leica.md&#34;&gt;徠卡相機使用說明(必看)&lt;/a&gt;】&lt;/li&gt; &#xA; &lt;li&gt;請尊重他人智慧結晶，轉載本專案上的相機包，或進行修改、二次創作時，請務必加上原作者及來源。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;贊助網頁已經開通&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;現在，你可以透過 Paypal 或愛發電平台支持並贊助我們讓我們獲得更新的動力！&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://paypal.me/holybear0610&#34;&gt;點我將前往 Paypal 贊助頁面&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://afdian.net/a/HolyBear&#34;&gt;點我將前往 愛發電 贊助頁面&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;模組介紹&lt;/h3&gt; &#xA;&lt;p&gt;★ 額外補全以下相機功能(※)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;萌拍 4.0 (230101~)&lt;/li&gt; &#xA; &lt;li&gt;超級月亮&lt;/li&gt; &#xA; &lt;li&gt;電影鏡頭&lt;/li&gt; &#xA; &lt;li&gt;手勢拍照&lt;/li&gt; &#xA; &lt;li&gt;魔法分身&lt;/li&gt; &#xA; &lt;li&gt;長曝光&lt;/li&gt; &#xA; &lt;li&gt;文檔模式 2.0&lt;/li&gt; &#xA; &lt;li&gt;專業模式照片風格&lt;/li&gt; &#xA; &lt;li&gt;多機連錄&lt;/li&gt; &#xA; &lt;li&gt;無聲街拍(連拍+錄影)(※)&lt;/li&gt; &#xA; &lt;li&gt;更多模式的大魔王Kino相機介面UI&lt;/li&gt; &#xA; &lt;li&gt;新版相機浮水印&lt;/li&gt; &#xA; &lt;li&gt;徠卡訂製畫框(僅限徠卡訂製相機模式)&lt;/li&gt; &#xA; &lt;li&gt;膠片訂製畫框&lt;/li&gt; &#xA; &lt;li&gt;徠卡生動/經典模式(僅限徠卡訂製相機模式)&lt;/li&gt; &#xA; &lt;li&gt;徠卡濾鏡(僅限徠卡訂製相機模式)&lt;/li&gt; &#xA; &lt;li&gt;10/10S/10T/10TP/K30SU 480Fps慢動作&lt;/li&gt; &#xA; &lt;li&gt;部分機型開啟後攝1080p、4K 24Fps/60Fps&lt;/li&gt; &#xA; &lt;li&gt;部分機型開啟前攝1080p 24Fps/60Fps&lt;/li&gt; &#xA; &lt;li&gt;前攝補光介面&lt;/li&gt; &#xA; &lt;li&gt;人像模式前攝美顏&lt;/li&gt; &#xA; &lt;li&gt;電影模式&lt;/li&gt; &#xA; &lt;li&gt;平滑變焦&lt;/li&gt; &#xA; &lt;li&gt;錄影人像留色濾鏡&lt;/li&gt; &#xA; &lt;li&gt;照片瑕疵提示&lt;/li&gt; &#xA; &lt;li&gt;鏡頭髒污提示&lt;/li&gt; &#xA; &lt;li&gt;更多的滑動變焦倍率&lt;/li&gt; &#xA; &lt;li&gt;去除國際版標識&lt;/li&gt; &#xA; &lt;li&gt;專業模式錄影音訊圖&lt;/li&gt; &#xA; &lt;li&gt;新版VLOG模式&lt;/li&gt; &#xA; &lt;li&gt;更多模式內掃一掃&lt;/li&gt; &#xA; &lt;li&gt;自動下載&lt;/li&gt; &#xA; &lt;li&gt;防誤觸模式&lt;/li&gt; &#xA; &lt;li&gt;前置拍照2X變焦&lt;/li&gt; &#xA; &lt;li&gt;人眼追焦&lt;/li&gt; &#xA; &lt;li&gt;聲音設定（音源變焦/3D立體聲/智慧降噪/耳機收音）&lt;/li&gt; &#xA; &lt;li&gt;智慧構圖&lt;/li&gt; &#xA; &lt;li&gt;錄影HDR/AI模式&lt;/li&gt; &#xA; &lt;li&gt;支援錄影模式 30Fps&lt;/li&gt; &#xA; &lt;li&gt;自由切換徠卡訂製相機模式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;付費版本&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自由開關實驗室選項與進階設定&lt;/li&gt; &#xA; &lt;li&gt;實驗室選項使用徠卡大師鏡頭&lt;/li&gt; &#xA; &lt;li&gt;實驗室選項開啟錄影模式 10bit HEVC (.265)&lt;/li&gt; &#xA; &lt;li&gt;實驗室選項預設開啟聲控拍照&lt;/li&gt; &#xA; &lt;li&gt;實驗室選項預設開啟後螢幕顯示預覽&lt;/li&gt; &#xA; &lt;li&gt;實驗室選項開啟 24 至 60 Fps 錄影平滑變焦（需要裝置硬體支援）&lt;/li&gt; &#xA; &lt;li&gt;實驗室選項開啟總是超級防抖模式&lt;/li&gt; &#xA; &lt;li&gt;錄影模式防止降低其他媒體音量&lt;/li&gt; &#xA; &lt;li&gt;支援錄影模式 1080p 24Fps、4K 24Fps&lt;/li&gt; &#xA; &lt;li&gt;專業模式快門時間從 1/4000 增加到 1/10000 or 1/20000&lt;/li&gt; &#xA; &lt;li&gt;專業模式照片風格下的銳度設置從 3 增加到 7&lt;/li&gt; &#xA; &lt;li&gt;超級微距最大變焦倍率由 x2 改為 x10&lt;/li&gt; &#xA; &lt;li&gt;高解析度模式最大變焦倍率由 x2 改為 x10&lt;/li&gt; &#xA; &lt;li&gt;專業模式中的錄影最大變焦倍率由 x6 改為 x10 (也適用 8K)&lt;/li&gt; &#xA; &lt;li&gt;短影片錄製最大時長由 15 秒改為 10 分鐘&lt;/li&gt; &#xA; &lt;li&gt;連續拍照最大張數由預設 50 張照片改為 1000 張&lt;/li&gt; &#xA; &lt;li&gt;擁有自定義畫質的進階設定&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;注意事項【以下說明較為冗長還請在使用前務必仔細閱讀】&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基於MIUI 12.5補全最完整的版本為&lt;code&gt;v4.3.003591.0(220326-220501)、v4.3004561.0(220809)&lt;/code&gt;有需要原相機的人可以使用這兩個版本&lt;/li&gt; &#xA; &lt;li&gt;大師鏡頭僅在徠卡相機上才有，此功能極不穩定，故不接受任何此功能上的反饋&lt;/li&gt; &#xA; &lt;li&gt;街拍錄影模式僅限EU修改版可以使用&lt;/li&gt; &#xA; &lt;li&gt;由於未在各機型做過測試，若有功能出現問題還請不吝嗇回報，感謝您~&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;使用說明&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Magisk直接刷入即可使用(如果相機有問題請您嘗試清除cache，不會就Google)&lt;/li&gt; &#xA; &lt;li&gt;僅支援MIUI13穩定版及開發版以上版本的機型使用&lt;/li&gt; &#xA; &lt;li&gt;自v4.3.003591.0之前的原相機版本可以在MIUI 12.5使用&lt;/li&gt; &#xA; &lt;li&gt;第三方移植的MIUI ROM無法使用(移植到停更或其它品牌的手機)&lt;/li&gt; &#xA; &lt;li&gt;此項目經測試在Xiaomi.EU ROM上可以使用，其餘官改請自行測試&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;模組截圖&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/yx2fdcg.png&#34; alt=&#34;截圖&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;下載位址&lt;/h3&gt; &#xA;&lt;p&gt;Miui-Camera相機下載：&lt;a href=&#34;https://github.com/a406010503/Miui_Camera/releases&#34;&gt;點擊此處下載最新發行版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;回報BUG&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/a406010503/Miui_Camera/issues&#34;&gt;&lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/a406010503/Miui_Camera&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;致謝&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;感謝 4PDA &lt;a href=&#34;https://4pda.to/forum/index.php?showuser=513933&#34;&gt;@RomanYalta&lt;/a&gt;、酷安&lt;a href=&#34;http://www.coolapk.com/u/1388927&#34;&gt;@小陳同學&lt;/a&gt;、&lt;a href=&#34;https://github.com/Sevtinge&#34;&gt;@Sevtinge&lt;/a&gt; 技術提供&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;徠卡相機授權許可證書&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本專案的 &lt;code&gt;v4.3.004870.0&lt;/code&gt; 版本徠卡相機基於&lt;a href=&#34;http://sevtinge.wecrane.club/miuicam_mod/4870.html&#34;&gt;菜卡玩機 Vegeca Mobi 團隊&lt;/a&gt;的相機修改&lt;/li&gt; &#xA; &lt;li&gt;該版本 APK Mod 原作者：&lt;a href=&#34;https://github.com/Sevtinge&#34;&gt;@Sevtinge&lt;/a&gt;，已獲得授權，並經&lt;a href=&#34;https://github.com/a406010503&#34;&gt;聖小熊 (a406010503)&lt;/a&gt;二次修改，未經許可嚴禁轉載、修改、二次創作等。&lt;/li&gt; &#xA; &lt;li&gt;許可證書號：&lt;code&gt;2720-1972-8799-1540&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;此授權許可證書僅適用於 &lt;code&gt;v4.3.004870.0&lt;/code&gt; 版本&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Adonis142857/GLaDOS-Signin</title>
    <updated>2023-07-22T01:44:34Z</updated>
    <id>tag:github.com,2023-07-22:/Adonis142857/GLaDOS-Signin</id>
    <link href="https://github.com/Adonis142857/GLaDOS-Signin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;通过 GitHub Action 自动签到，每天延时一天，签到一定次数后奖励会变少&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GLaDOS-Signin&lt;/h1&gt; &#xA;&lt;p&gt;修改优化自QikaiXu/GLaDOS-checkin，感谢开源&lt;/p&gt; &#xA;&lt;p&gt;实现自动签到多个用户，并发送邮件通知&lt;/p&gt; &#xA;&lt;p&gt;通过 GitHub Action 来实现自动签到，每天签到可以延时一天&lt;/p&gt; &#xA;&lt;p&gt;但是当签到一定次数后，将会返回 &lt;code&gt;Checkin! Get 0 day(Your lucky chance is 33%), try next time.&lt;/code&gt;，大概意思就是 1/3 的几率获得 1 天的奖励&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/glados-network/GLaDOS&#34;&gt;GLaDOS 地址发布链接&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://glados.rocks/&#34;&gt;GLaDOS 官网&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果还没有注册的话，欢迎去&lt;a href=&#34;https://d7yov-ty0yd-06hy9-roc9w.glados.space&#34;&gt;这里&lt;/a&gt;注册，然后填写邀请码：&lt;strong&gt;D7YOV-TY0YD-06HY9-ROC9W&lt;/strong&gt;。双方均获得天数&lt;/p&gt; &#xA;&lt;h2&gt;步骤&lt;/h2&gt; &#xA;&lt;h3&gt;1 fork 这个仓库&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Adonis142857/GLaDOS-Signin/raw/main/ReadmePhoto/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;点击右上角的 fork，并创建相应仓库&lt;/p&gt; &#xA;&lt;h3&gt;2 获取 cookie&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Adonis142857/GLaDOS-Signin/raw/main/ReadmePhoto/2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;打开&lt;a href=&#34;https://glados.rocks/console/checkin&#34;&gt;GLaDOS 签到界面&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;进行如下操作：&lt;/p&gt; &#xA;&lt;p&gt;1.按下F12打开开发者工具并选择Network栏目&lt;/p&gt; &#xA;&lt;p&gt;2.点击签到按钮&lt;/p&gt; &#xA;&lt;p&gt;3.选择右侧checkin项目&lt;/p&gt; &#xA;&lt;p&gt;4.获取cookie&lt;/p&gt; &#xA;&lt;p&gt;举例：上图中我获取的即为 &lt;code&gt;koa:sess=eyJ1c2VySWQiOjI2NTQ0MiwiX2V4cGlyZSI6MTcxNTU4MzAwNDgxOCwiX21heEFnZSI6MjU5MjAwMDAwMDB9; koa:sess.sig=UA9IHbIb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3 设置 cookie&lt;/h3&gt; &#xA;&lt;p&gt;在 fork 后在&lt;strong&gt;自己的&lt;/strong&gt;仓库中依次点击 &lt;code&gt;Settings&lt;/code&gt; - &lt;code&gt;Secrets and variables&lt;/code&gt; - &lt;code&gt;Actions&lt;/code&gt; - &lt;code&gt;New repository secret&lt;/code&gt;，如下图所示：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Adonis142857/GLaDOS-Signin/raw/main/ReadmePhoto/3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;然后添加一个名为 &lt;code&gt;COOKIE&lt;/code&gt; 的变量，内容为获取到的 cookie&lt;/p&gt; &#xA;&lt;p&gt;可以直接设置多个用户COOKIE，每行一个，按如下规则设置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;COOKIE1&#xA;COOKIE2&#xA;COOKIE3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;COOKIE&lt;/code&gt; 示例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;koa:sess=eyJ1c2VySWQiOjI2NTQ0MiwiX2V4cGlyZSI6MTcxNTU4MzAwNDgxOCwiX21heEFnZSI6MjU5MjAwMDAwMDB9; koa:sess.sig=UA9IHbIb&#xA;koa:sess=eyJ1c2VySWQiOjI2e32e3r4r4e323ZSI6MTcxNTU4MzAwNDgxOCwiX21heEFnZSI6MjU5MjAwMDAwMDB9; koa:sess.sig=UA9dwedHb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4 设置邮件通知&lt;/h3&gt; &#xA;&lt;p&gt;如果需要邮件通知再设置如下变量，不需要可直接跳到第5步&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;添加一个名为 &lt;code&gt;USE_SMTP&lt;/code&gt; 的变量，内容为 &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加一个名为 &lt;code&gt;SMTP_SERVER&lt;/code&gt; 的变量，内容为 &lt;code&gt;SMTP服务器的地址，例如：smtp.gmail.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加一个名为 &lt;code&gt;SMTP_PORT&lt;/code&gt; 的变量，内容为 &lt;code&gt;SMTP服务器的端口号，例如：465&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加一个名为 &lt;code&gt;SMTP_USERNAME&lt;/code&gt; 的变量，内容为 &lt;code&gt;发送签到通知邮件的邮箱名称名，例如：Poster@gmail.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加一个名为 &lt;code&gt;SMTP_PASSWORD&lt;/code&gt; 的变量，内容为 &lt;code&gt;发送邮件的账户的SMTP服务专属密码，例如：UNWOKGSPSWSTUFRM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;添加一个名为 &lt;code&gt;SMTP_RECEIVER&lt;/code&gt; 的变量，内容为 &lt;code&gt;接收签到通知邮件的邮箱名称，例如：Receiver@gmail.com&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;5 运行&lt;/h3&gt; &#xA;&lt;p&gt;随便发起一个 push 请求，可以修改一下 &lt;code&gt;README.md&lt;/code&gt;，或者自己给自己点个 star，就可以开始&lt;/p&gt; &#xA;&lt;p&gt;之后就会每隔 3 小时进行一次签到（服务器质量问题，每日只进行1次容易导致签到失败）&lt;/p&gt; &#xA;&lt;p&gt;注意，在官方文档中有这么一段：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To prevent unnecessary workflow runs, scheduled workflows may be disabled automatically. When a public repository is forked, scheduled workflows are disabled by default. In a public repository, scheduled workflows are automatically disabled when no repository activity has occurred in 60 days.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;也就是说，&lt;strong&gt;定时执行的任务需要每隔 60 天激活一次&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;欢迎加入Telegram频道：&lt;a href=&#34;https://t.me/Super_Resource&#34;&gt;https://t.me/Super_Resource&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Telegram群组：&lt;a href=&#34;https://t.me/Resource_Sharing_Community&#34;&gt;https://t.me/Resource_Sharing_Community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Star History&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Adonis142857/GLaDOS-Signin&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Adonis142857/GLaDOS-Signin&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>djeada/Bash-Scripts</title>
    <updated>2023-07-22T01:44:34Z</updated>
    <id>tag:github.com,2023-07-22:/djeada/Bash-Scripts</id>
    <link href="https://github.com/djeada/Bash-Scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Bash scripts for automating routine tasks and streamlining your workflow.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/djeada/Bash-scripts&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/djeada/Bash-scripts/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/djeada/Bash-scripts&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/djeada/Bash-scripts&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;contributions welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Bash-scripts&lt;/h1&gt; &#xA;&lt;p&gt;A collection of Bash scripts for automating routine tasks and streamlining your workflow. From simple file renaming to more complex deployments, these Bash scripts have you covered.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/37275728/186024435-7edf1be2-ca64-4841-98bf-d07cbb362715.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!--ts--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#About-Bash&#34;&gt;About-Bash&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Whats-the-purpose-of-shell-scripts&#34;&gt;What&#39;s-the-purpose-of-shell-scripts?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#When-should-you-not-use-Bash&#34;&gt;When-should-you-not-use-Bash?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Hello-world&#34;&gt;Hello-world&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Executing-a-script&#34;&gt;Executing-a-script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#The-shebang&#34;&gt;The-shebang&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Variables&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Command-line-arguments&#34;&gt;Command-line-arguments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#If-statements&#34;&gt;If-statements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#For-loops&#34;&gt;For-loops&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Arrays&#34;&gt;Arrays&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Functions&#34;&gt;Functions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Pipes&#34;&gt;Pipes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Redirections&#34;&gt;Redirections&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Formatting-and-linting&#34;&gt;Formatting-and-linting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Available-scripts&#34;&gt;Available-scripts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Math&#34;&gt;Math&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Strings&#34;&gt;Strings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Arrays&#34;&gt;Arrays&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#System-administration&#34;&gt;System-administration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Programming-workflow&#34;&gt;Programming-workflow&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Git&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Utility&#34;&gt;Utility&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/djeada/Bash-Scripts/master/#Refrences&#34;&gt;Refrences&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--te--&gt; &#xA;&lt;h2&gt;About Bash&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scripting languages originated as extensions of command interpreters in operating systems.&lt;/li&gt; &#xA; &lt;li&gt;Bourne shell (sh) was the first significant shell. Bash, today&#39;s most used Unix shell, is a GNU/FSF enhancement on the Bourne shell.&lt;/li&gt; &#xA; &lt;li&gt;Other shells include: C shell (csh), TC shell (tcsh), Dash (dash), Korn shell (ksh), Z shell (zsh).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What&#39;s the purpose of shell scripts?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When working on programming projects or doing administrative tasks on servers, usually several command sequences are regularly repeated. This is especially true when working with files and directories, processing text, or configuring the network. Numerous times, those command sequences exist in many forms and must be adjusted with user input, necessitating the usage of scripts.&lt;/li&gt; &#xA; &lt;li&gt;Scripting languages such as Bash improve our processes by including variables, if statements, loops, arrays, and functions, allowing for more sophisticated program flow.&lt;/li&gt; &#xA; &lt;li&gt;The actual power of shell script comes from all of the accessible Unix commands.&lt;/li&gt; &#xA; &lt;li&gt;Eventually, scripts get too complicated for basic languages such as Bash. At this stage, you should consider utilizing more powerful programming languages, such as Python.&lt;/li&gt; &#xA; &lt;li&gt;Shell scripts may also be used to &#34;glue&#34; together more complex Python scripts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;When should you not use Bash?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complex applications.&lt;/li&gt; &#xA; &lt;li&gt;GUI.&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform portability.&lt;/li&gt; &#xA; &lt;li&gt;Calculations.&lt;/li&gt; &#xA; &lt;li&gt;Network programming.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hello world&lt;/h3&gt; &#xA;&lt;p&gt;This is a simple example of a Bash script. It prints the string &#34;Hello World&#34; to the standard output (stdout).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bash&#xA;echo &#34;Hello world&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Executing a script&lt;/h3&gt; &#xA;&lt;p&gt;To run this script, open the terminal in the directory where the script is located and type the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod u+x filename.sh&#xA;./filename.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The shebang&lt;/h3&gt; &#xA;&lt;p&gt;In the first line of a script, the shebang (#!) is used to specify the interpreter to be used when the script is executed. To use the bash interpreter, the first line of a script file must specify the absolute path to the bash executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bash path in the shebang is resolved and utilized only when a script is launched directly from a terminal. If the script is launched from a shell script, the interpreter is not resolved and the script is executed using the shell interpreter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./filename.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When a bash interpreter is explicitly specified to execute a script, the shebang is ignored:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash ./filename.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scripts may also be created in a variety of different &#34;scripting languages,&#34; thus a Perl script might begin with &lt;code&gt;#!/usr/bin/env perl&lt;/code&gt; and one in Python with &lt;code&gt; #!/usr/bin/env python3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Assign the value: &lt;code&gt;var=&#34;Test&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Retrive the value: &lt;code&gt;$x&lt;/code&gt; or &lt;code&gt;${x}&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Variables can be defined explicitly as int or array:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;declare -i var      # var is an int&#xA;declare -a arr      # arr in an array&#xA;declare -r var2=5   # var2 is read only&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Variables can store the value of executed command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;var=$(whoami)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command line arguments&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First argument: &lt;code&gt;$1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;All command line arguments as array: &lt;code&gt;$@&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Number of command line arguments: &lt;code&gt;$#&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The exit status of the last executed command: &lt;code&gt;$?&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;If statements&lt;/h3&gt; &#xA;&lt;p&gt;If statements are used to execute a block of code if a certain condition is met. Comparison of strings and ints differs. Assume that all values are strings, unless proven otherwise.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ $i -eq 10 ]; then echo True; fi         # int comparison&#xA;if [ &#34;$name&#34; == &#34;10&#34; ]; then echo True; fi   # string comparison&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Integer comparison:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operator&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-eq&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;equal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-ne&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;not equal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-gt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;greater than&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-ge&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;greater than or equal to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-lt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;less than&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-le&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;less than or equal to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;String comparison:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operator&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;equal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;not equal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;greater than&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;less than&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string is not null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-z&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;string is null&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Single [] are condition tests that are compatible with the posix shell.&lt;/p&gt; &#xA;&lt;p&gt;Bash and other shells (e.g. zsh, ksh) allow double [[]] as an enhancement to the usual []. They expand the standard possix operations with other operations. For example, instead of -o, it is possible to use || and do regex matching with =~.&lt;/p&gt; &#xA;&lt;p&gt;If you need to perform word splitting or filename expansion, you&#39;d use single square brackets. Assuming there is just one csv file named &#39;file.csv&#39; in the current directory, the following line of code will not print True:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [[ -f *.csv ]]; then echo True; fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The reason for this is that the test condition checks for a file with the name &#39;*.txt&#39; and no globbing is performed. This line of code, on the other hand, will print True:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ -f *.csv ]; then echo True; fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;For loops&lt;/h3&gt; &#xA;&lt;p&gt;A for loop repeats a sequence of steps a number of times.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for number in {1..10}&#xA;do&#xA;  echo &#34;$number &#34;&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arrays&lt;/h3&gt; &#xA;&lt;p&gt;An array is a variable that holds an ordered list of values. The values are separated by spaces. The following example creates an array named &lt;code&gt;array&lt;/code&gt; and assigns the values 1, 2, 3, 4, 5 to it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;array=(1 2 3 4 5) &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to create an array with specified element indices:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;array=([3]=&#39;elem_a&#39; [4]=&#39;elem_b&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To insert an elementat (e.g. &#39;abc&#39;) at a given index (e.g. 2) in the array, use the following syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;array=(&#34;${array[@]:0:2}&#34; &#39;new&#39; &#34;${array[@]:2}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To iterate over the elements of an array, use the following syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;items=(&#39;item_1&#39; &#39;item_2&#39; &#39;item_3&#39; &#39;item_4&#39;)&#xA;&#xA;for item in &#34;${items[@]}&#34;; do&#xA;  echo &#34;$item&#34;&#xA;done&#xA;# =&amp;gt; item_1&#xA;# =&amp;gt; item_2&#xA;# =&amp;gt; item_3&#xA;# =&amp;gt; item_4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is often useful to print the elements of an array on a single line. The following code will print the elements of the array on a single line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;${array[*]}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Functions&lt;/h3&gt; &#xA;&lt;p&gt;Functions are used to group a sequence of commands into a single unit. They are used to perform repetitive tasks. Functions can be called from anywhere in the script. The following example creates a function named &lt;code&gt;hello_world&lt;/code&gt; that prints the string &lt;code&gt;Hello World&lt;/code&gt; to the standard output (stdout):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello_world()&#xA;{&#xA;  echo &#34;Hello World!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To call the function, use the following syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello_world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above function does not take any arguments and does not explicitly return a value. It is possible to pass any number of arguments to the function. It is also possible to return a value from the function, but only an integer from range [0,255] is allowed.&lt;/p&gt; &#xA;&lt;p&gt;Here is a complete example of a script that defines and uses a function to sum two numbers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bash&#xA;&#xA;sum_two() &#xA;{&#xA;    return $(($1 + $2))&#xA;}&#xA;&#xA;sum_two 5 3&#xA;echo $?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pipes&lt;/h3&gt; &#xA;&lt;p&gt;The pipe is used to pass the output of one command as input to the next:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ps -x | grep chromium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Redirections&lt;/h3&gt; &#xA;&lt;p&gt;But what if you&#39;d want to save the results to a file? Bash&amp;nbsp;has&amp;nbsp;a redirect operator &amp;gt; that may be used to control where the output is delivered.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;some_command &amp;gt; out.log            # Redirect stdout to out.log&#xA;some_command 2&amp;gt; err.log           # Redirect stderr to file err.log&#xA;some_command 2&amp;gt;&amp;amp;1                 # Redirect stderr to stdout&#xA;some_command 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1     # Silence both stdout and stderr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Complete summary:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Syntax&lt;/th&gt; &#xA;   &lt;th&gt;StdOut visibility&lt;/th&gt; &#xA;   &lt;th&gt;StdErr visibility&lt;/th&gt; &#xA;   &lt;th&gt;StdOut in file&lt;/th&gt; &#xA;   &lt;th&gt;StdErr in file&lt;/th&gt; &#xA;   &lt;th&gt;existing file&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;append&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;append&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;append&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tee&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tee -a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;append&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;n.e. (*)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;n.e. (*)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;append&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;|&amp;amp; tee&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;|&amp;amp; tee -a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;append&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Formatting and linting&lt;/h3&gt; &#xA;&lt;p&gt;It is important to keep the formatting of your script as consistent as possible. &lt;a href=&#34;https://github.com/lovesegfault/beautysh&#34;&gt;Beautysh&lt;/a&gt; is an amazing tool that helps you to format your script. To use it, just run the following command in a directory where your scripts are located:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;beautysh **/*.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally we advise to use &lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;shellcheck&lt;/a&gt; for code inspection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;shellcheck **/*.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available scripts&lt;/h2&gt; &#xA;&lt;h3&gt;Intro&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Prints &#34;Hello, world!&#34; to the console.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/hello_world.sh&#34;&gt;hello_world.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates the use of if statements to check conditions.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/conditionals.sh&#34;&gt;conditionals.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Shows the use of a while loop to repeatedly execute code.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/while_loop.sh&#34;&gt;while_loop.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates the use of a for loop to iterate over elements.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/for_loop.sh&#34;&gt;for_loop.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Displays the digits of a given number, one digit per line.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/digits.sh&#34;&gt;digits.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Prints all of the numbers within a specified range, one number per line.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/numbers_in_interval.sh&#34;&gt;numbers_in_interval.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Prints a Christmas tree pattern to the console.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/christmas_tree.sh&#34;&gt;christmas_tree.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Prompts the user for a response to a given question and stores their response in a variable.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/promt_for_answer.sh&#34;&gt;promt_for_answer.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Math&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Performs basic arithmetic operations (addition, subtraction, multiplication, and division) on two numbers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/arithmetic_operations.sh&#34;&gt;arithmetic_operations.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Calculates the sum of all the arguments passed to it, treating them as numbers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/sum_args.sh&#34;&gt;sum_args.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Converts a number from the decimal (base 10) system to its equivalent in the binary (base 2) system.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/decimal_binary.sh&#34;&gt;decimal_binary.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Calculates the factorial of a given integer.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/factorial.sh&#34;&gt;factorial.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Determines whether a given number is a prime number or not.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/is_prime.sh&#34;&gt;is_prime.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Calculates the square root of a given number.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/sqrt.sh&#34;&gt;sqrt.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Counts the number of times a specific character appears in a given string.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/count_char.sh&#34;&gt;count_char.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Converts all uppercase letters in a given string to lowercase.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/lower.sh&#34;&gt;lower.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Converts all lowercase letters in a given string to uppercase.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/upper.sh&#34;&gt;upper.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Checks if a given string is a palindrome, i.e., a word that is spelled the same way forwards and backwards.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/is_palindrome.sh&#34;&gt;is_palindrome.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Checks if two given strings are anagrams, i.e., if they are made up of the same letters rearranged in a different order.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/are_anagrams.sh&#34;&gt;are_anagrams.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Calculates the Hamming Distance between two strings, i.e., the number of positions at which the corresponding characters are different.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/hamming_distance.sh&#34;&gt;hamming_distance.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Sorts a given string alphabetically, considering all letters to be lowercase.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/sort_string.sh&#34;&gt;sort_string.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Creates a word histogram.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/word_histogram.sh&#34;&gt;word_histogram.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Arrays&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Calculates the arithmetic mean of a given list of numbers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/arith_mean.sh&#34;&gt;arith_mean.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Finds the maximum value in a given array of numbers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/max_array.sh&#34;&gt;max_array.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Finds the minimum value in a given array of numbers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/min_array.sh&#34;&gt;min_array.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Removes duplicates from a given array of numbers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/remove_duplicates_in_array.sh&#34;&gt;remove_duplicates_in_array.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Files&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Counts the number of files in a specified directory.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/count_files.sh&#34;&gt;count_files.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Creates a new directory with a specified name.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/make_dir.sh&#34;&gt;make_dir.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Counts the number of lines in a specified text file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/line_counter.sh&#34;&gt;line_counter.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Gets the middle line from a specified text file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/middle_line.sh&#34;&gt;middle_line.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Removes duplicate lines from a specified file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/remove_duplicate_lines.sh&#34;&gt;remove_duplicate_lines.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Replaces all forward slashes with backward slashes and vice versa in a specified file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/switch_slashes.sh&#34;&gt;switch_slashes.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Adds specified text to the beginning of a specified file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/prepend_text_to_file.sh&#34;&gt;prepend_text_to_file.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Removes all lines in a specified file that contain only whitespaces.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/remove_empty_lines.sh&#34;&gt;remove_empty_lines.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Renames all files in a specified directory with a particular extension to a new extension.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/rename_extension.sh&#34;&gt;rename_extension.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Strips digits from every string found in a given file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/strip_digits.sh&#34;&gt;strip_digits.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Lists the most recently modified files in a given directory.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/recently_modified_files.sh&#34;&gt;recently_modified_files.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;System administration&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Retrieves basic system information, such as hostname and kernel version.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/system_info.sh&#34;&gt;system_info.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Determines the type and version of the operating system running on the machine.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/check_os.sh&#34;&gt;check_os.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Checks whether the current user has root privileges.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/check_if_root.sh&#34;&gt;check_if_root.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Checks if the apt command, used for package management on Debian-based systems, is available on the machine.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/check_apt_avail.sh&#34;&gt;check_apt_avail.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Retrieves the size of the machine&#39;s random access memory (RAM).&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/ram_memory.sh&#34;&gt;ram_memory.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Gets the current temperature of the machine&#39;s central processing unit (CPU).&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/cpu_temp.sh&#34;&gt;cpu_temp.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Retrieves the current overall CPU usage of the machine.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/cpu_usage.sh&#34;&gt;cpu_usage.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Blocks certain websites from being visited on the local machine by modifying the hosts file.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/web_block.sh&#34;&gt;web_block.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Creates a backup of the system&#39;s files, compresses the backup, and encrypts the resulting archive for storage.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/backup.sh&#34;&gt;backup.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Displays processes that are not being waited on by any parent process. Orphan processes are created when the parent process terminates.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/orphans.sh&#34;&gt;orphans.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Displays processes that are in an undead state, also known as a &#34;zombie&#34; state. Zombie processes have completed execution but remain in the process table.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/zombies.sh&#34;&gt;zombies.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Programming workflow&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Removes the carriage return character (&lt;code&gt;\r&lt;/code&gt;) from the given files, which may be present in files transferred between systems with different line ending conventions.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/remove_carriage_return.sh&#34;&gt;remove_carriage_return.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Replaces all characters with diacritical marks in the given files with their non-diacritical counterparts. Diacritical marks are small signs added above or below letters to indicate different pronunciations or tones in some languages.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/remove_diacritics.sh&#34;&gt;remove_diacritics.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Changes all spaces in file names to underscores and converts them to lowercase. This can be useful for making the file names more compatible with systems that do not support spaces in file names or for making the file names easier to read or type.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/correct_file_names.sh&#34;&gt;correct_file_names.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Removes any trailing whitespace characters (spaces or tabs) from the end of every file in a given directory. Trailing whitespace can cause formatting issues or interfere with certain tools and processes.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/remove_trailing_whitespaces.sh&#34;&gt;remove_trailing_whitespaces.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Formats and beautifies every shell script found in the current repository. This can make the scripts easier to read and maintain by adding consistent indentation and whitespace.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/beautify_script.sh&#34;&gt;beautify_script.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Finds functions and classes in a Python project that are not being used or called anywhere in the code. This can help identify and remove unnecessary code, which can improve the project&#39;s performance and maintainability.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/dead_code.sh&#34;&gt;dead_code.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Resets the local repository to match the state of the remote repository, discarding any local commits and changes. This can be useful for starting over or synchronizing with the latest version on the remote repository.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/reset_to_origin.sh&#34;&gt;reset_to_origin.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Deletes the specified branch both locally and on the remote repository. This can be useful for removing branches that are no longer needed or for consolidating multiple branches into a single branch.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/remove_branch.sh&#34;&gt;remove_branch.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Counts the total number of lines of code in a git repository, including lines in all branches and commits. This can be useful for tracking the size and complexity of a project over time.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/count_lines_of_code.sh&#34;&gt;count_lines_of_code.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Combines multiple commits into a single commit. This can be useful for simplifying a commit history or for cleaning up a series of small, incremental commits that were made in error.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/squash_n_last_commits.sh&#34;&gt;squash_n_last_commits.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Removes the &lt;code&gt;n&lt;/code&gt; last commits from the repository. This can be useful for undoing mistakes or for removing sensitive information that was accidentally committed.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/remove_n_last_commits.sh&#34;&gt;remove_n_last_commits.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Changes the date of the last commit in the repository. This can be useful for altering the commit history for cosmetic purposes.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/change_commit_date.sh&#34;&gt;change_commit_date.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Downloads all of the public repositories belonging to a specified user on GitHub. This can be useful for backing up repositories.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/download_all_github_repos.sh&#34;&gt;download_all_github_repos.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Squashes all commits on a specified Git branch into a single commit.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/squash_branch.sh&#34;&gt;squash_branch.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Counts the total lines changed by a specific author in a Git repository.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/contributions_by_git_author.sh&#34;&gt;contributions_by_git_author.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Utility&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Finds the public IP address of the device running the script.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/ip_info.sh&#34;&gt;ip_info.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Deletes all files in the trash bin.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/empty_trash.sh&#34;&gt;empty_trash.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;Extracts files with a specified extension from a given directory.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/extract.sh&#34;&gt;extract.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Determines which programs are currently using a specified port number on the local system.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/program_on_port.sh&#34;&gt;program_on_port.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;Converts month names to numbers and vice versa in a string. For example, &#34;January&#34; to &#34;1&#34; and &#34;1&#34; to &#34;January&#34;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/month_to_number.sh&#34;&gt;month_to_number.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Creates command aliases for all the scripts in a specified directory, allowing them to be run by simply typing their names.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/alias_all_the_scripts.sh&#34;&gt;alias_all_the_scripts.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Generates a random integer within a given range. The range can be specified as arguments to the script.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/rand_int.sh&#34;&gt;rand_int.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Generates a random password of the specified length, using a combination of letters, numbers, and special characters.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/raw/master/src/random_password.sh&#34;&gt;random_password.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Measures the time it takes to run a program with the specified input parameters. Output the elapsed time in seconds.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/time_execution.sh&#34;&gt;time_execution.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Downloads the audio from a YouTube video or playlist in MP3 format. Specify the video or playlist URL and the destination directory for the downloaded files.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/youtube_to_mp3.sh&#34;&gt;youtube_to_mp3.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;Clears the local caches in the user&#39;s cache directory (e.g. &lt;code&gt;~/.cache&lt;/code&gt;) that are older than a specified number of days.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-scripts/raw/master/src/clear_cache.sh&#34;&gt;clear_cache.sh&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;Resizes all JPG files in the current directory to a specified dimension (A4).&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/djeada/Bash-Scripts/edit/master/src/resize_to_a4.sh&#34;&gt;resize_to_a4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Refrences&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/manual/bash.html&#34;&gt;https://www.gnu.org/software/bash/manual/bash.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashGuide&#34;&gt;http://mywiki.wooledge.org/BashGuide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.bash-hackers.org/&#34;&gt;https://wiki.bash-hackers.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure to update tests as appropriate.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>