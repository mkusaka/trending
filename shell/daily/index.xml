<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-09T01:33:33Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ellermister/mtproxy</title>
    <updated>2024-08-09T01:33:33Z</updated>
    <id>tag:github.com,2024-08-09:/ellermister/mtproxy</id>
    <link href="https://github.com/ellermister/mtproxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MTProxyTLS一键安装绿色脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mtproxy&lt;/h1&gt; &#xA;&lt;p&gt;这是一个一键安装 MTProxy 代理的绿色脚本，脚本可以在官方版本的 MTProxy 程序和兼容性最强的第三方作者开发的 mtg 程序中进行选择静态安装或者编译，该版本默认支持 Fake TLS 以及 AdTag 配置。&lt;/p&gt; &#xA;&lt;p&gt;在此基础上，提供了 Nginx 作为前端转发，MTProxy 作为后端代理的方式以实现安全的伪装，并且在 nginx 转发层进行配置了 IP 白名单，只有通过白名单认证过的 IP 才可以进行访问，此功能提供了 Docker 镜像以便开箱即用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ellermister/mtproxy/master/README-en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;交流群组&lt;/h2&gt; &#xA;&lt;p&gt;Telegram 群组：&lt;a href=&#34;https://t.me/EllerHK&#34;&gt;https://t.me/EllerHK&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;安装方式&lt;/h2&gt; &#xA;&lt;p&gt;提供了两种安装方式可供选择：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;使用脚本&lt;/p&gt; &lt;p&gt;选择该方式一般是你在宿主机中进行直接安装或者编译，会或多或少需要安装一些系统基础依赖库。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 Docker&lt;/p&gt; &lt;p&gt;&lt;strong&gt;小白建议使用 Docker!&lt;/strong&gt; 不会对宿主机造成污染，如果你需要修改一些配置文件，需要你稍微学习一些基础Docker 使用技术。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;使用脚本&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你反复遇到段错误或者其他未知问题, 建议更换为 Debian 9+ 以上的系统或采用 Docker 方式运行.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;执行如下代码进行安装&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf /home/mtproxy &amp;amp;&amp;amp; mkdir /home/mtproxy &amp;amp;&amp;amp; cd /home/mtproxy&#xA;curl -fsSL -o mtproxy.sh https://github.com/ellermister/mtproxy/raw/master/mtproxy.sh&#xA;bash mtproxy.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ellermister/mtproxy/master/mtproxy.jpg&#34; alt=&#34;mtproxy.sh&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;使用Docker | 白名单 MTProxy Docker 镜像&lt;/h3&gt; &#xA;&lt;p&gt;The image integrates nginx and mtproxy+tls to disguise traffic, and uses a whitelist mode to deal with firewall detection.&lt;/p&gt; &#xA;&lt;p&gt;该镜像集成了 nginx、mtproxy+tls 实现对流量的伪装，并采用&lt;strong&gt;白名单&lt;/strong&gt;模式来应对防火墙的检测。&lt;/p&gt; &#xA;&lt;p&gt;If you use this Docker image, you don&#39;t need to use the script, you can choose one of the two, don&#39;t mix it up.&lt;/p&gt; &#xA;&lt;p&gt;若使用该 Docker 镜像, 就不需要用脚本了，二者二选一，不要搞混了。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果没有安装Docker&lt;/strong&gt;，一键安装方式：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://get.docker.com -o get-docker.sh&#xA;sh get-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;创建白名单镜像：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;--name mtproxy \&#xA;--restart=always \&#xA;-e domain=&#34;cloudflare.com&#34; \&#xA;-p 8080:80 \&#xA;-p 8443:443 \&#xA;ellermister/mtproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;镜像默认开启了 IP 段白名单&lt;/strong&gt;，如果你不需要可以配置 &lt;code&gt;ip_white_list=&#34;OFF&#34;&lt;/code&gt; 取消：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;--name mtproxy \&#xA;--restart=always \&#xA;-e domain=&#34;cloudflare.com&#34; \&#xA;-e secret=&#34;548593a9c0688f4f7d9d57377897d964&#34; \&#xA;-e ip_white_list=&#34;OFF&#34; \&#xA;-p 8080:80 \&#xA;-p 8443:443 \&#xA;ellermister/mtproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ip_white_list&lt;/code&gt; 选项:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OFF&lt;/strong&gt; 关闭白名单&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IP&lt;/strong&gt; 开启 IP 白名单&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IPSEG&lt;/strong&gt; 开启 IP 段白名单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;secret&lt;/code&gt;指定密钥：如果你想创建已知的密钥，格式为：32位十六进制字符。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;在日志中查看链接的参数配置&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker logs -f mtproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;连接端口记得修改为你映射后的外部端口，如上文例子中都是&lt;code&gt;8443&lt;/code&gt;，在连接时修改端口。&lt;/p&gt; &#xA;&lt;p&gt;更多使用请参考： &lt;a href=&#34;https://hub.docker.com/r/ellermister/mtproxy&#34;&gt;https://hub.docker.com/r/ellermister/mtproxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用方式&lt;/h2&gt; &#xA;&lt;p&gt;配置文件 &lt;code&gt;mtp_config&lt;/code&gt;，如果你想手动修改密钥或者参数请注意格式。&lt;/p&gt; &#xA;&lt;p&gt;运行服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash mtproxy.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;调试运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash mtproxy.sh debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;停止服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash mtproxy.sh stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重启服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash mtproxy.sh restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重新安装/重新配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash mtproxy.sh reinstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;卸载安装&lt;/h2&gt; &#xA;&lt;p&gt;因为是绿色版卸载极其简单，直接删除所在目录即可。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf /home/mtproxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;开机启动&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;该脚本没有配置为系统服务的方式，你可以将其添加到开机启动脚本中。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;开机启动脚本，如果你的 rc.local 文件不存在请检查开机自启服务。&lt;/p&gt; &#xA;&lt;p&gt;通过编辑文件&lt;code&gt;/etc/rc.local&lt;/code&gt;将如下代码加入到开机自启脚本中：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /home/mtproxy &amp;amp;&amp;amp; bash mtproxy.sh start &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;计划任务守护&lt;/h2&gt; &#xA;&lt;p&gt;因为默认官方的 mtproxy 程序存在BUG，pid 大于 65535 时处理存在问题。进程容易坏死和异常退出。&lt;/p&gt; &#xA;&lt;p&gt;建议通过计划任务去守护进程，编辑方式 &lt;code&gt;crontab -e&lt;/code&gt; ：&lt;/p&gt; &#xA;&lt;p&gt;每分钟检测进程并启动&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;* * * * * cd /home/mtproxy &amp;amp;&amp;amp; bash mtproxy.sh start &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MTProxy Admin Bot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/MTProxybot&#34;&gt;https://t.me/MTProxybot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sorry, an error has occurred during your request. Please try again later.(Code xxxxxx)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;如果你在申请绑定代理推广时遇到了此类错误，官方没有给出明确的原因，根据网友反馈，此类问题多出现于账号注册不足与 2~3 年，&lt;strong&gt;建议使用 3 年以上的账号以及未被 banned 的账号。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;引用项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TelegramMessenger/MTProxy&#34;&gt;https://github.com/TelegramMessenger/MTProxy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/9seconds/mtg&#34;&gt;https://github.com/9seconds/mtg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>