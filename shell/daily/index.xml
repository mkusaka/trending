<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-17T01:35:14Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>codecov/codecov-action</title>
    <updated>2024-11-17T01:35:14Z</updated>
    <id>tag:github.com,2024-11-17:/codecov/codecov-action</id>
    <link href="https://github.com/codecov/codecov-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub Action that uploads coverage to Codecov ☂️&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Codecov GitHub Action&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marketplace/actions/codecov&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Marketplace-v5-undefined.svg?logo=github&amp;amp;logoColor=white&amp;amp;style=flat&#34; alt=&#34;GitHub Marketplace&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fcodecov%2Fcodecov-action?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fcodecov%2Fcodecov-action.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/codecov/codecov-action/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/codecov/codecov-action/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Workflow for Codecov Action&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Easily upload coverage reports to Codecov from GitHub Actions&lt;/h3&gt; &#xA;&lt;h2&gt;v5 Release&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;v5&lt;/code&gt; of the Codecov GitHub Action will use the &lt;a href=&#34;https://github.com/codecov/wrapper&#34;&gt;Codecov Wrapper&lt;/a&gt; to encapsulate the &lt;a href=&#34;https://github.com/codecov/codecov-cli&#34;&gt;CLI&lt;/a&gt;. This will help ensure that the Action gets updates quicker.&lt;/p&gt; &#xA;&lt;h3&gt;Migration Guide&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;v5&lt;/code&gt; release also coincides with the opt-out feature for tokens for public repositories. In the &lt;code&gt;Global Upload Token&lt;/code&gt; section of the settings page of an organization in codecov.io, you can set the ability for Codecov to receive a coverage reports from any source. This will allow contributors or other members of a repository to upload without needing access to the Codecov token. For more details see &lt;a href=&#34;https://docs.codecov.com/docs/codecov-tokens#uploading-without-a-token&#34;&gt;how to upload without a token&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;strong&gt;The following arguments have been changed&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;file&lt;/code&gt; (this has been deprecated in favor of &lt;code&gt;files&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;plugin&lt;/code&gt; (this has been deprecated in favor of &lt;code&gt;plugins&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The following arguments have been added:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;binary&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gcov_args&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gcov_executable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gcov_ignore&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gcov_include&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;report_type&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;skip_validation&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;swift_project&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can see their usage in the &lt;code&gt;action.yml&lt;/code&gt; &lt;a href=&#34;https://github.com/codecov/codecov-action/raw/main/action.yml&#34;&gt;file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;v4 Release&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;v4&lt;/code&gt; of the Codecov GitHub Action will use the &lt;a href=&#34;https://github.com/codecov/codecov-cli&#34;&gt;Codecov CLI&lt;/a&gt; to upload coverage reports to Codecov.&lt;/p&gt; &#xA;&lt;h3&gt;Breaking Changes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tokenless uploading is unsupported. However, PRs made from forks to the upstream public repos will support tokenless (e.g. contributors to OSS projects do not need the upstream repo&#39;s Codecov token). For details, &lt;a href=&#34;https://docs.codecov.com/docs/codecov-uploader#supporting-token-less-uploads-for-forks-of-open-source-repos-using-codecov&#34;&gt;see our docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Various arguments to the Action have been removed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dependabot&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For repositories using &lt;code&gt;Dependabot&lt;/code&gt;, users will need to ensure that it has access to the Codecov token for PRs from Dependabot to upload coverage. To do this, please add your &lt;code&gt;CODECOV_TOKEN&lt;/code&gt; as a Dependabot Secret. For more information, see &lt;a href=&#34;https://docs.github.com/en/code-security/dependabot/working-with-dependabot/configuring-access-to-private-registries-for-dependabot#storing-credentials-for-dependabot-to-use&#34;&gt;&#34;Configuring access to private registries for Dependabot.&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;v3&lt;/code&gt; versions and below will not have access to CLI features (e.g. global upload token, ATS).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To integrate Codecov with your Actions pipeline, specify the name of this repository with a tag number (&lt;code&gt;@v4&lt;/code&gt; is recommended) as a &lt;code&gt;step&lt;/code&gt; within your &lt;code&gt;workflow.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;This Action also requires you to &lt;a href=&#34;https://docs.codecov.io/docs/frequently-asked-questions#section-where-is-the-repository-upload-token-found-&#34;&gt;provide an upload token&lt;/a&gt; from &lt;a href=&#34;https://www.codecov.io&#34;&gt;codecov.io&lt;/a&gt; (tip: in order to avoid exposing your token, &lt;a href=&#34;https://docs.codecov.com/docs/adding-the-codecov-token#github-actions&#34;&gt;store it&lt;/a&gt; as a &lt;code&gt;secret&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Currently, the Action will identify linux, macos, and windows runners. However, the Action may misidentify other architectures. The OS can be specified as&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;alpine&lt;/li&gt; &#xA; &lt;li&gt;alpine-arm64&lt;/li&gt; &#xA; &lt;li&gt;linux&lt;/li&gt; &#xA; &lt;li&gt;linux-arm64&lt;/li&gt; &#xA; &lt;li&gt;macos&lt;/li&gt; &#xA; &lt;li&gt;windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Inside your &lt;code&gt;.github/workflows/workflow.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@main&#xA;- uses: codecov/codecov-action@v4&#xA;  with:&#xA;    fail_ci_if_error: true # optional (default = false)&#xA;    files: ./coverage1.xml,./coverage2.xml # optional&#xA;    flags: unittests # optional&#xA;    name: codecov-umbrella # optional&#xA;    token: ${{ secrets.CODECOV_TOKEN }} # required&#xA;    verbose: true # optional (default = false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Codecov token can also be passed in via environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@main&#xA;- uses: codecov/codecov-action@v4&#xA;  with:&#xA;    fail_ci_if_error: true # optional (default = false)&#xA;    files: ./coverage1.xml,./coverage2.xml # optional&#xA;    flags: unittests # optional&#xA;    name: codecov-umbrella # optional&#xA;    verbose: true # optional (default = false)&#xA;  env:&#xA;    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This assumes that you&#39;ve set your Codecov token inside &lt;em&gt;Settings &amp;gt; Secrets&lt;/em&gt; as &lt;code&gt;CODECOV_TOKEN&lt;/code&gt;. If not, you can &lt;a href=&#34;https://docs.codecov.io/docs/frequently-asked-questions#section-where-is-the-repository-upload-token-found-&#34;&gt;get an upload token&lt;/a&gt; for your specific repo on &lt;a href=&#34;https://www.codecov.io&#34;&gt;codecov.io&lt;/a&gt;. Keep in mind that secrets are &lt;em&gt;not&lt;/em&gt; available to forks of repositories.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Using OIDC&lt;/h3&gt; &#xA;&lt;p&gt;For users with &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&#34;&gt;OpenID Connect(OIDC) enabled&lt;/a&gt;, the Codecov token is not necessary. You can use OIDC with the &lt;code&gt;use_oidc&lt;/code&gt; argument as following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: codecov/codecov-action@v4&#xA;  with:&#xA;    use_oidc: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any token supplied will be ignored, as Codecov will default to the OIDC token for verification.&lt;/p&gt; &#xA;&lt;h2&gt;Arguments&lt;/h2&gt; &#xA;&lt;p&gt;Codecov&#39;s Action supports inputs from the user. These inputs, along with their descriptions and usage contexts, are listed in the table below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Input&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Repository Codecov token. Used to authorize report uploads&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;*Required&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;codecov_yml_path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the path to the Codecov YML&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;commit_parent&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Override to specify the parent commit SHA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Directory to search for coverage reports.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;disable_search&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Disable search for coverage files. This is helpful when specifying what files you want to upload with the --file option.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;disable_file_fixes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Disable file fixes to ignore common lines from coverage (e.g. blank lines or empty brackets)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;dry_run&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Don&#39;t upload files to Codecov&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;env_vars&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Folders to exclude from search&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;fail_ci_if_error&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify whether or not CI build should fail if Codecov runs into an error during upload&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Path to coverage file to upload&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;files&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Comma-separated list of files to upload&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;handle_no_reports_found&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Raise no exceptions when no coverage reports found&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;job_code&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The job code&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;User defined upload name. Visible in Codecov UI&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Override the assumed OS. Options are linux | macos | windows | .&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;override_branch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the branch name&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;override_build&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the build number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;override_build_url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The URL of the build where this is running&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;override_commit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the commit SHA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;override_pr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the pull request number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plugin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;plugins to run. Options: xcode, gcov, pycoverage. The default behavior runs them all.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;plugins&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Comma-separated list of plugins for use during upload.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;report_code&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The code of the report. If unsure, do not include&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;root_dir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Used to specify the location of your .git root to identify project root directory&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;slug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the slug manually (Enterprise use)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify the base url to upload (Enterprise use)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;use_legacy_upload_endpoint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use the legacy upload endpoint&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;use_oidc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Use OpenID Connect for verification instead of token. This will ignore any token supplied. Please see &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&#34;&gt;GitHub documentation&lt;/a&gt; for details.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;verbose&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify whether the Codecov output should be verbose&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify which version of the Codecov CLI should be used. Defaults to &lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;working-directory&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Directory in which to execute codecov.sh&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Optional&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Example &lt;code&gt;workflow.yml&lt;/code&gt; with Codecov Action&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: Example workflow for Codecov&#xA;on: [push]&#xA;jobs:&#xA;  run:&#xA;    runs-on: ${{ matrix.os }}&#xA;    strategy:&#xA;      matrix:&#xA;        os: [ubuntu-latest, macos-latest, windows-latest]&#xA;    env:&#xA;      OS: ${{ matrix.os }}&#xA;      PYTHON: &#39;3.10&#39;&#xA;    steps:&#xA;    - uses: actions/checkout@main&#xA;    - name: Setup Python&#xA;      uses: actions/setup-python@main&#xA;      with:&#xA;        python-version: 3.10&#xA;    - name: Generate coverage report&#xA;      run: |&#xA;        pip install pytest&#xA;        pip install pytest-cov&#xA;        pytest --cov=./ --cov-report=xml&#xA;    - name: Upload coverage to Codecov&#xA;      uses: codecov/codecov-action@v4&#xA;      with:&#xA;        directory: ./coverage/reports/&#xA;        env_vars: OS,PYTHON&#xA;        fail_ci_if_error: true&#xA;        files: ./coverage1.xml,./coverage2.xml,!./cache&#xA;        flags: unittests&#xA;        name: codecov-umbrella&#xA;        token: ${{ secrets.CODECOV_TOKEN }}&#xA;        verbose: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Check out the &lt;a href=&#34;https://raw.githubusercontent.com/codecov/codecov-action/main/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code in this project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/codecov/codecov-action/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fcodecov%2Fcodecov-action?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fcodecov%2Fcodecov-action.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>