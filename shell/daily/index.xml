<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-03T01:41:48Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cockroachai/cockroachai</title>
    <updated>2023-12-03T01:41:48Z</updated>
    <id>tag:github.com,2023-12-03:/cockroachai/cockroachai</id>
    <link href="https://github.com/cockroachai/cockroachai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个简单的小程序，用于账号共享。免费但暂不开源。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cockroachai&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cockroachai/cockroachai/main/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;一个简单的小程序，用于账号共享。免费但暂不开源。&lt;/p&gt; &#xA;&lt;p&gt;交流群: &lt;a href=&#34;https://t.me/xyhelper&#34;&gt;https://t.me/xyhelper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自动刷新AccessToken&lt;/li&gt; &#xA; &lt;li&gt;用户间会话隔离&lt;/li&gt; &#xA; &lt;li&gt;屏蔽部分敏感信息&lt;/li&gt; &#xA; &lt;li&gt;1:1完全官网UI，支持官网联网，插件，绘图等功能&lt;/li&gt; &#xA; &lt;li&gt;适合小团体或号商共享账号使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;演示&lt;/h2&gt; &#xA;&lt;p&gt;演示站点提供了部分免费的PLUS账号，输入任意6位以上userToken即可登陆。为了避免滥用，演示站使用4.0模型时需人机验证。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://xyhelper.cn/xq&#34;&gt;访问演示站点&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;前置要求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一台不在某AI黑名单的服务器&lt;/li&gt; &#xA; &lt;li&gt;一个某AI的账号&lt;/li&gt; &#xA; &lt;li&gt;安装好了Docker和Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;主机商推荐区&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;黑果云: &lt;a href=&#34;https://www.hgidc.cn&#34;&gt;https://www.hgidc.cn&lt;/a&gt; 国内持证商家，请咨询商家获取支持蟑螂的主机型号。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装方法&lt;/h2&gt; &#xA;&lt;p&gt;1.克隆本仓库&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/cockroachai/cockroachai.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.进入目录&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd cockroachai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3.修改配置文件&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim config/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改 REFRESHCOOKIE 为你的账号的 Cookie&lt;/p&gt; &#xA;&lt;p&gt;修改 USERTOKENS 为用户Token，可以使用多个&lt;/p&gt; &#xA;&lt;p&gt;可以访问 &lt;a href=&#34;http://%E6%9C%8D%E5%8A%A1%E5%99%A8IP:9000/getsession&#34;&gt;http://服务器IP:9000/getsession&lt;/a&gt; 获取RefreshCookie&lt;/p&gt; &#xA;&lt;p&gt;也可以访问 &lt;a href=&#34;https://cockroachai.xyhelper.cn/getsession&#34;&gt;https://cockroachai.xyhelper.cn/getsession&lt;/a&gt; 获取RefreshCookie&lt;/p&gt; &#xA;&lt;p&gt;4.启动&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./deploy.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;对接第三方账户体系&lt;/h2&gt; &#xA;&lt;p&gt;配置环境变量或在config.yaml中配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;OAUTH_URL: https://xxxxx.xxx.com/ouath&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;当该值被配置后，用户登陆时将向该地址POST以下数据&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;userToken: 用户Token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;允许用户登陆接口应返回json数据&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;code&#34;: 1,&#xA;    &#34;msg&#34;: &#34;登陆失败时的提示信息&#34;,&#xA;    &#34;refreshCookie&#34;: &#34;刷新Cookie，可选&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中code为1时表示允许登陆，其他值表示不允许登陆&lt;/p&gt; &#xA;&lt;p&gt;msg为登陆失败时的提示信息&lt;/p&gt; &#xA;&lt;p&gt;refreshCookie为刷新Cookie，可选，如果不填写则使用本地配置的刷新Cookie&lt;/p&gt; &#xA;&lt;h2&gt;跳转登陆&lt;/h2&gt; &#xA;&lt;p&gt;访问&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://服务器IP:9000/logintoken?access_token=xxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;xxxx 为可用的userToken&lt;/p&gt; &#xA;&lt;h2&gt;指定登陆页面地址&lt;/h2&gt; &#xA;&lt;p&gt;配置环境变量或在config.yaml中配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;LOGIN_CALLBACK: &#34;/login&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;当用户退出或登陆失效后会跳转到该页面。&lt;/p&gt; &#xA;&lt;h2&gt;如何开设免费公益服务器&lt;/h2&gt; &#xA;&lt;p&gt;配置环境变量或在config.yaml中配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;OAUTH_URL: http://127.0.0.1:9000/ouath&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;配置完成后重启服务，用户即可输入任意6位以上token完成登陆&lt;/p&gt; &#xA;&lt;h2&gt;关于session.json&lt;/h2&gt; &#xA;&lt;p&gt;cockroachai在运行过程中，会将账户session信息记录到 session.json文件。在应用重启后，如果发现存在session.json文件，将会优先使用session.json中的账号信息。&lt;/p&gt; &#xA;&lt;p&gt;手动修改session.json内容，可以将 /getsession 返回结果完整复制到该文件中保存。&lt;/p&gt; &#xA;&lt;p&gt;在配置了正确的session.json后，可以不配置refreshCookie.&lt;/p&gt; &#xA;&lt;h2&gt;如何更新&lt;/h2&gt; &#xA;&lt;p&gt;新版本镜像采用docker发布，可在程序安装目录执行 ./deploy.sh 进行更新，如有新版本发布，该命令会自动拉取新版本并重启服务。&lt;/p&gt; &#xA;&lt;h2&gt;如何重启服务&lt;/h2&gt; &#xA;&lt;p&gt;在程序安装目录执行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose down&#xA;./deploy.sh&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>x86trace/Bug-Hunting-Setup</title>
    <updated>2023-12-03T01:41:48Z</updated>
    <id>tag:github.com,2023-12-03:/x86trace/Bug-Hunting-Setup</id>
    <link href="https://github.com/x86trace/Bug-Hunting-Setup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bash script that streamlines the process of setting up your Debian Linux machine for bug hunting.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;All-in-One-Bug-Hunting-Setup&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the All-in-One Bug Hunting Setup! This bash script streamlines the process of setting up your Debian Linux machine for bug hunting endeavors.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;The standout feature of this script is its capability to install and set up Go on your machine if it&#39;s not already installed.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to Set Up&lt;/h2&gt; &#xA;&lt;p&gt;Setting up and using this script is a breeze. Follow these straightforward steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;1. sudo git clone https://github.com/x86trace/Bug-Hunting-Setup.git&#xA;2. cd All-in-One-Bug-Hunting-Setup/&#xA;3. chmod +x install.sh&#xA;4. bash install.sh or ./install.sh&#xA;5. **(The easiest one)** Enter your password and sit back.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Included Tools&lt;/h2&gt; &#xA;&lt;p&gt;This script equips your machine with a powerful set of bug hunting tools, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aboul3la/Sublist3r.git&#34;&gt;Sublist3r&lt;/a&gt; - Subdomain Enumeration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nahamsec/lazyrecon.git&#34;&gt;lazyrecon&lt;/a&gt; - A tool for the not-so-energetic hunter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomnomnom/waybackurls&#34;&gt;waybackurls&lt;/a&gt; - Fetch URLs from the Wayback Machine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlmapproject/sqlmap&#34;&gt;sqlmap&lt;/a&gt; - Database testing tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt; - Web fuzzing tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;nuclei&lt;/a&gt; - Send requests based on templates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OWASP/Amass&#34;&gt;amass&lt;/a&gt; - Map attack surfaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maurosoria/dirsearch.git&#34;&gt;dirsearch&lt;/a&gt; - Directory search tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wpscanteam/wpscan.git&#34;&gt;wpscan&lt;/a&gt; - WordPress testing tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nmap.org/&#34;&gt;nmap&lt;/a&gt; - Network mapping tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomnomnom/httprobe&#34;&gt;httprobe&lt;/a&gt; - Probe list of HTTP and HTTPS servers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectdiscovery/httpx&#34;&gt;httpx&lt;/a&gt; - Run multiple HTTP probes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OJ/gobuster&#34;&gt;gobuster&lt;/a&gt; - Content discovery tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lc/gau&#34;&gt;gau&lt;/a&gt; - Get-All-URLs tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomnomnom/assetfinder&#34;&gt;assetfinder&lt;/a&gt; - Find domains and subdomains&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rbsec/dnscan.git&#34;&gt;dnscan&lt;/a&gt; - DNS scanning tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielmiessler/SecLists.git&#34;&gt;SecList&lt;/a&gt; - Extensive collection of wordlists for various purposes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks and credits to &lt;a href=&#34;https://github.com/nahamsec&#34;&gt;nahamsec&lt;/a&gt; for the inspiration and a bit of assistance. XD If you find this script helpful, let me know! Enjoy bug hunting! 😉&lt;/p&gt;</summary>
  </entry>
</feed>