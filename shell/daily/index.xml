<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:45:24Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dualra1n/dualra1n</title>
    <updated>2023-03-04T01:45:24Z</updated>
    <id>tag:github.com,2023-03-04:/dualra1n/dualra1n</id>
    <link href="https://github.com/dualra1n/dualra1n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;this is a script to dualboot your iphone on ios 15 with 14&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dualra1n&lt;/h1&gt; &#xA;&lt;p&gt;A script that lets you dualboot iOS 14-15 on checkm8 devices.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Example: ./dualboot.sh --dualboot 14.3&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--dualboot          Dualboot your device with any SEP and Baseband compatible iOS 14 version.&#xA;&#xA;--jail-palera1n     Use this only when you already jailbroken with semitethered palera1n to avoid disk errors. &#xA;&#xA;--jailbreak         Jailbreak the dualbooted iOS with Pogo. Usage :  ./dualboot.sh --jailbreak 14.3&#xA;&#xA;--taurine           Jailbreak dualbooted iOS with Taurine. Usage: ./dualboot.sh --jailbreak 14.3 --taurine &#xA;&#xA;--help              Print this help.&#xA;   &#xA;--get-ipsw           Automaticly downloads IPSW that you want to dualboot. Dont forget specify iOS version.&#xA;&#xA;--dfuhelper         A helper to enter DFU if you struggling in it.&#xA;&#xA;--boot              Lets you boot into dualbooted iOS. Use it alone. Usage : ./dualboot.sh --boot&#xA;&#xA;--dont-create-part   Skips the creating a new disk partition if you have them already.&#xA;&#xA;--restorerootfs     Deletes dualbooted OS. and remember put --jail-palera1n if you have palera1n semitethered jailbreak &#xA;&#xA;--fix-preboot       that restore preboot with the prebootBackup. --fix-preboot&#xA;&#xA;--debug             Debug the script&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Subcommands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;clean               Deletes the created boot files &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A desactivated passcode on A10-A11&lt;/li&gt; &#xA; &lt;li&gt;unzip&lt;/li&gt; &#xA; &lt;li&gt;python3&lt;/li&gt; &#xA; &lt;li&gt;A IPSW iOS 14-15&lt;/li&gt; &#xA; &lt;li&gt;15GB+ free storage&lt;/li&gt; &#xA; &lt;li&gt;a MACOS or LINUX, it&#39;s better that you use a mac it&#39;s more estable and faster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Warnings&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I am &lt;strong&gt;NOT&lt;/strong&gt; responsible for any data loss. The user of this program accepts responsibility should something happen to their device. &lt;strong&gt;If your device is stuck in recovery, please run one of the following:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;futurerestore --exit-recovery&lt;/li&gt; &#xA;   &lt;li&gt;irecovery -n&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Ideal Dualboot Versions&lt;/h1&gt; &#xA;&lt;p&gt;iOS 14.2 is the ideal version as on that version the Camera and flash works, while on other version usually they don&#39;t.&lt;/p&gt; &#xA;&lt;p&gt;Dualbooting any version of iOS 15 will give you kernel panics, so you will have to use --jailbreak 15.* after the first boot. That should be a one time fix.&lt;/p&gt; &#xA;&lt;p&gt;iOS 13 is working but has only been tested with 13.7, but hasn&#39;t for others. If you want to dualboot with iOS 13.x, use the iOS 13 branch. This will not work on iPads without a baseband (WiFi Only).&lt;/p&gt; &#xA;&lt;h1&gt;Common Issues&lt;/h1&gt; &#xA;&lt;p&gt;ramdisk-submodule&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A9 : Everything works except camera, microphone and gyroscope. (Can be fixed with ldrestart or by using iOS 14.2)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A10/11: Home button is not working currently and camera, micro, girosc. You can use tweaks like GesturesXV to simulate iPhone X gestures. also activating assesive touch on the first ios before you dualboot, and when you boot into the second ios you will have activated the assesive touch on the second ios.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iPhone X: Touchscreen does not work.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iPads may have issues with &#34;Deep Sleep&#34;. Sometimes, installing this tweak &lt;a href=&#34;https://www.ios-repo-updates.com/repository/julioverne-s-repo/package/com.julioverne.fiona/&#34;&gt;Fiona&lt;/a&gt; may fix it.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How would I dualboot?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dualra1n/dualra1n/raw/main/tutorial.md&#34;&gt;A full tutorial&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=4iCZv7Ox5AA&#34;&gt;video tutorial from burhanrana&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Problems and issues contact me on the official &lt;a href=&#34;https://discord.gg/E6jj48hzd5&#34;&gt;Discord&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;dualra1n Contributors&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/edwin170&#34;&gt;Edwin&lt;/a&gt; owner :)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/swayea&#34;&gt;Fatih&lt;/a&gt; help with readme and linux support and is a very good person.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/m00nl1ghts&#34;&gt;azaz0322&lt;/a&gt;, &lt;a href=&#34;https://github.com/34306&#34;&gt;Huy Nguyen&lt;/a&gt;, &lt;a href=&#34;https://github.com/Uckermark&#34;&gt;Uckermark&lt;/a&gt; helped with readme.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Other credits for tools and codes used in dualra1n&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Edward thanks for my brother for gave me a hackintosh to test this:).&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/palera1n&#34;&gt;palera1n&lt;/a&gt; for some code&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dualbootfun.github.io/&#34;&gt;Dualboot guide&lt;/a&gt; for the guide&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/darlinghq&#34;&gt;Darling&lt;/a&gt; for a macOS emulator&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/blacktop&#34;&gt;blacktop&lt;/a&gt; for the ipsw downloader&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/verygenericname&#34;&gt;Nathan&lt;/a&gt; for the ramdisk&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mineek&#34;&gt;Mineek&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;For patchfinders for RELEASE kernels&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://github.com/mineek/PongoOS/tree/iOS15/checkra1n/Kernel15Patcher&#34;&gt;Kernel15Patcher&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://github.com/mineek/Kernel64Patcher&#34;&gt;Kernel64Patcher&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/elihwyma&#34;&gt;Amy&lt;/a&gt; for the &lt;a href=&#34;https://github.com/elihwyma/Pogo&#34;&gt;Pogo&lt;/a&gt; app&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/checkra1n&#34;&gt;checkra1n&lt;/a&gt; for the base of the kpf&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/m1stadev&#34;&gt;m1sta&lt;/a&gt; for &lt;a href=&#34;https://github.com/m1stadev/PyIMG4&#34;&gt;pyimg4&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tihmstar&#34;&gt;tihmstar&lt;/a&gt; for &lt;a href=&#34;https://github.com/tihmstar/partialZipBrowser&#34;&gt;pzb&lt;/a&gt;/original &lt;a href=&#34;https://github.com/tihmstar/iBoot64Patcher&#34;&gt;iBoot64Patcher&lt;/a&gt;/original &lt;a href=&#34;https://github.com/tihmstar/liboffsetfinder64&#34;&gt;liboffsetfinder64&lt;/a&gt;/&lt;a href=&#34;https://github.com/tihmstar/img4tool&#34;&gt;img4tool&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xerub&#34;&gt;xerub&lt;/a&gt; for &lt;a href=&#34;https://github.com/xerub/img4lib&#34;&gt;img4lib&lt;/a&gt; and &lt;a href=&#34;https://github.com/xerub/sshrd&#34;&gt;restored_external&lt;/a&gt; in the ramdisk&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/libimobiledevice&#34;&gt;libimobiledevice&lt;/a&gt; for several tools used in this project (irecovery, ideviceenterrecovery etc), and &lt;a href=&#34;https://github.com/nikias&#34;&gt;nikias&lt;/a&gt; for keeping it up to date&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dora2-iOS&#34;&gt;Dora&lt;/a&gt; for iBoot payload and iBootpatcher2&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sbingner&#34;&gt;Sam Bingner&lt;/a&gt; for &lt;a href=&#34;https://github.com/sbingner/substitute&#34;&gt;Substitute&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coolstar&#34;&gt;CoolStar&lt;/a&gt; for [Libhooker]&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Ralph0045/Kernel64Patcher&#34;&gt;Ralp0045&lt;/a&gt; amazing dtree_patcher and kernel64patcher ;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>hmcts/sds-flux-config</title>
    <updated>2023-03-04T01:45:24Z</updated>
    <id>tag:github.com,2023-03-04:/hmcts/sds-flux-config</id>
    <link href="https://github.com/hmcts/sds-flux-config" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sds-flux-config&lt;/h1&gt; &#xA;&lt;p&gt;All SDS applications are now being managed by Flux v2.&lt;/p&gt; &#xA;&lt;h2&gt;Encrypting Secrets With Sops&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmcts/sds-flux-config/master/docs/secrets-sops-encryption.md&#34;&gt;Sops setup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SOPs&lt;/h3&gt; &#xA;&lt;p&gt;Sops fails linting by default as we require 2 spaces while it uses 4 spaces. You can use &lt;code&gt;yq&lt;/code&gt; to fix this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yq eval -I 2 --inplace apps/mi/mi-adf-shir/sbox/mi-adf-auth-values.enc.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;upstream issue: &lt;a href=&#34;https://github.com/mozilla/sops/issues/900&#34;&gt;https://github.com/mozilla/sops/issues/900&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>