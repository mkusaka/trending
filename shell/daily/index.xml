<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-23T01:36:09Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>orangepi-xunlong/orangepi-build</title>
    <updated>2022-12-23T01:36:09Z</updated>
    <id>tag:github.com,2022-12-23:/orangepi-xunlong/orangepi-build</id>
    <link href="https://github.com/orangepi-xunlong/orangepi-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Orange Pi build for H2+, H3, H5, H6, H616, RK3328 and RK3399&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Supported boards&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Soc&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Boards&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Allwinner H2+&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi Zero/R1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Allwinner H3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi One/Lite/Pc/PcPlus/Plus/Plus2E/ZeroPlus2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Allwinner H5&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi Pc2/Prime/ZeroPlus/ZeroPlus2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Allwinner H6&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi 3/3 LTS/Lite2/OnePlus&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Allwinner H616&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi Zero2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rockchip RK3328&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi R1Plus/R1Plus LTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rockchip RK3399&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Orange Pi 4/4B&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Download links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;中文链接： &lt;a href=&#34;http://www.orangepi.cn&#34;&gt;http://www.orangepi.cn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;English link：&lt;a href=&#34;http://www.orangepi.org&#34;&gt;http://www.orangepi.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>damomine/aleominer</title>
    <updated>2022-12-23T01:36:09Z</updated>
    <id>tag:github.com,2022-12-23:/damomine/aleominer</id>
    <link href="https://github.com/damomine/aleominer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Damominer&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;      _                       &#xA;     | |                      &#xA;   __| | __ _ _ __ ___   ___  &#xA;  / _` |/ _` | &#39;_ ` _ \ / _ \ &#xA; | (_| | (_| | | | | | | (_) |&#xA;  \__,_|\__,_|_| |_| |_|\___/ &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;GPU optimization Miner for Aleo&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.damominer.hk/&#34;&gt;damominer.hk&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/damomine&#34;&gt;damominer_github&lt;/a&gt; are the only 2 officially maintained site for publishing information and new releases of damominer.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Running command below under &lt;code&gt;root&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget https://raw.githubusercontent.com/damomine/aleominer/main/damominer.sh &amp;amp;&amp;amp; chmod +x damominer.sh&#xA;./damominer.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The miner will be installed to &lt;code&gt;/.damominer/damominer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the usage help (&lt;code&gt;./damominer --help&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;p&gt;If you didn&#39;t have an aleo account, use the following command to create one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./damominer --new-account&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please remember to save the account private key and view key.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Private key: APrivateKey1zkp95v192bRWbotxuUi7owk7uG31Tdim5qD6nFphcUmNHUA&#xA;   View key: AViewKey1h5yPK4bEUKEmApg8VbY5J2xAP7Hcox71BrkSL3YyxJhR&#xA;    Address: aleo1hefv5vr5c0x0fw9drzdwegdd0jgnt7swwvggezng9amxs95elg9qktnwn3&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then start miner like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./damominer --address &amp;lt;your address&amp;gt; --proxy &amp;lt;solo prover proxy&amp;gt; [OPTIONS] &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Options:&#xA;      --address &amp;lt;ADDRESS&amp;gt;  Specify the Aleo address. Note: Use your address as the prover address.&#xA;      --worker &amp;lt;WORKER&amp;gt;    Specify the worker name. Note: The name consists of numbers and letters and cannot exceed 15 characters in length&#xA;      --proxy &amp;lt;PROXY&amp;gt;      Specify the proxy server address&#xA;  -g, --gpu &amp;lt;GPU&amp;gt;          Specify the index of GPU. Specify multiple times to use multiple GPUs, example: -g 0 -g 1 -g 2. Note: Use all gpus if not specify.&#xA;  -o, --log &amp;lt;LOG&amp;gt;          Specify the log file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPU supports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NVIDIA Turing GPU&lt;/li&gt; &#xA; &lt;li&gt;NVIDIA Ampere GPU&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;1.1.0&lt;/h3&gt; &#xA;&lt;p&gt;support for aleo testnet3 phase2.&lt;/p&gt; &#xA;&lt;h3&gt;1.2.0&lt;/h3&gt; &#xA;&lt;p&gt;merge code.&lt;/p&gt; &#xA;&lt;h3&gt;1.3.0&lt;/h3&gt; &#xA;&lt;p&gt;fix some issue.&lt;/p&gt; &#xA;&lt;h3&gt;1.4.0&lt;/h3&gt; &#xA;&lt;p&gt;fix some issue.&lt;/p&gt; &#xA;&lt;h3&gt;1.5.2&lt;/h3&gt; &#xA;&lt;p&gt;increase connect stabel.&lt;/p&gt; &#xA;&lt;h3&gt;1.6.1&lt;/h3&gt; &#xA;&lt;p&gt;support V100,A100 increase stalbel&lt;/p&gt; &#xA;&lt;h3&gt;2.0.0&lt;/h3&gt; &#xA;&lt;p&gt;increase performance&lt;/p&gt; &#xA;&lt;h3&gt;2.1.2&lt;/h3&gt; &#xA;&lt;p&gt;support 40-series cards&lt;br&gt; enhance cuda performance&lt;br&gt; decrease CPU load&lt;br&gt; fix some issue (log crash, etc)&lt;/p&gt; &#xA;&lt;h3&gt;2.2.0&lt;/h3&gt; &#xA;&lt;p&gt;enhance performance&lt;br&gt; add more log (driver verion, worker name, etc)&lt;br&gt; support for using local time as log message timestamps&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zobront/quickpoc</title>
    <updated>2022-12-23T01:36:09Z</updated>
    <id>tag:github.com,2022-12-23:/zobront/quickpoc</id>
    <link href="https://github.com/zobront/quickpoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;easy POC template generation from the command line&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;quickpoc&lt;/h1&gt; &#xA;&lt;p&gt;easy POC template generation from the command line&lt;/p&gt; &#xA;&lt;h2&gt;features&lt;/h2&gt; &#xA;&lt;p&gt;from the command line, call &lt;code&gt;quickpoc 0x.. [folder_name]&lt;/code&gt; to generate a ready-to-go sandbox for running POCs for the given address against mainnet, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;forge template with name mirroring contract name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/&lt;/code&gt; folder populated with all contracts and libraries&lt;/li&gt; &#xA; &lt;li&gt;test file autogenerated with contract import&lt;/li&gt; &#xA; &lt;li&gt;test setup with contract variable and mainnet forking&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd folder_name&lt;/code&gt; copied to clipboard to save you 1 extra second&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;you can run &lt;code&gt;forge test&lt;/code&gt; to confirm it&#39;s working, then go into &lt;code&gt;tests/POC.t.sol&lt;/code&gt; to interact with the contract (saved in storage as &lt;code&gt;c&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;install&lt;/h2&gt; &#xA;&lt;p&gt;note: you must be running a UNIX based machine with &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;forge&lt;/code&gt;, &lt;code&gt;cast&lt;/code&gt;, and &lt;code&gt;jq&lt;/code&gt; installed.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;download the &lt;code&gt;quickpoc&lt;/code&gt; file from this repo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;set up two environment variables by calling the following from your terminal:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;export ETH_RPC_URL=&#34;...&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;export ETHERSCAN_API_KEY=&#34;...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;you can then run it directly by calling the file (&lt;code&gt;./quickpoc&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;more conveniently, install it globally:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;put it somewhere you won&#39;t touch it (usually &lt;code&gt;~/bin&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;if this folder isn&#39;t already in your path, open your bash run control file (for example, &lt;code&gt;~/.zshrc&lt;/code&gt;) and add the following line: &lt;code&gt;export PATH=&#34;$PATH:/Users/path_to_folder_holding_file&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;call &lt;code&gt;chmod +x path_to_file&lt;/code&gt; to make the file executable&lt;/li&gt; &#xA; &lt;li&gt;you should then be able to call &lt;code&gt;quickpoc 0x..&lt;/code&gt; from any folder to generate the POC folder within it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;future&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; support non-mainnet networks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; allow inputting multiple addresses&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; automatically pull all contracts listed on an immunefi page&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;please submit issues for any additional features you&#39;d like to see :)&lt;/p&gt;</summary>
  </entry>
</feed>