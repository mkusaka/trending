<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-10T01:39:59Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ChrisTitusTech/ArchTitus</title>
    <updated>2023-10-10T01:39:59Z</updated>
    <id>tag:github.com,2023-10-10:/ChrisTitusTech/ArchTitus</id>
    <link href="https://github.com/ChrisTitusTech/ArchTitus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated Arch Linux Install&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Resurrecting Project&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;m changing the scope of the project to only do minimal installs and no longer offer the options for the install script. As the official arch install script has become better this one is no longer needed. However, I still want a script that installs my two flavors of arch.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DWM + Xorg&lt;/li&gt; &#xA; &lt;li&gt;Hyprland + Wayland&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is currently a work in progress and check the branchs for the old versions.&lt;/p&gt; &#xA;&lt;p&gt;New single command quicklaunch&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -L christitus.com/archtitus)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Old Script with all the customizations is located in the (all-in-one-2022 branch) here: &lt;a href=&#34;https://github.com/ChrisTitusTech/ArchTitus/tree/all-in-one-2022-script&#34;&gt;https://github.com/ChrisTitusTech/ArchTitus/tree/all-in-one-2022-script&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ArchTitus Installer Script&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marketplace/actions/super-linter&#34;&gt;&lt;img src=&#34;https://github.com/ChrisTitusTech/ArchTitus/workflows/Lint%20Code%20Base/badge.svg?sanitize=true&#34; alt=&#34;GitHub Super-Linter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/YiNMnan.png&#34;&gt; &#xA;&lt;p&gt;This README contains the steps I do to install and configure a fully-functional Arch Linux installation containing a desktop environment, all the support packages (network, bluetooth, audio, printers, etc.), along with all my preferred applications and utilities. The shell scripts in this repo allow the entire process to be automated.)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Create Arch ISO or Use Image&lt;/h2&gt; &#xA;&lt;p&gt;Download ArchISO from &lt;a href=&#34;https://archlinux.org/download/&#34;&gt;https://archlinux.org/download/&lt;/a&gt; and put on a USB drive with &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;Etcher&lt;/a&gt;, &lt;a href=&#34;https://www.ventoy.net/en/index.html&#34;&gt;Ventoy&lt;/a&gt;, or &lt;a href=&#34;https://rufus.ie/en/&#34;&gt;Rufus&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t want to build using this script I did create an image @ &lt;a href=&#34;https://cttstore.com/arch-titus&#34;&gt;https://cttstore.com/arch-titus&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Boot Arch ISO&lt;/h2&gt; &#xA;&lt;p&gt;From initial Prompt type the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -Sy git&#xA;git clone https://github.com/ChrisTitusTech/ArchTitus&#xA;cd ArchTitus&#xA;./archtitus.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;System Description&lt;/h3&gt; &#xA;&lt;p&gt;This is completely automated arch install. It includes prompts to select your desired desktop environment, window manager, AUR helper, and whether to do a full or minimal install. The KDE desktop environment on arch includes all the packages I use on a daily basis, as well as some customizations.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rickellis/Arch-Linux-Install-Guide&#34;&gt;Arch Linux RickEllis Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Installation_guide&#34;&gt;Arch Linux Wiki Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The main script will generate .log files for every script that is run as part of the installation process. These log files contain the terminal output so you can review any warnings or errors that occurred during installation and aid in troubleshooting.&lt;/p&gt; &#xA;&lt;h3&gt;No Wifi&lt;/h3&gt; &#xA;&lt;p&gt;You can check if the WiFi is blocked by running &lt;code&gt;rfkill list&lt;/code&gt;. If it says &lt;strong&gt;Soft blocked: yes&lt;/strong&gt;, then run &lt;code&gt;rfkill unblock wifi&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;After unblocking the WiFi, you can connect to it. Go through these 5 steps:&lt;/p&gt; &#xA;&lt;p&gt;#1: Run &lt;code&gt;iwctl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;#2: Run &lt;code&gt;device list&lt;/code&gt;, and find your device name.&lt;/p&gt; &#xA;&lt;p&gt;#3: Run &lt;code&gt;station [device name] scan&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;#4: Run &lt;code&gt;station [device name] get-networks&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;#5: Find your network, and run &lt;code&gt;station [device name] connect [network name]&lt;/code&gt;, enter your password and run &lt;code&gt;exit&lt;/code&gt;. You can test if you have internet connection by running &lt;code&gt;ping google.com&lt;/code&gt;, and then Press Ctrl and C to stop the ping test.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Issues&lt;/h2&gt; &#xA;&lt;p&gt;An issue is easier to resolve if it contains a few important pieces of information.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Chosen configuration from /configs/setup.conf (DONT INCLUDE PASSWORDS)&lt;/li&gt; &#xA; &lt;li&gt;Errors seen in .log files&lt;/li&gt; &#xA; &lt;li&gt;What commit/branch you used&lt;/li&gt; &#xA; &lt;li&gt;Where you were installing (VMWare, Virtualbox, Virt-Manager, Baremetal, etc) &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;If a VM, what was the configuration used.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Original packages script was a post install cleanup script called ArchMatic located here: &lt;a href=&#34;https://github.com/rickellis/ArchMatic&#34;&gt;https://github.com/rickellis/ArchMatic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thank you to all the folks that helped during the creation from YouTube Chat! Here are all those Livestreams showing the creation: &lt;a href=&#34;https://www.youtube.com/watch?v=IkMCtkDIhe8&amp;amp;list=PLc7fktTRMBowNaBTsDHlL6X3P3ViX3tYg&#34;&gt;https://www.youtube.com/watch?v=IkMCtkDIhe8&amp;amp;list=PLc7fktTRMBowNaBTsDHlL6X3P3ViX3tYg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>r1vs3c/auto-bspwm</title>
    <updated>2023-10-10T01:39:59Z</updated>
    <id>tag:github.com,2023-10-10:/r1vs3c/auto-bspwm</id>
    <link href="https://github.com/r1vs3c/auto-bspwm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bash script that automates the setup of a professional hacking environment for Kali Linux using the tiled window manager bspwm.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;auto-bspwm&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a Bash script that automates the setup of a professional hacking environment for Kali Linux using the tiled window manager &lt;a href=&#34;https://github.com/baskerville/bspwm&#34;&gt;bspwm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install available updates.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt update&#xA;sudo apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repository and navigate to it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/r1vs3c/auto-bspwm.git&#xA;cd auto-bspwm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Grant execution permissions to the script.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;chmod +x setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Execute the script.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;After the script has finished, you will be prompted to restart the system. Once you have rebooted, select &lt;code&gt;bspwm&lt;/code&gt; as the window manager and then log in.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Overview of the environment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/r1vs3c/auto-bspwm/main/assets/overview1.png&#34; alt=&#34;overview1&#34; title=&#34;overview1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/r1vs3c/auto-bspwm/main/assets/overview2.png&#34; alt=&#34;overview2&#34; title=&#34;overview2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/r1vs3c/auto-bspwm/main/assets/overview3.png&#34; alt=&#34;overview3&#34; title=&#34;overview3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Keyboard shortcuts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Enter&lt;/kbd&gt;: Open a terminal emulator window (kitty).&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;W&lt;/kbd&gt;: Close the current window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt;: Restart the bspwm configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;Q&lt;/kbd&gt;: Log out.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;(⬆⬅⬇➡)&lt;/kbd&gt;: Navigate through windows in the current workspace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;D&lt;/kbd&gt;: Open Rofi. Press &lt;kbd&gt;Esc&lt;/kbd&gt; to exit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;(1,2,3,4,5,6,7,8,9,0)&lt;/kbd&gt;: Switch to the respective workspace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;T&lt;/kbd&gt;: Change the current window to tile mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;M&lt;/kbd&gt;: Toggle the current window to &#34;full&#34; mode (doesn&#39;t occupy the polybar). Press the same keys to return to tile mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;F&lt;/kbd&gt;: Change the current window to fullscreen mode (occupies the entire screen, including the polybar).&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;S&lt;/kbd&gt;: Change the current window to floating mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;(1,2,3,4,5,6,7,8,9,0)&lt;/kbd&gt;: Move the current window to another workspace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;(⬆⬅⬇➡)&lt;/kbd&gt;: Resize the current window (only works if it&#39;s in floating mode).&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;(⬆⬅⬆➡)&lt;/kbd&gt;: Change the position of the current window (only works in floating mode).&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;F&lt;/kbd&gt;: Open Firefox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;B&lt;/kbd&gt;: Open Burpsuite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;L&lt;/kbd&gt;: Lock the screen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;⬆⬇&lt;/kbd&gt;: Increase/decrease volume.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;M&lt;/kbd&gt;: Mute/unmute volume.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;(⬆⬅⬇➡)&lt;/kbd&gt;: Show a preselection and then open a window (kitty, Firefox, File manager, etc.). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;Windows&lt;/kbd&gt; + &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;Space&lt;/kbd&gt;: Undo the preselection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Enter&lt;/kbd&gt;: Open a sub-window in the current window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;T&lt;/kbd&gt;: Open a tab in the current window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Z&lt;/kbd&gt;: Zoom in on the current sub-window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;(⬆⬅⬇➡)&lt;/kbd&gt;: Navigate through sub-windows in the current window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;W&lt;/kbd&gt;: Close the current sub-window or tab.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt;: Resize the current sub-window. Afterward, use: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;W&lt;/kbd&gt; for &#39;Wider&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;N&lt;/kbd&gt; for &#39;Narrower&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;T&lt;/kbd&gt; for &#39;Taller&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;S&lt;/kbd&gt; for &#39;Shorter&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;R&lt;/kbd&gt; for &#39;Reset&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;Esc&lt;/kbd&gt; to quit resize mode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;L&lt;/kbd&gt;: Toggle the arrangement of sub-windows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt;: Copy to the clipboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;V&lt;/kbd&gt;: Paste from the clipboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;F1&lt;/kbd&gt;: Copy to buffer A.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;F2&lt;/kbd&gt;: Paste from buffer A.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;F3&lt;/kbd&gt;: Copy to buffer B.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;F4&lt;/kbd&gt;: Paste from buffer B.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Software&lt;/h2&gt; &#xA;&lt;p&gt;This configuration uses the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;WM&lt;/strong&gt;: &lt;a href=&#34;https://github.com/baskerville/bspwm&#34;&gt;bspwm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hotkey&lt;/strong&gt;: &lt;a href=&#34;https://github.com/baskerville/sxhkd&#34;&gt;sxhkd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Locker&lt;/strong&gt;: &lt;a href=&#34;https://github.com/meskarune/i3lock-fancy&#34;&gt;i3lock-fancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shell&lt;/strong&gt;: &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bars&lt;/strong&gt;: &lt;a href=&#34;https://github.com/polybar/polybar&#34;&gt;polybar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compositor&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yshui/picom&#34;&gt;picom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File Manager&lt;/strong&gt;: &lt;a href=&#34;https://docs.xfce.org/xfce/thunar/start&#34;&gt;thunar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fonts&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Iosevka&#34;&gt;iosevka&lt;/a&gt; and &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Hack&#34;&gt;hack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Application Launcher&lt;/strong&gt;: &lt;a href=&#34;https://github.com/davatorium/rofi&#34;&gt;rofi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Browsers&lt;/strong&gt;: &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;firefox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terminals&lt;/strong&gt;: &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;kitty&lt;/a&gt; and &lt;a href=&#34;https://github.com/lxqt/qterminal&#34;&gt;qterminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Static Wallpaper&lt;/strong&gt;: &lt;a href=&#34;https://github.com/derf/feh&#34;&gt;feh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Color Scheme&lt;/strong&gt;: &lt;a href=&#34;https://github.com/dylanaraps/pywal&#34;&gt;pywal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Screenshot&lt;/strong&gt;: &lt;a href=&#34;https://flameshot.org/&#34;&gt;flameshot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This environment has been inspired by the functionalities of &lt;a href=&#34;https://github.com/s4vitar&#34;&gt;S4vitar&#39;s&lt;/a&gt; environment.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>oneinstack/oneinstack</title>
    <updated>2023-10-10T01:39:59Z</updated>
    <id>tag:github.com,2023-10-10:/oneinstack/oneinstack</id>
    <link href="https://github.com/oneinstack/oneinstack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OneinStack - A PHP/JAVA Deployment Tool&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This script is written using the shell, in order to quickly deploy &lt;code&gt;LEMP&lt;/code&gt;/&lt;code&gt;LAMP&lt;/code&gt;/&lt;code&gt;LNMP&lt;/code&gt;/&lt;code&gt;LNMPA&lt;/code&gt;/&lt;code&gt;LTMP&lt;/code&gt;(Linux, Nginx/Tengine/OpenResty, MySQL in a production environment/MariaDB/Percona, PHP, JAVA), applicable to RHEL 7, 8, 9(including CentOS,RedHat,AlmaLinux,Rocky), Debian 9, 10, 11, 12, Ubuntu 16, 18, 20, 22 and Fedora 27+ of 64.&lt;/p&gt; &#xA;&lt;p&gt;Script properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Continually updated, Provide Shell Interaction and Autoinstall&lt;/li&gt; &#xA; &lt;li&gt;Source compiler installation, most stable source is the latest version, and download from the official site&lt;/li&gt; &#xA; &lt;li&gt;Some security optimization&lt;/li&gt; &#xA; &lt;li&gt;Providing a plurality of database versions (MySQL-8.0, MySQL-5.7, MySQL-5.6, MySQL-5.5, MariaDB-10.11, MariaDB-10.5, MariaDB-10.4, MariaDB-5.5, Percona-8.0, Percona-5.7, Percona-5.6, Percona-5.5, PostgreSQL, MongoDB)&lt;/li&gt; &#xA; &lt;li&gt;Providing multiple PHP versions (PHP-8.2, PHP-8.1, PHP-8.0, PHP-7.4, PHP-7.3, PHP-7.2, PHP-7.1, PHP-7.0, PHP-5.6, PHP-5.5, PHP-5.4, PHP-5.3)&lt;/li&gt; &#xA; &lt;li&gt;Provide Nginx, Tengine, OpenResty, Apache and ngx_lua_waf&lt;/li&gt; &#xA; &lt;li&gt;Providing a plurality of Tomcat version (Tomcat-10, Tomcat-9, Tomcat-8, Tomcat-7)&lt;/li&gt; &#xA; &lt;li&gt;Providing a plurality of JDK version (OpenJDK-8, OpenJDK-11, OpenJDK-17)&lt;/li&gt; &#xA; &lt;li&gt;According to their needs to install PHP Cache Accelerator provides ZendOPcache, xcache, apcu, eAccelerator. And php extensions,include ZendGuardLoader,ionCube,SourceGuardian,imagick,gmagick,fileinfo,imap,ldap,calendar,phalcon,yaf,yar,redis,memcached,memcache,mongodb,swoole,xdebug&lt;/li&gt; &#xA; &lt;li&gt;Installation Nodejs, Pureftpd, phpMyAdmin according to their needs&lt;/li&gt; &#xA; &lt;li&gt;Install memcached, redis according to their needs&lt;/li&gt; &#xA; &lt;li&gt;Jemalloc optimize MySQL, Nginx&lt;/li&gt; &#xA; &lt;li&gt;Providing add a virtual host script, include Let&#39;s Encrypt SSL certificate&lt;/li&gt; &#xA; &lt;li&gt;Provide Nginx/Tengine/OpenResty/Apache/Tomcat, MySQL/MariaDB/Percona, PHP, Redis, Memcached, phpMyAdmin upgrade script&lt;/li&gt; &#xA; &lt;li&gt;Provide local,remote(rsync between servers),Aliyun OSS,Qcloud COS,UPYUN,QINIU,Amazon S3,Google Drive and Dropbox backup script&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the dependencies for your distro, download the source and run the installation script.&lt;/p&gt; &#xA;&lt;h4&gt;CentOS/Redhat&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum -y install wget screen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Debian/Ubuntu&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get -y install wget screen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download Source and Install&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget http://mirrors.oneinstack.com/oneinstack-full.tar.gz&#xA;tar xzf oneinstack-full.tar.gz&#xA;cd oneinstack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you disconnect during installation, you can execute the command &lt;code&gt;screen -r oneinstack&lt;/code&gt; to reconnect to the install window&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;screen -S oneinstack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to modify the directory (installation, data storage, Nginx logs), modify &lt;code&gt;options.conf&lt;/code&gt; file before running install.sh&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to install another PHP version&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/install.sh --mphp_ver 54&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to add Extensions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/addons.sh&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to add a virtual host&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/vhost.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to delete a virtual host&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/vhost.sh --del&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to add FTP virtual user&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/pureftpd_vhost.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to backup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/backup_setup.sh    // Backup parameters&#xA;~/oneinstack/backup.sh    // Perform the backup immediately&#xA;crontab -l    // Can be added to scheduled tasks, such as automatic backups every day 1:00&#xA;  0 1 * * * cd ~/oneinstack/backup.sh  &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to manage service&lt;/h2&gt; &#xA;&lt;p&gt;Nginx/Tengine/OpenResty:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|status|restart|reload} nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MySQL/MariaDB/Percona:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|restart|reload|status} mysqld&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PostgreSQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|restart|status} postgresql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MongoDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|status|restart|reload} mongod&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PHP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|restart|reload|status} php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apache:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|restart|stop} httpd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tomcat:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|status|restart} tomcat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pure-FTPd:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|restart|status} pureftpd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Redis:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|status|restart|reload} redis-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Memcached:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl {start|stop|status|restart|reload} memcached&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to upgrade&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/upgrade.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to uninstall&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~/oneinstack/uninstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;For feedback, questions, and to follow the progress of the project: &lt;br&gt; &lt;a href=&#34;https://t.me/oneinstack&#34;&gt;Telegram Group&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://oneinstack.com&#34;&gt;OneinStack&lt;/a&gt;&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
</feed>