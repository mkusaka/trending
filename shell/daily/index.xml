<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-25T01:35:35Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nginx-proxy/acme-companion</title>
    <updated>2024-07-25T01:35:35Z</updated>
    <id>tag:github.com,2024-07-25:/nginx-proxy/acme-companion</id>
    <link href="https://github.com/nginx-proxy/acme-companion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated ACME SSL certificate generation for nginx-proxy&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nginx-proxy/acme-companion/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/nginx-proxy/acme-companion/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nginx-proxy/acme-companion/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/nginx-proxy/acme-companion.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/nginxproxy/acme-companion&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/nginxproxy/acme-companion?sort=semver&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/nginxproxy/acme-companion&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/nginxproxy/acme-companion.svg?sanitize=true&#34; alt=&#34;Docker stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/nginxproxy/acme-companion&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/nginxproxy/acme-companion.svg?sanitize=true&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;acme-companion&lt;/strong&gt; is a lightweight companion container for &lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy&#34;&gt;&lt;strong&gt;nginx-proxy&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It handles the automated creation, renewal and use of SSL certificates for proxied Docker containers through the ACME protocol.&lt;/p&gt; &#xA;&lt;h3&gt;Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automated creation/renewal of Let&#39;s Encrypt (or other ACME CAs) certificates using &lt;a href=&#34;https://github.com/acmesh-official/acme.sh&#34;&gt;&lt;strong&gt;acme.sh&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Let&#39;s Encrypt / ACME domain validation through &lt;code&gt;http-01&lt;/code&gt; challenge only.&lt;/li&gt; &#xA; &lt;li&gt;Automated update and reload of nginx config on certificate creation/renewal.&lt;/li&gt; &#xA; &lt;li&gt;Support creation of &lt;a href=&#34;https://github.com/nginx-proxy/acme-companion/raw/main/docs/Let&#39;s-Encrypt-and-ACME.md#multi-domains-certificates&#34;&gt;Multi-Domain (SAN) Certificates&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Creation of a strong &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919#appendix-A&#34;&gt;RFC7919 Diffie-Hellman Group&lt;/a&gt; at startup.&lt;/li&gt; &#xA; &lt;li&gt;Work with all versions of docker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your host &lt;strong&gt;must&lt;/strong&gt; be publicly reachable on &lt;strong&gt;both&lt;/strong&gt; port &lt;a href=&#34;https://letsencrypt.org/docs/allow-port-80/&#34;&gt;&lt;code&gt;80&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/nginx-proxy/acme-companion/discussions/873#discussioncomment-1410225&#34;&gt;&lt;code&gt;443&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check your firewall rules and &lt;a href=&#34;https://letsencrypt.org/docs/allow-port-80/&#34;&gt;&lt;strong&gt;do not attempt to block port &lt;code&gt;80&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; as that will prevent &lt;code&gt;http-01&lt;/code&gt; challenges from completing.&lt;/li&gt; &#xA; &lt;li&gt;For the same reason, you can&#39;t use nginx-proxy&#39;s &lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy#how-ssl-support-works&#34;&gt;&lt;code&gt;HTTPS_METHOD=nohttp&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The (sub)domains you want to issue certificates for must correctly resolve to the host.&lt;/li&gt; &#xA; &lt;li&gt;Your DNS provider must &lt;a href=&#34;https://letsencrypt.org/docs/caa/&#34;&gt;answer correctly to CAA record requests&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If your (sub)domains have AAAA records set, the host must be publicly reachable over IPv6 on port &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nginx-proxy/acme-companion/raw/main/schema.png&#34; alt=&#34;schema&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage (with the nginx-proxy container)&lt;/h2&gt; &#xA;&lt;p&gt;Three writable volumes must be declared on the &lt;strong&gt;nginx-proxy&lt;/strong&gt; container so that they can be shared with the &lt;strong&gt;acme-companion&lt;/strong&gt; container:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/etc/nginx/certs&lt;/code&gt; to store certificates and private keys (readonly for the &lt;strong&gt;nginx-proxy&lt;/strong&gt; container).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/usr/share/nginx/html&lt;/code&gt; to write &lt;code&gt;http-01&lt;/code&gt; challenge files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, a fourth volume must be declared on the &lt;strong&gt;acme-companion&lt;/strong&gt; container to store &lt;code&gt;acme.sh&lt;/code&gt; configuration and state: &lt;code&gt;/etc/acme.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please also read the doc about &lt;a href=&#34;https://raw.githubusercontent.com/nginx-proxy/acme-companion/main/docs/Persistent-data.md&#34;&gt;data persistence&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example of use:&lt;/p&gt; &#xA;&lt;h3&gt;Step 1 - nginx-proxy&lt;/h3&gt; &#xA;&lt;p&gt;Start &lt;strong&gt;nginx-proxy&lt;/strong&gt; with the three additional volumes declared:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --detach \&#xA;    --name nginx-proxy \&#xA;    --publish 80:80 \&#xA;    --publish 443:443 \&#xA;    --volume certs:/etc/nginx/certs \&#xA;    --volume html:/usr/share/nginx/html \&#xA;    --volume /var/run/docker.sock:/tmp/docker.sock:ro \&#xA;    nginxproxy/nginx-proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Binding the host docker socket (&lt;code&gt;/var/run/docker.sock&lt;/code&gt;) inside the container to &lt;code&gt;/tmp/docker.sock&lt;/code&gt; is a requirement of &lt;strong&gt;nginx-proxy&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2 - acme-companion&lt;/h3&gt; &#xA;&lt;p&gt;Start the &lt;strong&gt;acme-companion&lt;/strong&gt; container, getting the volumes from &lt;strong&gt;nginx-proxy&lt;/strong&gt; with &lt;code&gt;--volumes-from&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --detach \&#xA;    --name nginx-proxy-acme \&#xA;    --volumes-from nginx-proxy \&#xA;    --volume /var/run/docker.sock:/var/run/docker.sock:ro \&#xA;    --volume acme:/etc/acme.sh \&#xA;    --env &#34;DEFAULT_EMAIL=mail@yourdomain.tld&#34; \&#xA;    nginxproxy/acme-companion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The host docker socket has to be bound inside this container too, this time to &lt;code&gt;/var/run/docker.sock&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Albeit &lt;strong&gt;optional&lt;/strong&gt;, it is &lt;strong&gt;recommended&lt;/strong&gt; to provide a valid default email address through the &lt;code&gt;DEFAULT_EMAIL&lt;/code&gt; environment variable, so that Let&#39;s Encrypt can warn you about expiring certificates and allow you to recover your account.&lt;/p&gt; &#xA;&lt;h3&gt;Step 3 - proxied container(s)&lt;/h3&gt; &#xA;&lt;p&gt;Once both &lt;strong&gt;nginx-proxy&lt;/strong&gt; and &lt;strong&gt;acme-companion&lt;/strong&gt; containers are up and running, start any container you want proxied with environment variables &lt;code&gt;VIRTUAL_HOST&lt;/code&gt; and &lt;code&gt;LETSENCRYPT_HOST&lt;/code&gt; both set to the domain(s) your proxied container is going to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy#usage&#34;&gt;&lt;code&gt;VIRTUAL_HOST&lt;/code&gt;&lt;/a&gt; control proxying by &lt;strong&gt;nginx-proxy&lt;/strong&gt; and &lt;code&gt;LETSENCRYPT_HOST&lt;/code&gt; control certificate creation and SSL enabling by &lt;strong&gt;acme-companion&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Certificates will only be issued for containers that have both &lt;code&gt;VIRTUAL_HOST&lt;/code&gt; and &lt;code&gt;LETSENCRYPT_HOST&lt;/code&gt; variables set to domain(s) that correctly resolve to the host, provided the host is publicly reachable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --detach \&#xA;    --name your-proxied-app \&#xA;    --env &#34;VIRTUAL_HOST=subdomain.yourdomain.tld&#34; \&#xA;    --env &#34;LETSENCRYPT_HOST=subdomain.yourdomain.tld&#34; \&#xA;    nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The containers being proxied must expose the port to be proxied, either by using the &lt;code&gt;EXPOSE&lt;/code&gt; directive in their Dockerfile or by using the &lt;code&gt;--expose&lt;/code&gt; flag to &lt;code&gt;docker run&lt;/code&gt; or &lt;code&gt;docker create&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the proxied container listen on and expose another port than the default &lt;code&gt;80&lt;/code&gt;, you can force &lt;strong&gt;nginx-proxy&lt;/strong&gt; to use this port with the &lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy#multiple-ports&#34;&gt;&lt;code&gt;VIRTUAL_PORT&lt;/code&gt;&lt;/a&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Example using &lt;a href=&#34;https://hub.docker.com/r/grafana/grafana/&#34;&gt;Grafana&lt;/a&gt; (expose and listen on port 3000):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run --detach \&#xA;    --name grafana \&#xA;    --env &#34;VIRTUAL_HOST=othersubdomain.yourdomain.tld&#34; \&#xA;    --env &#34;VIRTUAL_PORT=3000&#34; \&#xA;    --env &#34;LETSENCRYPT_HOST=othersubdomain.yourdomain.tld&#34; \&#xA;    --env &#34;LETSENCRYPT_EMAIL=mail@yourdomain.tld&#34; \&#xA;    grafana/grafana&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Repeat &lt;a href=&#34;https://raw.githubusercontent.com/nginx-proxy/acme-companion/main/#step-3---proxied-containers&#34;&gt;Step 3&lt;/a&gt; for any other container you want to proxy.&lt;/p&gt; &#xA;&lt;h2&gt;Additional documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please check the &lt;a href=&#34;https://github.com/nginx-proxy/acme-companion/tree/main/docs&#34;&gt;docs section&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>