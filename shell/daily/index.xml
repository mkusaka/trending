<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T01:41:52Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>soruly/trace.moe</title>
    <updated>2023-08-06T01:41:52Z</updated>
    <id>tag:github.com,2023-08-06:/soruly/trace.moe</id>
    <link href="https://github.com/soruly/trace.moe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Anime Scene Search by Image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;trace.moe&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/soruly/trace.moe.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/K9jn6Kj&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/437578425767559188.svg?style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Anime Scene Search Engine&lt;/p&gt; &#xA;&lt;p&gt;Trace back the scene where an anime screenshots is taken from.&lt;/p&gt; &#xA;&lt;p&gt;It tells you which anime, which episode, and the exact moment this scene appears.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/soruly/trace.moe/master/demo-result.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Try this image yourself.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/soruly/trace.moe/master/demo.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Web Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Link to trace.moe from other websites, you can pass image URL in query string like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://trace.moe/?url=http://searchimageurl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;trace.moe API&lt;/h2&gt; &#xA;&lt;p&gt;For Bots/Apps, refer to &lt;a href=&#34;https://soruly.github.io/trace.moe-api/&#34;&gt;https://soruly.github.io/trace.moe-api/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System Overview&lt;/h2&gt; &#xA;&lt;p&gt;This repo is just an index page for the whole trace.moe system. It consists of different parts as below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/soruly/trace.moe/master/overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Client-side (gray parts):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-www&#34;&gt;trace.moe-www&lt;/a&gt; - web server serving the webpage &lt;a href=&#34;https://trace.moe&#34;&gt;trace.moe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-WebExtension&#34;&gt;trace.moe-WebExtension&lt;/a&gt; - browser add-ons to help copying and pasting images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-telegram-bot&#34;&gt;trace.moe-telegram-bot&lt;/a&gt; - official Telegram Bot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Server-side (blue and red parts):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-api&#34;&gt;trace.moe-api&lt;/a&gt; - API server for image search and database updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-media&#34;&gt;trace.moe-media&lt;/a&gt; - media server for video storage and scene preview generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/liresolr&#34;&gt;LireSolr&lt;/a&gt; - image analysis and search plugin for Solr&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker&#34;&gt;trace.moe-worker&lt;/a&gt; - includes hasher, loader and watcher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Others:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/anilist-crawler&#34;&gt;anilist-crawler&lt;/a&gt; - getting anilist info and store in mariaDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soruly/slides&#34;&gt;slides&lt;/a&gt; - past presentation slides on the project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hosting your own trace.moe system&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;re going to need these docker images.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parts&lt;/th&gt; &#xA;   &lt;th&gt;Docker CI Build&lt;/th&gt; &#xA;   &lt;th&gt;Docker Image&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mariadb.org/&#34;&gt;MariaDB&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/_/mariadb&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/_/mariadb/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.adminer.org/&#34;&gt;Adminer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/_/adminer&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/_/adminer/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;redis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/_/redis&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/_/redis/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/liresolr&#34;&gt;liresolr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/liresolr/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/liresolr/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/liresolr/pkgs/container/liresolr&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/liresolr/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-www&#34;&gt;trace.moe-www&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-www/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/trace.moe-www/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-www/pkgs/container/trace.moe-www&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/trace.moe-www/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-api&#34;&gt;trace.moe-api&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-api/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/trace.moe-api/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-api/pkgs/container/trace.moe-api&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/trace.moe-api/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-media&#34;&gt;trace.moe-media&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-media/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/trace.moe-media/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-media/pkgs/container/trace.moe-media&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/trace.moe-media/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker&#34;&gt;trace.moe-worker-hasher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/trace.moe-worker/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker/pkgs/container/trace.moe-worker-hasher&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/trace.moe-worker-hasher/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker&#34;&gt;trace.moe-worker-loader&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/trace.moe-worker/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker/pkgs/container/trace.moe-worker-loader&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/trace.moe-worker-loader/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker&#34;&gt;trace.moe-worker-watcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/soruly/trace.moe-worker/docker-image.yml?style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/soruly/trace.moe-worker/pkgs/container/trace.moe-worker-watcher&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/soruly/trace.moe-worker-watcher/latest?style=flat-square&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and update config as you need&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;WWW_PORT=3310&#xA;API_PORT=3311&#xA;MEDIA_PORT=3312&#xA;ADMINER_PORT=3313&#xA;SOLR_PORT=8983&#xA;&#xA;NEXT_PUBLIC_API_ENDPOINT=http://172.17.0.1:3311    # external URL&#xA;NEXT_PUBLIC_MEDIA_ENDPOINT=http://172.17.0.1:3312  # external URL&#xA;&#xA;WATCH_DIR=/home/soruly/trace.moe-incoming/  # suggest using fast drives&#xA;MEDIA_DIR=/home/soruly/trace.moe-media/     # suggest using large drives&#xA;HASH_DIR=/home/soruly/trace.moe-hash/       # suggest using fast drives&#xA;SOLR_DIR=/home/soruly/mycores               # suggest using super fast drives&#xA;MYSQL_DIR=/home/soruly/mysql&#xA;&#xA;TRACE_MEDIA_SALT=YOUR_TRACE_MEDIA_SALT&#xA;TRACE_API_SALT=YOUR_TRACE_API_SALT&#xA;TRACE_API_SECRET=YOUR_TRACE_API_SECRET&#xA;MARIADB_ROOT_PASSWORD=YOUR_MARIADB_ROOT_PASSWORD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Ensure the directories are created and are empty before starting the containers. And for &lt;code&gt;SOLR_DIR&lt;/code&gt;, you must set the owner to uid,gid to 8983&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /home/soruly/trace.moe-incoming/&#xA;mkdir -p /home/soruly/trace.moe-media/&#xA;mkdir -p /home/soruly/trace.moe-hash/&#xA;mkdir -p /home/soruly/mycores&#xA;mkdir -p /home/soruly/mysql&#xA;sudo chown 8983:8983 /home/soruly/mycores&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start the containers&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Once the cluster is ready, you can adding files to incoming folder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The files in incoming folder must be contained in 1-level folders, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;trace.moe-incoming/foo.mp4  &amp;lt;= not ok&#xA;trace.moe-incoming/1/foo.mp4 &amp;lt;= ok&#xA;trace.moe-incoming/1/bar/foo.mp4 &amp;lt;= ok, but will be uploaded as /1/foo.mp4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;trace.moe assumes the folder name is anilist ID. If your data is not related to anilist ID, you can use any id/text you want. The system would still work without anilist data.&lt;/p&gt; &#xA;&lt;p&gt;Do not create the folders in the incoming directory. You should first put video files in folders, then move/copy the folders into the incoming directory.&lt;/p&gt; &#xA;&lt;p&gt;Once the video files are in incoming directory, the watcher would start uploading the video to trace.moe-media. When it&#39;s done, it would delete the video in incoming directory. After Hash worker and Load workers complete the job, you can search the video by image in your www website at WWW_PORT.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ElliotKillick/Mido</title>
    <updated>2023-08-06T01:41:52Z</updated>
    <id>tag:github.com,2023-08-06:/ElliotKillick/Mido</id>
    <link href="https://github.com/ElliotKillick/Mido" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Secure Microsoft Windows Downloader&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/ElliotKillick/Mido&#34;&gt; &lt;img width=&#34;160&#34; src=&#34;https://raw.githubusercontent.com/ElliotKillick/Mido/main/logo.png&#34; alt=&#34;Logo&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Mido &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; The &lt;b&gt;Secure&lt;/b&gt; Microsoft Windows Downloader &lt;/p&gt; &#xA;&lt;p&gt;Mido is a secure and open source download client for Microsoft&#39;s (reverse engineered) proprietary downloading API! Downloads are sourced from &lt;strong&gt;official&lt;/strong&gt; Microsoft servers and you only have to run one command to go from start to finish in no time!&lt;/p&gt; &#xA;&lt;p&gt;Comes with advanced features like download resumption, SHA-256 checksum verification, and downloading many different Windows versions in a single command. Did I mention it&#39;s written in &lt;em&gt;pure&lt;/em&gt; POSIX sh (w/ few coreutils) + curl so it will run anywhere (even on Windows with WSL or a Cygwin shell)? So robust, very minimalist!&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s very well-suited to full automation if you just want to set it and forget it too... ⭐ Start saving time today with Mido!&lt;/p&gt; &#xA;&lt;h4&gt;❌ Microsoft&#39;s Media Creation Tool (&lt;code&gt;mediacreationtool.exe&lt;/code&gt; proprietary bloatware)&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ElliotKillick/Mido/main/bloatware.png&#34; alt=&#34;Microsoft&#39;s proprietary bloatware executable&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ElliotKillick/Mido/main/bloatware2.png&#34; width=&#34;250px&#34; alt=&#34;Microsoft&#39;s proprietary bloatware&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ElliotKillick/Mido/main/bloatware3.png&#34; width=&#34;200px&#34; alt=&#34;Microsoft&#39;s bloatware&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Bloated website: &lt;code&gt;https://www.microsoft.com/en-us/software-download/windows11&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mido provides the exact same downloads as this website (it uses the same API)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;✔️ Mido (using the &lt;strong&gt;same&lt;/strong&gt; official Microsoft servers; open source awesomeness)&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ElliotKillick/Mido/main/demo.gif&#34; width=&#34;400&#34; alt=&#34;Project demo GIF&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Get Mido&lt;/h2&gt; &#xA;&lt;p&gt;Get &lt;a href=&#34;https://raw.githubusercontent.com/ElliotKillick/Mido/main/Mido.sh&#34;&gt;Mido.sh&lt;/a&gt; by opening the link, right-clicking and then selecting &#34;Save [Page] as...&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Mac &amp;amp; Linux&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;re done! Just run the script to start using Mido.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;To run Mido on Windows, use WSL (Windows Subsystem for Linux). If you don&#39;t have it enabled already then search &#34;Turn Windows features on or off&#34; in the Start menu, open that, and check the &#34;Windows Subsystem for Linux&#34; box. This is the best option.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, install &lt;a href=&#34;https://www.cygwin.com/install.html&#34;&gt;Cygwin&lt;/a&gt; or &lt;a href=&#34;https://www.msys2.org/#installation&#34;&gt;MSYS2&lt;/a&gt; from their download pages, or in one command using WinGet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;winget install -e --id Cygwin.Cygwin&#xA;winget install -e --id MSYS2.MSYS2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Both are POSIX emulation environments for Windows and you can use either one.&lt;/p&gt; &#xA;&lt;h2&gt;How does Mido work??&lt;/h2&gt; &#xA;&lt;p&gt;It interacts with Microsoft&#39;s proprietary downloading API (reverse engineered thanks to Pete Batard, @pbatard) to grab the latest release of Windows and generate a fresh download link (valid for 24 hours). Then we grab that link and get the file over to you as quickly as possible!&lt;/p&gt; &#xA;&lt;h2&gt;What else can Mido do?&lt;/h2&gt; &#xA;&lt;p&gt;Other than the consumer versions of Windows like 11 and 10, it can also automatically download the latest Server (e.g. Windows Server 2022) and Enterprise editions of every Windows version all the way back to Windows 7 (or Server 2008 R2)!&lt;/p&gt; &#xA;&lt;p&gt;Want a more secure and minimalist Windows installation out-of-the-box that&#39;s officially provided by Microsoft? Then download the LTSC version of Windows. It comes with way less bloat and supports Microsoft&#39;s &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/privacy/configure-windows-diagnostic-data-in-your-organization#diagnostic-data-settings&#34;&gt;&#34;Security&#34;&lt;/a&gt; telemetry mode (plus it comes with long-term support). Microsoft is yet to release an LTSC version of Windows 11 (so 10 only for now) but it is planned.&lt;/p&gt; &#xA;&lt;h2&gt;Want to save more time?&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;code&gt;create-media.sh&lt;/code&gt; script in &lt;a href=&#34;https://github.com/ElliotKillick/qvm-create-windows-qube/tree/master/windows&#34;&gt;Qvm-Create-Windows-Qube&lt;/a&gt;! Now complete with Mido &lt;em&gt;and&lt;/em&gt; an answer file to go with each provided download. With that you will be saving time in downloading Windows &lt;em&gt;and&lt;/em&gt; installing it to a VM. This is all very well-tested and could easily save you many hours of time over doing it manually. I tend to reinstall my Windows VMs quite often because they tend to get slow over time and so a refresh always helps.&lt;/p&gt; &#xA;&lt;h2&gt;How secure is it &lt;em&gt;really&lt;/em&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;Mido is very secure. Every chance to reduce attack surface is taken. Untrusted data is treated as such with proper validation steps. The highest possible version of TLS is always used (up to TLS 1.3). Easily verify security properties yourself in the transparent shell script.&lt;/p&gt; &#xA;&lt;p&gt;No web browser (e.g. headless Chromium running JavaScript) reduces the attack surface by &lt;em&gt;many&lt;/em&gt; orders of magnitude.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft download servers (e.g. &lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=download.microsoft.com&#34;&gt;&lt;code&gt;download.microsoft.com&lt;/code&gt;&lt;/a&gt;) support insecure TLS versions 1.0 and 1.1? Force TLS 1.2 or TLS 1.3 (the latter when Microsoft servers support it).&lt;/p&gt; &#xA;&lt;p&gt;The next &lt;a href=&#34;https://en.wikipedia.org/wiki/Shellshock_(software_bug)&#34;&gt;Shellshock/Bashdoor&lt;/a&gt;? POSIX sh compatible.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plus, automatically switches to a more secure shell (Dash) if available&lt;/li&gt; &#xA; &lt;li&gt;For even &lt;em&gt;greater&lt;/em&gt; security, one could use a POSIX-compliant Rust shell (e.g. nsh) with Rust coreutils (e.g. uutils). This is not the default configuration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Frequent &lt;a href=&#34;https://github.com/curl/curl/issues?q=is%3Aissue+label%3Acrash&#34;&gt;Curl HTTP 2.0 &amp;amp; 3.0 bugs&lt;/a&gt;? Force HTTP/1.1.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comes at zero cost to performance for downloading files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Coreutil bugs? Only builtins are used for the most critical functionality.&lt;/p&gt; &#xA;&lt;p&gt;Still bugs? Wrap it in bubble wrap: &lt;code&gt;bwrap --ro-bind / / --dev-bind /dev/null /dev/null --bind &#34;$PWD&#34; &#34;$PWD&#34; --ro-bind &#34;$PWD/Mido.sh&#34; &#34;$PWD/Mido.sh&#34; --unshare-all --share-net -- ./Mido.sh --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is the same sandbox used by Flatpak&lt;/li&gt; &#xA; &lt;li&gt;Compartmentalize further by running Mido in its own unprivileged user account or even it&#39;s own disposable VM on Qubes OS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With sandbox/VM escape or privilege escalation bugs? GG, you win!!&lt;/p&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make a small GUI wrapper for people who don&#39;t like running a single command &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ideally something lightweight and cross-platform (a GTK app that runs an embedded script?)&lt;/li&gt; &#xA;   &lt;li&gt;Should have a download progress bar (likely read from &lt;code&gt;curl&lt;/code&gt; &lt;code&gt;stderr&lt;/code&gt;) and shows an error log if anything goes wrong&lt;/li&gt; &#xA;   &lt;li&gt;Contributions are very welcome&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License - Copyright (C) 2023 Elliot Killick &lt;a href=&#34;mailto:contact@elliotkillick.com&#34;&gt;contact@elliotkillick.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>XDeadHackerX/NetRadar</title>
    <updated>2023-08-06T01:41:52Z</updated>
    <id>tag:github.com,2023-08-06:/XDeadHackerX/NetRadar</id>
    <link href="https://github.com/XDeadHackerX/NetRadar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NetRadar is a Networking tool focused on mapping local and WiFi networks. It provides detailed information about connected devices, open ports, servers and automated scans for WiFi networks.NetRadar es una herramienta de Networking centrada en el mapeo de redes locales y WiFi. Proporciona información detallada sobre dispositivos conectados, puert..&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🔭 NetRadar 🔭&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/XDeadHackerX/NetRadar/raw/main/README.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://github.com/XDeadHackerX/NetRadar/raw/main/README-English.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Herramienta creada por XDeadHackerX&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;120px&#34; alt=&#34;Version&#34; src=&#34;https://img.shields.io/badge/version-1.0-white.svg?style=for-the-badge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://postimg.cc/zVHYTm4m&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/FsDF5NZK/Net-Radar-1-0-es.png&#34; alt=&#34;Net-Radar-1-0-es.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;justify&#34;&gt;&lt;i&gt;Buenas, soy &lt;strong&gt;XDeadHackerX&lt;/strong&gt; y quiero presentaros mi nueva herramienta llamada &lt;strong&gt;NetRadar.&lt;/strong&gt; Esta Tool está enfocada al &lt;strong&gt;Networking&lt;/strong&gt; en concreto al &lt;strong&gt;Mapeo&lt;/strong&gt; de &lt;strong&gt;Redes Locales y Redes Wifi.&lt;/strong&gt; A Nivel de &lt;strong&gt;Red Local,&lt;/strong&gt; es capaz de analizar todos los Dispositivos conectados (MAC, Vendedor MAC, Sistema Operativo, Nombre, Tipo de Dispositivo), todos los Puertos abiertos de cada IP (Puerto, Servicio, Versión del Servicio, Estado, Banner), encontrar Servidores (Nombre, Sistema Operativo, Versión del Servicio, Dominio, Puertos, etc.) A Nivel de &lt;strong&gt;Red Wifi&lt;/strong&gt; nos encontramos con 4 tipos de escaneos totalmente automatizados y muy potentes (Aircrack-ng, Bettercap, NmCli y Wash), al terminar el escaneo nos generará un &lt;strong&gt;Gráfico&lt;/strong&gt; *en el que te muestra un &lt;strong&gt;esquema&lt;/strong&gt; de las &lt;strong&gt;Redes Wifi detectadas&lt;/strong&gt; (MAC, Distancia desde nuestra Tarjeta de Red Wifi, Beacons, Canal, Velocidad del Router, Encriptación, AUTH y el Nombre de la Red Wifi) y los &lt;strong&gt;Dispositivos conectados&lt;/strong&gt; a cada Red, mostrándote (Mac, Fabricante de la Mac, Tipo de dispositivo y tiempo conectados a la Red).&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;justify&#34;&gt;&lt;i&gt;Como extra, &lt;strong&gt;NetRadar&lt;/strong&gt; trae un &lt;strong&gt;Kit&lt;/strong&gt; el cual es capaz de agrupar de una forma resumida y limpia información muy interesante acerca del Equipo, la Tarjeta de Red y la Tarjeta de Red Wifi [Opciones 1 y 2].&lt;/i&gt; &lt;strong&gt;[NO ME HAGO RESPONSABLE DEL MAL USO DE ESTA HERRAMIENTA]&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/D0Vbpjfg/wifi1.gif&#34; width=&#34;350px&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;💡 Funciones 💡&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;☑&lt;/span&gt; &lt;strong&gt;Información Tarjeta de Red + Equipo&lt;/strong&gt; --&amp;gt; [&lt;em&gt;IP Pública, IP Local, DNS, MAC, Sistema Operativo, Prueba de Velocidad Internet&lt;/em&gt; ] &lt;a href=&#34;https://raw.githubusercontent.com/XDeadHackerX/NetRadar/main/#punto1&#34;&gt;[Ejemplo Gráfico]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☑&lt;/span&gt; &lt;strong&gt;Información Tarjeta de Red Wifi + Utilidades&lt;/strong&gt; --&amp;gt; [&lt;strong&gt;Info Tarjeta de Red&lt;/strong&gt; &lt;em&gt;(Datos Técnicos, Interfaz, Drivers, Chipset, MACs, Modos Compatibles con la Tarjeta de Red (Modo Monitor, AP, P2P-client, etc), En que Modo se encuentra la Tarjeta de Red (Monitor o Managed), Tasa de Transferencia de Datos, Frecuencias Soportadas&lt;/em&gt;) &lt;strong&gt;Activar Modo Monitor&lt;/strong&gt; &lt;em&gt;(Activa el Modo Monitor y Cambia la MAC, NO HACE FALTA PARA USAR LA HERRAMIENTA),&lt;/em&gt; &lt;strong&gt;Restablecer Tarjeta de Red&lt;/strong&gt; &lt;em&gt;(Desactiva el Modo Monitor, Pone la MAC por defecto y Reinicia el NetworkManager)&lt;/em&gt;] &lt;a href=&#34;https://raw.githubusercontent.com/XDeadHackerX/NetRadar/main/#punto2&#34;&gt;[Ejemplo Gráfico]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☑&lt;/span&gt; &lt;strong&gt;Escáner de Red Local (Un Dispositivo)&lt;/strong&gt; --&amp;gt; [&lt;strong&gt;Escaneo Rápido Puertos&lt;/strong&gt; &lt;em&gt;(N° Puertos, Estado, Servicio de cada Puerto, Mac, Vendedor Mac), &lt;strong&gt;Escaneo Avanzado Puertos&lt;/strong&gt; (N° Puertos, Estado, Servicio de cada Puerto, Versión de cada Servicio, Información del Contenido de cada Puerto, Mac, Vendedor Mac, Sistema Operativo, si tiene Host Información sobre él), &lt;strong&gt;Escaneo Windows + Samba&lt;/strong&gt; (Escaneo Avanzado de los 65535 Puertos, Enumeración de Usuarios = En caso de Poder, Reconocimiento del Dominio = Nombre, Reconocimiento SMB = Permisos, Acceso, Clase, Nombre del Dispositivo Asignado por Windows), &lt;strong&gt;Escaneo NetBios&lt;/strong&gt; (Escaneo Avanzado de los 65535 Puertos, Nombre de NetBios, Tipo/Nombre de Servidor, Usuarios = En caso de Poder)&lt;/em&gt;] &lt;a href=&#34;https://raw.githubusercontent.com/XDeadHackerX/NetRadar/main/#punto3&#34;&gt;[Ejemplo Gráfico]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☑&lt;/span&gt; &lt;strong&gt;Escáner de Red Local (Varios Dispositivos&lt;/strong&gt; --&amp;gt; [&lt;strong&gt;Escaneo Rápido IPs&lt;/strong&gt; &lt;em&gt;(IPs, MAC, Vendedor Mac), &lt;strong&gt;Escaneo Rápido IPs + Puertos&lt;/strong&gt; (IPs, N° Puertos, Servicio de cada Puerto, Mac, Vendedor Mac),&lt;strong&gt;Escaneo Continuo IPs&lt;/strong&gt; (IPs, MAC, Vendedor Mac, Name, KB Enviados y Recibidos), &lt;strong&gt;Escaneo Avanzado IPs Puertos&lt;/strong&gt; (N° Puertos, Estado, Servicio de cada Puerto, Versión de cada Servicio, Información del Contenido de cada Puerto, Mac, Vendedor Mac, Sistema Operativo, si tiene Host Información sobre él), &lt;strong&gt;Escaneo en Busca de un Servicio en Específico&lt;/strong&gt; (HTTP/HTTPS, SMB, FTP, SSH, Telnet, Windows, NetBIOS)&lt;/em&gt;] &lt;a href=&#34;https://raw.githubusercontent.com/XDeadHackerX/NetRadar/main/#punto4&#34;&gt;[Ejemplo Gráfico]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☑&lt;/span&gt; &lt;strong&gt;Escáner Redes Wifi&lt;/strong&gt; --&amp;gt; [&lt;em&gt;Opción de hacer el escaneo con&lt;/em&gt; &lt;strong&gt;Aircrack-ng, Bettercap, NmCli y Wash&lt;/strong&gt;. &lt;em&gt;En el caso de usar Aircrack-ng cuando finaliza el escaneo te crea un &lt;strong&gt;Gráfico&lt;/strong&gt; en el que te muestra un &lt;strong&gt;esquema&lt;/strong&gt; de las &lt;strong&gt;Redes Wifi Detectadas&lt;/strong&gt; (MAC, Distancia desde nuestra Tarjeta de Red Wifi, Beacons, Canal, Velocidad del Router, Encriptación, AUTH y el Nombre de la Red Wifi) y los &lt;strong&gt;Dispositivos conectados&lt;/strong&gt; a cada Red, mostrándote (Mac, Fabricante de la Mac, Tipo de dispositivo y tiempo conectados a la Red)&lt;/em&gt;] &lt;a href=&#34;https://raw.githubusercontent.com/XDeadHackerX/NetRadar/main/#punto5&#34;&gt;[Ejemplo Gráfico]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☑&lt;/span&gt; &lt;strong&gt;Escáner Dispositivos Conectados a una Red Wifi&lt;/strong&gt; --&amp;gt; [&lt;em&gt;Muestra los dispositivos Wifi conectados a una Red Wifi, cuando finaliza el escaneo te crea un Gráfico en el que te muestra un esquema de los dispositivos conectados mostrando la MAC de los dispositivos, la cantidad de Tráfico, la distancia entre cada dispositivo y nuestra Tarjeta de Red, los paquetes de perdida, Notas y Probes.&lt;/em&gt;] &lt;a href=&#34;https://raw.githubusercontent.com/XDeadHackerX/NetRadar/main/#punto5&#34;&gt;[Ejemplo Gráfico]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🛠 Instalar Herramienta 🛠&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;0)&lt;/strong&gt; Instalar y usar la Herramienta con &lt;strong&gt;Root&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; sudo apt update &amp;amp;&amp;amp; apt -y full-upgrade&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; sudo apt-get install git&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; git clone &lt;a href=&#34;https://github.com/XDeadHackerX/NetRadar&#34;&gt;https://github.com/XDeadHackerX/NetRadar&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; cd NetRadar&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;5)&lt;/strong&gt; chmod 777 netradar.sh&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;6)&lt;/strong&gt; bash netradar.sh&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;7)&lt;/strong&gt; Elige un idioma&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;8)&lt;/strong&gt; Ya podemos disfrutar de la herramienta&lt;/p&gt; &#xA;&lt;h2&gt;🎲 Tener en Cuenta 🎲&lt;/h2&gt; &#xA;&lt;p align=&#34;justify&#34;&gt;&lt;strong&gt;[1]&lt;/strong&gt; En caso de usar la Herramienta para escanear direcciones IPs funcionará perfecto excepto de tener una VPN activada, con el uso de VPN la mayoría de servidores dan respuestas erróneas sobre sus puertos.&lt;/p&gt; &#xA;&lt;p align=&#34;justify&#34;&gt;&lt;strong&gt;[2]&lt;/strong&gt; En caso de que tengas descargada una versión más antigua, te aconsejo borrarla y volver a instalar la herramienta (+requisitos) para solucionar errores y obtener mejoras, que hacen que la herramienta sea mucho mejor que las versiones anteriores.&lt;/p&gt; &#xA;&lt;p align=&#34;justify&#34;&gt;&lt;strong&gt;[3]&lt;/strong&gt; Si dentro de la opción ([4] Escaneo de Todos los Dispositivos de la Red Local) en el apartado ([6] Buscar Servicios [HTTP, SMB, FTP, SSH,.]) se queda pillado, solo espere 3 minutos, esto ocurre por un error con una de las herramientas y está volcando la salida incorrecta al segundo plano y la Información correcta la está lanzando por terminal.&lt;/p&gt; &#xA;&lt;h2&gt;🔎 Versiones 🔎&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;[ v1.0 ]&lt;/summary&gt; &#xA; &lt;p align=&#34;justify&#34;&gt;[#] Versión Original.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;📷 Capturas 📷&lt;/h2&gt; &#xA;&lt;h3&gt;Información Tarjeta de Red + Equipo &lt;a name=&#34;punto1&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/XYGCX8nM/Net-Radar-1-0-es-Ejem-1.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Información Tarjeta de Red Wifi + Utilidades &lt;a name=&#34;punto2&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/5ts7VzWk/Net-Radar-1-0-es-Ejem-2-1.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/ZqBQjPRm/Net-Radar-1-0-es-Ejem-2-2.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Escáner de Red Local (Un Dispositivo) &lt;a name=&#34;punto3&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/fRLTKb9s/Net-Radar-1-0-es-Ejem-3-1.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/wxyrhYvr/Net-Radar-1-0-es-Ejem-3-2.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Escáner de Red Local (Varios Dispositivos) &lt;a name=&#34;punto4&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/L59nF3nY/Net-Radar-1-0-es-Ejem-4-1.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/VkKyKBcZ/Net-Radar-1-0-es-Ejem-4-2.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Escáner Redes Wifi &lt;a name=&#34;punto5&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/sDVGSsfP/Net-Radar-1-0-es-Ejem-5-1.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/65fWrvbT/Net-Radar-1-0-es-Ejem-5-2.png&#34; width=&#34;auto&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⭐☕ Creado por XDeadHackerX ☕⭐&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Si consideras que este proyecto ha sido útil, te agradecería que me apoyaras dándole una estrella a este repositorio o invitándome a un café.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/XDeadHackerX&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2023, XDeadHackerX&lt;/p&gt;</summary>
  </entry>
</feed>