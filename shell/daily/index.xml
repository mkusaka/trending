<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T01:47:14Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>davidhampgonsalves/music-server</title>
    <updated>2023-05-01T01:47:14Z</updated>
    <id>tag:github.com,2023-05-01:/davidhampgonsalves/music-server</id>
    <link href="https://github.com/davidhampgonsalves/music-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Music streaming server on a Android Galaxy S7&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Setup for my personal &lt;a href=&#34;https://github.com/navidrome/navidrome&#34;&gt;Navidrome&lt;/a&gt; based music streaming server running on a Samsung Galaxy S7 using &lt;a href=&#34;https://termux.dev/en/&#34;&gt;Termux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://wiki.termux.com/wiki/Termux:Boot&#34;&gt;Termux:Boot&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://wiki.termux.com/wiki/Termux-services&#34;&gt;Termux-Services&lt;/a&gt; to automatically start everything on boot.&lt;/li&gt; &#xA; &lt;li&gt;Automatically removes songs with ☆☆☆☆★ reviews.&lt;/li&gt; &#xA; &lt;li&gt;Uses Cloudflare for dynamic DNS updates.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Add Music&lt;/h2&gt; &#xA;&lt;p&gt;I transfer music using SFTP after converting to OPUS. The S7 only has about 20GB of usable storage and this makes a big difference.&lt;/p&gt; &#xA;&lt;p&gt;IOS doesn&#39;t do OPUS except in a CAF and Navidrome doesn&#39;t like the CAF container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir mp3&#xA;find . -iname &#39;*.mp3&#39; -exec bash -c &#39;F=$(cat /dev/urandom | gtr -dc &#39;a-zA-Z0-9&#39; | fold -w 32 | head -n 1); ffmpeg -i &#34;{}&#34; -codec:a libmp3lame -qscale:a 6 &#34;../mp3/$F.mp3&#34;&#39; \;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://f-droid.org/en/&#34;&gt;F-Droid&lt;/a&gt; and then Termux + Termux:Boot.&lt;/li&gt; &#xA; &lt;li&gt;Launch Termux:Boot and then exit.&lt;/li&gt; &#xA; &lt;li&gt;send this to your phone and paste into termux terminal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg update &amp;amp;&amp;amp; pkg upgrade &amp;amp;&amp;amp; pkg add openssh -y&#xA;passwd &#34;password&#34; --stdin&#xA;ifconfig&#xA;whoami&#xA;sshd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SSH into phone from computer. ssh root@192.168.2.89 -p 8022&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg add git wget neovim -y&#xA;git clone https://github.com/davidhampgonsalves/music-server.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Navidrome&lt;/h3&gt; &#xA;&lt;p&gt;Termux can&#39;t run binaries, even if they are built for arm64. As such we will build navidrome.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg add golang taglib build-essential&#xA;git clone https://github.com/navidrome/navidrome 8b93962 &#xA;// might want to checkout a specfic commit that matches a release&#xA;mkdir music&#xA;cd navidrome&#xA;cp ../music-server/navidrome.toml ./&#xA;make setup&#xA;&#xA;// building the navidrone UI OOM&#39;s on my Samsung Galaxy S7&#xA;// so build it on a PC (via cd ui ; npm install ; npm run build) and &#xA;// then transfer the ui/build contents to the same folder under navidrome via sftp&#xA;// This has to be done before `go build` or else it won&#39;t be included in binary&#xA;&#xA;go mod download&#xA;go build&#xA;&#xA;// setup sshd and navidrome as services&#xA;pkg install termux-services&#xA;// restart so that daemon starts&#xA;mkdir -p $PREFIX/var/service/navidrome/log&#xA;ln -s $PREFIX/share/termux-services/svlogger $PREFIX/var/service/navidrome/log/run&#xA;chmod u+x $PREFIX/var/service/navidrome/run&#xA;&#xA;mkdir -p $PREFIX/var/service/navidrome&#xA;mv ~/music-server/navidrome.runit.sh $PREFIX/var/service/navidrome/run&#xA;chmod ugo+x $PREFIX/var/service/navidrome/run&#xA;mkdir -p $PREFIX/var/service/navidrome/log&#xA;mkdir -p $PREFIX/var/log/sv/navidrome&#xA;ln -sf $PREFIX/share/termux-services/svlogger $PREFIX/var/service/navidrome/log/run&#xA;// Logs are at `cat $PREFIX/var/log/sv/navidrome/current` but do not seem to work&#xA;// sv up/down/status navidrome`&#xA;sv-enable sshd&#xA;sv-enable navidrome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Termux Boot&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir ./termux/boot&#xA;mv music-server/boot/start-services .termux/boot/&#xA;chmod ugo+x .termux/boot/start-services&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DDNS&lt;/h1&gt; &#xA;&lt;p&gt;python venv creation(happening in start-sync.sh) was hanging so after installing the requirements from start-sync.sh I commented out everything except &lt;code&gt;cd ... ; python ...&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/timothymiller/cloudflare-ddns.git&#xA;chmod +x /data/data/com.termux/files/home/cloudflare-ddns/start-sync.sh&#xA;chmod +x /data/data/com.termux/files/home/music-server/remove-starred-tracks.sh&#xA;ln -s /data/data/com.termux/files/home/music-server/cloudflare-ddns.config.json /data/data/com.termux/files/home/cloudflare-ddns/config.json&#xA;&#xA;pkg install cronie termux-services python sqlite&#xA;sv-enable crond&#xA;crontab /data/data/com.termux/files/home/music-server/crontab&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>HoloISO/holoiso</title>
    <updated>2023-05-01T01:47:14Z</updated>
    <id>tag:github.com,2023-05-01:/HoloISO/holoiso</id>
    <link href="https://github.com/HoloISO/holoiso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SteamOS 3 (Holo) archiso configuration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build ISO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167457908-07be1a60-7e86-4bef-b7f0-6bd19efd8b24.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;HoloISO&lt;/h1&gt; &#xA;&lt;p&gt;SteamOS 3 (Holo) archiso configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Yes, Gabe. SteamOS functions well on a toaster.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project attempts to bring the Steam Deck&#39;s SteamOS Holo redistribution into a generic, installable format, and provide a close-to-official SteamOS experience. Main point of this project focuses in re-implementing proprietary (as in runs-only-on-deck) components that Steam client, OS itself, gamescope and user-created applications for Deck rely on and making me learn Linux in a fun and unique way.&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://t.me/HoloISO&#34;&gt;here&lt;/a&gt; to join &lt;strong&gt;HoloISO&lt;/strong&gt; Telegram update channel;&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://steamdeck.community/forums/holoiso.29/&#34;&gt;here&lt;/a&gt; to visit &lt;strong&gt;HoloISO&lt;/strong&gt; discussion on Steam Deck Community forums&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Common Questions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is this official?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No, but it may as well be 99% of the way there. The code and packages, are straight from Valve, with zero possible edits, and the ISO is being built same rootfs bootstrap as all HoloISO installations run&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I have an NVIDIA G-&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No. Not even questionable. If you have an NVIDIA GPU, You&#39;re on your own. Latest Valve updates for Steam client including normal and Jupiter bootstraps have broken gamepadui on NVIDIA GPUs, and if so, no support will be provided for you.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Working stuff:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bootup&lt;/li&gt; &#xA; &lt;li&gt;SteamOS OOBE (Steam Deck UI First Boot Experience)&lt;/li&gt; &#xA; &lt;li&gt;Deck UI (separate session)&lt;/li&gt; &#xA; &lt;li&gt;Deck UI (-gamepadui)&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;TDP/FPS limiting&lt;/del&gt; (*0)&lt;/li&gt; &#xA; &lt;li&gt;Global FSR&lt;/li&gt; &#xA; &lt;li&gt;Shader Pre-Caching&lt;/li&gt; &#xA; &lt;li&gt;Switch to Desktop from plasma/to plasma without user interference.&lt;/li&gt; &#xA; &lt;li&gt;Valve&#39;s exclusive &lt;em&gt;Vapor&lt;/em&gt; appearance for KDE Plasma&lt;/li&gt; &#xA; &lt;li&gt;Steam Deck pacman mirrors&lt;/li&gt; &#xA; &lt;li&gt;Cool-looking neofetch?&lt;/li&gt; &#xA; &lt;li&gt;System updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Working stuff on Steam Deck compared to other distributions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dock Firmware updater (additionally installable in desktop by running sudo pacman -S jupiter-dock-updater-bin)&lt;/li&gt; &#xA; &lt;li&gt;Steam Deck BIOS, Controller firmware, OS firmware updater&lt;/li&gt; &#xA; &lt;li&gt;New fan curve control&lt;/li&gt; &#xA; &lt;li&gt;TDP/Clock control&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(*0) Disabled for ALL systems except for Steam Deck (Valve Jupiter 1) due to VERY LOW hardcoded TDP/Clock values, especially for dGPUs.&lt;/p&gt; &#xA;&lt;h2&gt;Installation process:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequistes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4GB flash drive&lt;/li&gt; &#xA; &lt;li&gt;More than 8 GB RAM if you plan to use &#34;Copy-To-RAM&#34; option to install&lt;/li&gt; &#xA; &lt;li&gt;AMD GPU that supports RADV Drivers instead of Radeon (Southern Islands and Sea Islands require additional kernel cmdline property); Intel iGPU all the way up to 11th gen Iris Xe (Arc GPUs are not supported at this moment)&lt;/li&gt; &#xA; &lt;li&gt;UEFI-enabled device&lt;/li&gt; &#xA; &lt;li&gt;Disabled secure boot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash the ISO from &lt;a href=&#34;https://github.com/bhaiest/holoiso/releases/latest&#34;&gt;releases&lt;/a&gt; or &lt;a href=&#34;https://nightly.link/theVakhovskeIsTaken/holoiso/workflows/build/stable/holoiso&#34;&gt;actions&lt;/a&gt; for NVIDIA GPUs using &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;BalenaEtcher&lt;/a&gt;, &lt;a href=&#34;https://rufus.ie&#34;&gt;Rufus&lt;/a&gt; with DD mode, or by typing &lt;code&gt;sudo dd if=SteamOS.iso of=/dev/sd(your flash drive) bs=4M status=progress oflag=sync&lt;/code&gt;, or by simply throwing ISO into Ventoy drive&lt;/li&gt; &#xA; &lt;li&gt;Boot into ISO&lt;/li&gt; &#xA; &lt;li&gt;Click on &#34;Install SteamOS on this device&#34;&lt;/li&gt; &#xA; &lt;li&gt;Follow on-screen instructions&lt;/li&gt; &#xA; &lt;li&gt;Take your favourite hot beverage, and wait &#39;till it installs :3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upon booting, you&#39;ll be greeted with Steam Deck&#39;s OOBE screen, from where you&#39;ll connect to your network, and login to your Steam account, from there, you can exit to KDE Plasma seamlessly by choosing &lt;em&gt;Switch to desktop&lt;/em&gt; in the power menu, &lt;a href=&#34;https://www.youtube.com/watch?v=smfwna2iHho&#34;&gt;like so&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292656-1679e007-4701-4a3c-89ee-2104b5eb12cd.png&#34; alt=&#34;Screenshot_20220508_133916&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292672-8bc9032d-4a21-4528-ab7e-b9dbc25a0664.png&#34; alt=&#34;Screenshot_20220508_133737&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292722-a68806c1-5768-4790-a8e7-108d7c72bb08.png&#34; alt=&#34;Screenshot_20220508_133746&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292731-86fed590-0260-4c5e-ac13-05d284b5fd24.png&#34; alt=&#34;Screenshot_20220508_133822&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292734-90036b5f-2571-438e-8951-8d731cd4ae93.png&#34; alt=&#34;Screenshot_20220508_134038&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292738-a70d266f-814d-4352-8d38-b920ae3f3381.png&#34; alt=&#34;Screenshot_20220508_134051&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;p&gt;(Too much people xD, to be filled later!!!)&lt;/p&gt; &#xA;&lt;h2&gt;Notes:&lt;/h2&gt; &#xA;&lt;p&gt;This configuration includes Valve&#39;s pacman.conf repositories, &lt;code&gt;holoinstall&lt;/code&gt; script and &lt;code&gt;holoinstall&lt;/code&gt; post-installation binaries.&lt;/p&gt; &#xA;&lt;p&gt;This configuration builds a &lt;em&gt;releng-based ISO&lt;/em&gt;, which is the default Arch Linux redistribution flavor.&lt;/p&gt; &#xA;&lt;h2&gt;Building the ISO:&lt;/h2&gt; &#xA;&lt;p&gt;Trigger the build by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -Sy archiso&#xA;git clone https://github.com/bhaiest/holoiso/&#xA;mv holoiso/mkarchiso-holoiso /usr/bin&#xA;chmod +x /usr/bin/mkarchiso-holoiso&#xA;sudo mkarchiso-holoiso -v holoiso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it ends, your ISO will be available in the &lt;code&gt;out&lt;/code&gt; folder.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jfadev/bottok</title>
    <updated>2023-05-01T01:47:14Z</updated>
    <id>tag:github.com,2023-05-01:/jfadev/bottok</id>
    <link href="https://github.com/jfadev/bottok" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bot Tok is an TikTok Up Bot (likes, followers, shares, favorites and views) based in node.js, puppeteer and zefoy.com.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bot Tok&lt;/h1&gt; &#xA;&lt;p&gt;Bot Tok is an TikTok Up Bot (likes, followers, shares, favorites and views) based in node.js, puppeteer and zefoy.com.&lt;/p&gt; &#xA;&lt;p&gt;🚨 Find help in &lt;a href=&#34;https://t.me/bottok_help&#34;&gt;Telegram&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; Bot Tok automates the use of the zefoy.com and is subject to availability. Not all modes are available at all times. It depends on whether they are available on Zefoy at the moment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; Using a TikTok viewbot is against the platform&#39;s Terms of Service. We do not encourage the act or idea of artificially increasing the number of views, likes, shares or favorites of your videos. The use of BotTok is at the user&#39;s own risk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#bot-tok&#34;&gt;Bot Tok&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#install&#34;&gt;Install&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#linux&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#android-termux&#34;&gt;Android (Termux)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#manual-install&#34;&gt;Manual Install&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#windows-1&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#linux-1&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#android-termux-1&#34;&gt;Android (Termux)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#update&#34;&gt;Update&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#windows-2&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#linux-2&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#android-termux-2&#34;&gt;Android (Termux)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use&#34;&gt;Use&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#advanced&#34;&gt;Advanced&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#run-a-task-with-a-video-directly&#34;&gt;Run a Task with a Video Directly&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#limit-task-accumulations&#34;&gt;Limit Task Accumulations&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use-custom-cookies&#34;&gt;Use Custom Cookies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use-proxy&#34;&gt;Use Proxy&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use-a-random-proxy-from-a-list&#34;&gt;Use a Random Proxy from a List&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use-custom-user-agent&#34;&gt;Use Custom User-Agent&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use-custom-browser&#34;&gt;Use Custom Browser&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#run-with-visible-browser-window&#34;&gt;Run with Visible Browser Window&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#use-terminal-captcha-in-premium&#34;&gt;Use Terminal Captcha in Premium&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#write-activity-log&#34;&gt;Write Activity Log&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#expert&#34;&gt;Expert&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#detach-mode&#34;&gt;Detach Mode&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#multi-task-mode&#34;&gt;Multi Task Mode&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#premium-no-limitations&#34;&gt;Premium (No Limitations)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#donate&#34;&gt;Donate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Up Views&lt;/li&gt; &#xA; &lt;li&gt;Up Shares&lt;/li&gt; &#xA; &lt;li&gt;Up Favorites&lt;/li&gt; &#xA; &lt;li&gt;Up Comment Hearts&lt;/li&gt; &#xA; &lt;li&gt;Up Hearts (poor availability)&lt;/li&gt; &#xA; &lt;li&gt;Up Followers (poor availability)&lt;/li&gt; &#xA; &lt;li&gt;Video URLs History&lt;/li&gt; &#xA; &lt;li&gt;Captcha in Terminal (Free Mode)&lt;/li&gt; &#xA; &lt;li&gt;Auto Captcha Solver (Premium Mode)&lt;/li&gt; &#xA; &lt;li&gt;Save Cookies (Zefoy Session)&lt;/li&gt; &#xA; &lt;li&gt;Random User-Agent&lt;/li&gt; &#xA; &lt;li&gt;Proxy&lt;/li&gt; &#xA; &lt;li&gt;Random Proxy from List&lt;/li&gt; &#xA; &lt;li&gt;Activity Log&lt;/li&gt; &#xA; &lt;li&gt;Custom Accumulation Limit&lt;/li&gt; &#xA; &lt;li&gt;Multi Task (Premium Mode)&lt;/li&gt; &#xA; &lt;li&gt;Run as a Detach Process (Premium Mode)&lt;/li&gt; &#xA; &lt;li&gt;Run in Windows, Linux and Android (Termux)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; To use Git and clone the repository you will need to have &lt;em&gt;SSH Public Key&lt;/em&gt;. Take a look at this: &lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account&#34;&gt;Adding a new SSH key to your GitHub account&lt;/a&gt; Without this you may have problems installing. This will make it much easier to upgrade your BotTok to the latest version available with a single command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following installation commands are provided for each operating system. Execute the command corresponding to your OS and follow the instructions, choose the default values by pressing enter or typing Y as appropriate. At some point during the installation a public ssh key will be generated and you will need to paste it into your GitHub account to continue. You can look in this documentation in the manual installation of your OS at the &#34;Add your SSH Public Key&#34; step for more details. After doing this step you will need to press enter on the tarminal to finish the installation. If everything went well BotTok should open.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;📹 &lt;a href=&#34;https://youtu.be/4yvkC38avbs&#34;&gt;Install in Windows Tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; Windows Defender may recognize BotTok as a virus. In this case you should temporarily disable the real-time scanning and install it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;First look at &lt;a href=&#34;https://medium.com/devops-with-valentine/2021-how-to-set-up-your-ssh-key-for-github-on-windows-10-afe6e729a3c0&#34;&gt;how to add a SSH Public Key&lt;/a&gt; in your github account on Windows.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Save the Windows installer file &lt;a href=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/win-install.bat&#34;&gt;win-install.bat&lt;/a&gt; to your user folder and run it, or Run in terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -o win-install.bat https://raw.githubusercontent.com/jfadev/bottok/main/win-install.bat &amp;amp; win-install.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;📹 Install in Linux Tutorial (coming soon)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run in terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install wget &amp;amp;&amp;amp; wget https://raw.githubusercontent.com/jfadev/bottok/main/ubuntu-install.sh &amp;amp;&amp;amp; chmod +x ubuntu-install.sh &amp;amp;&amp;amp; ./ubuntu-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Android (Termux)&lt;/h4&gt; &#xA;&lt;p&gt;📹 &lt;a href=&#34;https://youtu.be/INFmtshmSM0&#34;&gt;Install in Android Tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Requirements: &lt;a href=&#34;https://termux.dev/en/&#34;&gt;termux&lt;/a&gt; (install Termux in your Android phone from F-Droid store, The PlayStore version ins outdated and not work)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run in Termux terminal (Install Alpine in Termux)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg upgrade &amp;amp;&amp;amp; pkg install wget &amp;amp;&amp;amp; wget https://raw.githubusercontent.com/jfadev/bottok/main/termux-install.sh &amp;amp;&amp;amp; chmod +x termux-install.sh &amp;amp;&amp;amp; ./termux-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run in Alpine terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/jfadev/bottok/main/alpine-install.sh &amp;amp;&amp;amp; chmod +x alpine-install.sh &amp;amp;&amp;amp; ./alpine-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual Install&lt;/h2&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/6.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; Windows Defender may recognize BotTok as a virus. In this case you should temporarily disable the real-time scanning and install it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Requirements: &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;, &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs&lt;/a&gt; &amp;gt;=18 (Latest &lt;a href=&#34;https://github.com/nodejs/Release#release-schedule&#34;&gt;maintenance LTS&lt;/a&gt; version), &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; and &lt;a href=&#34;https://www.chromium.org/chromium-projects/&#34;&gt;chrome/chromium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;nodejs&lt;/a&gt;, &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your SSH Public Key to your GitHub account (&lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account?platform=windows&#34;&gt;more info&lt;/a&gt; and &lt;a href=&#34;https://medium.com/devops-with-valentine/2021-how-to-set-up-your-ssh-key-for-github-on-windows-10-afe6e729a3c0&#34;&gt;info&lt;/a&gt;). In ssh-keygen use the default values (press enter)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open with Notepad.exe the file &lt;code&gt;C:\Users\{your-user}\.ssh\id_rsa.pub&lt;/code&gt;, copy its content and paste it into your GitHub account in &lt;a href=&#34;https://github.com/settings/ssh/new&#34;&gt;https://github.com/settings/ssh/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Clone this repository in terminal (fingerprint: yes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:jfadev/bottok.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install Bot Tok&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd bottok&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Requirements: &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;, &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs&lt;/a&gt; &amp;gt;=18 (Latest &lt;a href=&#34;https://github.com/nodejs/Release#release-schedule&#34;&gt;maintenance LTS&lt;/a&gt; version), &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; and &lt;a href=&#34;https://www.chromium.org/chromium-projects/&#34;&gt;chrome/chromium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;, &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;https://www.openssh.com/&#34;&gt;openssh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt install nodejs&#xA;$ sudo apt install npm&#xA;$ sudo apt install git&#xA;$ sudo apt install openssh-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add your SSH Public Key to your GitHub account (&lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account?platform=linux&#34;&gt;more info&lt;/a&gt;). In ssh-keygen use the default values (press enter)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ssh-keygen&#xA;$ cat ~/.ssh/id_rsa.pub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy its content and paste it into your GitHub account in &lt;a href=&#34;https://github.com/settings/ssh/new&#34;&gt;https://github.com/settings/ssh/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Clone this repository in terminal (fingerprint: yes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:jfadev/bottok.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install Bot Tok&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd bottok&#xA;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Android (Termux)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/5.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Requirements: &lt;a href=&#34;https://termux.dev/en/&#34;&gt;termux&lt;/a&gt; (install Termux in your Android phone from F-Droid store, The PlayStore version ins outdated and not work)&lt;/p&gt; &#xA;&lt;p&gt;There is no build of Google Chrome available for ARM at this moment, so using chromium instead. Installing chromium on Termux directly requires snap which is another big hurdle so alternatively using alpine distro here.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://alpinelinux.org&#34;&gt;alpine&lt;/a&gt; in termux&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pkg upgrade&#xA;$ apt update&#xA;$ apt upgrade&#xA;$ pkg install proot-distro&#xA;$ proot-distro install alpine&#xA;$ proot-distro login alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In alpine install chromium&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ apk update &amp;amp;&amp;amp; apk add --no-cache nmap &amp;amp;&amp;amp; \&#xA;    echo @edge http://nl.alpinelinux.org/alpine/edge/community &amp;gt;&amp;gt; /etc/apk/repositories &amp;amp;&amp;amp; \&#xA;    echo @edge http://nl.alpinelinux.org/alpine/edge/main &amp;gt;&amp;gt; /etc/apk/repositories &amp;amp;&amp;amp; \&#xA;    apk update &amp;amp;&amp;amp; \&#xA;    apk add --no-cache \&#xA;    chromium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs&lt;/a&gt;, &lt;a href=&#34;https://yarnpkg.com/&#34;&gt;yarn&lt;/a&gt;, &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt;, and &lt;a href=&#34;https://www.openssh.com/&#34;&gt;openssh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ apk add nodejs&#xA;$ apk add yarn&#xA;$ apk add git&#xA;$ apk add openssh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Add your SSH Public Key to your GitHub account (&lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account?platform=linux&#34;&gt;more info&lt;/a&gt;). In ssh-keygen use the default values (press enter)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ssh-keygen&#xA;$ cat ~/.ssh/id_rsa.pub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy its content and paste it into your GitHub account in &lt;a href=&#34;https://github.com/settings/ssh/new&#34;&gt;https://github.com/settings/ssh/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Clone this repository in terminal (fingerprint: yes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:jfadev/bottok.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Install Bot Tok&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd bottok&#xA;$ yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; To enter Alpine from Termux with &lt;a href=&#34;https://github.com/termux/proot-distro&#34;&gt;proot-distro&lt;/a&gt; use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ proot-distro login alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Update&lt;/h2&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run in terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd bottok&#xA;$ win-update.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run in terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd bottok&#xA;$ ./ubuntu-update.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Android (Termux)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run in terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd bottok&#xA;$ ./alpine-update.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; use &lt;code&gt;./ubuntu-update.sh&lt;/code&gt; if instead of alpine you decided to use another distro like ubuntu for example.&lt;/p&gt; &#xA;&lt;h2&gt;Use&lt;/h2&gt; &#xA;&lt;p&gt;Type the following command in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd bottok&#xA;$ node bottok.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And follow the instructions, solve the captcha in the console if necessary, choose one of the available tasks and let the bot work.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; On Windows you can open BotTok by simply clicking on the &lt;code&gt;win-bottok.bat&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; On Windows Chromium can have the problem of opening multiple windows. We can control another browser like Chrome present on your machine. For this we just need the path to chrome.exe and launch BotTok as follows:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node bottok.js -b &#34;C:\Program Files\Google\Chrome\Application\Chrome.exe&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Usage: node bottok.js [options]&#xA;&#xA;Options:&#xA;  -h, --help             Show help&#xA;  -v, --version          BotTok version&#xA;  -l, --video &amp;lt;link&amp;gt;     TikTok video URL to perform the task on&#xA;  -t, --task &amp;lt;task&amp;gt;      Task to perform on the TikTok video (example: &#39;Up Views&#39;)&#xA;  -c, --cookies &amp;lt;path&amp;gt;   File path to store session cookies (default: cookies.json)&#xA;  -u, --user-agent &amp;lt;ua&amp;gt;  User agent to be used (default: random user-agent)&#xA;  -p, --proxy &amp;lt;proxy&amp;gt;    The proxy to be used (example: http://localhost:8080)&#xA;  -s, --proxies &amp;lt;path&amp;gt;   The path of the proxies file to use randomly (default: proxies.txt)&#xA;  -b, --browser &amp;lt;path&amp;gt;   Path to a browser executable to use instead of Chromium  &#xA;  -w, --no-headless      Open visible browser window  &#xA;  -k, --terminal-captcha Terminal captcha instead of auto solver  &#xA;  -o, --log              Write activity log (activity.log)&#xA;  -m, --minimal          Hide ASCII art header&#xA;  -d, --detach           Output mode for background processes&#xA;  -x, --limit &amp;lt;int&amp;gt;      By the time the accumulation limit is reached&#xA;  -e, --verbose          Display detailed processing information in logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;h4&gt;Run a Task with a Video Directly&lt;/h4&gt; &#xA;&lt;p&gt;Set task with &lt;code&gt;-t&lt;/code&gt; flag (&lt;code&gt;Up Views&lt;/code&gt;, &lt;code&gt;Up Shares&lt;/code&gt;, &lt;code&gt;Up Favorites&lt;/code&gt;) and video url with &lt;code&gt;-l&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -t &#39;Up Views&#39; -l https://www.tiktok.com/@jfadev/video/7216697213693529349&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Limit Task Accumulations&lt;/h4&gt; &#xA;&lt;p&gt;Set the limit accumulations value with &lt;code&gt;-x&lt;/code&gt; flag. The bot will stop when this limit is reached.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -t &#39;Up Views&#39; -x 20000 -l https://www.tiktok.com/@jfadev/video/7216697213693529349&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use Custom Cookies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -c cookies2.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use Proxy&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -p 127.0.0.1:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -p http://127.0.0.1:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -p user:password@127.0.0.1:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use a Random Proxy from a List&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -s proxies.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;File example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;202.61.204.51:80&#xA;47.91.45.198:8888&#xA;user:password@47.91.45.198:8888&#xA;user2:password2@202.61.204.51:80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use Custom User-Agent&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -u &#39;Mozilla/5.0 (iPad; CPU OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use Custom Browser&lt;/h4&gt; &#xA;&lt;p&gt;Path to a browser executable to use instead of the bundled Chromium. Note that Puppeteer is only guaranteed to work with the bundled Chromium, so use this setting at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Linux&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -b /usr/bin/google-chrome-stable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -b &#34;C:\Program Files\Google\Chrome\Application\Chrome.exe&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run with Visible Browser Window&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use Terminal Captcha in Premium&lt;/h4&gt; &#xA;&lt;p&gt;If the auto captcha solver has problems you can solve the captcha manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Write Activity Log&lt;/h4&gt; &#xA;&lt;p&gt;Stored in the &lt;code&gt;activity.log&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ node bottok.js -o&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Record structure: [&lt;code&gt;datetime&lt;/code&gt;] [&lt;code&gt;user-gent&lt;/code&gt;] [&lt;code&gt;session-id&lt;/code&gt;] [&lt;code&gt;task&lt;/code&gt;] &lt;code&gt;total&lt;/code&gt; (+&lt;code&gt;accumulations&lt;/code&gt;) &lt;code&gt;URL&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/7.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Expert&lt;/h2&gt; &#xA;&lt;h4&gt;Detach Mode&lt;/h4&gt; &#xA;&lt;p&gt;With the &lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--detach&lt;/code&gt; flag BotTok manages to work as a background process opening many interesting possibilities.&lt;/p&gt; &#xA;&lt;h4&gt;Multi Task Mode&lt;/h4&gt; &#xA;&lt;p&gt;We provide a batch script in both Windows and Linux versions. This batch process reads from the &lt;code&gt;tasks.csv&lt;/code&gt; file one task per line and launches bottok background processes with one task, one video and a specific accumulation limit in a loop. The number of simultaneous tasks will depend on the resources of your device. Feel free to modify this simple script to suit your needs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example of tasks.csv:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Column structure: &lt;code&gt;task&lt;/code&gt;,&lt;code&gt;limit&lt;/code&gt;,&lt;code&gt;URL&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Limit 0 = unlimited&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/9.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Up Views,10000,https://www.tiktok.com/@user/video/7218328781327584518&#xA;Up Favorites,500,https://www.tiktok.com/@user/video/7218328781327584518&#xA;Up Shares,1000,https://www.tiktok.com/@user/video/7218328781327584518&#xA;Up Views,50000,https://www.tiktok.com/@user/video/7208664677738450181&#xA;Up Favorites,5000,https://www.tiktok.com/@user/video/7208664677738450181&#xA;Up Shares,2000,https://www.tiktok.com/@user/video/7208664677738450181&#xA;Up Views,0,https://www.tiktok.com/@user/video/7194941936069922053&#xA;Up Favorites,15000,https://www.tiktok.com/@user/video/7194941936069922053&#xA;Up Shares,9000,https://www.tiktok.com/@user/video/7194941936069922053&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit your &lt;code&gt;tasks.csv&lt;/code&gt; file and run the batch process &lt;code&gt;multi-task.sh&lt;/code&gt; or &lt;code&gt;multi-task.bat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Linux&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./multi-tash.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with custom tasks file path&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./multi-tash.sh tasks.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Windows&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ multi-task.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with custom tasks file path&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ multi-task.bat tasks.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/11.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or use the -e or --verbose flags to display more detailed information. &lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/10.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Premium (No Limitations)&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;FREE&lt;/strong&gt; version limited to &lt;strong&gt;~5000&lt;/strong&gt; accumulations (views, likes, shares, etc...).&lt;/p&gt; &#xA;&lt;p&gt;The advantage of acquiring the license is that the bot continues to work indefinitely and accumulates large amounts of views, shares, etc... Unlock this limitation by purchasing a license at &lt;a href=&#34;https://jordifernandes.com/service/bottok&#34;&gt;HERE!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Paste a License Key here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jfadev/bottok/main/doc/4.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you want to give a donation for the developers, you can do it here &lt;a href=&#34;https://jordifernandes.com/donate/&#34;&gt;https://jordifernandes.com/donate/&lt;/a&gt; Thank you very much!!!!&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jfadev&#34;&gt;Jordi Fernandes (@jfadev)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>