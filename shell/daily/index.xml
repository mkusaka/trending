<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-08T01:37:37Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wukongdaily/tvhelper-docker</title>
    <updated>2024-03-08T01:37:37Z</updated>
    <id>tag:github.com,2024-03-08:/wukongdaily/tvhelper-docker</id>
    <link href="https://github.com/wukongdaily/tvhelper-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;让你使用电脑、NAS等一切能运行docker的设备变成盒子的ADB安装助手&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;盒子助手Docker版&lt;/h1&gt; &#xA;&lt;h2&gt;🤔 这是什么？&lt;/h2&gt; &#xA;&lt;p&gt;该项目可以让你使用电脑、NAS等一切能运行docker的设备变成盒子的ADB安装助手。让你的盒子用起来更加得心应手。&lt;br&gt; 另外【OpenWrt版本盒子助手命令行】可以&lt;a href=&#34;https://github.com/wukongdaily/tvhelper&#34;&gt;点击这里直达&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💡 特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;一键修改安卓原生电视盒子/TV的NTP服务器地址&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;SSH连接 且容器内ADB服务均已准备就绪,无需额外安装&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔑 支持&lt;code&gt;安装装机必备app 尤其是文件管理器和三方市场、图标等&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌏 支持&lt;code&gt;一键批量安装主机上指定目录的全部apk&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐋 支持&lt;code&gt;Docker compose和 docker cli&lt;/code&gt;一键部署&lt;/li&gt; &#xA; &lt;li&gt;📕 支持&lt;code&gt;为国行Sony电视安装时下流行的流媒体应用&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;❓ 兼容`ARMv7/ARM64/x86_64 双平台设备&lt;/li&gt; &#xA; &lt;li&gt;❓ 其他功能和特点会持续迭代&lt;/li&gt; &#xA; &lt;li&gt;MacOS(Apple芯片/Intel芯片)✅&lt;/li&gt; &#xA; &lt;li&gt;Windows 10/11 ✅&lt;/li&gt; &#xA; &lt;li&gt;Linux发行版 ✅&lt;/li&gt; &#xA; &lt;li&gt;NAS系统（群晖、威联通等）✅&lt;/li&gt; &#xA; &lt;li&gt;软路由iStoreOS/OpenWrt ✅&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 快速上手&lt;/h2&gt; &#xA;&lt;h3&gt;1. 安装&lt;code&gt;Docker&lt;/code&gt;和&lt;code&gt;Docker compose&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Docker compose&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;个人普通电脑&lt;/code&gt;安装教程：&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker镜像主页&lt;/code&gt; &lt;a href=&#34;https://hub.docker.com/repository/docker/wukongdaily/box/tags&#34;&gt;https://hub.docker.com/repository/docker/wukongdaily/box/tags&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. 下载image&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull wukongdaily/box:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. 容器系统默认账号密码或环境变量&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;容器内运行的就是alpine linux系统。&lt;/li&gt; &#xA; &lt;li&gt;ssh用户名和密码分别是：&lt;code&gt;root&lt;/code&gt;和&lt;code&gt;password&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;推荐ssh端口映射到主机端口为2299。&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;调用形式举例&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;ssh root@宿主机ip地址 -p 2299&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;SSH常见错误举例和新手指南详见&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wukongdaily/HowToUseSSH&#34;&gt;https://github.com/wukongdaily/HowToUseSSH&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;容器内的环境变量&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/android-sdk/platform-tools&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. 运行&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows电脑使用-CMD写法,注意不是powershell 且注意💡续行符^后不能有空格。数据目录默认映射到 【我的文档】&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d ^&#xA;--restart unless-stopped ^&#xA;--name tvhelper ^&#xA;-p 2299:22 ^&#xA;-v &#34;%USERPROFILE%\Documents\tvhelper_data:/tvhelper/shells/data&#34; ^&#xA;-e PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/android-sdk/platform-tools ^&#xA;wukongdaily/box:latest&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux 使用下列命令,数据目录默认映射到linux的&lt;code&gt;/tmp/upload/&lt;/code&gt;下&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --restart unless-stopped \&#xA;  --name tvhelper \&#xA;  -p 2299:22 \&#xA;  -v &#34;/tmp/upload/tvhelper_data:/tvhelper/shells/data&#34; \&#xA;  -e PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/android-sdk/platform-tools \&#xA;  wukongdaily/box:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS苹果电脑写法,数据目录默认映射到mac电脑文稿目录下&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --restart unless-stopped \&#xA;  --name tvhelper \&#xA;  -p 2299:22 \&#xA;  -v &#34;$HOME/Documents/tvhelper_data:/tvhelper/shells/data&#34; \&#xA;  -e PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/android-sdk/platform-tools \&#xA;  wukongdaily/box:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UNRAID 写法,注意容器内的data目录默认映射到 /mnt/user/appdata/，你可以适当修改成别的空间的路径。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=&#39;tvhelper&#39; \&#xA;  --net=&#39;bridge&#39; \&#xA;  -e HOST_OS=&#34;Unraid&#34; \&#xA;  -e HOST_HOSTNAME=&#34;unraid&#34; \&#xA;  -e HOST_CONTAINERNAME=&#34;tvhelper&#34; \&#xA;  -e &#39;PATH&#39;=&#39;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/android-sdk/platform-tools&#39; \&#xA;  -l net.unraid.docker.managed=dockerman \&#xA;  -p &#39;2299:22/tcp&#39; \&#xA;  -v &#39;/mnt/user/appdata/&#39;:&#39;/tvhelper/shells/data&#39;:&#39;rw&#39; &#39;wukongdaily/box&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. 如何导入本地镜像tar&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;离线包：&lt;a href=&#34;https://pan.baidu.com/share/init?surl=lWsaAtuAcwaO_9DtJo0hnA&amp;amp;pwd=1111&#34;&gt;https://pan.baidu.com/share/init?surl=lWsaAtuAcwaO_9DtJo0hnA&amp;amp;pwd=1111&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Windows 举例&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker load &amp;lt; &#34;%USERPROFILE%\Documents\tvhelper-amd64.tar&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux/OpenWrt 举例&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker load &amp;lt; /mnt/sata1.3-1/myboxarm.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;辅助视频教程⬇️&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/xAk-3TxeXxQ&#34;&gt;在线教学视频 长视频&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🗂️ 引用项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目的开发参照了以下项目，感谢这些开源项目的作者：&lt;/p&gt; &#xA;&lt;h3&gt;my-tv&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lizongying/my-tv&#34;&gt;https://github.com/lizongying/my-tv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BBLL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xiaye13579/BBLL&#34;&gt;https://github.com/xiaye13579/BBLL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TVBox&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/takagen99/Box&#34;&gt;https://github.com/takagen99/Box&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>