<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-23T01:52:45Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>foospidy/payloads</title>
    <updated>2022-06-23T01:52:45Z</updated>
    <id>tag:github.com,2022-06-23:/foospidy/payloads</id>
    <link href="https://github.com/foospidy/payloads" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Git All the Payloads! A collection of web attack payloads.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;payloads&lt;/h1&gt; &#xA;&lt;p&gt;Git All the Payloads! A collection of web attack payloads. Pull requests are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;run &lt;code&gt;./get.sh&lt;/code&gt; to download external payloads and unzip any payload files that are compressed.&lt;/p&gt; &#xA;&lt;h3&gt;Payload Credits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fuzzdb - &lt;a href=&#34;https://github.com/fuzzdb-project/fuzzdb&#34;&gt;https://github.com/fuzzdb-project/fuzzdb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SecLists - &lt;a href=&#34;https://github.com/danielmiessler/SecLists&#34;&gt;https://github.com/danielmiessler/SecLists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xsuperbug - &lt;a href=&#34;https://github.com/xsuperbug/payloads&#34;&gt;https://github.com/xsuperbug/payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NickSanzotta - &lt;a href=&#34;https://github.com/NickSanzotta/BurpIntruder&#34;&gt;https://github.com/NickSanzotta/BurpIntruder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;7ioSecurity - &lt;a href=&#34;https://github.com/7ioSecurity/XSS-Payloads&#34;&gt;https://github.com/7ioSecurity/XSS-Payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;shadsidd - &lt;a href=&#34;https://github.com/shadsidd&#34;&gt;https://github.com/shadsidd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;shikari1337 - &lt;a href=&#34;https://www.shikari1337.com/list-of-xss-payloads-for-cross-site-scripting/&#34;&gt;https://www.shikari1337.com/list-of-xss-payloads-for-cross-site-scripting/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xmendez - &lt;a href=&#34;https://github.com/xmendez/wfuzz&#34;&gt;https://github.com/xmendez/wfuzz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;minimaxir - &lt;a href=&#34;https://github.com/minimaxir/big-list-of-naughty-strings&#34;&gt;https://github.com/minimaxir/big-list-of-naughty-strings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xsscx - &lt;a href=&#34;https://github.com/xsscx/Commodity-Injection-Signatures&#34;&gt;https://github.com/xsscx/Commodity-Injection-Signatures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;TheRook - &lt;a href=&#34;https://github.com/TheRook/subbrute&#34;&gt;https://github.com/TheRook/subbrute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;danielmiessler - &lt;a href=&#34;https://github.com/danielmiessler/RobotsDisallowed&#34;&gt;https://github.com/danielmiessler/RobotsDisallowed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FireFart - &lt;a href=&#34;https://github.com/FireFart/HashCollision-DOS-POC&#34;&gt;https://github.com/FireFart/HashCollision-DOS-POC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HybrisDisaster - &lt;a href=&#34;https://github.com/HybrisDisaster/aspHashDoS&#34;&gt;https://github.com/HybrisDisaster/aspHashDoS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;swisskyrepo - &lt;a href=&#34;https://github.com/swisskyrepo/PayloadsAllTheThings&#34;&gt;https://github.com/swisskyrepo/PayloadsAllTheThings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;1N3 - &lt;a href=&#34;https://github.com/1N3/IntruderPayloads&#34;&gt;https://github.com/1N3/IntruderPayloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cujanovic - &lt;a href=&#34;https://github.com/cujanovic/Open-Redirect-Payloads&#34;&gt;https://github.com/cujanovic/Open-Redirect-Payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cujanovic - &lt;a href=&#34;https://github.com/cujanovic/Content-Bruteforcing-Wordlist&#34;&gt;https://github.com/cujanovic/Content-Bruteforcing-Wordlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cujanovic - &lt;a href=&#34;https://github.com/cujanovic/subdomain-bruteforce-list&#34;&gt;https://github.com/cujanovic/subdomain-bruteforce-list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cujanovic - &lt;a href=&#34;https://github.com/cujanovic/CRLF-Injection-Payloads&#34;&gt;https://github.com/cujanovic/CRLF-Injection-Payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cujanovic - &lt;a href=&#34;https://github.com/cujanovic/Virtual-host-wordlist&#34;&gt;https://github.com/cujanovic/Virtual-host-wordlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cujanovic - &lt;a href=&#34;https://github.com/cujanovic/dirsearch-wordlist&#34;&gt;https://github.com/cujanovic/dirsearch-wordlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;lavalamp- - &lt;a href=&#34;https://github.com/lavalamp-/password-lists&#34;&gt;https://github.com/lavalamp-/password-lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;arnaudsoullie - &lt;a href=&#34;https://github.com/arnaudsoullie/ics-default-passwords&#34;&gt;https://github.com/arnaudsoullie/ics-default-passwords&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;scadastrangelove - &lt;a href=&#34;https://github.com/scadastrangelove/SCADAPASS&#34;&gt;https://github.com/scadastrangelove/SCADAPASS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;jeanphorn - &lt;a href=&#34;https://github.com/jeanphorn/wordlist&#34;&gt;https://github.com/jeanphorn/wordlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;j3ers3 - &lt;a href=&#34;https://github.com/j3ers3/PassList&#34;&gt;https://github.com/j3ers3/PassList&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;nyxxxie - &lt;a href=&#34;https://github.com/nyxxxie/awesome-default-passwords&#34;&gt;https://github.com/nyxxxie/awesome-default-passwords&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;foospidy - &lt;a href=&#34;https://github.com/foospidy/web-cve-tests&#34;&gt;https://github.com/foospidy/web-cve-tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;terjanq - &lt;a href=&#34;https://github.com/terjanq/Tiny-XSS-Payloads&#34;&gt;https://github.com/terjanq/Tiny-XSS-Payloads&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;OWASP&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dirbuster - &lt;a href=&#34;https://www.owasp.org/index.php/DirBuster&#34;&gt;https://www.owasp.org/index.php/DirBuster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;fuzzing_code_database - &lt;a href=&#34;https://www.owasp.org/index.php/Category:OWASP_Fuzzing_Code_Database&#34;&gt;https://www.owasp.org/index.php/Category:OWASP_Fuzzing_Code_Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;JBroFuzz - &lt;a href=&#34;https://www.owasp.org/index.php/JBroFuzz&#34;&gt;https://www.owasp.org/index.php/JBroFuzz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Other&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;xss/ismailtasdelen.txt - &lt;a href=&#34;https://github.com/ismailtasdelen/xss-payload-list&#34;&gt;https://github.com/ismailtasdelen/xss-payload-list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/jsf__k.txt - &lt;a href=&#34;http://www.jsfuck.com/&#34;&gt;http://www.jsfuck.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/kirankarnad.txt - &lt;a href=&#34;https://www.linkedin.com/pulse/20140812222156-79939846-xss-vectors-you-may-need-as-a-pen-tester&#34;&gt;https://www.linkedin.com/pulse/20140812222156-79939846-xss-vectors-you-may-need-as-a-pen-tester&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/packetstorm.txt - &lt;a href=&#34;https://packetstormsecurity.com/files/112152/Cross-Site-Scripting-Payloads.html&#34;&gt;https://packetstormsecurity.com/files/112152/Cross-Site-Scripting-Payloads.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/smeegessec.com.txt - &lt;a href=&#34;http://www.smeegesec.com/2012/06/collection-of-cross-site-scripting-xss.html&#34;&gt;http://www.smeegesec.com/2012/06/collection-of-cross-site-scripting-xss.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/d3adend.org.txt - &lt;a href=&#34;http://d3adend.org/xss/ghettoBypass&#34;&gt;http://d3adend.org/xss/ghettoBypass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/soaj1664ashar.txt - &lt;a href=&#34;http://pastebin.com/u6FY1xDA&#34;&gt;http://pastebin.com/u6FY1xDA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/billsempf.txt - &lt;a href=&#34;https://www.sempf.net/post/Six-hundred-and-sixty-six-XSS-vectors-suitable-for-attacking-an-API.aspx&#34;&gt;https://www.sempf.net/post/Six-hundred-and-sixty-six-XSS-vectors-suitable-for-attacking-an-API.aspx&lt;/a&gt; (&lt;a href=&#34;http://pastebin.com/48WdZR6L&#34;&gt;http://pastebin.com/48WdZR6L&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;xss/787373.txt - &lt;a href=&#34;https://84692bb0df6f30fc0687-25dde2f20b8e8c1bda75aeb96f737eae.ssl.cf1.rackcdn.com/--xss.html&#34;&gt;https://84692bb0df6f30fc0687-25dde2f20b8e8c1bda75aeb96f737eae.ssl.cf1.rackcdn.com/--xss.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/bhandarkar.txt - &lt;a href=&#34;http://hackingforsecurity.blogspot.com/2013/11/xss-cheat-sheet-huge-list.html&#34;&gt;http://hackingforsecurity.blogspot.com/2013/11/xss-cheat-sheet-huge-list.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/xssdb.txt - &lt;a href=&#34;http://xssdb.net/xssdb.txt&#34;&gt;http://xssdb.net/xssdb.txt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/0xsobky.txt - &lt;a href=&#34;https://github.com/0xsobky/HackVault/wiki/Unleashing-an-Ultimate-XSS-Polyglot&#34;&gt;https://github.com/0xsobky/HackVault/wiki/Unleashing-an-Ultimate-XSS-Polyglot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/secgeek.txt - &lt;a href=&#34;https://www.secgeek.net/solutions-for-xss-waf-challenge/&#34;&gt;https://www.secgeek.net/solutions-for-xss-waf-challenge/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/reddit_xss_get.txt - All XSS GET requests from &lt;a href=&#34;https://www.reddit.com/r/xss&#34;&gt;https://www.reddit.com/r/xss&lt;/a&gt; (as of 3/30/2016)&lt;/li&gt; &#xA; &lt;li&gt;xss/rafaybaloch.txt - &lt;a href=&#34;http://www.rafayhackingarticles.net/2016/09/breaking-great-wall-of-web-xss-waf.html&#34;&gt;http://www.rafayhackingarticles.net/2016/09/breaking-great-wall-of-web-xss-waf.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/alternume0.txt - &lt;a href=&#34;https://www.openbugbounty.org/reports/722726/&#34;&gt;https://www.openbugbounty.org/reports/722726/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;xss/XssPayloads - &lt;a href=&#34;https://twitter.com/XssPayloads&#34;&gt;https://twitter.com/XssPayloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/camoufl4g3.txt - &lt;a href=&#34;https://github.com/camoufl4g3/SQLi-payload-Fuzz3R/raw/master/payloads.txt&#34;&gt;https://github.com/camoufl4g3/SQLi-payload-Fuzz3R/blob/master/payloads.txt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/c0rni3sm.txt - &lt;a href=&#34;http://c0rni3sm.blogspot.in/2016/02/a-quite-rare-mssql-injection.html&#34;&gt;http://c0rni3sm.blogspot.in/2016/02/a-quite-rare-mssql-injection.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/sqlifuzzer.txt - &lt;a href=&#34;https://github.com/ContactLeft/sqlifuzzer/tree/master/payloads&#34;&gt;https://github.com/ContactLeft/sqlifuzzer/tree/master/payloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/harisec.txt - &lt;a href=&#34;https://hackerone.com/reports/297478&#34;&gt;https://hackerone.com/reports/297478&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/jstnkndy.txt - &lt;a href=&#34;https://foxglovesecurity.com/2017/02/07/type-juggling-and-php-object-injection-and-sqli-oh-my/&#34;&gt;https://foxglovesecurity.com/2017/02/07/type-juggling-and-php-object-injection-and-sqli-oh-my/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/d0znpp.txt - &lt;a href=&#34;https://medium.com/@d0znpp/how-to-bypass-libinjection-in-many-waf-ngwaf-1e2513453c0f&#34;&gt;https://medium.com/@d0znpp/how-to-bypass-libinjection-in-many-waf-ngwaf-1e2513453c0f&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sqli/libinjection-bypasses.txt - &lt;a href=&#34;https://gist.github.com/migolovanov/432fe28c8c7e9fa675ab3903c5eda77f&#34;&gt;https://gist.github.com/migolovanov/432fe28c8c7e9fa675ab3903c5eda77f&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;traversal/dotdotpwn.txt - &lt;a href=&#34;https://github.com/wireghoul/dotdotpwn&#34;&gt;https://github.com/wireghoul/dotdotpwn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;codeinjection/fede.txt - &lt;a href=&#34;https://techblog.mediaservice.net/2016/10/exploiting-ognl-injection/&#34;&gt;https://techblog.mediaservice.net/2016/10/exploiting-ognl-injection/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;commandinjection/ismailtasdelen-unix.txt - &lt;a href=&#34;https://github.com/ismailtasdelen/command-injection-payload-list&#34;&gt;https://github.com/ismailtasdelen/command-injection-payload-list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;commandinjection/ismailtasdelen-windows.txt - &lt;a href=&#34;https://github.com/ismailtasdelen/command-injection-payload-list&#34;&gt;https://github.com/ismailtasdelen/command-injection-payload-list&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;ctf&lt;/h4&gt; &#xA;&lt;p&gt;Requests extracted from either packet captures or log files of capture the flag (ctf) events. Mostly raw data so not all requests are actual payloads, however requests should be deduplicated.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;maccdc2010.txt - Mid-Atlantic CCDC (&lt;a href=&#34;http://maccdc.org/&#34;&gt;http://maccdc.org/&lt;/a&gt;), source: &lt;a href=&#34;http://www.netresec.com/?page=MACCDC&#34;&gt;http://www.netresec.com/?page=MACCDC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;maccdc2011.txt - Mid-Atlantic CCDC (&lt;a href=&#34;http://maccdc.org/&#34;&gt;http://maccdc.org/&lt;/a&gt;), source: &lt;a href=&#34;http://www.netresec.com/?page=MACCDC&#34;&gt;http://www.netresec.com/?page=MACCDC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;maccdc2012.txt - Mid-Atlantic CCDC (&lt;a href=&#34;http://maccdc.org/&#34;&gt;http://maccdc.org/&lt;/a&gt;), source: &lt;a href=&#34;http://www.netresec.com/?page=MACCDC&#34;&gt;http://www.netresec.com/?page=MACCDC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ists12_2015.txt - Information Security Talent Search (&lt;a href=&#34;http://ists.sparsa.org/&#34;&gt;http://ists.sparsa.org/&lt;/a&gt;), source: &lt;a href=&#34;http://www.netresec.com/?page=ISTS&#34;&gt;http://www.netresec.com/?page=ISTS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;defcon20.txt - DEFCON Capture the Flag (&lt;a href=&#34;https://www.defcon.org/html/links/dc-ctf.html&#34;&gt;https://www.defcon.org/html/links/dc-ctf.html&lt;/a&gt;), source: &lt;a href=&#34;http://www.netresec.com/?page=PcapFiles&#34;&gt;http://www.netresec.com/?page=PcapFiles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Miscellaneous&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;XSS references that may overlap with sources already included above: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet&#34;&gt;https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://htmlpurifier.org/live/smoketests/xssAttacks.php&#34;&gt;http://htmlpurifier.org/live/smoketests/xssAttacks.php&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tj/n</title>
    <updated>2022-06-23T01:52:45Z</updated>
    <id>tag:github.com,2022-06-23:/tj/n</id>
    <link href="https://github.com/tj/n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node version management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;n&lt;/code&gt; – Interactively Manage Your Node.js Versions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/n&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/n.svg?style=flat-square&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/n&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/n.svg?style=flat-square&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/n&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/n.svg?style=flat-square&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/n&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/n.svg?style=flat-square&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Node.js version management: no subshells, no profile setup, no convoluted API, just &lt;strong&gt;simple&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://nimit.io/images/n/n.gif&#34; alt=&#34;usage animation&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#n--interactively-manage-your-nodejs-versions&#34;&gt;&lt;code&gt;n&lt;/code&gt; – Interactively Manage Your Node.js Versions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#supported-platforms&#34;&gt;Supported Platforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#third-party-installers&#34;&gt;Third Party Installers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#installing-nodejs-versions&#34;&gt;Installing Node.js Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#specifying-nodejs-versions&#34;&gt;Specifying Node.js Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#removing-versions&#34;&gt;Removing Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#using-downloaded-nodejs-versions-without-reinstalling&#34;&gt;Using Downloaded Node.js Versions Without Reinstalling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#preserving-npm&#34;&gt;Preserving npm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#miscellaneous&#34;&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#custom-source&#34;&gt;Custom Source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#custom-architecture&#34;&gt;Custom Architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#optional-environment-variables&#34;&gt;Optional Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#how-it-works&#34;&gt;How It Works&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;n&lt;/code&gt; is supported on macOS, Linux, including with Windows Subsystem for Linux, and various other unix-like systems. It is written as a BASH script but does not require you to use BASH as your command shell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;n&lt;/code&gt; does not work in native shells on Microsoft Windows (like PowerShell), or Git for Windows BASH, or with the Cygwin DLL.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you already have Node.js installed, an easy way to install &lt;code&gt;n&lt;/code&gt; is using &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;n&lt;/code&gt; command downloads and installs to &lt;code&gt;/usr/local&lt;/code&gt; by default, but you may override this location by defining &lt;code&gt;N_PREFIX&lt;/code&gt;. &lt;code&gt;n&lt;/code&gt; caches Node.js versions in subdirectory &lt;code&gt;n/versions&lt;/code&gt;. The &lt;em&gt;active&lt;/em&gt; Node.js version is installed in subdirectories &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, and &lt;code&gt;share&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To avoid requiring &lt;code&gt;sudo&lt;/code&gt; for &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; global installs, it is suggested you either install to your home directory using &lt;code&gt;N_PREFIX&lt;/code&gt;, or take ownership of the system directories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# make cache folder (if missing) and take ownership&#xA;sudo mkdir -p /usr/local/n&#xA;sudo chown -R $(whoami) /usr/local/n&#xA;# make sure the required folders exist (safe to execute even if they already exist)&#xA;sudo mkdir -p /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share&#xA;# take ownership of Node.js install destination folders&#xA;sudo chown -R $(whoami) /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If &lt;code&gt;npm&lt;/code&gt; is not yet available, one way to bootstrap an install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n&#xA;bash n lts&#xA;# Now node and npm are available&#xA;npm install -g n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can clone this repo and&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to install &lt;code&gt;n&lt;/code&gt; to &lt;code&gt;bin/n&lt;/code&gt; of the directory specified in the environment variable &lt;code&gt;$PREFIX&lt;/code&gt;, which defaults to &lt;code&gt;/usr/local&lt;/code&gt; (note that you will likely need to use &lt;code&gt;sudo&lt;/code&gt;). To install &lt;code&gt;n&lt;/code&gt; in a custom location (such as &lt;code&gt;$CUSTOM_LOCATION/bin/n&lt;/code&gt;), run &lt;code&gt;PREFIX=$CUSTOM_LOCATION make install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Third Party Installers&lt;/h3&gt; &#xA;&lt;p&gt;On macOS with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; you can install the &lt;a href=&#34;https://github.com/Homebrew/homebrew-core/raw/master/Formula/n.rb&#34;&gt;n formula&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or on macOS with &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt; you can install the &lt;a href=&#34;https://ports.macports.org/port/n/summary&#34;&gt;n port&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;port install n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux and macOS, &lt;a href=&#34;https://github.com/mklement0/n-install&#34;&gt;n-install&lt;/a&gt; allows installation directly from GitHub; for instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://bit.ly/n-install | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;n-install sets both &lt;code&gt;PREFIX&lt;/code&gt; and &lt;code&gt;N_PREFIX&lt;/code&gt; to &lt;code&gt;$HOME/n&lt;/code&gt;, installs &lt;code&gt;n&lt;/code&gt; to &lt;code&gt;$HOME/n/bin&lt;/code&gt;, modifies the initialization files of supported shells to export &lt;code&gt;N_PREFIX&lt;/code&gt; and add &lt;code&gt;$HOME/n/bin&lt;/code&gt; to the &lt;code&gt;PATH&lt;/code&gt;, and installs the latest LTS Node.js version.&lt;/p&gt; &#xA;&lt;p&gt;As a result, both &lt;code&gt;n&lt;/code&gt; itself and all Node.js versions it manages are hosted inside a single, optionally configurable directory, which you can later remove with the included &lt;code&gt;n-uninstall&lt;/code&gt; script. &lt;code&gt;n-update&lt;/code&gt; updates &lt;code&gt;n&lt;/code&gt; itself to the latest version. See the &lt;a href=&#34;https://github.com/mklement0/n-install&#34;&gt;n-install repo&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Node.js Versions&lt;/h2&gt; &#xA;&lt;p&gt;Simply execute &lt;code&gt;n &amp;lt;version&amp;gt;&lt;/code&gt; to download and install a version of Node.js. If &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; has already been downloaded, &lt;code&gt;n&lt;/code&gt; will install from its cache.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n 10.16.0&#xA;n lts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;n&lt;/code&gt; on its own to view your downloaded versions, and install the selected version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ n&#xA;&#xA;  node/4.9.1&#xA;ο node/8.11.3&#xA;  node/10.15.0&#xA;&#xA;Use up/down arrow keys to select a version, return key to install, d to delete, q to quit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(You can also use &lt;kbd&gt;j&lt;/kbd&gt; and &lt;kbd&gt;k&lt;/kbd&gt; to select next or previous version instead of using arrows, or &lt;kbd&gt;ctrl+n&lt;/kbd&gt; and &lt;kbd&gt;ctrl+p&lt;/kbd&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;If the active node version does not change after install, try opening a new shell in case seeing a stale version.&lt;/p&gt; &#xA;&lt;h2&gt;Specifying Node.js Versions&lt;/h2&gt; &#xA;&lt;p&gt;There are a variety of ways of specifying the target Node.js version for &lt;code&gt;n&lt;/code&gt; commands. Most commands use the latest matching version, and &lt;code&gt;n ls-remote&lt;/code&gt; lists multiple matching versions.&lt;/p&gt; &#xA;&lt;p&gt;Numeric version numbers can be complete or incomplete, with an optional leading &lt;code&gt;v&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;4.9.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;8&lt;/code&gt;: 8.x.y versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v6.1&lt;/code&gt;: 6.1.x versions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are labels for two especially useful versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;lts&lt;/code&gt;: newest Long Term Support official release&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt;: newest official release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is an &lt;code&gt;auto&lt;/code&gt; label to read the target version from a file in the current directory, or any parent directory. &lt;code&gt;n&lt;/code&gt; looks for in order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.n-node-version&lt;/code&gt;: version on single line. Custom to &lt;code&gt;n&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.node-version&lt;/code&gt;: version on single line. Used by multiple tools: &lt;a href=&#34;https://github.com/shadowspawn/node-version-usage&#34;&gt;node-version-usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.nvmrc&lt;/code&gt;: version on single line. Used by &lt;code&gt;nvm&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;if no version file found, look for &lt;code&gt;engine&lt;/code&gt; as below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;engine&lt;/code&gt; label looks for a &lt;code&gt;package.json&lt;/code&gt; file and reads the &lt;code&gt;engines&lt;/code&gt; field to determine compatible Node.js. Requires an installed version of &lt;code&gt;node&lt;/code&gt;, and uses &lt;code&gt;npx semver&lt;/code&gt; to resolve complex ranges.&lt;/p&gt; &#xA;&lt;p&gt;There is support for the named release streams:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;argon&lt;/code&gt;, &lt;code&gt;boron&lt;/code&gt;, &lt;code&gt;carbon&lt;/code&gt;: codenames for LTS release streams&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These Node.js support aliases may be used, although simply resolve to the latest matching version:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;active&lt;/code&gt;, &lt;code&gt;lts_active&lt;/code&gt;, &lt;code&gt;lts_latest&lt;/code&gt;, &lt;code&gt;lts&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt;, &lt;code&gt;supported&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The last version form is for specifying &lt;a href=&#34;https://nodejs.org/download&#34;&gt;other releases&lt;/a&gt; available using the name of the remote download folder optionally followed by the complete or incomplete version.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test/v11.0.0-test20180528&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rc/10&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Removing Versions&lt;/h2&gt; &#xA;&lt;p&gt;Remove some cached versions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n rm 0.9.4 v0.10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Removing all cached versions except the installed version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n prune&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remove the installed Node.js (does not affect the cached versions). This can be useful to revert to the system version of node (if in a different location), or if you no longer wish to use node and npm, or are switching to a different way of managing them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Downloaded Node.js Versions Without Reinstalling&lt;/h2&gt; &#xA;&lt;p&gt;There are three commands for working directly with your downloaded versions of Node.js, without reinstalling.&lt;/p&gt; &#xA;&lt;p&gt;You can show the path to the downloaded &lt;code&gt;node&lt;/code&gt; version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ n which 6.14.3&#xA;/usr/local/n/versions/6.14.3/bin/node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or run a downloaded &lt;code&gt;node&lt;/code&gt; version with the &lt;code&gt;n run&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n run 8.11.3 --debug some.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or execute a command with &lt;code&gt;PATH&lt;/code&gt; modified so &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; will be from the downloaded Node.js version. (NB: &lt;code&gt;npm&lt;/code&gt; run this way will be using global node_modules from the target node version folder.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n exec 10 my-script --fast test&#xA;n exec lts zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preserving npm&lt;/h2&gt; &#xA;&lt;p&gt;A Node.js install normally includes &lt;code&gt;npm&lt;/code&gt; as well, but you may wish to preserve an updated &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;npx&lt;/code&gt; leaving them out of the install using &lt;code&gt;--preserve&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install -g npm@latest&#xA;...&#xA;$ npm --version&#xA;6.13.7&#xA;$ n -p 8&#xA;   installed : v8.17.0&#xA;$ npm --version&#xA;6.13.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can make this the default by setting &lt;code&gt;N_PRESERVE_NPM&lt;/code&gt; to a non-empty string.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export N_PRESERVE_NPM=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can be explicit to get the desired behaviour whatever the environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n --preserve nightly&#xA;n --no-preserve latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Miscellaneous&lt;/h2&gt; &#xA;&lt;p&gt;Command line help can be obtained from &lt;code&gt;n --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;List matching remote versions available for download:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n ls-remote lts&#xA;n ls-remote latest&#xA;n lsr 10&#xA;n --all lsr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;List downloaded versions in cache:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Display diagnostics to help resolve problems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n doctor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom Source&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to use a different Node.js mirror which has the same layout as the default &lt;a href=&#34;https://nodejs.org/dist/&#34;&gt;https://nodejs.org/dist/&lt;/a&gt;, you can define &lt;code&gt;N_NODE_MIRROR&lt;/code&gt;. The most common example is from users in China who can define:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export N_NODE_MIRROR=https://npmmirror.com/mirrors/node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the custom mirror requires authentication you can add the &lt;a href=&#34;https://urlencode.org&#34;&gt;url-encoded&lt;/a&gt; username and password into the URL. e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export N_NODE_MIRROR=https://encoded-username:encoded-password@host:port/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is also &lt;code&gt;N_NODE_DOWNLOAD_MIRROR&lt;/code&gt; for a different mirror with same layout as the default &lt;a href=&#34;https://nodejs.org/download&#34;&gt;https://nodejs.org/download&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Architecture&lt;/h2&gt; &#xA;&lt;p&gt;By default &lt;code&gt;n&lt;/code&gt; picks the binaries matching your system architecture. For example, on a 64 bit system &lt;code&gt;n&lt;/code&gt; will download 64 bit binaries.&lt;/p&gt; &#xA;&lt;p&gt;On a Mac with Apple silicon:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for Node.js 16 and higher, &lt;code&gt;n&lt;/code&gt; defaults to arm64 binaries which run natively&lt;/li&gt; &#xA; &lt;li&gt;for older versions of Node.js, &lt;code&gt;n&lt;/code&gt; defaults to x64 binaries which run in Rosetta 2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can override the default architecture by using the &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--arch&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;e.g. reinstall latest version of Node.js with x64 binaries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n rm current&#xA;n --arch x64 current&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Optional Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;n&lt;/code&gt; command downloads and installs to &lt;code&gt;/usr/local&lt;/code&gt; by default, but you may override this location by defining &lt;code&gt;N_PREFIX&lt;/code&gt;. To change the location to say &lt;code&gt;$HOME/.n&lt;/code&gt;, add lines like the following to your shell initialization file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export N_PREFIX=$HOME/.n&#xA;export PATH=$N_PREFIX/bin:$PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to store the downloads under a different location, use &lt;code&gt;N_CACHE_PREFIX&lt;/code&gt;. This does &lt;em&gt;not&lt;/em&gt; affect the currently active node version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;n&lt;/code&gt; defaults to using xz compressed Node.js tarballs for the download if it is likely tar on the system supports xz decompression. You can override the automatic choice by setting an environment variable to zero or non-zero:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export N_USE_XZ=0 # to disable&#xA;export N_USE_XZ=1 # to enable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can be explicit to get the desired behaviour whatever the environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;n install --use-xz nightly&#xA;n install --no-use-xz latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In brief:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;N_NODE_MIRROR&lt;/code&gt;: See &lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#custom-source&#34;&gt;Custom source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;N_NODE_DOWNLOAD_MIRROR&lt;/code&gt;: See &lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#custom-source&#34;&gt;Custom source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;support for &lt;a href=&#34;https://no-color.org&#34;&gt;NO_COLOR&lt;/a&gt; and &lt;a href=&#34;https://bixense.com/clicolors&#34;&gt;CLICOLOR=0&lt;/a&gt; for controlling use of ANSI color codes&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;N_MAX_REMOTE_MATCHES&lt;/code&gt; to change the default &lt;code&gt;ls-remote&lt;/code&gt; maximum of 20 matching versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;N_PRESERVE_NPM&lt;/code&gt;: See &lt;a href=&#34;https://raw.githubusercontent.com/tj/n/master/#preserving-npm&#34;&gt;Preserving npm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;n&lt;/code&gt; downloads a prebuilt Node.js package and installs to a single prefix (e.g. &lt;code&gt;/usr/local&lt;/code&gt;). This overwrites the previous version. The &lt;code&gt;bin&lt;/code&gt; folder in this location should be in your &lt;code&gt;PATH&lt;/code&gt; (e.g. &lt;code&gt;/usr/local/bin&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The downloads are kept in a cache folder to be used for reinstalls. The downloads are also available for limited use using &lt;code&gt;n which&lt;/code&gt; and &lt;code&gt;n run&lt;/code&gt; and &lt;code&gt;n exec&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The global &lt;code&gt;npm&lt;/code&gt; packages are not changed by the install, with the exception of &lt;code&gt;npm&lt;/code&gt; itself which is part of the Node.js install.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Kong/docker-kong</title>
    <updated>2022-06-23T01:52:45Z</updated>
    <id>tag:github.com,2022-06-23:/Kong/docker-kong</id>
    <link href="https://github.com/Kong/docker-kong" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐒 Docker distribution for Kong&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/kong/docker-kong/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;About this Repo&lt;/h1&gt; &#xA;&lt;p&gt;This is the Git repo of the Docker &lt;a href=&#34;https://docs.docker.com/docker-hub/official_repos/&#34;&gt;official image&lt;/a&gt; for &lt;a href=&#34;https://registry.hub.docker.com/_/kong/&#34;&gt;kong&lt;/a&gt;. See &lt;a href=&#34;https://registry.hub.docker.com/_/kong/&#34;&gt;the Docker Hub page&lt;/a&gt; for the full readme on how to use this Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The full readme is generated over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;docker-library/docs&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/kong&#34;&gt;docker-library/docs/kong&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See a change merged here that doesn&#39;t show up on the Docker Hub yet? Check &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/kong&#34;&gt;the &#34;library/kong&#34; manifest file in the docker-library/official-images repo&lt;/a&gt;, especially &lt;a href=&#34;https://github.com/docker-library/official-images/labels/library%2Fkong&#34;&gt;PRs with the &#34;library/kong&#34; label on that repo&lt;/a&gt;. For more information about the official images process, see the &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/README.md&#34;&gt;docker-library/official-images readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;For Kong developers&lt;/h1&gt; &#xA;&lt;h2&gt;Pushing a Kong patch release (x.y.Z) update&lt;/h2&gt; &#xA;&lt;p&gt;If the update does not require changes to the Dockerfiles other than pointing to the latest Kong code, the process can be semi-automated as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Check out this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./update.sh x.y.z&lt;/code&gt;&lt;/p&gt; &lt;p&gt;This will create a release branch, modify the relevant files automatically, give you a chance to review the changes and press &#34;y&#34;, then it will push the branch and open a browser with the PR to this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Peer review, run CI and merge the submitted PR.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./submit.sh -p x.y.z&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Once the internal PR is merged, this script will do the same for the &lt;a href=&#34;https://github.com/docker-library/official-images&#34;&gt;official-images&lt;/a&gt; repository. It will clone &lt;a href=&#34;https://github.com/kong/official-images&#34;&gt;Kong&#39;s fork&lt;/a&gt;, create a branch, modify the relevant files automatically, give you a chance to review the changes and press &#34;y&#34;, then it will push the branch and open a browser with the PR to the docker-library repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Pushing a Kong minor release (x.Y.0) update&lt;/h2&gt; &#xA;&lt;p&gt;Not semi-automated yet. Note that minor releases are more likely to require more extensive changes to the Dockerfiles.&lt;/p&gt;</summary>
  </entry>
</feed>