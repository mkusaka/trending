<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T01:54:58Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nestybox/sysbox</title>
    <updated>2022-08-14T01:54:58Z</updated>
    <id>tag:github.com,2022-08-14:/nestybox/sysbox</id>
    <link href="https://github.com/nestybox/sysbox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source, next-generation &#34;runc&#34; that empowers rootless containers to run workloads such as Systemd, Docker, Kubernetes, just like VMs.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;sysbox&#34; src=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/figures/sysbox-ce-header.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/nestybox/sysbox/raw/master/LICENSE&#34;&gt;&lt;img alt=&#34;GitHub license&#34; src=&#34;https://img.shields.io/github/license/nestybox/sysbox&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/nestybox/sysbox&#34;&gt; &lt;img src=&#34;https://img.shields.io/circleci/project/github/badges/shields/master&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nestybox-support.slack.com/join/shared_invite/enQtOTA0NDQwMTkzMjg2LTAxNGJjYTU2ZmJkYTZjNDMwNmM4Y2YxNzZiZGJlZDM4OTc1NGUzZDFiNTM4NzM1ZTA2NDE3NzQ1ODg1YzhmNDQ#&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-FF3386&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker advances container isolation and workloads with acquisition of Nestybox&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Hi everyone, this is Cesar &amp;amp; Rodny, co-founders of &lt;a href=&#34;https://www.nestybox.com&#34;&gt;Nestybox&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We are humbled and excited to announce that Nestybox is now officially part of Docker, Inc! Docker is an excellent home for Sysbox and this will accelerate innovation of Sysbox to advance container isolation and workloads.&lt;/p&gt; &#xA;&lt;p&gt;Please see this &lt;a href=&#34;https://www.docker.com/blog/docker-advances-container-isolation-and-workloads-with-acquisition-of-nestybox/&#34;&gt;blog&lt;/a&gt; and this &lt;a href=&#34;https://www.nestybox.com/docker-nestybox-qa&#34;&gt;Q&amp;amp;A&lt;/a&gt; for more info. Thanks!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sysbox&lt;/strong&gt; is an open-source and free container runtime (a specialized &#34;runc&#34;), developed by &lt;a href=&#34;https://www.nestybox.com&#34;&gt;Nestybox&lt;/a&gt;, that enhances containers in two key ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Improves container isolation:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Linux user-namespace on all containers (i.e., root user in the container has zero privileges on the host).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Virtualizes portions of procfs &amp;amp; sysfs inside the container.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Hides host info inside the container.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Locks the container&#39;s initial mounts, and more.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enables containers to run same workloads as VMs&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;With Sysbox, containers can run system-level software such as systemd, Docker, Kubernetes, K3s, buildx, legacy apps, and more seamlessly &amp;amp; securely.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;This software can run inside Sysbox containers without modification and without using special versions of the software (e.g., rootless variants).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;No privileged containers, no complex images, no tricky entrypoints, no special volume mounts, etc.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Think of it as a &lt;strong&gt;&#34;container supercharger&#34;&lt;/strong&gt;: it enables your exisiting container managers / orchestrators (e.g., Docker, Kubernetes, etc.) to deploy containers that have hardened isolation and can run almost any workload that runs in VMs.&lt;/p&gt; &#xA;&lt;p&gt;Sysbox does this by making the container resemble a VM-like environment as much as possible, using advanced OS virtualization techniques.&lt;/p&gt; &#xA;&lt;p&gt;Unlike alternative runtimes such as Kata and KubeVirt, &lt;strong&gt;it does not use VMs&lt;/strong&gt;. This makes it easier to use (particularly in cloud environments by avoiding nested virtualization), although it does not provide the level of isolation that VM-based runtimes do. See &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#comparison-to-related-technologies&#34;&gt;here&lt;/a&gt; for a comparison.&lt;/p&gt; &#xA;&lt;p&gt;There is no need to learn new tools or modify your existing container images or workflows to take advantage of Sysbox. Simply install it and point your container manager / orchestrator to it to deploy enhanced containers.&lt;/p&gt; &#xA;&lt;p&gt;Sysbox can live side-by-side with other container runtimes on the same host (e.g., the default OCI runc, Kata, etc.) You can easily choose which containers or pods to run with each, depending on your needs.&lt;/p&gt; &#xA;&lt;h2&gt;Demo Videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/kkTmOxl8DhEZiM2fLZNFlYzbo?speed=2&#34;&gt;&#34;VM-like&#34; containers with Docker + Sysbox&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/401488?speed=1.5&#34;&gt;Rootless Kubernetes pods with Sysbox&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#motivation&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#how-it-works&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#comparison-to-related-technologies&#34;&gt;Comparison to Related Technologies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#audience&#34;&gt;Audience&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#sysbox-enterprise-edition&#34;&gt;Sysbox Enterprise Edition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#sysbox-features&#34;&gt;Sysbox Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#system-containers&#34;&gt;System Containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#using-sysbox&#34;&gt;Using Sysbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#under-the-covers&#34;&gt;Under the Covers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#troubleshooting--support&#34;&gt;Troubleshooting &amp;amp; Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#uninstallation&#34;&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#relationship-to-nestybox&#34;&gt;Relationship to Nestybox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#thank-you&#34;&gt;Thank You&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Sysbox is free and open-source, licensed under the Apache License, Version 2.0. See the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Sysbox solves problems such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Enhancing the isolation of containerized microservices (root in the container maps to an uprivileged user on the host).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enabling a highly capable root user inside the container without compromising host security.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Securing CI/CD pipelines by enabling Docker-in-Docker (DinD) or Kubernetes-in-Docker (KinD) without insecure privileged containers or host Docker socket mounts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enabling the use of containers as &#34;VM-like&#34; environments for development, local testing, learning, etc., with strong isolation and the ability to run systemd, Docker, IDEs, and more inside the container.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Running legacy apps inside containers (instead of less efficient VMs).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replacing VMs with an easier, faster, more efficient, and more portable container-based alternative, one that can be deployed across cloud environments easily.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Partitioning bare-metal hosts into multiple isolated compute environments with 2X the density of VMs (i.e., deploy twice as many VM-like containers as VMs on the same hardware at the same performance).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Partitioning cloud instances (e.g., EC2, GCP, etc.) into multiple isolated compute environments without resorting to expensive nested virtualization.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;sysbox&#34; src=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/figures/sysbox-diagram.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Sysbox &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#installation&#34;&gt;installs easily&lt;/a&gt; on Linux hosts (bare-metal, VM, on-prem, cloud, etc.). It works on all mayor cloud-based IaaS and Kubernetes services (e.g., EC2, GCP, GKE, EKS, AKS, Rancher, etc.)&lt;/p&gt; &#xA;&lt;p&gt;Once installed, Sysbox works under the covers: you use Docker, Kubernetes, etc. to deploy containers with it.&lt;/p&gt; &#xA;&lt;p&gt;For example, this simple Docker command creates a container with Sysbox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run --runtime=sysbox-runc -it any_image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You get a well isolated container capable of seamlessly running most software that runs in a VM (e.g., systemd, Docker, Kubernetes, etc).&lt;/p&gt; &#xA;&lt;p&gt;More on how to use Sysbox &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#using-sysbox&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Comparison to Related Technologies&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;sysbox&#34; src=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/figures/sysbox-comparison.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;As shown, Sysbox enables unprivileged containers to run system-level workloads such as systemd, Docker, Kubernetes, etc., seamlessly, while giving you a balanced approach between container isolation, performance, efficiency, and portability.&lt;/p&gt; &#xA;&lt;p&gt;And it does this with minimal configuration changes to your existing infra: just install Sysbox and configure your container manager/orchestrator to launch containers with it, using the image of your choice.&lt;/p&gt; &#xA;&lt;p&gt;Note that while Sysbox hardens the isolation of standard containers and voids the need for insecure privileged containers in many scenarios, it does not (yet) provide the same level of isolation as VM-based alternatives or user-space OSes like gVisor. Therefore, for scenarios where the highest level of isolation is required, alternatives such as KubeVirt may be preferable (at the expense of lower performance and efficiency, and higher complexity and cost).&lt;/p&gt; &#xA;&lt;p&gt;See this &lt;a href=&#34;https://blog.nestybox.com/2020/10/06/related-tech-comparison.html&#34;&gt;blog post&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;h2&gt;Audience&lt;/h2&gt; &#xA;&lt;p&gt;The Sysbox project is intended for anyone looking to experiment, invent, learn, and build systems using &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#system-containers&#34;&gt;system containers&lt;/a&gt;. It&#39;s cutting-edge OS virtualization, and contributions are welcomed.&lt;/p&gt; &#xA;&lt;h2&gt;Sysbox Enterprise Edition&lt;/h2&gt; &#xA;&lt;p&gt;The Sysbox project is &lt;strong&gt;not&lt;/strong&gt; meant for people looking for a commercially supported solution. For such a solution, use the &lt;strong&gt;Sysbox Enterprise Edition (Sysbox-EE)&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sysbox-EE uses Sysbox at its core, but complements it with enterprise-level features for improved security, functionality, and performance, as well as Nestybox support (see next section). It has a 30-day free trial and a paid subscription after that.&lt;/p&gt; &#xA;&lt;p&gt;For more info on Sysbox-EE, refer to the &lt;a href=&#34;https://www.nestybox.com/sysbox-ee&#34;&gt;Nestybox website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sysbox Features&lt;/h2&gt; &#xA;&lt;p&gt;The table below summarizes the key features of the Sysbox container runtime. It also provides a comparison between the Sysbox Community Edition (i.e., this repo) and the Sysbox Enterprise Edition.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;sysbox&#34; src=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/figures/sysbox-features.png&#34; width=&#34;1000&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;More on the Sysbox features &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/features.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More on Sysbox Enterprise &lt;a href=&#34;https://www.nestybox.com/sysbox-ee&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, you can reach us &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/#contact&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;System Containers&lt;/h2&gt; &#xA;&lt;p&gt;We call the containers deployed by Sysbox &lt;strong&gt;system containers&lt;/strong&gt;, to highlight the fact that they can run not just micro-services (as regular containers do), but also system software such as Docker, Kubernetes, Systemd, inner containers, etc.&lt;/p&gt; &#xA;&lt;p&gt;More on system containers &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/concepts.md#system-container&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Host Requirements&lt;/h3&gt; &#xA;&lt;p&gt;The Sysbox host must meet the following requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It must be running one of the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/distro-compat.md&#34;&gt;supported Linux distros&lt;/a&gt; and be a machine with a &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/arch-compat.md&#34;&gt;supported architecture&lt;/a&gt; (e.g., amd64, arm64).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We recommend a minimum of 4 CPUs (e.g., 2 cores with 2 hyperthreads) and 4GB of RAM. Though this is not a hard requirement, smaller configurations may slow down Sysbox.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Sysbox&lt;/h3&gt; &#xA;&lt;p&gt;The method of installation depends on the environment where Sysbox will be installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To install Sysbox on a Kubernetes cluster, use the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/install-k8s.md&#34;&gt;sysbox-deploy-k8s daemonset&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Otherwise, use the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/install-package.md&#34;&gt;Sysbox package&lt;/a&gt; for your distro.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Alternatively, if a package for your distro is not yet available, or if you want to get the latest changes from upstream, you can &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/developers-guide/README.md&#34;&gt;build and install Sysbox from source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using Sysbox&lt;/h2&gt; &#xA;&lt;p&gt;Once Sysbox is installed, you create a container using your container manager or orchestrator (e.g., Docker or Kubernetes) and an image of your choice.&lt;/p&gt; &#xA;&lt;p&gt;Docker command example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --runtime=sysbox-runc --rm -it --hostname my_cont registry.nestybox.com/nestybox/ubuntu-bionic-systemd-docker&#xA;root@my_cont:/#&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kubernetes pod spec example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: ubu-bio-systemd-docker&#xA;  annotations:&#xA;    io.kubernetes.cri-o.userns-mode: &#34;auto:size=65536&#34;&#xA;spec:&#xA;  runtimeClassName: sysbox-runc&#xA;  containers:&#xA;  - name: ubu-bio-systemd-docker&#xA;    image: registry.nestybox.com/nestybox/ubuntu-bionic-systemd-docker&#xA;    command: [&#34;/sbin/init&#34;]&#xA;  restartPolicy: Never&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can choose whatever container image you want, Sysbox places no requirements on the image.&lt;/p&gt; &#xA;&lt;p&gt;Nestybox makes several reference images available in its &lt;a href=&#34;https://hub.docker.com/u/nestybox&#34;&gt;Dockerhub&lt;/a&gt; and &lt;a href=&#34;https://github.com/orgs/nestybox/packages&#34;&gt;GitHub Container Registry&lt;/a&gt; repos. These are images that typically include systemd, Docker, Kubernetes, and more inside the containers. The Dockerfiles are &lt;a href=&#34;https://github.com/nestybox/dockerfiles/tree/master&#34;&gt;here&lt;/a&gt;. Feel free to use and modify per your needs.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We strive to provide good documentation; it&#39;s a key component of the Sysbox project.&lt;/p&gt; &#xA;&lt;p&gt;We have several documents to help you get started and get the best out of Sysbox.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/distro-compat.md&#34;&gt;Sysbox Distro Compatibility Doc&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Distro compatibility requirements. Check this out before installing Sysbox.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/quickstart/README.md&#34;&gt;Sysbox Quick Start Guide&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Provides many examples for using Sysbox. New users should start here.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/README.md&#34;&gt;Sysbox User Guide&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Provides more detailed information on Sysbox installation, configuration, features and design.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.nestybox.com/&#34;&gt;Nestybox blog site&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Articles on using Sysbox to solve real-life problems.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Sysbox is fast and efficient, as described in this &lt;a href=&#34;https://blog.nestybox.com/2020/09/23/perf-comparison.html&#34;&gt;Nestybox blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The containers created by Sysbox have similar performance to those created by the OCI runc (the default runtime for Docker and Kubernetes).&lt;/p&gt; &#xA;&lt;p&gt;Even containers deployed inside the system containers have excellent performance, thought there is a slight overhead for network IO (as expected since packets emitted by inner containers go through an additional network interface / bridge inside the system container).&lt;/p&gt; &#xA;&lt;p&gt;Now, if you use Sysbox to deploy system containers that replace VMs, then the performance and efficiency gains are significant: you can deploy 2X as many system containers as VMs on the same server and get the same performance, and do this with a fraction of the memory and storage consumption. The blog post referenced above has more on this.&lt;/p&gt; &#xA;&lt;h2&gt;Under the Covers&lt;/h2&gt; &#xA;&lt;p&gt;Sysbox was forked from the excellent &lt;a href=&#34;https://github.com/opencontainers/runc&#34;&gt;OCI runc&lt;/a&gt; in early 2019 and it stands on the shoulders of the work done by the OCI runc developers.&lt;/p&gt; &#xA;&lt;p&gt;Having said this, Sysbox adds significant functionality on top. It&#39;s written in Go, and it is currently composed of three components: sysbox-runc, sysbox-fs, and sysbox-mgr.&lt;/p&gt; &#xA;&lt;p&gt;Sysbox uses many OS-virtualization features of the Linux kernel and complements these with OS-virtualization techniques implemented in user-space. These include using all Linux namespaces (in particular the user-namespace), partial virtualization of procfs and sysfs, selective syscall trapping, and more.&lt;/p&gt; &#xA;&lt;p&gt;More on Sysbox&#39;s design can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/design.md&#34;&gt;Sysbox user guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Sysbox does not use hardware virtualization&lt;/h3&gt; &#xA;&lt;p&gt;Though the containers generated by Sysbox resemble virtual machines in some ways (e.g., you can run as root, run multiple services, and deploy Docker and K8s inside), Sysbox does &lt;strong&gt;not&lt;/strong&gt; use hardware virtualization.&lt;/p&gt; &#xA;&lt;p&gt;Sysbox is a pure OS-virtualization technology meant to create containers that can run applications as well as system-level software, easily and securely.&lt;/p&gt; &#xA;&lt;p&gt;This makes the containers created by Sysbox fast, efficient, and portable (i.e., they aren&#39;t tied to a hypervisor).&lt;/p&gt; &#xA;&lt;p&gt;Isolation wise, it&#39;s fair to say that Sysbox containers provide stronger isolation than regular Docker containers (by virtue of using the Linux user-namespace and light-weight OS shim), but weaker isolation than VMs (by sharing the Linux kernel among containers).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to Sysbox, whether they are small documentation changes, bug fixes, or feature additions. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/developers-guide/README.md&#34;&gt;developer&#39;s guide&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;See the User Guide&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/security.md&#34;&gt;Security Chapter&lt;/a&gt; for info on how Sysbox secures containers.&lt;/p&gt; &#xA;&lt;p&gt;If you find bugs or issues that may expose a Sysbox vulnerability, please report these by sending an email to &lt;a href=&#34;mailto:security@nestybox.com&#34;&gt;security@nestybox.com&lt;/a&gt;. Please do not open security issues in this repo. Thanks!&lt;/p&gt; &#xA;&lt;p&gt;In addition, a few vulnerabilities have recently been found in the Linux kernel that in some cases reduce or negate the enhanced isolation provided by Sysbox containers. Fortunately they are all fixed in recent Linux kernels. See the Sysbox User Guide&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/security-cve.md&#34;&gt;Vulnerabilities &amp;amp; CVEs chapter&lt;/a&gt; for more info, and reach out on the &lt;a href=&#34;https://nestybox-support.slack.com/join/shared_invite/enQtOTA0NDQwMTkzMjg2LTAxNGJjYTU2ZmJkYTZjNDMwNmM4Y2YxNzZiZGJlZDM4OTc1NGUzZDFiNTM4NzM1ZTA2NDE3NzQ1ODg1YzhmNDQ#/&#34;&gt;Sysbox Slack channel&lt;/a&gt; for further questions.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting &amp;amp; Support&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/troubleshoot.md&#34;&gt;Troubleshooting document&lt;/a&gt; and to the &lt;a href=&#34;https://github.com/nestybox/sysbox/issues&#34;&gt;issues&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;Reach us at our &lt;a href=&#34;https://nestybox-support.slack.com/join/shared_invite/enQtOTA0NDQwMTkzMjg2LTAxNGJjYTU2ZmJkYTZjNDMwNmM4Y2YxNzZiZGJlZDM4OTc1NGUzZDFiNTM4NzM1ZTA2NDE3NzQ1ODg1YzhmNDQ#/&#34;&gt;slack channel&lt;/a&gt; for any questions.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstallation&lt;/h2&gt; &#xA;&lt;p&gt;Prior to uninstalling Sysbox, make sure all containers deployed with it are stopped and removed.&lt;/p&gt; &#xA;&lt;p&gt;The method of uninstallation depends on the method used to install Sysbox:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To uninstall Sysbox on a Kubernetes cluster, follow &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/install-k8s.md#uninstallation&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Otherwise, to uninstall the Sysbox package, follow &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/user-guide/install-package.md#uninstallation&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If Sysbox was built and installed from source, follow &lt;a href=&#34;https://raw.githubusercontent.com/nestybox/sysbox/master/docs/developers-guide/build.md#cleanup--uninstall&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The following is a list of features in the Sysbox roadmap.&lt;/p&gt; &#xA;&lt;p&gt;We list these here so that our users can get a better idea of where we are going and can give us feedback on which of these they like best (or least).&lt;/p&gt; &#xA;&lt;p&gt;Here is a short list; the Sysbox issue tracker has many more.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for more Linux distros.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;More improvements to procfs and sysfs virtualization.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Continued improvements to container isolation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Exposing host devices inside system containers with proper permissions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Relationship to Nestybox&lt;/h2&gt; &#xA;&lt;p&gt;Sysbox was initially developed by &lt;a href=&#34;https://www.nestybox.com&#34;&gt;Nestybox&lt;/a&gt;, and Nestybox is the main sponsor of the Sysbox open-source project.&lt;/p&gt; &#xA;&lt;p&gt;Having said this, we encourage participation from the community to help evolve and improve it, with the goal of increasing the use cases and benefits it enables. External maintainers and contributors are welcomed.&lt;/p&gt; &#xA;&lt;p&gt;Nestybox uses Sysbox as the core of it&#39;s Sysbox enterprise product (Sysbox-EE), which consists of Sysbox plus proprietary features meant for enterprise use.&lt;/p&gt; &#xA;&lt;p&gt;To ensure synergy between the Sysbox project and commercial entities such as Nestybox, we use the following criteria when considering adding functionality to Sysbox:&lt;/p&gt; &#xA;&lt;p&gt;Any features that mainly benefit individual practitioners are made part of the Sysbox open-source project. Any features that mainly address enterprise-level needs are reserved for the Sysbox Enterprise Edition.&lt;/p&gt; &#xA;&lt;p&gt;The Sysbox project maintainers will make this determination on a feature by feature basis, with total transparency. The goal is to create a balanced approach that enables the Sysbox open-source community to benefit and thrive while creating opportunities for Nestybox to create a healthy viable business around the technology.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Slack: &lt;a href=&#34;https://nestybox-support.slack.com/join/shared_invite/enQtOTA0NDQwMTkzMjg2LTAxNGJjYTU2ZmJkYTZjNDMwNmM4Y2YxNzZiZGJlZDM4OTc1NGUzZDFiNTM4NzM1ZTA2NDE3NzQ1ODg1YzhmNDQ#/&#34;&gt;Nestybox Slack Workspace&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Email: &lt;a href=&#34;mailto:contact@nestybox.com&#34;&gt;contact@nestybox.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We are available from Monday-Friday, 9am-5pm Pacific Time.&lt;/p&gt; &#xA;&lt;h2&gt;Thank You&lt;/h2&gt; &#xA;&lt;p&gt;We thank you &lt;strong&gt;very much&lt;/strong&gt; for using and/or contributing to Sysbox. We hope you find it interesting and that it helps you use containers in new and more powerful ways.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>docker-library/wordpress</title>
    <updated>2022-08-14T01:54:58Z</updated>
    <id>tag:github.com,2022-08-14:/docker-library/wordpress</id>
    <link href="https://github.com/docker-library/wordpress" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker Official Image packaging for WordPress&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/docker-library/wordpress&#34;&gt;https://github.com/docker-library/wordpress&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Maintained by: &lt;a href=&#34;https://github.com/docker-library/wordpress&#34;&gt;the Docker Community&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is the Git repo of the &lt;a href=&#34;https://github.com/docker-library/official-images#what-are-official-images&#34;&gt;Docker &#34;Official Image&#34;&lt;/a&gt; for &lt;a href=&#34;https://hub.docker.com/_/wordpress/&#34;&gt;&lt;code&gt;wordpress&lt;/code&gt;&lt;/a&gt; (not to be confused with any official &lt;code&gt;wordpress&lt;/code&gt; image provided by &lt;code&gt;wordpress&lt;/code&gt; upstream). See &lt;a href=&#34;https://hub.docker.com/_/wordpress/&#34;&gt;the Docker Hub page&lt;/a&gt; for the full readme on how to use this Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://hub.docker.com/_/wordpress/&#34;&gt;full image description on Docker Hub&lt;/a&gt; is generated/maintained over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;the docker-library/docs repository&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/wordpress&#34;&gt;the &lt;code&gt;wordpress&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See a change merged here that doesn&#39;t show up on Docker Hub yet?&lt;/h2&gt; &#xA;&lt;p&gt;For more information about the full official images change lifecycle, see &lt;a href=&#34;https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what&#34;&gt;the &#34;An image&#39;s source changed in Git, now what?&#34; FAQ entry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For outstanding &lt;code&gt;wordpress&lt;/code&gt; image PRs, check &lt;a href=&#34;https://github.com/docker-library/official-images/labels/library%2Fwordpress&#34;&gt;PRs with the &#34;library/wordpress&#34; label on the official-images repository&lt;/a&gt;. For the current &#34;source of truth&#34; for &lt;a href=&#34;https://hub.docker.com/_/wordpress/&#34;&gt;&lt;code&gt;wordpress&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/wordpress&#34;&gt;the &lt;code&gt;library/wordpress&lt;/code&gt; file in the official-images repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/wordpress/actions?query=workflow%3A%22GitHub+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/docker-library/wordpress/GitHub%20CI/master?label=GitHub%20CI&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/update.sh/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/update.sh/job/wordpress.svg?label=Automated%20update.sh&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Badges&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;(per-arch)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/amd64/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/amd64/job/wordpress.svg?label=amd64&#34; alt=&#34;amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/wordpress.svg?label=arm32v5&#34; alt=&#34;arm32v5 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/wordpress.svg?label=arm32v6&#34; alt=&#34;arm32v6 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/wordpress.svg?label=arm32v7&#34; alt=&#34;arm32v7 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/wordpress.svg?label=arm64v8&#34; alt=&#34;arm64v8 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/i386/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/i386/job/wordpress.svg?label=i386&#34; alt=&#34;i386 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/wordpress.svg?label=mips64le&#34; alt=&#34;mips64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/wordpress.svg?label=ppc64le&#34; alt=&#34;ppc64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/s390x/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/s390x/job/wordpress.svg?label=s390x&#34; alt=&#34;s390x build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/put-shared/job/light/job/wordpress/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/put-shared/job/light/job/wordpress.svg?label=put-shared&#34; alt=&#34;put-shared build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh --&gt;</summary>
  </entry>
  <entry>
    <title>quickemu-project/quickemu</title>
    <updated>2022-08-14T01:54:58Z</updated>
    <id>tag:github.com,2022-08-14:/quickemu-project/quickemu</id>
    <link href="https://github.com/quickemu-project/quickemu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quickly create and run optimised Windows, macOS and Linux desktop virtual machines.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/quickemu-project/quickemu/master/.github/logo.png&#34; alt=&#34;Quickemu&#34; width=&#34;256&#34;&gt; &lt;br&gt; Quickemu &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;Quickly create and run optimised Windows, macOS and Linux desktop virtual machines.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/quickemu-project/quickemu/master/.github/screenshot.png&#34; alt=&#34;Quickemu Screenshot&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Made with 💝 for &lt;img src=&#34;https://raw.githubusercontent.com/quickemu-project/quickemu/master/.github/tux.png&#34; align=&#34;top&#34; width=&#34;18&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Quickly create and run highly optimised desktop virtual machines for Linux, macOS and Windows; with just two commands. You decide what operating system you want to run and Quickemu will figure out the best way to do it for you. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget ubuntu-mate 22.04&#xA;quickemu --vm ubuntu-mate-22.04-.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The original objective of the project was to enable quick testing of Linux distributions where the virtual machine configurations can be stored anywhere, such as external USB storage or your home directory, and no elevated permissions are required to run the virtual machines. &lt;strong&gt;Quickemu now also includes comprehensive support for macOS and Windows&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt; Monterey, Big Sur, Catalina, Mojave &amp;amp; High Sierra&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; 8.1, 10 and 11 including TPM 2.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ubuntu.com/desktop&#34;&gt;Ubuntu&lt;/a&gt; and all the &lt;strong&gt;&lt;a href=&#34;https://ubuntu.com/download/flavours&#34;&gt;official Ubuntu flavours&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Over 360 operating system editions are supported!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full SPICE support including host/guest clipboard sharing&lt;/li&gt; &#xA; &lt;li&gt;VirtIO-webdavd file sharing for Linux and Windows guests&lt;/li&gt; &#xA; &lt;li&gt;VirtIO-9p file sharing for Linux and macOS guests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.qemu.org/Features/GuestAgent&#34;&gt;QEMU Guest Agent support&lt;/a&gt;; provides access to a system-level agent via standard QMP commands&lt;/li&gt; &#xA; &lt;li&gt;Samba file sharing for Linux, macOS and Windows guests (&lt;em&gt;if &lt;code&gt;smbd&lt;/code&gt; is installed on the host&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;VirGL acceleration&lt;/li&gt; &#xA; &lt;li&gt;USB device pass-through&lt;/li&gt; &#xA; &lt;li&gt;Smartcard pass-through&lt;/li&gt; &#xA; &lt;li&gt;Automatic SSH port forwarding to guests&lt;/li&gt; &#xA; &lt;li&gt;Network port forwarding&lt;/li&gt; &#xA; &lt;li&gt;Full duplex audio&lt;/li&gt; &#xA; &lt;li&gt;Braille support&lt;/li&gt; &#xA; &lt;li&gt;EFI (with or without SecureBoot) and Legacy BIOS boot&lt;/li&gt; &#xA; &lt;li&gt;Graphical user interfaces available&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Quickemu is a wrapper for the excellent &lt;a href=&#34;https://www.qemu.org/&#34;&gt;QEMU&lt;/a&gt; that attempts to automatically &lt;em&gt;&#34;do the right thing&#34;&lt;/em&gt;, rather than expose exhaustive configuration options.&lt;/p&gt; &#xA;&lt;p&gt;We have a Discord for this project: &lt;a href=&#34;https://discord.gg/sNmz3uw&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/712850672223125565?color=0C306A&amp;amp;label=WimpysWorld%20Discord&amp;amp;logo=Discord&amp;amp;logoColor=ffffff&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See this (old) video where I explain some of my motivations for creating Quickemu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AOTYWEgw0hI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/AOTYWEgw0hI/0.jpg&#34; alt=&#34;Replace VirtualBox with Bash &amp;amp; QEMU&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qemu.org/&#34;&gt;QEMU&lt;/a&gt; (&lt;em&gt;6.0.0 or newer&lt;/em&gt;) &lt;strong&gt;with GTK, SDL, SPICE &amp;amp; VirtFS support&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;bash&lt;/a&gt; (&lt;em&gt;4.0 or newer&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/coreutils/&#34;&gt;Coreutils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tianocore/edk2&#34;&gt;EDK II&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/grep/&#34;&gt;grep&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.linuxfoundation.org/lsb/start&#34;&gt;LSB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/procps-ng/procps&#34;&gt;procps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;python3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg/tree/master/Utilities/macrecovery&#34;&gt;macrecovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cdrtools.sourceforge.net/private/cdrecord.html&#34;&gt;mkisofs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gregkh/usbutils&#34;&gt;usbutils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/karelzak/util-linux&#34;&gt;util-linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/sed/&#34;&gt;sed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/spice/spice-gtk&#34;&gt;spicy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stefanberger/swtpm&#34;&gt;swtpm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/wget/&#34;&gt;Wget&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/xdg-user-dirs/&#34;&gt;xdg-user-dirs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/xorg/app/xrandr&#34;&gt;xrandr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://zsync.moria.org.uk/&#34;&gt;zsync&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.info-zip.org/UnZip.html&#34;&gt;unzip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Requirements&lt;/h3&gt; &#xA;&lt;p&gt;For Ubuntu, Arch and nixos systems the &lt;a href=&#34;https://launchpad.net/~flexiondotorg/+archive/ubuntu/quickemu&#34;&gt;ppa&lt;/a&gt;, &lt;a href=&#34;https://aur.archlinux.org/packages/quickemu&#34;&gt;AUR&lt;/a&gt; or &lt;a href=&#34;https://github.com/NixOS/nixpkgs/tree/master/pkgs/development/quickemu&#34;&gt;nix&lt;/a&gt; packaging will take care of the dependencies. For other host distributions or operating systems it will be necessary to install the above requirements or their equivalents.&lt;/p&gt; &#xA;&lt;p&gt;These examples may save a little typing&lt;/p&gt; &#xA;&lt;p&gt;Debian:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install qemu bash coreutils ovmf grep jq lsb procps python3 genisoimage usbutils util-linux sed spice-client-gtk swtpm wget xdg-user-dirs zsync unzip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install qemu bash coreutils edk2-tools grep jq lsb procps python3 genisoimage usbutils util-linux sed spice-gtk-tools swtpm wget xdg-user-dirs xrandr unzip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MacOS:&lt;/p&gt; &#xA;&lt;p&gt;This is a work in progress (see &lt;a href=&#34;https://github.com/quickemu-project/quickemu/issues/248&#34;&gt;issue 248&lt;/a&gt; for other steps and changes that may enable running on MacOS)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install qemu bash coreutils grep jq python@3.10 cdrtools gnu-sed spice-gtk wget zsync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Graphical User Interfaces&lt;/h2&gt; &#xA;&lt;p&gt;While &lt;code&gt;quickemu&lt;/code&gt; and &lt;code&gt;quickget&lt;/code&gt; are designed for the terminal, a graphical user interface is also available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/quickgui/quickgui&#34;&gt;Quickgui&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/marxjohnson&#34;&gt;Mark Johnson&lt;/a&gt; and &lt;a href=&#34;https://github.com/ymauray&#34;&gt;Yannick Mauray&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many thanks to &lt;a href=&#34;https://github.com/Lukewh&#34;&gt;Luke Wesley-Holley&lt;/a&gt; and &lt;a href=&#34;https://github.com/daPhipz&#34;&gt;Philipp Kiemle&lt;/a&gt; for creating the &lt;strong&gt;&lt;a href=&#34;https://github.com/Lukewh/quickemu-icons&#34;&gt;Quickemu icons&lt;/a&gt;&lt;/strong&gt; 🎨&lt;/p&gt; &#xA;&lt;h3&gt;Quickgui for Ubuntu&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:yannick-mauray/quickgui&#xA;sudo apt update&#xA;sudo apt install quickgui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Install Quickemu&lt;/h1&gt; &#xA;&lt;h2&gt;Ubuntu&lt;/h2&gt; &#xA;&lt;p&gt;Quickemu is available from a PPA for Ubuntu users. The Quickemu PPA also includes a back port of QEMU 6.0.0 for 20.04 (Focal) and 21.04 (Hirsute). To install Quickemu and all the dependencies run the following in a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-add-repository ppa:flexiondotorg/quickemu&#xA;sudo apt update&#xA;sudo apt install quickemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Other Linux&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth=1 https://github.com/wimpysworld/quickemu&#xA;cd quickemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now install all the &lt;strong&gt;Requirements&lt;/strong&gt; documented above.&lt;/p&gt; &#xA;&lt;h3&gt;Other sources&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/&#34;&gt;Repology.org&lt;/a&gt; found the following releases have been packaged.&lt;/p&gt; &#xA;&lt;h4&gt;Quickemu&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/quickemu/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/quickemu.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Quickgui&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/quickgui/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/quickgui.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ubuntu Guest&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; will automatically download an Ubuntu release and create the virtual machine configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget ubuntu 22.04&#xA;quickemu --vm ubuntu-22.04.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete the installation as normal.&lt;/li&gt; &#xA; &lt;li&gt;Post-install: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the SPICE agent (&lt;code&gt;spice-vdagent&lt;/code&gt;) to enable copy/paste and USB redirection &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;sudo apt install spice-vdagent&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Install the SPICE WebDAV agent (&lt;code&gt;spice-webdavd&lt;/code&gt;) to enable file sharing. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;sudo apt install spice-webdavd&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ubuntu devel (daily-live) images&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; can also download/refresh devel images via &lt;code&gt;zsync&lt;/code&gt; for Ubuntu developers and testers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget ubuntu devel&#xA;quickemu --vm ubuntu-devel.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;quickget ubuntu devel&lt;/code&gt; to refresh your daily development image as often as you like, it will even automatically switch to a new series.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu Flavours&lt;/h3&gt; &#xA;&lt;p&gt;All the official Ubuntu flavours are supported, just replace &lt;code&gt;ubuntu&lt;/code&gt; with your preferred flavour.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;kubuntu&lt;/code&gt; (Kubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lubuntu&lt;/code&gt; (Lubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu-budgie&lt;/code&gt; (Ubuntu Budgie)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntukylin&lt;/code&gt; (Ubuntu Kylin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu-mate&lt;/code&gt; (Ubuntu MATE)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntustudio&lt;/code&gt; (Ubuntu Studio)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu&lt;/code&gt; (Ubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xubuntu&lt;/code&gt; (Xubuntu)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Operating Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; also supports:&lt;/p&gt; &#xA;&lt;h2&gt;Other Operating Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; also supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;alma&lt;/code&gt; (Alma Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alpine&lt;/code&gt; (Alpine Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;android&lt;/code&gt; (Android x86)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;archlinux&lt;/code&gt; (Arch Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arcolinux&lt;/code&gt; (Arco Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;batocera&lt;/code&gt; (Batocera)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cachyos&lt;/code&gt; (CachyOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;centos-stream&lt;/code&gt; (CentOS Stream)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debian&lt;/code&gt; (Debian)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;deepin&lt;/code&gt; (Deepin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;devuan&lt;/code&gt; (Devuan)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dragonflybsd&lt;/code&gt; (DragonFlyBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;elementary&lt;/code&gt; (elementary OS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;endeavouros&lt;/code&gt; (EndeavourOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fedora&lt;/code&gt; (Fedora)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;freebsd&lt;/code&gt; (FreeBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;freedos&lt;/code&gt; (FreeDOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;garuda&lt;/code&gt; (Garuda Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gentoo&lt;/code&gt; (Gentoo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghostbsd&lt;/code&gt; (GhostBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;haiku&lt;/code&gt; (Haiku)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kali&lt;/code&gt; (Kali)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kdeneon&lt;/code&gt; (KDE Neon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kolibrios&lt;/code&gt; (KolibriOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;linuxmint&lt;/code&gt; (Linux Mint)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lmde&lt;/code&gt; (Linux Mint Debian Edition)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;manjaro&lt;/code&gt; (Manjaro)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mxlinux&lt;/code&gt; (MX Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;netboot&lt;/code&gt; (netboot.xyz)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;netbsd&lt;/code&gt; (NetBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nixos&lt;/code&gt; (NixOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openbsd&lt;/code&gt; (OpenBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opensuse&lt;/code&gt; (openSUSE)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;oraclelinux&lt;/code&gt; (Oracle Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;popos&lt;/code&gt; (Pop!_OS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;regolith&lt;/code&gt; (Regolith Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rockylinux&lt;/code&gt; (Rocky Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;slackware&lt;/code&gt; (Slackware)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;solus&lt;/code&gt; (Solus)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tails&lt;/code&gt; (Tails)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;void&lt;/code&gt; (Void Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zorin&lt;/code&gt; (Zorin OS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or you can download a Linux image and manually create a VM configuration.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download a .iso image of a Linux distribution&lt;/li&gt; &#xA; &lt;li&gt;Create a VM configuration file; for example &lt;code&gt;debian-bullseye.conf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guest_os=&#34;linux&#34;&#xA;disk_img=&#34;debian-bullseye/disk.qcow2&#34;&#xA;iso=&#34;debian-bullseye/firmware-11.0.0-amd64-DVD-1.iso&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;quickemu&lt;/code&gt; to start the virtual machine:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm debian-bullseye.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete the installation as normal.&lt;/li&gt; &#xA; &lt;li&gt;Post-install: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the SPICE agent (&lt;code&gt;spice-vdagent&lt;/code&gt;) to enable copy/paste and USB redirection.&lt;/li&gt; &#xA;   &lt;li&gt;Install the SPICE WebDAV agent (&lt;code&gt;spice-webdavd&lt;/code&gt;) to enable file sharing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;macOS Guest&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; automatically downloads a macOS recovery image and creates a virtual machine configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget macos catalina&#xA;quickemu --vm macos-catalina.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;macOS &lt;code&gt;high-sierra&lt;/code&gt;, &lt;code&gt;mojave&lt;/code&gt;, &lt;code&gt;catalina&lt;/code&gt;, &lt;code&gt;big-sur&lt;/code&gt; and &lt;code&gt;monterey&lt;/code&gt; are supported.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use cursor keys and enter key to select the &lt;strong&gt;macOS Base System&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;From &lt;strong&gt;macOS Utilities&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Disk Utility&lt;/strong&gt; and &lt;strong&gt;Continue&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;On macOS Catalina, Big Sur &amp;amp; Monterey &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Select &lt;code&gt;Apple Inc. VirtIO Block Media&lt;/code&gt; from the list and click &lt;strong&gt;Erase&lt;/strong&gt;.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;On macOS Mojave and High Sierra &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Select &lt;code&gt;QEMU HARDDISK Media&lt;/code&gt; (~103.08GB) from the list and click &lt;strong&gt;Erase&lt;/strong&gt;.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Enter a &lt;code&gt;Name:&lt;/code&gt; for the disk and click &lt;strong&gt;Erase&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Done&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Close Disk Utility&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;From &lt;strong&gt;macOS Utilities&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Reinstall macOS&lt;/strong&gt; and &lt;strong&gt;Continue&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Complete the installation as you normally would. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On the first reboot use cursor keys and enter key to select &lt;strong&gt;macOS Installer&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;On the subsequent reboots use cursor keys and enter key to select the disk you named&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The default macOS configuration looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guest_os=&#34;macos&#34;&#xA;img=&#34;macos-catalina/RecoveryImage.img&#34;&#xA;disk_img=&#34;macos-catalina/disk.qcow2&#34;&#xA;macos_release=&#34;catalina&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;guest_os=&#34;macos&#34;&lt;/code&gt; instructs Quickemu to optimise for macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macos_release=&#34;catalina&#34;&lt;/code&gt; instructs Quickemu to optimise for a particular macOS release. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example VirtIO Network and Memory Ballooning are available in Big Sur and newer, but not previous releases.&lt;/li&gt; &#xA;   &lt;li&gt;And VirtIO Block Media (disks) are supported/stable in Catalina and newer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS compatibility&lt;/h3&gt; &#xA;&lt;p&gt;There are some considerations when running macOS via Quickemu.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported macOS releases: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;High Sierra&lt;/li&gt; &#xA;   &lt;li&gt;Mojave&lt;/li&gt; &#xA;   &lt;li&gt;Catalina &lt;strong&gt;(Recommended)&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Big Sur&lt;/li&gt; &#xA;   &lt;li&gt;Monterey&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quickemu&lt;/code&gt; will automatically download the required &lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg&#34;&gt;OpenCore&lt;/a&gt; bootloader and OVMF firmware from &lt;a href=&#34;https://github.com/kholia/OSX-KVM&#34;&gt;OSX-KVM&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Optimised by default, but no GPU acceleration is available. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Host CPU vendor is detected and guest CPU is optimised accordingly.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2019/06/macos-qemu-guest/&#34;&gt;VirtIO Block Media&lt;/a&gt; is used for the system disk where supported.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://philjordan.eu/osx-virt/&#34;&gt;VirtIO &lt;code&gt;usb-tablet&lt;/code&gt;&lt;/a&gt; is used for the mouse.&lt;/li&gt; &#xA;   &lt;li&gt;VirtIO Network (&lt;code&gt;virtio-net&lt;/code&gt;) is supported and enabled on macOS Big Sur and newer but previous releases use &lt;code&gt;vmxnet3&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;VirtIO Memory Ballooning is supported and enabled on macOS Big Sur and newer but disabled for other support macOS releases.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;USB host and SPICE pass-through is: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UHCI (USB 2.0) on macOS Catalina and earlier.&lt;/li&gt; &#xA;   &lt;li&gt;XHCI (USB 3.0) on macOS Big Sur and newer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Display resolution can only be changed via macOS System Preferences.&lt;/li&gt; &#xA; &lt;li&gt;Full Duplex audio works on macOS High Sierra, Mojave and Catalina. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;macOS Big Sur and Monterey have no audio at all&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;File sharing between guest and host is available via &lt;a href=&#34;https://wiki.qemu.org/Documentation/9psetup&#34;&gt;virtio-9p&lt;/a&gt; and &lt;a href=&#34;https://gitlab.gnome.org/GNOME/phodav/-/merge_requests/24&#34;&gt;SPICE webdavd&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy/paste via SPICE agent is &lt;strong&gt;not available on macOS&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Windows 8.1, 10 &amp;amp; 11 Guests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; can automatically download Windows 8.1, &lt;a href=&#34;https://www.microsoft.com/en-gb/software-download/windows10ISO&#34;&gt;Windows 10&lt;/a&gt; and &lt;a href=&#34;https://www.microsoft.com/en-gb/software-download/windows11&#34;&gt;Windows 11&lt;/a&gt; along with the &lt;a href=&#34;https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/&#34;&gt;VirtIO drivers for Windows&lt;/a&gt; and creates a virtual machine configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget windows 11&#xA;quickemu --vm windows-11.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete the installation as you normally would.&lt;/li&gt; &#xA; &lt;li&gt;All relevant drivers and services should be installed automatically.&lt;/li&gt; &#xA; &lt;li&gt;A local adminstrator user account is automatically created, with these credentials: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Username: &lt;code&gt;Quickemu&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Password: &lt;code&gt;quickemu&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Regional versions&lt;/h3&gt; &#xA;&lt;p&gt;By default &lt;code&gt;quickget&lt;/code&gt; will download the &lt;em&gt;&#34;English International&#34;&lt;/em&gt; release, but you can optionally specify one of the supported languages: For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget windows 11 &#34;Chinese (Traditional)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default Windows 11 configuration looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guest_os=&#34;windows&#34;&#xA;disk_img=&#34;windows-11/disk.qcow2&#34;&#xA;iso=&#34;windows-11/Win11_EnglishInternational_x64.iso&#34;&#xA;fixed_iso=&#34;windows-11/virtio-win.iso&#34;&#xA;tpm=&#34;on&#34;&#xA;secureboot=&#34;on&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;guest_os=&#34;windows&#34;&lt;/code&gt; instructs &lt;code&gt;quickemu&lt;/code&gt; to optimise for Windows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fixed_iso=&lt;/code&gt; specifies the ISO image that provides VirtIO drivers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tpm=&#34;on&#34;&lt;/code&gt; instructs &lt;code&gt;quickemu&lt;/code&gt; to create a software emulated TPM device using &lt;code&gt;swtpm&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;SPICE&lt;/h1&gt; &#xA;&lt;p&gt;The following features are available while using the SPICE protocol:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy/paste between the guest and host&lt;/li&gt; &#xA; &lt;li&gt;Host file sharing to the guest&lt;/li&gt; &#xA; &lt;li&gt;USB device redirection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use SPICE add &lt;code&gt;--display spice&lt;/code&gt; to the Quickemu invocation, this requires that the &lt;code&gt;spicy&lt;/code&gt; client is installed, available from the &lt;code&gt;spice-client-gtk&lt;/code&gt; package in Debian/Ubuntu.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04.conf --display spice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable copy/paste with a Windows guest, install &lt;a href=&#34;https://www.spice-space.org/download.html&#34;&gt;SPICE Windows guest tools&lt;/a&gt; in the guest VM.&lt;/p&gt; &#xA;&lt;h2&gt;Headless&lt;/h2&gt; &#xA;&lt;p&gt;To start a VM with SPICE enabled, but no display attached use &lt;code&gt;--display none&lt;/code&gt;. This requires that the &lt;code&gt;spicy&lt;/code&gt; client is installed, available from the &lt;code&gt;spice-client-gtk&lt;/code&gt; package in Debian/Ubuntu to connect to the running VM&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04.conf --display none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;.ports&lt;/code&gt; file in the VM directory to lookup what SSH and SPICE ports the VM is connected to.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat ubuntu-22.04/ubuntu-22.04.ports&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If, for example, the SSH port is set to 22220, and assuming your VM has a started SSH service (details vary by OS), you can typically SSH into it from the host as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh -p 22220 your_vm_user@localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Accessibility&lt;/h1&gt; &#xA;&lt;p&gt;Qemu provides support for using BrlAPI to display braille output on a real or fake device.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04.conf --braille --display sdl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;BIOS and EFI&lt;/h1&gt; &#xA;&lt;p&gt;Since Quickemu 2.1.0 &lt;code&gt;efi&lt;/code&gt; is the default boot option. If you want to override this behaviour then add the following line to you VM configuration to enable legacy BIOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boot=&#34;legacy&#34;&lt;/code&gt; - Enable Legacy BIOS boot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tuning CPU cores, RAM &amp;amp; disks&lt;/h1&gt; &#xA;&lt;p&gt;By default, Quickemu will calculate the number of CPUs cores and RAM to allocate to a VM based on the specifications of your host computer. You can override this default behaviour and tune the VM configuration to your liking.&lt;/p&gt; &#xA;&lt;p&gt;Add additional lines to your virtual machine configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cpu_cores=&#34;4&#34;&lt;/code&gt; - Specify the number of CPU cores allocated to the VM&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ram=&#34;4G&#34;&lt;/code&gt; - Specify the amount of RAM to allocate to the VM&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disk_size=&#34;16G&#34;&lt;/code&gt; - Specify the size of the virtual disk allocated to the VM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disk preallocation&lt;/h2&gt; &#xA;&lt;p&gt;Preallocation mode (allowed values: &lt;code&gt;off&lt;/code&gt; (default), &lt;code&gt;metadata&lt;/code&gt;, &lt;code&gt;falloc&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;). An image with preallocated metadata is initially larger but can improve performance when the image needs to grow.&lt;/p&gt; &#xA;&lt;p&gt;Specify what disk preallocation should be used, if any, when creating the system disk image by adding a line like this to your VM configuration.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;preallocation=&#34;metadata&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CD-ROM disks&lt;/h2&gt; &#xA;&lt;p&gt;If you want to expose an ISO image from the host to guest add the following line to the VM configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fixed_iso=&#34;/path/to/image.iso&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Floppy disks&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re like &lt;a href=&#34;https://popey.com&#34;&gt;Alan Pope&lt;/a&gt; you&#39;ll probably want to mount a floppy disk image in the guest. To do so add the following line to the VM configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;floppy=&#34;/path/to/floppy.img&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;File Sharing&lt;/h1&gt; &#xA;&lt;p&gt;All File Sharing options will only expose &lt;code&gt;~/Public&lt;/code&gt; (or localised variations) for the current user to the guest VMs.&lt;/p&gt; &#xA;&lt;h2&gt;Samba 🐧 🍏 🪟&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;code&gt;smbd&lt;/code&gt; is available on the host, Quickemu will automatically enable the built-in QEMU support for exposing a Samba share from the host to the guest.&lt;/p&gt; &#xA;&lt;p&gt;You can install the minimal Samba components on Ubuntu using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install --no-install-recommends samba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything is set up correctly, the &lt;code&gt;smbd&lt;/code&gt; address will be printed when the virtual machine is started. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; - smbd:     On guest: smb://10.0.2.4/qemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using a Windows guest, right-click on &#34;This PC&#34;, click &#34;Add a network location&#34;, and paste this address, removing &lt;code&gt;smb:&lt;/code&gt; and replacing forward slashes with backslashes (in this example &lt;code&gt;\\10.0.2.4\qemu&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;SPICE WebDAV 🐧 🪟&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;VirtIO-9P 🐧 🍏&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Network port forwarding&lt;/h1&gt; &#xA;&lt;p&gt;Add an additional line to your virtual machine configuration. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;port_forwards=(&#34;8123:8123&#34; &#34;8888:80&#34;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the example above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Port 8123 on the host is forwarded to port 8123 on the guest.&lt;/li&gt; &#xA; &lt;li&gt;Port 8888 on the host is forwarded to port 80 on the guest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Bridged networking&lt;/h1&gt; &#xA;&lt;p&gt;Connect your virtual machine to a preconfigured network bridge. Add an additional line to your virtual machine configuration&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bridge=&#34;br0&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;USB redirection&lt;/h1&gt; &#xA;&lt;p&gt;Quickemu supports USB redirection via SPICE pass-through and host pass-through.&lt;/p&gt; &#xA;&lt;h2&gt;SPICE redirection (recommended)&lt;/h2&gt; &#xA;&lt;p&gt;Using SPICE for USB pass-through is easiest as it doesn&#39;t require any elevated permission, start Quickemu with &lt;code&gt;--display spice&lt;/code&gt; and then select &lt;code&gt;Input&lt;/code&gt; -&amp;gt; &lt;code&gt;Select USB Device for redirection&lt;/code&gt; from the menu to choose which device(s) you want to attach to the guest.&lt;/p&gt; &#xA;&lt;h2&gt;Host redirection &lt;strong&gt;NOT Recommended&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;USB host redirection is not recommended&lt;/strong&gt;, it is provided purely for backwards compatibility to older versions of Quickemu. Using SPICE is preferred, see above.&lt;/p&gt; &#xA;&lt;p&gt;Add an additional line to your virtual machine configuration. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;usb_devices=(&#34;046d:082d&#34; &#34;046d:085e&#34;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the example above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The USB device with vendor_id 046d and product_id 082d will be exposed to the guest.&lt;/li&gt; &#xA; &lt;li&gt;The USB device with vendor_id 046d and product_id 085e will be exposed to the guest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the USB devices are not writable, &lt;code&gt;quickemu&lt;/code&gt; will display the appropriate commands to modify the USB device(s) access permissions, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; - USB:      Host pass-through requested:&#xA;              - Sennheiser Communications EPOS GTW 270 on bus 001 device 005 needs permission changes:&#xA;                sudo chown -v root:user /dev/bus/usb/001/005&#xA;                ERROR! USB permission changes are required 👆&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;TPM&lt;/h1&gt; &#xA;&lt;p&gt;Since Quickemu 2.2.0 a software emulated TPM device can be added to guest virtual machines. Just add &lt;code&gt;tpm=&#34;on&#34;&lt;/code&gt; to your VM configuration. &lt;code&gt;quickget&lt;/code&gt; will automatically add this line to Windows 11 virtual machines.&lt;/p&gt; &#xA;&lt;h1&gt;All the options&lt;/h1&gt; &#xA;&lt;p&gt;Here are the usage instructions:&lt;/p&gt; &#xA;&lt;!-- [[[cog&#xA;import subprocess&#xA;&#xA;import cog&#xA;# cannot use check_result() because of non-zero return&#xA;result=subprocess.run([&#34;./quickemu&#34;, &#34;--help&#34;], capture_output=True, text=True)&#xA;help=result.stdout&#xA;cog.out(f&#34;```\n\n{help}\n\n```\n\n&#34;)&#xA;]]] --&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&#xA;    Usage&#xA;      quickemu --vm ubuntu.conf&#xA;&#xA;    You can also pass optional parameters&#xA;      --braille                         : Enable braille support. Requires SDL.&#xA;      --delete-disk                     : Delete the disk image and EFI variables&#xA;      --delete-vm                       : Delete the entire VM and it&#39;s configuration&#xA;      --display                         : Select display backend. &#39;sdl&#39; (default), &#39;gtk&#39;, &#39;none&#39;, &#39;spice&#39; or &#39;spice-app&#39;&#xA;      --fullscreen                      : Starts VM in full screen mode (Ctl+Alt+f to exit)&#xA;      --ignore-msrs-always              : Configure KVM to always ignore unhandled machine-specific registers&#xA;      --screen &amp;lt;screen&amp;gt;                 : Use specified screen to determine the window size.&#xA;      --shortcut                        : Create a desktop shortcut&#xA;      --snapshot apply &amp;lt;tag&amp;gt;            : Apply/restore a snapshot.&#xA;      --snapshot create &amp;lt;tag&amp;gt;           : Create a snapshot.&#xA;      --snapshot delete &amp;lt;tag&amp;gt;           : Delete a snapshot.&#xA;      --snapshot info                   : Show disk/snapshot info.&#xA;      --status-quo                      : Do not commit any changes to disk/snapshot.&#xA;      --viewer &amp;lt;viewer&amp;gt;                 : Choose an alternative viewer. @Options: &#39;spicy&#39; (default), &#39;remote-viewer&#39;, &#39;none&#39;&#xA;      --ssh-port &amp;lt;port&amp;gt;                 : Set ssh-port manually&#xA;      --spice-port &amp;lt;port&amp;gt;               : Set spice-port manually&#xA;      --public-dir &amp;lt;path&amp;gt;               : expose share directory. @Options: &#39;&#39; (default: xdg-user-dir PUBLICSHARE), &#39;&amp;lt;directory&amp;gt;&#39;, &#39;none&#39;&#xA;      --monitor &amp;lt;type&amp;gt;                  : Set monitor connection type. @Options: &#39;socket&#39; (default), &#39;telnet&#39;, &#39;none&#39;&#xA;      --monitor-telnet-host &amp;lt;ip/host&amp;gt;   : Set telnet host for monitor. (default: &#39;localhost&#39;)&#xA;      --monitor-telnet-port &amp;lt;port&amp;gt;      : Set telnet port for monitor. (default: &#39;4440&#39;)&#xA;      --monitor-cmd &amp;lt;cmd&amp;gt;               : Send command to monitor if available. (Example: system_powerdown)&#xA;      --serial &amp;lt;type&amp;gt;                   : Set serial connection type. @Options: &#39;socket&#39; (default), &#39;telnet&#39;, &#39;none&#39;&#xA;      --serial-telnet-host &amp;lt;ip/host&amp;gt;    : Set telnet host for serial. (default: &#39;localhost&#39;)&#xA;      --serial-telnet-port &amp;lt;port&amp;gt;       : Set telnet port for serial. (default: &#39;6660&#39;)&#xA;      --keyboard &amp;lt;type&amp;gt;                 : Set keyboard. @Options: &#39;usb&#39; (default), &#39;ps2&#39;, &#39;virtio&#39;&#xA;      --keyboard_layout &amp;lt;layout&amp;gt;        : Set keyboard layout.&#xA;      --mouse &amp;lt;type&amp;gt;                    : Set mouse. @Options: &#39;tablet&#39; (default), &#39;ps2&#39;, &#39;usb&#39;, &#39;virtio&#39;&#xA;      --usb-controller &amp;lt;type&amp;gt;           : Set usb-controller. @Options: &#39;ehci&#39; (default), &#39;xhci&#39;, &#39;none&#39;&#xA;      --extra_args &amp;lt;arguments&amp;gt;          : Pass additional arguments to qemu&#xA;      --version                         : Print version&#xA;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- [[[end]]] --&gt; &#xA;&lt;h2&gt;Desktop shortcuts&lt;/h2&gt; &#xA;&lt;p&gt;Desktop shortcuts can be created for a VM, the shortcuts are saved in &lt;code&gt;~/.local/share/applications&lt;/code&gt;. Here is an example of how to create a shortcut.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04-desktop.conf --shortcut&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Screen and window size (Linux guests only)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;qemu&lt;/code&gt; will always default to the primary monitor to display the VM&#39;s window.&lt;/p&gt; &#xA;&lt;p&gt;Without the &lt;code&gt;--screen&lt;/code&gt; option, &lt;code&gt;quickemu&lt;/code&gt; will look for the size of the smallest monitor, and use a size that fits on said monitor.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--screen&lt;/code&gt; option forces &lt;code&gt;quickemu&lt;/code&gt; to use the size of the given monitor to compute the size of the window. &lt;strong&gt;It won&#39;t use that monitor to display the VM&#39;s window if it&#39;s not the primary monitor&lt;/strong&gt;. This is useful if the primary monitor if not the smallest one, and if the VM&#39;s window doesn&#39;t need to be moved around.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--screen&lt;/code&gt; option is also useful with the &lt;code&gt;--fullscreen&lt;/code&gt; option, again because &lt;code&gt;qemu&lt;/code&gt; will always use the primary monitor. In order for the fullscreen mode to work properly, the resolution of the VM&#39;s window must match the resolution of the screen.&lt;/p&gt; &#xA;&lt;p&gt;To know which screen to use, type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xrandr --listmonitors | grep -v Monitors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command will output something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; 0: +*HDMI-0 2560/597x1440/336+1920+0  HDMI-0&#xA; 1: +DVI-D-0 1920/527x1080/296+0+0  DVI-D-0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first number is what needs to be passed to the &lt;code&gt;--screen&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm vm.conf --screen 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above uses the 2560x1440 screen to compute the size of the window, which Quickemu sizes to 2048x1152. Without the &lt;code&gt;--screen&lt;/code&gt; option, Quickemu would have used the 1920x1080 monitor which results in a window size of 1664x936.&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;p&gt;Useful reference that assisted the development of Quickemu.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;General &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://qemu.readthedocs.io/en/latest/&#34;&gt;QEMU&#39;s documentation!&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines&#34;&gt;https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2020/01/qemu-sound-audiodev/&#34;&gt;https://www.kraxel.org/blog/2020/01/qemu-sound-audiodev/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;macOS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nicksherlock.com/2020/06/installing-macos-big-sur-on-proxmox/&#34;&gt;https://www.nicksherlock.com/2020/06/installing-macos-big-sur-on-proxmox/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://passthroughpo.st/mac-os-adds-early-support-for-virtio-qemu/&#34;&gt;https://passthroughpo.st/mac-os-adds-early-support-for-virtio-qemu/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kholia/OSX-KVM&#34;&gt;https://github.com/kholia/OSX-KVM&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/thenickdude/KVM-Opencore&#34;&gt;https://github.com/thenickdude/KVM-Opencore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg/tree/master/Utilities/macrecovery&#34;&gt;https://github.com/acidanthera/OpenCorePkg/tree/master/Utilities/macrecovery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2017/09/running-macos-as-guest-in-kvm/&#34;&gt;https://www.kraxel.org/blog/2017/09/running-macos-as-guest-in-kvm/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nicksherlock.com/2017/10/passthrough-of-advanced-cpu-features-for-macos-high-sierra-guests/&#34;&gt;https://www.nicksherlock.com/2017/10/passthrough-of-advanced-cpu-features-for-macos-high-sierra-guests/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://philjordan.eu/osx-virt/&#34;&gt;http://philjordan.eu/osx-virt/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Dids/clover-builder&#34;&gt;https://github.com/Dids/clover-builder&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mackie100projects.altervista.org&#34;&gt;OpenCore Configurator&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.heiko-sieger.info/running-windows-10-on-linux-using-kvm-with-vga-passthrough/&#34;&gt;https://www.heiko-sieger.info/running-windows-10-on-linux-using-kvm-with-vga-passthrough/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://leduccc.medium.com/improving-the-performance-of-a-windows-10-guest-on-qemu-a5b3f54d9cf5&#34;&gt;https://leduccc.medium.com/improving-the-performance-of-a-windows-10-guest-on-qemu-a5b3f54d9cf5&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://frontpagelinux.com/tutorials/how-to-use-linux-kvm-to-optimize-your-windows-10-virtual-machine/&#34;&gt;https://frontpagelinux.com/tutorials/how-to-use-linux-kvm-to-optimize-your-windows-10-virtual-machine/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://turlucode.com/qemu-command-line-args/&#34;&gt;https://turlucode.com/qemu-command-line-args/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pbatard/Fido&#34;&gt;https://github.com/pbatard/Fido&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.catapultsystems.com/blogs/create-zero-touch-windows-10-iso/&#34;&gt;https://www.catapultsystems.com/blogs/create-zero-touch-windows-10-iso/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;TPM &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://qemu-project.gitlab.io/qemu/specs/tpm.html&#34;&gt;https://qemu-project.gitlab.io/qemu/specs/tpm.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.tecklyfe.com/how-to-create-a-windows-11-virtual-machine-in-qemu/&#34;&gt;https://www.tecklyfe.com/how-to-create-a-windows-11-virtual-machine-in-qemu/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;9p &amp;amp; virtiofs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.qemu.org/Documentation/9p&#34;&gt;https://wiki.qemu.org/Documentation/9p&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.qemu.org/Documentation/9psetup&#34;&gt;https://wiki.qemu.org/Documentation/9psetup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2019/06/macos-qemu-guest/&#34;&gt;https://www.kraxel.org/blog/2019/06/macos-qemu-guest/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/628169/how-to-share-a-directory-with-the-host-without-networking-in-qemu&#34;&gt;https://superuser.com/questions/628169/how-to-share-a-directory-with-the-host-without-networking-in-qemu&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://virtio-fs.gitlab.io/&#34;&gt;https://virtio-fs.gitlab.io/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>