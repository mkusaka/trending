<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-11T01:45:58Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hiifeng/V2ray-for-Replit</title>
    <updated>2023-02-11T01:45:58Z</updated>
    <id>tag:github.com,2023-02-11:/hiifeng/V2ray-for-Replit</id>
    <link href="https://github.com/hiifeng/V2ray-for-Replit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The tool can install v2ray on the repl, including VMess and VLess protocols, it will automatically switch IP, you need to fork this repl, read readme.md and run it. Create By xiaowansm，Modlfy By ifeng.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;V2ray for Replit&lt;/h1&gt; &#xA;&lt;p&gt;Create By xiaowansm&lt;br&gt; Modlfy By ifeng&lt;br&gt; Web Site: &lt;a href=&#34;https://www.hicairo.com&#34;&gt;https://www.hicairo.com&lt;/a&gt; &lt;br&gt; Telegram: &lt;a href=&#34;https://t.me/HiaiFeng&#34;&gt;https://t.me/HiaiFeng&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;简介：&lt;/h1&gt; &#xA;&lt;p&gt;本项目用于在 Replit.com 免费服务上部署 V2ray ，采用的方案为 Nginx + WebSocket + VMess/VLess + TLS。&lt;/p&gt; &#xA;&lt;h1&gt;注意事项：&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;请勿滥用，账号封禁风险自负。网络流量每月有100GB软上限。&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h1&gt;部署：&lt;/h1&gt; &#xA;&lt;p&gt;在 &lt;a href=&#34;https://replit.com&#34;&gt;Replit.com&lt;/a&gt; 上注册账户，然后点击下方按钮&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repl.it/github/hiifeng/V2ray-for-Replit&#34; rel=&#34;nofollow&#34;&gt;&lt;img alt=&#34;Run on Repl.it&#34; src=&#34;https://camo.githubusercontent.com/8f3d0bdc332bfddbb9694b553bba8319754153b39f2efdf3c78b17fbbb6b7990/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f616e6462727569626d2f7265616465722d7265706c6974&#34; style=&#34;height: 40px; width: 190px; max-width: 100%;&#34; data-canonical-src=&#34;https://repl.it/badge/github/andbruibm/reader-replit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;再点击 &lt;b&gt;Import from Github&lt;/b&gt;。&lt;/p&gt; &#xA;&lt;p&gt;或者直接fork以下链接进行使用：&lt;/p&gt; https://replit.com/@hifeng/v2rayN?v=1 &#xA;&lt;h1&gt;使用方法：&lt;/h1&gt; &#xA;&lt;p&gt;点击顶部的&#34;Run&#34;按钮后，左侧Files菜单中，程序自动创建url.txt文件，该文件包含VMess和VLess协议的链接地址，在客户端软件中导入即可。&lt;/p&gt; &#xA;&lt;p&gt;同时，程序自动创建了VLess.png和VMess.png文件，分别是VLess和VMess协议的二维码，使用手机扫描即可添加节点。&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;更换节点中的UUID（用户ID）：&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;1、点击左侧Tools菜单中的Shell按钮，打开Shell窗口，运行create_UUID.sh脚本，程序会在左侧Files菜单中，创建uuid.txt文件，该文件中包含有新生成的UUID。&lt;/p&gt; &#xA;&lt;p&gt;2、重启应用后生效，同时新生成的节点链接包含在url.txt文件中。&lt;/p&gt; &#xA;&lt;p&gt;3、也可以使用第三方工具（ https://www.v2fly.org/awesome/tools.html ）生成UUID，然后手动打开uuid.txt文件，替换文件中的内容。&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;特别提醒：&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;服务启动，copy节点信息后，请手动删除url.txt、uuid.txt、VLess.png及VMess.png文件。否则，你的节点任何人都可以使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;一行代码实现 Repl 保活：&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;最近群里的小伙伴反馈 Repl 总是休眠停止服务，究其原因是官方为节约服务器资源开支，对于没有活动的 Repl 会停止服务，除非重新启动。如果你也安装了 &lt;a href=&#34;https://www.hicairo.com/post/55.html&#34; target=&#34;_blank&#34;&gt;Doprax.com&lt;/a&gt; 节点，可以在如下图所示的位置添加一行代码。原理为每隔5分钟让程序自动访问一次你的 Repl 服务。当然，如果你没有 Doprax.com 节点，也可以将这行代码添加到你的软路由上。&lt;/p&gt; &#xA;&lt;img src=&#34;https://www.hicairo.com/zb_users/upload/2022/12/202212291672276356316990.webp&#34;&gt; &#xA;&lt;pre class=&#34;notranslate&#34;&gt;&lt;code&gt;# 将这行代码中的域名替换成 Replit 为你项目分配的域名&#xA;while true ;do curl https://xx.xx.repl.co; sleep 300; done &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;反馈与交流：&lt;/h1&gt; &#xA;&lt;p&gt;在使用过程中，如果遇到问题，请使用Telegram与我联系。（ &lt;a href=&#34;https://t.me/HiaiFeng&#34;&gt;https://t.me/HiaiFeng&lt;/a&gt; ）&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cisagov/ESXiArgs-Recover</title>
    <updated>2023-02-11T01:45:58Z</updated>
    <id>tag:github.com,2023-02-11:/cisagov/ESXiArgs-Recover</id>
    <link href="https://github.com/cisagov/ESXiArgs-Recover" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to recover from ESXiArgs ransomware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESXiArgs-Recover&lt;/h1&gt; &#xA;&lt;p&gt;ESXiArgs-Recover is a tool to allow organizations to attempt recovery of virtual machines affected by the ESXiArgs ransomware attacks.&lt;/p&gt; &#xA;&lt;p&gt;CISA is aware that some organizations have reported success in recovering files without paying ransoms. CISA compiled this tool based on publicly available resources, including &lt;a href=&#34;http://enes.dev/&#34;&gt;a tutorial&lt;/a&gt; by Enes Sonmez and Ahmet Aykac. This tool works by reconstructing virtual machine metadata from virtual disks that were not encrypted by the malware. For more information, see CISA&#39;s &lt;a href=&#34;https://www.cisa.gov/uscert/ncas/alerts/aa23-039a&#34;&gt;ESXiArgs Ransomware Virtual Machine Recovery Guidance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;CISA’s ESXiArgs script is based on findings published by the third-party researchers mentioned above. Any organization seeking to use CISA’s ESXiArgs recovery script should carefully review the script to determine if it is appropriate for their environment before deploying it. This script does not seek to delete the encrypted config files, but instead seeks to create new config files that enable access to the VMs. While CISA works to ensure that scripts like this one are safe and effective, this script is delivered without warranty, either implicit or explicit. Do not use this script without understanding how it may affect your system. CISA does not assume liability for damage caused by this script.&lt;/p&gt; &#xA;&lt;p&gt;This script is being provided “as is” for informational purposes only. CISA does not endorse any commercial product or service, including any subjects of analysis. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring by CISA.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download this script and save it as &lt;code&gt;/tmp/recover.sh&lt;/code&gt;. For example, with wget: &lt;code&gt;wget -O /tmp/recover.sh https://raw.githubusercontent.com/cisagov/ESXiArgs-Recover/main/recover.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Give the script execute permissions: &lt;code&gt;chmod +x /tmp/recover.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the folder of a virtual machine you would like to decrypt (you may browse these folders by running &lt;code&gt;ls /vmfs/volumes/datastore1&lt;/code&gt;). For instance, if the folder is called &lt;code&gt;example&lt;/code&gt;, run &lt;code&gt;cd /vmfs/volumes/datastore1/example&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;ls&lt;/code&gt; to view the files. Note the name of the VM (e.g. if there is a file &lt;code&gt;example.vmdk&lt;/code&gt;, the name of the VM is &lt;code&gt;example&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Run the recovery script with &lt;code&gt;/tmp/recover.sh [name]&lt;/code&gt;, where &lt;code&gt;[name]&lt;/code&gt; is the name of the virtual machine determined in step 4. If the virtual machine is a thin format, run &lt;code&gt;/tmp/recover.sh [name] thin&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If successful, the decryptor script will output that it has successfully run. If unsuccessful, this may mean that your virtual machines cannot be recovered.&lt;/li&gt; &#xA; &lt;li&gt;If the script succeeded, the last step is to re-register the virtual machine.&lt;/li&gt; &#xA; &lt;li&gt;If the ESXi web interface is inaccessible, take the following steps to remove the ransom note and restore access (note that taking the steps below moves the ransom note to the file &lt;code&gt;ransom.html&lt;/code&gt;. Cconsider archiving this file for future incident review). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;cd /usr/lib/vmware/hostd/docroot/ui/ &amp;amp;&amp;amp; mv index.html ransom.html &amp;amp;&amp;amp; mv index1.html index.html&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;cd /usr/lib/vmware/hostd/docroot &amp;amp;&amp;amp; mv index.html ransom.html &amp;amp;&amp;amp; rm index.html &amp;amp; mv index1.html index.html&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Reboot the ESXi server (e.g., with the &lt;code&gt;reboot&lt;/code&gt; command). After a few minutes, you should be able to navigate to the web interface.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In the ESXi web interface, navigate to the Virtual Machines page.&lt;/li&gt; &#xA; &lt;li&gt;If the VM you restored already exists, right click on the VM and select “Unregister”.&lt;/li&gt; &#xA; &lt;li&gt;Select “Create / Register VM”.&lt;/li&gt; &#xA; &lt;li&gt;Select “Register an existing virtual machine”.&lt;/li&gt; &#xA; &lt;li&gt;Click “Select one or more virtual machines, a datastore or a directory” to navigate to the folder of the VM you restored. Select the vmx file in the folder.&lt;/li&gt; &#xA; &lt;li&gt;Select “Next” and “Finish”. You should now be able to use the VM as normal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If needed, the script will save encrypted files in a new &lt;code&gt;encrypted_files&lt;/code&gt; folder within each virtual machine’s directory.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome! Navigate &lt;a href=&#34;https://github.com/cisagov/ESXiArgs-Recover/pulls&#34;&gt;here&lt;/a&gt; to submit a pull request or submit an issue &lt;a href=&#34;https://github.com/cisagov/ESXiArgs-Recover/issues/new&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Public domain&lt;/h2&gt; &#xA;&lt;p&gt;This project is in the worldwide public domain.&lt;/p&gt; &#xA;&lt;p&gt;This project is in the public domain within the United States, and copyright and related rights in the work worldwide are waived through the CC0 1.0 Universal public domain dedication.&lt;/p&gt; &#xA;&lt;p&gt;All contributions to this project will be released under the CC0 dedication. By submitting a pull request, you are agreeing to comply with this waiver of copyright interest.&lt;/p&gt;</summary>
  </entry>
</feed>