<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T01:44:57Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rootcathacking/catspin</title>
    <updated>2023-12-10T01:44:57Z</updated>
    <id>tag:github.com,2023-12-10:/rootcathacking/catspin</id>
    <link href="https://github.com/rootcathacking/catspin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Catspin rotates the IP address of HTTP requests making IP based blocks or slowdown measures ineffective. It is based on AWS API Gateway and deployed via AWS Cloudformation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.chzbgr.com/full/7889062656/h10C497C8/cat-spinning-on-a-roomba&#34; alt=&#34;catspin&#34; title=&#34;catspin&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is this?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Catspin&lt;/em&gt; is basically a AWS proxy tool, which rotates its IP with every request. It is based on Amazons API Gateway and uses the &#39;X-Forward-To&#39; header. &lt;em&gt;Catspin&lt;/em&gt; can be used to for web-discovery and bypass IP-based blocks or slowdowns naturally. It can be chained with most tools from &lt;em&gt;burp-scanner&lt;/em&gt; to &lt;em&gt;gobuster&lt;/em&gt;, &lt;em&gt;dirsearch&lt;/em&gt;, &lt;em&gt;wfuzz&lt;/em&gt;, and various Typo3 or Wordpress-Scanner, etc.&lt;br&gt; Basically, if you throw a HTTP Get at it, &lt;em&gt;catspin&lt;/em&gt; can probably handle it. If youâ€™re interested in the initial Blogpost for this tool, you can find it &lt;a href=&#34;https://www.rootcat.de/blog/catspin_july22/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Use responsible&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Catspin&lt;/em&gt; is a powerful tool which can circumvent most if not all IP-based security or intrusion detection/prevention systems. As a pentesting or redteaming tool it is only to be used as such and with explicit permission by your customer/target or you own systems. Discuss the use of an IP-rotating scanning tool before your engagement and make sure to start with slow requests when conducting your test. It is always the testers responsibility to conduct a safe and efficient engagement.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;As this is an AWS API Gateway based tool you need an AWS account with sufficient permission to create and deploy REST API Gateway. If you want to use the &lt;em&gt;catspin.sh&lt;/em&gt; script, you also need AWS keys for your account and the &lt;em&gt;aws cli&lt;/em&gt; installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AWS Account (deploy via portal and Cloudformation)&lt;/li&gt; &#xA; &lt;li&gt;AWS Cli and AWS keys (deploy with bash-script)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Catspin&lt;/em&gt; can be installed either via the AWS Webportal or AWS Cli. Short version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/rootcathacking/catspin&#xA;bash catspin.sh -run tageturi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set it up/install it with -run.&lt;br&gt; Get the URL endpoint during installation or anytime via -info.&lt;br&gt; Delete the stack with -kill.&lt;/p&gt; &#xA;&lt;h2&gt;Via portal&lt;/h2&gt; &#xA;&lt;p&gt;Log in to your AWS Account and navigate to Cloudformation &amp;gt; create stack &amp;gt; upload a template file &amp;gt; chose catspin.yaml. The next step will ask you for a stack name and the target, you find your endpoint URL after the stack is created in the outputs tab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/rootcathacking/catspin/raw/main/cloudformation_install.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Via bash-script&lt;/h2&gt; &#xA;&lt;p&gt;Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash catspin.sh -run tageturi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This calls the AWS Cli, so it is required, and it uses the account and keys which are configured. Run aws configure, or edit the file in the &lt;em&gt;.aws&lt;/em&gt; folder, to add/change your user credentials.&lt;/p&gt; &#xA;&lt;p&gt;You can check the status of the deployed stack, or get the endpoint URL via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash catspin.sh -info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your done with scanning, you can delete the stack by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash catspin.sh -kill&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage examples&lt;/h1&gt; &#xA;&lt;p&gt;When &lt;em&gt;catspin&lt;/em&gt; is deployed, the &lt;em&gt;catspin_deployed&lt;/em&gt;-endpoint is your target, you can now direct your tools or scripts at it, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://.../execute-api.eu-central-1.amazonaws.com/catspin_deployed/wp_admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 typo3scan.py -d https://.../execute-api.eu-central-1.amazonaws.com/catspin_deployed  --vuln&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./dirsearch.py -u https://.../execute-api.eu-central-1.amazonaws.com/catspin_deployed --delay=3 -F&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending on your tool of choice, you might encounter 301 redirects.&lt;/p&gt; &#xA;&lt;p&gt;You can use catspin creatively in combination with various others tool or write your own script that utilize it.&lt;/p&gt; &#xA;&lt;h1&gt;Catspin in action&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rootcathacking/catspin/assets/73855105/445cac49-99c4-4f18-8ba7-f857bff385d9&#34;&gt;https://github.com/rootcathacking/catspin/assets/73855105/445cac49-99c4-4f18-8ba7-f857bff385d9&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Catspin gets the zoomies&lt;/h1&gt; &#xA;&lt;p&gt;As this uses API Gateway it utilizes rate and burst limit, see &lt;a href=&#34;https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html&#34;&gt;here&lt;/a&gt;. These are set at a default and basically set how many requests gets send at peak or in a set timeframe. The default will be good for most things, you can slow catspin down or get the zoomies if you change the values of the rate and burstlimit variables.&lt;br&gt; If catspin gets the zoomies and knocks down your server and Ming vase, only you are to blame, so know what you are doing!&lt;/p&gt;</summary>
  </entry>
</feed>