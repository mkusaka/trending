<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-03T01:38:11Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>reportportal/reportportal</title>
    <updated>2024-02-03T01:38:11Z</updated>
    <id>tag:github.com,2024-02-03:/reportportal/reportportal</id>
    <link href="https://github.com/reportportal/reportportal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Main Repository. ReportPortal starts here - see readme below.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;http://ReportPortal.io&#34;&gt;ReportPortal.io&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.epmrpp.reportportal.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-brightgreen.svg?sanitize=true&#34; alt=&#34;Join Slack chat!&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stackoverflow.com/questions/tagged/reportportal&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/reportportal-stackoverflow-orange.svg?style=flat&#34; alt=&#34;stackoverflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://reportportal.io/community&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributors-102-blue.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/u/reportportal/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/reportportal/service-api.svg?maxAge=25920&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://reportportal.io?style=flat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/build%20with-%E2%9D%A4%EF%B8%8F%E2%80%8D-lightgrey.svg?sanitize=true&#34; alt=&#34;Build with Love&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.lambdatest.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11332788/230135399-6d839d7f-0dbe-45bf-8f72-dee3a5d69e17.svg?sanitize=true&#34; alt=&#34;lambdaTest a27c44&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ReportPortal organized into multiple repositories.&lt;/p&gt; &#xA;&lt;p&gt;Application Core based on micro-services architecture and includes next mandatory services: &lt;img src=&#34;https://github.com/reportportal/reportportal/raw/master/public/rp_repo_structure.png&#34; alt=&#34;structure&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Repositories structure&lt;/h2&gt; &#xA;&lt;p&gt;ReportPortal &lt;strong&gt;server side&lt;/strong&gt; consists of the following services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/service-authorization&#34;&gt;&lt;code&gt;service-authorization&lt;/code&gt;&lt;/a&gt; Authorization Service. In charge of access tokens distribution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/service-api&#34;&gt;&lt;code&gt;service-api&lt;/code&gt;&lt;/a&gt; API Service. Application Backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/service-ui&#34;&gt;&lt;code&gt;service-ui&lt;/code&gt;&lt;/a&gt; UI Service. Application Frontend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/service-index&#34;&gt;&lt;code&gt;service-index&lt;/code&gt;&lt;/a&gt; Index Service. Info and health checks per service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/service-auto-analyzer&#34;&gt;&lt;code&gt;service-analyzer&lt;/code&gt;&lt;/a&gt; Analyzer Service. Finds most relevant test fail problem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containous/traefik&#34;&gt;&lt;code&gt;gateway&lt;/code&gt;&lt;/a&gt; Traefik Gateway Service. Main entry point to application. Port used by gateway should be opened and accessible from outside network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rabbitmq&#34;&gt;&lt;code&gt;rabbitmq&lt;/code&gt;&lt;/a&gt; Load balancer for client requests. Bus for messages between servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minio/minio&#34;&gt;&lt;code&gt;minio&lt;/code&gt;&lt;/a&gt; Attachments storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available plugins developed by ReportPortal team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/plugin-bts-jira&#34;&gt;&lt;code&gt;plugin-bts-jira&lt;/code&gt;&lt;/a&gt; JIRA Plugin. Interaction with JIRA. &lt;a href=&#34;https://search.maven.org/search?q=g:%22com.epam.reportportal%22%20AND%20a:%22plugin-bts-jira%22&#34;&gt;Link to download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/plugin-bts-rally&#34;&gt;&lt;code&gt;plugin-bts-rally&lt;/code&gt;&lt;/a&gt; Rally Plugin. Interaction with Rally. &lt;a href=&#34;https://search.maven.org/search?q=g:%22com.epam.reportportal%22%20AND%20a:%22plugin-bts-rally%22&#34;&gt;Link to download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/plugin-saucelabs&#34;&gt;&lt;code&gt;plugin-saucelabs&lt;/code&gt;&lt;/a&gt; Sauce Labs Plugin. Interaction with Sauce Labs. &lt;a href=&#34;https://search.maven.org/search?q=g:%22com.epam.reportportal%22%20AND%20a:%22plugin-saucelabs%22&#34;&gt;Link to download&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Client side&lt;/strong&gt; adapters related repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=client-&#34;&gt;&lt;code&gt;client-*&lt;/code&gt;&lt;/a&gt; - API integrations. Http clients, which process HTTP request sending.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=agent-&#34;&gt;&lt;code&gt;agent-*&lt;/code&gt;&lt;/a&gt; - Frameworks integration. Custom reporters/listeners, which monitor test events and trigger event sending via &lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=client-&#34;&gt;&lt;code&gt;client-*&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=logger-&#34;&gt;&lt;code&gt;logger-*&lt;/code&gt;&lt;/a&gt; - Logging integration. Logger appenders, which help to collect logs, bind it with test-case item via &lt;code&gt;agent-*&lt;/code&gt; and send to server via &lt;code&gt;client-*&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other repositories&lt;/strong&gt; stored according to next rules&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=service-&#34;&gt;&lt;code&gt;service-*&lt;/code&gt;&lt;/a&gt; - micro-services which are a part of Application&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=commons-&#34;&gt;&lt;code&gt;commons-*&lt;/code&gt;&lt;/a&gt; - common libraries, models, etc., used by micro-services&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation steps&lt;/h2&gt; &#xA;&lt;h3&gt;Simple setup with Docker&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s the best way for demo purposes and small teams. The database is already in the docker-compose.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;Docker&lt;/a&gt; (&lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;Engine&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Compose&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download &lt;a href=&#34;https://github.com/reportportal/reportportal/raw/master/docker-compose.yml&#34;&gt;Example of docker-compose descriptor&lt;/a&gt; to any folder&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy ReportPortal using &lt;code&gt;docker compose plugin&lt;/code&gt; within the same folder&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -p reportportal up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start ReportPortal in daemon mode, add &#39;-d&#39; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -p reportportal up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Open in your browser IP address of deployed environment at port &lt;code&gt;8080&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://IP_ADDRESS:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Use next login\pass for access:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;default\1q2w3e&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;superadmin\erebus&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please change admin password for security.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Mentioned compose file deploy all available Bug Tracking System integrations, which not always needed, but use resources.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Production-ready set and Custom deployment with Docker&lt;/h3&gt; &#xA;&lt;p&gt;For production usage, we recommend:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;choose only required Bug Tracking System integration service. Exclude the rest&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To customize deployment and make it production-ready please follow &lt;a href=&#34;https://github.com/reportportal/reportportal/wiki/Production-Ready-set-and-Deployment-Customization&#34;&gt;customization steps and details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Integration. How to get log data in&lt;/h2&gt; &#xA;&lt;p&gt;You should add &lt;strong&gt;Client Side&lt;/strong&gt; code inside your test automation. It consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=client-&#34;&gt;&lt;code&gt;client-*&lt;/code&gt;&lt;/a&gt; - API integrations. Http clients, which process HTTP request sending. E.g. for Java (&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=client-java-&#34;&gt;&lt;code&gt;client-java-*&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=agent-&#34;&gt;&lt;code&gt;agent-*&lt;/code&gt;&lt;/a&gt; - Frameworks integration. Custom reporters/listeners, which monitor test events and trigger event sending via &lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=client-&#34;&gt;&lt;code&gt;client-*&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal?utf8=%E2%9C%93&amp;amp;q=logger-&#34;&gt;&lt;code&gt;logger-*&lt;/code&gt;&lt;/a&gt; - Logging integration. Logger appenders, which helps to collect logs, bind it with test-case via &lt;code&gt;agent-*&lt;/code&gt; and send to server via &lt;code&gt;client-*&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://reportportal.io/#documentation/%EF%BB%BFTest-framework-integration&#34;&gt;Integration steps and documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;There are many different ways to contribute to ReportPortal&#39;s development, just find the one that best fits with your skills. Examples of contributions we would love to receive include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code patches&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation improvements&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Translations&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug reports&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Patch reviews&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI enhancements&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Big features are also welcome but if you want to see your contributions included in ReportPortal codebase we strongly recommend you start by initiating a &lt;a href=&#34;https://slack.epmrpp.reportportal.io/&#34;&gt;chat through our Team in Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/reportportal/reportportal/wiki/Contribution&#34;&gt;Contribution details&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://reportportal.io/#documentation&#34;&gt;User Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/reportportal/wiki&#34;&gt;Wiki and Guides&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community / Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.epmrpp.reportportal.io/&#34;&gt;Slack chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/reportportal/raw/master/SECURITY_ADVISORIES.md&#34;&gt;Security Advisories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reportportal/reportportal/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/reportportal&#34;&gt;Stackoverflow Questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://twitter.com/ReportPortal_io&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCsZxrHqLHPJcrkcgIGRG-cQ&#34;&gt;YouTube Channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ReportPortal is &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dymensionxyz/networks</title>
    <updated>2024-02-03T01:38:11Z</updated>
    <id>tag:github.com,2024-02-03:/dymensionxyz/networks</id>
    <link href="https://github.com/dymensionxyz/networks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dymension networks&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dymensionxyz/networks/main/static/img/background-color-logo.jpg&#34; alt=&#34;Dymension&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dymension networks&lt;/h1&gt; &#xA;&lt;p&gt;Dymension is a network of modular blockchains consisting of the Dymension Hub and RollApps. To learn more about the Dymension network please visit the &lt;a href=&#34;https://docs.dymension.xyz/&#34;&gt;docs&lt;/a&gt; and reach out to the community/team on &lt;a href=&#34;https://discord.gg/dymension&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mainnet&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/networks/main/mainnet/dymension/genesis_validators.md&#34;&gt;Mainnet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Testnets&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/networks/main/testnet/blumbus/genesis_validators.md&#34;&gt;Blumbus - Testnet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/networks/main/devnet/froopyland/genesis_validators.md&#34;&gt;Froopyland - Devnet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dymensionxyz/networks/main/prev-testnets/35-C/genesis_validators.md&#34;&gt;35-C&lt;/a&gt; (NOT MAINTAINED)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>