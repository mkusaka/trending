<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:40:07Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FxPool/FxMinerProxyV3</title>
    <updated>2022-09-04T01:40:07Z</updated>
    <id>tag:github.com,2022-09-04:/FxPool/FxMinerProxyV3</id>
    <link href="https://github.com/FxPool/FxMinerProxyV3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;原创GO+VUE开发,FxMinerProxyV3是FxMinerProxy(傅里叶)的UI升级版本今后都会一直维护这个版本,这里是官方,独家手机APP支持安装，IOS，独家SSH后台服务器群控，内存占用小3000台300M，自动判断芯片机协议，支持ETH,ETC,BTC,CFX,ERG0,NTG,RVN,LTC,BEAM等，FXMinerProxy&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://vuejs.org&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/image/logo.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Release-8.0.2.1-orgin.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Last_Update-2022_08_19-orgin.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Language-GoLang-green.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache-green.svg?sanitize=true&#34; alt=&#34;travis&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/FxPool/FxMinerProxyV3/raw/main/readmes/en.md&#34;&gt;English(en-us)&lt;/a&gt; • &lt;a href=&#34;https://console-docs.apipost.cn/preview/280432b691e741ca/411c6c29b9f5d365&#34;&gt;文档&lt;/a&gt; • &lt;a href=&#34;https://t.me/+OVih6MkOAFsxYTMx&#34;&gt;Telegram 讨论群组&lt;/a&gt; • &lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;基于Golang高性能Pow挖矿代理中转服务器软件.FXMinerProxy的升级版本，中文名称傅里叶。全新UI界面，后台SSH控制台，手机APP，程序不重启，1核1G服务器(不是轻量)轻松3000台无压力&lt;/p&gt; &#xA;&lt;h2&gt;支持币种&lt;/h2&gt; &#xA;&lt;p&gt;ETH/ETC/BTC/LTC/RVN/CFX/TON/BEAM/ERG/BTG (需要添加新币中请联系我们，如果是芯片机器恰好我们没有，你可以连接我们这边服务器通常一天就能加上，这一天的损失我们承担)&lt;/p&gt; &#xA;&lt;h2&gt;手机APP支持 安卓 IOS （开发中9月15号之前出来）&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/image/phone1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WEB后台首页&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/image/home.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SSH服务器群控后台&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/image/ssh_zh.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; 特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;☁&lt;/span&gt; 支持ETC,ETH,BTC,LTC,RVN,BEAM,ERG,CFX等多币抽水,内置独家开发的加密混淆客户端 一键配置自动生成执行程序win和os都支持,API 开放，独家任何币种双挖支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⚡&lt;/span&gt; 高性能百万并发CPU占用极低，30万连接cpu占用10%&lt;/li&gt; &#xA; &lt;li&gt;💻 自定义作者抽水模式(范围0.1-0.2%)，PID抽水算法稳定算力曲线减少切换损耗，实时统计抽水转换率&lt;/li&gt; &#xA; &lt;li&gt;📚 原创抽水算法针对e池优化e池抽水效果最好，无矿机离线bug曲线完美，比其他软件高出几个点&lt;/li&gt; &#xA; &lt;li&gt;💾 安全稳定，原创aes混淆加密，模拟物联网流量安全稳定，后台一键配置自动生成window和linux版本，传统TLS/SSL TCP也支持，防御CC攻击&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⚙&lt;/span&gt; 前置代理模式，内部配置提高访问速度，延迟快速响应支持，让用户的显示的延迟是你当前代理服务器的延迟&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;📤&lt;/span&gt; 芯片矿机实时计算算力，解决芯片级无法显示算力的问题&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🗃&lt;/span&gt; 配置热修改，拒绝传统配置后需重启修改配置文件等繁琐步骤，支持一键导入导出配置文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🎨&lt;/span&gt; 精美UI，支持历史记录曲线管理详细到单台矿机支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;👁🗨&lt;/span&gt; 多人社区交流支持，不懂的问题都有人解答，QQ群:809118996，Telegram讨论组:&lt;a href=&#34;https://t.me/+OVih6MkOAFsxYTMx&#34;&gt;https://t.me/+OVih6MkOAFsxYTMx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⚙&lt;/span&gt; 实时系统错误日志显示，让你知道任何时候服务器工作状态&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;👩👧👦&lt;/span&gt; 多系统支持，windows，linux一键安装运行&lt;/li&gt; &#xA; &lt;li&gt;💻 linux SSH2 群控模式 软件自带服务器远程登录一键管理你的服务器&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🛠&lt;/span&gt; 部署&lt;/h2&gt; &#xA;&lt;h3&gt;linux一键管理脚本(需root权限)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果没有curl命令请输入 apt-get install curl 安装&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  bash &amp;lt;(curl -s -L https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/install_zh.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;指定版本下载&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;   bash &amp;lt;(curl -s -L https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/oldversion/install_zh.sh) 版本号(如8.0.2.1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;windows直接下载解压运行run.exe&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行run.exe（可保证程序永不死机）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/fxminerproxyv3windows.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;芯片机器问题&lt;/h2&gt; &#xA;&lt;p&gt;程序的端口会自动判断是显卡机器还是芯片机器所以无效单独配置 A11矿机抽水最好是抽到相同的矿池，不同的矿池可能会出现无效，主要还是要看固件是否支持set_exnaoce方法(动态修改随机数)，保守做法抽到同一个矿池 奶牛、茉莉、亚米等矿机可抽任意矿池&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚗&lt;/span&gt; 开发抽水&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;开启抽水固定0.27%&lt;/li&gt; &#xA; &lt;li&gt;不开抽水为0&lt;/li&gt; &#xA; &lt;li&gt;大算力用户请联系我们可激活软件享受更低的开发者抽水&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;加入电报群交流学习讨论&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FxPool/FxMinerProxyV3/main/image/tg.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hpi-swa/native-minecraft-server</title>
    <updated>2022-09-04T01:40:07Z</updated>
    <id>tag:github.com,2022-09-04:/hpi-swa/native-minecraft-server</id>
    <link href="https://github.com/hpi-swa/native-minecraft-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use GraalVM Native Image to turn the Minecraft server into native executables that are small in footprint, fast, and cheap to deploy.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Native Minecraft Servers with GraalVM Native Image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hpi-swa/native-minecraft-server/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/hpi-swa/native-minecraft-server/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Native Minecraft Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hpi-swa/native-minecraft-server/main/assets/graalvm_native_image_minecraft_banner.jpg&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Minecraft server is known to require a lot of CPU and memory resources and can be hard to deploy. This project makes it possible to compile the Minecraft server into a self-contained native executable using &lt;a href=&#34;https://www.graalvm.org/native-image/&#34;&gt;GraalVM Native Image&lt;/a&gt;. As such, it is supposed to require fewer CPU and memory resources, provide better startup times, and be easier and cheaper to deploy.&lt;/p&gt; &#xA;&lt;p&gt;A native Minecraft server is less than 120MB in size, and with that significantly smaller than Minecraft&#39;s &lt;code&gt;server.jar&lt;/code&gt; plus a JDK required to run it. With &lt;a href=&#34;https://upx.github.io/&#34;&gt;upx&lt;/a&gt; compression, the size of the native executable can be reduced even further to less than 40MB, which is smaller than just the &lt;code&gt;server.jar&lt;/code&gt;. Initial experiments also suggest competitive run-time performance with a reduced memory footprint. For best results, build with &lt;a href=&#34;https://www.oracle.com/downloads/graalvm-downloads.html&#34;&gt;GraalVM Enterprise&lt;/a&gt; Native Image, which provides better performance and lower memory usage than the Community Edition, and try out the &lt;a href=&#34;https://www.graalvm.org/22.2/reference-manual/native-image/optimizations-and-performance/MemoryManagement/&#34;&gt;G1 GC&lt;/a&gt; and &lt;a href=&#34;https://www.graalvm.org/22.2/reference-manual/native-image/guides/optimize-native-executable-with-pgo/&#34;&gt;Profile-Guided Optimizations&lt;/a&gt;. The &lt;a href=&#34;https://www.oracle.com/cloud/free/&#34;&gt;Oracle Cloud Free Tier&lt;/a&gt; not only provides four Ampere A1 cores and 24 GB of RAM always free, which is plenty for &lt;a href=&#34;https://blogs.oracle.com/developers/post/how-to-set-up-and-run-a-really-powerful-free-minecraft-server-in-the-cloud&#34;&gt;hosting a Minecraft server&lt;/a&gt;, but also free access to GraalVM Enterprise.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://medium.com/p/1a3f6a92eb48&#34;&gt;this blog post&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Disclaimer: This project is meant for demonstration purposes only and intended to help the Minecraft community evaluate the use of GraalVM Native Image. Please use at your own risk.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download GraalVM &lt;a href=&#34;https://github.com/graalvm/graalvm-ce-builds/releases/latest&#34;&gt;Community&lt;/a&gt; or &lt;a href=&#34;https://www.oracle.com/downloads/graalvm-downloads.html&#34;&gt;Enterprise&lt;/a&gt; &lt;em&gt;(GraalVM 22.2.0 or later is required)&lt;/em&gt;.&lt;br&gt; &lt;em&gt;Optional: make sure &lt;a href=&#34;https://upx.github.io/&#34;&gt;upx&lt;/a&gt; is on your &lt;code&gt;$PATH&lt;/code&gt; to enable compression.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download or check out this repository and run the &lt;a href=&#34;https://raw.githubusercontent.com/hpi-swa/native-minecraft-server/main/build.sh&#34;&gt;&lt;code&gt;build.sh&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Launch the native Minecraft server with &lt;code&gt;./native-minecraft-server&lt;/code&gt;.&lt;br&gt; &lt;em&gt;The first time you run the server, you will have to follow the regular procedure of accepting Minecraft&#39;s EULA.&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;p&gt;This project only contains the &lt;code&gt;build.sh&lt;/code&gt; script and &lt;a href=&#34;https://www.graalvm.org/22.2/reference-manual/native-image/metadata/&#34;&gt;reachability metadata&lt;/a&gt; for building a native Minecraft server. The &lt;code&gt;build.sh&lt;/code&gt; script first downloads Minecraft&#39;s &lt;code&gt;server.jar&lt;/code&gt; and extracts jars and other resources from it. Afterward, it invokes GraalVM Native Image with an appropriate configuration to generate a native version of the Minecraft server. Finally, and only if &lt;a href=&#34;https://upx.github.io/&#34;&gt;upx&lt;/a&gt; is on the &lt;code&gt;$PATH&lt;/code&gt;, the script will compress the native executable.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations and Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The configuration currently only supports Minecraft &lt;code&gt;1.18.2&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The server GUI is not yet supported.&lt;/li&gt; &#xA; &lt;li&gt;Mods are currently not supported.&lt;/li&gt; &#xA; &lt;li&gt;There is no build script for Windows yet, but the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; should work.&lt;/li&gt; &#xA; &lt;li&gt;The native executable sometimes fails on startup. Restarting it a few times usually helps.&lt;br&gt; &lt;em&gt;Error: &lt;code&gt;com.mojang.datafixers.types.templates.List$ListType cannot be cast to java.lang.Comparable&lt;/code&gt;&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/hpi-swa/native-minecraft-server/issues&#34;&gt;report any issues here on GitHub&lt;/a&gt; and open pull requests if you&#39;d like to contribute to the project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/hpi-swa/native-minecraft-server/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>heroku/heroku-buildpack-nodejs</title>
    <updated>2022-09-04T01:40:07Z</updated>
    <id>tag:github.com,2022-09-04:/heroku/heroku-buildpack-nodejs</id>
    <link href="https://github.com/heroku/heroku-buildpack-nodejs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Heroku buildpack for Node.js apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Heroku Buildpack for Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/51578/13712672/efdf2a40-e792-11e5-82ef-492478cbc0dc.png&#34; alt=&#34;nodejs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the official &lt;a href=&#34;http://devcenter.heroku.com/articles/buildpacks&#34;&gt;Heroku buildpack&lt;/a&gt; for Node.js apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/heroku/heroku-buildpack-nodejs&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/heroku/heroku-buildpack-nodejs/tree/main.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more information about using this Node.js buildpack on Heroku, see these Dev Center articles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/nodejs-support&#34;&gt;Heroku Node.js Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/nodejs&#34;&gt;Getting Started with Node.js on Heroku&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/troubleshooting-node-deploys&#34;&gt;Troubleshooting Node.js Deploys&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more general information about buildpacks on Heroku:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/buildpacks&#34;&gt;Buildpacks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devcenter.heroku.com/articles/buildpack-api&#34;&gt;Buildpack API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using the Heroku Node.js buildpack&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s suggested that you use the latest version of the release buildpack. You can set it using the &lt;code&gt;heroku-cli&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku buildpacks:set heroku/nodejs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your builds will always used the latest published release of the buildpack.&lt;/p&gt; &#xA;&lt;p&gt;If you need to use the git url, you can use the &lt;code&gt;latest&lt;/code&gt; tag to make sure you always have the latest release. &lt;strong&gt;The &lt;code&gt;main&lt;/code&gt; branch will always have the latest buildpack updates, but it does not correspond with a numbered release.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;heroku buildpacks:set https://github.com/heroku/heroku-buildpack-nodejs#latest -a my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Locking to a buildpack version&lt;/h2&gt; &#xA;&lt;p&gt;Even though it&#39;s suggested to use the latest release, you may want to lock dependencies - including buildpacks - to a specific version.&lt;/p&gt; &#xA;&lt;p&gt;First, find the version you want from &lt;a href=&#34;https://github.com/heroku/heroku-buildpack-nodejs/tags&#34;&gt;the list of buildpack versions&lt;/a&gt;. Then, specify that version with &lt;code&gt;buildpacks:set&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;heroku buildpacks:set https://github.com/heroku/heroku-buildpack-nodejs#v176 -a my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Chain Node with multiple buildpacks&lt;/h3&gt; &#xA;&lt;p&gt;This buildpack automatically exports node, npm, and any node_modules binaries into the &lt;code&gt;$PATH&lt;/code&gt; for easy use in subsequent buildpacks.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Having trouble? Dig it? Feature request?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.heroku.com/&#34;&gt;help.heroku.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heroku/heroku-buildpack-nodejs/issues&#34;&gt;GitHub issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;For local development, you may need the following tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/search?type=edition&amp;amp;offering=community&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install#install&#34;&gt;Go 1.14&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upx.github.io/&#34;&gt;upx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deploying an app with a fork or branch&lt;/h3&gt; &#xA;&lt;p&gt;To make changes to this buildpack, fork it on GitHub. Push up changes to your fork, then create a new Heroku app to test it, or configure an existing app to use your buildpack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Create a new Heroku app that uses your buildpack&#xA;heroku create --buildpack &amp;lt;your-github-url&amp;gt;&#xA;&#xA;# Configure an existing Heroku app to use your buildpack&#xA;heroku buildpacks:set &amp;lt;your-github-url&amp;gt;&#xA;&#xA;# You can also use a git branch!&#xA;heroku buildpacks:set &amp;lt;your-github-url&amp;gt;#your-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Downloading Plugins&lt;/h3&gt; &#xA;&lt;p&gt;In order to download the latest plugins that have been released, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;plugin/download.sh v$VERSION&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure the version is in the format &lt;code&gt;v#&lt;/code&gt;, ie. &lt;code&gt;v7&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;The buildpack tests use &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; to simulate Heroku&#39;s stacks.&lt;/p&gt; &#xA;&lt;p&gt;To run the test suite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or to just test a specific stack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make heroku-18-build&#xA;make heroku-20-build&#xA;make heroku-22-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The tests are run via the vendored &lt;a href=&#34;https://github.com/kward/shunit2&#34;&gt;shunit2&lt;/a&gt; test framework.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;To display the logged build outputs to assist with debugging, use the &#34;echo&#34; and &#34;cat&#34; commands. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;test() {&#xA;  local log_file var&#xA;&#xA;  var=&#34;testtest&#34;&#xA;  log_file=$(mktemp)&#xA;  echo &#34;this is the log file&#34; &amp;gt; &#34;$log_file&#34;&#xA;  echo &#34;test log file&#34; &amp;gt;&amp;gt; &#34;$log_file&#34;&#xA;&#xA;  # use `echo` and `cat` for printing variables and reading files respectively&#xA;  echo $var&#xA;  cat $log_file&#xA;&#xA;  # some cases when debugging is necessary&#xA;  assertEquals &#34;$var&#34; &#34;testtest&#34;&#xA;  assertFileContains &#34;test log file&#34; &#34;$log_file&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running the test above would produce:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;testtest&#xA;this is the log file&#xA;test log file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The test output writes to &lt;code&gt;$STD_OUT&lt;/code&gt;, so you can use &lt;code&gt;cat $STD_OUT&lt;/code&gt; to read output.&lt;/p&gt;</summary>
  </entry>
</feed>