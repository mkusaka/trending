<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-09T01:39:37Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>murphysecurity/libwebp-checker</title>
    <updated>2023-10-09T01:39:37Z</updated>
    <id>tag:github.com,2023-10-09:/murphysecurity/libwebp-checker</id>
    <link href="https://github.com/murphysecurity/libwebp-checker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for finding vulnerable libwebp(CVE-2023-4863)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/README_ZH.md&#34;&gt;中文&lt;/a&gt; | EN&lt;/p&gt; &#xA;&lt;h1&gt;CVE-2023-4863 libwebp dependency check tools&lt;/h1&gt; &#xA;&lt;p&gt;This tool checks if your server&#39;s application or process that is affected by CVE-2023-4863 libwebp Heap buffer overflow (Version above 0.5.0).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Run this script in your production environment carefully.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Result Screen Shot&lt;/h3&gt; &#xA;&lt;p&gt;Scan Result&lt;/p&gt; &#xA;&lt;img alt=&#34;scan result&#34; src=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/assets/scan-process-result.png&#34; width=&#34;80%&#34;&gt; &#xA;&lt;img alt=&#34;scan result&#34; src=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/assets/scan-path-result.png&#34; width=&#34;80%&#34;&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/#how-it-works&#34;&gt;How it works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/#working-scenarios&#34;&gt;Working Scenarios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/#communication&#34;&gt;Communication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;CVE-2023-4863 vulnerability affects libwebp versions 0.5.0 to 1.3.1. It identifies the affected libwebp by analyzing the processes&#39; opened files and the target application files.&lt;/li&gt; &#xA; &lt;li&gt;Starting from libwebp version 0.5.0, new export functions, &lt;code&gt;WebPCopyPlane&lt;/code&gt; and &lt;code&gt;WebPCopyPixels&lt;/code&gt;, were introduced. The vulnerable function is &lt;code&gt;VP8LBuildHuffmanTable&lt;/code&gt;. Therefore, one can identify libwebp versions with vulnerabilities by matching these function names in the files.&lt;/li&gt; &#xA; &lt;li&gt;In the security version 1.3.2, the &lt;code&gt;VP8LHuffmanTablesAllocate&lt;/code&gt; function was added. If the target file has not been stripped, this function can also serve as a basis for version identification.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Working Scenarios&lt;/h2&gt; &#xA;&lt;p&gt;In local or server environments, it aims to inspect specific paths, all running processes&#39; binary files, jar packages, and rpm packages to determine if there is a dependency on the vulnerable component of libwebp.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;1. Get The Acess Token&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We analyze components from the Maven Central Repository to obtain hashes for the affected components, and we keep this data continuously updated. You can use this data for matching after authenticating with an access token from the MurphySec.com, which helps save analysis time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://www.murphysec.com/console/set/token&#34;&gt;MurphySec platform - Access Token&lt;/a&gt;, click the copy button after the Token, then the access token is copied to the clipboard.&lt;/p&gt; &#xA;&lt;img alt=&#34;scan result&#34; src=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/assets/access-token.png&#34; width=&#34;80%&#34;&gt; &#xA;&lt;h3&gt;2. Detection&lt;/h3&gt; &#xA;&lt;h4&gt;Scan Specific Directory Path&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash libwebp-checker.sh --token Your_Token_From_Console -f /path_you_want_scan/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scan All Process&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash libwebp-checker.sh --token Your_Token_From_Console -p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. View Result&lt;/h3&gt; &#xA;&lt;p&gt;It will print the affected filenames, process IDs and matched string keywords, such as WebPCopyPlane,WebPCopyPlane. To help further analysis and update the component.&lt;/p&gt; &#xA;&lt;h2&gt;Known Vulnerable Java Artifacts&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;ai.edgestore:engine&#xA;app.cash.paparazzi:layoutlib-native-linux&#xA;app.cash.paparazzi:native-linux&#xA;cn.ellabook:flutter-saassdk&#xA;cn.ellabook:saassdk&#xA;cn.fly2think:SmartPanorama&#xA;cn.fly2think:SmartPanoramaX&#xA;cn.rongcloud.sdk:fu_beautifier&#xA;com.aiyaapp.aiya:AyEffectSDK&#xA;com.computinglaboratory:opencv&#xA;com.criteo:jvips&#xA;com.eworkcloud.starter:ework-cloud-starter-image&#xA;com.eworkcloud:ework-cloud-starter-image&#xA;com.facebook.fresco:webpsupport&#xA;com.facebook.spectrum:spectrum-webp&#xA;com.freeletics.fork.paparazzi:layoutlib-native-linux&#xA;com.github.gotson:webp-imageio&#xA;com.github.jenly1314.WeChatQRCode:opencv-armv64&#xA;com.github.jenly1314.WeChatQRCode:opencv-armv7a&#xA;com.github.jenly1314.WeChatQRCode:opencv-x86&#xA;com.github.jenly1314.WeChatQRCode:opencv-x86_64&#xA;com.github.usefulness:webp-imageio&#xA;com.github.zjupure:webpdecoder&#xA;com.innov8tif.okaycam:opencv&#xA;com.innov8tif.okayid:opencv&#xA;com.scanzy:ScanzyBarcodeScannerSDK&#xA;com.waicool20.skrypton:skrypton-native-linux64&#xA;de.marcreichelt:webp-backport&#xA;de.sg-o.lib:opencv&#xA;id.mob:api-client&#xA;io.bitbucket.mobscannersdk:customdocscannerlib&#xA;io.bitbucket.mobscannersdk:docscannerlib&#xA;io.github.anylifezlb:slientEngine&#xA;io.github.darkxanter:webp-imageio&#xA;io.github.greycode:ocrlite&#xA;io.github.humbleui:skija-linux&#xA;io.github.humbleui:skija-linux-x64&#xA;io.github.izuiyou:octoflutter&#xA;io.github.jiemakel:octavo-assembly_2.12&#xA;io.github.zumikua:webploader-desktop&#xA;io.johnsonlee.layoutlib:native-linux&#xA;io.tiledb:tiledb-cloud-java&#xA;net.ifok.image:webp4j&#xA;org.demen.android.opencv:opencv&#xA;org.demen.android.opencv:opencv-img&#xA;org.demen.android.opencv:opencv_world&#xA;org.godotengine:godot&#xA;org.jetbrains.skiko:skiko-awt-runtime-linux-arm64&#xA;org.jetbrains.skiko:skiko-awt-runtime-linux-x64&#xA;org.jetbrains.skiko:skiko-jvm-runtime-linux-arm64&#xA;org.jetbrains.skiko:skiko-jvm-runtime-linux-x64&#xA;org.lucee:sejda-webp&#xA;org.openpnp:opencv&#xA;org.pireco:kypsdk&#xA;org.robolectric:nativeruntime-dist-compat&#xA;org.sejda.imageio:webp-imageio&#xA;org.sejda.webp-imageio:webp-imageio-sejda&#xA;science.aist:aistcv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p&gt;Contact our official WeChat account, and we&#39;ll add you into the group for communication.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/assets/wechat.png&#34; width=&#34;200px&#34;&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/murphysecurity/libwebp-checker/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>