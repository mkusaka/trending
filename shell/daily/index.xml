<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-21T01:37:20Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nohajc/termux-adb</title>
    <updated>2023-09-21T01:37:20Z</updated>
    <id>tag:github.com,2023-09-21:/nohajc/termux-adb</id>
    <link href="https://github.com/nohajc/termux-adb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run adb in Termux without root permissions!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;termux-adb&lt;/h1&gt; &#xA;&lt;p&gt;Run adb and fastboot in Termux without root permissions!&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This is a modified version of adb and fastboot which enables debugging of one Android device from another via USB cable. It should work with any USB-C male-to-male cable or the corresponding OTG adapter + cable in case of micro USB.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install Termux from F-Droid&lt;/li&gt; &#xA; &lt;li&gt;install Termux:API from F-Droid&lt;/li&gt; &#xA; &lt;li&gt;in Termux:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl -s https://raw.githubusercontent.com/nohajc/termux-adb/master/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;this will add &lt;code&gt;termux-adb&lt;/code&gt; apt repository and install the corresponding public gpg key&lt;/li&gt; &#xA; &lt;li&gt;latest version of &lt;code&gt;termux-adb&lt;/code&gt; and &lt;code&gt;termux-fastboot&lt;/code&gt; will be installed&lt;/li&gt; &#xA; &lt;li&gt;any future upgrades will be done as part of &lt;code&gt;pkg upgrade&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Both &lt;code&gt;termux-adb&lt;/code&gt; and &lt;code&gt;termux-fastboot&lt;/code&gt; are drop-in replacements for the original commands so the usage is exactly the same. The commands were only renamed to avoid collision with the official &lt;code&gt;android-tools&lt;/code&gt; Termux package (which contains more tools beside these two).&lt;/p&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;The official termux-packages build environment is used (&lt;a href=&#34;https://github.com/nohajc/termux-packages&#34;&gt;forked&lt;/a&gt; to add the &lt;code&gt;termux-adb&lt;/code&gt; package).&lt;/p&gt; &#xA;&lt;p&gt;For more information, please refer to the Termux documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/termux/termux-packages/wiki/Build-environment&#34;&gt;https://github.com/termux/termux-packages/wiki/Build-environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/termux/termux-packages/wiki/Building-packages&#34;&gt;https://github.com/termux/termux-packages/wiki/Building-packages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Current limitations&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;code&gt;termux-usb&lt;/code&gt; and querying device serial number with &lt;code&gt;libusb&lt;/code&gt; tends to be slow. That&#39;s not a problem for adb which runs as a daemon and scans USB devices periodically. However, it is quite noticable for &lt;code&gt;termux-fastboot&lt;/code&gt; commands because fastboot doesn&#39;t use any background service. This can potentially be improved in a future release.&lt;/p&gt; &#xA;&lt;h2&gt;How it actually works&lt;/h2&gt; &#xA;&lt;p&gt;Termux has the &lt;code&gt;android-tools&lt;/code&gt; package which contains &lt;code&gt;adb&lt;/code&gt; and &lt;code&gt;fastboot&lt;/code&gt; but it normally works on rooted devices only. This is mainly due to filesystem permissions required by adb when enumerating USB devices (traversing &lt;code&gt;/dev/bus/usb/*&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;There is, however, Android API exposed by &lt;code&gt;termux-usb&lt;/code&gt; utility which gives you a raw file descriptor of any connected USB device after manual approval by the user.&lt;/p&gt; &#xA;&lt;p&gt;Of course, &lt;code&gt;adb&lt;/code&gt; by itself doesn&#39;t know anything about &lt;code&gt;termux-usb&lt;/code&gt; nor it can take raw file descriptors from command-line or environment. If it cannot access &lt;code&gt;/dev/bus/usb&lt;/code&gt;, it just won&#39;t detect any connected devices. This is where &lt;code&gt;termux-adb&lt;/code&gt; comes in.&lt;/p&gt; &#xA;&lt;p&gt;Both &lt;code&gt;adb&lt;/code&gt; and &lt;code&gt;fastboot&lt;/code&gt; are patched to scan for USB devices using the &lt;code&gt;termux-usb&lt;/code&gt; command. Furhtermore a Unix Domain Socket is used to transfer the obtained file descriptors from child process to the parent (i.e. &lt;code&gt;termux-adb&lt;/code&gt; runs &lt;code&gt;termux-usb&lt;/code&gt; for every detected device which in turn runs &lt;code&gt;termux-adb&lt;/code&gt; in a special mode that will only send USB file descriptor to the UDS file descriptor provided by environment variable).&lt;/p&gt; &#xA;&lt;p&gt;This way we don&#39;t complicate the user experience and we can work with any number of devices connected at once (e.g. if you have a USB hub connected to the OTG adapter).&lt;/p&gt;</summary>
  </entry>
</feed>