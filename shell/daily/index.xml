<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-30T01:40:36Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>scopatz/nanorc</title>
    <updated>2022-12-30T01:40:36Z</updated>
    <id>tag:github.com,2022-12-30:/scopatz/nanorc</id>
    <link href="https://github.com/scopatz/nanorc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improved Nano Syntax Highlighting Files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Improved Nano Syntax Highlighting Files&lt;/h1&gt; &#xA;&lt;p&gt;This repository holds &lt;code&gt;{lang}.nanorc&lt;/code&gt; files that have improved definitions of syntax highlighting for various languages.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are three ways to install this repo.&lt;/p&gt; &#xA;&lt;h3&gt;1. Automatic installer&lt;/h3&gt; &#xA;&lt;p&gt;Copy the following code to download and run the installer script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your machine doesn&#39;t have &lt;code&gt;curl&lt;/code&gt; command, use this code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh -O- | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This automatically unpacks all the &lt;code&gt;.nanorc&lt;/code&gt; files to &lt;code&gt;~/.nano&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Note&lt;/h4&gt; &#xA;&lt;p&gt;Some syntax definitions which exist in Nano upstream may be preferable to the ones provided by this package.&lt;br&gt; The &lt;code&gt; install.sh&lt;/code&gt; script may be run with &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--lite&lt;/code&gt; to insert the included syntax definitions from this package with &lt;em&gt;lower&lt;/em&gt; precedence than the ones provided by the standard package.&lt;/p&gt; &#xA;&lt;h3&gt;2. Package managers&lt;/h3&gt; &#xA;&lt;p&gt;The follow table lists all systems with this package published.&lt;br&gt; Feel free to add your official package manager.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Systems that are based in others&#39; package managers or repositories are compatible. For example: &lt;code&gt;pacman&lt;/code&gt; based systems are compatible with &lt;code&gt;Arch Linux&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;System&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pacman -S nano-syntax-highlighting&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;3. Clone repo (copy the files)&lt;/h3&gt; &#xA;&lt;p&gt;The files should be placed inside of the &lt;code&gt;~/.nano/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;You can put the files in another directory inside the correct &lt;code&gt;.nano&lt;/code&gt; folder. For example: &lt;code&gt;~/.nano/nanorc/&lt;/code&gt;. For readability will use &lt;code&gt;$install_path&lt;/code&gt; for the path of your choose (in &lt;em&gt;system wide&lt;/em&gt; the path is always &lt;code&gt;/usr/share/nano-syntax-highlighting/&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;For user, only run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone git@github.com:scopatz/nanorc.git $install_path&lt;/code&gt; or&lt;br&gt; &lt;code&gt;git clone https://github.com/scopatz/nanorc.git $install_path&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For system wide, run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo git clone https://github.com/scopatz/nanorc.git $install_path&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;After installation, you need to inform &lt;code&gt;nano&lt;/code&gt; to used the new highlight files. The configuration file is located at &lt;code&gt;~/.nanorc&lt;/code&gt;, for users, and at &lt;code&gt;/etc/nanorc&lt;/code&gt;, for system wide. If this file doesn&#39;t exist, create a new one.&lt;/p&gt; &#xA;&lt;p&gt;Again there are three ways:&lt;/p&gt; &#xA;&lt;h3&gt;1. Include all&lt;/h3&gt; &#xA;&lt;p&gt;Append the content of the folder in one line, with wildcard:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;echo &#34;include $install_path/*.nanorc&#34; &amp;gt;&amp;gt; ~/.nanorc&lt;/code&gt; or&lt;br&gt; &lt;code&gt;echo &#34;include $install_path/*.nanorc&#34; &amp;gt;&amp;gt; /etc/nanorc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Include/append our &lt;code&gt;nanorc&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;p&gt;Simply run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cat $install_path/nanorc &amp;gt;&amp;gt; ~/.nanorc&lt;/code&gt; or&lt;br&gt; &lt;code&gt;cat $install_path/nanorc &amp;gt;&amp;gt; /etc/nanorc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. One by one&lt;/h3&gt; &#xA;&lt;p&gt;Add your preferable languages one by one into the file. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## C/C++&#xA;include &#34;~/.nano/c.nanorc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tricks &amp;amp; Tweaks&lt;/h2&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;\&amp;lt;&lt;/code&gt; and &lt;code&gt;\&amp;gt;&lt;/code&gt; are regular character escapes on MacOS.&lt;br&gt; The bug is fixed in Nano, but this might be a problem if you are using an older version&lt;br&gt; If this is the case, replace them respectively with &lt;code&gt;[[:&amp;lt;:]]&lt;/code&gt; and &lt;code&gt;[[:&amp;gt;:]]&lt;/code&gt;. This is reported in &lt;a href=&#34;https://github.com/scopatz/nanorc/issues/52&#34;&gt;Issue 52&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Why not include the original files?&lt;/h3&gt; &#xA;&lt;p&gt;Good question! It&#39;s due to the way that nano reads the files, the regex instructions should be in a &lt;em&gt;specific order&lt;/em&gt; which is evident in some nanorc files. And if we use the &lt;code&gt;include&lt;/code&gt; or &lt;code&gt;extendsyntax&lt;/code&gt; commands, the colors or other things may not work as expected.&lt;br&gt; The best way to make changes is by copying and editing the original files.&lt;br&gt; Please see this &lt;a href=&#34;https://savannah.gnu.org/bugs/index.php?5698&#34;&gt;issue&lt;/a&gt;.&lt;br&gt; But if some original nanorc file needs an update, feel free to &lt;a href=&#34;https://savannah.gnu.org/patch/?func=additem&amp;amp;group=nano&#34;&gt;patch it&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;My shortcut is not working!&lt;/h3&gt; &#xA;&lt;p&gt;Please see this &lt;a href=&#34;https://savannah.gnu.org/bugs/?56994&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Some of these files are derived from the original &lt;a href=&#34;https://www.nano-editor.org&#34;&gt;Nano&lt;/a&gt; editor &lt;a href=&#34;https://git.savannah.gnu.org/cgit/nano.git&#34;&gt;repo&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taikoxyz/simple-taiko-node</title>
    <updated>2022-12-30T01:40:36Z</updated>
    <id>tag:github.com,2022-12-30:/taikoxyz/simple-taiko-node</id>
    <link href="https://github.com/taikoxyz/simple-taiko-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Start your Taiko node with a one line command. 💻&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;simple-taiko-node&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Inspired by &lt;a href=&#34;https://github.com/smartcontracts/simple-optimism-node&#34;&gt;https://github.com/smartcontracts/simple-optimism-node&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Start your Taiko node with a one line command.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisite&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt; is installed and running&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Clone this repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/taikoxyz/simple-taiko-node.git&#xA;cd simple-taiko-node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure your node&lt;/h3&gt; &#xA;&lt;p&gt;Copy &lt;code&gt;.env.sample&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp .env.sample .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run your node as a proposer, configure the optional environment varibles in this &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Run the node&lt;/h3&gt; &#xA;&lt;h4&gt;Start&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command starts the configured node. If you want to run it in the background, please add the &lt;code&gt;-d&lt;/code&gt; flag (&lt;code&gt;docker compose up -d&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If this is the first time you start the node, it will synchronize from the genesis to the present, which may take some time. You can monitor this progress through logs or in the local grafana dashboard and see the latest L2 chain status in &lt;a href=&#34;https://l2explorer.a1.taiko.xyz/&#34;&gt;Taiko Alpha-1 L2 block explorer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Stop&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command shuts down the node, but will keep all volumes, so next time you restart the node, it won&#39;t need to synchronize from the genesis again.&lt;/p&gt; &#xA;&lt;h4&gt;Wipe&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose down -v&#xA;rm -f .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These commands completely remove the node by removing all volumes used by each container.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s included&lt;/h2&gt; &#xA;&lt;h3&gt;Taiko Geth (L2 execution engine)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taikoxyz/taiko-geth&#34;&gt;taiko-geth&lt;/a&gt; is a fork of &lt;a href=&#34;https://github.com/ethereum/go-ethereum&#34;&gt;go-ethereum&lt;/a&gt; with some changes according to Taiko protocol, it serves as a L2 &lt;a href=&#34;https://ethereum.org/en/glossary/#execution-client&#34;&gt;execution engine&lt;/a&gt;, which needs to be coupled to a &lt;a href=&#34;https://ethereum.org/en/glossary/#consensus-client&#34;&gt;consensus client&lt;/a&gt; (in Taiko network, this will be the &lt;a href=&#34;https://github.com/taikoxyz/taiko-client&#34;&gt;taiko client&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/taikoxyz/taiko-client/tree/main/docs#driver&#34;&gt;driver software&lt;/a&gt;), like L1 ethereum execution engines, it will listen to new L2 transactions broadcasted in the L2 network, executes them in EVM, and holds the latest state and database of all current L2 data.&lt;/p&gt; &#xA;&lt;h3&gt;Taiko client driver&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taikoxyz/taiko-client&#34;&gt;taiko client&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/taikoxyz/taiko-client/tree/main/docs#driver&#34;&gt;driver software&lt;/a&gt; serves as an L2 &lt;a href=&#34;https://ethereum.org/en/glossary/#consensus-client&#34;&gt;consensus client&lt;/a&gt;. It will listen for new L2 blocks from the Taiko layer 1 protocol contract, then direct the connected L2 execution engine to insert them into its local chain through the &lt;a href=&#34;https://github.com/ethereum/execution-apis/tree/main/src/engine&#34;&gt;Engine API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Taiko client proposer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/taikoxyz/taiko-client&#34;&gt;taiko client&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/taikoxyz/taiko-client/tree/main/docs#proposer&#34;&gt;proposer software&lt;/a&gt; will fetch pending transactions in a L2 execution engine&#39;s mempool intervally, then try to propose them to the Taiko layer 1 protocol contract.&lt;/p&gt; &#xA;&lt;h3&gt;Prometheus and Grafana&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; dashboard with a &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt; datasource is also included to display the L2 execution engine&#39;s real time status. You can visit it at &lt;a href=&#34;http://localhost:3000/d/L2ExecutionEngine/l2-execution-engine-overview?orgId=1&amp;amp;refresh=10s&#34;&gt;http://localhost:3000/d/L2ExecutionEngine/l2-execution-engine-overview?orgId=1&amp;amp;refresh=10s&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img width=&#34;2556&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/104078303/207779788-65d28e44-828e-491a-86a1-d8d9fc2ba81b.png&#34;&gt;</summary>
  </entry>
  <entry>
    <title>dora2-iOS/kok3shi16-rootless</title>
    <updated>2022-12-30T01:40:36Z</updated>
    <id>tag:github.com,2022-12-30:/dora2-iOS/kok3shi16-rootless</id>
    <link href="https://github.com/dora2-iOS/kok3shi16-rootless" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kok3shi16 (rootless)&lt;/h1&gt; &#xA;&lt;p&gt;A rootless jailbreak toolkit for (A11) iOS 16.x for &lt;em&gt;developers&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;警告&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;このツールは概念実証ツールです。&lt;/li&gt; &#xA; &lt;li&gt;このツールを悪用することや、悪用目的で使用することを固く禁じます。いかなる場合において、製作者および配布者がこれらのツールに対しての責任を負うことは一切無いものとします。&lt;/li&gt; &#xA; &lt;li&gt;このツールの使用は全て自己責任であり、これらのツールをダウンロードした時点で全てあなた自身の責任となります。これに同意できない場合、ツールのダウンロード、使用を一切禁じます。&lt;/li&gt; &#xA; &lt;li&gt;このツールを再配布することを禁じます。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;dependence&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libimobiledevice/libirecovery&#34;&gt;libirecovery&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/libimobiledevice/libirecovery.git&#xA;cd libirecovery&#xA;./autogen.sh&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;how to use?&lt;/h2&gt; &#xA;&lt;p&gt;You need to turn on developer mode to do this.&lt;br&gt; Also, never set a passcode. If you set a passcode, you will not be able to use this tool until you initialize the device.&lt;br&gt; In other words, device security is severely compromised for the use of this tool, and it is recommended that it not be run on anything other than research devices.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ./kokeshi16-rootless [option]&#xA;  -h, --help&#x9;&#x9;&#x9;show usage&#xA;  -l, --list&#x9;&#x9;&#x9;show list of supported devices&#xA;  -c, --cleandfu&#x9;&#x9;use cleandfu&#xA;  -d, --debug&#x9;&#x9;&#x9;enable debug log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;about specifications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It use checkm8 exploit to boot pwn recovery mode, send payload and hook jump, run fsboot, apply kernel patch using pongo-kpf. then, boot with &lt;code&gt;rootdev=md0 serial=3 wdt=-1&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;/var/jb/.installed_kok3shi&lt;/code&gt; exists, it will attempt to start the jailbreak service automatically (execute &lt;code&gt;/var/jb/etc/rc.d/*&lt;/code&gt;, and load daemons under &lt;code&gt;/var/jb/Library/LaunchDaemons&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;install procursus rootless bootstrap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect the jailbroken device using kokeshi16-rootless to USB and then execute the following command on macos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/dora2-iOS/kok3shi16-rootless.git &amp;amp;&amp;amp; cd kok3shi16-rootless&#xA;./deploy.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;re-enable rootless environment after reboot&lt;/h2&gt; &#xA;&lt;p&gt;execute the following command on ios. (via SSH)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#/var/jb/etc/rc.d/*&#xA;launchctl load /var/jb/Library/LaunchDaemons&#xA;uicache -a&#xA;sbreload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ensure that the package is set up automatically the next time boot&lt;/h2&gt; &#xA;&lt;p&gt;execute the following command on ios. (via SSH)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;touch /var/jb/.installed_kok3shi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;connect to SSH&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;iproxy &amp;lt;port&amp;gt;:44 &amp;amp;&#xA;ssh root@localhost -p &amp;lt;port&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rarely panic when turning off power.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;support for chips other than A11?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;eta son.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;what about user support?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;no, it&#39;s for developoers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;credit&lt;/h2&gt; &#xA;&lt;p&gt;binpack: procursus&lt;br&gt; libirecovery: libimobiledevice&lt;br&gt; checkm8 exploit: axi0mx&lt;br&gt; pongo-kpf: checkra1n&lt;/p&gt;</summary>
  </entry>
</feed>