<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-04T01:40:47Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jinyus/related_post_gen</title>
    <updated>2023-10-04T01:40:47Z</updated>
    <id>tag:github.com,2023-10-04:/jinyus/related_post_gen</id>
    <link href="https://github.com/jinyus/related_post_gen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data Processing benchmark featuring Rust, Go, Swift, Zig etc.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Generate related posts based on tags. Sort by the number of shared tags.&lt;/p&gt; &#xA;&lt;h2&gt;Steps:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the posts JSON file.&lt;/li&gt; &#xA; &lt;li&gt;Iterate over the posts and populate a map containing: &lt;code&gt;tag -&amp;gt; List&amp;lt;Post&amp;gt;&lt;/code&gt; that has that tag&lt;/li&gt; &#xA; &lt;li&gt;Iterate over the posts and for each post: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create a map: &lt;code&gt;Post -&amp;gt; int&lt;/code&gt; to track the number of shared tags&lt;/li&gt; &#xA;   &lt;li&gt;For each tag, Iterate over the posts that have that tag&lt;/li&gt; &#xA;   &lt;li&gt;For each post, increment the shared tag count in the map.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sort the related posts by the number of shared tags.&lt;/li&gt; &#xA; &lt;li&gt;Write the top 5 related posts for each post to a new JSON file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run Benchmark&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;./run.sh go | rust | python | all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Rules &lt;/summary&gt; &#xA; &lt;h3&gt;No:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;FFI (including assembly inlining)&lt;/li&gt; &#xA;  &lt;li&gt;Unsafe code blocks&lt;/li&gt; &#xA;  &lt;li&gt;Custom benchmarking&lt;/li&gt; &#xA;  &lt;li&gt;Disabling runtime checks (bounds etc)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Must:&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Parse json at runtime&lt;/li&gt; &#xA;  &lt;li&gt;Not hardcore number of posts&lt;/li&gt; &#xA;  &lt;li&gt;Support up to 100 tags&lt;/li&gt; &#xA;  &lt;li&gt;Use a stable release of the compiler/runtime&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Updated Results from github workflow (&lt;a href=&#34;https://github.com/jinyus/related_post_gen/raw/main/raw_results.md&#34;&gt;raw data&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Processing Time&lt;/th&gt; &#xA;   &lt;th&gt;Total (PT + I/O)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go Concurrent&lt;/td&gt; &#xA;   &lt;td&gt;19.40 ms&lt;/td&gt; &#xA;   &lt;td&gt;58.7 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rust Rayon&lt;/td&gt; &#xA;   &lt;td&gt;22.32 ms&lt;/td&gt; &#xA;   &lt;td&gt;42.7 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;36.83 ms&lt;/td&gt; &#xA;   &lt;td&gt;73.2 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;39.83 ms&lt;/td&gt; &#xA;   &lt;td&gt;60.5 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java (GraalVM)&lt;/td&gt; &#xA;   &lt;td&gt;56.00 ms&lt;/td&gt; &#xA;   &lt;td&gt;96.4 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Crystal&lt;/td&gt; &#xA;   &lt;td&gt;66.93 ms&lt;/td&gt; &#xA;   &lt;td&gt;131.1 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vlang&lt;/td&gt; &#xA;   &lt;td&gt;70.18 ms&lt;/td&gt; &#xA;   &lt;td&gt;454.2 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swift&lt;/td&gt; &#xA;   &lt;td&gt;77.43 ms&lt;/td&gt; &#xA;   &lt;td&gt;562.9 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Odin&lt;/td&gt; &#xA;   &lt;td&gt;85.18 ms&lt;/td&gt; &#xA;   &lt;td&gt;381.9 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart VM&lt;/td&gt; &#xA;   &lt;td&gt;125.75 ms&lt;/td&gt; &#xA;   &lt;td&gt;681.0 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart AOT&lt;/td&gt; &#xA;   &lt;td&gt;169.25 ms&lt;/td&gt; &#xA;   &lt;td&gt;335.4 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zig&lt;/td&gt; &#xA;   &lt;td&gt;213.00 ms&lt;/td&gt; &#xA;   &lt;td&gt;262.0 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fsharp&lt;/td&gt; &#xA;   &lt;td&gt;214.14 ms&lt;/td&gt; &#xA;   &lt;td&gt;1.095 s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JS (Deno)&lt;/td&gt; &#xA;   &lt;td&gt;219.80 ms&lt;/td&gt; &#xA;   &lt;td&gt;330.5 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JS (Node)&lt;/td&gt; &#xA;   &lt;td&gt;246.20 ms&lt;/td&gt; &#xA;   &lt;td&gt;337.7 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java (JIT)&lt;/td&gt; &#xA;   &lt;td&gt;292.15 ms&lt;/td&gt; &#xA;   &lt;td&gt;610.2 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Julia v2&lt;/td&gt; &#xA;   &lt;td&gt;667.50 ms&lt;/td&gt; &#xA;   &lt;td&gt;5.821 s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JS (Bun)&lt;/td&gt; &#xA;   &lt;td&gt;915.60 ms&lt;/td&gt; &#xA;   &lt;td&gt;1.004 s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Numpy&lt;/td&gt; &#xA;   &lt;td&gt;1.02 s&lt;/td&gt; &#xA;   &lt;td&gt;1.228 s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;3.23 s&lt;/td&gt; &#xA;   &lt;td&gt;3.315 s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Old Results with details (on my machine) &lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Language&lt;/th&gt; &#xA;    &lt;th&gt;Processing Time&lt;/th&gt; &#xA;    &lt;th&gt;Total (+ I/O)&lt;/th&gt; &#xA;    &lt;th&gt;Details&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;4.5s&lt;/td&gt; &#xA;    &lt;td&gt;Initial&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust v2&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;2.60s&lt;/td&gt; &#xA;    &lt;td&gt;Replace std HashMap with fxHashMap by &lt;a href=&#34;https://www.reddit.com/r/rust/comments/16plgok/comment/k1rtr4x/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;phazer99&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust v3&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;1.28s&lt;/td&gt; &#xA;    &lt;td&gt;Preallocate and reuse map and unstable sort by &lt;a href=&#34;https://www.reddit.com/r/rust/comments/16plgok/comment/k1rzo7g/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;vdrmn&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/rust/comments/16plgok/comment/k1rzwdx/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;Darksonn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust v4&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;0.13s&lt;/td&gt; &#xA;    &lt;td&gt;Use Post index as key instead of Pointer and Binary Heap by &lt;a href=&#34;https://www.reddit.com/r/rust/comments/16plgok/comment/k1s5ea0/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;RB5009&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust v5&lt;/td&gt; &#xA;    &lt;td&gt;38ms&lt;/td&gt; &#xA;    &lt;td&gt;52ms&lt;/td&gt; &#xA;    &lt;td&gt;Rm hashing from loop and use vec[count] instead of map[index]count by RB5009&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust v6&lt;/td&gt; &#xA;    &lt;td&gt;23ms&lt;/td&gt; &#xA;    &lt;td&gt;36ms&lt;/td&gt; &#xA;    &lt;td&gt;Optimized Binary Heap Ops by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/12&#34;&gt;scottlamb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust Rayon&lt;/td&gt; &#xA;    &lt;td&gt;9ms&lt;/td&gt; &#xA;    &lt;td&gt;22ms&lt;/td&gt; &#xA;    &lt;td&gt;Parallelize by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/4&#34;&gt;masmullin2000&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust Rayon&lt;/td&gt; &#xA;    &lt;td&gt;8ms&lt;/td&gt; &#xA;    &lt;td&gt;22ms&lt;/td&gt; &#xA;    &lt;td&gt;Remove comparison out of hot loop&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;1.5s&lt;/td&gt; &#xA;    &lt;td&gt;Initial&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go v2&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;80ms&lt;/td&gt; &#xA;    &lt;td&gt;Add rust optimizations&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go v3&lt;/td&gt; &#xA;    &lt;td&gt;56ms&lt;/td&gt; &#xA;    &lt;td&gt;70ms&lt;/td&gt; &#xA;    &lt;td&gt;Use goccy/go-json&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go v3&lt;/td&gt; &#xA;    &lt;td&gt;34ms&lt;/td&gt; &#xA;    &lt;td&gt;55ms&lt;/td&gt; &#xA;    &lt;td&gt;Use generic binaryheap by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/7&#34;&gt;DrBlury&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go v4&lt;/td&gt; &#xA;    &lt;td&gt;26ms&lt;/td&gt; &#xA;    &lt;td&gt;50ms&lt;/td&gt; &#xA;    &lt;td&gt;Replace binary heap with custom priority queue&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go v5&lt;/td&gt; &#xA;    &lt;td&gt;20ms&lt;/td&gt; &#xA;    &lt;td&gt;43ms&lt;/td&gt; &#xA;    &lt;td&gt;Remove comparison out of hot loop&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go Con&lt;/td&gt; &#xA;    &lt;td&gt;10ms&lt;/td&gt; &#xA;    &lt;td&gt;33ms&lt;/td&gt; &#xA;    &lt;td&gt;Go concurrency by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/17&#34;&gt;tirprox&lt;/a&gt; and &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/8&#34;&gt;DrBlury&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go Con v2&lt;/td&gt; &#xA;    &lt;td&gt;5ms&lt;/td&gt; &#xA;    &lt;td&gt;29ms&lt;/td&gt; &#xA;    &lt;td&gt;Use arena, use waitgroup, rm binheap by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/20&#34;&gt;DrBlury&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Python&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;td&gt;7.81s&lt;/td&gt; &#xA;    &lt;td&gt;Initial&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Python v2&lt;/td&gt; &#xA;    &lt;td&gt;1.35s&lt;/td&gt; &#xA;    &lt;td&gt;1.53s&lt;/td&gt; &#xA;    &lt;td&gt;Add rust optimizations by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/10&#34;&gt;dave-andersen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Numpy&lt;/td&gt; &#xA;    &lt;td&gt;0.57s&lt;/td&gt; &#xA;    &lt;td&gt;0.85s&lt;/td&gt; &#xA;    &lt;td&gt;Numpy implementation by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/11&#34;&gt;Copper280z&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Crystal&lt;/td&gt; &#xA;    &lt;td&gt;50ms&lt;/td&gt; &#xA;    &lt;td&gt;96ms&lt;/td&gt; &#xA;    &lt;td&gt;Inital w/ previous optimizations&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Crystal v2&lt;/td&gt; &#xA;    &lt;td&gt;33ms&lt;/td&gt; &#xA;    &lt;td&gt;72ms&lt;/td&gt; &#xA;    &lt;td&gt;Replace binary heap with custom priority queue&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Odin&lt;/td&gt; &#xA;    &lt;td&gt;110ms&lt;/td&gt; &#xA;    &lt;td&gt;397ms&lt;/td&gt; &#xA;    &lt;td&gt;Ported from golang code&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Odin v2&lt;/td&gt; &#xA;    &lt;td&gt;104ms&lt;/td&gt; &#xA;    &lt;td&gt;404ms&lt;/td&gt; &#xA;    &lt;td&gt;Remove comparison out of hot loop&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Dart VM&lt;/td&gt; &#xA;    &lt;td&gt;125ms&lt;/td&gt; &#xA;    &lt;td&gt;530ms&lt;/td&gt; &#xA;    &lt;td&gt;Ported frog golang code&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Dart bin&lt;/td&gt; &#xA;    &lt;td&gt;274ms&lt;/td&gt; &#xA;    &lt;td&gt;360ms&lt;/td&gt; &#xA;    &lt;td&gt;Compiled executable&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Vlang&lt;/td&gt; &#xA;    &lt;td&gt;339ms&lt;/td&gt; &#xA;    &lt;td&gt;560ms&lt;/td&gt; &#xA;    &lt;td&gt;Ported from golang code&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;    &lt;td&gt;⠀&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Zig&lt;/td&gt; &#xA;    &lt;td&gt;80ms&lt;/td&gt; &#xA;    &lt;td&gt;110ms&lt;/td&gt; &#xA;    &lt;td&gt;Provided by &lt;a href=&#34;https://github.com/jinyus/related_post_gen/pull/30&#34;&gt;akhildevelops&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>tracelabs/tlosint-vm</title>
    <updated>2023-10-04T01:40:47Z</updated>
    <id>tag:github.com,2023-10-04:/tracelabs/tlosint-vm</id>
    <link href="https://github.com/tracelabs/tlosint-vm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Trace Labs OSINT VM&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/Apollo-o/tlosint-vm/assets/22546578/db6e5343-c08c-4ab1-8a1e-41112f80e18f&#34; alt=&#34;Image&#34;&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/tlosintvm-1.0.0-brightgreen.svg?maxAge=259200&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/tracelabs/tlosint-vm/actions/workflows/releases.yml/badge.svg?event=push&#34; alt=&#34;event workflow&#34;&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/tracelabs/tlosint-vm/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;The repository includes a recipe file to build a Linux OSINT Distribution for Trace Labs based on the Kali Linux kali-vm script - &lt;a href=&#34;https://gitlab.com/kalilinux/build-scripts/kali-vm&#34;&gt;https://gitlab.com/kalilinux/build-scripts/kali-vm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;These are pre-generated bundles that can either import in to Virtualbox or VMWare. They are generated with the code in the Main branch of this repo with no interference from us. The goal here is to produce a finished product but give the users insight in to the &#34;recipe&#34; used to build it.&lt;/p&gt; &#xA;&lt;p&gt;After you&#39;ve downloaded the release that applies to you, it should be as simple as importing it in to your hypervisor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tracelabs/tlosint-vm/releases&#34;&gt;https://github.com/tracelabs/tlosint-vm/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Login Credntials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;osint&lt;/code&gt; &lt;code&gt;osint&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Obsidian&lt;/h2&gt; &#xA;&lt;p&gt;Note taking app Obsidian comes bundled with the VM. There is an icon on the desktop to launch Obisidian or you can run the appimage located in the home directory. We&#39;ve already set up a vault for you called &#34;TL Vault&#34; that lives on the Desktop. The first time you run Obsidian open that vault folder. The default theme is the Trace Labs theme.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d rather build your own from source or modify the version we&#39;ve released then building your own is as straight forward as: (Note: You don&#39;t need to do this if you&#39;ve already downloaded a release and imported to hypervisor)&lt;/p&gt; &#xA;&lt;p&gt;From a Kali Linux machine run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/tracelabs/tlosint-vm&#xA;sudo apt -y install debos p7zip qemu-utils zerofree&#xA;cd tlosint-vm&#xA;chmod +x scripts/tl/*.sh&#xA;chmod +x scripts/*.sh&#xA;chmod +x *.sh&#xA;sudo ./build.sh&#xA;Locate the OVA in the images/ directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Applications&lt;/h2&gt; &#xA;&lt;p&gt;The majority of OSINT tools no longer come pre-packaged with the VM. There is an option to download them via a script on the desktop though. This keeps the size of the release small enough to build and host on Github. If you want to install the tools in the script then:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a terminal&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Desktop&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Execute the install script with &lt;code&gt;./install-tools.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tracelabs/tofm/raw/main/tofm.md&#34;&gt;Trace Labs OSINT Field Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://download2.tracelabs.org/Trace-Labs-OSINT-Search-Party-CTF-Contestant-Guide_v1.pdf&#34;&gt;Trace Labs CTF Contestant Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Reporting&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tjnull/TJ-OSINT-Notebook&#34;&gt;TJ Null&#39;s OSINT Joplin template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Browsers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/enterprise/&#34;&gt;Firefox ESR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.torproject.org/download/&#34;&gt;Tor Browser&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Data Analysis&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/securing/DumpsterDiver&#34;&gt;DumpsterDiver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hfiguiere/exifprobe&#34;&gt;Exifprobe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcook/exifscan/&#34;&gt;Exifscan&lt;/a&gt; (Private)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/osde8info/stegosuite&#34;&gt;Stegosuite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Domains&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Domainfy (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aboul3la/Sublist3r&#34;&gt;Sublist3r&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Downloaders&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.httrack.com/&#34;&gt;Browse Mirrored Websites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opsdisk/metagoofil&#34;&gt;Metagoofil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hatlord/Spiderpig&#34;&gt;Spiderpig&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.httrack.com/&#34;&gt;WebHTTrack Website Copier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl&#34;&gt;Youtube-DL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Email&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sham00n/buster&#34;&gt;Buster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Checkfy (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m4ll0k/Infoga&#34;&gt;Infoga&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Mailfy (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/laramies/theHarvester&#34;&gt;theHarvester&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/khast3x/h8mail&#34;&gt;h8mail&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lulz3xploit/LittleBrother&#34;&gt;Little Brother&lt;/a&gt; (Archived)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;OSRFramework&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kpcyrd/sn0int&#34;&gt;sn0int&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smicallef/spiderfoot&#34;&gt;Spiderfoot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.maltego.com/downloads/&#34;&gt;Maltego&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sundowndev/phoneinfoga&#34;&gt;OnionSearch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Phone Numbers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Phonefy (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sundowndev/phoneinfoga&#34;&gt;PhoneInfoga&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Social Media&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/instaloader/instaloader&#34;&gt;Instaloader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twintproject/twint&#34;&gt;Twint&lt;/a&gt; (Archived)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Searchfy (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/drawrowfly/tiktok-scraper&#34;&gt;Tiktok Scraper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/humandecoded/twayback&#34;&gt;Twayback&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Usernames&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Alias Generator (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sherlock-project/sherlock&#34;&gt;Sherlock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/i3visio/osrframework&#34;&gt;Usufy (OSRFramework)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other Tools&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s0md3v/Photon&#34;&gt;Photon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sherlock-project/sherlock&#34;&gt;Sherlock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cli.shodan.io/&#34;&gt;Shodan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://joplinapp.org/help/&#34;&gt;Joplin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration Settings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Delete cookies/history on shutdown&lt;/li&gt; &#xA; &lt;li&gt;Block geo tracking&lt;/li&gt; &#xA; &lt;li&gt;Block mic/camera detection&lt;/li&gt; &#xA; &lt;li&gt;Block Firefox tracking&lt;/li&gt; &#xA; &lt;li&gt;Preload OSINT Bookmarks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Are you interested in the VM development? Join us on &lt;a href=&#34;https://discord.com/invite/tracelabs&#34;&gt;Discord&lt;/a&gt; in #osint-vm channel.&lt;/p&gt; &#xA;&lt;p&gt;PRs are welcome. We ask that you PR in to the Dev branch.&lt;/p&gt;</summary>
  </entry>
</feed>