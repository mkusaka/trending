<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-20T01:47:00Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gonglei007/GameDevMind</title>
    <updated>2022-08-20T01:47:00Z</updated>
    <id>tag:github.com,2022-08-20:/gonglei007/GameDevMind</id>
    <link href="https://github.com/gonglei007/GameDevMind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;网络手游开发知识、技术与信息库，游戏研发技术从业者的导航地图。&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;网络手游开发技术图谱&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;游戏技术开发者的快速导航地图。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/README-en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;  算下来，中国的游戏行业已经走过了几十年的春秋，作为游戏开发者的我们，在其中也经历了很多有意思的和无聊的技术上的事情，但一直没有梳理出这个行业中技术领域的所有事情的全貌。&lt;br&gt;   最近，我们整理、创建了一套开源资料库——《网络手游研发技术图谱》，目的是给所有游戏研发技术人员（从初入行者到技术管理者）一个快速手册，在处理相关技术工作或者想了解一个技术领域内容的时候，能够快速看到要考虑的问题和去检索的内容。 &lt;br&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;code&gt;✅资料里有什么&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;❌资料里没有什么&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;* 是什么？&lt;br&gt; * 特色与价值？&lt;br&gt; * 应用与经验&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;* 完整的知识。&lt;br&gt; * 系统的讲解。&lt;br&gt; * 具体的实现。&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;总览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/0.%E6%80%BB%E8%A7%88.png?raw=true&#34; alt=&#34;图1、这是知识树的框架，展开的知识树可以点击下面的github链接查看。&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/1.%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF.md&#34;&gt;1.开发技术&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/1.1.%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8A%80%E6%9C%AF.md&#34;&gt;1.1.客户端技术&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/1.1.1.%E5%9B%BE%E5%BD%A2%E4%B8%8E%E6%B8%B2%E6%9F%93.png?raw=true&#34;&gt;1.1.1.图形与渲染&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/1.1.2.%E7%89%A9%E7%90%86.png?raw=true&#34;&gt;1.1.2.物理&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/1.1.3.UI.png?raw=true&#34;&gt;1.1.3.UI&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/1.1.4.%E5%A3%B0%E9%9F%B3.png?raw=true&#34;&gt;1.1.4.声音&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/1.2.%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8A%80%E6%9C%AF.md&#34;&gt;1.2.服务端技术&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/1.x.%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E7%AE%B1.md&#34;&gt;1.x.开发者工具箱&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/2.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.png?raw=true&#34;&gt;2.编程语言&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/2.1.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%B1%E9%80%9A%E6%A6%82%E5%BF%B5.md&#34;&gt;2.1.编程语言共通概念&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/2.2.C++%E8%AF%AD%E8%A8%80.md&#34;&gt;2.2.C++语言&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/2.3.C#%E8%AF%AD%E8%A8%80.md&#34;&gt;2.3.C#语言&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/3.%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1.png?raw=true&#34;&gt;3.程序设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.%E4%BA%A7%E5%93%81%E7%A0%94%E5%8F%91.png?raw=true&#34;&gt;4.产品研发&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.1.%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BA%A7%E5%93%81%E7%A0%94%E5%8F%91.png?raw=true&#34;&gt;4.1.客户端产品研发&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.1.1.%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%95%E5%B1%82%E9%80%9A%E7%94%A8%E7%B3%BB%E7%BB%9F.png?raw=true&#34;&gt;4.1.1.客户端底层通用系统&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.1.2.%E5%AE%A2%E6%88%B7%E7%AB%AF3D%E5%9C%BA%E6%99%AF%E5%BC%80%E5%8F%91.png?raw=true&#34;&gt;4.1.2.客户端3D场景开发&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.1.3.%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BC%98%E5%8C%96.png?raw=true&#34;&gt;4.1.3.客户端优化&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.2.%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BA%A7%E5%93%81%E7%A0%94%E5%8F%91.png?raw=true&#34;&gt;4.2.服务端产品研发&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.2.1.%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9E%B6%E6%9E%84.png?raw=true&#34;&gt;4.2.1.服务端架构&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.3.%E7%94%9F%E4%BA%A7%E7%BA%BF%E7%A0%94%E5%8F%91.png?raw=true&#34;&gt;4.3.生产线研发&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.5.%E6%8A%80%E6%9C%AF%E4%B8%AD%E5%8F%B0%E7%A0%94%E5%8F%91.png?raw=true&#34;&gt;4.5.技术中台研发&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/4.6.%E4%B8%9A%E5%8A%A1%E5%B1%82%E5%8A%9F%E8%83%BD%E7%B3%BB%E7%BB%9F.png?raw=true&#34;&gt;4.6.业务层功能系统&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/5.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86.png?raw=true&#34;&gt;5.项目管理&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/5.1.%E7%A0%94%E5%8F%91%E8%BF%87%E7%A8%8B%E7%AE%A1%E7%90%86.png?raw=true&#34;&gt;5.1.研发过程管理&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/5.2.%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86.png?raw=true&#34;&gt;5.2.版本管理&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/6.%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF.png?raw=true&#34;&gt;6.运维技术&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/7.%E4%BA%A7%E5%93%81%E8%BF%90%E8%90%A5%E6%94%AF%E6%8C%81.png?raw=true&#34;&gt;7.产品运营支持&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/7.1.GM%E5%90%8E%E5%8F%B0.png?raw=true&#34;&gt;7.1.GM后台&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/7.2.%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90.png?raw=true&#34;&gt;7.2.数据统计分析&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/exports/8.%E4%BA%A7%E5%93%81%E5%95%86%E4%B8%9A%E5%8C%96.png?raw=true&#34;&gt;8.产品商业化&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/raw/main/mds/8.1.%E6%B8%B8%E6%88%8F%E5%AE%89%E5%85%A8.md&#34;&gt;8.1.游戏安全&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;缩略预览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gonglei007/GameDevMind/raw/main/overview/overview.png?raw=true&#34; alt=&#34;图2、这个知识图谱还在持续的补充扩展中&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;编辑与查看&lt;/h2&gt; &#xA;&lt;p&gt;资料库使用XMind编辑内容（/xminds/目录）。&lt;br&gt; 也可以简单的查看导出图（/exports/目录）。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;贡献者（拼音首字母排序）&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gonglei007&#34;&gt;公雷（发起者）&lt;/a&gt; , 【虚席以待...】&lt;/p&gt; &#xA;&lt;p&gt;诚挚的邀请更多游戏行业重要参与者来一起完善资料库。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;交流&lt;/h2&gt; &#xA;&lt;p&gt;欢迎同行们多来交流和分享，共同促进游戏行业和游戏技术人员的发展。&lt;/p&gt; &#xA;&lt;p&gt;QQ讨论群:242500383&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;支持者&lt;/h2&gt; &#xA;&lt;h3&gt;Stargazers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/gonglei007/GameDevMind&#34; alt=&#34;Stargazers repo roster for @gonglei007/GameDevMind&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forkers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gonglei007/GameDevMind/network/members&#34;&gt;&lt;img src=&#34;https://reporoster.com/forks/gonglei007/GameDevMind&#34; alt=&#34;Forkers repo roster for @gonglei007/GameDevMind&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;联系我们&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/gonglei007/GameDevMind/blob/main/images/联系人-G.L.png?raw=true&#34; alt=&#34;drawing&#34; width=&#34;96&#34;&gt;</summary>
  </entry>
  <entry>
    <title>awslabs/git-secrets</title>
    <updated>2022-08-20T01:47:00Z</updated>
    <id>tag:github.com,2022-08-20:/awslabs/git-secrets</id>
    <link href="https://github.com/awslabs/git-secrets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prevents you from committing secrets and credentials into git repositories&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;=========== git-secrets&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Prevents you from committing passwords and other sensitive information to a git repository.&lt;/h2&gt; &#xA;&lt;p&gt;.. contents:: :depth: 2&lt;/p&gt; &#xA;&lt;h2&gt;Synopsis&lt;/h2&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --scan [-r|--recursive] [--cached] [--no-index] [--untracked] [&amp;lt;files&amp;gt;...]&#xA;git secrets --scan-history&#xA;git secrets --install [-f|--force] [&amp;lt;target-directory&amp;gt;]&#xA;git secrets --list [--global]&#xA;git secrets --add [-a|--allowed] [-l|--literal] [--global] &amp;lt;pattern&amp;gt;&#xA;git secrets --add-provider [--global] &amp;lt;command&amp;gt; [arguments...]&#xA;git secrets --register-aws [--global]&#xA;git secrets --aws-provider [&amp;lt;credentials-file&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-secrets&lt;/code&gt; scans commits, commit messages, and &lt;code&gt;--no-ff&lt;/code&gt; merges to prevent adding secrets into your git repositories. If a commit, commit message, or any commit in a &lt;code&gt;--no-ff&lt;/code&gt; merge history matches one of your configured prohibited regular expression patterns, then the commit is rejected.&lt;/p&gt; &#xA;&lt;h2&gt;Installing git-secrets&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;git-secrets&lt;/code&gt; must be placed somewhere in your PATH so that it is picked up by &lt;code&gt;git&lt;/code&gt; when running &lt;code&gt;git secrets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*nix (Linux/macOS)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;You can use the ``install`` target of the provided Makefile to install ``git secrets`` and the man page.&#xA;You can customize the install path using the PREFIX and MANPREFIX variables.&#xA;&#xA;::&#xA;&#xA;    make install&#xA;&#xA;Windows&#xA;~~~~~~~&#xA;&#xA;Run the provided ``install.ps1`` powershell script. This will copy the needed files&#xA;to an installation directory (``%USERPROFILE%/.git-secrets`` by default) and add&#xA;the directory to the current user ``PATH``.&#xA;&#xA;::&#xA;&#xA;    PS &amp;gt; ./install.ps1&#xA;&#xA;Homebrew (for macOS users)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install git-secrets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. warning::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;**You&#39;re not done yet! You MUST install the git hooks for every repo that&#xA;you wish to use with** ``git secrets --install``.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s a quick example of how to ensure a git repository is scanned for secrets on each commit::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /path/to/my/repo&#xA;git secrets --install&#xA;git secrets --register-aws&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced configuration&lt;/h2&gt; &#xA;&lt;p&gt;Add a configuration template if you want to add hooks to all repositories you initialize or clone in the future.&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --register-aws --global&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add hooks to all your local repositories.&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --install ~/.git-templates/git-secrets&#xA;git config --global init.templateDir ~/.git-templates/git-secrets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add custom providers to scan for security credentials.&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add-provider -- cat /path/to/secret/file/patterns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Before making public a repository&lt;/h2&gt; &#xA;&lt;p&gt;With git-secrets is also possible to scan a repository including all revisions:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --scan-history&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;Operation Modes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Each of these options must appear first on the command line.&#xA;&#xA;``--install``&#xA;    Installs git hooks for a repository. Once the hooks are installed for a git&#xA;    repository, commits and non-fast-forward merges for that repository will be prevented&#xA;    from committing secrets.&#xA;&#xA;``--scan``&#xA;    Scans one or more files for secrets. When a file contains a secret, the&#xA;    matched text from the file being scanned will be written to stdout and the&#xA;    script will exit with a non-zero status. Each matched line will be written with&#xA;    the name of the file that matched, a colon, the line number that matched,&#xA;    a colon, and then the line of text that matched. If no files are provided,&#xA;    all files returned by ``git ls-files`` are scanned.&#xA;&#xA;``--scan-history``&#xA;    Scans repository including all revisions. When a file contains a secret, the&#xA;    matched text from the file being scanned will be written to stdout and the&#xA;    script will exit with a non-zero status. Each matched line will be written with&#xA;    the name of the file that matched, a colon, the line number that matched,&#xA;    a colon, and then the line of text that matched.&#xA;&#xA;``--list``&#xA;    Lists the ``git-secrets`` configuration for the current repo or in the global&#xA;    git config.&#xA;&#xA;``--add``&#xA;    Adds a prohibited or allowed pattern.&#xA;&#xA;``--add-provider``&#xA;    Registers a secret provider. Secret providers are executables that when&#xA;    invoked output prohibited patterns that ``git-secrets`` should treat as&#xA;    prohibited.&#xA;&#xA;``--register-aws``&#xA;    Adds common AWS patterns to the git config and ensures that keys present&#xA;    in ``~/.aws/credentials`` are not found in any commit. The following&#xA;    checks are added:&#xA;&#xA;    - AWS Access Key IDs via ``(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}``&#xA;    - AWS Secret Access Key assignments via &#34;:&#34; or &#34;=&#34; surrounded by optional&#xA;      quotes&#xA;    - AWS account ID assignments via &#34;:&#34; or &#34;=&#34; surrounded by optional quotes&#xA;    - Allowed patterns for example AWS keys (``AKIAIOSFODNN7EXAMPLE`` and&#xA;      ``wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY``)&#xA;    - Known credentials from ``~/.aws/credentials``&#xA;&#xA;    .. note::&#xA;&#xA;        While the patterns registered by this command should catch most&#xA;        instances of AWS credentials, these patterns are **not** guaranteed to&#xA;        catch them **all**. ``git-secrets`` should be used as an extra means of&#xA;        insurance -- you still need to do your due diligence to ensure that you&#xA;        do not commit credentials to a repository.&#xA;&#xA;``--aws-provider``&#xA;    Secret provider that outputs credentials found in an INI file. You can&#xA;    optionally provide the path to an INI file.&#xA;&#xA;&#xA;Options for ``--install``&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;-f, --force&lt;/code&gt; Overwrites existing hooks if present.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;target-directory&amp;gt;&lt;/code&gt; When provided, installs git hooks to the given directory. The current directory is assumed if &lt;code&gt;&amp;lt;target-directory&amp;gt;&lt;/code&gt; is not provided.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;If the provided ``&amp;lt;target-directory&amp;gt;`` is not in a git repository, the&#xA;directory will be created and hooks will be placed in&#xA;``&amp;lt;target-directory&amp;gt;/hooks``. This can be useful for creating git template&#xA;directories using with ``git init --template &amp;lt;target-directory&amp;gt;``.&#xA;&#xA;You can run ``git init`` on a repository that has already been initialized.&#xA;From the `git init documentation &amp;lt;https://git-scm.com/docs/git-init&amp;gt;`_:&#xA;&#xA;    From the git documentation: Running ``git init`` in an existing repository&#xA;    is safe. It will not overwrite things that are already there. The&#xA;    primary reason for rerunning ``git init`` is to pick up newly added&#xA;    templates (or to move the repository to another place if&#xA;    ``--separate-git-dir`` is given).&#xA;&#xA;The following git hooks are installed:&#xA;&#xA;1. ``pre-commit``: Used to check if any of the files changed in the commit&#xA;   use prohibited patterns.&#xA;2. ``commit-msg``: Used to determine if a commit message contains a&#xA;   prohibited patterns.&#xA;3. ``prepare-commit-msg``: Used to determine if a merge commit will&#xA;   introduce a history that contains a prohibited pattern at any point.&#xA;   Please note that this hook is only invoked for non fast-forward merges.&#xA;&#xA;.. note::&#xA;&#xA;    Git only allows a single script to be executed per hook. If the&#xA;    repository contains Debian-style subdirectories like ``pre-commit.d``&#xA;    and ``commit-msg.d``, then the git hooks will be installed into these&#xA;    directories, which assumes that you&#39;ve configured the corresponding&#xA;    hooks to execute all of the scripts found in these directories. If&#xA;    these git subdirectories are not present, then the git hooks will be&#xA;    installed to the git repo&#39;s ``.git/hooks`` directory.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examples ^^^^^^^^&lt;/p&gt; &#xA;&lt;p&gt;Install git hooks to the current directory::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /path/to/my/repository&#xA;git secrets --install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install git hooks to a repository other than the current directory::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --install /path/to/my/repository&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a git template that has &lt;code&gt;git-secrets&lt;/code&gt; installed, and then copy that template into a git repository::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --install ~/.git-templates/git-secrets&#xA;git init --template ~/.git-templates/git-secrets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Overwrite existing hooks if present::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --install -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options for &lt;code&gt;--scan&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;``-r, --recursive``&#xA;    Scans the given files recursively. If a directory is encountered, the&#xA;    directory will be scanned. If ``-r`` is not provided, directories will be&#xA;    ignored.&#xA;&#xA;    ``-r`` cannot be used alongside ``--cached``, ``--no-index``, or&#xA;    ``--untracked``.&#xA;&#xA;``--cached``&#xA;    Searches blobs registered in the index file.&#xA;&#xA;``--no-index``&#xA;    Searches files in the current directory that is not managed by git.&#xA;&#xA;``--untracked``&#xA;    In addition to searching in the tracked files in the working tree,&#xA;    ``--scan`` also in untracked files.&#xA;&#xA;``&amp;lt;files&amp;gt;...``&#xA;    The path to one or more files on disk to scan for secrets.&#xA;&#xA;    If no files are provided, all files returned by ``git ls-files`` are&#xA;    scanned.&#xA;&#xA;&#xA;Examples&#xA;^^^^^^^^&#xA;&#xA;Scan all files in the repo::&#xA;&#xA;    git secrets --scan&#xA;&#xA;Scans a single file for secrets::&#xA;&#xA;    git secrets --scan /path/to/file&#xA;&#xA;Scans a directory recursively for secrets::&#xA;&#xA;    git secrets --scan -r /path/to/directory&#xA;&#xA;Scans multiple files for secrets::&#xA;&#xA;    git secrets --scan /path/to/file /path/to/other/file&#xA;&#xA;You can scan by globbing::&#xA;&#xA;    git secrets --scan /path/to/directory/*&#xA;&#xA;Scan from stdin::&#xA;&#xA;    echo &#39;hello!&#39; | git secrets --scan -&#xA;&#xA;&#xA;Options for ``--list``&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--global&lt;/code&gt; Lists only git-secrets configuration in the global git config.&lt;/p&gt; &#xA;&lt;p&gt;Options for &lt;code&gt;--add&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;``--global``&#xA;    Adds patterns to the global git config&#xA;&#xA;``-l, --literal``&#xA;    Escapes special regular expression characters in the provided pattern so&#xA;    that the pattern is searched for literally.&#xA;&#xA;``-a, --allowed``&#xA;    Mark the pattern as allowed instead of prohibited. Allowed patterns are&#xA;    used to filter out false positives.&#xA;&#xA;``&amp;lt;pattern&amp;gt;``&#xA;    The regex pattern to search.&#xA;&#xA;&#xA;Examples&#xA;^^^^^^^^&#xA;&#xA;Adds a prohibited pattern to the current repo::&#xA;&#xA;    git secrets --add &#39;[A-Z0-9]{20}&#39;&#xA;&#xA;Adds a prohibited pattern to the global git config::&#xA;&#xA;    git secrets --add --global &#39;[A-Z0-9]{20}&#39;&#xA;&#xA;Adds a string that is scanned for literally (``+`` is escaped)::&#xA;&#xA;    git secrets --add --literal &#39;foo+bar&#39;&#xA;&#xA;Add an allowed pattern::&#xA;&#xA;    git secrets --add -a &#39;allowed pattern&#39;&#xA;&#xA;&#xA;Options for ``--register-aws``&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--global&lt;/code&gt; Adds AWS specific configuration variables to the global git config.&lt;/p&gt; &#xA;&lt;p&gt;Options for &lt;code&gt;--aws-provider&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;``[&amp;lt;credentials-file&amp;gt;]``&#xA;    If provided, specifies the custom path to an INI file to scan. If not&#xA;    provided, ``~/.aws/credentials`` is assumed.&#xA;&#xA;&#xA;Options for ``--add-provider``&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--global&lt;/code&gt; Adds the provider to the global git config.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; Provider command to invoke. When invoked the command is expected to write prohibited patterns separated by new lines to stdout. Any extra arguments provided are passed on to the command.&lt;/p&gt; &#xA;&lt;p&gt;Examples ^^^^^^^^&lt;/p&gt; &#xA;&lt;p&gt;Registers a secret provider with arguments::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add-provider -- git secrets --aws-provider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cats secrets out of a file::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add-provider -- cat /path/to/secret/file/patterns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Defining prohibited patterns&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;egrep&lt;/code&gt;-compatible regular expressions are used to determine if a commit or commit message contains any prohibited patterns. These regular expressions are defined using the &lt;code&gt;git config&lt;/code&gt; command. It is important to note that different systems use different versions of egrep. For example, when running on macOS, you will use a different version of &lt;code&gt;egrep&lt;/code&gt; than when running on something like Ubuntu (BSD vs GNU).&lt;/p&gt; &#xA;&lt;p&gt;You can add prohibited regular expression patterns to your git config using &lt;code&gt;git secrets --add &amp;lt;pattern&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ignoring false positives&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes a regular expression might match false positives. For example, git commit SHAs look a lot like AWS access keys. You can specify many different regular expression patterns as false positives using the following command:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add --allowed &#39;my regex pattern&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also add regular expressions patterns to filter false positives to a &lt;code&gt;.gitallowed&lt;/code&gt; file located in the repository&#39;s root directory. Lines starting with &lt;code&gt;#&lt;/code&gt; are skipped (comment line) and empty lines are also skipped.&lt;/p&gt; &#xA;&lt;p&gt;First, git-secrets will extract all lines from a file that contain a prohibited match. Included in the matched results will be the full path to the name of the file that was matched, followed by &#39;:&#39;, followed by the line number that was matched, followed by the entire line from the file that was matched by a secret pattern. Then, if you&#39;ve defined allowed regular expressions, git-secrets will check to see if all of the matched lines match at least one of your registered allowed regular expressions. If all of the lines that were flagged as secret are canceled out by an allowed match, then the subject text does not contain any secrets. If any of the matched lines are not matched by an allowed regular expression, then git-secrets will fail the commit/merge/message.&lt;/p&gt; &#xA;&lt;p&gt;.. important::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Just as it is a bad practice to add prohibited patterns that are too&#xA;greedy, it is also a bad practice to add allowed patterns that are too&#xA;forgiving. Be sure to test out your patterns using ad-hoc calls to&#xA;``git secrets --scan $filename`` to ensure they are working as intended.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Secret providers&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you want to check for an exact pattern match against a set of known secrets. For example, you might want to ensure that no credentials present in &lt;code&gt;~/.aws/credentials&lt;/code&gt; ever show up in a commit. In these cases, it&#39;s better to leave these secrets in one location rather than spread them out across git repositories in git configs. You can use &#34;secret providers&#34; to fetch these types of credentials. A secret provider is an executable that when invoked outputs prohibited patterns separated by new lines.&lt;/p&gt; &#xA;&lt;p&gt;You can add secret providers using the &lt;code&gt;--add-provider&lt;/code&gt; command::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add-provider -- git secrets --aws-provider&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice the use of &lt;code&gt;--&lt;/code&gt;. This ensures that any arguments associated with the provider are passed to the provider each time it is invoked when scanning for secrets.&lt;/p&gt; &#xA;&lt;h2&gt;Example walkthrough&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s take a look at an example. Given the following subject text (stored in &lt;code&gt;/tmp/example&lt;/code&gt;)::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This is a test!&#xA;password=ex@mplepassword&#xA;password=******&#xA;More test...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the following registered patterns:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add &#39;password\s*=\s*.+&#39;&#xA;git secrets --add --allowed --literal &#39;ex@mplepassword&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running &lt;code&gt;git secrets --scan /tmp/example&lt;/code&gt;, the result will result in the following error output::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/tmp/example:3:password=******&#xA;&#xA;[ERROR] Matched prohibited pattern&#xA;&#xA;Possible mitigations:&#xA;- Mark false positives as allowed using: git config --add secrets.allowed ...&#xA;- List your configured patterns: git config --get-all secrets.patterns&#xA;- List your configured allowed patterns: git config --get-all secrets.allowed&#xA;- Use --no-verify if this is a one-time false positive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Breaking this down, the prohibited pattern value of &lt;code&gt;password\s*=\s*.+&lt;/code&gt; will match the following lines::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/tmp/example:2:password=ex@mplepassword&#xA;/tmp/example:3:password=******&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...But the first match will be filtered out due to the fact that it matches the allowed regular expression of &lt;code&gt;ex@mplepassword&lt;/code&gt;. Because there is still a remaining line that did not match, it is considered a secret.&lt;/p&gt; &#xA;&lt;p&gt;Because that matching lines are placed on lines that start with the filename and line number (e.g., &lt;code&gt;/tmp/example:3:...&lt;/code&gt;), you can create allowed patterns that take filenames and line numbers into account in the regular expression. For example, you could whitelist an entire file using something like::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add --allowed &#39;/tmp/example:.*&#39;&#xA;git secrets --scan /tmp/example &amp;amp;&amp;amp; echo $?&#xA;# Outputs: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you could allow a specific line number of a file if that line is unlikely to change using something like the following:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git secrets --add --allowed &#39;/tmp/example:3:.*&#39;&#xA;git secrets --scan /tmp/example &amp;amp;&amp;amp; echo $?&#xA;# Outputs: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Keep this in mind when creating allowed patterns to ensure that your allowed patterns are not inadvertently matched due to the fact that the filename is included in the subject text that allowed patterns are matched against.&lt;/p&gt; &#xA;&lt;h2&gt;Skipping validation&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--no-verify&lt;/code&gt; option in the event of a false positive match in a commit, merge, or commit message. This will skip the execution of the git hook and allow you to make the commit or merge.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Author: &lt;code&gt;Michael Dowling &amp;lt;https://github.com/mtdowling&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;Issue tracker: This project&#39;s source code and issue tracker can be found at &lt;code&gt;https://github.com/awslabs/git-secrets &amp;lt;https://github.com/awslabs/git-secrets&amp;gt;&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;Special thanks to Adrian Vatchinsky and Ari Juels of Cornell University for providing suggestions and feedback.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tj-actions/changed-files</title>
    <updated>2022-08-20T01:47:00Z</updated>
    <id>tag:github.com,2022-08-20:/tj-actions/changed-files</id>
    <link href="https://github.com/tj-actions/changed-files" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Github action to retrieve all (added, copied, modified, deleted, renamed, type changed, unmerged, unknown) files and directories.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.codacy.com/gh/tj-actions/changed-files/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=tj-actions/changed-files&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/4a625e9b62794b5b98e169c15c0e673c&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/tj-actions/changed-files/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/actions/workflows/sync-release-version.yml&#34;&gt;&lt;img src=&#34;https://github.com/tj-actions/changed-files/actions/workflows/sync-release-version.yml/badge.svg?sanitize=true&#34; alt=&#34;Update release version.&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/search?o=desc&amp;amp;q=tj-actions+changed-files+language%3AYAML&amp;amp;s=&amp;amp;type=Code&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fused-by.vercel.app%2Fapi%2Fgithub-actions%2Fused-by%3Faction%3Dtj-actions%2Fchanged-files%26badge%3Dtrue&#34; alt=&#34;Public workflows that use this action.&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Ubuntu-E95420?logo=ubuntu&amp;amp;logoColor=white&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/mac%20os-000000?logo=macos&amp;amp;logoColor=F0F0F0&#34; alt=&#34;Mac OS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Windows-0078D6?logo=windows&amp;amp;logoColor=white&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-14-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;h2&gt;changed-files&lt;/h2&gt; &#xA;&lt;p&gt;Retrieve all changed files and directories relative to the target branch (&lt;code&gt;pull_request*&lt;/code&gt; based events) or the last remote commit (&lt;code&gt;push&lt;/code&gt; based event) returning the &lt;strong&gt;absolute path&lt;/strong&gt; to all changed files and directories from the project root.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast execution (0-2 seconds on average).&lt;/li&gt; &#xA; &lt;li&gt;Easy to debug.&lt;/li&gt; &#xA; &lt;li&gt;Boolean output indicating that certain files have been changed.&lt;/li&gt; &#xA; &lt;li&gt;Scales to large repositories.&lt;/li&gt; &#xA; &lt;li&gt;Git submodules support.&lt;/li&gt; &#xA; &lt;li&gt;No extra API calls.&lt;/li&gt; &#xA; &lt;li&gt;Escaped JSON Output which can be used for running matrix jobs based on changed files.&lt;/li&gt; &#xA; &lt;li&gt;List only changed directories.&lt;/li&gt; &#xA; &lt;li&gt;Monorepos (Fetches only the last remote commit).&lt;/li&gt; &#xA; &lt;li&gt;Supports all platforms (Linux, MacOS, Windows).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners&#34;&gt;GitHub-hosted runners&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/enterprise-server@3.3/admin/github-actions/getting-started-with-github-actions-for-your-enterprise/getting-started-with-github-actions-for-github-enterprise-server&#34;&gt;GitHub Enterprise Server&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners&#34;&gt;self-hosted runners&lt;/a&gt; support.&lt;/li&gt; &#xA; &lt;li&gt;List all files and directories that have changed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Between the current pull request branch and the last commit on the target branch.&lt;/li&gt; &#xA;   &lt;li&gt;Between the current pull request branch and the fork point on the target branch.&lt;/li&gt; &#xA;   &lt;li&gt;Between the last commit and the current pushed change.&lt;/li&gt; &#xA;   &lt;li&gt;Between the last remote branch commit and the current HEAD.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restrict change detection to a subset of files and directories: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Report on files that have at least one change.&lt;/li&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet&#34;&gt;Glob pattern&lt;/a&gt; matching.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; For &lt;code&gt;push&lt;/code&gt; events you need to include &lt;code&gt;fetch-depth: 0&lt;/code&gt; &lt;strong&gt;OR&lt;/strong&gt; &lt;code&gt;fetch-depth: 2&lt;/code&gt; depending on your use case.&lt;/li&gt; &#xA;  &lt;li&gt;When using &lt;code&gt;persist-credentials: false&lt;/code&gt; with &lt;code&gt;actions/checkout@v3&lt;/code&gt; you&#39;ll need to specify a &lt;code&gt;token&lt;/code&gt; using the &lt;code&gt;token&lt;/code&gt; input.&lt;/li&gt; &#xA;  &lt;li&gt;For monorepos where pulling all the branch history might not be desired, you can omit &lt;code&gt;fetch-depth&lt;/code&gt; for &lt;code&gt;pull_request&lt;/code&gt; events.&lt;/li&gt; &#xA;  &lt;li&gt;For files located in a sub-directory ensure that the pattern specified contains &lt;code&gt;**/&lt;/code&gt; (globstar) to match any preceding directories or explicitly pass the full path relative to the project root. See: &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues/314&#34;&gt;#314&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: CI&#xA;&#xA;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;  pull_request:&#xA;    branches:&#xA;      - main&#xA;&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest  # windows-latest | macos-latest&#xA;    name: Test changed-files&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;        with:&#xA;          fetch-depth: 0  # OR &#34;2&#34; -&amp;gt; To retrieve the preceding commit.&#xA;&#xA;      - name: Get changed files&#xA;        id: changed-files&#xA;        uses: tj-actions/changed-files@v27&#xA;&#xA;      - name: List all changed files&#xA;        run: |&#xA;          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do&#xA;            echo &#34;$file was changed&#34;&#xA;          done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you feel generous and want to show some extra appreciation:&lt;/p&gt; &#xA;&lt;p&gt;Support this project with a &lt;span&gt;⭐&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/jackton1&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy me a coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Outputs&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Acronym&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Meaning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Added&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;C&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Copied&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;M&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Modified&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;D&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Deleted&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;R&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Renamed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;T&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Type changed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;U&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unmerged&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Unknown&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Output&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;example&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;any_changed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt; OR &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Returns &lt;code&gt;true&lt;/code&gt; when any &lt;br&gt; of the filenames provided using &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input has changed. If no &lt;code&gt;files&lt;/code&gt; have been specified,&lt;br&gt; an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt; is returned. &lt;br&gt; i.e. &lt;em&gt;using a combination of all added, &lt;br&gt;copied, modified and renamed files (ACMR)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;only_changed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt; OR &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Returns &lt;code&gt;true&lt;/code&gt; when only &lt;br&gt; files provided using &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input has changed. If no &lt;code&gt;files&lt;/code&gt; have been specified,&lt;br&gt; an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt; is returned. (ACMR)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;other_changed_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select all other changed files &lt;br&gt; not listed in the files input &lt;br&gt; i.e. &lt;em&gt;a combination of all added, &lt;br&gt; copied and modified files (ACMR)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;any_modified&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt; OR &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Returns &lt;code&gt;true&lt;/code&gt; when any &lt;br&gt; of the filenames provided using &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input has been modified. If no &lt;code&gt;files&lt;/code&gt; have been specified,&lt;br&gt; an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt; is returned. &lt;br&gt; i.e. &lt;em&gt;using a combination of all added, &lt;br&gt;copied, modified, renamed, and deleted files (ACMRD)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;only_modified&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt; OR &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Returns &lt;code&gt;true&lt;/code&gt; when only &lt;br&gt; files provided using &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input has been modified. If no &lt;code&gt;files&lt;/code&gt; have been specified,&lt;br&gt; an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt; is returned.(ACMRD)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;other_modified_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select all other modified files &lt;br&gt; not listed in the files input &lt;br&gt; i.e. &lt;em&gt;a combination of all added, &lt;br&gt; copied, modified, and deleted files (ACMRD)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;any_deleted&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt; OR &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Returns &lt;code&gt;true&lt;/code&gt; when any &lt;br&gt; of the filenames provided using &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input has been deleted. If no &lt;code&gt;files&lt;/code&gt; have been specified,&lt;br&gt; an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt; is returned. (D)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;only_deleted&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt; OR &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Returns &lt;code&gt;true&lt;/code&gt; when only &lt;br&gt; files provided using &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input has been deleted. If no &lt;code&gt;files&lt;/code&gt; have been specified,&lt;br&gt; an empty string &lt;code&gt;&#39;&#39;&lt;/code&gt; is returned. (D)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;other_deleted_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select all other deleted files &lt;br&gt; not listed in the files input &lt;br&gt; i.e. &lt;em&gt;a combination of all deleted files (D)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all_changed_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select all changed files &lt;br&gt; i.e. &lt;em&gt;a combination of all added, &lt;br&gt;copied, modified and renamed files (ACMR)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all_modified_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select all changed files &lt;br&gt; i.e. &lt;em&gt;a combination of all added, &lt;br&gt;copied, modified, renamed and deleted files (ACMRD)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all_changed_and_modified_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select all changed &lt;br&gt; and modified files &lt;br&gt; i.e. &lt;em&gt;a combination of (ACMRDTUX)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;all_old_new_renamed_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;old name.txt,new name.txt old name 2.txt,new name 2.txt...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Renamed and list their old and new names. &lt;br&gt; NOTE: This requires setting &lt;code&gt;include_all_old_new_renamed_files&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; (R)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;added_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Added (A)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;copied_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Copied (C)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;deleted_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Deleted (D)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;modified_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Modified (M)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;renamed_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Renamed (R)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;type_changed_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that have their file type changed (T)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;unmerged_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Unmerged (U)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;unknown_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;new.txt path/to/file.png ...&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Select only files that are Unknown (X)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Inputs&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Input&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;required&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;default&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;token&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;${{ github.token }}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow#using-the-github_token-in-a-workflow&#34;&gt;GITHUB_TOKEN&lt;/a&gt; &lt;br&gt; or a repo scoped &lt;br&gt; &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token&#34;&gt;Personal Access Token&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;separator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39; &#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Split character for output strings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;include_all_old_new_renamed_files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Include &lt;code&gt;all_old_new_renamed_files&lt;/code&gt; output. Note this can generate a large output See: &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues/501&#34;&gt;#501&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;old_new_separator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;,&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Split character for old and new filename pairs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;old_new_files_separator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39; &#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Split character for multiple old and new filename pairs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt; OR &lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Check for changes &lt;br&gt; using only these &lt;br&gt; list of file(s) &lt;br&gt; (Defaults to the &lt;br&gt; entire repo)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;files_separator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;\n&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Separator used to split the&lt;br&gt;&lt;code&gt;files&lt;/code&gt; input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;files_from_source_file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source file(s) &lt;br&gt; used to populate &lt;br&gt; the &lt;code&gt;files&lt;/code&gt; input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;files_ignore&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ignore changes to these file(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;files_ignore_separator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;\n&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Separator used to split the &lt;br&gt;&lt;code&gt;files-ignore&lt;/code&gt; input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;files_ignore_from_source_file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source file(s) &lt;br&gt; used to populate &lt;br&gt; the &lt;code&gt;files_ignore&lt;/code&gt; input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;sha&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;${{ github.sha }}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Specify a different &lt;br&gt; commit SHA &lt;br&gt; used for &lt;br&gt; comparing changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;base_sha&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Specify a different &lt;br&gt; base commit SHA &lt;br&gt; used for &lt;br&gt; comparing changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;path&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;&#39;.&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Relative path under &lt;br&gt; &lt;code&gt;GITHUB_WORKSPACE&lt;/code&gt; &lt;br&gt; to the repository&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;since_last_remote_commit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Use the last commit on the remote &lt;br&gt; branch as the &lt;code&gt;base_sha&lt;/code&gt; &lt;br&gt; (Defaults to the last commit &lt;br&gt; on the target branch for Pull requests &lt;br&gt; or the previous commit &lt;br&gt; on the current branch &lt;br&gt; for push events). &lt;br&gt; NOTE: This requires &lt;br&gt; &lt;code&gt;fetch-depth: 0&lt;/code&gt; &lt;br&gt; with &lt;code&gt;actions/checkout@v3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;use_fork_point&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Finds best common ancestor &lt;br&gt; between two commits &lt;br&gt; to use in a three-way merge &lt;br&gt; as the &lt;code&gt;base_sha&lt;/code&gt; &lt;br&gt; See: &lt;a href=&#34;https://git-scm.com/docs/git-merge-base#Documentation/git-merge-base.txt---fork-point&#34;&gt;git merge-base&lt;/a&gt;. &lt;br&gt; NOTE: This pulls the entire commit history of the base branch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;quotepath&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Output filenames completely verbatim by setting this to &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;diff_relative&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Exclude changes outside the current directory and show pathnames relative to it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;dir_names&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Output unique changed directories instead of filenames. &lt;br&gt; NOTE: This returns &lt;code&gt;.&lt;/code&gt; for &lt;br&gt; changed files located in the root of the project.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;json&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Output changed files in JSON format which can be used for matrix jobs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;...&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;        with:&#xA;          fetch-depth: 0  # OR &#34;2&#34; -&amp;gt; To retrieve the preceding commit.&#xA;#          submodules: true # OR &#34;recursive&#34; -&amp;gt; To include all changed submodule files.&#xA;&#xA;      - name: Get changed files using defaults&#xA;        id: changed-files&#xA;        uses: tj-actions/changed-files@v27&#xA;&#xA;      - name: Get changed files using a comma separator&#xA;        id: changed-files-comma&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          separator: &#34;,&#34;&#xA;&#xA;      - name: List all added files&#xA;        run: |&#xA;          for file in ${{ steps.changed-files.outputs.added_files }}; do&#xA;            echo &#34;$file was added&#34;&#xA;          done&#xA;&#xA;      - name: Run step when a file changes&#xA;        if: contains(steps.changed-files.outputs.modified_files, &#39;my-file.txt&#39;)&#xA;        run: |&#xA;          echo &#34;Your my-file.txt file has been modified.&#34;&#xA;&#xA;      - name: Run step when a file has been deleted&#xA;        if: contains(steps.changed-files.outputs.deleted_files, &#39;test.txt&#39;)&#xA;        run: |&#xA;          echo &#34;Your test.txt file has been deleted.&#34;&#xA;&#xA;      - name: Get specific changed files&#xA;        id: changed-files-specific&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          files: |&#xA;            my-file.txt&#xA;            test.txt&#xA;            new.txt&#xA;            test_directory&#xA;            *.sh&#xA;            *.png&#xA;            !*.md&#xA;            *.jpeg&#xA;            **/migrate-*.sql&#xA;          files_ignore: |&#xA;            *.yml&#xA;&#xA;      - name: Run step if any of the listed files above change&#xA;        if: steps.changed-files-specific.outputs.any_changed == &#39;true&#39;&#xA;        run: |&#xA;          echo &#34;One or more files listed above has changed.&#34;&#xA;&#xA;      - name: Run step if only the files listed above change&#xA;        if: steps.changed-files-specific.outputs.only_changed == &#39;true&#39;&#xA;        run: |&#xA;          echo &#34;Only files listed above have changed.&#34;&#xA;&#xA;      - name: Run step if any of the listed files above is deleted&#xA;        if: steps.changed-files.outputs.any_deleted == &#39;true&#39;&#xA;        run: |&#xA;          for file in ${{ steps.changed-files.outputs.deleted_files }}; do&#xA;            echo &#34;$file was deleted&#34;&#xA;          done&#xA;&#xA;      - name: Run step if all listed files above have been deleted&#xA;        if: steps.changed-files.outputs.only_deleted == &#39;true&#39;&#xA;        run: |&#xA;          for file in ${{ steps.changed-files.outputs.deleted_files }}; do&#xA;            echo &#34;$file was deleted&#34;&#xA;          done&#xA;&#xA;      - name: Use a source file or list of file(s) to populate to files input.&#xA;        id: changed-files-specific-source-file&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          files_from_source_file: |&#xA;            test/changed-files-list.txt&#xA;&#xA;      - name: Use a source file or list of file(s) to populate to files input and optionally specify more files.&#xA;        id: changed-files-specific-source-file-and-specify-files&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          files_from_source_file: |&#xA;            test/changed-files-list.txt&#xA;          files: |&#xA;            test.txt&#xA;&#xA;      - name: Use a different commit SHA&#xA;        id: changed-files-custom-sha&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          sha: ${{ github.event.pull_request.head.sha }}&#xA;&#xA;      - name: Use a different base SHA&#xA;        id: changed-files-custom-base-sha&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          base_sha: &#34;2096ed0&#34;&#xA;          &#xA;      - name: Checkout into dir1&#xA;        uses: actions/checkout@v3&#xA;        with:&#xA;          fetch-depth: 0&#xA;          path: dir1&#xA;&#xA;      - name: Run changed-files with defaults on the dir1&#xA;        id: changed-files-for-dir1&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          path: dir1&#xA;&#xA;      - name: List all added files in dir1&#xA;        run: |&#xA;          for file in ${{ steps.changed-files-for-dir1.outputs.added_files }}; do&#xA;            echo &#34;$file was added&#34;&#xA;          done&#xA;&#xA;      - name: Run changed-files using the last commit on the remote branch&#xA;        id: changed-files-since-last-remote-commit&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          since_last_remote_commit: &#34;true&#34;&#xA;      &#xA;      - name: Run changed-files using the fork point of a pull request&#xA;        id: changed-files-fork-point&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          use_fork_point: &#34;true&#34;&#xA;          &#xA;      - name: Run changed-files with quotepath disabled&#xA;        id: changed-files-quotepath&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          quotepath: &#34;false&#34;&#xA;      &#xA;      # Run changed-files action using the last successful commit as the base_sha&#xA;      # NOTE: This setting overrides the commit sha used by setting since_last_remote_commit to true.&#xA;      # It is recommended to use either solution that works for your use case.&#xA;      &#xA;      # Push event based workflows&#xA;      - name: Get branch name&#xA;        id: branch-name&#xA;        uses: tj-actions/branch-names@v5&#xA;&#xA;      - uses: nrwl/last-successful-commit-action@v1&#xA;        id: last_successful_commit_push&#xA;        with:&#xA;          branch: ${{ steps.branch-name.outputs.current_branch }} # Get the last successful commit for the current branch. &#xA;          workflow_id: &#39;test.yml&#39;&#xA;          github_token: ${{ secrets.GITHUB_TOKEN }}&#xA;&#xA;      - name: Run changed-files with the commit of the last successful test workflow run&#xA;        id: changed-files-base-sha-push&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          base_sha: ${{ steps.last_successful_commit_push.outputs.commit_hash }}&#xA;&#xA;      # Pull request based workflows.&#xA;      - name: Get branch name&#xA;        id: branch-name&#xA;        uses: tj-actions/branch-names@v5&#xA;        if: github.event_name == &#39;pull_request&#39;&#xA;&#xA;      - uses: nrwl/last-successful-commit-action@v1&#xA;        id: last_successful_commit_pull_request&#xA;        if: github.event_name == &#39;pull_request&#39;&#xA;        with:&#xA;          branch: ${{ steps.branch-name.outputs.base_ref_branch }} # Get the last successful commit on master or main branch &#xA;          workflow_id: &#39;test.yml&#39;&#xA;          github_token: ${{ secrets.GITHUB_TOKEN }}&#xA;&#xA;      - name: Run changed-files with the commit of the last successful test workflow run on main&#xA;        if: github.event_name == &#39;pull_request&#39;&#xA;        id: changed-files-base-sha-pull-request&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          base_sha: ${{ steps.last_successful_commit_pull_request.outputs.commit_hash }}&#xA;&#xA;      - name: Run changed-files with dir_names&#xA;        id: changed-files-dir-names&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          dir_names: &#34;true&#34;&#xA;      &#xA;      # All outputs are JSON formatted arrays and can be used in other actions and matrix compatible jobs.&#xA;      - name: Run changed-files with json output&#xA;        id: changed-files-json&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          json: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;1147&#34; alt=&#34;Screen Shot 2021-11-19 at 4 59 21 PM&#34; src=&#34;https://user-images.githubusercontent.com/17484350/142696936-8b7ca955-7ef9-4d53-9bdf-3e0008e90c3f.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Free software: &lt;a href=&#34;https://raw.githubusercontent.com/tj-actions/changed-files/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Limitation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Using characters like &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;\r&lt;/code&gt; as separators would be &lt;a href=&#34;https://www.w3schools.com/tags/ref_urlencode.asp&#34;&gt;URL encoded&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Spaces in file names can introduce bugs when using bash loops. See: &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues/216&#34;&gt;#216&lt;/a&gt; However, this action will handle spaces in file names, with a recommendation of using a separator to prevent hidden issues. &lt;img src=&#34;https://user-images.githubusercontent.com/17484350/138558767-b13c90bf-a1ae-4e86-9520-70a6a4624f41.png&#34; alt=&#34;Screen Shot 2021-10-23 at 9 37 34 AM&#34;&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This project follows a &lt;code&gt;v(major).(patch)&lt;/code&gt; versioning scheme with the exception of pointing the git ref of the latest patch release to the major version tag.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Users referencing the legacy &lt;code&gt;v1.x.x&lt;/code&gt; → &lt;code&gt;v5.0.0&lt;/code&gt; semantic versions, are required to switch over to &lt;code&gt;v10.x&lt;/code&gt; → &lt;code&gt;v15.x&lt;/code&gt; respectively as new releases would no longer be deployed using the old versioning scheme.&lt;/li&gt; &#xA;  &lt;li&gt;A breaking change was introduced in &lt;code&gt;v1.1.4&lt;/code&gt; and &lt;code&gt;v13.x&lt;/code&gt; which has been fixed.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Migration guide&lt;/h2&gt; &#xA;&lt;p&gt;With the switch from using grep&#39;s Extended regex to match files to the natively supported workflow glob pattern matching syntax introduced in &lt;a href=&#34;https://github.com/tj-actions/changed-files/releases/tag/v13&#34;&gt;v13&lt;/a&gt; you&#39;ll need to modify patterns used to match &lt;code&gt;files&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BEFORE&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;...&#xA;&#xA;      - name: Get specific changed files&#xA;        id: changed-files-specific&#xA;        uses: tj-actions/changed-files@v12.2&#xA;        with:&#xA;          files: |&#xA;            \.sh$&#xA;            .(sql|py)$&#xA;            ^(mynewfile|custom)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;AFTER&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;...&#xA;&#xA;      - name: Get specific changed files&#xA;        id: changed-files-specific&#xA;        uses: tj-actions/changed-files@v27&#xA;        with:&#xA;          files: |&#xA;            *.sh&#xA;            *.sql&#xA;            *.py&#xA;            mynewfile&#xA;            custom/**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This package was created with &lt;a href=&#34;https://github.com/cookiecutter/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/glob&#34;&gt;tj-actions/glob&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tj-actions/demo&#34;&gt;tj-actions/demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Report Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Report bugs at &lt;a href=&#34;https://github.com/tj-actions/changed-files/issues&#34;&gt;https://github.com/tj-actions/changed-files/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are reporting a bug, please include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your operating system name and version.&lt;/li&gt; &#xA; &lt;li&gt;Any details about your workflow that might be helpful in troubleshooting.&lt;/li&gt; &#xA; &lt;li&gt;Detailed steps to reproduce the bug.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jsoref&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2119212?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josh Soref&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=jsoref&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/monoxgas&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1223016?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nick Landers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=monoxgas&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Kras4ooo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1948054?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krasimir Nikolov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Kras4ooo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Kras4ooo&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/IvanPizhenko&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11859904?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Pizhenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=IvanPizhenko&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=IvanPizhenko&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/talva-tr&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/82046981?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;talva-tr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=talva-tr&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://bandism.net/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22633385?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=eltociear&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Zamiell&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5511220?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=Zamiell&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/wushujames&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/677529?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Cheng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=wushujames&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://qiita.com/SUZUKI_Masaya&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15100604?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Masaya Suzuki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=massongit&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://fagai.net&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1772112?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;fagai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=fagai&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pkit&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/805654?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Constantine Peresypkin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=pkit&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/deronnax&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/439279?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mathieu Dupuy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=deronnax&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JoeOvo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/100686542?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Moggridge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=JoeOvo&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.credly.com/users/thyarles/badges&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1340046?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Charles Santos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tj-actions/changed-files/commits?author=thyarles&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
</feed>