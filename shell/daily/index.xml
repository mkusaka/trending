<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-26T01:35:10Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SillyTavern/SillyTavern-Launcher</title>
    <updated>2024-03-26T01:35:10Z</updated>
    <id>tag:github.com,2024-03-26:/SillyTavern/SillyTavern-Launcher</id>
    <link href="https://github.com/SillyTavern/SillyTavern-Launcher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Launcher scripts for SillyTavern and ST-Extras.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;readme-top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img height=&#34;160&#34; src=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/assets/61471128/129e2b39-6c62-4e67-9ba3-79876069b0e4&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;SillyTavern Launcher - (STL)&lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt; „ÄêEnglish | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-zh-cn.md&#34;&gt;Chinese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-ja-jp.md&#34;&gt;Japanese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-ko-kr.md&#34;&gt;Korean&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-nl-nl.md&#34;&gt;Dutch&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-fr-fr.md&#34;&gt;French&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-vi-vn.md&#34;&gt;Vietnamese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-pt-pt.md&#34;&gt;Portuguese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/SillyTavern/SillyTavern-Launcher/main/README-es-es.md&#34;&gt;Spanish&lt;/a&gt;„Äë &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/SillyTavern/SillyTavern-Launcher.svg?sanitize=true&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/SillyTavern/SillyTavern-Launcher.svg?sanitize=true&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/SillyTavern/SillyTavern-Launcher.svg?sanitize=true&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/SillyTavern/SillyTavern-Launcher.svg?sanitize=true&#34; alt=&#34;GitHub Pull Requests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üîß Installation&lt;/h2&gt; &#xA;&lt;h3&gt;ü™ü Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open Windows Explorer (&lt;code&gt;Win+E&lt;/code&gt;) and make or choose a folder where you wanna install the launcher to&lt;/li&gt; &#xA; &lt;li&gt;Open a Command Prompt inside that folder by clicking in the &#39;Address Bar&#39; at the top, typing &lt;code&gt;cmd&lt;/code&gt;, and pressing Enter.&lt;/li&gt; &#xA; &lt;li&gt;When you see a black box, insert the following command: &lt;code&gt;git clone https://github.com/SillyTavern/SillyTavern-Launcher.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;double click on &lt;code&gt;installer.bat&lt;/code&gt; and choose what you wanna install&lt;/li&gt; &#xA; &lt;li&gt;After installation double click on &lt;code&gt;launcher.bat&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;üêß Linux&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your favorite terminal and install git&lt;/li&gt; &#xA; &lt;li&gt;Download Sillytavern Launcher with: &lt;code&gt;git clone https://github.com/SillyTavern/SillyTavern-Launcher.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the SillyTavern-Launcher with: &lt;code&gt;cd SillyTavern-Launcher&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the install launcher with: &lt;code&gt;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&lt;/code&gt; and choose what you wanna install&lt;/li&gt; &#xA; &lt;li&gt;After installation start the launcher with: &lt;code&gt;chmod +x launcher.sh &amp;amp;&amp;amp; ./launcher.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;üçé Mac&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a terminal and install brew with: &lt;code&gt;/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Then install git with: &lt;code&gt;brew install git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download Sillytavern Launcher with: &lt;code&gt;git clone https://github.com/SillyTavern/SillyTavern-Launcher.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the SillyTavern-Launcher with: &lt;code&gt;cd SillyTavern-Launcher&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the install launcher with: &lt;code&gt;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&lt;/code&gt; and choose what you wanna install&lt;/li&gt; &#xA; &lt;li&gt;After installation start the launcher with: &lt;code&gt;chmod +x launcher.sh &amp;amp;&amp;amp; ./launcher.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic installation of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SillyTavern&lt;/li&gt; &#xA;   &lt;li&gt;Extras&lt;/li&gt; &#xA;   &lt;li&gt;XTTS&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Auto update all apps&lt;/li&gt; &#xA; &lt;li&gt;Backup and Restore SillyTavern&lt;/li&gt; &#xA; &lt;li&gt;Switch branch&lt;/li&gt; &#xA; &lt;li&gt;Module editors&lt;/li&gt; &#xA; &lt;li&gt;App installer &amp;amp; uninstaller to manage applications&lt;/li&gt; &#xA; &lt;li&gt;Troubleshooting menu to fix most common problems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Installer:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/assets/61471128/91db3d97-65a6-45be-a2f3-6c90a99963d0&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Launcher:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/SillyTavern/SillyTavern-Launcher/assets/61471128/24bced5e-da74-4e8c-94f6-f1366ef8e871&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ViktorUJ/cks</title>
    <updated>2024-03-26T01:35:10Z</updated>
    <id>tag:github.com,2024-03-26:/ViktorUJ/cks</id>
    <link href="https://github.com/ViktorUJ/cks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source Platform for learning kubernetes and aws eks and preparation for for Certified Kubernetes exams (CKA ,CKS , CKAD)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the SRE Learning Platform!&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;SRE Learning Platform&lt;/strong&gt; is an open-source hub designed to help IT engineers effectively prepare for the &lt;strong&gt;CKA (Certified Kubernetes Administrator)&lt;/strong&gt;, &lt;strong&gt;CKS (Certified Kubernetes Security Specialist)&lt;/strong&gt;, and &lt;strong&gt;CKAD (Certified Kubernetes Application Developer)&lt;/strong&gt; exams. Additionally, this platform offers invaluable hands-on experience with &lt;strong&gt;AWS EKS (Elastic Kubernetes Service)&lt;/strong&gt;, equipping users with practical insights for real-world applications. Whether you&#39;re aiming to validate your skills, boost your career prospects in Kubernetes administration, security, application development, or delve into AWS EKS, this platform provides hands-on labs, practice tests, and expert guidance to ensure certification success.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prepare for the &lt;strong&gt;CKA&lt;/strong&gt;: &lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-kubernetes-administrator-cka/&#34;&gt;Certified Kubernetes Administrator Exam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enhance your skills for the &lt;strong&gt;CKS&lt;/strong&gt;: &lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-kubernetes-security-specialist/&#34;&gt;Certified Kubernetes Security Specialist Exam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Excel in the &lt;strong&gt;CKAD&lt;/strong&gt;: &lt;a href=&#34;https://training.linuxfoundation.org/certification/certified-kubernetes-application-developer-ckad/&#34;&gt;Certified Kubernetes Application Developer Exam&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Master Kubernetes concepts, gain practical experience, and excel in the CKA, CKS, and CKAD exams with the &lt;strong&gt;SRE Learning Platform&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Frun_from_docker.MD&#34;&gt;run via docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/Xh6sWzafBmw&#34; title=&#34;run via docker&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Fimages%2Frun_via_docker.gif&#34; alt=&#34;video instruction&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;Requirements&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;GNU Make&lt;/a&gt; &amp;gt;= 4.2.1&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli&#34;&gt;terrafrom&lt;/a&gt; &amp;gt;= v1.6.6&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs/getting-started/install/&#34;&gt;terragrunt&lt;/a&gt; &amp;gt;= v0.54.8&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://jqlang.github.io/jq/download/&#34;&gt;jq&lt;/a&gt; &amp;gt;= 1.6&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html&#34;&gt;aws IAM user&lt;/a&gt; + &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html&#34;&gt;Access key&lt;/a&gt; (or &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html&#34;&gt;IAM role&lt;/a&gt; ) with &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html&#34;&gt;Admin privilege for VPC, EC2, IAM, EKS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/getting-started-version.html&#34;&gt;AWS CLI&lt;/a&gt; &amp;gt; 2.2.30&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html&#34;&gt;aws profile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Or you can&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Frun_from_docker.MD&#34;&gt;run via docker&lt;/a&gt; ( &lt;a href=&#34;https://youtu.be/Xh6sWzafBmw&#34;&gt;video instruction&lt;/a&gt; )&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;Repository Structure&lt;/summary&gt; &#xA; &lt;p&gt;The repository is organized into the following sections:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/Makefile&#34;&gt;Makefile&lt;/a&gt;&lt;/strong&gt; - File contains scenarios for launching hands-on labs and mock exams.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks&#34;&gt;tasks&lt;/a&gt;&lt;/strong&gt; - Directory contains lab scenarios and mock exam scripts. &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka&#34;&gt;cka&lt;/a&gt;&lt;/strong&gt; - Directory contains everything related to CKA. &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka%2Flabs&#34;&gt;labs&lt;/a&gt;&lt;/strong&gt; - Directory contains hands-on labs for the CKA exam.&lt;/li&gt; &#xA;      &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka%2Fmock&#34;&gt;mock&lt;/a&gt;&lt;/strong&gt; - Directory contains mock scripts for the CKA exam.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks&#34;&gt;cks&lt;/a&gt;&lt;/strong&gt; - Directory contains everything related to CKS. &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks%2Flabs&#34;&gt;labs&lt;/a&gt;&lt;/strong&gt; - Directory contains hands-on labs for the CKS exam.&lt;/li&gt; &#xA;      &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks%2Fmock&#34;&gt;mock&lt;/a&gt;&lt;/strong&gt; - Directory contains mock scripts for the CKS exam.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/terraform&#34;&gt;terraform&lt;/a&gt;&lt;/strong&gt; - Directory contains modules and Terraform environments. &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/terraform%2Fenvironments&#34;&gt;environments&lt;/a&gt;&lt;/strong&gt; - Directory contains terragrunt (terraform) environments.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/terraform%2Fmodules&#34;&gt;modules&lt;/a&gt;&lt;/strong&gt; - Directory contains terraform modules.&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;About CKA, CKS, CKAD scenarios&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;the platform uses &lt;strong&gt;aws&lt;/strong&gt; to create following resources : &lt;strong&gt;vpc&lt;/strong&gt;, &lt;strong&gt;subnets&lt;/strong&gt;, &lt;strong&gt;security groups&lt;/strong&gt;, &lt;strong&gt;ec2&lt;/strong&gt; (spot ), &lt;strong&gt;s3&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;after you launch the scenarios the platform will create all the necessary resources and give access to k8s clusters.&lt;/li&gt; &#xA;  &lt;li&gt;to create clusters the platform uses &lt;strong&gt;kubeadm&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;you can easily add your own scenario using the already existing terraform module &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/terraform%2Fmodules%2Fk8s_self_managment&#34;&gt;k8s_self_managment&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/terraform%2Fmodules%2Fk8s_self_managment&#34;&gt;k8s_self_managment&lt;/a&gt; module supports versions:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code&gt;k8s version  : [ 1.21 , 1.29 ]   https://kubernetes.io/releases/&#xA;Rintime :&#xA;    docker                   [1.21 , 1.23]&#xA;    cri-o                    [1.21 , 1.29]&#xA;    containerd               [1.21 , 1.29]   # cks, cka  default 1.29&#xA;    containerd_gvizor        [1.21 , 1.29]&#xA;OS for nodes  :&#xA;   ubuntu  :  20.04 LTS  ,  22.04 LTS   # cks default  20.04 LTS&#xA;CNI :  calico&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;change &lt;strong&gt;backend_bucket&lt;/strong&gt; ( &lt;strong&gt;region&lt;/strong&gt; , &lt;strong&gt;backend_region&lt;/strong&gt; optional ) in &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/terraform%2Fenvironments%2Fterragrunt.hcl#L4&#34;&gt;terraform/environments/terragrunt.hcl&lt;/a&gt; :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command&lt;/h2&gt; &#xA;&lt;p&gt;Every command should be run from the project&#39;s root directory.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;CMDB&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;make cmdb_get_env_all&lt;/code&gt; - get a list of all resources in CMDB&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;USER_ID=&#39;myuser&#39; ENV_ID=&#39;01&#39; make cmdb_get_user_env_data&lt;/code&gt; - show all created resources of user &lt;strong&gt;myuser&lt;/strong&gt; in environment &lt;strong&gt;01&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;USER_ID=&#39;myuser&#39; ENV_ID=&#39;01&#39; make cmdb_get_user_env_lock&lt;/code&gt; - show all lock resources of user &lt;strong&gt;myuser&lt;/strong&gt; in environment &lt;strong&gt;01&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;USER_ID=&#39;myuser&#39; ENV_ID=&#39;01&#39; make cmdb_get_user_env_lock&lt;/code&gt; - show all lock resources of user &lt;strong&gt;myuser&lt;/strong&gt; in environment &lt;strong&gt;01&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;USER_ID=&#39;myuser&#39; make cmdb_get_user_env_lock&lt;/code&gt; - show all lock resources of user &lt;strong&gt;myuser&lt;/strong&gt; in &lt;strong&gt;all&lt;/strong&gt; environment&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;USER_ID=&#39;myuser&#39; make cmdb_get_user_env_data&lt;/code&gt; - show all data resources of user &lt;strong&gt;myuser&lt;/strong&gt; in &lt;strong&gt;all&lt;/strong&gt; environment&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CMDB_ITEM=&#39;CMDB_data_myuser_02_k8s_cluster1&#39; make cmdb_get_item&lt;/code&gt; - getting detailed information about &lt;strong&gt;CMDB_data_myuser_02_k8s_cluster1&lt;/strong&gt; resource.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;CKA&lt;/summary&gt; &#xA; &lt;h3&gt;cka task&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_cka_task&lt;/code&gt; - create cka &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Flabs.MD#cka-labs&#34;&gt;hands-on labs&lt;/a&gt; number 01&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make delete_cka_task&lt;/code&gt; - delete cka hands-on labs&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_cka_task_clean&lt;/code&gt; - run cka_task with clean terragrunt cache for cka_task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make output_cka_task &lt;/code&gt; - show &lt;strong&gt;outputs&lt;/strong&gt; from &lt;strong&gt;cka_task&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;cka mock&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_cka_mock&lt;/code&gt; - create mock CKA exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make delete_cka_mock&lt;/code&gt; - delete mock CKA exam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_cka_mock_clean&lt;/code&gt; - create mock CKA exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt; with clean terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make output_cka_mock &lt;/code&gt; - show &lt;strong&gt;outputs&lt;/strong&gt; from &lt;strong&gt;cka_mock&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;CKAD&lt;/summary&gt; &#xA; &lt;h3&gt;ckad mock&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_ckad_mock&lt;/code&gt; - create mock CKAD exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fckad%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make delete_ckad_mock&lt;/code&gt; - delete mock CKAD exam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_ckad_mock_clean&lt;/code&gt; - create mock CKAD exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fckad%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt; with clean terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make output_ckad_mock &lt;/code&gt; - show &lt;strong&gt;outputs&lt;/strong&gt; from &lt;strong&gt;ckad_mock&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;CKS&lt;/summary&gt; &#xA; &lt;h3&gt;cks task&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=10 make run_cks_task&lt;/code&gt; - create cks &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Flabs.MD#cks-labs&#34;&gt;hands-on labs&lt;/a&gt; number 10&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=10 make delete_cks_task&lt;/code&gt; - delete cks hands-on labs&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=10 make run_cks_task_clean&lt;/code&gt; - run cks_task with clean terragrunt cache for cks_task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make output_cks_task &lt;/code&gt; - show &lt;strong&gt;outputs&lt;/strong&gt; from &lt;strong&gt;cks_task&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;cks mock&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_cks_mock&lt;/code&gt; - create mock CKS exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make delete_cks_mock&lt;/code&gt; - delete mock CKS exam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_cks_mock_clean&lt;/code&gt; - create mock CKS exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt; with clean terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make output_cks_mock &lt;/code&gt; - show &lt;strong&gt;outputs&lt;/strong&gt; from &lt;strong&gt;cks_mock&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;HR&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_hr_mock&lt;/code&gt; - create mock hr exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fhr%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make delete_hr_mock&lt;/code&gt; - delete mock hr exam&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK=01 make run_hr_mock_clean&lt;/code&gt; - create mock CKS exam &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fhr%2Fmock%2F01&#34;&gt;number 01&lt;/a&gt; with clean terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make output_hr_mock &lt;/code&gt; - show &lt;strong&gt;outputs&lt;/strong&gt; from &lt;strong&gt;hr_mock&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;EKS&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;TASK={lab_number} make run_eks_task&lt;/code&gt; create hands-on lab&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;make delete_eks_task&lt;/code&gt; delete eks lab cluster&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;DEV&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;make lint&lt;/code&gt; run linter on the project&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage scenarios&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;CKA hands-on lab&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Flabs.MD#cka-labs&#34;&gt;a hands-on lab&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;create cka lab cluster &lt;code&gt;TASK={lab_number} make run_cka_task&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find {master_external_ip} in terraform output&lt;/li&gt; &#xA;  &lt;li&gt;log in to master node via ssh &lt;code&gt;ssh ubuntu@{master_external_ip} -i {key}&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;check init logs &lt;code&gt;tail -f /var/log/cloud-init-output.log&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;read lab descriptions in &lt;code&gt;{lab_number}/README.MD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;check solution in &lt;code&gt;{lab_number}/SOLUTION.MD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;delete cka lab cluster &lt;code&gt;make delete_cka_task&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;clean cka lab cluster &lt;code&gt;.terraform&lt;/code&gt; folder &lt;code&gt;make clean_cka_task &lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;mock CKA exam&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=P-YYX4CTWIg&#34;&gt;Video instruction for launching &lt;strong&gt;CKA mock exam&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka%2Fmock&#34;&gt;a mock exam&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;change instance type from &lt;code&gt;spot&lt;/code&gt; to &lt;code&gt;ondemand&lt;/code&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;create mock CKA exam &lt;code&gt;TASK={mock_number} make run_cka_mock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find &lt;code&gt;worker_pc_ip&lt;/code&gt; in &lt;code&gt;terraform output&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;connect to &lt;code&gt;worker_pc_ip&lt;/code&gt; with your ssh key and user &lt;code&gt;ubuntu&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;open questions list &lt;code&gt;{mock_number}/README.MD&lt;/code&gt; and do tasks&lt;/li&gt; &#xA;  &lt;li&gt;use &lt;code&gt;ssh {kubernetes_nodename}&lt;/code&gt; from work pc to connect to node&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;time_left&lt;/code&gt; on work pc to check time&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;check_result&lt;/code&gt; on work pc to check result&lt;/li&gt; &#xA;  &lt;li&gt;delete mock CKA exam &lt;code&gt;make delete_cka_mock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam solutions in &lt;code&gt;{mock_number}/worker/files/solutions)&lt;/code&gt; and * &lt;a href=&#34;https://youtu.be/IZsqAPpbBxM&#34;&gt;Video&lt;/a&gt; for &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcka%2Fmock%2F01&#34;&gt;mock 01&lt;/a&gt; .&lt;/li&gt; &#xA;  &lt;li&gt;find exam tests in &lt;code&gt;{mock_number}/worker/files/tests.bats)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;CKS hands-on lab&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Flabs.MD#cks-labs&#34;&gt;CKS lab&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;change &lt;strong&gt;ami_id&lt;/strong&gt; in &lt;code&gt;{lab_number}/scripts/terragrunt.hcl&lt;/code&gt; if you changed &lt;strong&gt;region&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;create cka lab cluster &lt;code&gt;TASK={lab_number} make run_cks_task&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find {master_external_ip} in terraform output&lt;/li&gt; &#xA;  &lt;li&gt;log in to master node via ssh &lt;code&gt;ssh ubuntu@{master_external_ip} -i {key}&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;check init logs &lt;code&gt;tail -f /var/log/cloud-init-output.log&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;read lab descriptions in &lt;code&gt;{lab_number}/README.MD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;check solution in &lt;code&gt;{lab_number}/SOLUTION.MD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;delete cks lab cluster &lt;code&gt;make delete_cks_task&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;clean cks lab cluster &lt;code&gt;.terraform&lt;/code&gt; folder &lt;code&gt;make clean_cks_task &lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;mock CKS exam&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/_GbsBOMaJ9Q&#34;&gt;Video instruction for launching &lt;strong&gt;CKS mock exam&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;mock CKS exam&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks%2Fmock&#34;&gt;a mock exam&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;change &lt;strong&gt;ubuntu_version&lt;/strong&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;change instance type from &lt;code&gt;spot&lt;/code&gt; to &lt;code&gt;ondemand&lt;/code&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;create mock CKS exam &lt;code&gt;TASK={mock_number} make run_cks_mock&lt;/code&gt; or &lt;code&gt;TASK={mock_number} make run_cks_mock_clean&lt;/code&gt; if you&#39;d like to run with &lt;strong&gt;clean&lt;/strong&gt; terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;find &lt;code&gt;worker_pc_ip&lt;/code&gt; in &lt;code&gt;terraform output&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;connect to &lt;code&gt;worker_pc_ip&lt;/code&gt; with your ssh key and user &lt;code&gt;ubuntu&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;open questions list &lt;code&gt;{mock_number}/README.MD&lt;/code&gt; and do tasks&lt;/li&gt; &#xA;  &lt;li&gt;use &lt;code&gt;ssh {kubernetes_nodename}&lt;/code&gt; from work pc to connect to node&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;time_left&lt;/code&gt; on work pc to check time&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;check_result&lt;/code&gt; on work pc to check result&lt;/li&gt; &#xA;  &lt;li&gt;delete mock CKS exam &lt;code&gt;make delete_cks_mock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam solutions in &lt;code&gt;{mock_number}/worker/files/solutions&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fcks%2Fmock%2F01%2Fworker%2Ffiles%2Fsolutions&#34;&gt;mock 1 solutions&lt;/a&gt; and &lt;a href=&#34;https://youtu.be/I8CPwcGbrG8&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam tests in &lt;code&gt;{mock_number}/worker/files/tests.bats&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;mock CKAD exam&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/7X4Y9QhbTsk&#34;&gt;Video instruction for launching &lt;strong&gt;CKAD mock exam&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;mock CKAD exam&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fckad%2Fmock&#34;&gt;a mock exam&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;change &lt;strong&gt;ubuntu_version&lt;/strong&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;change instance type from &lt;code&gt;spot&lt;/code&gt; to &lt;code&gt;ondemand&lt;/code&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;create mock CKAD exam &lt;code&gt;TASK={mock_number} make run_ckad_mock&lt;/code&gt; or &lt;code&gt;TASK={mock_number} make run_ckad_mock_clean&lt;/code&gt; if you&#39;d like to run with &lt;strong&gt;clean&lt;/strong&gt; terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;find &lt;code&gt;worker_pc_ip&lt;/code&gt; in &lt;code&gt;terraform output&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;connect to &lt;code&gt;worker_pc_ip&lt;/code&gt; with your ssh key and user &lt;code&gt;ubuntu&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;open questions list &lt;code&gt;{mock_number}/README.MD&lt;/code&gt; and do tasks&lt;/li&gt; &#xA;  &lt;li&gt;use &lt;code&gt;ssh {kubernetes_nodename}&lt;/code&gt; from work pc to connect to node&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;time_left&lt;/code&gt; on work pc to check time&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;check_result&lt;/code&gt; on work pc to check result&lt;/li&gt; &#xA;  &lt;li&gt;delete mock CKAD exam &lt;code&gt;make delete_ckad_mock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam solutions in &lt;code&gt;{mock_number}/worker/files/solutions&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fckad%2Fmock%2F01%2Fworker%2Ffiles%2Fsolutions&#34;&gt;mock 1 solutions&lt;/a&gt; and &lt;a href=&#34;https://youtu.be/yQK7Ca8d-yw&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam tests in &lt;code&gt;{mock_number}/worker/files/tests.bats&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;mock HR exam&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/4CTC1jl8lxE&#34;&gt;Video instruction for launching &lt;strong&gt;HR mock exam&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;mock HR exam&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fhr%2Fmock&#34;&gt;a mock exam&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;change &lt;strong&gt;ubuntu_version&lt;/strong&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;change instance type from &lt;code&gt;spot&lt;/code&gt; to &lt;code&gt;ondemand&lt;/code&gt; in &lt;code&gt;{mock_number}/env.hcl&lt;/code&gt; if you need&lt;/li&gt; &#xA;  &lt;li&gt;create mock CKS exam &lt;code&gt;TASK={mock_number} make run_hr_mock&lt;/code&gt; or &lt;code&gt;TASK={mock_number} make run_hr_mock_clean&lt;/code&gt; if you&#39;d like to run with &lt;strong&gt;clean&lt;/strong&gt; terragrunt cache&lt;/li&gt; &#xA;  &lt;li&gt;find &lt;code&gt;worker_pc_ip&lt;/code&gt; in &lt;code&gt;terraform output&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;connect to &lt;code&gt;worker_pc_ip&lt;/code&gt; with your ssh key and user &lt;code&gt;ubuntu&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;open questions list &lt;code&gt;{mock_number}/README.MD&lt;/code&gt; and do tasks&lt;/li&gt; &#xA;  &lt;li&gt;use &lt;code&gt;ssh {kubernetes_nodename}&lt;/code&gt; from work pc to connect to node&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;time_left&lt;/code&gt; on work pc to check time&lt;/li&gt; &#xA;  &lt;li&gt;run &lt;code&gt;check_result&lt;/code&gt; on work pc to check result&lt;/li&gt; &#xA;  &lt;li&gt;delete mock CKA exam &lt;code&gt;make delete_hr_mock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam solutions in &lt;code&gt;{mock_number}/worker/files/solutions&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/tasks%2Fhr%2Fmock%2F01%2Fworker%2Ffiles%2Fsolutions&#34;&gt;mock 1 solutions&lt;/a&gt; and &lt;a href=&#34;https://youtu.be/4CTC1jl8lxE&#34;&gt;video&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find exam tests in &lt;code&gt;{mock_number}/worker/files/tests.bats&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;font-weight: bold; font-size: 1.5em;&#34;&gt;EKS hands-on lab&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;choose &lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Flabs.MD#eks-labs&#34;&gt;labs&lt;/a&gt; number&lt;/li&gt; &#xA;  &lt;li&gt;create hands-on lab &lt;code&gt;TASK={lab_number} make run_eks_task&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;find &lt;code&gt;worker_pc_ip&lt;/code&gt; in &lt;code&gt;terraform output&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;log in to worker_pc node via ssh &lt;code&gt;ssh ubuntu@{worker_pc_ip} -i {key}&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;read lab descriptions in &lt;code&gt;{lab_number}/README.MD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;check solution in &lt;code&gt;{lab_number}/SOLUTION.MD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;delete eks lab cluster &lt;code&gt;make delete_eks_task&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Fmultiple_users_envs.MD&#34;&gt;Simultaneous work with independent environments&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Flinks.MD&#34;&gt;Useful links&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2Ftips_and_tricks.MD&#34;&gt;Tips And Tricks&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/CHANGELOG%2FCHANGELOG.MD&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/docs%2FCODE_OF_CONDUCT.md&#34;&gt;CODE OF CONDUCT&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want to be part of the project development team, get in touch with &lt;a href=&#34;https://github.com/ViktorUJ/cks/tree/master#contacts&#34;&gt;us&lt;/a&gt;. We are always happy to welcome new members to our development team&lt;/p&gt; &#xA;&lt;p&gt;If you want to say &lt;strong&gt;thank you&lt;/strong&gt; or/and support the active development of &lt;strong&gt;SRE Learning Platform project&lt;/strong&gt; :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ViktorUJ/cks&#34;&gt;Star&lt;/a&gt; the &lt;strong&gt;SRE Learning Platform project&lt;/strong&gt; on Github&lt;/li&gt; &#xA; &lt;li&gt;Feel free to write articles about the project on &lt;a href=&#34;https://dev.to/&#34;&gt;dev.to&lt;/a&gt;, &lt;a href=&#34;https://medium.com/&#34;&gt;medium&lt;/a&gt;, &lt;a href=&#34;https://hackernoon.com&#34;&gt;hackernoon&lt;/a&gt; or on your personal blog and share your experiences&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License and Usage Agreement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ViktorUJ/cks/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Channels for cooperative preparation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/sre_platform_cka&#34;&gt;cka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/sre_platform_cks&#34;&gt;cks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/sre_platform_ckad&#34;&gt;ckad&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issues or have questions about the project, you can reach out to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:viktoruj@gmail.com&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/email?icon=email&amp;amp;label&#34; alt=&#34;email&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/viktor_uj&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/telegram?icon=telegram&amp;amp;label&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/in/viktar-mikalayeu-mns&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/linkedin?icon=linkedin&amp;amp;label&#34; alt=&#34;LinkedI&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shehroziy/parallels-desktop</title>
    <updated>2024-03-26T01:35:10Z</updated>
    <id>tag:github.com,2024-03-26:/shehroziy/parallels-desktop</id>
    <link href="https://github.com/shehroziy/parallels-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the crack version of parallels desktop&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Parallels Desktop Crack&lt;/h1&gt; &#xA;&lt;p&gt;Crack for Parallels Desktop 19.0.0-54570&lt;/p&gt; &#xA;&lt;p&gt;‚úÖ ARM64&lt;br&gt; ‚úÖ x86_64&lt;br&gt; ‚úÖ Network&lt;br&gt; ‚úÖ USB&lt;br&gt; ‚úÖ System Integrity Protection (SIP)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Parallels Desktop:&lt;br&gt; &lt;a href=&#34;https://download.parallels.com/desktop/v19/19.0.0-54570/ParallelsDesktop-19.0.0-54570.dmg&#34;&gt;https://download.parallels.com/desktop/v19/19.0.0-54570/ParallelsDesktop-19.0.0-54570.dmg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sign out your&#39;e account&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;chmod +x install.sh &amp;amp;&amp;amp; chmod +x Launch\ Parallels.command &amp;amp;&amp;amp; sudo ./install.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Double click &lt;code&gt;Launch Parallels.command&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You will always need to use this launcher as a workaround to prevent signature errors from occurring. However, if you are a developer with permission to use com.apple.vm.* or are willing to disable System Integrity Protection, there is a better approach available.&lt;/p&gt; &#xA;&lt;h3&gt;Operation not permitted&lt;/h3&gt; &#xA;&lt;p&gt;Enable &lt;code&gt;System Preferences ‚ñ∏ Security &amp;amp; Privacy ‚ñ∏ Privacy ‚ñ∏ Full Disk Access&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;codesign error&lt;/h3&gt; &#xA;&lt;p&gt;Ensure xcode command line tools installed. Install it with using the command &lt;code&gt;xcode-select --install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check installation with &lt;code&gt;xcode-select -p&lt;/code&gt;, which will output &lt;code&gt;/Library/Developer/CommandLineTools&lt;/code&gt; or &lt;code&gt;/Applications/Xcode.app/Contents/Developer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Hosts&lt;/h2&gt; &#xA;&lt;p&gt;You also wan&#39;t too block Parallels Servers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;127.0.0.1 download.parallels.com&#xA;127.0.0.1 update.parallels.com&#xA;127.0.0.1 desktop.parallels.com&#xA;127.0.0.1 download.parallels.com.cdn.cloudflare.net&#xA;127.0.0.1 update.parallels.com.cdn.cloudflare.net&#xA;127.0.0.1 desktop.parallels.com.cdn.cloudflare.net&#xA;127.0.0.1 www.parallels.cn&#xA;127.0.0.1 www.parallels.com&#xA;127.0.0.1 www.parallels.de&#xA;127.0.0.1 www.parallels.es&#xA;127.0.0.1 www.parallels.fr&#xA;127.0.0.1 www.parallels.nl&#xA;127.0.0.1 www.parallels.pt&#xA;127.0.0.1 www.parallels.ru&#xA;127.0.0.1 www.parallelskorea.com&#xA;127.0.0.1 reportus.parallels.com&#xA;127.0.0.1 parallels.cn&#xA;127.0.0.1 parallels.com&#xA;127.0.0.1 parallels.de&#xA;127.0.0.1 parallels.es&#xA;127.0.0.1 parallels.fr&#xA;127.0.0.1 parallels.nl&#xA;127.0.0.1 parallels.pt&#xA;127.0.0.1 parallels.ru&#xA;127.0.0.1 parallelskorea.com&#xA;127.0.0.1 pax-manager.myparallels.com&#xA;127.0.0.1 myparallels.com&#xA;127.0.0.1 my.parallels.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parallels Desktop will uncomment these, therefore one needs to lock the hosts file: &lt;code&gt;sudo chflags uchg /etc/hosts &amp;amp;&amp;amp; sudo chflags schg /etc/hosts&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;OS download&lt;/h3&gt; &#xA;&lt;p&gt;You will not be able to download operating systems in the Control Center anymore. Comment these out to get this functionality:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 127.0.0.1 download.parallels.com&#xA;# 127.0.0.1 desktop.parallels.com&#xA;# 127.0.0.1 download.parallels.com.cdn.cloudflare.net&#xA;# 127.0.0.1 desktop.parallels.com.cdn.cloudflare.net&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>