<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-10T01:43:18Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fscarmen2/X-for-Choreo</title>
    <updated>2023-05-10T01:43:18Z</updated>
    <id>tag:github.com,2023-05-10:/fscarmen2/X-for-Choreo</id>
    <link href="https://github.com/fscarmen2/X-for-Choreo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;X for Choreo&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E9%A1%B9%E7%9B%AE%E7%89%B9%E7%82%B9&#34;&gt;项目特点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E9%83%A8%E7%BD%B2&#34;&gt;部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#argo-json-%E7%9A%84%E8%8E%B7%E5%8F%96&#34;&gt;Argo Json 的获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#argo-token-%E7%9A%84%E8%8E%B7%E5%8F%96&#34;&gt;Argo Token 的获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#ttyd-webssh-%E7%9A%84%E9%83%A8%E7%BD%B2&#34;&gt;TTYD webssh 的部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E9%B8%A3%E8%B0%A2%E4%B8%8B%E5%88%97%E4%BD%9C%E8%80%85%E7%9A%84%E6%96%87%E7%AB%A0%E5%92%8C%E9%A1%B9%E7%9B%AE&#34;&gt;鸣谢下列作者的文章和项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E&#34;&gt;免责声明&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;项目特点:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 CloudFlare 的 Argo 隧道，同时兼容 Json / token / 临时 三种方式认证，使用TLS加密通信，可以将应用程序流量安全地传输到Cloudflare网络，提高了应用程序的安全性和可靠性。此外，Argo Tunnel也可以防止IP泄露和DDoS攻击等网络威胁&lt;/li&gt; &#xA; &lt;li&gt;解锁 chatGPT&lt;/li&gt; &#xA; &lt;li&gt;在浏览器查看系统各项信息，方便直观&lt;/li&gt; &#xA; &lt;li&gt;集成哪吒探针，可以自由选择是否安装，支持 SSL/TLS 模式，适配 Nezha over Argo 项目: &lt;a href=&#34;https://github.com/fscarmen2/Argo-Nezha-Service-Container&#34;&gt;https://github.com/fscarmen2/Argo-Nezha-Service-Container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;uuid，WS 路径既可以自定义，又或者使用默认值&lt;/li&gt; &#xA; &lt;li&gt;前端 js 定时和 pm2 配合保活，务求让恢复时间减到最小&lt;/li&gt; &#xA; &lt;li&gt;节点信息以 V2rayN / Clash / 小火箭 链接方式输出&lt;/li&gt; &#xA; &lt;li&gt;可以使用浏览器访问，使用 ttyd，ssh over http2&lt;/li&gt; &#xA; &lt;li&gt;项目路径 &lt;code&gt;https://github.com/fscarmen2/X-for-Choreo&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;注册 &lt;a href=&#34;https://console.choreo.dev/&#34;&gt;Choreo&lt;/a&gt; ，支持 GitHub / Google / Microsoft 账号进行登录，请使用以下地址注册并进行登录。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PaaS 平台设置的环境变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;是否必须&lt;/th&gt; &#xA;     &lt;th&gt;默认值&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_AUTH&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Argo 的 Token 或者 json 值&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Argo 的域名，须与 ARGO_DOMAIN 必需一起填了才能生效&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WEB_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;网页地址，用于查看节点信息和系统状态&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;de04add9-5c68-8bab-950c-08cd5320df18&lt;/td&gt; &#xA;     &lt;td&gt;可在线生成 &lt;a href=&#34;https://www.zxgj.cn/g/uuid&#34;&gt;https://www.zxgj.cn/g/uuid&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WSPATH&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;argo&lt;/td&gt; &#xA;     &lt;td&gt;勿以 / 开头，各协议路径为 &lt;code&gt;/WSPATH-协议&lt;/code&gt;，如 &lt;code&gt;/argo-vless&lt;/code&gt;,&lt;code&gt;/argo-vmess&lt;/code&gt;,&lt;code&gt;/argo-trojan&lt;/code&gt;,&lt;code&gt;/argo-shadowsocks&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_SERVER&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针与面板服务端数据通信的IP或域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针服务端的端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_KEY&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针客户端专用 Key&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_TLS&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针是否启用 SSL/TLS 加密 ，如不启用不要该变量，如要启用填&#34;1&#34;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WEB_USERNAME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;admin&lt;/td&gt; &#xA;     &lt;td&gt;网页和 webssh 的用户名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WEB_PASSWORD&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;password&lt;/td&gt; &#xA;     &lt;td&gt;网页和 webssh 的密码&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;SSH_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;webssh 的域名，用户名和密码就是 &amp;lt;WEB_USERNAME&amp;gt; 和 &amp;lt;WEB_PASSWORD&amp;gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;路径（path）&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;命令&lt;/th&gt; &#xA;     &lt;th&gt;说明&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/list&lt;/td&gt; &#xA;     &lt;td&gt;查看节点数据&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/status&lt;/td&gt; &#xA;     &lt;td&gt;查看后台进程&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/listen&lt;/td&gt; &#xA;     &lt;td&gt;查看后台监听端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/test&lt;/td&gt; &#xA;     &lt;td&gt;测试是否为只读系统&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choreo 设置&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1037&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611678-e9ee0a82-efe3-4a21-ab4a-fc16d3d1fa1b.png&#34;&gt; &#xA;&lt;img width=&#34;647&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611722-fb60f8be-c5cd-43d8-9ed1-c1f00694d1e1.png&#34;&gt; &#xA;&lt;img width=&#34;700&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611875-f1164bf7-1bdf-4c06-a693-ca3e7b600364.png&#34;&gt; &#xA;&lt;img width=&#34;1637&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236786108-33ebd062-3d17-44ec-98ed-af022c3933e2.png&#34;&gt; &#xA;&lt;img width=&#34;1293&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236787682-5c98c391-8000-455a-b7cf-c4e08b072655.png&#34;&gt; &#xA;&lt;img width=&#34;1638&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611941-2760746e-0ae3-40a8-be64-d2974e4f0a84.png&#34;&gt; &#xA;&lt;img width=&#34;1680&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612065-2af3d69b-3ea2-4f79-bc33-6ddba2b03638.png&#34;&gt; &#xA;&lt;img width=&#34;1506&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612104-b3d4fa86-4111-4e5d-b672-3458ad440e9c.png&#34;&gt; &#xA;&lt;img width=&#34;1151&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612474-065ddf6e-9d44-4d8c-b237-2f2623c8856f.png&#34;&gt; &#xA;&lt;img width=&#34;997&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612512-31fb24d6-e3b1-48a0-bfa9-165cb122d311.png&#34;&gt; &#xA;&lt;img width=&#34;331&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612116-97fa6072-ad5b-4a61-8906-8d9b9153327d.png&#34;&gt; &#xA;&lt;img width=&#34;579&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612319-7071bc1a-e60e-4fe0-8a37-765133adca71.png&#34;&gt; &#xA;&lt;h2&gt;Argo Json 的获取&lt;/h2&gt; &#xA;&lt;p&gt;用户可以通过 Cloudflare Json 生成网轻松获取: &lt;a href=&#34;https://fscarmen.cloudflare.now.cc&#34;&gt;https://fscarmen.cloudflare.now.cc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;763&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611088-5c380ae6-4558-4e53-bc5a-ef1a44388c69.png&#34;&gt; &#xA;&lt;img width=&#34;1636&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611051-910b753d-77f2-423c-8941-9ef5b0e64316.png&#34;&gt; &#xA;&lt;p&gt;如想手动，可以参考，以 Debian 为例，需要用到的命令，&lt;a href=&#34;https://zhengweidong.com/try-cloudflare-argo-tunnel&#34;&gt;Deron Cheng - CloudFlare Argo Tunnel 试用&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Argo Token 的获取&lt;/h2&gt; &#xA;&lt;p&gt;详细教程: &lt;a href=&#34;https://imnks.com/5984.html&#34;&gt;群晖套件：Cloudflare Tunnel 内网穿透中文教程 支持DSM6、7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1393&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611164-dc7d8c98-b742-485a-b6f1-aba88793ef59.png&#34;&gt; &#xA;&lt;img width=&#34;1660&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611259-273f2486-9c08-408c-83f9-40235103c706.png&#34;&gt; &#xA;&lt;h2&gt;TTYD webssh 的原理&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;+---------+     argo     +---------+     http     +--------+    ssh    +-----------+&#xA;| browser | &amp;lt;==========&amp;gt; | CF edge | &amp;lt;==========&amp;gt; |  ttyd  | &amp;lt;=======&amp;gt; | ssh server|&#xA;+---------+     argo     +---------+   websocket  +--------+    ssh    +-----------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;鸣谢下列作者的文章和项目:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nike Jeff 的 trojan 项目: &lt;a href=&#34;https://github.com/hrzyang/glitch-trojan&#34;&gt;https://github.com/hrzyang/glitch-trojan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hifeng 的博客: &lt;a href=&#34;https://www.hicairo.com/post/62.html&#34;&gt;https://www.hicairo.com/post/62.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序仅供学习了解, 非盈利目的，请于下载后 24 小时内删除, 不得用作任何商业用途, 文字、数据及图片均有所属版权, 如转载须注明来源。&lt;/li&gt; &#xA; &lt;li&gt;使用本程序必循遵守部署免责声明。使用本程序必循遵守部署服务器所在地、所在国家和用户所在国家的法律法规, 程序作者不对使用者任何不当行为负责。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>taamarin/box_for_magisk</title>
    <updated>2023-05-10T01:43:18Z</updated>
    <id>tag:github.com,2023-05-10:/taamarin/box_for_magisk</id>
    <link href="https://github.com/taamarin/box_for_magisk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Transparent Proxy for Android(root)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Box for Magisk&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/taamarin/box_for_magisk/master/docs/index_id.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/id-blue.svg?style=for-the-badge&#34; alt=&#34;id&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/taamarin/box_for_magisk/master/docs/index_en.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/en-blue.svg?style=for-the-badge&#34; alt=&#34;en&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/taamarin/box_for_magisk/master/docs/index_cn.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cn-blue.svg?style=for-the-badge&#34; alt=&#34;cn&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/taamarin/box_for_magisk/raw/master/docs/box.png&#34; alt=&#34;BOX&#34; width=&#34;200&#34;&gt; &lt;br&gt;BOX&lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Transparent Proxy for Android(root)&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android-3DDC84?style=for-the-badge&amp;amp;logo=android&amp;amp;logoColor=white&#34; alt=&#34;android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/taamarin/box_for_magisk/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/taamarin/box_for_magisk/total.svg?style=for-the-badge&#34; alt=&#34;releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This project is a &lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;Magisk&lt;/a&gt; module which includes &lt;code&gt;clash&lt;/code&gt;, &lt;code&gt;sing-box&lt;/code&gt;, &lt;code&gt;v2ray&lt;/code&gt; and &lt;code&gt;xray&lt;/code&gt; proxies.&lt;/p&gt; &#xA;&lt;h2&gt;Tun (tcp + udp)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;open and edit /data/adb/box/settings.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# select the client to use : clash / sing-box / xray / v2fly&#xA;bin_name=&#34;good day&#34;&#xA;# Proxy mode: blacklist / whitelist / tun (only tun auto-route)&#xA;proxy_mode=&#34;tun&#34; # change to tun&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;sing-box config.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;inbounds&#34;: [&#xA;    {&#xA;      &#34;type&#34;: &#34;tun&#34;,&#xA;      &#34;tag&#34;: &#34;tun-in&#34;,&#xA;      &#34;interface_name&#34;: &#34;utun&#34;,&#xA;      &#34;inet4_address&#34;: &#34;172.19.0.1/30&#34;,&#xA;      &#34;inet6_address&#34;: &#34;fdfe:dcba:9876::1/126&#34;,&#xA;      &#34;mtu&#34;: 9000,&#xA;      &#34;stack&#34;: &#34;system&#34;, // lwip , gvisor&#xA;      &#34;auto_route&#34;: true,&#xA;      &#34;strict_route&#34;: false,&#xA;      &#34;sniff&#34;: true,&#xA;      &#34;sniff_override_destination&#34;: true,&#xA;      &#34;domain_strategy&#34;: &#34;prefer_ipv4&#34;&#xA;    }&#xA;  ],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;route&#34;: {&#xA;    &#34;final&#34;: &#34;PROXY&#34;,&#xA;    &#34;rules&#34;: [&#xA;      {&#xA;        &#34;protocol&#34;: &#34;dns&#34;,&#xA;        &#34;outbound&#34;: &#34;dns-out&#34;&#xA;      },&#xA;    ],&#xA;    &#34;auto_detect_interface&#34;: true // set true, &#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;clash config.yaml&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;tun:&#xA;  enable: true&#xA;  # biarkan default utun&#xA;  device: utun&#xA;  mtu: 9000&#xA;  # gvisor / lwip / system&#xA;  stack: system&#xA;  dns-hijack:&#xA;    - any:53&#xA;  auto-route: true&#xA;  auto-detect-interface: true&#xA;  # end&#xA;  inet4-address: 172.19.0.1/30&#xA;  inet6-address: [fdfe:dcba:9876::1/126]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mixed (redirec tcp + tun udp)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;open and edit /data/adb/box/settings.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# select the client to use : clash / sing-box / xray / v2fly&#xA;bin_name=&#34;good day&#34;&#xA;# set the port numbers for tproxy and redir&#xA;redir_port=&#39;9797&#39;&#xA;# redirect: tcp only, / tproxy: for tcp+udp with tproxy, / mixed: mode with redirect[tcp] and tun[udp]&#xA;# Network mode: tproxy for transparent proxying&#xA;network_mode=&#34;mixed&#34; # change to mixed&#xA;# Proxy mode: blacklist / whitelist / tun (only tun auto-route)&#xA;proxy_mode=&#34;blacklist&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;sing-box config.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;inbounds&#34;: [&#xA;    {&#xA;      &#34;type&#34;: &#34;redirect&#34;,&#xA;      &#34;tag&#34;: &#34;redirect-in&#34;,&#xA;      &#34;listen&#34;: &#34;::&#34;,&#xA;      &#34;listen_port&#34;: 9797,&#xA;      &#34;sniff&#34;: true&#xA;    },&#xA;    {&#xA;      &#34;type&#34;: &#34;tun&#34;,&#xA;      &#34;tag&#34;: &#34;tun-in&#34;,&#xA;      &#34;interface_name&#34;: &#34;utun&#34;,&#xA;      &#34;inet4_address&#34;: &#34;43.0.0.1/30&#34;,&#xA;      &#34;inet6_address&#34;: &#34;fdfe:dcba:9876::1/126&#34;,&#xA;      &#34;mtu&#34;: 9000,&#xA;      &#34;stack&#34;: &#34;system&#34;, // lwip , gvisor&#xA;      &#34;auto_route&#34;: true,&#xA;      &#34;strict_route&#34;: false,&#xA;      &#34;sniff&#34;: true,&#xA;      &#34;sniff_override_destination&#34;: true,&#xA;      &#34;domain_strategy&#34;: &#34;prefer_ipv4&#34;&#xA;    }&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;route&#34;: {&#xA;    &#34;final&#34;: &#34;PROXY&#34;,&#xA;    &#34;rules&#34;: [&#xA;      {&#xA;        &#34;protocol&#34;: &#34;dns&#34;,&#xA;        &#34;outbound&#34;: &#34;dns-out&#34;&#xA;      },&#xA;    ],&#xA;    &#34;auto_detect_interface&#34;: true // set true, &#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;clash config.yaml&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;redir-port: 9797&#xA;&#xA;tun:&#xA;  enable: true&#xA;  # biarkan default utun&#xA;  device: utun&#xA;  mtu: 9000&#xA;  # gvisor / lwip / system&#xA;  stack: system&#xA;  dns-hijack:&#xA;    - any:53&#xA;  auto-route: true&#xA;  auto-detect-interface: true&#xA;  # end&#xA;  inet4-address: 172.19.0.1/30&#xA;  inet6-address: [fdfe:dcba:9876::1/126]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tproxy (tcp + tun)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;open and edit /data/adb/box/settings.ini&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# select the client to use : clash / sing-box / xray / v2fly&#xA;bin_name=&#34;good day&#34;&#xA;# set the port numbers for tproxy and redir&#xA;tproxy_port=&#39;9898&#39;&#xA;# redirect: tcp only, / tproxy: for tcp+udp with tproxy, / mixed: mode with redirect[tcp] and tun[udp]&#xA;# Network mode: tproxy for transparent proxying&#xA;network_mode=&#34;tproxy&#34; # change to tproxy&#xA;# Proxy mode: blacklist / whitelist / tun (only tun auto-route)&#xA;proxy_mode=&#34;blacklist&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;sing-box config.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;inbounds&#34;: [&#xA;    {&#xA;      &#34;type&#34;: &#34;tproxy&#34;,&#xA;      &#34;tag&#34;: &#34;tproxy-in&#34;,&#xA;      &#34;listen&#34;: &#34;::&#34;,&#xA;      &#34;listen_port&#34;: 9898,&#xA;      &#34;sniff&#34;: true,&#xA;      &#34;sniff_override_destination&#34;: true,&#xA;      &#34;sniff_timeout&#34;: &#34;300ms&#34;,&#xA;      &#34;domain_strategy&#34;: &#34;prefer_ipv4&#34;,&#xA;      &#34;udp_timeout&#34;: 300&#xA;    }&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;clash config.yaml&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;tproxy-port: 9898&#xA;&#xA;# tun:&#xA;  # enable: false&#xA;  # # biarkan default utun&#xA;  # device: utun&#xA;  # mtu: 9000&#xA;  # # gvisor / lwip / system&#xA;  # stack: system&#xA;  # dns-hijack:&#xA;    # - any:53&#xA;  # auto-route: true&#xA;  # auto-detect-interface: true&#xA;  # # end&#xA;  # inet4-address: 172.19.0.1/30&#xA;  # inet6-address: [fdfe:dcba:9876::1/126]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;xray/v2ray config.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;inbounds&#34;: [&#xA;    {&#xA;      &#34;tag&#34;: &#34;proxy-in&#34;,&#xA;      &#34;port&#34;: 9898,&#xA;      &#34;protocol&#34;: &#34;dokodemo-door&#34;,&#xA;      &#34;settings&#34;: {&#xA;        &#34;network&#34;: &#34;tcp,udp&#34;,&#xA;        &#34;followRedirect&#34;: true&#xA;      },&#xA;      &#34;streamSettings&#34;: {&#xA;        &#34;sockopt&#34;: {&#xA;          &#34;tproxy&#34;: &#34;tproxy&#34;&#xA;        }&#xA;      },&#xA;      &#34;sniffing&#34;: {&#xA;        &#34;enabled&#34;: true,&#xA;        &#34;routeOnly&#34;: true,&#xA;        &#34;destOverride&#34;: [&#xA;          &#34;http&#34;,&#xA;          &#34;tls&#34;&#xA;        ]&#xA;      }&#xA;    }&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;make sure the ports in settings.ini and configuration are in sync.&lt;/h4&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CHIZI-0618/box4magisk&#34;&gt;CHIZI-0618/box4magisk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dafeiyun/dafeiyun_nginx_firewall</title>
    <updated>2023-05-10T01:43:18Z</updated>
    <id>tag:github.com,2023-05-10:/dafeiyun/dafeiyun_nginx_firewall</id>
    <link href="https://github.com/dafeiyun/dafeiyun_nginx_firewall" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dafeiyun_nginx_firewall 1.0版本&lt;/h1&gt; &#xA;&lt;p&gt;说明:大飞云nginx驱动防火墙 可以实现对每个nginx上网站实现第七层CC防御 并且由我们魔改版的nginx可以自动检测cc攻击并且可以调用iptables ipset命令在网络层屏蔽ip访问&lt;/p&gt; &#xA;&lt;p&gt;实测物理服务器E3-1230V2 100M下行宽带可以实现无视CC效果！&lt;/p&gt; &#xA;&lt;p&gt;Telegram群:@dfy888 网站dafeiyun.com 作者Telegram:@dafeiyun&lt;/p&gt; &#xA;&lt;p&gt;支持操作系统Centos7.X ，理论是可以支持debain和ubuntu的 但是最近忙没时间去弄debain和ubuntu&lt;/p&gt; &#xA;&lt;p&gt;dafeiyun_fw.ko是驱动防火墙内核文件&lt;/p&gt; &#xA;&lt;p&gt;ipv4是驱动防火墙白名单文件&lt;/p&gt; &#xA;&lt;p&gt;tcp.sh是驱动防火墙调用文件&lt;/p&gt; &#xA;&lt;p&gt;nginx是编译好魔改nginx二进制文件&lt;/p&gt; &#xA;&lt;p&gt;1，第一步 先更换系统内核，安装我们提供的3个内核，然后将dafeiyun_fw.ko，ipv4，tcp.sh都上传到home目录里&lt;/p&gt; &#xA;&lt;p&gt;2，安装必要的依赖项yum install -y net-tools和yum -y install iptables和yum -y install ipset&lt;/p&gt; &#xA;&lt;p&gt;3，进入宝塔目录/www/server/nginx/sbin/替换我们的魔改nginx二进制文件，并且把在nginx.conf配置文件中把nginx改为root启动 将ip白名单规则dafeiyun_waf_whitelist &#34;/home/ipv4&#34;;插入nginx.conf配置文件中的http字段里面&lt;/p&gt; &#xA;&lt;p&gt;4，把下面4条规则加入到开机启动&lt;/p&gt; &#xA;&lt;p&gt;echo &#34;iptables -F&#34;&amp;gt;&amp;gt;/etc/rc.d/rc.local&lt;/p&gt; &#xA;&lt;p&gt;这里3600代表屏蔽ip时间3600秒是1小时 ，可以自己改也可以3600&lt;/p&gt; &#xA;&lt;p&gt;echo &#34;ipset create dafeiyun hash:ip timeout 3600 maxelem 1000000&#34;&amp;gt;&amp;gt;/etc/rc.d/rc.local&lt;/p&gt; &#xA;&lt;p&gt;echo &#34;iptables -I INPUT -m set --match-set dafeiyun src -j DROP&#34;&amp;gt;&amp;gt;/etc/rc.d/rc.local&lt;/p&gt; &#xA;&lt;p&gt;echo &#34;insmod /home/dafeiyun_fw.ko&#34;&amp;gt;&amp;gt;/etc/rc.d/rc.local&lt;/p&gt; &#xA;&lt;p&gt;chmod +x /etc/rc.d/rc.local&lt;/p&gt; &#xA;&lt;p&gt;5，防火墙参数设置&lt;/p&gt; &#xA;&lt;p&gt;dafeiyun_waf on; 这里on是开关 on代表开启cc off是关闭&lt;/p&gt; &#xA;&lt;p&gt;dafeiyun_waf_model 2; 这里有3个模式 ，1是无感 ，2是点击验证 3是验证码&lt;/p&gt; &#xA;&lt;p&gt;dafeiyun_waf_only_get on; 这里on是访问js验证只允许get访问 其他访问直接iptables封ip&lt;/p&gt; &#xA;&lt;p&gt;dafeiyun_waf_max 5; 这里5是代表如果访问5次还解不开js验证 直接iptables封ip&lt;/p&gt; &#xA;&lt;p&gt;6，通过ipset命令查询封禁ip名单&lt;/p&gt; &#xA;&lt;p&gt;查看ipset的屏蔽ip列表 ipset list dafeiyun&lt;/p&gt; &#xA;&lt;p&gt;删除ipset的单个屏蔽ip列表ipset del dafeiyun 1.1.1.1&lt;/p&gt; &#xA;&lt;p&gt;删除ipset的所有屏蔽ip列表ipset flush dafeiyun&lt;/p&gt; &#xA;&lt;p&gt;还有很多规则 ，比如指定目录不开启cc防御 不拦截api等支付接口方法 一时间讲不完那，可以来Telegram群:@dfy888来交流&lt;/p&gt;</summary>
  </entry>
</feed>