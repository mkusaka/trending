<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-03T01:37:43Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JaKooLit/Fedora-Hyprland</title>
    <updated>2024-01-03T01:37:43Z</updated>
    <id>tag:github.com,2024-01-03:/JaKooLit/Fedora-Hyprland</id>
    <link href="https://github.com/JaKooLit/Fedora-Hyprland" rel="alternate"></link>
    <summary type="html">&lt;p&gt;For automated installation of Hyprland on Fedora on any Fedora based distros&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;üíå ** JaKooLit&#39;s Fedora Hyprland Install Script ** üíå&lt;/h3&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/JaKooLit/Fedora-Hyprland?style=for-the-badge&amp;amp;color=cba6f7&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/JaKooLit/Fedora-Hyprland?style=for-the-badge&amp;amp;color=b4befe&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/JaKooLit/Fedora-Hyprland?style=for-the-badge&amp;amp;color=cba6f7&#34; alt=&#34;GitHub repo size&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt;! &#xA;&lt;h4&gt;üì∑ Hyprland-Dots-v2 Featuring Rofi&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-ScreenShots/Fedora-v2/rofi.png&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-ScreenShots/Fedora-v2/Light.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-Dots-Showcase/default-waybar.png&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-Dots-Showcase/rofi.png&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-Dots-Showcase/wlogout-dark.png&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-Dots-Showcase/showcase2.png&#34; &#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-Dots-Showcase/waybar-layout.png&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Hyprland-Dots-Showcase/waybar-style.png&#34; &#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;‚ùï Installed on Nobara ü•∞&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/JaKooLit/screenshots/raw/main/Hyprland-ScreenShots/Fedora/Hyprland-Nobara.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;üì∏ More up to date screenshots &lt;a href=&#34;https://github.com/JaKooLit/screenshots/tree/main/Hyprland-Dots-Showcase&#34;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;üì∑ Older Screenshots &lt;a href=&#34;https://github.com/JaKooLit/screenshots/tree/main/Hyprland-ScreenShots/Fedora&#34;&gt;&lt;code&gt;V1&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/JaKooLit/screenshots/tree/main/Hyprland-ScreenShots/Fedora-v2&#34;&gt;&lt;code&gt;V2&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;‚ú® Youtube presentation &lt;a href=&#34;https://youtu.be/w2dt4GlHjV0&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;‚ú® Youtube presentation &lt;a href=&#34;https://youtu.be/_U_WR33XNYY&#34;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;‚ú® A video walk through my dotfiles&lt;a href=&#34;https://youtu.be/fO-RBHvVEcc?si=ijqxxnq_DLiyO8xb&#34;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;‚ú® A video walk through of My Hyprland-Dots v2&lt;a href=&#34;https://youtu.be/yaVurRoXc-s?si=iDnBC5S3thPBX3ZE&#34;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;ü™ßü™ßü™ß ANNOUNCEMENT ü™ßü™ßü™ß&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This Repo does not contain Hyprland Dots or configs! Dotfiles can be checked here &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots&#34;&gt;&lt;code&gt;Hyprland-Dots&lt;/code&gt;&lt;/a&gt; . During installation, if you opt to copy installation, it will be downloaded from that centralized repo.&lt;/li&gt; &#xA; &lt;li&gt;Hyprland-Dots use are constantly evolving / improving. you can check CHANGELOGS here &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/Changelogs&#34;&gt;&lt;code&gt;Hyprland-Dots-Changelogs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Since the Hyprland-Dots are evolving, some of the screenshots maybe old&lt;/li&gt; &#xA; &lt;li&gt;the wallpaper offered to be downloaded towards the end is from this &lt;a href=&#34;https://github.com/JaKooLit/Wallpaper-Bank&#34;&gt;&lt;code&gt;REPO&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] install a backup tool like &lt;code&gt;snapper&lt;/code&gt; or &lt;code&gt;timeshift&lt;/code&gt;. and Backup your system before installing hyprland using this script. This script does NOT include uninstallation of packages&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;‚ú® Some notes on installation / Pre-requisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This install script was tested on Minimal Fedora using Fedora Everything &lt;a href=&#34;https://youtu.be/_U_WR33XNYY&#34;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;This script is meant to install in any Fedora Work stations and its Spins.&lt;/li&gt; &#xA; &lt;li&gt;if starting from scratch, recommended spin to install is the Sway Spin. However, I have tested this script in Fedora Workstation (gnome), Plasma Spin and Sway&lt;/li&gt; &#xA; &lt;li&gt;I have not tested in any other spin. However, if you decided to try, recommend to install SDDM. Apart from GDM and SDDM, any other Login Manager may not work nor launch Hyprland. However, hyprland can be launched through tty by type Hyprland&lt;/li&gt; &#xA; &lt;li&gt;If you have nvidia, and wanted to use proprietary drivers, uninstall nouveau first (if installed). This script will be installing proprietary nvidia drivers and will not deal with removal of nouveau.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;‚ö†Ô∏è WARNING! If you have GDM already as log-in manager, DO NOT install SDDM&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will likely to encounter issues&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;‚ö†Ô∏è WARNING! nwg-look takes long time to install.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nwg-look is a utility to costumize your GTK theme. It&#39;s a LXAppearance like. Its a good tool though but this package is entirely optional&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;‚ú® Costumize the packages and COPR Repos&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;inside the install-scripts folder, you can edit 00-hypr-pkgs.sh, copr.sh, etc. Care though as the Hyprland Dots might not work properly&lt;/li&gt; &#xA; &lt;li&gt;default GTK theme if agreed to be installed is Tokyo night GTK themes (dark and light) + Tokyo night SE icons + Bibata Cursor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üí´ SDDM and GTK Themes offered&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you opted to install SDDM theme, here&#39;s the &lt;a href=&#34;https://github.com/JaKooLit/simple-sddm&#34;&gt;&lt;code&gt;LINK&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you opted to install GTK Themes, Icons and Cursor offered are Tokyo Nights. &lt;a href=&#34;https://github.com/JaKooLit/GTK-themes-icons&#34;&gt;&lt;code&gt;LINK&lt;/code&gt;&lt;/a&gt; &amp;amp; Bibata Cursor Modern Ice&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üîî NOTICE TO NVIDIA OWNERS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;by default it is installing the latest and newest nvidia drivers. If you have an older nvidia-gpu (GTX 800 series and older), check out nvidia-fedora website &lt;a href=&#34;https://rpmfusion.org/Howto/NVIDIA#Installing_the_drivers&#34;&gt;&lt;code&gt;LINK&lt;/code&gt;&lt;/a&gt; and edit nvidia.sh in install-scripts folder to install proper gpu driver&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] If you want to use nouveau driver, choose N when asked if you have nvidia gpu. This is because the nvidia installer part, it will blacklist nouveau. Hyprland will still be installed but it will skip blacklisting nouveau.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;‚ú® to run&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;clone this repo (latest commit only) to reduce file size download by using git. Change directory, make executable and run the script&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth=1 https://github.com/JaKooLit/Fedora-Hyprland.git&#xA;cd Fedora-Hyprland&#xA;chmod +x install.sh&#xA;./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/JaKooLit/Fedora-Hyprland/main/Fedora-Install.png&#34;&gt; &lt;/p&gt;&#xA;&lt;h4&gt;‚ú® for ZSH and OH-MY-ZSH installation&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;installer should auto change your default shell to zsh. However, if it does not, do this&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chsh -s $(which zsh)&#xA;zsh&#xA;source ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;reboot or logout&lt;/li&gt; &#xA; &lt;li&gt;by default agnoster theme is installed. You can find more themes from this &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&#34;&gt;&lt;code&gt;OH-MY-ZSH-THEMES&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;to change the theme, edit ~/.zshrc ZSH_THEME=&#34;desired theme&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;‚ú® TO DO once installation done and dotfiles copied&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;del&gt;if you opted to install gtk themes, to apply the theme and icon, press the dark/light button (beside the padlock). To apply Bibata modern ice cursor, launch nwg-look (GTK Settings) through rofi.&lt;/del&gt; Hyprland-Dots v2.1.18, initial boot file will attempt to apply GTK themes,cursor, and icons. You can tweak more using nwg-look (GTK-Settings) utility&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SUPER H for HINT or click on the waybar HINT! Button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Head over to &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; and &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/TIPS&#34;&gt;TIPS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;‚ú® Packages that are manually downloaded and build. These packages will not be updated by dnf and have to be manually updated&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nwg-look &lt;a href=&#34;https://github.com/nwg-piotr/nwg-look&#34;&gt;&lt;code&gt;LINK&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;a.) to update this package, in your installation folder, you can move that folder (nwg-look) or download manually, cd into it, and ran git pull &amp;amp;&amp;amp; sudo make install&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üôã Got a questions regarding the Hyprland Dots or configurations? üôã&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Head over to wiki Link &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki&#34;&gt;&lt;code&gt;WIKI&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üôã üëã Having issues or questions?&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for the install part, kindly open issue on this repo&lt;/li&gt; &#xA; &lt;li&gt;for the Pre-configured Hyprland dots / configuration, submit issue &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/issues&#34;&gt;&lt;code&gt;here&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üîß Proper way to re-installing a particular script from install-scripts folder&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CD into Fedora-Hyprland Folder and then ran the below command.&lt;/li&gt; &#xA; &lt;li&gt;i.e. &lt;code&gt;./install-scripts/gtk-themes&lt;/code&gt; - For reinstall GTK Themes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üõ£Ô∏è Roadmap:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;[ ] Install zsh and oh-my-zsh without necessary steps above&lt;/del&gt; DONE&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; possibly adding gruvbox themes, cursors, icons&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;‚ùó some known issues&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;reports from members of my discord, states that some users of nvidia are getting stuck on sddm login. credit to @Kenni Fix stated was&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt; while in sddm press ctrl+alt+F2 or F3&#xA;log into your account&#xA;`lspci -nn`, find the id of your nvidia card&#xA;`ls /dev/dri/by-path` find the matching id&#xA;`ls -l /dev/dri/by-path` to check where the symlink points to &#xA;)&#xA;7. add &#34;env = WLR_DRM_DEVICES,/dev/dri/cardX&#34; to the ENVvariables config (.config/hypr/configs/ENVariables.conf)  ; X being where the symlink of the gpu points to&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;more info from the hyprland wiki &lt;a href=&#34;https://wiki.hyprland.org/FAQ/#my-external-monitor-is-blank--doesnt-render--receives-no-signal-laptop&#34;&gt;&lt;code&gt;Hyprland Wiki Link&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fedora Sway Specific - swaylock conflicts with swaylock-effects. Lock screen would be only white. If decided to remove swaylock in favor with swaylock-effects, sway will be removed. So care&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üìí Final Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;join my discord channel &lt;a href=&#34;https://discord.gg/V2SJ92vbEN&#34;&gt;&lt;code&gt;Discord&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Feel free to copy, re-distribute, and use this script however you want. Would appreciate if you give me some loves by crediting my work :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;üëçüëçüëç Thanks and Credits!&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hyprland.org/&#34;&gt;&lt;code&gt;Hyprland&lt;/code&gt;&lt;/a&gt; Of course to Hyprland and @vaxerski for this awesome Dynamic Tiling Manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/solopasha/hyprland/&#34;&gt;&lt;code&gt;HYPRLAND COPR REPO&lt;/code&gt;&lt;/a&gt; - a shout out to the one who created and maintaining Hyprland COPR Repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üíñ Support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;a Star on my Github repos would be nice üåü&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Subscribe to my Youtube Channel &lt;a href=&#34;https://www.youtube.com/@Ja.KooLit&#34;&gt;YouTube&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also buy me Coffee Through ko-fi.com or Coffee.com ü§©&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/jakoolit&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;35&#34; style=&#34;border:0px;height:46px;&#34; src=&#34;https://az743702.vo.msecnd.net/cdn/kofi3.png?v=0&#34; border=&#34;0&#34; alt=&#34;Buy Me a Coffee at ko-fi.com&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://ko-fi.com/jakoolit&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/jakoolit&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.buymeacoffee.com/JaKooLit&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;üìπ üìπ Youtube videos (Click to view and watch the playlist)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PLDtGd5Fw5_GjXCznR0BzCJJDIQSZJRbxx&amp;amp;si=iaNjLulFdsZ6AV-t&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JaKooLit/screenshots/main/Youtube.png&#34; alt=&#34;Youtube Playlist Thumbnail&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Esoterical/voron_canbus</title>
    <updated>2024-01-03T01:37:43Z</updated>
    <id>tag:github.com,2024-01-03:/Esoterical/voron_canbus</id>
    <link href="https://github.com/Esoterical/voron_canbus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Before we start a big thanks has to go to the #mcu_toolhead_boards thread on the Voron discord. A wealth of information from some very clever people. If you have any of the following combinations of hardware, please look at these existing specific guides:&lt;/p&gt; &#xA;&lt;p&gt;Octopus (in CAN bridge mode) and SB2040: &lt;a href=&#34;https://github.com/akhamar/voron_canbus_octopus_sb2040&#34;&gt;https://github.com/akhamar/voron_canbus_octopus_sb2040&lt;/a&gt; by @MastahFR&lt;/p&gt; &#xA;&lt;p&gt;BTT U2C and EBB36: &lt;a href=&#34;https://github.com/EricZimmerman/VoronTools/raw/main/EBB_CAN.md&#34;&gt;https://github.com/EricZimmerman/VoronTools/blob/main/EBB_CAN.md&lt;/a&gt; by @EricZimmerman&lt;/p&gt; &#xA;&lt;p&gt;SKR Pico in can bridge mode: &lt;a href=&#34;https://github.com/eschlenz/3D-Printing-Public/raw/main/skr_pico_canboot_canbus.md&#34;&gt;https://github.com/eschlenz/3D-Printing-Public/blob/main/skr_pico_canboot_canbus.md&lt;/a&gt; by @eschlenz&lt;/p&gt; &#xA;&lt;p&gt;and many others.&lt;/p&gt; &#xA;&lt;h2&gt;Generalised CANBus guide&lt;/h2&gt; &#xA;&lt;p&gt;So you want to use Canbus on your printer? There are plenty of guides around but usually they are guides on a specific hardware configuration. This guide hopes to generalise some of the steps to help anyone get started on their CAN journey with a printer.&lt;/p&gt; &#xA;&lt;p&gt;Note: This will be generally structured around Voron printers and common hardware for a Voron printer, but you can take the information to any Klipper-based printer as long as you either use the same electronics (mainboard/canboard) or use this guide to adapt to your specific electronics (if they are supported).&lt;/p&gt; &#xA;&lt;p&gt;So let&#39;s get started.&lt;/p&gt; &#xA;&lt;h1&gt;Basic Structure of a 3d Printer CANBus&lt;/h1&gt; &#xA;&lt;p&gt;In all likelyhood you are looking to hook up a single CAN toolhead board to your printer to minimise wiring from mainboard to toolhead, so that is the setup we&#39;ll be focusing on. In order to achieve a functioning CAN network on your printer you need 3 things: A computer running the main Klipper software (usually a Raspberry Pi, but anything with a USB port will work for this guide), a CAN network adapter (either a standalone USB device or running a compatible mainboard in klipper&#39;s usb-can bridge mode) and a CAN node (the toolhead device). This is also the order in which you need to set things up. No point setting everything up on the toolhead CAN board if you don&#39;t have a way for the Pi to talk to it. We are going to assume you have a functioning Pi (or equivelant) running linux and already have Klippper, Moonraker, some sort of GUI (Fluidd/Mainsail/Octoprint), and you have the ability to SSH into it.&lt;/p&gt; &#xA;&lt;h1&gt;Regarding Katapult (formerly known as CanBoot)&lt;/h1&gt; &#xA;&lt;p&gt;You may have seen other guides have installing Katapult/CanBOOT onto devices as a first step. Katapult is a custom firmware and allows flashing of Klipper to the devices via the CAN network so you don&#39;t have to plug a USB cable in each time to flash/update klipper. Katapult is really handy but it is &lt;em&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/em&gt; mandatory. This will be discussed later, but Klipper will happily run over a CAN network with or without Katapult.&lt;/p&gt; &#xA;&lt;h1&gt;can0 file, CAN Speeds, and Transmit Queue Length&lt;/h1&gt; &#xA;&lt;p&gt;This step usually comes later, but as it is common across all different variants we may as well get it done first. In order to dictate the speed at which your CAN network runs at you will need to create (or modify) a &#34;can0&#34; file on your Pi. This is what will tell linux &#34;Hey, you now have a new network interface called can0 that you can send CAN traffic over&#34;. The approach needed here heavily depends on the network stack of your Pi. Raspbian and older version of Debian typically use ifupdown, but newer versions of non-raspbian Debian use netplan, which by default uses systemd-networkd under the hood.&lt;/p&gt; &#xA;&lt;p&gt;To test if your system uses networkd, try running &lt;code&gt;networkctl&lt;/code&gt;. If the command is not available, gives an error or no link output, you&#39;re probably still using ifupdown. If it does give you meaningful output (typically at least an &lt;code&gt;ether&lt;/code&gt; and &lt;code&gt;wlan&lt;/code&gt; link), you&#39;re using systemd-networkd. To be safe it&#39;s easiest to just follow both the &#34;ifupdown&#34; &lt;strong&gt;and&lt;/strong&gt; the &#34;systemd-networkd&#34; instructions. You can have both set up and your Pi will just use the configuration that is relevant to your system.&lt;/p&gt; &#xA;&lt;p&gt;To set everything up, SSH into your pi and run the commands needed for your network setup:&lt;/p&gt; &#xA;&lt;h2&gt;ifupdown&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/network/interfaces.d/can0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221327674-fad20589-1a5b-4d68-b2d9-2596553f64ab.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will open (or create if it doesn&#39;t exist) a file called &#39;can0&#39; in which you need to enter the following information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;allow-hotplug can0&#xA;iface can0 can static&#xA;  bitrate 1000000&#xA;  up ip link set can0 txqueuelen 1024&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221378593-9a0fcdb5-082c-454e-94bd-08a6dc449d34.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Press Ctrl+X to save the can0 file.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;allow-hotplug&#34; helps the CAN nodes come back online when doing a &#34;firmware_restart&#34; within Klipper. &#34;bitrate&#34; dictates the speed at which your CAN network runs at. Kevin O&#39;Connor (of Klipper fame) recommends a 1M speed for this to help with high-bandwidth and timing-critical operations (ADXL Shaper calibration and mesh probing for example). To complement a high bitrate, setting a high transmit queue length &#34;txqueuelen&#34; of 1024 helps minimise &#34;Timer too close&#34; errors.&lt;/p&gt; &#xA;&lt;p&gt;Once the can0 file is created just reboot the Pi with a &lt;code&gt;sudo reboot&lt;/code&gt; and move on to the next step.&lt;/p&gt; &#xA;&lt;h2&gt;systemd-networkd (netplan)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/systemd/network/10-can.link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will open (or create if it doesn&#39;t exist) a file called &lt;code&gt;10-can.link&lt;/code&gt; in which you need to enter the following information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Match]&#xA;Type=can&#xA;&#xA;[Link]&#xA;TransmitQueueLength=1024&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Press Ctrl+X to save the file.&lt;/p&gt; &#xA;&lt;p&gt;To set the bitrate, we need to create another file in the same directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/systemd/network/25-can.network&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This creates a network file, that networkd will then use to automatically set up the network with. Because of how networkd works, &#34;hotplugging&#34; is baked in. Enter the following in the network-file and close it with Ctrl+X:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Match]&#xA;Name=can*&#xA;&#xA;[CAN]&#xA;BitRate=1M&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Your main CAN network adapter&lt;/h1&gt; &#xA;&lt;p&gt;To actually create a CAN network in your system, your Pi needs some sort of device to act as a CAN adapter (think of it like a USB network card, or USB wifi dongle). The simplest plug-and-play option is to use a dedicated USB to Can device such as the BigTreeTech U2C, Mellow Fly UTOC, Fysetc UCAN, etc. (other devices exist as well). The second &#34;cheaper&#34; option is to actually utilise your printer mainboard (ie. Octopus or Spider board) to function as a usb-can bridge for klipper. We&#39;ll cover both options, but you only need to choose one.&lt;/p&gt; &#xA;&lt;h1&gt;Dedicated USB CAN device&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;IF YOU HAVE A BTT U2C V2.1 THEN PLEASE FLASH IT WITH THE LATEST VERSION OF V2 FIRMWARE FROM THE GITHUB AS THE SHIPPED FIRMWARE MAY HAVE BUGS &lt;a href=&#34;https://github.com/Esoterical/voron_canbus/tree/main/can_adapter/BigTreeTech%20U2C%20v2.1&#34;&gt;https://github.com/Esoterical/voron_canbus/tree/main/can_adapter/BigTreeTech%20U2C%20v2.1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to use a dedicated USB CAN devcice, then it should be as simple as plugging it in to your Pi via USB. &lt;em&gt;&lt;strong&gt;You shouldn&#39;t have to flash anything to this U2C/UTOC/etc device first, they are meant to come pre-installed with the necessary firmware. They do NOT run Klipper&lt;/strong&gt;&lt;/em&gt;. You can test if it is working by running an &lt;code&gt;lsusb&lt;/code&gt; command (from an SSH terminal to your pi). Most common USB CAN devices will show up as a &#34;Geschwister Schneider CAN adapter&#34; when they are working properly (though some may simply show as an &#34;OpenMoko, Inc&#34; device):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221329262-d8758abd-62cb-4bb6-9b4f-7bc0f615b5de.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/222042688-10fa6fdb-8c0a-4142-8c40-0d93ef4fc4bd.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A better check is by running an &#39;interface config&#39; command &lt;code&gt;ifconfig&lt;/code&gt;. If the USB CAN device is up and happy (and you have created the can0 file above) then you will see a can0 interface:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221329326-efa1437e-839d-4a6b-9648-89412791b819.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A note on edge cases&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you plug in your USB CAN adapter and you &lt;em&gt;don&#39;t&lt;/em&gt; see the expected results from an &lt;code&gt;lsusb&lt;/code&gt; or &lt;code&gt;ifconfig&lt;/code&gt;, then the firmware on your device may have issues. If this is the case then it&#39;s worth going to the Github page of your device as they usually have the stock firmware and flashing instructions there.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A note on the note&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The BTT U2C V2.1 was released with bad firmware which although would show up to the above tests it would make issues show up down the line. If you have a v2.1 of the U2C then please follow the instructions here: &lt;a href=&#34;https://github.com/Esoterical/voron_canbus/tree/main/can_adapter/BigTreeTech%20U2C%20v2.1&#34;&gt;https://github.com/Esoterical/voron_canbus/tree/main/can_adapter/BigTreeTech%20U2C%20v2.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Klipper USB to CAN bus bridge&lt;/h1&gt; &#xA;&lt;p&gt;The second way of setting up a CAN network is to use the printer mainboard itself as a CAN adapter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are using a dedicated CAN adapter as above then you don&#39;t need this step. Your mainboard will be flashed the same as any other &#34;normal&#34; klipper install&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is acheived through Klippers &#34;USB-CAN-Bridge mode&#34;. In order for this to work you need to have a compatible MCU on the mainboard (A lot of the popular STM32 chips works, as well as the RP2040), and either a dedicated &#34;CAN&#34; port on the motherboard or at least a way of accessing the CAN pins that you configure for klipper.&lt;/p&gt; &#xA;&lt;p&gt;Some mainboards (like the BTT Octopus) have a CAN Transceiver built in so they will output CAN signals directly from a dedicated port (the Octopus has an RJ11 port for this purpose). Other compatible boards may have a port on their board labelled as CAN but only output serial (Tx Rx) signals. These boards can still be run as USB-CAN-Bridge mode but will require an additional CAN Transceiver module (such as the SN65HVD230). These can be cheaply purchased from Amazon or eBay or AliExpress. Other boards may yet not have any dedicated CAN port, but still have a compatible MCU and have compatible CAN pins that you can access (the SKR Mini E3 V3 can be run in USB-CAN-Bridge mode if you use the PB8/PB9 pins on the EXP1 header that is normally used for an LCD screen).&lt;/p&gt; &#xA;&lt;p&gt;More specific instructions refer to &lt;a href=&#34;https://github.com/Esoterical/voron_canbus/tree/main/mainboard_flashing&#34;&gt;https://github.com/Esoterical/voron_canbus/tree/main/mainboard_flashing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you have klipper firmware flashed to your mainboard, with the USB-CAN-Bridge mode enabled, it should show up to your Pi as a &#34;Geschwister Schneider CAN adapter&#34; if you run an &lt;code&gt;lsusb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221329262-d8758abd-62cb-4bb6-9b4f-7bc0f615b5de.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you run an &lt;code&gt;ifconfig&lt;/code&gt; command you should also see a can0 interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221329326-efa1437e-839d-4a6b-9648-89412791b819.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The takeaway is that if you go down the mainboard USB-CAN-Bridge route, then you &lt;em&gt;need&lt;/em&gt; to have klipper firmware flashed to the mainboard before attempting any further CAN installs/troubleshooting.&lt;/p&gt; &#xA;&lt;h1&gt;CAN on a toolhead&lt;/h1&gt; &#xA;&lt;p&gt;One you have a functioning CAN network on your printer, you can proceed to flashing klipper to your toolhead of choice. Refer to &lt;a href=&#34;https://github.com/Esoterical/voron_canbus/tree/main/toolhead_flashing&#34;&gt;https://github.com/Esoterical/voron_canbus/tree/main/toolhead_flashing&lt;/a&gt; for more information on how to flash the toolhead.&lt;/p&gt; &#xA;&lt;p&gt;To wire up your toolhead refer to manufacturer guides but the overall process is hooking up 24v and Gnd back to your 24v PSU, and then connecting CANH and CANL to the CANH and CANL of your CAN adapter (either dedicated USB Can devcie, or a USB-CAN-Bridge mainboard). CANH goes to CANH, CANL goes to CANL.&lt;/p&gt; &#xA;&lt;p&gt;Once you have klipper installed on your toolhead, and it is all wired up correctly, you can run a canbus query command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;which should show a can UUID for each CAN device (a USB-CAN-Bridge mode mainboard will show as a CAN device) as well as the unique ID of the device:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221332914-c612d996-f9c3-444d-aa41-22b8eda96eba.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will then use this uuid in your printer.cfg for the [mcu] section of your device&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/124253477/221332943-57a65a4e-f3ab-484c-8ac5-a2b35366e34f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;(This is my Spider mainboard running in USB-CAN-Bridge mode, and my EBB36 toolhead)&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;If you have completed the above and have the canbus uuid of your CAN device in your printer.cfg, then everything else is just a case of setting up the required pins with the toolhead MCU name prefixed to the pin name. See &lt;a href=&#34;https://www.klipper3d.org/Config_Reference.html#mcu-my_extra_mcu&#34;&gt;https://www.klipper3d.org/Config_Reference.html#mcu-my_extra_mcu&lt;/a&gt; for information. Most toolheads will have a sample.cfg on their github, so it&#39;s usually a simple case of copy-pasting the required information from the sample into your own printer.cfg.&lt;/p&gt;</summary>
  </entry>
</feed>