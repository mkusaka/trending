<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-25T01:41:22Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>trickest/inventory</title>
    <updated>2024-01-25T01:41:22Z</updated>
    <id>tag:github.com,2024-01-25:/trickest/inventory</id>
    <link href="https://github.com/trickest/inventory" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Asset inventory of over 800 public bug bounty programs.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Inventory &lt;a href=&#34;https://twitter.com/intent/tweet?text=Inventory%20-%20Asset%20Inventory%20of%20public%20bug%20bounty%20programs.%20https://github.com/trickest/inventory%20by%20%40trick3st&amp;amp;hashtags=security,bugbounty,bugbountytips,assets,infosec,cybersecurity,recon,reconnaissance&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Tweet--lightgrey?logo=twitter&amp;amp;style=social&#34; alt=&#34;Tweet&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Attack Surface Management of public bug bounty programs.&lt;/h3&gt; &#xA;&lt;p&gt;The data we collect here includes DNS and Web Server data of public bug bounty programs.&lt;/p&gt; &#xA;&lt;p&gt;Our aim with this project is to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Monitor &lt;a href=&#34;https://raw.githubusercontent.com/trickest/inventory/main/targets.json&#34;&gt;over 800&lt;/a&gt; companies for new assets&lt;/li&gt; &#xA; &lt;li&gt;help bug bounty hunters get up and running on new programs as quickly as possible.&lt;/li&gt; &#xA; &lt;li&gt;give security teams better visibility into their assets.&lt;/li&gt; &#xA; &lt;li&gt;reduce the load and noise that some programs face from automated tools (we run them on schedule, and give the results to everyone)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trickest.io/auth/register&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/banner.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The setup consists of two workflows&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inventory 3.0 - Targets&lt;/li&gt; &#xA; &lt;li&gt;Inventory 3.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Inventory 3.0 - Targets&lt;/h3&gt; &#xA;&lt;p&gt;This workflow streamlines the consolidation of bug bounty program data from various sources, ensuring a comprehensive and organized view. Let&#39;s break it down:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data collection&lt;/strong&gt;: The workflow fetches data from two important sources:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/arkadiyt/bounty-targets-data&#34;&gt;Bounty Targets Data&lt;/a&gt;: This repository contains a wealth of bug bounty program information.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/projectdiscovery/public-bugbounty-programs&#34;&gt;Chaos Public Bug Bounty Programs&lt;/a&gt;: It provides additional valuable bug bounty program data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data transformation&lt;/strong&gt;: The collected data undergoes transformation using Python scripts. The scripts convert the data into a specific format, ensuring consistency and ease of analysis. You can find the detailed data format in the &lt;a href=&#34;https://raw.githubusercontent.com/trickest/inventory/main/targets.json&#34;&gt;targets.json&lt;/a&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Program merging&lt;/strong&gt;: To avoid duplication, the workflow merges programs with the same URL together. This consolidation eliminates redundancies and presents a unified view of bug bounty programs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Community program inclusion&lt;/strong&gt;: The workflow incorporates an additional set of programs from the &lt;a href=&#34;https://raw.githubusercontent.com/trickest/inventory/main/community.json&#34;&gt;community.json&lt;/a&gt; file. These programs are merged with the existing dataset, enhancing its coverage and diversity.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Final output&lt;/strong&gt;: The workflow generates a final consolidated JSON file, &lt;a href=&#34;https://raw.githubusercontent.com/trickest/inventory/main/targets.json&#34;&gt;targets.json&lt;/a&gt;, which encompasses all the merged bug bounty program data. This file serves as a valuable resource for bug bounty researchers, providing a centralized and comprehensive view of programs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-targets.png&#34; alt=&#34;Trickest Targets&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The screenshot above provides a visual representation of the workflow.&lt;/p&gt; &#xA;&lt;h3&gt;Inventory 3.0&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gathering the tagets&lt;/strong&gt;: Get the list of domains from &lt;a href=&#34;https://raw.githubusercontent.com/trickest/inventory/main/targets.json&#34;&gt;targets.json&lt;/a&gt;, and extract program names.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Making workflow run in parallel&lt;/strong&gt;: Extracted program names are connected &lt;code&gt;file-splitter&lt;/code&gt; node to make the whole workflow distributed per program&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-parsing-targets.png&#34; alt=&#34;Trickest Parsing Targets&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Passive Enumeration&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/projectdiscovery/subfinder&#34;&gt;subfinder&lt;/a&gt;, &lt;a href=&#34;https://github.com/junnlikestea/vita&#34;&gt;vita&lt;/a&gt;, &lt;a href=&#34;https://github.com/Findomain/Findomain&#34;&gt;findomain&lt;/a&gt; to get passive enumeration data.&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/trickest/mksub&#34;&gt;mksub&lt;/a&gt; to create a custom list of potential subdomains&lt;/li&gt; &#xA;   &lt;li&gt;Resolve with &lt;a href=&#34;https://github.com/d3mondev/puredns&#34;&gt;puredns&lt;/a&gt; and &lt;a href=&#34;https://github.com/trickest/resolvers&#34;&gt;trickest resolvers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Generate custom-wordlists from passive results with custom bash script&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-passive.png&#34; alt=&#34;Trickest Passive Enumeration&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Active Enumeration&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use passive enumeration data and create a new bruteforce wordlist&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/trickest/dsieve&#34;&gt;dsieve&lt;/a&gt; to get environments per subdomain level&lt;/li&gt; &#xA;   &lt;li&gt;Generate new potential subdomains with &lt;a href=&#34;https://github.com/trickest/mksub&#34;&gt;mksub&lt;/a&gt; and custom wordlist, with additional &lt;a href=&#34;https://github.com/trickest/wordlists/raw/main/inventory/levels/level2.txt&#34;&gt;level2.txt wordlist&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Resolve again with &lt;a href=&#34;https://github.com/d3mondev/puredns&#34;&gt;puredns&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-environments.png&#34; alt=&#34;Trickest Active Enumeration&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Permutations&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Merge active and passive results from previous steps&lt;/li&gt; &#xA;   &lt;li&gt;Extract environments per subdomain level again&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/projectdiscovery/alterx&#34;&gt;alterx&lt;/a&gt; to generate permutations and resolve with &lt;a href=&#34;https://github.com/d3mondev/puredns&#34;&gt;puredns&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-permutations.png&#34; alt=&#34;Trickest Permutations&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Collecting previous results&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use python script that will get all of the previous &lt;code&gt;hostnames.txt&lt;/code&gt; per program&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/tomnomnom/anew&#34;&gt;anew&lt;/a&gt; to get the new hostnames found&lt;/li&gt; &#xA;   &lt;li&gt;zip active, passive, permutations per program to be pushed to repository&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-previous-results.png&#34; alt=&#34;Trickest Previous Results&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reporting&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/projectdiscovery/dnsx&#34;&gt;dnsx&lt;/a&gt; to resolve found hostnames and python script for &lt;code&gt;dns-report.csv&lt;/code&gt;; mark newly found domains coming from &lt;a href=&#34;https://github.com/tomnomnom/anew&#34;&gt;anew&lt;/a&gt; with &lt;code&gt;[x]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use &lt;a href=&#34;https://github.com/projectdiscovery/httpx&#34;&gt;httpx&lt;/a&gt; to gather web servers and python script for `server-report.csv&lt;/li&gt; &#xA;   &lt;li&gt;Push to the repository&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0-reporting.png&#34; alt=&#34;Trickest Reporting&#34; title=&#34;Trickest Workflow - Inventory 3.0 - Targets&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Final workflow&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/inventory-3.0.png&#34; alt=&#34;Trickest Inventory 3.0 Workflow&#34; title=&#34;Trickest Workflow - Inventory 3.0 - Targets&#34;&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: As described, almost everything in this repository is generated automatically. We carefully designed the workflows (and continue to develop them) to ensure the results are as accurate as possible.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;All contributions/ideas/suggestions are welcome! If you want to add/edit a target/workflow, feel free to send us a PR with new targets through &lt;a href=&#34;https://raw.githubusercontent.com/trickest/inventory/main/community.json&#34;&gt;community.json&lt;/a&gt;, tweet at us &lt;a href=&#34;https://twitter.com/trick3st&#34;&gt;@trick3st&lt;/a&gt;, or join the conversation on &lt;a href=&#34;https://discord.gg/7HZmFYTGcQ&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build your own workflows!&lt;/h2&gt; &#xA;&lt;p&gt;We believe in the value of tinkering. Sign up for a demo on &lt;a href=&#34;https://trickest.com&#34;&gt;trickest.com&lt;/a&gt; to customize this workflow to your use case, get access to many more workflows, or build your own from scratch!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trickest.io/auth/register&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/inventory/main/screenshots/banner.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Core-Node-Team/Testnet-TR</title>
    <updated>2024-01-25T01:41:22Z</updated>
    <id>tag:github.com,2024-01-25:/Core-Node-Team/Testnet-TR</id>
    <link href="https://github.com/Core-Node-Team/Testnet-TR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt; Testnetler-Rehberler&lt;/h1&gt; &#xA; &lt;h2&gt;Katıldığımız tüm testnetlerin node kurulum ve görevlerinin rehberlerini bu repoda paylaşıyoruz&lt;/h2&gt; &#xA; &lt;h2&gt;Hata adığınız veya takıldığınız yer olursa &lt;a href=&#34;https://t.me/corenodechat&#34;&gt;Telegram&lt;/a&gt; grubumuz veya &lt;a href=&#34;https://discord.gg/fzzUAU9k&#34;&gt;Discord&lt;/a&gt; sunucumuzda topluluğumuzdan yardım alabilirsiniz.&lt;/h2&gt; &#xA; &lt;h2&gt;Bu repoda eksik veya hatalı bir yer bulursanız bize bildirmekten çekinmeyin lütfen&lt;/h2&gt; &#xA; &lt;h1&gt;&lt;/h1&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;h1&gt;Core Node Sosyal Medya &lt;a href=&#34;https://twitter.com/corenodeHQ&#34;&gt;Twitter&lt;/a&gt;|&lt;a href=&#34;https://discord.gg/fzzUAU9k&#34;&gt;Discord&lt;/a&gt;|&lt;a href=&#34;https://t.me/corenodechat&#34;&gt;Telegram&lt;/a&gt;&lt;/h1&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/108215275/230776662-b35d69ab-f3a2-4c4b-975f-f36dd7c1d2db.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>