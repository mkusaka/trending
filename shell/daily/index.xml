<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-17T01:39:18Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ax/apk.sh</title>
    <updated>2022-12-17T01:39:18Z</updated>
    <id>tag:github.com,2022-12-17:/ax/apk.sh</id>
    <link href="https://github.com/ax/apk.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;apk.sh makes reverse engineering Android apps easier, automating some repetitive tasks like pulling, decoding, rebuilding and patching an APK.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;üïπ&lt;/span&gt; apk.sh&lt;/h1&gt; &#xA;&lt;p&gt;apk.sh is a Bash script that makes reverse engineering Android apps easier, automating some repetitive tasks like pulling, decoding, rebuilding and patching an APK.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;apk.sh basically uses &lt;a href=&#34;https://ibotpeaches.github.io/Apktool/&#34;&gt;apktool&lt;/a&gt; to disassemble, decode and rebuild resources and some bash to automate the &lt;a href=&#34;https://https://frida.re/&#34;&gt;frida&lt;/a&gt; gadget injection process. It also supports app bundles/split APKs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üçÑ&lt;/span&gt; Patching APKs to load frida-gadget.so on start.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üÜï&lt;/span&gt; Support for app bundles/split APKs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üîß&lt;/span&gt; Disassembling resources to nearly original form with apktool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üî©&lt;/span&gt; Rebuilding decoded resources back to binary APK/JAR with apktool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üóù&lt;/span&gt; Code signing the apk with apksigner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üñ•&lt;/span&gt; Multiple arch support (arm, arm64, x86, x86_64).&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üìµ&lt;/span&gt; No rooted Android device needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;‚¨Ö&lt;/span&gt; Pulling an APK from a device is simple as running &lt;code&gt;./apk.sh pull &amp;lt;package_name&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üîß&lt;/span&gt; Decoding an APK is simple as running &lt;code&gt;./apk.sh decode &amp;lt;apk_name&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üî©&lt;/span&gt; Rebuilding an APK is simple as running &lt;code&gt;./apk.sh build &amp;lt;apk_dir&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;apk.sh pull&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;apk.sh pull&lt;/code&gt; pull an APK from a device. It supports app bundles/split APKs, which means that split APKs will be joined in a single APK (this is useful for patching). If the package is an app bundle/split APK, apk.sh will combine the APKs into a single APK, fixing all public resource identifiers.&lt;/p&gt; &#xA;&lt;h2&gt;apk.sh patch&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;apk.sh patch&lt;/code&gt; patch an APK to load &lt;a href=&#34;https://frida.re/docs/gadget/&#34;&gt;frida-gadget.so&lt;/a&gt; on start.&lt;/p&gt; &#xA;&lt;p&gt;frida-gadget.so is a Frida&#39;s shared library meant to be loaded by programs to be instrumented (when the Injected mode of operation isn‚Äôt suitable). By simply loading the library it will allow you to interact with it using existing Frida-based tools like frida-trace. It also supports a fully autonomous approach where it can run scripts off the filesystem without any outside communication.&lt;/p&gt; &#xA;&lt;p&gt;Patching an APK is simple as running &lt;code&gt;./apk.sh patch &amp;lt;apk_name&amp;gt; --arch arm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can calso specify a Frida gadget configuration in a json &lt;code&gt;./apk.sh patch &amp;lt;apk_name&amp;gt; --arch arm --gadget-conf &amp;lt;config.json&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üçÑ&lt;/span&gt; Frida&#39;s Gadget configurations&lt;/h2&gt; &#xA;&lt;p&gt;In the default interaction, Frida Gadget exposes a frida-server compatible interface, listening on localhost:27042 by default. In order to achieve early instrumentation Frida let Gadget‚Äôs constructor function block until you either &lt;code&gt;attach()&lt;/code&gt; to the process, or call &lt;code&gt;resume()&lt;/code&gt; after going through the usual &lt;code&gt;spawn()&lt;/code&gt; -&amp;gt; &lt;code&gt;attach()&lt;/code&gt; -&amp;gt; &lt;code&gt;...apply instrumentation...&lt;/code&gt; steps.&lt;/p&gt; &#xA;&lt;p&gt;If you don‚Äôt want this blocking behavior and want to let the program boot right up, or you‚Äôd prefer it listening on a different interface or port, you can customize this through a json configuration file.&lt;/p&gt; &#xA;&lt;p&gt;The default configuration is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;interaction&#34;: {&#xA;    &#34;type&#34;: &#34;listen&#34;,&#xA;    &#34;address&#34;: &#34;127.0.0.1&#34;,&#xA;    &#34;port&#34;: 27042,&#xA;    &#34;on_port_conflict&#34;: &#34;fail&#34;,&#xA;    &#34;on_load&#34;: &#34;wait&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass the gadget configuration file to &lt;code&gt;apk.sh&lt;/code&gt; with the &lt;code&gt;--gadget-conf&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;A typically suggested configuration might be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;interaction&#34;: {&#xA;    &#34;type&#34;: &#34;script&#34;,&#xA;    &#34;path&#34;: &#34;/data/local/tmp/script.js&#34;,&#xA;    &#34;on_change&#34;:&#34;reload&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;script.js could be something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var android_log_write = new NativeFunction(&#xA;    Module.getExportByName(null, &#39;__android_log_write&#39;),&#xA;    &#39;int&#39;,&#xA;    [&#39;int&#39;, &#39;pointer&#39;, &#39;pointer&#39;]&#xA;);&#xA;&#xA;var tag = Memory.allocUtf8String(&#34;[frida-sript][ax]&#34;);&#xA;&#xA;&#xA;&#xA;var work = function() {&#xA;    setTimeout(function() {&#xA;        android_log_write(3, tag, Memory.allocUtf8String(&#34;ping @ &#34; + Date.now()));&#xA;        work();&#xA;    }, 1000);&#xA;}&#xA;work();&#xA;&#xA;// console.log does not seems to work. see: https://github.com/frida/frida/issues/382&#xA;console.log(&#34;console.log&#34;);&#xA;console.error(&#34;console.error&#34;);&#xA;console.warn(&#34;WARN&#34;);&#xA;android_log_write(3, tag, Memory.allocUtf8String(&#34;&amp;gt;--(O.o)-&amp;lt;)&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;adb push script.js /data/local/tmp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./apk.sh patch &amp;lt;apk_name&amp;gt; --arch arm --gadget-conf &amp;lt;config.json&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;adb install file.gadget.apk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;apktool&lt;/li&gt; &#xA; &lt;li&gt;apksigner&lt;/li&gt; &#xA; &lt;li&gt;unxz&lt;/li&gt; &#xA; &lt;li&gt;zipalign&lt;/li&gt; &#xA; &lt;li&gt;aapt&lt;/li&gt; &#xA; &lt;li&gt;adb&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìÉ&lt;/span&gt; Links of Interest&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://frida.re/docs/gadget/&#34;&gt;https://frida.re/docs/gadget/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lief-project.github.io/doc/latest/tutorials/09_frida_lief.html&#34;&gt;https://lief-project.github.io/doc/latest/tutorials/09_frida_lief.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://koz.io/using-frida-on-android-without-root/&#34;&gt;https://koz.io/using-frida-on-android-without-root/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sensepost/objection/&#34;&gt;https://github.com/sensepost/objection/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NickstaDB/patch-apk/&#34;&gt;https://github.com/NickstaDB/patch-apk/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://neo-geo2.gitbook.io/adventures-on-security/frida-scripting-guide/frida-scripting-guide&#34;&gt;https://neo-geo2.gitbook.io/adventures-on-security/frida-scripting-guide/frida-scripting-guide&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>luchina-gabriel/OSX-PROXMOX</title>
    <updated>2022-12-17T01:39:18Z</updated>
    <id>tag:github.com,2022-12-17:/luchina-gabriel/OSX-PROXMOX</id>
    <link href="https://github.com/luchina-gabriel/OSX-PROXMOX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Voil√†, install macOS on ANY Computer! This is really and magic easiest way!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OSX-PROXMOX - Run macOS on ANY Computer - AMD &amp;amp; Intel&lt;/h1&gt; &#xA;&lt;p&gt;Install &lt;code&gt;** FRESH/CLEAN **&lt;/code&gt; Proxmox VE v7.0.XX ~ 7.3.XX - Next, Next &amp;amp; Finish (NNF).&lt;/p&gt; &#xA;&lt;p&gt;Open Proxmox Web Console -&amp;gt; Datacenter &amp;gt; NAME OF YOUR HOST &amp;gt; Shell.&lt;/p&gt; &#xA;&lt;p&gt;Copy, paste and execute (code below).&lt;/p&gt; &#xA;&lt;p&gt;Voil√†, install macOS! This is really and magic &lt;strong&gt;easiest way&lt;/strong&gt;! &lt;img src=&#34;https://user-images.githubusercontent.com/23700365/206713237-1afde54f-8b13-4ca6-93f2-f914caed9c97.png&#34; alt=&#34;pve-osx-setup-087&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;COPY &amp;amp; PASTE - in shell of Proxmox (for Install or Update this solution)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;/bin/bash -c &#34;$(curl -fsSL https://install.osx-proxmox.com)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For install EFI Package in macOS, first disable Gatekeeper&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo spctl --master-disable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versions of macOS Supported&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS High Sierra - 10.13&lt;/li&gt; &#xA; &lt;li&gt;macOS Mojave - 10.14&lt;/li&gt; &#xA; &lt;li&gt;macOS Catalina - 10.15&lt;/li&gt; &#xA; &lt;li&gt;macOS Big Sur - 11&lt;/li&gt; &#xA; &lt;li&gt;macOS Monterey - 12&lt;/li&gt; &#xA; &lt;li&gt;macOS Ventura - 13&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versions of Proxmox VE Supported&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;v7.0.XX ~ 7.3.XX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Opencore version&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;December/2022 - 0.8.7 with SIP Enabled, DMG only signed by Apple and all features of securities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cloud Support (Yes, install your Hackintosh in Cloud Environment)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vultr.com/?ref=9035565-8H&#34;&gt;VultR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/8QsMyL-PNrM&#34;&gt;V√≠deo/Tutorial&lt;/a&gt;, please activate captions!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FOR DEV/STUDENT/TEST ONLY PURPOSES.&lt;/li&gt; &#xA; &lt;li&gt;I&#39;m not responsible for any problem and/or equipment damage or loss of files.&lt;/li&gt; &#xA; &lt;li&gt;Always back up everything before any changes to your computer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demonstration (in Portuguese/Brazil)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/dil6iRWiun0&#34;&gt;https://youtu.be/dil6iRWiun0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;* Please use CC with Auto Translate to English for your convenience.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Opencore/Acidanthera Team&lt;/li&gt; &#xA; &lt;li&gt;Corpnewt for Applications (ProperTree, genSMBIOS, etc)&lt;/li&gt; &#xA; &lt;li&gt;Apple for macOS&lt;/li&gt; &#xA; &lt;li&gt;Proxmox - Excelent and better documentation for Virtualization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Discord - Universo Hackintosh&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.universohackintosh.com.br&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>