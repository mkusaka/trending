<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-30T01:45:20Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fscarmen2/Argo-X-Container-PaaS</title>
    <updated>2023-01-30T01:45:20Z</updated>
    <id>tag:github.com,2023-01-30:/fscarmen2/Argo-X-Container-PaaS</id>
    <link href="https://github.com/fscarmen2/Argo-X-Container-PaaS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;为容器平台而生---平台部署方式为镜像或者 Dockerfile 方式的专用&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xray + Argo for Container PaaS&lt;/h1&gt; &#xA;&lt;p&gt;为容器平台而生---平台部署方式为镜像或者 Dockerfile 方式的专用&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/Argo-X-Container-PaaS/main/README.md#%E9%A1%B9%E7%9B%AE%E7%89%B9%E7%82%B9&#34;&gt;项目特点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/Argo-X-Container-PaaS/main/README.md#%E9%83%A8%E7%BD%B2&#34;&gt;部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/Argo-X-Container-PaaS/main/README.md#%E5%9C%A8-koyeb-%E9%83%A8%E7%BD%B2%E9%87%8D%E7%82%B9&#34;&gt;在 Koyeb 部署重点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/Argo-X-Container-PaaS/main/README.md#%E5%9C%A8-doprax-%E9%83%A8%E7%BD%B2%E9%87%8D%E7%82%B9&#34;&gt;在 Doprax 部署重点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/Argo-X-Container-PaaS/main/README.md#%E9%B8%A3%E8%B0%A2%E4%B8%8B%E5%88%97%E4%BD%9C%E8%80%85%E7%9A%84%E6%96%87%E7%AB%A0%E5%92%8C%E9%A1%B9%E7%9B%AE&#34;&gt;鸣谢下列作者的文章和项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/Argo-X-Container-PaaS/main/README.md#%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E&#34;&gt;免责声明&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;项目特点:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;适用于通过 dockerhub 上已有的镜像或 Dockerfile 来建实例的平台&lt;/li&gt; &#xA; &lt;li&gt;在平台上部署 Xray，采用的方案为 Argo + Xray + WebSocket + TLS&lt;/li&gt; &#xA; &lt;li&gt;在浏览器查看系统各项信息，方便直观&lt;/li&gt; &#xA; &lt;li&gt;使用 CloudFlare 的 Argo 隧道，直接优选 + 隧道，CDN 不用再做 workers&lt;/li&gt; &#xA; &lt;li&gt;回流分流，同时支持 Xray 4 种主流协议: vless / vmess / trojan / shadowsocks&lt;/li&gt; &#xA; &lt;li&gt;vmess 和 vless 的 uuid，trojan 和 shadowsocks 的 password，各协议的 ws 路径既可以自定义，又或者使用默认值&lt;/li&gt; &#xA; &lt;li&gt;集成哪吒探针，可以自由选择是否安装&lt;/li&gt; &#xA; &lt;li&gt;前端 js 定时保活，会玩的用户可以根据具体情况修改间隔时间&lt;/li&gt; &#xA; &lt;li&gt;节点信息以 V2rayN / Clash / 小火箭 链接方式输出&lt;/li&gt; &#xA; &lt;li&gt;Xray 文件重新编译官方文件增加隐秘性，修改了运行时的显示信息，文件为: &lt;a href=&#34;https://github.com/XTLS/Xray-core/raw/main/core/core.go&#34;&gt;https://github.com/XTLS/Xray-core/blob/main/core/core.go&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;718&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/215277537-ff358dc1-7696-481f-b8e4-74f0cdff30f4.png&#34;&gt; &#xA;&lt;h2&gt;部署:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;镜像 &lt;code&gt;fscarmen/argo-x:latest&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PaaS 平台用到的变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;是否必须&lt;/th&gt; &#xA;     &lt;th&gt;默认值&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;de04add9-5c68-8bab-950c-08cd5320df18&lt;/td&gt; &#xA;     &lt;td&gt;可在线生成 &lt;a href=&#34;https://www.zxgj.cn/g/uuid&#34;&gt;https://www.zxgj.cn/g/uuid&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WSPATH&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;argo&lt;/td&gt; &#xA;     &lt;td&gt;勿以 / 开头，各协议路径为 &lt;code&gt;/WSPATH-协议&lt;/code&gt;，如 &lt;code&gt;/argo-vless&lt;/code&gt;,&lt;code&gt;/argo-vmess&lt;/code&gt;,&lt;code&gt;/argo-trojan&lt;/code&gt;,&lt;code&gt;/argo-shadowsocks&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_SERVER&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针服务端的 IP 或域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针服务端的端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_KEY&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针客户端专用 Key&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;需要应用的 js&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;命令&lt;/th&gt; &#xA;     &lt;th&gt;说明&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&#xA;      &lt;url&gt;&#xA;       /list&#xA;      &lt;/url&gt;&lt;/td&gt; &#xA;     &lt;td&gt;查看节点数据&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&#xA;      &lt;url&gt;&#xA;       /status&#xA;      &lt;/url&gt;&lt;/td&gt; &#xA;     &lt;td&gt;查看后台进程&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&#xA;      &lt;url&gt;&#xA;       /listen&#xA;      &lt;/url&gt;&lt;/td&gt; &#xA;     &lt;td&gt;查看后台监听端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GitHub Actions 用到的变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DOCKER_USERNAME&lt;/td&gt; &#xA;     &lt;td&gt;Dockerhub 用户名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DOCKER_PASSWORD&lt;/td&gt; &#xA;     &lt;td&gt;Dockerhub 密码&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DOCKER_REPO&lt;/td&gt; &#xA;     &lt;td&gt;Dockerhub 库名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;在 Koyeb 部署重点&lt;/h2&gt; &#xA;&lt;p&gt;这里只作重点的展示，更详细可以参考项目: &lt;a href=&#34;https://github.com/fscarmen2/V2-for-Koyeb&#34;&gt;https://github.com/fscarmen2/V2-for-Koyeb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.koyeb.com/deploy?type=docker&amp;amp;name=argox&amp;amp;ports=3000;http;/&amp;amp;env%5BUUID%5D=de04add9-5c68-8bab-950c-08cd5320df18&amp;amp;env%5BNEZHA_SERVER%5D=server%20domain%20or%20ip&amp;amp;env%5BNEZHA_PORT%5D=server%20port&amp;amp;env%5BNEZHA_KEY%5D=agent%20key&amp;amp;image=docker.io/fscarmen/argo-x&#34;&gt;&lt;img src=&#34;https://www.koyeb.com/static/images/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Koyeb&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/92626977/214794752-9df27bee-66e7-4d79-855f-940e85dab8c3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;909&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/214797317-bc60c51b-9518-4db1-9878-f6c8eb52a9b3.png&#34;&gt; &#xA;&lt;img width=&#34;1340&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/215122040-7f3ba11b-4875-412c-a9c9-fefa05e336c5.png&#34;&gt; &#xA;&lt;h2&gt;在 Doprax 部署重点&lt;/h2&gt; &#xA;&lt;p&gt;这里只作重点的展示，更详细可以参考项目: &lt;a href=&#34;https://github.com/fscarmen2/V2-for-Doprax&#34;&gt;https://github.com/fscarmen2/V2-for-Doprax&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1663&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/214801019-a1e9cf5d-67f0-49c5-956b-927f50bbb207.png&#34;&gt; &#xA;&lt;img width=&#34;1000&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/214807633-18b1a1fe-a3b7-4f9b-99bd-0ef56e3a259c.png&#34;&gt; &#xA;&lt;h2&gt;鸣谢下列作者的文章和项目:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前端 JS 在大佬 Nike Jeff 的项目 基础上，为了通用性和扩展功能作修改，&lt;a href=&#34;https://github.com/hrzyang/glitch-trojan&#34;&gt;https://github.com/hrzyang/glitch-trojan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;后端全部原创，如转载须注明来源。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序仅供学习了解, 非盈利目的，请于下载后 24 小时内删除, 不得用作任何商业用途, 文字、数据及图片均有所属版权, 如转载须注明来源。&lt;/li&gt; &#xA; &lt;li&gt;使用本程序必循遵守部署免责声明。使用本程序必循遵守部署服务器所在地、所在国家和用户所在国家的法律法规, 程序作者不对使用者任何不当行为负责。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>zigbee2mqtt/hassio-zigbee2mqtt</title>
    <updated>2023-01-30T01:45:20Z</updated>
    <id>tag:github.com,2023-01-30:/zigbee2mqtt/hassio-zigbee2mqtt</id>
    <link href="https://github.com/zigbee2mqtt/hassio-zigbee2mqtt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Zigbee2MQTT Home Assistant add-on&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&#34;&gt; &lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/zigbee2mqtt/hassio-zigbee2mqtt/master/zigbee2mqtt/logo.png&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div style=&#34;display: flex;&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/actions?query=workflow%3ACI&#34;&gt; &lt;img src=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/workflows/CI/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/zigbee2mqtt/hassio-zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/zigbee2mqtt/hassio-zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/dadfWYE&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/556563650429583360.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;http://zigbee2mqtt.discourse.group/&#34;&gt; &lt;img src=&#34;https://img.shields.io/discourse/https/zigbee2mqtt.discourse.group/status.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h1&gt;Official Zigbee2MQTT Home Assistant addon&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you don&#39;t have a MQTT broker yet; in Home Assistant go to &lt;strong&gt;Settings → Add-ons → Add-on store&lt;/strong&gt; and install the &lt;strong&gt;Mosquitto broker&lt;/strong&gt; addon.&lt;/li&gt; &#xA; &lt;li&gt;Go back to the &lt;strong&gt;Add-on store&lt;/strong&gt;, click &lt;strong&gt;⋮ → Repositories&lt;/strong&gt;, fill in&lt;br&gt; &lt;code&gt;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&lt;/code&gt; and click &lt;strong&gt;Add → Close&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The repository includes two add-ons: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Zigbee2MQTT&lt;/strong&gt; is the stable release that tracks the released versions of Zigbee2MQTT. (&lt;strong&gt;recommended for most users&lt;/strong&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Zigbee2MQTT Edge&lt;/strong&gt; tracks the &lt;code&gt;dev&lt;/code&gt; branch of Zigbee2MQTT such that you can install the edge version if there are features or fixes in the Zigbee2MQTT dev branch that are not yet released.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click on the addon and press &lt;strong&gt;Install&lt;/strong&gt; and wait till the addon is installed.&lt;/li&gt; &#xA; &lt;li&gt;Click on &lt;strong&gt;Configuration&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you are &lt;strong&gt;not&lt;/strong&gt; using the Mosquitto broker addon fill in your MQTT details (leave empty when using the Mosquitto broker addon). Format can be found &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/configuration/mqtt.html#server-connection&#34;&gt;here&lt;/a&gt;, but skip the initial &lt;code&gt;mqtt:&lt;/code&gt; indent. e.g.: &lt;br&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;server: mqtt://localhost:1883&#xA;user: my_user&#xA;password: my_password&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Fill in the serial details (e.g. port of your USB coordinator). Format can be found &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/configuration/adapter-settings.html#adapter-settings&#34;&gt;here&lt;/a&gt;, but skip the initial &lt;code&gt;serial:&lt;/code&gt; indent. e.g.: &lt;br&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;port: /dev/ttyUSB0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;If you don&#39;t know the port and you have just one USB device connected to your machine try &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;. Else use the &lt;a href=&#34;https://www.home-assistant.io/common-tasks/os#home-assistant-via-the-command-line&#34;&gt;Home Assistant CLI&lt;/a&gt; and execute &lt;code&gt;ha hardware info&lt;/code&gt; to find out.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Save&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; it is possible to refer to variables in the Home Assistant &lt;code&gt;secrets.yaml&lt;/code&gt; file (not the Zigbee2MQTT one!) by using e.g. &lt;code&gt;password: &#39;!secret mqtt_pass&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start the addon by going to &lt;strong&gt;Info&lt;/strong&gt; and click &lt;strong&gt;Start&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wait till Zigbee2MQTT starts and press &lt;strong&gt;OPEN WEB UI&lt;/strong&gt; to verify Zigbee2MQTT started correctly. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If it shows &lt;code&gt;502: Bad Gateway&lt;/code&gt; wait a bit more and refresh the page.&lt;/li&gt; &#xA;   &lt;li&gt;If this takes too long (e.g. 2 minutes +) check the &lt;strong&gt;Log&lt;/strong&gt; tab to see what went wrong.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more information see &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/raw/master/zigbee2mqtt/DOCS.md&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;The format is based on &lt;a href=&#34;http://keepachangelog.com/en/1.0.0/&#34;&gt;Keep a Changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All notable changes to this project will be documented in the &lt;a href=&#34;https://raw.githubusercontent.com/zigbee2mqtt/hassio-zigbee2mqtt/master/zigbee2mqtt/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Version for releases is based on &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt&#34;&gt;Zigbee2MQTT&lt;/a&gt; format: &lt;code&gt;X.Y.Z&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Any changes on the addon that do not require a new version of Zigbee2MQTT will use the format: &lt;code&gt;X.Y.Z-A&lt;/code&gt; where &lt;code&gt;X.Y.Z&lt;/code&gt; is fixed on the Zigbee2MQTT release version and &lt;code&gt;A&lt;/code&gt; is related to the addon.&lt;/p&gt; &#xA;&lt;p&gt;Edge version will not maintain a CHANGELOG and doesn&#39;t have a version.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you find any issues with the add-on, please check the &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt/issues&#34;&gt;issue tracker&lt;/a&gt; for similar issues before creating one. If your issue is regarding specific devices or, more generally, an issue that arises after Zigbee2MQTT has successfully started, it should likely be reported in the &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/issues&#34;&gt;Zigbee2MQTT issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to create a PR for fixes and enhancements.&lt;/p&gt; &#xA;&lt;h3&gt;Testing changes locally&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re submitting a PR and wish to test it locally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gain root access to your Home Assistant installation&lt;/li&gt; &#xA; &lt;li&gt;In the Add-on Settings, Ensure &#34;Watchdog&#34; is turned off so the container isn&#39;t automatically restarted when it&#39;s stopped via the CLI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1923186/198087147-7ab2ba1e-1a68-41b8-9a84-76b25b329786.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enter the &lt;code&gt;zigbee2mqtt&lt;/code&gt; container interactively.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec -it $(docker ps | grep zigbee2mqtt | cut -d&#34; &#34; -f 1) /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit the file you&#39;d like to test &amp;amp; save.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;vi app/node_modules/zigbee-herdsman-converters/converters/toZigbee.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Back on the Home Assistant installation, restart the &lt;code&gt;zigbee2mqtt&lt;/code&gt; container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker restart $(docker ps | grep zigbee2mqtt | cut -d&#34; &#34; -f 1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refresh the web UI and perform your testing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielwelch&#34;&gt;danielwelch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ciotlosm&#34;&gt;ciotlosm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Koenkk&#34;&gt;Koenkk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>