<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-29T01:45:13Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kageurufu/steamdeck_startup_animations</title>
    <updated>2022-08-29T01:45:13Z</updated>
    <id>tag:github.com,2022-08-29:/kageurufu/steamdeck_startup_animations</id>
    <link href="https://github.com/kageurufu/steamdeck_startup_animations" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of steamdeck startup animations, plus a script to randomize your startup on each boot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;steamdeck_startup_animations&lt;/h1&gt; &#xA;&lt;p&gt;A collection of steamdeck startup animations, plus a script to randomize your startup on each boot&lt;/p&gt; &#xA;&lt;h1&gt;So far, I&#39;ve made boot animations from the following consoles:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dreamcast&lt;/li&gt; &#xA; &lt;li&gt;ps1&lt;/li&gt; &#xA; &lt;li&gt;ps2&lt;/li&gt; &#xA; &lt;li&gt;ps4&lt;/li&gt; &#xA; &lt;li&gt;switch&lt;/li&gt; &#xA; &lt;li&gt;gamecube&lt;/li&gt; &#xA; &lt;li&gt;ps2&lt;/li&gt; &#xA; &lt;li&gt;switchfirst (first boot animation)&lt;/li&gt; &#xA; &lt;li&gt;switch (regular boot animation)&lt;/li&gt; &#xA; &lt;li&gt;xbox&lt;/li&gt; &#xA; &lt;li&gt;xbox 360&lt;/li&gt; &#xA; &lt;li&gt;xbox one&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -o - https://raw.githubusercontent.com/kageurufu/steamdeck_startup_animations/main/install.sh | bash -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re (justifiably) not a fan of &lt;code&gt;curl | bash&lt;/code&gt;, you can run this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir -p &#34;$HOME/homebrew&#34;&#xA;mkdir -p &#34;$HOME/.config/systemd/user&#34;&#xA;git clone https://github.com/kageurufu/steamdeck_startup_animations &#34;$HOME/homebrew/startup_animations&#34;&#xA;ln -sf &#34;$HOME/homebrew/startup_animations/randomize_deck_startup.service&#34; &#34;$HOME/.config/systemd/user/randomize_deck_startup.service&#34;&#xA;systemctl --user daemon-reload&#xA;systemctl --user enable --now randomize_deck_startup.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Uninstallation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bash $HOME/homebrew/startup_animations/uninstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Making an animation (somewhat advanced)&lt;/h1&gt; &#xA;&lt;p&gt;I used youtube-dl to grab the best video and audio tracks from youtube, and then ffmpeg to merge them, resizing down to fit the Deck&#39;s 1280x800 screen. Then I use &lt;code&gt;truncate&lt;/code&gt; to make the file the right size.&lt;/p&gt; &#xA;&lt;p&gt;This all does work on the steamdeck&lt;/p&gt; &#xA;&lt;h3&gt;Getting the dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 -m ensurepip&#xA;~/.local/bin/pip install --user youtube-dl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating the animation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Get ps1.webm and ps1.m4a. Your file extensions may differ here&#xA;~/.local/bin/youtube-dl -f bestvideo -o &#39;ps1.%(ext)s&#39; https://www.youtube.com/watch?v=1JwbfIi5Uio&#xA;~/.local/bin/youtube-dl -f bestaudio -o &#39;ps1.%(ext)s&#39; https://www.youtube.com/watch?v=1JwbfIi5Uio&#xA;&#xA;# Convert the video from whatever input formats to a webm video in VP9 encoding, with vorbis encoded audio&#xA;ffmpeg -i ps1.webm -i ps1.m4a \&#xA;       -map 0&lt;span&gt;âœŒ&lt;/span&gt;0  -map 1&lt;span&gt;ðŸ…°&lt;/span&gt;0 \&#xA;       -filter:v &#34;scale=&#39;min(1280,iw)&#39;:min&#39;(800,ih)&#39;:force_original_aspect_ratio=decrease,pad=1280:800:(ow-iw)/2:(oh-ih)/2&#34; \&#xA;       -c:v vp9 \&#xA;       -c:a libvorbis \&#xA;       my_deck_startup_ps1.webm&#xA;&#xA;# Make sure the generated file is less than 1840847B here&#xA;# Mine was `389670`, plenty small enough&#xA;stat -c &#39;%s&#39; my_deck_startup_ps1.webm&#xA;&#xA;truncate -s 1840847 my_deck_startup_ps1.webm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ffmpeg command is a bit confusing, so heres a breakdown&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-i ps1.webm -i ps1.m4a&lt;/code&gt;&lt;br&gt; Load both the video and audio files we downloaded.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-map 0&lt;span&gt;âœŒ&lt;/span&gt;0 -map 1&lt;span&gt;ðŸ…°&lt;/span&gt;0&lt;/code&gt;&lt;br&gt; Only use the first video stream from the first file, and first audio stream from the second.&lt;br&gt; This prevents having multiple video or audio streams in the final file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-filter:v &#34;scale=&#39;min(1280,iw)&#39;:min&#39;(800,ih)&#39;:force_original_aspect_ratio=decrease,pad=1280:800:(ow-iw)/2:(oh-ih)/2&#34;&lt;/code&gt;&lt;br&gt; This is most confusing part, basically we&#39;re resizing the video to fit 1280x800&lt;br&gt; &lt;code&gt;min&#39;(1280,iw)&#39;:min&#39;(800,ih)&#39;&lt;/code&gt; ensures the target size is never upscaled&lt;br&gt; &lt;code&gt;force_original_aspect_ratio=decrease&lt;/code&gt; scales to fit within a given size, keeping the original aspect ratio&lt;br&gt; &lt;code&gt;pad=1280:800:(ow-iw)/2:(oh-ih)/2&lt;/code&gt; pad the video size to 1280:800, centering the original video. This is optional and I might not use it in the future&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-c:v vp9 c:a libvorbis&lt;/code&gt; Select our output VP9 / vorbis codecs&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MFDGaming/ubuntu-in-termux</title>
    <updated>2022-08-29T01:45:13Z</updated>
    <id>tag:github.com,2022-08-29:/MFDGaming/ubuntu-in-termux</id>
    <link href="https://github.com/MFDGaming/ubuntu-in-termux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a script by which you can install Ubuntu in your termux application without a rooted device&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ubuntu-in-termux&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/Xaqkdeh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chat-On%20Discord-738BD7.svg?style=for-the-badge&#34; alt=&#34;DISCORD&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s This?&lt;/h2&gt; &#xA;&lt;p&gt;This is a script that allows you to install Ubuntu in your termux application without a rooted device&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;â€¢ Updated to ubuntu 22.04&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Important&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;â€¢ If you have to use ubuntu in termux with a x86/i*86 architecture or prefer ubuntu 19.10 you can use this branch -&amp;gt; &lt;a href=&#34;https://github.com/MFDGaming/ubuntu-in-termux/tree/ubuntu19.10&#34;&gt;https://github.com/MFDGaming/ubuntu-in-termux/tree/ubuntu19.10&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;â€¢ If you get an error message that says &#34;Fatal Kernel too old&#34; you have to uncomment the line that reads &#34;command+=&#34; -k 4.14.81&#34;&#34; (remove the # that is located in front of the line) in the &#34;startubuntu.sh&#34; file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation steps&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update termux: &lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade -y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install wget: &lt;code&gt;apt-get install wget -y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install proot: &lt;code&gt;apt-get install proot -y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install git: &lt;code&gt;apt-get install git -y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to HOME folder: &lt;code&gt;cd ~&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download script: &lt;code&gt;git clone https://github.com/MFDGaming/ubuntu-in-termux.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to script folder: &lt;code&gt;cd ubuntu-in-termux&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Give execution permission: &lt;code&gt;chmod +x ubuntu.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the script: &lt;code&gt;./ubuntu.sh -y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now just start ubuntu: &lt;code&gt;./startubuntu.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>uBlockOrigin/uAssets</title>
    <updated>2022-08-29T01:45:13Z</updated>
    <id>tag:github.com,2022-08-29:/uBlockOrigin/uAssets</id>
    <link href="https://github.com/uBlockOrigin/uAssets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Resources for uBlock Origin, uMatrix: static filter lists, ready-to-use rulesets, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uAssets&lt;/h1&gt; &#xA;&lt;p&gt;Resources for &lt;a href=&#34;https://github.com/gorhill/uBlock&#34;&gt;uBlock Origin (uBO)&lt;/a&gt;: static filter lists, ready-to-use rulesets, etc.&lt;/p&gt; &#xA;&lt;p&gt;The goal of this repository is to receive all the reports on the need for new filters or reports of web pages broken by existing filters and will be open for people to contribute (those who have proven to be valuable contributors will receive write permissions on the project). Ideally, I wish for a small army of dedicated volunteers to deal solely with filter issues.&lt;/p&gt; &#xA;&lt;p&gt;The rationale on whether to include a specific filter in one of uBO&#39;s filter lists is the same as outlined by &lt;a href=&#34;https://easylist.to/pages/policy.html&#34;&gt;EasyList/EasyPrivacy policies&lt;/a&gt;, also taking into account whether a filter requires uBO&#39;s extended filter syntax.&lt;/p&gt; &#xA;&lt;p&gt;Any resolution of issues without using extended syntax (&lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#scriptlet-injection&#34;&gt;scriptlet injection&lt;/a&gt;, &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#redirect&#34;&gt;redirect&lt;/a&gt;, &lt;a href=&#34;https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#procedural-cosmetic-filters&#34;&gt;procedural cosmetic filters&lt;/a&gt;, etc.) will not occur in uAssets. The preferable way is to fix it in EasyList, if possible.&lt;/p&gt; &#xA;&lt;p&gt;Issues involving the following will be fixed in uAssets even if they don&#39;t require extended syntax:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ad-reinsertion&lt;/li&gt; &#xA; &lt;li&gt;anti-adblock&lt;/li&gt; &#xA; &lt;li&gt;context menu blockage&lt;/li&gt; &#xA; &lt;li&gt;copy/cut/paste blockage&lt;/li&gt; &#xA; &lt;li&gt;popups/popunders&lt;/li&gt; &#xA; &lt;li&gt;site breakage&lt;/li&gt; &#xA; &lt;li&gt;video ads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the ABP-compatible fixes are for high-traffic sites, they need to be added to uBO filters until they get added to EasyList.&lt;/p&gt; &#xA;&lt;h4&gt;Paywall&lt;/h4&gt; &#xA;&lt;p&gt;Circumventing a paywall is considered &lt;a href=&#34;https://github.com/uBlockOrigin/uAssets/issues/2317#issuecomment-392009540&#34;&gt;out of scope&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;GDPR&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/uBlockOrigin/uAssets/issues/4123#issuecomment-439232886&#34;&gt;uAssets&lt;/a&gt; will not address GDPR modals.&lt;/p&gt; &#xA;&lt;h4&gt;Porn farms&lt;/h4&gt; &#xA;&lt;p&gt;Sites found to be porn farms (families of mass-produced porn sites without original content) or are part of a porn farm will not be addressed in uAssets.&lt;/p&gt; &#xA;&lt;h4&gt;Support forum&lt;/h4&gt; &#xA;&lt;p&gt;For any support, questions or help, visit &lt;a href=&#34;https://www.reddit.com/r/uBlockOrigin/&#34;&gt;/r/uBlockOrigin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Similarly purposed blocker&lt;/h4&gt; &#xA;&lt;p&gt;Using a similarly purposed blocker with uBO can result in site breakage or undefined results. See &lt;a href=&#34;https://twitter.com/gorhill/status/1033706103782170625&#34;&gt;https://twitter.com/gorhill/status/1033706103782170625&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>