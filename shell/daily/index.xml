<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-01T01:45:45Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>awesome-lists/awesome-bash</title>
    <updated>2023-02-01T01:45:45Z</updated>
    <id>tag:github.com,2023-02-01:/awesome-lists/awesome-bash</id>
    <link href="https://github.com/awesome-lists/awesome-bash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of delightful Bash scripts and resources.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Bash &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A curated list of delightful Bash scripts and resources.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Inspired by the &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;awesome&lt;/a&gt; list thing.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;In addition of this list, you should read the list &lt;a href=&#34;https://github.com/alebcay/awesome-shell&#34;&gt;awesome-shell&lt;/a&gt;. It is a curated list of awesome command-line frameworks, toolkits, guides and gizmos. You may also want to check &lt;a href=&#34;https://github.com/unixorn/awesome-zsh-plugins&#34;&gt;awesome-zsh&lt;/a&gt; or &lt;a href=&#34;https://github.com/bucaran/awesome-fish&#34;&gt;awesome-fish&lt;/a&gt;. If you are looking for more lists, check &lt;a href=&#34;https://github.com/sindresorhus/awesome&#34;&gt;awesome-link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Books and Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wiki.bash-hackers.org/doku.php&#34;&gt;The Bash-Hackers Wiki&lt;/a&gt; - Human-readable documentation of any kind about GNU Bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wiki.bash-hackers.org/scripting/newbie_traps&#34;&gt;Bash beginner&#39;s mistakes&lt;/a&gt; (by the Bash-Hackers Wiki)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashGuide&#34;&gt;Bash Guide&lt;/a&gt; - A bash guide for beginners. (by Lhunath)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashFAQ&#34;&gt;Bash FAQ&lt;/a&gt; - Answers most of your questions (by Lhunath)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashPitfalls&#34;&gt;Bash Pitfalls&lt;/a&gt; - Lists the common pitfalls beginners fall into, and how to avoid them&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.gnu.org/software/bash/manual/&#34;&gt;Bash manual&lt;/a&gt; - Bourne-Again Shell manual&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tiswww.case.edu/php/chet/bash/FAQ&#34;&gt;Bash FAQ&lt;/a&gt; (by &lt;a href=&#34;http://tiswww.case.edu/php/chet/&#34;&gt;Chet Ramey&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tldp.org/LDP/abs/html/&#34;&gt;Advanced Bash-Scripting Guide&lt;/a&gt; - An in-depth exploration of the art of shell scripting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.tldp.org/LDP/Bash-Beginners-Guide/html/&#34;&gt;Bash Guide for Beginners&lt;/a&gt; (by Machtelt Garrels)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html#toc&#34;&gt;Bash Programming - Intro/How-to&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/denysdovhan/bash-handbook&#34;&gt;bash-handbook&lt;/a&gt; - A handbook for those who want to learn Bash without diving in too deeply&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://google.github.io/styleguide/shellguide.html&#34;&gt;Google&#39;s Shell Style Guide&lt;/a&gt; - Reasonable advice about code style&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sobell.com/CR3/index.html&#34;&gt;Sobell&#39;s Book&lt;/a&gt; - A practical guide to commands, editors, and shell programming&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/Bash_Shell_Scripting&#34;&gt;WikiBooks: Bash Shell Scripting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://redsymbol.net/articles/unofficial-bash-strict-mode/&#34;&gt;Use the Unofficial Bash Strict Mode (Unless You Looove Debugging)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/denysdovhan/learnyoubash&#34;&gt;learnyoubash&lt;/a&gt; - An interactive workshopper which will teach you how to use the terminal and write your the first Bash script.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20180917174959/http://www.kfirlavi.com/blog/2012/11/14/defensive-bash-programming&#34;&gt;Defensive BASH Programming&lt;/a&gt; - Methods to defend your programs from breaking as well as keeping the code tidy and clean.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dylanaraps/pure-bash-bible&#34;&gt;Pure Bash Bible&lt;/a&gt; - A collection of pure bash alternatives to external processes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command-Line Productivity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Search, bookmarks, multiplexing, and other tools that make your terminal experience more productive.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sebglazebrook/aliases&#34;&gt;aliases&lt;/a&gt; - Contextual, dynamic, organized aliases for the bash shell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcaloras/bashhub-client&#34;&gt;bashhub&lt;/a&gt; - &lt;span&gt;☁&lt;/span&gt; Bash history in the cloud. Indexed and searchable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nicksherron/bashhub-server&#34;&gt;bashhub-server&lt;/a&gt; - Privately hosted open source bashhub server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huyng/bashmarks&#34;&gt;bashmarks&lt;/a&gt; - Directory bookmarks for the shell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shyiko/commacd&#34;&gt;commacd&lt;/a&gt; - A faster way to move around in Bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kdabir/has&#34;&gt;has&lt;/a&gt; - &lt;code&gt;has&lt;/code&gt; helps you check presence of various command line tools and their versions on path&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dvorka/hstr&#34;&gt;hstr&lt;/a&gt; - Bash History Suggest Box&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pindexis/qfc&#34;&gt;qfc&lt;/a&gt; - File-completion widget for Bash and Zsh&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdown/sshrc&#34;&gt;sshrc&lt;/a&gt; - Bring your .bashrc, .vimrc, etc. with you when you SSH&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ajeetdsouza/zoxide&#34;&gt;zoxide&lt;/a&gt; - A better way to navigate your filesystem. Written in Rust, cross-shell, and much faster than other autojumpers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Custom prompts, color themes, etc.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/win0err/aphrodite-terminal-theme&#34;&gt;aphrodite-terminal-theme&lt;/a&gt; — Minimalistic theme (prompt) for sexy terminals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/magicmonty/bash-git-prompt&#34;&gt;bash-git-prompt&lt;/a&gt; - An informative and fancy Bash prompt for Git users&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/riobard/bash-powerline&#34;&gt;bash-powerline&lt;/a&gt; - Powerline-style Bash prompt in pure Bash script&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/barryclark/bashstrap&#34;&gt;bashstrap&lt;/a&gt; - A quick way to spruce up OSX terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lvv/git-prompt&#34;&gt;git-prompt&lt;/a&gt; - Bash prompt with Git, SVN and HG modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/momeni/gittify&#34;&gt;gittify&lt;/a&gt; - A colorful Bash prompt + customized Git aliases&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nojhan/liquidprompt&#34;&gt;liquidprompt&lt;/a&gt; - A full-featured &amp;amp; carefully designed adaptive prompt for Bash &amp;amp; Zsh&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/horosgrisa/mysql-colorize.bash&#34;&gt;mysql-colorize&lt;/a&gt; - Colorization for mysql comand-line client&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arialdomartini/oh-my-git&#34;&gt;oh-my-git&lt;/a&gt; - An opinionated git prompt for bash and zsh&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edouard-lopez/progress-bar.sh&#34;&gt;progress-bar.sh&lt;/a&gt; - Simple &amp;amp; sexy progressbar for &lt;code&gt;bash&lt;/code&gt;, give it a duration and it will do the rest &lt;img src=&#34;http://pix.toile-libre.org/upload/original/1476311497.gif&#34; alt=&#34;progress-bar.sh in action&#34;&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twolfson/sexy-bash-prompt&#34;&gt;sexy-bash-prompt&lt;/a&gt; - Bash prompt with colors, Git statuses, and Git branches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrzool/bash-sensible&#34;&gt;bash-sensible&lt;/a&gt; - An attempt at saner Bash defaults&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tools for working with data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zalando/bigbash&#34;&gt;BigBash&lt;/a&gt; - Open-source converter that generates a bash one-liner from an SQL Select query, no database necessary&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For Developers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Command-line development, version control, and deployment.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p8952/bocker&#34;&gt;bocker&lt;/a&gt; - Docker implemented in 100 lines of bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rtomayko/git-sh&#34;&gt;git-sh&lt;/a&gt; - A customized Bash environment suitable for Git work&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rosineygp/mkdkr&#34;&gt;mkdkr&lt;/a&gt; - Make + Docker + Shell = CI Pipeline&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloading and Serving&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Self-hosted, lightweight servers and networking tools written in shell scripts.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jneen/balls&#34;&gt;balls&lt;/a&gt; - Bash on Balls&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/avleen/bashttpd&#34;&gt;bashttpd&lt;/a&gt; - A web server written in Bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andreafabrizi/Dropbox-Uploader&#34;&gt;Dropbox-Uploader&lt;/a&gt; - Dropbox Uploader is a Bash script which can be used to upload, download, list or delete files from Dropbox&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaburns/ngincat&#34;&gt;ngincat&lt;/a&gt; - Tiny Bash HTTP server using netcat&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ivanilves/xiringuito&#34;&gt;xiringuito&lt;/a&gt; - SSH-based VPN for poors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Applications&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Command line-based applications or command line access to existing services.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cfenollosa/bashblog&#34;&gt;bashblog&lt;/a&gt; - A Bash script that handles blog posting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Red5d/pushbullet-bash&#34;&gt;pushbullet-bash&lt;/a&gt; - Bash interface to the PushBullet API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/todotxt/todo.txt-cli&#34;&gt;todo.sh&lt;/a&gt; - A simple and extensible shell script for managing your todo.txt file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ianmiell/cheapci&#34;&gt;cheapci&lt;/a&gt; - A continuous integration framework implemented in bash&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Games&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;All work and no play is a cruddy way to spend your day.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mydzor/bash2048&#34;&gt;bash2048&lt;/a&gt; - Bash implementation of 2048 game&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/feherke/Bash-script/tree/master/minesweeper&#34;&gt;minesweeper&lt;/a&gt; - Bash implementation of minesweeper&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opensource-usability.blogspot.com/2016/10/solitaire-in-bash-script.html&#34;&gt;solitaire&lt;/a&gt; - Bash implementation of solitaire&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/huytd/6a1a6a7b34a0d0abcac00b47e3d01513&#34;&gt;wordle&lt;/a&gt; - Wordle in less than 50 lines of Bash&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.bashoneliners.com/&#34;&gt;Bash One-Liners&lt;/a&gt; - A collection of practical or just pure awesome bash one-liners (&lt;a href=&#34;https://github.com/janosgyerik/bashoneliners&#34;&gt;repos&lt;/a&gt; by @&lt;a href=&#34;https://github.com/janosgyerik&#34;&gt;janosgyerik&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.commandlinefu.com/&#34;&gt;commandlinefu&lt;/a&gt; - A repository for the most elegant and useful UNIX commands&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shell Package Management&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tools for managing multiple shell configurations.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bash-it/bash-it&#34;&gt;bash-it&lt;/a&gt; - A community Bash framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/basherpm/basher&#34;&gt;basher&lt;/a&gt; - A package manager for shell scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bpkg/bpkg&#34;&gt;bpkg&lt;/a&gt; - A lightweight bash package manager&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andsens/homeshick&#34;&gt;homeshick&lt;/a&gt; - Git dotfile synchronizer written in Bash&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shell Script Development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tools for writing, improving, or organizing Bash or other shell scripts&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fidian/ansi&#34;&gt;ansi&lt;/a&gt; - ANSI escape codes in pure bash - change text color, position the cursor, much more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matejak/argbash&#34;&gt;argbash&lt;/a&gt; - Bash argument parsing code generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lehmannro/assert.sh&#34;&gt;assert.sh&lt;/a&gt; - Bash unit testing framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zombieleet/async-bash&#34;&gt;async-bash&lt;/a&gt; - implementation of async functions in bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sstephenson/bats&#34;&gt;bats&lt;/a&gt; - Bash Automated Testing System&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kvz/bash3boilerplate&#34;&gt;bash3boilerplate&lt;/a&gt; - Templates to write better Bash scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jmcantrell/bashful&#34;&gt;bashful&lt;/a&gt; - A collection of libraries to simplify writing Bash scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zombieleet/bashify&#34;&gt;bashify&lt;/a&gt; - few helper functions in bash ( especially string manipulation functions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xsc/bashing&#34;&gt;bashing&lt;/a&gt; - Smashing Bash into Pieces - Bash framework for creating command line tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DannyBen/bashly&#34;&gt;bashly&lt;/a&gt; - Bash command line framework and CLI generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lingtalfi/bashmanager&#34;&gt;bashmanager&lt;/a&gt; - mini bash framework for creating command line tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kigster/bashmatic&#34;&gt;Bashmatic&lt;/a&gt; - an easy to use DSL library for building BASH-based tooling &amp;amp; installers (900+ functions).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rafritts/BashScriptTestingLibrary&#34;&gt;BashScriptTestingLibrary&lt;/a&gt; - A unit testing framework for Bash scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/niieani/bash-oo-framework&#34;&gt;Bash Infinity&lt;/a&gt; - A modern boilerplate / framework / standard library for bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vlisivka/bash-modules&#34;&gt;bash-modules&lt;/a&gt; - a collection of modules for &lt;a href=&#34;http://redsymbol.net/articles/unofficial-bash-strict-mode/&#34;&gt;unofficial strict mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pgrange/bash_unit&#34;&gt;bash_unit&lt;/a&gt; - bash unit testing enterprise edition framework for professionals&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tests-always-included/mo&#34;&gt;mo&lt;/a&gt; - Mustache templates in pure bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudflare/semver_bash&#34;&gt;semver_bash&lt;/a&gt; - Semantic Versioning in Bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;shellcheck&lt;/a&gt; - A static analysis tool for shell scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mvdan/sh&#34;&gt;shfmt&lt;/a&gt; - Format bash programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kward/shunit2&#34;&gt;shunit2&lt;/a&gt; - A unit test framework for Bash scripts with a flavour of JUnit/PyUnit&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Bash-tools&#34;&gt;DevOps-Bash-tools&lt;/a&gt; - 750+ DevOps Shell Scripts and Advanced Bash environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Just for fun&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/talwat/pokeget&#34;&gt;pokeget&lt;/a&gt; - Displays sprites of pokemon in the terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/bash&#34;&gt;Stack Overflow&lt;/a&gt; - Bash tag on Stack Overflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/bash&#34;&gt;/r/Bash&lt;/a&gt; - A subreddit dedicated to bash scripting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/commandline&#34;&gt;/r/CommandLine&lt;/a&gt; - for anything regarding the command line, in any operating system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.freenode.net/?channels=bash&#34;&gt;#bash&lt;/a&gt; - IRC channel on freenode. The main contributors of the BashGuide, BashFAQ, BashPitfalls and ShellCheck hang around there&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Awesome Lists&lt;/h2&gt; &#xA;&lt;p&gt;Other amazingly awesome lists can be found in &lt;a href=&#34;https://github.com/emijrp/awesome-awesome&#34;&gt;awesome-awesome&lt;/a&gt; and &lt;a href=&#34;https://github.com/bayandin/awesome-awesomeness&#34;&gt;awesome-awesomeness&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Contributions welcome! Read the &lt;a href=&#34;https://raw.githubusercontent.com/awesome-lists/awesome-bash/master/contributing.md&#34;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;&lt;img src=&#34;http://i.creativecommons.org/p/zero/1.0/88x31.png&#34; alt=&#34;CC0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To the extent possible under law, aloisdg has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JerryK026/random-interview-defense</title>
    <updated>2023-02-01T01:45:45Z</updated>
    <id>tag:github.com,2023-02-01:/JerryK026/random-interview-defense</id>
    <link href="https://github.com/JerryK026/random-interview-defense" rel="alternate"></link>
    <summary type="html">&lt;p&gt;터미널 오픈 시 랜덤 면접 질문을 던져주는 서비스 랜덤 면접 디펜스입니다!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🏰 랜덤 면접 디펜스 🏰&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;랜면디&lt;/b&gt;는 터미널을 열 때마다 랜덤한 웹 개발 기술면접 질문을 노출하는 서비스입니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55067949/215311898-eb0110ea-e381-4aad-a714-b0436c66ebc6.gif&#34; alt=&#34;rid test&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;웹 버전 사용법 - 권장!&lt;/h2&gt; &#xA;&lt;p&gt;해당 레포가 업데이트 될 때마다 pull할 필요가 없습니다 받은 질문을 서버가 기억하고 알아서 답변합니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;🚨 베타버전이기 때문에 도메인 주소가 변경될 수도 있습니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;1. 해당 레포의 webQuery.sh 파일을 &lt;code&gt;~/rid/&lt;/code&gt; 위치에 추가하고 실행 권한을 줍니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chmod +x webQuery.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;b&gt;2. 터미널 설정 파일에 원하는 퀴즈를 등록합니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mac : &lt;code&gt;vi ~/.zshrc&lt;/code&gt;로 접속 후 마지막 줄에 다음 문장을 추가한 후 저장합니다&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias rid=&#39;~/rid/webQuery.sh&#39;&#xA;echo &#34;정답 찾는 법 : rid -r&#34;&#xA;rid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;b&gt;curl에 들어갈 문장을 수정해 원하는 문제 유형을 선택할 수도 있습니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;backend + frontend + tip 질문을 받고싶은 경우 (권장) &lt;code&gt;rid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;backend 질문만 받고싶은 경우 &lt;code&gt;rid -b&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;frontend 질문만 받고싶은 경우 &lt;code&gt;rid -f&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;위 명령어를 직접 입력해서 원할 때 질문을 받을 수도 있습니다&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;3. alias를 등록합니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;로컬 버전 사용법&lt;/h2&gt; &#xA;&lt;p&gt;&lt;b&gt;1. 레포를 클론합니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/JerryK026/Random-Interview-Defense.git ~/rid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;b&gt;2. fortune 명령어를 설치합니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;brew&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install fortune&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;b&gt;3. 터미널 설정 파일에 원하는 퀴즈를 등록합니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mac : &lt;code&gt;vi ~/.zshrc&lt;/code&gt;로 접속 후 마지막 줄에 다음 문장을 추가한 후 저장합니다&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias rid=&#39;~/rid/query.sh&#39;&#xA;echo &#34;정답 찾는 법 : rid [b or f] 퀴즈번호&#34;&#xA;fortune ~/rid/quiz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;b&gt;4. alias를 등록합니다&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mac&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;💡 vi환경에서 shift + g를 누르면 파일 맨 마지막 줄로 이동합니다&lt;/p&gt; &#xA;&lt;p&gt;💡 Powerlevel10k 사용 시 instant prompt 옵션을 종료해야 콘솔 출력 경고가 발생하지 않습니다 &lt;a href=&#34;https://github.com/JerryK026/random-interview-defense/issues/7&#34;&gt;참고&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;퀴즈 파일 선택 가이드&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;백엔드 질문만 원할 시 : &lt;code&gt;fortune ~/rid/quiz/backend.fortune&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;프론트엔드 질문만 원할 시 : &lt;code&gt;fortune ~/rid/quiz/frontend.fortune&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;프로그래밍 팁만 원할 시 : &lt;code&gt;fortune ~/rid/quiz/tip.fortune&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;전체 질문 + 팁을 원할 시 : &lt;code&gt;fortune ~/rid/quiz&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;나만의 질문 업로드 가이드&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;원하는 타겟 파일(&lt;code&gt;~.fortune&lt;/code&gt;)을 열어 면접 질문 추가한 후, &lt;code&gt;%&lt;/code&gt;기호로 구분합니다&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sh ~/rid/build.sh&lt;/code&gt; 명령어로 &lt;code&gt;.dat&lt;/code&gt; 포맷 파일을 생성합니다&lt;/li&gt; &#xA; &lt;li&gt;answer 디렉터리에서 원하는 주제 폴더에 들어가서 &lt;code&gt;문제번호.txt&lt;/code&gt;로 저장합니다&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;질문 리스트&lt;/h2&gt; &#xA;&lt;p&gt;질문 리스트는 &lt;a href=&#34;https://github.com/JerryK026/random-interview-defense/wiki&#34;&gt;위키&lt;/a&gt;에서 확인할 수 있습니다!&lt;/p&gt; &#xA;&lt;p&gt;외에도 원하는 자료나 검수할 내용이 있다면 &lt;a href=&#34;https://github.com/JerryK026/random-interview-defense/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc&#34;&gt;이슈&lt;/a&gt; 탭에서 자유롭게 신청해 주세요&lt;/p&gt; &#xA;&lt;h2&gt;기여 가이드&lt;/h2&gt; &#xA;&lt;p&gt;면접 질문 / 팁 / 답안에 대한 컨텐츠 추가 혹은 피드백 모두 적극 환영합니다! 기여 시, 해당 자료에 기여해 주신 분들의 github id를 추가해 드립니다 :D&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issue로 기여 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;새로운 이슈를 발행하고 &lt;code&gt;🏆 새 자료&lt;/code&gt;, &lt;code&gt;🚨 검수가 필요해요&lt;/code&gt; 등 상황에 맞는 라벨을 부착합니다&lt;/li&gt; &#xA;   &lt;li&gt;수정 / 피드백의 경우 이슈 코멘트에 컨텐츠 내용 변경에 대한 이유를 추가적으로 기술합니다&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pull request로 기여 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;레포를 추가한 뒤 &lt;code&gt;나만의 질문 업로드 가이드&lt;/code&gt; 양식에 맞추어 자료를 추가한 뒤, 문제 혹은 팁 마지막 줄에 출처와 자신의 github id를 적습니다 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ex) 출제자 : JerryK026 | 출처 : xxx&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;커밋 메세지 양식은 다음과 같습니다 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;새 자료 : &lt;code&gt;new-content : [backend / frontend / tip] [자료 번호] 자료 설명&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;자료 수정 : &lt;code&gt;fix-content : [backend / frontend / tip] [자료 번호] 자료 설명&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;PR 요청을 보내면서 수정 / 피드백의 경우 PR 코멘트에 컨텐츠 내용 변경에 대한 이유를 추가적으로 기술합니다&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>XTLS/Xray-install</title>
    <updated>2023-02-01T01:45:45Z</updated>
    <id>tag:github.com,2023-02-01:/XTLS/Xray-install</id>
    <link href="https://github.com/XTLS/Xray-install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easiest way to install &amp; upgrade Xray.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xray-install&lt;/h1&gt; &#xA;&lt;p&gt;Bash script for installing Xray in operating systems such as CentOS / Debian / OpenSUSE that support systemd.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard&#34;&gt;Filesystem Hierarchy Standard (FHS)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;installed: /etc/systemd/system/xray.service&#xA;installed: /etc/systemd/system/xray@.service&#xA;&#xA;installed: /usr/local/bin/xray&#xA;installed: /usr/local/etc/xray/*.json&#xA;&#xA;installed: /usr/local/share/xray/geoip.dat&#xA;installed: /usr/local/share/xray/geosite.dat&#xA;&#xA;installed: /var/log/xray/access.log&#xA;installed: /var/log/xray/error.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice: Xray will NOT log to &lt;code&gt;/var/log/xray/*.log&lt;/code&gt; by default. Configure &lt;code&gt;&#34;log&#34;&lt;/code&gt; to specify log files.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install &amp;amp; Upgrade Xray-core and geodata with &lt;code&gt;User=nobody&lt;/code&gt;, but will NOT overwrite &lt;code&gt;User&lt;/code&gt; in existing service files&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Update geoip.dat and geosite.dat only&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ install-geodata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remove Xray, except json and logs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ remove&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advance&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install &amp;amp; Upgrade Xray-core to a pre-release version&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ install --version 1.5.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install &amp;amp; Upgrade Xray-core and geodata with &lt;code&gt;User=root&lt;/code&gt;, which will overwrite &lt;code&gt;User&lt;/code&gt; in existing service files&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ install -u root&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install &amp;amp; Upgrade Xray-core without geodata&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ install --without-geodata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remove Xray, include json and logs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ remove --purge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;# bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/XTLS/Xray-install&#34;&gt;&lt;img src=&#34;https://starchart.cc/XTLS/Xray-install.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>