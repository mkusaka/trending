<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-20T01:42:59Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Alex313031/ThoriumOS</title>
    <updated>2023-10-20T01:42:59Z</updated>
    <id>tag:github.com,2023-10-20:/Alex313031/ThoriumOS</id>
    <link href="https://github.com/Alex313031/ThoriumOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChromiumOS fork with Thorium Browser, x264/x265 codecs, Widevine, Kernel 5.15, Linux firmware/modules support, Nouveau, Intel microcode, and extra packages.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/alex313031/chromiumos?label=Version%3A&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt; &amp;nbsp;&lt;img src=&#34;https://img.shields.io/github/commit-activity/w/alex313031/chromiumos?color=blueviolet&amp;amp;label=Commit%20Activity%3A&#34; alt=&#34;GitHub commit activity&#34;&gt; &amp;nbsp;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/ChromiumOS?style=social&#34; alt=&#34;Subreddit subscribers&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ThoriumOS&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/Alex313031/ThoriumOS/raw/main/images/thoriumos_bootsplash.png&#34;&gt; &#xA;&lt;h2&gt;ChromiumOS fork with Thorium Browser, x264/x265 codecs, Widevine, Kernel 5.15, Linux Firmware/Modules support, Nouveau, Intel/AMD microcode, and extra packages.&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;SYNOPSIS: ThoriumOS aims to be the ChromiumOS counterpart to Thorium. It is based on tip-o-tree, and contains the compiler optimizations of Thorium applied to the whole OS. It contains a variety of extra developer friendly packages, and trys to support as much hardware as possible via kernel configuration, graphics stack configuration, and USE flags.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;ThoriumOS uses the Thorium Browser, which I also make for Linux, Windows, MacOS (x64 and M1), and other platforms like the Raspberry Pi &amp;gt; &lt;a href=&#34;https://github.com/Alex313031/Thorium&#34;&gt;https://github.com/Alex313031/Thorium&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Extra packages include iotop, iotools, sysstat, i2ctools, haveged, telnet, bridge-utils, lm-sensors, pydf, cpuid, htop, sl, custom wallpapers, screenfetch-dev, pak, and TrImLy: a fstrim and e4defrag automator script I made for ChromiumOS. &lt;br&gt; – &lt;em&gt;NOTE&lt;/em&gt;: Please see PACKAGES.md for the full list of extra packages! &lt;br&gt; &amp;nbsp; TrImLy &amp;gt; &lt;a href=&#34;https://github.com/Alex313031/TrImLy/&#34;&gt;https://github.com/Alex313031/TrImLy/&lt;/a&gt; &lt;br&gt; &amp;nbsp; ScreenFetch &amp;gt; &lt;a href=&#34;https://github.com/KittyKatt/screenFetch&#34;&gt;https://github.com/KittyKatt/screenFetch&lt;/a&gt; &lt;br&gt; &amp;nbsp; Pak &amp;gt; &lt;a href=&#34;https://github.com/myfreeer/chrome-pak-customizer&#34;&gt;https://github.com/myfreeer/chrome-pak-customizer&lt;/a&gt; &lt;br&gt; &amp;nbsp;&amp;nbsp;– Sceenfetch is like neofetch for ChromiumOS &lt;br&gt; &amp;nbsp;&amp;nbsp;– Pak can be used to unpack the .pak files used in any Chromium browser. &lt;br&gt; &amp;nbsp;&amp;nbsp;– Also added a script I made called memr to drop all caches, added handy aliases which can be found in the dot-bashrc file, and added good cmdline flags which can be found in the chrome_dev.conf file.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;– Inspired by and based off of ArnoldTheBat&#39;s builds which can be downloaded here &amp;gt; &lt;a href=&#34;https://arnoldthebat.co.uk/wordpress/&#34;&gt;https://arnoldthebat.co.uk/wordpress/&lt;/a&gt; &lt;br&gt; &amp;nbsp;&amp;nbsp;– Also some code from FydeOS &amp;gt; &lt;a href=&#34;https://github.com/FydeOS&#34;&gt;https://github.com/FydeOS&lt;/a&gt; &lt;br&gt; &amp;nbsp;&amp;nbsp;– Also some code from NayuOS &amp;gt; &lt;a href=&#34;https://nayuos.nexedi.com/&#34;&gt;https://nayuos.nexedi.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is Arnold&#39;s source code which this project is based on &amp;gt; &lt;a href=&#34;https://github.com/arnoldthebat/chromiumos&#34;&gt;https://github.com/arnoldthebat/chromiumos&lt;/a&gt; - if you don&#39;t know how to work with these overlays, I invite you to learn, but one can just download the premade image in releases.&lt;/p&gt; &#xA;&lt;h2&gt;Installing &lt;img src=&#34;https://github.com/Alex313031/Thorium/raw/main/logos/NEW/bulb_light.svg#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://github.com/Alex313031/Thorium/raw/main/logos/NEW/bulb_dark.svg#gh-light-mode-only&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The .7z files in Releases contain chromiumos_image.bin which can be flashed to a USB Drive with &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;https://www.balena.io/etcher/&lt;/a&gt;, dd, or cros_flash and booted on most processors supporting AVX or later. Follow &lt;a href=&#34;https://chromium.googlesource.com/chromiumos/docs/+/HEAD/developer_guide.md#Installing-your-ChromiumOS-image-to-your-hard-disk&#34;&gt;https://chromium.googlesource.com/chromiumos/docs/+/HEAD/developer_guide.md#Installing-your-ChromiumOS-image-to-your-hard-disk&lt;/a&gt; However when running &lt;code&gt;/usr/sbin/chromeos-install&lt;/code&gt; append &lt;code&gt;--dst /dev/sdxx&lt;/code&gt;, where &lt;em&gt;sdxx&lt;/em&gt; is your hard drive i.e. &lt;em&gt;sda1&lt;/em&gt;. If you built your own image, API Keys will be needed to sign in. (See below.)&lt;/p&gt; &#xA;&lt;h2&gt;Building &lt;img src=&#34;https://github.com/Alex313031/Thorium/raw/main/logos/NEW/build_light.svg#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://github.com/Alex313031/Thorium/raw/main/logos/NEW/build_dark.svg#gh-light-mode-only&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To start building &amp;gt; &lt;a href=&#34;https://chromium.googlesource.com/chromiumos/docs/+/HEAD/developer_guide.md&#34;&gt;https://chromium.googlesource.com/chromiumos/docs/+/HEAD/developer_guide.md&lt;/a&gt; &lt;br&gt; About overlays &amp;gt; &lt;a href=&#34;https://www.chromium.org/chromium-os/how-tos-and-troubleshooting/working-with-your-overlay-faq&#34;&gt;https://www.chromium.org/chromium-os/how-tos-and-troubleshooting/working-with-your-overlay-faq&lt;/a&gt; &lt;br&gt; Note that it is best if depot_tools, chromium, and chromiumos are all in $HOME. I don&#39;t know where you will put these dirs, so I just prefix things below with //.&lt;/p&gt; &#xA;&lt;p&gt;First, we assume the chromiumos source, chromium source, and this repo are all in $HOME. Then go into this repo and run &lt;code&gt;./setup.sh&lt;/code&gt;, which will copy needed files over the chromiumos source tree and create a new overlay named overlay-amd64-frick. Run the &lt;code&gt;sed -i &#39;s/ALL_BOARDS=(/ALL_BOARDS=(\n amd64-frick\n/&#39; ${HOME}/chromiumos/src/third_party/chromiumos-overlay/eclass/cros-board.eclass&lt;/code&gt; command that ./setup.sh will tell you to do toward the end. This adds the overlay to this list of known board overlays.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To build with x264 and the extra packages, you must also&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download chromium source code &amp;gt; &lt;a href=&#34;https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/linux/build_instructions.md&#34;&gt;https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/linux/build_instructions.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;em&gt;.gclient&lt;/em&gt; file to the chromium source directory (//chromium not //chromium/src/)&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;em&gt;make.defaults&lt;/em&gt; file to the location specified towards the top in the comments within the file.&lt;/li&gt; &#xA; &lt;li&gt;Go to //chromium/src/ and run &lt;code&gt;git checkout -f origin/main&lt;/code&gt;, then &lt;code&gt;git rebase-update&lt;/code&gt;, then &lt;code&gt;git fetch --tags&lt;/code&gt;, then &lt;code&gt;gclient sync --with_branch_heads --with_tags -f -R -D&lt;/code&gt; # This updates and syncs everything needed to build Chromium for CrOS.&lt;/li&gt; &#xA; &lt;li&gt;Next, go to //chromiumos/src/third_party/chromiumos-overlay/chromeos-base/chromeos-chrome/ and note the version in the .ebuild file (not the one with 9999 in its name) # This will be used in the next step to use the proper chromium version, which is usually slightly behind tip-o-tree for CrOS.&lt;/li&gt; &#xA; &lt;li&gt;Go back to //chromium/src and run &lt;code&gt;git checkout tags/98.0.4729.0&lt;/code&gt;, and run &lt;code&gt;gclient sync --with_branch_heads --with_tags -f -R -D&lt;/code&gt; again. # Substituting for the actual version number you got before.&lt;/li&gt; &#xA; &lt;li&gt;To build Thorium for ThoriumOS, you should also follow instructions in that repo, including its setup.sh file.&lt;/li&gt; &#xA; &lt;li&gt;Enter the CrOS SDK with &lt;code&gt;cros_sdk --enter --chrome_root=/path/to/chromium&lt;/code&gt; # Path should be absolute path, i.e. /home/alex/chromium/&lt;/li&gt; &#xA; &lt;li&gt;Run (inside cros_sdk) the export commands in the exports file.&lt;/li&gt; &#xA; &lt;li&gt;Run (inside cros_sdk) the build commands also in the exports file. &amp;nbsp; - &lt;em&gt;This builds chromeos-base/chrome (Chromium) locally instead of downloading prebuilt binaries from google storage, and excludes debug stuff.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;To build the disk image, use &lt;code&gt;./build_image --board=${BOARD} --noenable_rootfs_verification dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;The exports file has other useful commands like updating the ChromiumOS checkout, flashing to usb, deleting the build output directory, and mounting the image locally.&lt;/li&gt; &#xA; &lt;li&gt;NEW NOTE - My releases now have API keys baked in, but follow below if you are building for yourself.&lt;/li&gt; &#xA; &lt;li&gt;NOTE: To log in, API Keys are needed. Follow &amp;gt; &lt;a href=&#34;https://www.chromium.org/developers/how-tos/api-keys&#34;&gt;https://www.chromium.org/developers/how-tos/api-keys&lt;/a&gt; &lt;br&gt; &amp;nbsp;&amp;nbsp; - Sample .googleapikeys and chrome_dev.conf files are provided. Putting your API Keys into the .googleapikeys file and putting the file in your home directory will bake them into the build (only if building Chromium locally), otherwise, after login press &lt;code&gt;Ctrl+Alt+F2&lt;/code&gt; to get to a shell, type &lt;em&gt;chronos&lt;/em&gt; as the user name, then type &lt;code&gt;sudo mount -o rw,remount /&lt;/code&gt; to mount the RootFS as read/write, then edit &lt;em&gt;/etc/chrome_dev.conf&lt;/em&gt; with &lt;code&gt;sudo nano /etc/chrome_dev.conf&lt;/code&gt;, modeling it after the sample, but actually adding your API Key info into it. To get back to the GUI, press &lt;code&gt;Ctrl+Alt+F1&lt;/code&gt;, and reboot to take effect. As per the API keys document above, you also have to add your Google Account to &lt;a href=&#34;https://groups.google.com/u/1/a/chromium.org/g/google-browser-signin-testaccounts&#34;&gt;https://groups.google.com/u/1/a/chromium.org/g/google-browser-signin-testaccounts&lt;/a&gt;. It used to not be this way, until March 15, 2021 when Google vindictively restricted API Keys as per &amp;gt; &lt;a href=&#34;https://blog.chromium.org/2021/01/limiting-private-api-availability-in.html&#34;&gt;https://blog.chromium.org/2021/01/limiting-private-api-availability-in.html&lt;/a&gt;, much to the displeasure of many developers and linux distributions. Unfortunately, to enable sync in Chromium on desktop and indeed to sign in at all on ChromiumOS, API Keys are needed. Public ones used to be available, but now private ones are needed, and I can&#39;t just share my own, because there is a quota on their usage to prevent wide distribution. If I were to do that, after just a couple of people installing and signing in on my builds, the servers would refuse any more requests. It is annoying and more work, I know, and might dissuade newbies from trying ChromiumOS, but there is no way around this.&lt;/li&gt; &#xA; &lt;li&gt;If you modify any of the .ebuilds, DO NOT replace them with upstream Gentoo&#39;s, instead modify them in place. Some of the ebuilds have been modified to allow usage on CrOS, and some are slightly behind the latest version for compatability reasons.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The .7z files in Releases contain &lt;strong&gt;chromiumos_image.bin&lt;/strong&gt; which can be flashed to a USB Drive with &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;https://www.balena.io/etcher/&lt;/a&gt;, &lt;em&gt;dd&lt;/em&gt;, or &lt;em&gt;cros_flash&lt;/em&gt; and booted on most processors supporting AVX or later.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Alex313031/ThoriumOS/raw/main/images/ChromiumBook_Black.png&#34; width=&#34;256&#34;&gt;</summary>
  </entry>
  <entry>
    <title>nodejs/build</title>
    <updated>2023-10-20T01:42:59Z</updated>
    <id>tag:github.com,2023-10-20:/nodejs/build</id>
    <link href="https://github.com/nodejs/build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Better build and test infra for Node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nodejs/build/main/static-assets/ns-arm-cluster.jpg&#34; alt=&#34;ARM Cluster&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;i&gt;&lt;small&gt;Some of the Node.js Build ARM resources: 3 generations of Raspberry Pi and other ARMv7 &amp;amp; ARM64 hardware&lt;/small&gt;&lt;/i&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Node.js Build Working Group&lt;/h1&gt; &#xA;&lt;p&gt;Chat with us on &lt;a href=&#34;https://openjs-foundation.slack.com/archives/C03BJP63CH0&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;The Node.js Build Working Group maintains and controls infrastructure used for continuous integration (CI), releases, benchmarks, web hosting (of &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs.org&lt;/a&gt; and other Node.js web properties) and more.&lt;/p&gt; &#xA;&lt;p&gt;Our mission is to provide Node.js Project and libuv with solid computing infrastructure in order to improve the quality of the software itself by targeting correctness, speed and compatibility and to ensure streamlined delivery of binaries and source code to end-users.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains information used to set up and maintain the various pieces of Node.js Project infrastructure managed by the Build Working Group. It is intended to be open and transparent, if you see any relevant information missing please open an issue. If you are interested in joining, please read &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/build/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt; to understand the process and reasoning we use for granting access to the resources we manage.&lt;/p&gt; &#xA;&lt;h2&gt;Build WG Members&lt;/h2&gt; &#xA;&lt;!-- ncu-team-sync.team(nodejs/build) --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AshCripps&#34;&gt;@AshCripps&lt;/a&gt; - Ash Cripps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anonrig&#34;&gt;@anonrig&lt;/a&gt; - Yagiz Nizipli&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;@jbergstroem&lt;/a&gt; - Johan Bergström&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaocgreis&#34;&gt;@joaocgreis&lt;/a&gt; - João Reis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joyeecheung&#34;&gt;@joyeecheung&lt;/a&gt; - Joyee Cheung&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;@mhdawson&lt;/a&gt; - Michael Dawson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoLow&#34;&gt;@MoLow&lt;/a&gt; - Moshe Atlow&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MylesBorins&#34;&gt;@MylesBorins&lt;/a&gt; - Myles Borins&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/node-forward-build&#34;&gt;@node-forward-build&lt;/a&gt; - node-forward build infrastructure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phillipj&#34;&gt;@phillipj&lt;/a&gt; - Phillip Johnsen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;@richardlau&lt;/a&gt; - Richard Lau&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;@rvagg&lt;/a&gt; - Rod Vagg&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Starefossen&#34;&gt;@Starefossen&lt;/a&gt; - Hans Kristian Flaatten&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StefanStojanovic&#34;&gt;@StefanStojanovic&lt;/a&gt; - Stefan Stojanovic&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sxa&#34;&gt;@sxa&lt;/a&gt; - Stewart X Addison&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/targos&#34;&gt;@targos&lt;/a&gt; - Michaël Zasso&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;@UlisesGascon&lt;/a&gt; - Ulises Gascón&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ncu-team-sync end --&gt; &#xA;&lt;p&gt;Above list is manually synced with the &lt;a href=&#34;https://github.com/nodejs-private/secrets/tree/master/build/test/.gpg&#34;&gt;gpg member list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Infra Admins&lt;/h3&gt; &#xA;&lt;!-- ncu-team-sync.team(nodejs/build-infra) --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;@jbergstroem&lt;/a&gt; - Johan Bergström&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaocgreis&#34;&gt;@joaocgreis&lt;/a&gt; - João Reis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;@mhdawson&lt;/a&gt; - Michael Dawson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoLow&#34;&gt;@MoLow&lt;/a&gt; - Moshe Atlow&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;@richardlau&lt;/a&gt; - Richard Lau&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;@rvagg&lt;/a&gt; - Rod Vagg&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sxa&#34;&gt;@sxa&lt;/a&gt; - Stewart X Addison&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/targos&#34;&gt;@targos&lt;/a&gt; - Michaël Zasso&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;@UlisesGascon&lt;/a&gt; - Ulises Gascón&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ncu-team-sync end --&gt; &#xA;&lt;h3&gt;Jenkins Admins&lt;/h3&gt; &#xA;&lt;p&gt;Admin access to &lt;a href=&#34;https://ci.nodejs.org/&#34;&gt;https://ci.nodejs.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- ncu-team-sync.team(nodejs/jenkins-admins) --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AshCripps&#34;&gt;@AshCripps&lt;/a&gt; - Ash Cripps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;@jbergstroem&lt;/a&gt; - Johan Bergström&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaocgreis&#34;&gt;@joaocgreis&lt;/a&gt; - João Reis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joyeecheung&#34;&gt;@joyeecheung&lt;/a&gt; - Joyee Cheung&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;@mhdawson&lt;/a&gt; - Michael Dawson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MylesBorins&#34;&gt;@MylesBorins&lt;/a&gt; - Myles Borins&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/node-forward-build&#34;&gt;@node-forward-build&lt;/a&gt; - node-forward build infrastructure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;@richardlau&lt;/a&gt; - Richard Lau&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;@rvagg&lt;/a&gt; - Rod Vagg&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StefanStojanovic&#34;&gt;@StefanStojanovic&lt;/a&gt; - Stefan Stojanovic&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sxa&#34;&gt;@sxa&lt;/a&gt; - Stewart X Addison&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/targos&#34;&gt;@targos&lt;/a&gt; - Michaël Zasso&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;@UlisesGascon&lt;/a&gt; - Ulises Gascón&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ncu-team-sync end --&gt; &#xA;&lt;h3&gt;Release Admins&lt;/h3&gt; &#xA;&lt;p&gt;Access to &lt;a href=&#34;https://github.com/nodejs-private/secrets/tree/master/build/release/&#34;&gt;release secrets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AshCripps&#34;&gt;@AshCripps&lt;/a&gt; - Ash Cripps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;@jbergstroem&lt;/a&gt; - Johan Bergström&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaocgreis&#34;&gt;@joaocgreis&lt;/a&gt; - João Reis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;@mhdawson&lt;/a&gt; - Michael Dawson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;@richardlau&lt;/a&gt; - Richard Lau&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;@rvagg&lt;/a&gt; - Rod Vagg&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StefanStojanovic&#34;&gt;@StefanStojanovic&lt;/a&gt; - Stefan Stojanovic&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sxa&#34;&gt;@sxa&lt;/a&gt; - Stewart X Addison&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Above list is manually synced with the &lt;a href=&#34;https://github.com/nodejs-private/secrets/tree/master/build/release/.gpg&#34;&gt;gpg member list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Release Jenkins Admins&lt;/h3&gt; &#xA;&lt;p&gt;Admin access to &lt;a href=&#34;https://ci-release.nodejs.org/&#34;&gt;https://ci-release.nodejs.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- ncu-team-sync.team(nodejs/jenkins-release-admins) --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AshCripps&#34;&gt;@AshCripps&lt;/a&gt; - Ash Cripps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;@jbergstroem&lt;/a&gt; - Johan Bergström&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaocgreis&#34;&gt;@joaocgreis&lt;/a&gt; - João Reis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhdawson&#34;&gt;@mhdawson&lt;/a&gt; - Michael Dawson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MylesBorins&#34;&gt;@MylesBorins&lt;/a&gt; - Myles Borins&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/node-forward-build&#34;&gt;@node-forward-build&lt;/a&gt; - node-forward build infrastructure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/richardlau&#34;&gt;@richardlau&lt;/a&gt; - Richard Lau&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvagg&#34;&gt;@rvagg&lt;/a&gt; - Rod Vagg&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StefanStojanovic&#34;&gt;@StefanStojanovic&lt;/a&gt; - Stefan Stojanovic&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sxa&#34;&gt;@sxa&lt;/a&gt; - Stewart X Addison&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/targos&#34;&gt;@targos&lt;/a&gt; - Michaël Zasso&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UlisesGascon&#34;&gt;@UlisesGascon&lt;/a&gt; - Ulises Gascón&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ncu-team-sync end --&gt; &#xA;&lt;h3&gt;GitHub Bot Admins&lt;/h3&gt; &#xA;&lt;!-- ncu-team-sync.team(nodejs/github-bot) --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbergstroem&#34;&gt;@jbergstroem&lt;/a&gt; - Johan Bergström&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joyeecheung&#34;&gt;@joyeecheung&lt;/a&gt; - Joyee Cheung&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phillipj&#34;&gt;@phillipj&lt;/a&gt; - Phillip Johnsen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Starefossen&#34;&gt;@Starefossen&lt;/a&gt; - Hans Kristian Flaatten&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ncu-team-sync end --&gt; &#xA;&lt;p&gt;If you are interested in joining the Build WG, or for more information about accesses and team roles see &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/build/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Emeriti&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/addaleax&#34;&gt;@addaleax&lt;/a&gt; - Anna Henningsen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnoordhuis&#34;&gt;@bnoordhuis&lt;/a&gt; - Ben Noordhuis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gibfahn&#34;&gt;@gibfahn&lt;/a&gt; - Gibson Fahnestock&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gireeshpunathil&#34;&gt;@gireeshpunathil&lt;/a&gt; - Gireesh Punathil&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LucaLanziani&#34;&gt;@LucaLanziani&lt;/a&gt; - Luca Lanziani&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maclover7&#34;&gt;@maclover7&lt;/a&gt; - Jon Moss&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mmarchini&#34;&gt;@mmarchini&lt;/a&gt; - mary marchini&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/refack&#34;&gt;@refack&lt;/a&gt; - Refael Ackermann (רפאל פלחי)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sam-github&#34;&gt;@sam-github&lt;/a&gt; - Sam Roberts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Trott&#34;&gt;@Trott&lt;/a&gt; - Rich Trott&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Infrastructure Providers&lt;/h2&gt; &#xA;&lt;p&gt;The Node.js Project is proud to receive contributions from many companies, both in the form of monetary contributions in exchange for membership or in-kind contributions for required resources. The Build Working Group collaborates with the following companies who contribute various kinds of cloud and physical hardware to the Node.js project.&lt;/p&gt; &#xA;&lt;h3&gt;Tier-1 Providers&lt;/h3&gt; &#xA;&lt;p&gt;The Node.js Project&#39;s tier-1 infrastructure providers contribute the largest share of infrastructure to the Node.js project. Without these companies, the project would not be able to provide the quality, speed and availability of test coverage that it does today.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nodejs/build/main/static-assets/tier-1-providers.png&#34; alt=&#34;Tier 1 Infrastructure Providers&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/strong&gt;: a popular cloud hosting service, provides a significant amount of the resources required to run the Node.js project including key CI infrastructure/servers required to host &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs.org&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.rackspace.com/&#34;&gt;Rackspace&lt;/a&gt;&lt;/strong&gt;: a popular managed cloud company, provides significant resources used to power much of the Node.js project&#39;s CI system, including key Windows compilation servers, along with additional services such as &lt;a href=&#34;https://www.mailgun.com/&#34;&gt;Mailgun&lt;/a&gt; for some &lt;a href=&#34;https://github.com/nodejs/email&#34;&gt;nodejs.org and iojs.org email&lt;/a&gt; services.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tier-2 Providers&lt;/h3&gt; &#xA;&lt;p&gt;The Node.js Project&#39;s tier-2 infrastructure providers fill essential gaps in architecture and operating system variations and shoulder some of the burden from the tier-1 providers, contributing to availability and speed in our CI system.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nodejs/build/main/static-assets/tier-2-providers.png&#34; alt=&#34;Tier 2 Infrastructure Providers&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.microsoft.com/&#34;&gt;Microsoft&lt;/a&gt;&lt;/strong&gt;: Provides Windows-related test infrastructure on &lt;a href=&#34;https://azure.microsoft.com&#34;&gt;Azure&lt;/a&gt; for the Node.js CI system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.joyent.com/&#34;&gt;Joyent&lt;/a&gt;&lt;/strong&gt;: A private cloud infrastructure company, provides SmartOS and other test/build resources for the Node.js CI system, resources for backup of our critical infrastructure, redundancy for nodejs.org and or &lt;a href=&#34;http://unencrypted.nodejs.org&#34;&gt;unencrypted.nodejs.org&lt;/a&gt; mirror.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ibm.com/&#34;&gt;IBM&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/cloud&#34;&gt;IBM Cloud&lt;/a&gt; provides hardware for testing and benchmarking for the Node.js project&#39;s CI system.&lt;/li&gt; &#xA;   &lt;li&gt;Via the &lt;a href=&#34;https://osuosl.org/services/powerdev&#34;&gt;Oregon State University Open Source Lab&lt;/a&gt;, provides PPC-based test and build infrastructure.&lt;/li&gt; &#xA;   &lt;li&gt;Via the &lt;a href=&#34;https://developer.ibm.com/linuxone/&#34;&gt;IBM LinuxOne(TM) Community Cloud&lt;/a&gt;, provides linuxOne based test and build infrastructure.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.scaleway.com/&#34;&gt;Scaleway&lt;/a&gt;&lt;/strong&gt;: Scalable cloud platform designed for developers &amp;amp; growing companies, contributes key ARMv7 hardware for test and release builds for the Node.js CI system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;Cloudflare&lt;/a&gt;&lt;/strong&gt;: CDN and internet traffic management provider, are responsible for providing fast and always-available access to &lt;a href=&#34;https://nodejs.org/&#34;&gt;nodejs.org&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.arm.com/&#34;&gt;ARM&lt;/a&gt;&lt;/strong&gt;: Semiconductor intellectual property supplier, have donated ARMv8 / ARM64 hardware used by the Node.js CI system for build and testing Node.js.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.intel.com/&#34;&gt;Intel&lt;/a&gt;&lt;/strong&gt;: &#34;The world leader in silicon innovation,&#34; contributes hardware used for benchmarking in the Node.js project&#39;s CI system to advance and accelerate Node.js performance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.macstadium.com/&#34;&gt;MacStadium&lt;/a&gt;&lt;/strong&gt;: Managed hosting provider for Mac. Provides Mac hardware used for testing in the Node.js project&#39;s CI system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.packet.net/&#34;&gt;Packet&lt;/a&gt;&lt;/strong&gt;: Bare metal cloud for developers. Through their &lt;a href=&#34;https://www.worksonarm.com/&#34;&gt;Works on Arm&lt;/a&gt;, Packet provides ARM64 build infrastructure and additional resources for powering our CI system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community Donations&lt;/h3&gt; &#xA;&lt;p&gt;From time to time, the Node.js Build Working group calls for, and receives donations of hardware in order to expand the breadth of the build and test infrastructure it maintains.&lt;/p&gt; &#xA;&lt;p&gt;The Node.js Project would like to thank the following individuals and companies that have donated miscellaneous hardware:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodesource.com/&#34;&gt;NodeSource&lt;/a&gt; for a Raspberry Pi B, a Raspberry Pi B+, a Raspberry Pi 2 B and an ODROID-XU3&lt;/li&gt; &#xA; &lt;li&gt;Andrew Chilton &lt;a href=&#34;https://github.com/chilts&#34;&gt;@chilts&lt;/a&gt; for a Raspberry Pi B&lt;/li&gt; &#xA; &lt;li&gt;Julian Duque &lt;a href=&#34;https://github.com/julianduque&#34;&gt;@julianduque&lt;/a&gt; for a Beaglebone Black&lt;/li&gt; &#xA; &lt;li&gt;Andi Neck &lt;a href=&#34;https://github.com/andineck&#34;&gt;@andineck&lt;/a&gt; for 2 x Raspberry Pi B+&lt;/li&gt; &#xA; &lt;li&gt;Bryan English &lt;a href=&#34;https://github.com/bengl&#34;&gt;@bengl&lt;/a&gt; for 2 x Raspberry Pi B+&lt;/li&gt; &#xA; &lt;li&gt;Continuation Labs &lt;a href=&#34;https://github.com/continuationlabs&#34;&gt;@continuationlabs&lt;/a&gt; for a Raspberry Pi B+&lt;/li&gt; &#xA; &lt;li&gt;C J Silverio &lt;a href=&#34;https://github.com/ceejbot&#34;&gt;@ceejbot&lt;/a&gt; for a Raspberry Pi B+ and a Raspberry Pi 2 B&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mininodes.com/&#34;&gt;miniNodes&lt;/a&gt; for a Raspberry Pi B+ and a Raspberry Pi 2 B&lt;/li&gt; &#xA; &lt;li&gt;Simeon Vincent &lt;a href=&#34;https://github.com/svincent&#34;&gt;@svincent&lt;/a&gt; for 3 x Raspberry Pi 2 B&lt;/li&gt; &#xA; &lt;li&gt;Joey van Dijk &lt;a href=&#34;https://github.com/joeyvandijk&#34;&gt;@joeyvandijk&lt;/a&gt; and &lt;a href=&#34;http://techtribe.nl&#34;&gt;Techtribe&lt;/a&gt; for 2 x Raspberry Pi 2 B and an ODROID-U3+&lt;/li&gt; &#xA; &lt;li&gt;Matteo Collina &lt;a href=&#34;https://github.com/mcollina&#34;&gt;@mcollina&lt;/a&gt; for a Raspberry Pi 2 B&lt;/li&gt; &#xA; &lt;li&gt;Sam Thompson &lt;a href=&#34;https://github.com/sambthompson&#34;&gt;@sambthompson&lt;/a&gt; for a Raspberry Pi 2 B&lt;/li&gt; &#xA; &lt;li&gt;Louis Center &lt;a href=&#34;https://github.com/louiscntr&#34;&gt;@louiscntr&lt;/a&gt; for a Raspberry Pi 2 B&lt;/li&gt; &#xA; &lt;li&gt;Dav Glass &lt;a href=&#34;https://github.com/davglass/&#34;&gt;@davglass&lt;/a&gt; for 2 x ODROID-XU3, Raspberry Pi 1 B+, Raspberry Pi 3, power, networking and other miscellaneous equipment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tessel.io/&#34;&gt;Tessel&lt;/a&gt; for a Tessel 2&lt;/li&gt; &#xA; &lt;li&gt;KahWee Teng &lt;a href=&#34;https://github.com/kahwee&#34;&gt;@kahwee&lt;/a&gt; for a Raspberry Pi 3&lt;/li&gt; &#xA; &lt;li&gt;Chinmay Pendharkar &lt;a href=&#34;https://github.com/notthetup&#34;&gt;@notthetup&lt;/a&gt; and Sayanee Basu &lt;a href=&#34;https://github.com/sayanee&#34;&gt;@sayanee&lt;/a&gt; for a Raspberry Pi 3&lt;/li&gt; &#xA; &lt;li&gt;Michele Capra &lt;a href=&#34;https://github.com/piccoloaiutante&#34;&gt;@piccoloaiutante&lt;/a&gt; for a Raspberry Pi 3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pivotalagency.com.au/&#34;&gt;Pivotal Agency&lt;/a&gt; for two Raspberry Pi 3&#39;s&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://securogroup.com/&#34;&gt;SecuroGroup&lt;/a&gt; for two Raspberry Pi 1 B+&#39;s and two Raspberry Pi 3&#39;s&lt;/li&gt; &#xA; &lt;li&gt;William Kapke &lt;a href=&#34;https://github.com/williamkapke&#34;&gt;@williamkapke&lt;/a&gt; for three Raspberry Pi 3&#39;s and networking equipment&lt;/li&gt; &#xA; &lt;li&gt;Jonathan Barnett &lt;a href=&#34;https://github.com/indieisaconcept&#34;&gt;@indieisaconcept&lt;/a&gt; for a Raspberry Pi B+&lt;/li&gt; &#xA; &lt;li&gt;James Snell &lt;a href=&#34;https://github.com/jasnell&#34;&gt;@jasnell&lt;/a&gt; for a Raspberry Pi 2&lt;/li&gt; &#xA; &lt;li&gt;Michael Dawson &lt;a href=&#34;https://github.com/mhdawson&#34;&gt;@mhdawson&lt;/a&gt; for a Raspberry Pi 1 B+&lt;/li&gt; &#xA; &lt;li&gt;Chris Lea &lt;a href=&#34;https://github.com/chrislea&#34;&gt;@chrislea&lt;/a&gt; for a Raspberry Pi 1 B+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you would like to donate hardware to the Node.js Project, please reach out to the Build Working Group, via the &lt;a href=&#34;https://openjs-foundation.slack.com/archives/C03BJP63CH0&#34;&gt;#nodejs-build channel on the OpenJS Foundation Slack instance&lt;/a&gt; or contact &lt;a href=&#34;mailto:rod@vagg.org&#34;&gt;Rod Vagg&lt;/a&gt; directly. The Build Working Group reserves the right to choose what hardware is actively used and how it is used, donating hardware does not guarantee its use within the testing infrastructure as there are many other factors that must be considered. Some donated hardware, while not used actively in the CI infrastructure, is used from time to time for R&amp;amp;D purposes by the project.&lt;/p&gt; &#xA;&lt;h2&gt;CI Software&lt;/h2&gt; &#xA;&lt;p&gt;Build and test orchestration is performed by &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A summary of build and test jobs can be found at: &lt;a href=&#34;https://ci.nodejs.org&#34;&gt;https://ci.nodejs.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A listing of connected servers for testing, building and benchmarking can be found at: &lt;a href=&#34;https://ci.nodejs.org/computer/&#34;&gt;https://ci.nodejs.org/computer/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;A summary of the general health of the last 100 jobs can be found at: &lt;a href=&#34;https://ci-health.nodejs.org/#/job-summary&#34;&gt;https://ci-health.nodejs.org/#/job-summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Monitoring with Grafana: &lt;a href=&#34;https://grafana.nodejs.org/&#34;&gt;https://grafana.nodejs.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Build WG will keep build configuration required for a release line for 6 months after the release goes End-of-Life, in case further build or test runs are required. After that the configuration will be removed.&lt;/p&gt;</summary>
  </entry>
</feed>