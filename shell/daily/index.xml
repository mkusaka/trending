<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-14T01:40:03Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>voidstarsec/hw-hacking-lab</title>
    <updated>2023-10-14T01:40:03Z</updated>
    <id>tag:github.com,2023-10-14:/voidstarsec/hw-hacking-lab</id>
    <link href="https://github.com/voidstarsec/hw-hacking-lab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Guide to setting up a hardware hacking lab&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VSS Hardware Hacking Lab Manual&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;One of the most common questions that I get during a &lt;a href=&#34;https://voidstarsec.com/training&#34;&gt;training&lt;/a&gt; is - &#34;What do we need to build up an initial hardware hacking lab.&#34; Of course, the answer to this question can be heavily tailored based on the goals of the team and their targets, but I wanted to attempt documenting what would make for a good starter lab.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this repository is to outline some of the basic equipment needed to begin reverse engineering embedded systems. You can find the entire write-up &lt;a href=&#34;https://github.com/voidstarsec/hw-hacking-lab/raw/main/VSS-2023-Full-Guide.md&#34;&gt;here&lt;/a&gt; or you can look at the individual folders for specific content. These README files will be added to the wiki &lt;a href=&#34;https://github.com/voidstarsec/hw-hacking-lab/wiki&#34;&gt;here&lt;/a&gt; for future reference (and will be updated as people provide PRs with more info!)&lt;/p&gt; &#xA;&lt;p&gt;It should be noted that the following recommendations are my opinion, and &lt;strong&gt;none&lt;/strong&gt; of the links below are affiliate links or anything of the sort. This guide is to help people build out their first lab, not make money.&lt;/p&gt; &#xA;&lt;h2&gt;Blog Post&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Coming Soon!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WIP Sections / TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; RF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions / Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;Is there equipment that you think should be added? Do you have opinions on the equipment listed? Submit a PR with your modifications and we&#39;ll integrate it into the wiki!&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;I wanted to give credit to some folks that helped develop this article. Throughout the development of this guide, I was lucky enough to have some really sharp people offer to help me proofread and provide reccomendations for some of the gear listed in this write up, I&#39;ve included their names/handles below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ElectronicsbyJH&#34;&gt;Jeremy Hong&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Ascii211&#34;&gt;Arsenio Menendez&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/NoobieDog&#34;&gt;Stu Kennedy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/furan&#34;&gt;Ian Hanschen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/therealdreg&#34;&gt;Dreg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaseg&#34;&gt;Jaseg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>fscarmen/ArgoX</title>
    <updated>2023-10-14T01:40:03Z</updated>
    <id>tag:github.com,2023-10-14:/fscarmen/ArgoX</id>
    <link href="https://github.com/fscarmen/ArgoX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Argo Xray for VPS one-click script. 一键脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;【ArgoX】 = Argo + Xray&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#%E6%9B%B4%E6%96%B0%E4%BF%A1%E6%81%AF&#34;&gt;更新信息&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#%E9%A1%B9%E7%9B%AE%E7%89%B9%E7%82%B9&#34;&gt;项目特点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#argox-for-vps-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC&#34;&gt;ArgoX for VPS 运行脚本&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#argo-json-%E7%9A%84%E8%8E%B7%E5%8F%96&#34;&gt;Argo Json 的获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#argo-token-%E7%9A%84%E8%8E%B7%E5%8F%96&#34;&gt;Argo Token 的获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#%E5%90%84%E7%A7%8D%E5%9C%BA%E6%99%AF%E4%B8%8B-xray-outbound-%E5%92%8C-routing-%E6%A8%A1%E6%9D%BF%E7%9A%84%E8%AF%B4%E6%98%8E&#34;&gt;各种场景下 xray outbound 和 routing 模板的说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#%E4%B8%BB%E4%BD%93%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%8F%8A%E8%AF%B4%E6%98%8E&#34;&gt;主体目录文件及说明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/ArgoX/main/README.md#%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E&#34;&gt;免责声明&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;更新信息&lt;/h2&gt; &#xA;&lt;p&gt;2023.10.11 V1.2 1. Add the option of blocking on returning to China; 2. Add a number of quality cdn&#39;s that are collected online; 3. Use Warp IPv6 to visit chatGPT; 1. 增加禁止归国选项; 2. 增加线上收录的若干优质 cdn 3. 使用 Warp IPv6 访问 chatGPT&lt;/p&gt; &#xA;&lt;p&gt;2023.6.23 V1.1 For better network traffic diversion in various scenarios, split &lt;code&gt;config.json&lt;/code&gt; into &lt;code&gt;inbound.json&lt;/code&gt; and &lt;code&gt;outbound.json&lt;/code&gt;; 为了更好的在各种情景下分流，把 &lt;code&gt;config.json&lt;/code&gt; 拆分为 &lt;code&gt;inbound.json&lt;/code&gt; 和 &lt;code&gt;outbound.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;2023.4.13 1.0 正式版&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;历史更新 history（点击即可展开或收起）&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;2023.3.11 beta6 1. Users can easily obtain the JSON of a fixed domain name tunnel through the accompanying function website at &lt;a href=&#34;https://fscarmen.cloudflare.now.cc&#34;&gt;https://fscarmen.cloudflare.now.cc&lt;/a&gt; ; 2. Change the sensitive path names; 3. Add CDN for download; 1. 用户可以通过配套的功能网轻松获取固定域名隧道的 json, &lt;a href=&#34;https://fscarmen.cloudflare.now.cc&#34;&gt;https://fscarmen.cloudflare.now.cc&lt;/a&gt;; 2. 改掉敏感路径名; 3. 下载增加 CDN&lt;/p&gt; &#xA;  &lt;p&gt;2023.3.4 beta5 1. Change listening to all network addresses to only Argo tunnel directed listening for added security; 2. Argo Tunnel supports dualstack; 1. 把对所有的网络地址监听改为只对 Argo 隧道作定向监听，以增加安全性; 2. Argo 隧道支持双栈&lt;/p&gt; &#xA;  &lt;p&gt;2023.3.2 beta4 Change listening to all network addresses to only Argo tunnel directed listening for added security; 把对所有的网络地址监听改为只对 Argo 隧道作定向监听，以增加安全性&lt;/p&gt; &#xA;  &lt;p&gt;2023.2.24 beta3 1. Simplify the operation of changing argo tunnel; 2. Use wget global instead of cURL; 1. 简化转换 Argo 隧道的方法; 2. 全局用 wget 替代 cURL&lt;/p&gt; &#xA;  &lt;p&gt;2023.2.17 beta2 1. extremely fast installation mode, [-f] followed by a parameter file path; 2. Support for switching between the three argo tunnels; 3. Synchronise Argo and Xray to the latest version at any time; 4. Optimize the code to achieve speedup. 1.极速安装模式，[-f] 后带参数文件路径；2.安装后，支持三种argo隧道随意切换；3.随时同步Argo 和 Xray到最新版本；4.优化代码，达到提速的目的。&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;2023.2.16 beta1 Argo + Xray for vps&lt;/p&gt; &#xA;&lt;h2&gt;项目特点:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在 VPS 中部署 Xray，采用的方案为 Argo + Xray + WebSocket + TLS；&lt;/li&gt; &#xA; &lt;li&gt;正常用 CF 是访问机房回源，Argo 则是每次创建两个反向链接到两个就近机房，然后回源是通过源服务器就近机房回源，其中用户访问机房到源服务器连接的就近机房之间是CF自己的黑盒线路；&lt;/li&gt; &#xA; &lt;li&gt;使用 CloudFlare 的 Argo 隧道，使用TLS加密通信，可以将应用程序流量安全地传输到Cloudflare网络，提高了应用程序的安全性和可靠性。此外，Argo Tunnel也可以防止IP泄露和DDoS攻击等网络威胁；&lt;/li&gt; &#xA; &lt;li&gt;Argo 是内网穿透的隧道，既 Xray 的 inbound 不对外暴露端口增加安全性，也不用做伪装网浪费资源，还支持 Cloudflare 的全部端口，不会死守443被封，同时服务端输出 Argo Ws 数据流，大大简化数据处理流程，提高响应，tls 由 cf 提供，避免多重 tls；&lt;/li&gt; &#xA; &lt;li&gt;Argo 隧道既支持临时隧道，又支持通过 Token 或者 cloudflared Cli 方式申请的固定域名，直接优选 + 隧道，不需要申请域名证书，并可以在安装后随时转换；&lt;/li&gt; &#xA; &lt;li&gt;回落分流，同时支持 Xray 4 种主流协议: vless / vmess / trojan / shadowsocks + WSS (ws + tls)；&lt;/li&gt; &#xA; &lt;li&gt;内置 warp 链式代理解锁 chatGPT；&lt;/li&gt; &#xA; &lt;li&gt;节点信息以 V2rayN / Clash / 小火箭 链接方式输出；&lt;/li&gt; &#xA; &lt;li&gt;极速安装，即可交互式安装，也可像 docker compose 一样的非交互式安装，提前把所有的参数放到一个配置文件，全程不到5秒。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ArgoX for VPS 运行脚本:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(wget -qO- https://raw.githubusercontent.com/fscarmen/argox/main/argox.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option 参数&lt;/th&gt; &#xA;   &lt;th&gt;Remark 备注&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-c&lt;/td&gt; &#xA;   &lt;td&gt;Chinese 中文&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-e&lt;/td&gt; &#xA;   &lt;td&gt;English 英文&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-f&lt;/td&gt; &#xA;   &lt;td&gt;Variable file，refer to REPO file &#34;config&#34; 参数文件，可参数项目的文件 config&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-u&lt;/td&gt; &#xA;   &lt;td&gt;Uninstall 卸载&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;Export Nodes list 显示节点信息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v&lt;/td&gt; &#xA;   &lt;td&gt;Sync Argo Xray to the newest 同步 Argo Xray 到最新版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-g&lt;/td&gt; &#xA;   &lt;td&gt;Enable or disalbe Warp IPv4 for returning to China 切换 Warp IPv4 回国功能的开启和关闭&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Argo Json 的获取&lt;/h2&gt; &#xA;&lt;p&gt;用户可以通过 Cloudflare Json 生成网轻松获取: &lt;a href=&#34;https://fscarmen.cloudflare.now.cc&#34;&gt;https://fscarmen.cloudflare.now.cc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/62703343/224388718-6adf22d0-01d3-46a0-8063-bc0a2210795f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如想手动，可以参考，以 Debian 为例，需要用到的命令，&lt;a href=&#34;https://zhengweidong.com/try-cloudflare-argo-tunnel&#34;&gt;Deron Cheng - CloudFlare Argo Tunnel 试用&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Argo Token 的获取&lt;/h2&gt; &#xA;&lt;p&gt;详细教程: &lt;a href=&#34;https://imnks.com/5984.html&#34;&gt;群晖套件：Cloudflare Tunnel 内网穿透中文教程 支持DSM6、7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1409&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/218253461-c079cddd-3f4c-4278-a109-95229f1eb299.png&#34;&gt; &#xA;&lt;img width=&#34;1619&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/218253838-aa73b63d-1e8a-430e-b601-0b88730d03b0.png&#34;&gt; &#xA;&lt;img width=&#34;1155&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/218253971-60f11bbf-9de9-4082-9e46-12cd2aad79a1.png&#34;&gt; &#xA;&lt;h2&gt;各种场景下 xray outbound 和 routing 模板的说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;域名分类中包含的各具体域名: &lt;a href=&#34;https://github.com/v2fly/domain-list-community/raw/master/data&#34;&gt;https://github.com/v2fly/domain-list-community/blob/master/data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Routing 路由说明: &lt;a href=&#34;https://www.v2fly.org/config/routing.html&#34;&gt;https://www.v2fly.org/config/routing.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;修改 &lt;code&gt;/etc/argox/outbound.json&lt;/code&gt;，注意: 请先备份好原 &lt;code&gt;outbound.json&lt;/code&gt; 文件，修改的 json 做到 &lt;a href=&#34;https://www.json.cn/&#34;&gt;https://www.json.cn/&lt;/a&gt; 查看格式&lt;/li&gt; &#xA; &lt;li&gt;修改后运行 &lt;code&gt;systemctl restart xray; sleep 1; systemctl is-active xray&lt;/code&gt; ，反显 active 即生效，如为 failed 即为失败，请检查配置文件格式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;模板示例&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chatGPT 使用链式 warp 代理，不需要本地安装 warp，其余流量走 vps 默认的网络出口&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/fscarmen/warp#%E9%80%9A%E8%BF%87-warp-%E8%A7%A3%E9%94%81-chatgpt-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;warp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;指定流量走本机指定的网络接口，对于双栈能区分 IPv4 或 IPv6，其余流量走 vps 默认的网络出口&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/fscarmen/warp#%E6%8C%87%E5%AE%9A%E7%BD%91%E7%AB%99%E5%88%86%E6%B5%81%E5%88%B0-interface-%E7%9A%84-xray-%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF%E9%80%82%E7%94%A8%E4%BA%8E-warp-client-warp-%E5%92%8C-warp-warp-go-%E9%9D%9E%E5%85%A8%E5%B1%80&#34;&gt;interface&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;指定流量走本机指定的socks5代理，对于双栈能区分 IPv4 或 IPv6，其余流量走 vps 默认的网络出口&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/fscarmen/warp#%E6%8C%87%E5%AE%9A%E7%BD%91%E7%AB%99%E5%88%86%E6%B5%81%E5%88%B0-socks5-%E7%9A%84-xray-%E9%85%8D%E7%BD%AE%E6%A8%A1%E6%9D%BF-%E9%80%82%E7%94%A8%E4%BA%8E-warp-client-proxy-%E5%92%8C-wireproxy&#34;&gt;socks5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;主体目录文件及说明&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;/etc/argox                    # 项目主体目录&#xA;├── cloudflared               # argo tunnel 主程序&#xA;├── geoip.dat                 # 用于根据 IP 地址来进行地理位置策略或访问控制&#xA;├── geosite.dat               # 用于基于域名或网站分类来进行访问控制、内容过滤或安全策略&#xA;├── inbound.json              # vless / vmess / ss / trojan + WSS 入站配置文件&#xA;├── language                  # 存放脚本语言文件，E 为英文，C 为中文&#xA;├── list                      # 节点信息列表&#xA;├── outbound.json             # 出站和路由配置文件，chatGPT 使用 warp ipv6 链式代理出站&#xA;└── xray                      # xray 主程序&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;免责声明:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序仅供学习了解, 非盈利目的，请于下载后 24 小时内删除, 不得用作任何商业用途, 文字、数据及图片均有所属版权, 如转载须注明来源。&lt;/li&gt; &#xA; &lt;li&gt;使用本程序必循遵守部署免责声明。使用本程序必循遵守部署服务器所在地、所在国家和用户所在国家的法律法规, 程序作者不对使用者任何不当行为负责。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SpotX-Official/SpotX-Bash</title>
    <updated>2023-10-14T01:40:03Z</updated>
    <id>tag:github.com,2023-10-14:/SpotX-Official/SpotX-Bash</id>
    <link href="https://github.com/SpotX-Official/SpotX-Bash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SpotX, but bash... for Linux and Mac&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jetfir3/SpotX-Bash&#34;&gt;&lt;img src=&#34;https://spotx-official.github.io/images/logos/logo_sxb.png&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://github.com/jetfir3/SpotX-Bash&#34;&gt; &lt;/a&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jetfir3/SpotX-Bash&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://github.com/amd64fox/SpotX&#34;&gt;&lt;img src=&#34;https://spotx-official.github.io/images/shields/spotx-win_sxb.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/SpotxCommunity&#34;&gt;&lt;img src=&#34;https://spotx-official.github.io/images/shields/SpotX_Community.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;center&gt; &#xA; &lt;h4 align=&#34;center&#34;&gt;Adblock for the Spotify desktop client on Linux &amp;amp; macOS&lt;/h4&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Latest supported version:&lt;/strong&gt; 1.2.22.982.g794acc0a &lt;/p&gt; &#xA;&lt;/center&gt; &#xA;&lt;h3&gt;Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Block all audio, banner &amp;amp; video ads&lt;/li&gt; &#xA; &lt;li&gt;Block logging (Sentry, etc)&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://github.com/SpotX-Official/SpotX-Bash/wiki/SpotX%E2%80%90Bash-FAQ#what-is-developer-mode&#34;&gt;developer mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://github.com/SpotX-Official/SpotX/discussions/50&#34;&gt;experimental features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hide audiobooks, episodes &amp;amp; podcasts on home screen&lt;/li&gt; &#xA; &lt;li&gt;Block automatic updates (macOS)&lt;/li&gt; &#xA; &lt;li&gt;Install supported desktop client versions (macOS)&lt;/li&gt; &#xA; &lt;li&gt;Install latest stable/testing desktop client on APT-based distros (Linux)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the following command in terminal:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://spotx-official.github.io/run.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By default, all supported experimental features are enabled&lt;/li&gt; &#xA; &lt;li&gt;View additional arguments and examples in the &lt;code&gt;Options&lt;/code&gt; section below&lt;/li&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://github.com/SpotX-Official/SpotX-Bash/wiki/SpotX%E2%80%90Bash-FAQ&#34;&gt;FAQ&lt;/a&gt; for more information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;Options:&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Option&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-B&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;block Spotify auto-updates (macOS)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;clear Spotify app cache&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;enable &lt;a href=&#34;https://github.com/SpotX-Official/SpotX-Bash/wiki/SpotX%E2%80%90Bash-FAQ#what-is-developer-mode&#34;&gt;developer mode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;exclude all experimental features&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;force SpotX-Bash to run&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;hide non-music on home screen&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;--help&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;print options&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;enable interactive mode&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;--installdeb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;install latest client deb pkg on APT-based distros (linux)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;--installmac&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;install latest supported client (macOS)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;no lyrics background color&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;use &lt;a href=&#34;https://github.com/SpotX-Official/SpotX-Bash/wiki/SpotX%E2%80%90Bash-FAQ#what-is-the-old-and-new-ui&#34;&gt;old home screen UI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;paid premium-tier subscriber&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-P [path]&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;set path to Spotify&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;skip &lt;a href=&#34;https://github.com/SpotX-Official/SpotX-Bash/discussions/3&#34;&gt;codesigning&lt;/a&gt; (macOS)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;--stable&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;use with &#39;--installdeb&#39; for stable branch (linux)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;--uninstall&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;uninstall SpotX-Bash&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;print SpotX-Bash version&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;-V [version]&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;install client version (macOS)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Run SpotX-Bash, clear app cache, enable dev mode, hide non-music categories&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://spotx-official.github.io/run.sh) -cdh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Run SpotX-Bash, enable interactive mode, set custom path to Spotify&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://spotx-official.github.io/run.sh) -i -P $HOME/Downloads/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Run SpotX-Bash, set paid premium-tier subscriber&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://spotx-official.github.io/run.sh) -p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Run SpotX-Bash, install latest testing branch client version (Linux)&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://spotx-official.github.io/run.sh) --installdeb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Run SpotX-Bash, block auto-updates, install latest supported client version (macOS)&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://spotx-official.github.io/run.sh) -B --installmac&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Thanks:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amd64fox/&#34;&gt;amd64fox&lt;/a&gt; of &lt;a href=&#34;https://github.com/SpotX-Official/SpotX&#34;&gt;SpotX&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>