<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:52:29Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cdarlint/winutils</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/cdarlint/winutils</id>
    <link href="https://github.com/cdarlint/winutils" rel="alternate"></link>
    <summary type="html">&lt;p&gt;winutils.exe hadoop.dll and hdfs.dll binaries for hadoop windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;winutils&lt;/h1&gt; &#xA;&lt;p&gt;winutils.exe hadoop.dll and hdfs.dll binaries for hadoop on windows&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve been using &lt;a href=&#34;https://github.com/steveloughran/winutils&#34;&gt;https://github.com/steveloughran/winutils&lt;/a&gt; but it stops to update So I tried to compile myself and push binaries here for you all&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/1b4cbabfd899&#34;&gt;compile steps (in Chinese)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;how to use&lt;/h2&gt; &#xA;&lt;p&gt;place a copy of hadoop-ver folder on your local drive set environment vars:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HADOOP_HOME=&amp;lt;your local hadoop-ver folder&amp;gt;&#xA;PATH=%PATH%;%HADOOP_HOME%\bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then you&#39;ll pass the &#34;no native library&#34; and &#34;access0&#34; error&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>antonbabenko/pre-commit-terraform</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/antonbabenko/pre-commit-terraform</id>
    <link href="https://github.com/antonbabenko/pre-commit-terraform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pre-commit git hooks to take care of Terraform configurations 🇺🇦&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Collection of git hooks for Terraform to be used with &lt;a href=&#34;http://pre-commit.com/&#34;&gt;pre-commit framework&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/antonbabenko/pre-commit-terraform.svg?sanitize=true&#34; alt=&#34;Github tag&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/maintenance/yes/2021.svg?sanitize=true&#34; alt=&#34;maintenance status&#34;&gt; &lt;a href=&#34;https://www.codetriage.com/antonbabenko/pre-commit-terraform&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/antonbabenko/pre-commit-terraform/badges/users.svg?sanitize=true&#34; alt=&#34;Help Contribute to Open Source&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vshymanskyy/StandWithUkraine/raw/main/docs/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg?sanitize=true&#34; alt=&#34;SWUbanner&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute? Check &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues?q=label%3A%22good+first+issue%22+is%3Aopen+sort%3Aupdated-desc&#34;&gt;open issues&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/.github/CONTRIBUTING.md&#34;&gt;contributing notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.env0.com/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/env0.png&#34; alt=&#34;env0&#34; width=&#34;180&#34; height=&#34;44&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.env0.com/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;Automated provisioning of Terraform workflows and Infrastructure as Code.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.infracost.io/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/infracost.png&#34; alt=&#34;infracost&#34; width=&#34;200&#34; height=&#34;38&#34;&gt; &#xA; &lt;!-- markdownlint-enable no-inline-html --&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.infracost.io/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;Cloud cost estimates for Terraform.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;pre-commit-terraform&lt;/code&gt; already or want to support its development and &lt;a href=&#34;https://github.com/antonbabenko/terraform-aws-devops&#34;&gt;many other open-source projects&lt;/a&gt;, please become a &lt;a href=&#34;https://github.com/sponsors/antonbabenko&#34;&gt;GitHub Sponsor&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#table-of-content&#34;&gt;Table of content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#how-to-install&#34;&gt;How to install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&#34;&gt;1. Install dependencies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#2-install-the-pre-commit-hook-globally&#34;&gt;2. Install the pre-commit hook globally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#3-add-configs-and-hooks&#34;&gt;3. Add configs and hooks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&#34;&gt;4. Run&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#available-hooks&#34;&gt;Available Hooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#hooks-usage-notes-and-examples&#34;&gt;Hooks usage notes and examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-usage-of-environment-variables-in---args&#34;&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&#34;&gt;checkov (deprecated) and terraform_checkov&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&#34;&gt;infracost_breakdown&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;terraform_docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&#34;&gt;terraform_docs_replace (deprecated)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&#34;&gt;terraform_fmt&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;terraform_providers_lock&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&#34;&gt;terraform_tflint&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec&#34;&gt;terraform_tfsec&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&#34;&gt;terraform_wrapper_module_for_each&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&#34;&gt;terrascan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&#34;&gt;tfupdate&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#license&#34;&gt;License&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#additional-information-for-users-from-russia-and-belarus&#34;&gt;Additional information for users from Russia and Belarus&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install dependencies&lt;/h3&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;&lt;code&gt;pre-commit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;checkov&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terraform-docs/terraform-docs&#34;&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_docs&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs/getting-started/install/&#34;&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terragrunt_validate&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tenable/terrascan&#34;&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terrascan&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;&lt;code&gt;TFLint&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tflint&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liamg/tfsec&#34;&gt;&lt;code&gt;TFSec&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tfsec&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/infracost/infracost&#34;&gt;&lt;code&gt;infracost&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minamijoyo/tfupdate&#34;&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;tfupdate&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minamijoyo/hcledit&#34;&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;strong&gt;Pull docker image with all hooks&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker pull ghcr.io/antonbabenko/pre-commit-terraform:$TAG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;All available tags &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Build from scratch&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;When &lt;code&gt;--build-arg&lt;/code&gt; is not specified, the latest version of &lt;code&gt;pre-commit&lt;/code&gt; and &lt;code&gt;terraform&lt;/code&gt; will be only installed.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:antonbabenko/pre-commit-terraform.git&#xA;cd pre-commit-terraform&#xA;# Install the latest versions of all the tools&#xA;docker build -t pre-commit-terraform --build-arg INSTALL_ALL=true .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To install a specific version of individual tools, define it using &lt;code&gt;--build-arg&lt;/code&gt; arguments or set it to &lt;code&gt;latest&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t pre-commit-terraform \&#xA;    --build-arg PRE_COMMIT_VERSION=latest \&#xA;    --build-arg TERRAFORM_VERSION=latest \&#xA;    --build-arg CHECKOV_VERSION=2.0.405 \&#xA;    --build-arg INFRACOST_VERSION=latest \&#xA;    --build-arg TERRAFORM_DOCS_VERSION=0.15.0 \&#xA;    --build-arg TERRAGRUNT_VERSION=latest \&#xA;    --build-arg TERRASCAN_VERSION=1.10.0 \&#xA;    --build-arg TFLINT_VERSION=0.31.0 \&#xA;    --build-arg TFSEC_VERSION=latest \&#xA;    --build-arg TFUPDATE_VERSION=latest \&#xA;    --build-arg HCLEDIT_VERSION=latest \&#xA;    .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Set &lt;code&gt;-e PRE_COMMIT_COLOR=never&lt;/code&gt; to disable the color output in &lt;code&gt;pre-commit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install pre-commit terraform-docs tflint tfsec checkov terrascan infracost tfupdate minamijoyo/hcledit/hcledit jq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Ubuntu 18.04&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install -y unzip software-properties-common&#xA;sudo add-apt-repository ppa:deadsnakes/ppa&#xA;sudo apt install -y python3.7 python3-pip&#xA;python3 -m pip install --upgrade pip&#xA;pip3 install --no-cache-dir pre-commit&#xA;python3.7 -m pip install -U checkov&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.zip&#34;)&#34; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &#34;https://.+?tfsec-linux-amd64&#34;)&#34; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &#34;https://.+?_Linux_x86_64.tar.gz&#34;)&#34; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init&#xA;sudo apt install -y jq &amp;amp;&amp;amp; \&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost register&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Ubuntu 20.04&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install -y unzip software-properties-common python3 python3-pip&#xA;python3 -m pip install --upgrade pip&#xA;pip3 install --no-cache-dir pre-commit&#xA;pip3 install --no-cache-dir checkov&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz terraform-docs &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &#34;https://.+?_Linux_x86_64.tar.gz&#34;)&#34; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.zip&#34;)&#34; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &#34;https://.+?tfsec-linux-amd64&#34;)&#34; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/&#xA;sudo apt install -y jq &amp;amp;&amp;amp; \&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost register&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- markdownlint-enable no-inline-html --&gt; &#xA;&lt;h3&gt;2. Install the pre-commit hook globally&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: not needed if you use the Docker image&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;DIR=~/.git-template&#xA;git config --global init.templateDir ${DIR}&#xA;pre-commit init-templatedir -t pre-commit ${DIR}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Add configs and hooks&lt;/h3&gt; &#xA;&lt;p&gt;Step into the repository you want to have the pre-commit hooks installed and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init&#xA;cat &amp;lt;&amp;lt;EOF &amp;gt; .pre-commit-config.yaml&#xA;repos:&#xA;- repo: https://github.com/antonbabenko/pre-commit-terraform&#xA;  rev: &amp;lt;VERSION&amp;gt; # Get the latest from: https://github.com/antonbabenko/pre-commit-terraform/releases&#xA;  hooks:&#xA;    - id: terraform_fmt&#xA;    - id: terraform_docs&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Run&lt;/h3&gt; &#xA;&lt;p&gt;Execute this command to run &lt;code&gt;pre-commit&lt;/code&gt; on all files in the repository (not only changed files):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, using Docker (&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&#34;&gt;available tags&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute this command to list the versions of the tools in Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Hooks&lt;/h2&gt; &#xA;&lt;p&gt;There are several &lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt; hooks to keep Terraform configurations (both &lt;code&gt;*.tf&lt;/code&gt; and &lt;code&gt;*.tfvars&lt;/code&gt;) and Terragrunt configurations (&lt;code&gt;*.hcl&lt;/code&gt;) in a good shape:&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hook name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Dependencies&lt;br&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&#34;&gt;Install instructions here&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt; and &lt;code&gt;terraform_checkov&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;checkov&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;br&gt;Ubuntu deps: &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;python3-pip&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check how much your infra costs with &lt;a href=&#34;https://github.com/infracost/infracost&#34;&gt;infracost&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;infracost&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;, &lt;a href=&#34;https://www.infracost.io/docs/#2-get-api-key&#34;&gt;Infracost API key&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt;. Recommended. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;code&gt;terraform-docs&lt;/code&gt; and pipes the output directly to README.md. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, see &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/248&#34;&gt;#248&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs_without_&lt;/code&gt;&lt;br&gt;&lt;code&gt;aggregate_type_defaults&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt; without aggregate type defaults. Hook notes same as for &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;terraform_docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reformat all Terraform configuration files to a canonical format. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Updates provider signatures in &lt;a href=&#34;https://www.terraform.io/docs/cli/commands/providers/lock.html&#34;&gt;dependency lock files&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_tflint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all Terraform configuration files with &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;TFLint&lt;/a&gt;. &lt;a href=&#34;https://github.com/terraform-linters/tflint/tree/master/docs/rules#rules&#34;&gt;Available TFLint rules&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&#34;&gt;Hook notes&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tflint&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aquasecurity/tfsec&#34;&gt;TFSec&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfsec&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all Terraform configuration files. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reformat all &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;) to a canonical format.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_validate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generates Terraform wrappers with &lt;code&gt;for_each&lt;/code&gt; in module. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tenable/terrascan&#34;&gt;terrascan&lt;/a&gt; Detect compliance and security violations. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/minamijoyo/tfupdate&#34;&gt;tfupdate&lt;/a&gt; Update version constraints of Terraform core, providers, and modules. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable no-inline-html --&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/raw/master/.pre-commit-hooks.yaml&#34;&gt;source file&lt;/a&gt; to know arguments used for each hook.&lt;/p&gt; &#xA;&lt;h2&gt;Hooks usage notes and examples&lt;/h2&gt; &#xA;&lt;h3&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can use environment variables for the &lt;code&gt;--args&lt;/code&gt; section.&lt;br&gt; Note: You &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;${ENV_VAR}&lt;/code&gt; definition, &lt;code&gt;$ENV_VAR&lt;/code&gt; will not expand.&lt;/p&gt; &#xA;&lt;p&gt;Config example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;  - --args=--config=${CONFIG_NAME}.${CONFIG_EXT}&#xA;  - --args=--module&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If for config above set up &lt;code&gt;export CONFIG_NAME=.tflint; export CONFIG_EXT=hcl&lt;/code&gt; before &lt;code&gt;pre-commit run&lt;/code&gt;, args will be expanded to &lt;code&gt;--config=.tflint.hcl --module&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;checkov (deprecated) and terraform_checkov&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;checkov&lt;/code&gt; hook is deprecated, please use &lt;code&gt;terraform_checkov&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;terraform_checkov&lt;/code&gt; runs recursively during &lt;code&gt;-d .&lt;/code&gt; usage. That means, for example, if you change &lt;code&gt;.tf&lt;/code&gt; file in repo root, all existing &lt;code&gt;.tf&lt;/code&gt; files in repo will be checked.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You can specify custom arguments. E.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_checkov&#xA;  args:&#xA;    - --args=--quiet&#xA;    - --args=--skip-check CKV2_AWS_8&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Check all available arguments &lt;a href=&#34;https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For deprecated hook you need to specify each argument separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: checkov&#xA;  args: [&#xA;    &#34;-d&#34;, &#34;.&#34;,&#xA;    &#34;--skip-check&#34;, &#34;CKV2_AWS_8&#34;,&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;infracost_breakdown&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; executes &lt;code&gt;infracost breakdown&lt;/code&gt; command and compare the estimated costs with those specified in the hook-config. &lt;code&gt;infracost breakdown&lt;/code&gt; normally runs &lt;code&gt;terraform init&lt;/code&gt;, &lt;code&gt;terraform plan&lt;/code&gt;, and calls Infracost Cloud Pricing API (remote version or &lt;a href=&#34;https://www.infracost.io/docs/cloud_pricing_api/self_hosted&#34;&gt;self-hosted version&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Unlike most other hooks, this hook triggers once if there are any changed files in the repository.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; supports &lt;a href=&#34;https://www.infracost.io/docs/#useful-options&#34;&gt;all &lt;code&gt;infracost breakdown&lt;/code&gt; arguments&lt;/a&gt;. The following example only shows costs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;  verbose: true # Always show costs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Output&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Running in &#34;env/dev&#34;&#xA;&#xA;Summary: {&#xA;&#34;unsupportedResourceCounts&#34;: {&#xA;    &#34;aws_sns_topic_subscription&#34;: 1&#xA;  }&#xA;}&#xA;&#xA;Total Monthly Cost:        86.83 USD&#xA;Total Monthly Cost (diff): 86.83 USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note that spaces are not allowed in &lt;code&gt;--args&lt;/code&gt;, so you need to split it, like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;    - --args=--terraform-var-file=&#34;terraform.tfvars&#34;&#xA;    - --args=--terraform-var-file=&#34;../terraform.tfvars&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optionally) Define &lt;code&gt;cost constrains&lt;/code&gt; the hook should evaluate successfully in order to pass:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 0.1&#39;&#xA;    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 1&#39;&#xA;    - --hook-config=&#39;.projects[].diff.totalMonthlyCost|tonumber != 10000&#39;&#xA;    - --hook-config=&#39;.currency == &#34;USD&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Output&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Running in &#34;env/dev&#34;&#xA;Passed: .totalHourlyCost|tonumber &amp;gt; 0.1         0.11894520547945205 &amp;gt;  0.1&#xA;Failed: .totalHourlyCost|tonumber &amp;gt; 1           0.11894520547945205 &amp;gt;  1&#xA;Passed: .projects[].diff.totalMonthlyCost|tonumber !=10000              86.83 != 10000&#xA;Passed: .currency == &#34;USD&#34;              &#34;USD&#34; == &#34;USD&#34;&#xA;&#xA;Summary: {&#xA;&#34;unsupportedResourceCounts&#34;: {&#xA;    &#34;aws_sns_topic_subscription&#34;: 1&#xA;  }&#xA;}&#xA;&#xA;Total Monthly Cost:        86.83 USD&#xA;Total Monthly Cost (diff): 86.83 USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only one path per one hook (&lt;code&gt;- id: infracost_breakdown&lt;/code&gt;) is allowed.&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;verbose: true&lt;/code&gt; to see cost even when the checks are passed.&lt;/li&gt; &#xA;   &lt;li&gt;Hook uses &lt;code&gt;jq&lt;/code&gt; to process the cost estimation report returned by &lt;code&gt;infracost breakdown&lt;/code&gt; command&lt;/li&gt; &#xA;   &lt;li&gt;Expressions defined as &lt;code&gt;--hook-config&lt;/code&gt; argument should be in a jq-compatible format (e.g. &lt;code&gt;.totalHourlyCost&lt;/code&gt;, &lt;code&gt;.totalMonthlyCost&lt;/code&gt;) To study json output produced by &lt;code&gt;infracost&lt;/code&gt;, run the command &lt;code&gt;infracost breakdown -p PATH_TO_TF_DIR --format json&lt;/code&gt;, and explore it on &lt;a href=&#34;https://jqplay.org/&#34;&gt;jqplay.org&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Supported comparison operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Most useful paths and checks: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;.totalHourlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalHourlyCost&lt;/code&gt;) - show total hourly infra cost&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.totalMonthlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalMonthlyCost&lt;/code&gt;) - show total monthly infra cost&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.projects[].diff.totalHourlyCost&lt;/code&gt; - show the difference in hourly cost for the existing infra and tf plan&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.projects[].diff.totalMonthlyCost&lt;/code&gt; - show the difference in monthly cost for the existing infra and tf plan&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.diffTotalHourlyCost&lt;/code&gt; (for Infracost version 0.9.12 or newer) or &lt;code&gt;[.projects[].diff.totalMonthlyCost | select (.!=null) | tonumber] | add&lt;/code&gt; (for Infracost older than 0.9.12)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To disable hook color output, set &lt;code&gt;PRE_COMMIT_COLOR=never&lt;/code&gt; env var.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker usage&lt;/strong&gt;. In &lt;code&gt;docker build&lt;/code&gt; or &lt;code&gt;docker run&lt;/code&gt; command:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You need to provide &lt;a href=&#34;https://www.infracost.io/docs/integrations/environment_variables/#infracost_api_key&#34;&gt;Infracost API key&lt;/a&gt; via &lt;code&gt;-e INFRACOST_API_KEY=&amp;lt;your token&amp;gt;&lt;/code&gt;. By default, it is saved in &lt;code&gt;~/.config/infracost/credentials.yml&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;-e INFRACOST_SKIP_UPDATE_CHECK=true&lt;/code&gt; to &lt;a href=&#34;https://www.infracost.io/docs/integrations/environment_variables/#infracost_skip_update_check&#34;&gt;skip the Infracost update check&lt;/a&gt; if you use this hook as part of your CI/CD pipeline.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_docs&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt; will insert/update documentation generated by &lt;a href=&#34;https://github.com/terraform-docs/terraform-docs&#34;&gt;terraform-docs&lt;/a&gt; framed by markers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;&amp;lt;!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --&amp;gt;&#xA;&#xA;&amp;lt;!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if they are present in &lt;code&gt;README.md&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is possible to pass additional arguments to shell scripts when using &lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is possible to automatically:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;create a documentation file&lt;/li&gt; &#xA;   &lt;li&gt;extend existing documentation file by appending markers to the end of the file (see item 1 above)&lt;/li&gt; &#xA;   &lt;li&gt;use different filename for the documentation (default is &lt;code&gt;README.md&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - --hook-config=--path-to-file=README.md        # Valid UNIX path. I.e. ../TFDOC.md or docs/README.md etc.&#xA;    - --hook-config=--add-to-existing-file=true     # Boolean. true or false&#xA;    - --hook-config=--create-file-if-not-exist=true # Boolean. true or false&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can provide &lt;a href=&#34;https://terraform-docs.io/user-guide/configuration/&#34;&gt;any configuration available in &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; as an argument to &lt;code&gt;terraform_doc&lt;/code&gt; hook, for example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - --args=--config=.terraform-docs.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: Avoid use &lt;code&gt;recursive.enabled: true&lt;/code&gt; in config file, that can cause unexpected behavior.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you need some exotic settings, it can be done too. I.e. this one generates HCL files:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - tfvars hcl --output-file terraform.tfvars.model .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_docs_replace (deprecated)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. Will be merged in &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/248&#34;&gt;#248&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt; replaces the entire README.md rather than doing string replacement between markers. Put your additional documentation at the top of your &lt;code&gt;main.tf&lt;/code&gt; for it to be pulled in. The optional &lt;code&gt;--dest&lt;/code&gt; argument lets you change the filename that gets created/modified.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs_replace&#xA;  args:&#xA;    - --sort-by-required&#xA;    - --dest=TEST.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;terraform_fmt&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_fmt&lt;/code&gt; supports custom arguments so you can pass &lt;a href=&#34;https://www.terraform.io/docs/cli/commands/fmt.html#usage&#34;&gt;supported flags&lt;/a&gt;. Eg:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_fmt&#xA;   args:&#xA;     - --args=-no-color&#xA;     - --args=-diff&#xA;     - --args=-write=false&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_providers_lock&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The hook requires Terraform 0.14 or later.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The hook invokes two operations that can be really slow:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;terraform init&lt;/code&gt; (in case &lt;code&gt;.terraform&lt;/code&gt; directory is not initialised)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;terraform providers lock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Both operations require downloading data from remote Terraform registries, and not all of that downloaded data or meta-data is currently being cached by Terraform.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; supports custom arguments:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_providers_lock&#xA;   args:&#xA;      - --args=-platform=windows_amd64&#xA;      - --args=-platform=darwin_amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&#xA;function rm_terraform {&#xA;    find . \( -iname &#34;.terraform*&#34; ! -iname &#34;.terraform-docs*&#34; \) -print0 | xargs -0 rm -r&#xA;}&#xA;&#34; &amp;gt;&amp;gt;~/.bashrc&#xA;&#xA;# Reload shell and use `rm_terraform` command in the repo root&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; hook will try to reinitialize directories before running the &lt;code&gt;terraform providers lock&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_tflint&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tflint&lt;/code&gt; supports custom arguments so you can enable module inspection, deep check mode, etc.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;    - --args=--deep&#xA;    - --args=--enable-rule=terraform_documented_variables&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tflint&lt;/code&gt; in all of them and share a single config file, it is impractical to hard-code the path to the &lt;code&gt;.tflint.hcl&lt;/code&gt; file. The solution is to use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder which will be replaced by &lt;code&gt;terraform_tflint&lt;/code&gt; hooks with Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;    - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_tfsec&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&#34;https://pre-commit.com/#config-files&#34;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  files: ^prd-infra/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;tfsec&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&#34;https://github.com/aquasecurity/tfsec#ignoring-warnings&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;resource &#34;aws_security_group_rule&#34; &#34;my-rule&#34; {&#xA;    type = &#34;ingress&#34;&#xA;    cidr_blocks = [&#34;0.0.0.0/0&#34;] #tfsec:ignore:AWS006&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--no-color&lt;/code&gt; or &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;-e&lt;/code&gt; (exclude checks) flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_tfsec&#xA;   args:&#xA;     - &amp;gt;&#xA;       --args=--format json&#xA;       --no-color&#xA;       -e aws-s3-enable-bucket-logging,aws-s3-specify-public-access-block&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tfsec&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_tfsec&lt;/code&gt; hooks with Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  args:&#xA;    - --args=--config-file=__GIT_WORKING_DIR__/.tfsec.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Otherwise, will be used files that located in sub-folders:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  args:&#xA;    - --args=--config-file=.tfsec.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_validate&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; supports custom arguments so you can pass supported &lt;code&gt;-no-color&lt;/code&gt; or &lt;code&gt;-json&lt;/code&gt; flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_validate&#xA;   args:&#xA;     - --args=-json&#xA;     - --args=-no-color&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; also supports custom environment variables passed to the pre-commit runtime:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --envs=AWS_DEFAULT_REGION=&#34;us-west-2&#34;&#xA;    - --envs=AWS_ACCESS_KEY_ID=&#34;anaccesskey&#34;&#xA;    - --envs=AWS_SECRET_ACCESS_KEY=&#34;asecretkey&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; also supports passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --init-args=-lockfile=readonly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&#xA;function rm_terraform {&#xA;    find . \( -iname &#34;.terraform*&#34; ! -iname &#34;.terraform-docs*&#34; \) -print0 | xargs -0 rm -r&#xA;}&#xA;&#34; &amp;gt;&amp;gt;~/.bashrc&#xA;&#xA;# Reload shell and use `rm_terraform` command in the repo root&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; hook will try to reinitialize them before running the &lt;code&gt;terraform validate&lt;/code&gt; command.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If you use Terraform workspaces, DO NOT use this workaround (&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/203#issuecomment-918791847&#34;&gt;details&lt;/a&gt;). Wait to &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/224&#34;&gt;&lt;code&gt;force-init&lt;/code&gt;&lt;/a&gt; option implementation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; in a repo with Terraform module, written using Terraform 0.15+ and which uses provider &lt;code&gt;configuration_aliases&lt;/code&gt; (&lt;a href=&#34;https://www.terraform.io/language/modules/develop/providers#provider-aliases-within-modules&#34;&gt;Provider Aliases Within Modules&lt;/a&gt;), errors out.&lt;/p&gt; &lt;p&gt;When running the hook against Terraform code where you have provider &lt;code&gt;configuration_aliases&lt;/code&gt; defined in a &lt;code&gt;required_providers&lt;/code&gt; configuration block, terraform will throw an error like:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Error: Provider configuration not present To work with &#xA;    &lt;resource&gt;&#xA;      its original provider configuration at provider[&#34;registry.terraform.io/hashicorp/aws&#34;].&amp;lt;provider_alias&amp;gt; is required, but it has been removed. This occurs when a provider configuration is removed while objects created by that provider still exist in the state. Re-add the provider configuration to destroy &#xA;     &lt;resource&gt;&#xA;      , after which you can remove the provider configuration again.&#xA;     &lt;/resource&gt;&#xA;    &lt;/resource&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;This is a &lt;a href=&#34;https://github.com/hashicorp/terraform/issues/28490&#34;&gt;known issue&lt;/a&gt; with Terraform and how providers are initialized in Terraform 0.15 and later. To work around this you can add an &lt;code&gt;exclude&lt;/code&gt; parameter to the configuration of &lt;code&gt;terraform_validate&lt;/code&gt; hook like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  exclude: [^/]+$&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will exclude the root directory from being processed by this hook. Then add a subdirectory like &#34;examples&#34; or &#34;tests&#34; and put an example implementation in place that defines the providers with the proper aliases, and this will give you validation of your module through the example. If instead you are using this with multiple modules in one repository you&#39;ll want to set the path prefix in the regular expression, such as &lt;code&gt;exclude: modules/offendingmodule/[^/]+$&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Alternately, you can use &lt;a href=&#34;https://github.com/hashicorp/terraform-config-inspect&#34;&gt;terraform-config-inspect&lt;/a&gt; and use a variant of &lt;a href=&#34;https://github.com/bendrucker/terraform-configuration-aliases-action/raw/main/providers.sh&#34;&gt;this script&lt;/a&gt; to generate a providers file at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terraform-config-inspect --json . | jq -r &#39;&#xA;  [.required_providers[].aliases]&#xA;  | flatten&#xA;  | del(.[] | select(. == null))&#xA;  | reduce .[] as $entry (&#xA;    {};&#xA;    .provider[$entry.name] //= [] | .provider[$entry.name] += [{&#34;alias&#34;: $entry.alias}]&#xA;  )&#xA;&#39; | tee aliased-providers.tf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Save it as &lt;code&gt;.generate-providers.sh&lt;/code&gt; in the root of your repository and add a &lt;code&gt;pre-commit&lt;/code&gt; hook to run it before all other hooks, like so:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- repos:&#xA;  - repo: local&#xA;    hooks:&#xA;      - id: generate-terraform-providers&#xA;         name: generate-terraform-providers&#xA;         require_serial: true&#xA;         entry: .generate-providers.sh&#xA;         language: script&#xA;         files: \.tf(vars)?$&#xA;         pass_filenames: false&#xA;&#xA;  - repo: https://github.com/pre-commit/pre-commit-hooks&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The latter method will leave an &#34;aliased-providers.tf.json&#34; file in your repo. You will either want to automate a way to clean this up or add it to your &lt;code&gt;.gitignore&lt;/code&gt; or both.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_wrapper_module_for_each&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; generates module wrappers for Terraform modules (useful for Terragrunt where &lt;code&gt;for_each&lt;/code&gt; is not supported). When using this hook without arguments it will create wrappers for the root module and all modules available in &#34;modules&#34; directory.&lt;/p&gt; &#xA;&lt;p&gt;You may want to customize some of the options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-dir=...&lt;/code&gt; - Specify a single directory to process. Values: &#34;.&#34; (means just root module), &#34;modules/iam-user&#34; (a single module), or empty (means include all submodules found in &#34;modules/*&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-org=...&lt;/code&gt; - Module repository organization (e.g. &#34;terraform-aws-modules&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-shortname=...&lt;/code&gt; - Short name of the repository (e.g. &#34;s3-bucket&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-provider=...&lt;/code&gt; - Name of the repository provider (e.g. &#34;aws&#34; or &#34;google&#34;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Sample configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_wrapper_module_for_each&#xA;  args:&#xA;    - --args=--module-dir=.   # Process only root module&#xA;    - --args=--dry-run        # No files will be created/updated&#xA;    - --args=--verbose        # Verbose output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;terrascan&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terrascan&lt;/code&gt; supports custom arguments so you can pass supported flags like &lt;code&gt;--non-recursive&lt;/code&gt; and &lt;code&gt;--policy-type&lt;/code&gt; to disable recursive inspection and set the policy type respectively:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terrascan&#xA;  args:&#xA;    - --args=--non-recursive # avoids scan errors on subdirectories without Terraform config files&#xA;    - --args=--policy-type=azure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See the &lt;code&gt;terrascan run -h&lt;/code&gt; command line help for available options.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;--args=--verbose&lt;/code&gt; parameter to see the rule ID in the scaning output. Usuful to skip validations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;--skip-rules=&#34;ruleID1,ruleID2&#34;&lt;/code&gt; parameter to skip one or more rules globally while scanning (e.g.: &lt;code&gt;--args=--skip-rules=&#34;ruleID1,ruleID2&#34;&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the syntax &lt;code&gt;#ts:skip=RuleID optional_comment&lt;/code&gt; inside a resource to skip the rule for that resource.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;tfupdate&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Out of the box &lt;code&gt;tfupdate&lt;/code&gt; will pin the terraform version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: tfupdate&#xA;  name: Autoupdate Terraform versions&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;d like to pin providers, etc., use custom arguments, i.e &lt;code&gt;provider=PROVIDER_NAME&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: tfupdate&#xA;  name: Autoupdate AWS provider versions&#xA;  args:&#xA;    - --args=provider aws # Will be pined to latest version&#xA;&#xA;- id: tfupdate&#xA;  name: Autoupdate Helm provider versions&#xA;  args:&#xA;    - --args=provider helm&#xA;    - --args=--version 2.5.0 # Will be pined to specified version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/minamijoyo/tfupdate#usage&#34;&gt;&lt;code&gt;tfupdate&lt;/code&gt; usage instructions&lt;/a&gt; for other available options and usage examples.&lt;br&gt; No need to pass &lt;code&gt;--recursive .&lt;/code&gt; as it is added automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;This repository is managed by &lt;a href=&#34;https://github.com/antonbabenko&#34;&gt;Anton Babenko&lt;/a&gt; with help from these awesome contributors:&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=antonbabenko/pre-commit-terraform&#34;&gt; &lt;/a&gt; &#xA;&lt;!-- markdownlint-enable no-inline-html --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT licensed. See &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;h3&gt;Additional information for users from Russia and Belarus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Russia has &lt;a href=&#34;https://en.wikipedia.org/wiki/Annexation_of_Crimea_by_the_Russian_Federation&#34;&gt;illegally annexed Crimea in 2014&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/War_in_Donbas&#34;&gt;brought the war in Donbas&lt;/a&gt; followed by &lt;a href=&#34;https://en.wikipedia.org/wiki/2022_Russian_invasion_of_Ukraine&#34;&gt;full-scale invasion of Ukraine in 2022&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Russia has brought sorrow and devastations to millions of Ukrainians, killed hundreds of innocent people, damaged thousands of buildings, and forced several million people to flee.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Putin_khuylo!&#34;&gt;Putin khuylo!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>urbanadventurer/Android-PIN-Bruteforce</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/urbanadventurer/Android-PIN-Bruteforce</id>
    <link href="https://github.com/urbanadventurer/Android-PIN-Bruteforce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unlock an Android phone (or device) by bruteforcing the lockscreen PIN. Turn your Kali Nethunter phone into a bruteforce PIN cracker for Android devices! (no root, no adb)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🔓📱 Android-PIN-Bruteforce&lt;/h1&gt; &#xA;&lt;p&gt;Unlock an Android phone (or device) by bruteforcing the lockscreen PIN.&lt;/p&gt; &#xA;&lt;p&gt;Turn your Kali Nethunter phone into a bruteforce PIN cracker for Android devices!&lt;/p&gt; &#xA;&lt;h2&gt;📱 How it works&lt;/h2&gt; &#xA;&lt;p&gt;It uses a USB OTG cable to connect the locked phone to the Nethunter device. It emulates a keyboard, automatically tries PINs, and waits after trying too many wrong guesses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/101783/91640968-b7d46280-ea64-11ea-8340-94e3bacb706e.png&#34; alt=&#34;How to Connect Phones&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;[Nethunter phone] &amp;lt;--&amp;gt; [USB cable] &amp;lt;--&amp;gt; [USB OTG adaptor] &amp;lt;--&amp;gt; [Locked Android phone]&lt;/p&gt; &#xA;&lt;p&gt;The USB HID Gadget driver provides emulation of USB Human Interface Devices (HID). This enables an Android Nethunter device to emulate keyboard input to the locked phone. It&#39;s just like plugging a keyboard into the locked phone and pressing keys.&lt;/p&gt; &#xA;&lt;p&gt;⏱ This takes just over 16.6 hours with a Samsung S5 to try all possible 4 digit PINs, but with the optimised PIN list it should take you much less time.&lt;/p&gt; &#xA;&lt;h3&gt;You will need&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A locked Android phone&lt;/li&gt; &#xA; &lt;li&gt;A Nethunter phone (or any rooted Android with HID kernel support)&lt;/li&gt; &#xA; &lt;li&gt;USB OTG (On The Go) cable/adapter (USB male Micro-B to female USB A), and a standard charging cable (USB male Micro-B to male A).&lt;/li&gt; &#xA; &lt;li&gt;That&#39;s all!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🌟 Benefits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Turn your NetHunter phone into an Android PIN cracking machine&lt;/li&gt; &#xA; &lt;li&gt;Unlike other methods, you do not need ADB or USB debugging enabled on the locked phone&lt;/li&gt; &#xA; &lt;li&gt;The locked Android phone does not need to be rooted&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t need to buy special hardware, e.g. Rubber Ducky, Teensy, Cellebrite, XPIN Clip, etc.&lt;/li&gt; &#xA; &lt;li&gt;You can easily modify the backoff time to crack other types of devices&lt;/li&gt; &#xA; &lt;li&gt;It works!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⭐ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Crack PINs of any length from 1 to 10 digits&lt;/li&gt; &#xA; &lt;li&gt;Use config files to support different phones&lt;/li&gt; &#xA; &lt;li&gt;Optimised PIN lists for 3,4,5, and 6 digit PINs&lt;/li&gt; &#xA; &lt;li&gt;Bypasses phone pop-ups including the Low Power warning&lt;/li&gt; &#xA; &lt;li&gt;Detects when the phone is unplugged or powered off, and waits while retrying every 5 seconds&lt;/li&gt; &#xA; &lt;li&gt;Configurable delays of N seconds after every X PIN attempts&lt;/li&gt; &#xA; &lt;li&gt;Log file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;TBC&lt;/p&gt; &#xA;&lt;h2&gt;Executing the script&lt;/h2&gt; &#xA;&lt;p&gt;If you installed the script to /sdcard/, you can execute it with the following command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bash ./android-pin-bruteforce&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that Android mounts /sdcard with the noexec flag. You can verify this with &lt;code&gt;mount&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Android-PIN-Bruteforce (0.1) is used to unlock an Android phone (or device) by bruteforcing the lockscreen PIN.&#xA;  Find more information at: https://github.com/urbanadventurer/Android-PIN-Bruteforce&#xA;&#xA;Commands:&#xA;  crack                Begin cracking PINs&#xA;  resume               Resume from a chosen PIN&#xA;  rewind               Crack PINs in reverse from a chosen PIN&#xA;  diag                 Display diagnostic information&#xA;  version              Display version information and exit&#xA;&#xA;Options:&#xA;  -f, --from PIN       Resume from this PIN&#xA;  -a, --attempts       Starting from NUM incorrect attempts&#xA;  -m, --mask REGEX     Use a mask for known digits in the PIN&#xA;  -t, --type TYPE      Select PIN or PATTERN cracking&#xA;  -l, --length NUM     Crack PINs of NUM length&#xA;  -c, --config FILE    Specify configuration file to load&#xA;  -p, --pinlist FILE   Specify a custom PIN list&#xA;  -d, --dry-run        Dry run for testing. Doesn&#39;t send any keys.&#xA;  -v, --verbose        Output verbose logs&#xA;&#xA;Usage:&#xA;  android-pin-bruteforce &amp;lt;command&amp;gt; [options]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Android Phones/Devices&lt;/h2&gt; &#xA;&lt;p&gt;This has been successfully tested with various phones including the Samsung S5, S7, Motorola G4 Plus and G5 Plus.&lt;/p&gt; &#xA;&lt;p&gt;It can unlock Android versions 6.0.1 through to 10.0. The ability to perform a bruteforce attack doesn&#39;t depend on the Android version in use. It depends on how the device vendor developed their own lockscreen.&lt;/p&gt; &#xA;&lt;p&gt;Check the Phone Database for more details &lt;a href=&#34;https://github.com/urbanadventurer/Android-PIN-Bruteforce/wiki/Phone-Database&#34;&gt;https://github.com/urbanadventurer/Android-PIN-Bruteforce/wiki/Phone-Database&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎳 PIN Lists&lt;/h2&gt; &#xA;&lt;p&gt;Optimised PIN lists are used by default unless the user selects a custom PIN list.&lt;/p&gt; &#xA;&lt;h3&gt;Cracking PINs of different lengths&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--length&lt;/code&gt; commandline option.&lt;/p&gt; &#xA;&lt;p&gt;Use this command to crack a 3 digit PIN, &lt;code&gt;./android-pin-bruteforce crack --length 3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use this command to crack a 6 digit PIN &lt;code&gt;./android-pin-bruteforce crack --length 6&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Where did the optimised PIN lists come from?&lt;/h3&gt; &#xA;&lt;p&gt;The optimised PIN lists were generated by extracting numeric passwords from database leaks then sorting by frequency. All PINs that did not appear in the password leaks were appended to the list.&lt;/p&gt; &#xA;&lt;p&gt;The optimised PIN lists were generated from &lt;em&gt;Ga$$Pacc DB Leak&lt;/em&gt; (21GB decompressed, 688M Accounts, 243 Databases, 138920 numeric passwords).&lt;/p&gt; &#xA;&lt;h4&gt;The 4 digit PIN list&lt;/h4&gt; &#xA;&lt;p&gt;The reason that the 4 digit PIN list is used from a different source is because it gives better results than the generated list from &lt;em&gt;Ga$$Pacc DB Leak&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;optimised-pin-length-4.txt&lt;/code&gt; is an optimised list of all possible 4 digit PINs, sorted by order of likelihood. It can be found with the filename &lt;code&gt;pinlist.txt&lt;/code&gt; at &lt;a href=&#34;https://github.com/mandatoryprogrammer/droidbrute&#34;&gt;https://github.com/mandatoryprogrammer/droidbrute&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This list is used with permission from Justin Engler &amp;amp; Paul Vines from Senior Security Engineer, iSEC Partners, and was used in their Defcon talk, &lt;a href=&#34;https://www.defcon.org/html/defcon-21/dc-21-speakers.html#Engler&#34;&gt;Electromechanical PIN Cracking with Robotic Reconfigurable Button Basher (and C3BO)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cracking with Masks&lt;/h3&gt; &#xA;&lt;p&gt;Masks use regular expressions with the standard grep extended format.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./android-pin-bruteforce crack --mask &#34;...[45]&#34; --dry-run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To try all years from 1900 to 1999, use a mask of &lt;code&gt;19..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To try PINs that have a 1 in the first digit, and a 1 in the last digit, use a mask of &lt;code&gt;1..1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To try PINs that end in 4 or 5, use &lt;code&gt;...[45]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📱 Configuration for different phones&lt;/h2&gt; &#xA;&lt;p&gt;Device manufacturers create their own lock screens that are different to the default or stock Android. To find out what keys your phone needs, plug a keyboard into the phone and try out different combinations.&lt;/p&gt; &#xA;&lt;p&gt;Load a different configuration file, with the &lt;code&gt;--config FILE&lt;/code&gt; commandline parameter.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;./android-pin-bruteforce --config ./config.samsung.s5 crack&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also edit the &lt;code&gt;config&lt;/code&gt; file by customising the timing and keys sent.&lt;/p&gt; &#xA;&lt;p&gt;The following configuration variables can be used to support a different phone&#39;s lockscreen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Timing&#xA;## DELAY_BETWEEN_KEYS is the period of time in seconds to wait after each key is sent&#xA;DELAY_BETWEEN_KEYS=0.25&#xA;&#xA;## The PROGRESSIVE_COOLDOWN_ARRAY variables act as multi-dimensional array to customise the progressive cooldown&#xA;## PROGRESSIVE_ARRAY_ATTEMPT_COUNT__________ is the attempt number&#xA;## PROGRESSIVE_ARRAY_ATTEMPTS_UNTIL_COOLDOWN is how many attempts to try before cooling down&#xA;## PROGRESSIVE_ARRAY_COOLDOWN_IN_SECONDS____ is the cooldown in seconds&#xA;&#xA;PROGRESSIVE_ARRAY_ATTEMPT_COUNT__________=(1  11 41)&#xA;PROGRESSIVE_ARRAY_ATTEMPTS_UNTIL_COOLDOWN=(5   1  1)&#xA;PROGRESSIVE_ARRAY_COOLDOWN_IN_SECONDS____=(30 30 60)&#xA;&#xA;## SEND_KEYS_DISMISS_POPUPS_N_SECONDS_BEFORE_COOLDOWN_END defines how many seconds before the end of the cooldown period, keys will be sent&#xA;# set to 0 to disable&#xA;SEND_KEYS_DISMISS_POPUPS_N_SECONDS_BEFORE_COOLDOWN_END=5&#xA;## SEND_KEYS_DISMISS_POPUPS_AT_COOLDOWN_END configures the keys that are sent to dismiss messages and popups before the end of the cooldown period&#xA;SEND_KEYS_DISMISS_POPUPS_AT_COOLDOWN_END=&#34;enter enter enter&#34;&#xA;&#xA;## KEYS_BEFORE_EACH_PIN configures the keys that are sent to prompt the lock screen to appear. This is sent before each PIN.&#xA;## By default it sends &#34;escape enter&#34;, but some phones will respond to other keys.&#xA;&#xA;# Examples:&#xA;# KEYS_BEFORE_EACH_PIN=&#34;ctrl_escape enter&#34;&#xA;# KEYS_BEFORE_EACH_PIN=&#34;escape space&#34;&#xA;KEYS_BEFORE_EACH_PIN=&#34;escape enter&#34;&#xA;&#xA;## KEYS_STAY_AWAKE_DURING_COOLDOWN the keys that are sent during the cooldown period to keep the phone awake&#xA;KEYS_STAY_AWAKE_DURING_COOLDOWN=&#34;enter&#34;&#xA;&#xA;## SEND_KEYS_STAY_AWAKE_DURING_COOLDOWN_EVERY_N_SECONDS how often the keys are sent, in seconds&#xA;SEND_KEYS_STAY_AWAKE_DURING_COOLDOWN_EVERY_N_SECONDS=5&#xA;&#xA;## DELAY_BEFORE_STARTING is the period of time in seconds to wait before the bruteforce begins&#xA;DELAY_BEFORE_STARTING=2&#xA;## KEYS_BEFORE_STARTING configures the keys that are sent before the bruteforce begins&#xA;KEYS_BEFORE_STARTING=&#34;enter&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Popups&lt;/h3&gt; &#xA;&lt;p&gt;We send keys before the end of the cooldown period, or optionally during the cooldown period. This is to keep the lockscreen app active and to dismiss any popups about the number of incorrect PIN attempts or a low battery warning.&lt;/p&gt; &#xA;&lt;h2&gt;Test sending keys from the NetHunter phone&lt;/h2&gt; &#xA;&lt;h3&gt;Test sending keys from the terminal&lt;/h3&gt; &#xA;&lt;p&gt;Use ssh from your laptop to the NetHunter phone, and use this command to test sending keys:&lt;/p&gt; &#xA;&lt;p&gt;In this example, the enter key is sent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;echo &#34;enter&#34; | /system/xbin/hid-keyboard /dev/hidg0 keyboard&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this example, ctrl-escape is sent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;echo &#34;left-ctrl escape&#34; | /system/xbin/hid-keyboard /dev/hidg0 keyboard&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: Sending combinations of keys in &lt;code&gt;config&lt;/code&gt; file variables is different. Currently only &lt;code&gt;ctrl_escape&lt;/code&gt; is supported.&lt;/p&gt; &#xA;&lt;p&gt;In this example, keys a, b, c are sent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;echo a b c | /system/xbin/hid-keyboard /dev/hidg0 keyboard&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Test sending keys from an app&lt;/h3&gt; &#xA;&lt;p&gt;This Android app is a virtual USB Keyboard that you can use to test sending keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.nethunter.com/en/packages/remote.hid.keyboard.client/&#34;&gt;https://store.nethunter.com/en/packages/remote.hid.keyboard.client/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to send special keys&lt;/h3&gt; &#xA;&lt;p&gt;Use this list for the following variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;KEYS_BEFORE_EACH_PIN&lt;/li&gt; &#xA; &lt;li&gt;KEYS_STAY_AWAKE_DURING_COOLDOWN&lt;/li&gt; &#xA; &lt;li&gt;KEYS_BEFORE_STARTING&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To send special keys use the following labels. This list can be found in the hid_gadget_test source code.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key label&lt;/th&gt; &#xA;   &lt;th&gt;Key label&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;left-ctrl&lt;/td&gt; &#xA;   &lt;td&gt;f6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;right-ctrl&lt;/td&gt; &#xA;   &lt;td&gt;f7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;left-shift&lt;/td&gt; &#xA;   &lt;td&gt;f8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;right-shift&lt;/td&gt; &#xA;   &lt;td&gt;f9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;left-alt&lt;/td&gt; &#xA;   &lt;td&gt;f10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;right-alt&lt;/td&gt; &#xA;   &lt;td&gt;f11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;left-meta&lt;/td&gt; &#xA;   &lt;td&gt;f12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;right-meta&lt;/td&gt; &#xA;   &lt;td&gt;insert&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;return&lt;/td&gt; &#xA;   &lt;td&gt;home&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;esc&lt;/td&gt; &#xA;   &lt;td&gt;pageup&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bckspc&lt;/td&gt; &#xA;   &lt;td&gt;del&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tab&lt;/td&gt; &#xA;   &lt;td&gt;end&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;spacebar&lt;/td&gt; &#xA;   &lt;td&gt;pagedown&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;caps-lock&lt;/td&gt; &#xA;   &lt;td&gt;right&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;f1&lt;/td&gt; &#xA;   &lt;td&gt;left&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;f2&lt;/td&gt; &#xA;   &lt;td&gt;down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;f3&lt;/td&gt; &#xA;   &lt;td&gt;kp-enter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;f4&lt;/td&gt; &#xA;   &lt;td&gt;up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;f5&lt;/td&gt; &#xA;   &lt;td&gt;num-lock&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To send more than one key at the same time, use the following list:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ctrl_escape (This sends left-ctrl and escape)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need more key combinations please open a new issue in the GitHub issues list.&lt;/p&gt; &#xA;&lt;h3&gt;Customising the Progressive Cooldown&lt;/h3&gt; &#xA;&lt;p&gt;The following section of the &lt;code&gt;config&lt;/code&gt; file controls the progressive cooldown.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## The PROGRESSIVE_COOLDOWN_ARRAY variables act as multi-dimensional array to customise the progressive cooldown&#xA;## PROGRESSIVE_ARRAY_ATTEMPT_COUNT__________ is the attempt number&#xA;## PROGRESSIVE_ARRAY_ATTEMPTS_UNTIL_COOLDOWN is how many attempts to try before cooling down&#xA;## PROGRESSIVE_ARRAY_COOLDOWN_IN_SECONDS____ is the cooldown in seconds&#xA;&#xA;PROGRESSIVE_ARRAY_ATTEMPT_COUNT__________=(1  11 41)&#xA;PROGRESSIVE_ARRAY_ATTEMPTS_UNTIL_COOLDOWN=(5   1  1)&#xA;PROGRESSIVE_ARRAY_COOLDOWN_IN_SECONDS____=(30 30 60)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The array is the same as this table.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;attempt number&lt;/th&gt; &#xA;   &lt;th&gt;attempts until cooldown&lt;/th&gt; &#xA;   &lt;th&gt;cooldown&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;41&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Why can&#39;t you use a laptop, or is a Windows or Linux version coming soon?&lt;/h3&gt; &#xA;&lt;p&gt;This script works by emulating USB Human Interface Devices (HID), in this case it is keyboard and mouse input. Laptops have uni-directional USB ports and an Android mobile device/ phone has a bi-directional USB port. A bi-directional port is required to emulate a keyboard.&lt;/p&gt; &#xA;&lt;p&gt;This might change in the future as USB-C is supposed to be uni-directional.&lt;/p&gt; &#xA;&lt;h3&gt;How Android emulates a keyboard&lt;/h3&gt; &#xA;&lt;p&gt;Keys are sent using &lt;code&gt;/system/xbin/hid-keyboard&lt;/code&gt;. To test this and send the key 1 you can use &lt;code&gt;echo 1 | /system/xbin/hid-keyboard dev/hidg0 keyboard&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In Kali Nethunter, &lt;code&gt;/system/xbin/hid-keyboard&lt;/code&gt; is a compiled copy of &lt;code&gt;hid_gadget_test.c&lt;/code&gt;. This is a small program for testing the HID gadget driver that is included in the Linux Kernel. The source code for this file can be found at &lt;a href=&#34;https://www.kernel.org/doc/html/latest/usb/gadget_hid.html&#34;&gt;https://www.kernel.org/doc/html/latest/usb/gadget_hid.html&lt;/a&gt; and &lt;a href=&#34;https://github.com/aagallag/hid_gadget_test&#34;&gt;https://github.com/aagallag/hid_gadget_test&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🔧 Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;If it is not bruteforcing PINs&lt;/h3&gt; &#xA;&lt;h4&gt;Check the orientation of the cables&lt;/h4&gt; &#xA;&lt;p&gt;The Nethunter phone should have a regular USB cable attached, while the locked phone should have an OTG adaptor attached.&lt;/p&gt; &#xA;&lt;p&gt;The OTG cable should be connected to the locked Android phone. The regular USB cable should be connected to the Nethunter phone.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the graphic on how to connect the phones.&lt;/p&gt; &#xA;&lt;h4&gt;Check it is emulating a keyboard&lt;/h4&gt; &#xA;&lt;p&gt;You can verify that the NetHunter phone is succesfully emulating a keyboard by connecting it to a computer using a regular charging/data USB cable. Open a text editor like Notepad while it is cracking and you should see it entering PIN numbers into the text editor.&lt;/p&gt; &#xA;&lt;p&gt;Note that you will not need an OTG cable for this.&lt;/p&gt; &#xA;&lt;h4&gt;Try restarting the phones&lt;/h4&gt; &#xA;&lt;p&gt;Try powering off the phones and even taking out the batteries if that is possible.&lt;/p&gt; &#xA;&lt;h4&gt;Try new cables&lt;/h4&gt; &#xA;&lt;p&gt;Try using new cables/adaptors as you may have a faulty cable/adaptor.&lt;/p&gt; &#xA;&lt;h3&gt;If it doesn&#39;t unlock the phone with a correct PIN&lt;/h3&gt; &#xA;&lt;p&gt;You might be sending keys too fast for the phone to process. Increase the DELAY_BETWEEN_KEYS variable in the config file. 💡 If you don&#39;t see 4 dots come up on the phone&#39;s screen then maybe it is not receiving 4 keys.&lt;/p&gt; &#xA;&lt;h3&gt;🔋 Managing Power Consumption&lt;/h3&gt; &#xA;&lt;p&gt;If your phone runs out of power too soon, follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure both phones are fully charged to 100% before you begin&lt;/li&gt; &#xA; &lt;li&gt;Reduce the screen brightness on both the victim phone and NetHunter phone if possible&lt;/li&gt; &#xA; &lt;li&gt;Place both phones into Airplane mode, however you may want to enable WiFi to access the NetHunter phone via SSH.&lt;/li&gt; &#xA; &lt;li&gt;The locked phone will power the NetHunter phone, because it appears as a keyboard accessory&lt;/li&gt; &#xA; &lt;li&gt;Use a USB OTG cable with a Y splitter for an external power supply, to allow charging of the NetHunter phone while cracking&lt;/li&gt; &#xA; &lt;li&gt;Take breaks to charge your devices. Pause the script with CTRL-Z and resume with the &lt;code&gt;fg&lt;/code&gt; shell command.&lt;/li&gt; &#xA; &lt;li&gt;Avoid the SEND_KEYS_STAY_AWAKE_DURING_COOLDOWN_EVERY_N_SECONDS configuration option. This will cause the locked phone to use more battery to keep the screen powered. Instead use the SEND_KEYS_DISMISS_POPUPS_N_SECONDS_BEFORE_COOLDOWN_END option (Default).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Check the Diagnostics Report&lt;/h3&gt; &#xA;&lt;p&gt;Use the command &lt;code&gt;diag&lt;/code&gt; display diagnostic information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bash ./android-pin-bruteforce diag&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you receive this message when the USB cable is plugged in then try taking the battery out of the locked Android phone and power cycling it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;[FAIL] HID USB device not ready. Return code from /system/xbin/hid-keyboard was 5.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How the usb-devices command works&lt;/h3&gt; &#xA;&lt;p&gt;The diagnostics command uses the &lt;code&gt;usb-devices&lt;/code&gt; script but it is only necessary as part of determining whether the USB cables are incorrectly connected. This can be downloaded from &lt;a href=&#34;https://github.com/gregkh/usbutils/raw/master/usb-devices&#34;&gt;https://github.com/gregkh/usbutils/blob/master/usb-devices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use verbose output&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--verbose&lt;/code&gt; option to check the configuration is as expected. This is especially useful when you are modifying the configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Use the dry-run&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--dry-run&lt;/code&gt; option to check how it operates without sending any keys to a device. This is especially useful when you are modifying the configuration or during development.&lt;/p&gt; &#xA;&lt;p&gt;Dry run will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not send any keys&lt;/li&gt; &#xA; &lt;li&gt;Will continue instead of aborting if the &lt;code&gt;KEYBOARD_DEVICE&lt;/code&gt; or &lt;code&gt;HID_KEYBOARD&lt;/code&gt; is missing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;HID USB Mode&lt;/h3&gt; &#xA;&lt;p&gt;Try this command in a shell on the NetHunter phone: &lt;code&gt;/system/bin/setprop sys.usb.config hid&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💣 Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This cannot detect when the correct PIN is guessed and the phone unlocks.&lt;/li&gt; &#xA; &lt;li&gt;Your phones may run out of 🔋 battery before the correct PIN is found.&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t trust phone configuration files from unknown sources without reviewing them first. The configuration files are shell scripts and could include malicious commands.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[DONE] Works&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Detects USB HID failures&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Improve Usage and commandline options/config files&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Add bruteforce for n digit PINs&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Mask for known digits&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Crack PIN list in reverse (to find which recent PIN unlocked the device)&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Implement configurable lockscreen prompt&lt;/li&gt; &#xA; &lt;li&gt;[DONE] Implement cooldown change after 10 attempts&lt;/li&gt; &#xA; &lt;li&gt;[WORKING] Find/test more devices to bruteforce&lt;/li&gt; &#xA; &lt;li&gt;Add progress bar&lt;/li&gt; &#xA; &lt;li&gt;Add ETA&lt;/li&gt; &#xA; &lt;li&gt;ASCII art&lt;/li&gt; &#xA; &lt;li&gt;Nicer GUI for NetHunter&lt;/li&gt; &#xA; &lt;li&gt;Implement for iPhone&lt;/li&gt; &#xA; &lt;li&gt;Detect when a phone is unlocked (Use Nethunter camera as a sensor?)&lt;/li&gt; &#xA; &lt;li&gt;Crack Android Patterns (try common patterns first)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🙋 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure to update tests as appropriate.&lt;/p&gt; &#xA;&lt;h2&gt;😎 Authors and acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;Developed by Andrew Horton (@urbanadventurer).&lt;/p&gt; &#xA;&lt;p&gt;👏 The following people have been very helpful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vlad Filatov (@v1adf): Testing many phones for the Wiki Phone Database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Motivation&lt;/h3&gt; &#xA;&lt;p&gt;My original motivation to develop this was to unlock a Samsung S5 Android phone. It had belonged to someone who had passed away, and their family needed access to the data on it. As I didn&#39;t have a USB Rubber Ducky or any other hardware handy, I tried using a variety of methods, and eventually realised I had to develop something new.&lt;/p&gt; &#xA;&lt;h3&gt;Credit&lt;/h3&gt; &#xA;&lt;p&gt;The optimised PIN list is from Justin Engler (@justinengler) &amp;amp; Paul Vines from Senior Security Engineer, iSEC Partners and was used in their Defcon talk, &lt;a href=&#34;https://www.defcon.org/html/defcon-21/dc-21-speakers.html#Engler&#34;&gt;Electromechanical PIN Cracking with Robotic Reconfigurable Button Basher (and C3BO).&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Graphics&lt;/h3&gt; &#xA;&lt;p&gt;Designed by Andrew Horton and gratefully using these free vector packs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vecteezy.com/vector-art/159576-usb-ports-isometric-free-vector&#34;&gt;USB Ports Isometric Free Vector by VisionHeldup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vecteezy.com/vector-art/107006-hdmi-and-usb-vector-set&#34;&gt;HDMI and USB Vector Set by Mary Winkler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vecteezy.com/vector-art/661831-isometric-data-security-illustration&#34;&gt;Isometric Data Security Illustration by Rizal.Medanguide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kali NetHunter Logo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗿 Comparison with other projects and methods to unlock a locked Android phone&lt;/h2&gt; &#xA;&lt;h3&gt;What makes this project unique?&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;ve been asked what makes this project unique when there are other open-source Android PIN cracking projects.&lt;/p&gt; &#xA;&lt;p&gt;Android-PIN-Bruteforce is unique because it cracks the PIN on Android phones from a NetHunter phone and it doesn&#39;t need the locked phone to be pre-hacked.&lt;/p&gt; &#xA;&lt;p&gt;It works:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without having to buy special hardware, such as a Rubber Ducky, Celebrite, or XPIN Clip.&lt;/li&gt; &#xA; &lt;li&gt;Without ADB or root access (the phone doesn&#39;t have to be pre-hacked).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;ADB/USB Debugging&lt;/th&gt; &#xA;   &lt;th&gt;Requires root&lt;/th&gt; &#xA;   &lt;th&gt;Requires $ hardware&lt;/th&gt; &#xA;   &lt;th&gt;Commercial&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⭐ Android-PIN-Bruteforce&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Nethunter phone&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/PentesterES/AndroidPINCrack&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/ByteRockstar1996/Cracking-Android-Pin-Lock&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/sch3m4/androidpatternlock&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/georgenicolaou/androidlockcracker&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/MGF15/P-Decode&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/BitesFor/ABL&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/wuseman/WBRUTER&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/Gh005t/Android-BruteForce&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/mandatoryprogrammer/droidbrute&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky $&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/hak5darren/USB-Rubber-Ducky&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky $&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;github.com/bbrother/stm32f4androidbruteforce&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;STM32F4 dev board $&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hdb-team.com/product/hdbox/&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;HDBOX $$&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xpinclip.com&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;XPINClip $$&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cellebrite.com/en/ufed/&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Cellebrite UFED $$$&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Some of these projects/products are really awesome but they achieve a different goal to Android-PIN-Bruteforce.&lt;/p&gt; &#xA;&lt;p&gt;If a project requires a gestures.key or password.key, I&#39;ve listed it as requiring root. If a project requires a custom bootloader, I&#39;ve listed that as requiring both ADB and root. If you would like your project listed in this table then please open a new issue. There are links to each of these projects in the 📚 Related Projects &amp;amp; Futher Reading section.&lt;/p&gt; &#xA;&lt;h3&gt;😭 Regular phone users&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Try the top 20 PINs from the &lt;a href=&#34;https://datagenetics.com/blog/september32012/index.html&#34;&gt;DataGenetics PIN analysis&lt;/a&gt; that apparently unlocks 26.83% of phones.&lt;/li&gt; &#xA; &lt;li&gt;Use an SMS lock-screen bypass app (requires app install before phone is locked)&lt;/li&gt; &#xA; &lt;li&gt;Use Samsung Find My Mobile (requires you set it up before phone is locked)&lt;/li&gt; &#xA; &lt;li&gt;Crash the Lock Screen UI (Android 5.0 and 5.1)&lt;/li&gt; &#xA; &lt;li&gt;Use the Google Forgot pattern, Forgot PIN, or Forgot password (Android 4.4 KitKat and earlier)&lt;/li&gt; &#xA; &lt;li&gt;Factory Reset (you lose all your data 😭)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🤖 Users who have already replaced their Android ROM&lt;/h3&gt; &#xA;&lt;p&gt;If the phone has already been rooted, has USB debugging enabled, or has adb enabled.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash the &lt;code&gt;Pattern Password Disable&lt;/code&gt; ZIP using a custom recovery (Requires TWRP, CMW, Xrec, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Delete &lt;code&gt;/data/system/gesture.key&lt;/code&gt; or &lt;code&gt;password.key&lt;/code&gt; (requires root and adb on locked device)&lt;/li&gt; &#xA; &lt;li&gt;Crack &lt;code&gt;/data/system/gesture.key&lt;/code&gt; and &lt;code&gt;password.key&lt;/code&gt; (requires root and adb on locked device)&lt;/li&gt; &#xA; &lt;li&gt;Update sqlite3 database &lt;code&gt;settings.db&lt;/code&gt; (requires root and adb on locked device)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🔬 Forensic Investigators&lt;/h3&gt; &#xA;&lt;p&gt;These methods can be expensive and are usually only used by specialised phone forensic investigators.&lt;/p&gt; &#xA;&lt;p&gt;In order of difficulty and expense:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Taking advantage of USB debugging being enabled (Oxygen Forensic Suite)&lt;/li&gt; &#xA; &lt;li&gt;Bruteforce with keyboard emulation (⭐ Android-PIN-Bruteforce, RubberDucky attack, XPIN Clip, HBbox)&lt;/li&gt; &#xA; &lt;li&gt;JTAG (Interface with TAPs (Test Access Ports) on the device board)&lt;/li&gt; &#xA; &lt;li&gt;In-System Programming (ISP) (Involves directly connecting to pins on flash memory chips on the device board)&lt;/li&gt; &#xA; &lt;li&gt;Chip Off (Desolder and remove flash memory chips from the device)&lt;/li&gt; &#xA; &lt;li&gt;Clock Glitching / Voltage Fault Injection (Hardware CPU timing attacks to bypass PIN restrictions)&lt;/li&gt; &#xA; &lt;li&gt;Bootloader exploits (Zero-day exploits that attack the bootloader. GrayKey from Grayshift and Cellebrite)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;JTAG, ISP, and Chip Off techniques are less useful now because most devices are encrypted. I don&#39;t know of any practical attacks on phone PINs that use clock glitching, if you know of a product that uses this technique please let me know so I can include it.&lt;/p&gt; &#xA;&lt;h3&gt;🕵 Security Professionals and Technical Phone Users&lt;/h3&gt; &#xA;&lt;p&gt;Use the USB HID Keyboard Bruteforce with some dedicated hardware.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A RubberDucky and Darren Kitchen&#39;s Hak5 brute-force script&lt;/li&gt; &#xA; &lt;li&gt;Write a script for a USB Teensy&lt;/li&gt; &#xA; &lt;li&gt;Buy expensive forensic hardware&lt;/li&gt; &#xA; &lt;li&gt;Or you can use Android-PIN-Bruteforce with your NetHunter phone!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Attempts to use an otherwise awesome project Duck Hunter, to emulate a RubberDucky payload for Android PIN cracking did not work. It crashed the phone probably because of the payload length.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Related Projects &amp;amp; Futher Reading&lt;/h2&gt; &#xA;&lt;h3&gt;USB HID Hardware without NetHunter&lt;/h3&gt; &#xA;&lt;p&gt;hak5 12x17: Hack Any 4-digit Android PIN in 16 hours with a USB Rubber Ducky &lt;a href=&#34;https://archive.org/details/hak5_12x17&#34;&gt;https://archive.org/details/hak5_12x17&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hak5: USB Rubber Ducky &lt;a href=&#34;https://shop.hak5.org/products/usb-rubber-ducky-deluxe&#34;&gt;https://shop.hak5.org/products/usb-rubber-ducky-deluxe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;USB-Rubber-Ducky Payloads &lt;a href=&#34;https://github.com/hak5darren/USB-Rubber-Ducky/wiki/Payloads&#34;&gt;https://github.com/hak5darren/USB-Rubber-Ducky/wiki/Payloads&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Teensy &lt;a href=&#34;https://www.pjrc.com/teensy/&#34;&gt;https://www.pjrc.com/teensy/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Brute Forcing An Android Phone with a STM32F4Discovery Development Board &lt;a href=&#34;https://github.com/bbrother/stm32f4androidbruteforce&#34;&gt;https://github.com/bbrother/stm32f4androidbruteforce&lt;/a&gt; &lt;a href=&#34;https://hackaday.com/2013/11/10/brute-forcing-an-android-phone/&#34;&gt;https://hackaday.com/2013/11/10/brute-forcing-an-android-phone/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Automated brute force attack against the Mac EFI PIN (Using a Teensy) &lt;a href=&#34;https://orvtech.com/atacar-efi-pin-macbook-pro-en.html&#34;&gt;https://orvtech.com/atacar-efi-pin-macbook-pro-en.html&lt;/a&gt; &lt;a href=&#34;https://hackaday.io/project/2196-efi-bruteforcer&#34;&gt;https://hackaday.io/project/2196-efi-bruteforcer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Droidbrute: An Android PIN cracking USB rubber ducky payload made efficient with a statistically generated wordlist. &lt;a href=&#34;https://github.com/mandatoryprogrammer/droidbrute&#34;&gt;https://github.com/mandatoryprogrammer/droidbrute&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Discussion forum about the hak5 episode, and Android Brute Force 4-digit pin &lt;a href=&#34;https://forums.hak5.org/topic/28165-payload-android-brute-force-4-digit-pin/&#34;&gt;https://forums.hak5.org/topic/28165-payload-android-brute-force-4-digit-pin/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;NetHunter HID keyboard attacks&lt;/h3&gt; &#xA;&lt;p&gt;NetHunter HID Keyboard Attacks &lt;a href=&#34;https://www.kali.org/docs/nethunter/nethunter-hid-attacks/&#34;&gt;https://www.kali.org/docs/nethunter/nethunter-hid-attacks/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Kernel HID support&lt;/h3&gt; &#xA;&lt;p&gt;Human Interface Devices (HID) &lt;a href=&#34;https://www.kernel.org/doc/html/latest/hid/index.html#&#34;&gt;https://www.kernel.org/doc/html/latest/hid/index.html#&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux USB HID gadget driver and hid-keyboard program &lt;a href=&#34;https://www.kernel.org/doc/html/latest/usb/gadget_hid.html&#34;&gt;https://www.kernel.org/doc/html/latest/usb/gadget_hid.html&lt;/a&gt; &lt;a href=&#34;https://github.com/aagallag/hid_gadget_test&#34;&gt;https://github.com/aagallag/hid_gadget_test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The usb-devices script &lt;a href=&#34;https://github.com/gregkh/usbutils/raw/master/usb-devices&#34;&gt;https://github.com/gregkh/usbutils/blob/master/usb-devices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cracking Android PIN and Pattern files&lt;/h3&gt; &#xA;&lt;p&gt;AndroidPINCrack - bruteforce the Android Passcode given the hash and salt (requires root on the phone) &lt;a href=&#34;https://github.com/PentesterES/AndroidPINCrack&#34;&gt;https://github.com/PentesterES/AndroidPINCrack&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Android Pattern Lock Cracker - bruteforce the Android Pattern given an SHA1 hash (requires root on the phone) &lt;a href=&#34;https://github.com/sch3m4/androidpatternlock&#34;&gt;https://github.com/sch3m4/androidpatternlock&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;General Recovery Methods&lt;/h3&gt; &#xA;&lt;p&gt;[Android][Guide]Hacking And Bypassing Android Password/Pattern/Face/PI &lt;a href=&#34;https://forum.xda-developers.com/showthread.php?t=2620456&#34;&gt;https://forum.xda-developers.com/showthread.php?t=2620456&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Android BruteForce using ADB &amp;amp; Shell Scripting &lt;a href=&#34;https://github.com/Gh005t/Android-BruteForce&#34;&gt;https://github.com/Gh005t/Android-BruteForce&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forensic Methods and Hardware&lt;/h3&gt; &#xA;&lt;p&gt;PATCtech Digital Forensics: Getting Past the Android Passcode &lt;a href=&#34;http://patc.com/online/a/Portals/965/Android%20Passcode.pdf&#34;&gt;http://patc.com/online/a/Portals/965/Android%20Passcode.pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;XPIN Clip &lt;a href=&#34;https://xpinclip.com/&#34;&gt;https://xpinclip.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;HDBox from HDB Team &lt;a href=&#34;https://hdb-team.com/product/hdbox/&#34;&gt;https://hdb-team.com/product/hdbox/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cellebrite UFED &lt;a href=&#34;https://www.cellebrite.com/en/ufed/&#34;&gt;https://www.cellebrite.com/en/ufed/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GrayKey from Grayshift &lt;a href=&#34;https://www.grayshift.com/graykey/&#34;&gt;https://www.grayshift.com/graykey/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PIN Analysis&lt;/h3&gt; &#xA;&lt;p&gt;Electromechanical PIN Cracking with Robotic Reconfigurable Button Basher (and C3BO) &lt;a href=&#34;https://www.defcon.org/html/defcon-21/dc-21-speakers.html#Engler&#34;&gt;https://www.defcon.org/html/defcon-21/dc-21-speakers.html#Engler&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DataGenetics PIN analysis &lt;a href=&#34;https://datagenetics.com/blog/september32012/index.html&#34;&gt;https://datagenetics.com/blog/september32012/index.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>confluentinc/cp-all-in-one</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/confluentinc/cp-all-in-one</id>
    <link href="https://github.com/confluentinc/cp-all-in-one" rel="alternate"></link>
    <summary type="html">&lt;p&gt;docker-compose.yml files for cp-all-in-one , cp-all-in-one-community, cp-all-in-one-cloud&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/cp-all-in-one/7.1.0-post/images/confluent-logo-300-2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;You can find the documentation and instructions for this repo at &lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/build-your-own-demos.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.cp-all-in-one&#34;&gt;https://docs.confluent.io/platform/current/tutorials/build-your-own-demos.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>awslabs/amazon-eks-ami</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/awslabs/amazon-eks-ami</id>
    <link href="https://github.com/awslabs/amazon-eks-ami" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Packer configuration for building a custom EKS AMI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amazon EKS AMI Build Specification&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains resources and configuration scripts for building a custom Amazon EKS AMI with &lt;a href=&#34;https://www.packer.io/&#34;&gt;HashiCorp Packer&lt;/a&gt;. This is the same configuration that Amazon EKS uses to create the official Amazon EKS-optimized AMI.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You must have &lt;a href=&#34;https://www.packer.io/&#34;&gt;Packer&lt;/a&gt; installed on your local system. For more information, see &lt;a href=&#34;https://www.packer.io/docs/install/index.html&#34;&gt;Installing Packer&lt;/a&gt; in the Packer documentation. You must also have AWS account credentials configured so that Packer can make calls to AWS API operations on your behalf. For more information, see &lt;a href=&#34;https://www.packer.io/docs/builders/amazon.html#specifying-amazon-credentials&#34;&gt;Authentication&lt;/a&gt; in the Packer documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The default instance type to build this AMI is an &lt;code&gt;m4.large&lt;/code&gt; and does not qualify for the AWS free tier. You are charged for any instances created when building this AMI.&lt;/p&gt; &#xA;&lt;h2&gt;Building the AMI&lt;/h2&gt; &#xA;&lt;p&gt;A Makefile is provided to build the AMI, but it is just a small wrapper around invoking Packer directly. You can initiate the build process by running the following command in the root of this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Makefile runs Packer with the &lt;code&gt;eks-worker-al2.json&lt;/code&gt; build specification template and the &lt;a href=&#34;https://www.packer.io/docs/builders/amazon-ebs.html&#34;&gt;amazon-ebs&lt;/a&gt; builder. An instance is launched and the Packer &lt;a href=&#34;https://www.packer.io/docs/provisioners/shell.html&#34;&gt;Shell Provisioner&lt;/a&gt; runs the &lt;code&gt;install-worker.sh&lt;/code&gt; script on the instance to install software and perform other necessary configuration tasks. Then, Packer creates an AMI from the instance and terminates the instance after the AMI is created.&lt;/p&gt; &#xA;&lt;h2&gt;Using the AMI&lt;/h2&gt; &#xA;&lt;p&gt;If you are just getting started with Amazon EKS, we recommend that you follow our &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html&#34;&gt;Getting Started&lt;/a&gt; chapter in the Amazon EKS User Guide. If you already have a cluster, and you want to launch a node group with your new AMI, see &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html&#34;&gt;Launching Amazon EKS Worker Nodes&lt;/a&gt; in the Amazon EKS User Guide.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/amazon-eks-ami/master/amazon-eks-nodegroup.yaml&#34;&gt;&lt;code&gt;amazon-eks-nodegroup.yaml&lt;/code&gt;&lt;/a&gt; AWS CloudFormation template in this repository is provided to launch a node group with the new AMI ID that is returned when Packer finishes building. Note that there is important Amazon EC2 user data in this CloudFormation template that bootstraps the worker nodes when they are launched so that they can register with your Amazon EKS cluster. Your nodes cannot register properly without this user data.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility with CloudFormation Template&lt;/h3&gt; &#xA;&lt;p&gt;The CloudFormation template for EKS Nodes is published in the S3 bucket &lt;code&gt;amazon-eks&lt;/code&gt; under the path &lt;code&gt;cloudformation&lt;/code&gt;. You can see a list of previous versions by running &lt;code&gt;aws s3 ls s3://amazon-eks/cloudformation/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CloudFormation Version&lt;/th&gt; &#xA;   &lt;th&gt;EKS AMI versions&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/aws/amazon-vpc-cni-k8s/releases&#34;&gt;amazon-vpc-cni-k8s&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2019-09-27&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-(1.14,1.13,1.12,1.11)-v20190927&lt;/td&gt; &#xA;   &lt;td&gt;v1.5.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2019-09-17&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-(1.14,1.13,1.12,1.11)-v20190906&lt;/td&gt; &#xA;   &lt;td&gt;v1.5.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2019-02-11&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-(1.12,1.11,1.10)-v20190327&lt;/td&gt; &#xA;   &lt;td&gt;v1.3.2 (for p3dn.24xlarge instances)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2019-02-11&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-(1.11,1.10)-v20190220&lt;/td&gt; &#xA;   &lt;td&gt;v1.3.2 (for p3dn.24xlarge instances)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2019-02-11&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-(1.11,1.10)-v20190211&lt;/td&gt; &#xA;   &lt;td&gt;v1.3.2 (for p3dn.24xlarge instances)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2018-12-10&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-(1.11,1.10)-v20181210&lt;/td&gt; &#xA;   &lt;td&gt;v1.2.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2018-11-07&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-v25+&lt;/td&gt; &#xA;   &lt;td&gt;v1.2.1 (for t3 and r5 instances)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2018-08-30&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-v23+&lt;/td&gt; &#xA;   &lt;td&gt;v1.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2018-08-21&lt;/td&gt; &#xA;   &lt;td&gt;amazon-eks-node-v23+&lt;/td&gt; &#xA;   &lt;td&gt;v1.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For older versions of the EKS AMI (v20-v22), you can find the CloudFormation templates in the same bucket under the path &lt;code&gt;s3://amazon-eks/1.10.3/2018-06-05/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;AL2 / Linux Kernel Information&lt;/h2&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;amazon-eks-ami&lt;/code&gt; uses a &lt;a href=&#34;https://github.com/awslabs/amazon-eks-ami/raw/e3f1b910f83ad1f27e68312e50474ea6059f052d/eks-worker-al2.json#L46&#34;&gt;source_ami_filter&lt;/a&gt; that selects the latest &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/virtualization_types.html&#34;&gt;hvm&lt;/a&gt; AL2 AMI for the given architecture as the base AMI. For more information on what kernel versions are running on published Amazon EKS optimized Linux AMIs, see &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html&#34;&gt;the public documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When building an AMI, you can set the &lt;code&gt;kernel_version&lt;/code&gt; to &lt;code&gt;4.14&lt;/code&gt; or &lt;code&gt;5.4&lt;/code&gt; to customize the kernel version. The &lt;a href=&#34;https://github.com/awslabs/amazon-eks-ami/raw/master/scripts/upgrade_kernel.sh#L26&#34;&gt;upgrade_kernel.sh script&lt;/a&gt; contains the logic for updating and upgrading the kernel. For Kubernetes versions 1.18 and below, it uses the &lt;code&gt;4.14&lt;/code&gt; kernel if not set, and it will install the latest patches. For Kubernetes version 1.19 and above, it uses the &lt;code&gt;5.4&lt;/code&gt; kernel if not set.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;For security issues or concerns, please do not open an issue or pull request on GitHub. Please report any suspected or confirmed security issues to AWS Security &lt;a href=&#34;https://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;https://aws.amazon.com/security/vulnerability-reporting/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License Summary&lt;/h2&gt; &#xA;&lt;p&gt;This sample code is made available under a modified MIT license. See the LICENSE file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ohmyzsh/ohmyzsh</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/ohmyzsh/ohmyzsh</id>
    <link href="https://github.com/ohmyzsh/ohmyzsh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🙃 A delightful community-driven (with 2,000+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://ohmyzsh.s3.amazonaws.com/omz-ansi-github.png&#34; alt=&#34;Oh My Zsh&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt; configuration.&lt;/p&gt; &#xA;&lt;p&gt;Sounds boring. Let&#39;s try again.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once installed, your terminal shell will become the talk of the town &lt;em&gt;or your money back!&lt;/em&gt; With each keystroke in your command prompt, you&#39;ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, &lt;em&gt;&#34;that is amazing! are you some sort of genius?&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, you&#39;ll begin to get the sort of attention that you have always felt you deserved. ...or maybe you&#39;ll use the time that you&#39;re saving to start flossing more often. 😬&lt;/p&gt; &#xA;&lt;p&gt;To learn more, visit &lt;a href=&#34;https://ohmyz.sh&#34;&gt;ohmyz.sh&lt;/a&gt;, follow &lt;a href=&#34;https://twitter.com/ohmyzsh&#34;&gt;@ohmyzsh&lt;/a&gt; on Twitter, and join us on &lt;a href=&#34;https://discord.gg/ohmyzsh&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ohmyzsh/ohmyzsh/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ohmyzsh&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ohmyzsh?label=Follow+@ohmyzsh&amp;amp;style=flat&#34; alt=&#34;Follow @ohmyzsh&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ohmyzsh&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/642496866407284746&#34; alt=&#34;Discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/ohmyzsh/ohmyzsh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready-blue?logo=gitpod&#34; alt=&#34;Gitpod ready&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huntr.dev/bounties/disclose/?utm_campaign=ohmyzsh%2Fohmyzsh&amp;amp;utm_medium=social&amp;amp;utm_source=github&amp;amp;target=https%3A%2F%2Fgithub.com%2Fohmyzsh%2Fohmyzsh&#34;&gt;&lt;img src=&#34;https://cdn.huntr.dev/huntr_security_badge_mono.svg?sanitize=true&#34; alt=&#34;huntr.dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#basic-installation&#34;&gt;Basic Installation&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-inspection&#34;&gt;Manual inspection&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-oh-my-zsh&#34;&gt;Using Oh My Zsh&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#plugins&#34;&gt;Plugins&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enabling-plugins&#34;&gt;Enabling Plugins&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-plugins&#34;&gt;Using Plugins&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#themes&#34;&gt;Themes&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#selecting-a-theme&#34;&gt;Selecting a Theme&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-topics&#34;&gt;Advanced Topics&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-installation&#34;&gt;Advanced Installation&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-directory&#34;&gt;Custom Directory&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#unattended-install&#34;&gt;Unattended install&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installing-from-a-forked-repository&#34;&gt;Installing from a forked repository&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-installation&#34;&gt;Manual Installation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installation-problems&#34;&gt;Installation Problems&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-plugins-and-themes&#34;&gt;Custom Plugins and Themes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-updates&#34;&gt;Getting Updates&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-updates&#34;&gt;Manual Updates&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#uninstalling-oh-my-zsh&#34;&gt;Uninstalling Oh My Zsh&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#how-do-i-contribute-to-oh-my-zsh&#34;&gt;How do I contribute to Oh My Zsh?&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#do-not-send-us-themes&#34;&gt;Do NOT send us themes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#follow-us&#34;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#merchandise&#34;&gt;Merchandise&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#about-planet-argon&#34;&gt;About Planet Argon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL2 is preferred, but cygwin or msys also mostly work.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zsh.org&#34;&gt;Zsh&lt;/a&gt; should be installed (v4.3.9 or more recent is fine but we prefer 5.0.8 and newer). If not pre-installed (run &lt;code&gt;zsh --version&lt;/code&gt; to confirm), check the following wiki instructions here: &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH&#34;&gt;Installing ZSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; should be installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt; should be installed (recommended v2.4.11 or higher)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic Installation&lt;/h3&gt; &#xA;&lt;p&gt;Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt; or another similar tool.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sh -c &#34;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sh -c &#34;$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that any previous &lt;code&gt;.zshrc&lt;/code&gt; will be renamed to &lt;code&gt;.zshrc.pre-oh-my-zsh&lt;/code&gt;. After installation, you can move the configuration you want to preserve into the new &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Manual inspection&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s a good idea to inspect the install script from projects you don&#39;t yet know. You can do that by downloading the install script first, looking through it so everything looks normal, then running it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&#xA;sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Oh My Zsh&lt;/h2&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Oh My Zsh comes with a shitload of plugins for you to take advantage of. You can take a look in the &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins&#34;&gt;plugins&lt;/a&gt; directory and/or the &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins&#34;&gt;wiki&lt;/a&gt; to see what&#39;s currently available.&lt;/p&gt; &#xA;&lt;h4&gt;Enabling Plugins&lt;/h4&gt; &#xA;&lt;p&gt;Once you spot a plugin (or several) that you&#39;d like to use with Oh My Zsh, you&#39;ll need to enable them in the &lt;code&gt;.zshrc&lt;/code&gt; file. You&#39;ll find the zshrc file in your &lt;code&gt;$HOME&lt;/code&gt; directory. Open it with your favorite text editor and you&#39;ll see a spot to list all the plugins you want to load.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;vi ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, this might begin to look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;plugins=(&#xA;  git&#xA;  bundler&#xA;  dotenv&#xA;  macos&#xA;  rake&#xA;  rbenv&#xA;  ruby&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that the plugins are separated by whitespace (spaces, tabs, new lines...). &lt;strong&gt;Do not&lt;/strong&gt; use commas between them or it will break.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Using Plugins&lt;/h4&gt; &#xA;&lt;p&gt;Each built-in plugin includes a &lt;strong&gt;README&lt;/strong&gt;, documenting it. This README should show the aliases (if the plugin adds any) and extra goodies that are included in that particular plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;ll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred and fifty themes now bundled. Most of them have &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&#34;&gt;screenshots&lt;/a&gt; on the wiki (We are working on updating this!). Check them out!&lt;/p&gt; &#xA;&lt;h4&gt;Selecting a Theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Robby&#39;s theme is the default one. It&#39;s not the fanciest one. It&#39;s not the simplest one. It&#39;s just the right one (for him).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you find a theme that you&#39;d like to use, you will need to edit the &lt;code&gt;~/.zshrc&lt;/code&gt; file. You&#39;ll see an environment variable (all caps) in there that looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME=&#34;robbyrussell&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a different theme, simply change the value to match the name of your desired theme. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME=&#34;agnoster&#34; # (this is one of the fancy ones)&#xA;# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: many themes require installing a &lt;a href=&#34;https://github.com/powerline/fonts&#34;&gt;Powerline Font&lt;/a&gt; or a &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;Nerd Font&lt;/a&gt; in order to render properly. Without them, these themes will render &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#i-have-a-weird-character-in-my-prompt&#34;&gt;weird prompt symbols&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open up a new terminal window and your prompt should look something like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png&#34; alt=&#34;Agnoster theme&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case you did not find a suitable theme for your needs, please have a look at the wiki for &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&#34;&gt;more of them&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME=&#34;random&#34; # (...please let it be pie... please be some pie..)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And if you want to pick random theme from a list of your favorite themes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME_RANDOM_CANDIDATES=(&#xA;  &#34;robbyrussell&#34;&#xA;  &#34;agnoster&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you only know which themes you don&#39;t like, you can add them similarly to an ignored list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME_RANDOM_IGNORED=(pygmalion tjkirch_mod)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;If you have some more questions or issues, you might find a solution in our &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Topics&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re the type that likes to get their hands dirty, these sections might resonate.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Installation&lt;/h3&gt; &#xA;&lt;p&gt;Some users may want to manually install Oh My Zsh, or change the default path or other settings that the installer accepts (these settings are also documented at the top of the install script).&lt;/p&gt; &#xA;&lt;h4&gt;Custom Directory&lt;/h4&gt; &#xA;&lt;p&gt;The default location is &lt;code&gt;~/.oh-my-zsh&lt;/code&gt; (hidden in your home directory, you can access it with &lt;code&gt;cd ~/.oh-my-zsh&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to change the install directory with the &lt;code&gt;ZSH&lt;/code&gt; environment variable, either by running &lt;code&gt;export ZSH=/your/path&lt;/code&gt; before installing, or by setting it before the end of the install pipeline like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH=&#34;$HOME/.dotfiles/oh-my-zsh&#34; sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Unattended install&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re running the Oh My Zsh install script as part of an automated install, you can pass the &lt;code&gt;--unattended&lt;/code&gt; flag to the &lt;code&gt;install.sh&lt;/code&gt; script. This will have the effect of not trying to change the default shell, and it also won&#39;t run &lt;code&gt;zsh&lt;/code&gt; when the installation has finished.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34; &#34;&#34; --unattended&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing from a forked repository&lt;/h4&gt; &#xA;&lt;p&gt;The install script also accepts these variables to allow installation of a different repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;REPO&lt;/code&gt; (default: &lt;code&gt;ohmyzsh/ohmyzsh&lt;/code&gt;): this takes the form of &lt;code&gt;owner/repository&lt;/code&gt;. If you set this variable, the installer will look for a repository at &lt;code&gt;https://github.com/{owner}/{repository}&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;REMOTE&lt;/code&gt; (default: &lt;code&gt;https://github.com/${REPO}.git&lt;/code&gt;): this is the full URL of the git repository clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab, Bitbucket...) or if you want to clone with SSH instead of HTTPS (&lt;code&gt;git@github.com:user/project.git&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE: it&#39;s incompatible with setting the &lt;code&gt;REPO&lt;/code&gt; variable. This setting will take precedence.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BRANCH&lt;/code&gt; (default: &lt;code&gt;master&lt;/code&gt;): you can use this setting if you want to change the default branch to be checked out when cloning the repository. This might be useful for testing a Pull Request, or if you want to use a branch other than &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manual Installation&lt;/h4&gt; &#xA;&lt;h5&gt;1. Clone the repository &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2. &lt;em&gt;Optionally&lt;/em&gt;, backup your existing &lt;code&gt;~/.zshrc&lt;/code&gt; file &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp ~/.zshrc ~/.zshrc.orig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;3. Create a new zsh configuration file &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;p&gt;You can create a new zsh config file by copying the template that we have included for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;4. Change your default shell &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chsh -s $(which zsh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You must log out from your user session and log back in to see this change.&lt;/p&gt; &#xA;&lt;h5&gt;5. Initialize your new zsh configuration &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Once you open up a new terminal window, it should load zsh with Oh My Zsh&#39;s configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Installation Problems&lt;/h3&gt; &#xA;&lt;p&gt;If you have any hiccups installing, here are a few common fixes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You &lt;em&gt;might&lt;/em&gt; need to modify your &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;~/.zshrc&lt;/code&gt; if you&#39;re not able to find some commands after switching to &lt;code&gt;oh-my-zsh&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you installed manually or changed the install location, check the &lt;code&gt;ZSH&lt;/code&gt; environment variable in &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom Plugins and Themes&lt;/h3&gt; &#xA;&lt;p&gt;If you want to override any of the default behaviors, just add a new file (ending in &lt;code&gt;.zsh&lt;/code&gt;) in the &lt;code&gt;custom/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;If you have many functions that go well together, you can put them as a &lt;code&gt;XYZ.plugin.zsh&lt;/code&gt; file in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and then enable this plugin.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and it will be loaded instead of the one in &lt;code&gt;plugins/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Updates&lt;/h2&gt; &#xA;&lt;p&gt;By default, you will be prompted to check for updates every 2 weeks. You can choose other update modes by adding a line to your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatic update without confirmation prompt:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zstyle &#39;:omz:update&#39; mode auto&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Just offer a reminder every few days, if there are updates available:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zstyle &#39;:omz:update&#39; mode reminder&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To disable automatic updates entirely:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zstyle &#39;:omz:update&#39; mode disabled&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: you can control how often Oh My Zsh checks for updates with the following setting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# This will check for updates every 7 days&#xA;zstyle &#39;:omz:update&#39; frequency 7&#xA;# This will check for updates every time you open the terminal (not recommended)&#xA;zstyle &#39;:omz:update&#39; frequency 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Updates&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to update at any point in time (maybe someone just released a new plugin and you don&#39;t want to wait a week?) you just need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;omz update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Magic! 🎉&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling Oh My Zsh&lt;/h2&gt; &#xA;&lt;p&gt;Oh My Zsh isn&#39;t for everyone. We&#39;ll miss you, but we want to make this an easy breakup.&lt;/p&gt; &#xA;&lt;p&gt;If you want to uninstall &lt;code&gt;oh-my-zsh&lt;/code&gt;, just run &lt;code&gt;uninstall_oh_my_zsh&lt;/code&gt; from the command-line. It will remove itself and revert your previous &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; configuration.&lt;/p&gt; &#xA;&lt;h2&gt;How do I contribute to Oh My Zsh?&lt;/h2&gt; &#xA;&lt;p&gt;Before you participate in our delightful community, please read the &lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m far from being a &lt;a href=&#34;https://www.zsh.org/&#34;&gt;Zsh&lt;/a&gt; expert and suspect there are many ways to improve – if you have ideas on how to make the configuration easier to maintain (and faster), don&#39;t hesitate to fork and send pull requests!&lt;/p&gt; &#xA;&lt;p&gt;We also need people to test out pull requests. So take a look through &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/issues&#34;&gt;the open issues&lt;/a&gt; and help where you can.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Do NOT send us themes&lt;/h3&gt; &#xA;&lt;p&gt;We have (more than) enough themes for the time being. Please add your theme to the &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&#34;&gt;external themes&lt;/a&gt; wiki page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn&#39;t be so awesome.&lt;/p&gt; &#xA;&lt;p&gt;Thank you so much!&lt;/p&gt; &#xA;&lt;h2&gt;Follow Us&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on social media:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ohmyzsh&#34;&gt;@ohmyzsh&lt;/a&gt; on Twitter. You should follow it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Oh-My-Zsh-296616263819290/&#34;&gt;Facebook&lt;/a&gt; poke us.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.instagram.com/_ohmyzsh/&#34;&gt;Instagram&lt;/a&gt; tag us in your post showing Oh My Zsh!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/ohmyzsh&#34;&gt;Discord&lt;/a&gt; to chat with us!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Merchandise&lt;/h2&gt; &#xA;&lt;p&gt;We have &lt;a href=&#34;https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github&#34;&gt;stickers, shirts, and coffee mugs available&lt;/a&gt; for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Oh My Zsh is released under the &lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About Planet Argon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg&#34; alt=&#34;Planet Argon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Oh My Zsh was started by the team at &lt;a href=&#34;https://www.planetargon.com/?utm_source=github&#34;&gt;Planet Argon&lt;/a&gt;, a &lt;a href=&#34;https://www.planetargon.com/skills/ruby-on-rails-development?utm_source=github&#34;&gt;Ruby on Rails development agency&lt;/a&gt;. Check out our &lt;a href=&#34;https://www.planetargon.com/open-source?utm_source=github&#34;&gt;other open source projects&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getsentry/self-hosted</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/getsentry/self-hosted</id>
    <link href="https://github.com/getsentry/self-hosted" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sentry, feature-complete and packaged up for low-volume deployments and proofs-of-concept&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Self-Hosted Sentry nightly&lt;/h1&gt; &#xA;&lt;p&gt;Official bootstrap for running your own &lt;a href=&#34;https://sentry.io/&#34;&gt;Sentry&lt;/a&gt; with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker 19.03.6+&lt;/li&gt; &#xA; &lt;li&gt;Compose 1.28.0+&lt;/li&gt; &#xA; &lt;li&gt;4 CPU Cores&lt;/li&gt; &#xA; &lt;li&gt;8 GB RAM&lt;/li&gt; &#xA; &lt;li&gt;20 GB Free Disk Space&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To get started with all the defaults, simply clone the repo and run &lt;code&gt;./install.sh&lt;/code&gt; in your local check-out. Sentry uses Python 3 by default since December 4th, 2020 and Sentry 21.1.0 is the last version to support Python 2.&lt;/p&gt; &#xA;&lt;p&gt;During the install, a prompt will ask if you want to create a user account. If you require that the install not be blocked by the prompt, run &lt;code&gt;./install.sh --skip-user-prompt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thinking of not managing this yourself? Check out the &lt;a href=&#34;https://docs.sentry.io/product/sentry-basics/migration/&#34;&gt;SaaS migration docs&lt;/a&gt; or &lt;a href=&#34;https://sentry.io/from/self-hosted&#34;&gt;contact us&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://develop.sentry.dev/self-hosted/&#34;&gt;our documentation&lt;/a&gt; for everything else.&lt;/p&gt; &#xA;&lt;h3&gt;Customize DotEnv (.env) file&lt;/h3&gt; &#xA;&lt;p&gt;Environment specific configurations can be done in the &lt;code&gt;.env.custom&lt;/code&gt; file. It will be located in the root directory of the Sentry installation.&lt;/p&gt; &#xA;&lt;p&gt;By default, there exists no &lt;code&gt;.env.custom&lt;/code&gt; file. In this case, you can manually add this file by copying the &lt;code&gt;.env&lt;/code&gt; file to a new &lt;code&gt;.env.custom&lt;/code&gt; file and adjust your settings in the &lt;code&gt;.env.custom&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Please keep in mind to check the &lt;code&gt;.env&lt;/code&gt; file for changes, when you perform an upgrade of Sentry, so that you can adjust your &lt;code&gt;.env.custom&lt;/code&gt; accordingly, if required.&lt;/p&gt; &#xA;&lt;h3&gt;Enhance Sentry image&lt;/h3&gt; &#xA;&lt;p&gt;To install plugins and their dependencies or make other modifications to the Sentry base image, copy &lt;code&gt;sentry/enhance-image.example.sh&lt;/code&gt; to &lt;code&gt;sentry/enhance-image.sh&lt;/code&gt; and add necessary steps there. For example, you can use &lt;code&gt;apt-get&lt;/code&gt; to install dependencies and use &lt;code&gt;pip&lt;/code&gt; to install plugins.&lt;/p&gt; &#xA;&lt;p&gt;After making modifications to &lt;code&gt;sentry/enhance-image.sh&lt;/code&gt;, run &lt;code&gt;./install.sh&lt;/code&gt; again to apply them.&lt;/p&gt; &#xA;&lt;h2&gt;Tips &amp;amp; Tricks&lt;/h2&gt; &#xA;&lt;h3&gt;Event Retention&lt;/h3&gt; &#xA;&lt;p&gt;Sentry comes with a cleanup cron job that prunes events older than &lt;code&gt;90 days&lt;/code&gt; by default. If you want to change that, you can change the &lt;code&gt;SENTRY_EVENT_RETENTION_DAYS&lt;/code&gt; environment variable in &lt;code&gt;.env&lt;/code&gt; or simply override it in your environment. If you do not want the cleanup cron, you can remove the &lt;code&gt;sentry-cleanup&lt;/code&gt; service from the &lt;code&gt;docker-compose.yml&lt;/code&gt;file.&lt;/p&gt; &#xA;&lt;h3&gt;Installing a specific SHA&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install a specific release of Sentry, use the tags/releases on this repo.&lt;/p&gt; &#xA;&lt;p&gt;We continuously push the Docker image for each commit made into &lt;a href=&#34;https://github.com/getsentry/sentry&#34;&gt;Sentry&lt;/a&gt;, and other services such as &lt;a href=&#34;https://github.com/getsentry/snuba&#34;&gt;Snuba&lt;/a&gt; or &lt;a href=&#34;https://github.com/getsentry/symbolicator&#34;&gt;Symbolicator&lt;/a&gt; to &lt;a href=&#34;https://hub.docker.com/u/getsentry&#34;&gt;our Docker Hub&lt;/a&gt; and tag the latest version on master as &lt;code&gt;:nightly&lt;/code&gt;. This is also usually what we have on sentry.io and what the install script uses. You can use a custom Sentry image, such as a modified version that you have built on your own, or simply a specific commit hash by setting the &lt;code&gt;SENTRY_IMAGE&lt;/code&gt; environment variable to that image name before running &lt;code&gt;./install.sh&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SENTRY_IMAGE=getsentry/sentry:83b1380 ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this may not work for all commit SHAs as this repository evolves with Sentry and its satellite projects. It is highly recommended to check out a version of this repository that is close to the timestamp of the Sentry commit you are installing.&lt;/p&gt; &#xA;&lt;h3&gt;Using Linux&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Linux and you need to use &lt;code&gt;sudo&lt;/code&gt; when running &lt;code&gt;./install.sh&lt;/code&gt;, make sure to place the environment variable &lt;em&gt;after&lt;/em&gt; &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo SENTRY_IMAGE=us.gcr.io/sentryio/sentry:83b1380 ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where you replace &lt;code&gt;83b1380&lt;/code&gt; with the sha you want to use.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nvie/gitflow</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/nvie/gitflow</id>
    <link href="https://github.com/nvie/gitflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Git extensions to provide high-level repository operations for Vincent Driessen&#39;s branching model.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;git-flow&lt;/h1&gt; &#xA;&lt;p&gt;A collection of Git extensions to provide high-level repository operations for Vincent Driessen&#39;s &lt;a href=&#34;http://nvie.com/git-model&#34; title=&#34;original&#xA;blog post&#34;&gt;branching model&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;For the best introduction to get started with &lt;code&gt;git flow&lt;/code&gt;, please read Jeff Kreeftmeijer&#39;s blog post:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/&#34;&gt;http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or have a look at one of these screen casts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://buildamodule.com/video/change-management-and-version-control-deploying-releases-features-and-fixes-with-git-how-to-use-a-scalable-git-branching-model-called-gitflow&#34;&gt;How to use a scalable Git branching model called git-flow&lt;/a&gt; (by Build a Module)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://vimeo.com/16018419&#34;&gt;A short introduction to git-flow&lt;/a&gt; (by Mark Derricutt)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codesherpas.com/screencasts/on_the_path_gitflow.mov&#34;&gt;On the path with git-flow&lt;/a&gt; (by Dave Bock)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing git-flow&lt;/h2&gt; &#xA;&lt;p&gt;See the Wiki for up-to-date &lt;a href=&#34;https://github.com/nvie/gitflow/wiki/Installation&#34;&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integration with your shell&lt;/h2&gt; &#xA;&lt;p&gt;For those who use the &lt;a href=&#34;http://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt; or &lt;a href=&#34;http://www.zsh.org&#34;&gt;ZSH&lt;/a&gt; shell, please check out the excellent work on the &lt;a href=&#34;http://github.com/bobthecow/git-flow-completion&#34;&gt;git-flow-completion&lt;/a&gt; project by &lt;a href=&#34;http://github.com/bobthecow&#34;&gt;bobthecow&lt;/a&gt;. It offers tab-completion for all git-flow subcommands and branch names.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://github.com/nvie/gitflow/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; section of the project Wiki.&lt;/p&gt; &#xA;&lt;h2&gt;Please help out&lt;/h2&gt; &#xA;&lt;p&gt;This project is still under development. Feedback and suggestions are very welcome and I encourage you to use the &lt;a href=&#34;http://github.com/nvie/gitflow/issues&#34;&gt;Issues list&lt;/a&gt; on Github to provide that feedback.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to fork this repo and to commit your additions. For a list of all contributors, please see the &lt;a href=&#34;https://raw.githubusercontent.com/nvie/gitflow/develop/AUTHORS&#34;&gt;AUTHORS&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Any questions, tips, or general discussion can be posted to our Google group: &lt;a href=&#34;http://groups.google.com/group/gitflow-users&#34;&gt;http://groups.google.com/group/gitflow-users&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Fork the repository. Then, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive git@github.com:&amp;lt;username&amp;gt;/gitflow.git&#xA;cd gitflow&#xA;git branch master origin/master&#xA;git flow init -d&#xA;git flow feature start &amp;lt;your feature&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, do work and commit your changes. &lt;strong&gt;Hint&lt;/strong&gt;: &lt;code&gt;export PATH=`pwd`:$PATH&lt;/code&gt; from within the gitflow directory makes sure you&#39;re using the version of gitflow you&#39;re currently developing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git flow feature publish &amp;lt;your feature&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When done, open a pull request to your feature branch.&lt;/p&gt; &#xA;&lt;h2&gt;License terms&lt;/h2&gt; &#xA;&lt;p&gt;git-flow is published under the liberal terms of the BSD License, see the &lt;a href=&#34;https://raw.githubusercontent.com/nvie/gitflow/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file. Although the BSD License does not require you to share any modifications you make to the source code, you are very much encouraged and invited to contribute back your modifications to the community, preferably in a Github fork, of course.&lt;/p&gt; &#xA;&lt;h3&gt;Initialization&lt;/h3&gt; &#xA;&lt;p&gt;To initialize a new repo with the basic branch structure, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;git flow init [-d]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will then interactively prompt you with some questions on which branches you would like to use as development and production branches, and how you would like your prefixes be named. You may simply press Return on any of those questions to accept the (sane) default suggestions.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;-d&lt;/code&gt; flag will accept all defaults.&lt;/p&gt; &#xA;&lt;h3&gt;Creating feature/release/hotfix/support branches&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To list/start/finish feature branches, use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  git flow feature&#xA;  git flow feature start &amp;lt;name&amp;gt; [&amp;lt;base&amp;gt;]&#xA;  git flow feature finish &amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For feature branches, the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; arg must be a commit on &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To push/pull a feature branch to the remote repository, use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  git flow feature publish &amp;lt;name&amp;gt;&#xA;    git flow feature pull &amp;lt;remote&amp;gt; &amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To list/start/finish release branches, use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  git flow release&#xA;  git flow release start &amp;lt;release&amp;gt; [&amp;lt;base&amp;gt;]&#xA;  git flow release finish &amp;lt;release&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For release branches, the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; arg must be a commit on &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To list/start/finish hotfix branches, use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  git flow hotfix&#xA;  git flow hotfix start &amp;lt;release&amp;gt; [&amp;lt;base&amp;gt;]&#xA;  git flow hotfix finish &amp;lt;release&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For hotfix branches, the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; arg must be a commit on &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To list/start support branches, use:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  git flow support&#xA;  git flow support start &amp;lt;release&amp;gt; &amp;lt;base&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For support branches, the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; arg must be a commit on &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Showing your appreciation&lt;/h1&gt; &#xA;&lt;p&gt;A few people already requested it, so now it&#39;s here: a Flattr button.&lt;/p&gt; &#xA;&lt;p&gt;Of course, the best way to show your appreciation for the original &lt;a href=&#34;http://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;blog post&lt;/a&gt; or the git-flow tool itself remains contributing to the community. If you&#39;d like to show your appreciation in another way, however, consider Flattr&#39;ing me:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://flattr.com/thing/53771/git-flow&#34;&gt;&lt;img src=&#34;http://api.flattr.com/button/button-static-50x60.png&#34; alt=&#34;Flattr this&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>confluentinc/demo-scene</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/confluentinc/demo-scene</id>
    <link href="https://github.com/confluentinc/demo-scene" rel="alternate"></link>
    <summary type="html">&lt;p&gt;👾Scripts and samples to support Confluent Demos and Talks. ⚠️Might be rough around the edges ;-) 👉For automated tutorials and QA&#39;d code, see https://github.com/confluentinc/examples/&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/images/cover.png&#34; alt=&#34;demo-scene&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scripts and samples to support Confluent Platform talks. May be rough around the edges. For automated tutorials and QA&#39;d code, see &lt;a href=&#34;https://github.com/confluentinc/examples/&#34;&gt;https://github.com/confluentinc/examples/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;You may well need to allocate Docker 8GB when running these. Avoid allocating all your machine&#39;s cores to Docker as this may cause the machine to become unresponsive when running large stacks. On a four-core Mac Book two cores for Docker should be fine.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;h3&gt;Livestreams&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLa7VYi0yPIH26-ppF0Gcsx-YVQQbNjDEt&#34;&gt;🎥 recordings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/livestreams&#34;&gt;Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Applications&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/telegram-bot-carparks&#34;&gt;Building a Telegram bot with Go, Apache Kafka, and ksqlDB&lt;/a&gt; (&lt;a href=&#34;https://rmoff.dev/carpark-telegram-bot&#34;&gt;🎥 talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streaming-pacman&#34;&gt;Streaming Pac-Man&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/event-driven-microservices-workshop&#34;&gt;Workshop: Event Driven Microservices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streaming-movies-workshop&#34;&gt;Workshop: Choosing Christmas Movies with Kubernetes, Spring Boot, and Apache Kafka&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=ampmQg33JtY&#34;&gt;🎥 recording&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksummit-operator-demo&#34;&gt;Kafka Summit NYC: Confluent Operator Demo aka Escape from EKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/testing-streams&#34;&gt;Kafka Summit 2020 - I don’t always test my streams, but when I do, I do it in production!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/wordcount-spring-cloud-stream-kotlin&#34;&gt;Apache Kafka® Event Streaming Platform For Kotlin Developers&lt;/a&gt; (&lt;a href=&#34;https://youtu.be/Y-sqGKsnSHI&#34;&gt;🎥 recording&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/pickup-data-adventure-game&#34;&gt;PICKUP DATA - A Kafka Adventure Game&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kpi-dashboard&#34;&gt;Dashing off a Dashboard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Data pipelines (Database + KSQL + Elasticsearch)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/maritime-ais&#34;&gt;Streaming ETL and Analytics on Confluent with Maritime AIS data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/pipeline-to-the-cloud&#34;&gt;Pipeline to the cloud&lt;/a&gt; - on-premises RDBMS to Cloud datawarehouse e.g. Snowflake (&lt;a href=&#34;https://www.confluent.io/blog/cloud-analytics-for-on-premises-data-streams-with-kafka/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/rail-data-streaming-pipeline&#34;&gt;Rail data streaming pipeline&lt;/a&gt; (&lt;a href=&#34;https://rmoff.dev/oredev19-on-track-with-kafka&#34;&gt;🗣️talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/build-a-streaming-pipeline&#34;&gt;Apache Kafka and KSQL in Action: Let’s Build a Streaming Data Pipeline!&lt;/a&gt; (&lt;a href=&#34;https://go.rmoff.net/devoxxuk19&#34;&gt;🗣️talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mysql-debezium-ksql-elasticsearch&#34;&gt;MySQL / Debezium CDC / KSQL / Elasticsearch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/oracle-ksql-elasticsearch&#34;&gt;Oracle CDC / KSQL / Elasticsearch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/postgres-debezium-ksql-elasticsearch&#34;&gt;Postgres / Debezium CDC / KSQL / Elasticsearch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/no-more-silos&#34;&gt;CDC demo with MySQL&lt;/a&gt; (&lt;a href=&#34;http://rmoff.dev/ksny19-no-more-silos&#34;&gt;🗣️talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/no-more-silos-oracle&#34;&gt;CDC demo with Oracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/gcp-pipeline&#34;&gt;Building data pipelines with Confluent Cloud and GCP (BigQuery, GCS, etc)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mssql-to-kafka-with-ksqldb&#34;&gt;MS SQL with Debezium and ksqlDB&lt;/a&gt; (&lt;a href=&#34;https://rmoff.net/2020/09/18/using-the-debezium-ms-sql-connector-with-ksqldb-embedded-kafka-connect/&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streaming-etl-mongodb-snowflake&#34;&gt;Streaming ETL pipeline from MongoDB to Snowflake with Apache Kafka®&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mongodb-demo&#34;&gt;Bridge to Cloud (and back!) with Confluent and MongoDB Atlas&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ksqlDB (previously known as KSQL)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/introduction-to-ksqldb&#34;&gt;Introduction to ksqlDB 01&lt;/a&gt; (&lt;a href=&#34;https://rmoff.dev/ksqldb-slides&#34;&gt;🗣️talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksql-intro&#34;&gt;Introduction to KSQL 02&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksqldb-tombstones&#34;&gt;ksqlDB tombstones&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksqldb-twitter&#34;&gt;Using Twitter data with ksqlDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksql-udf-advanced-example&#34;&gt;KSQL UDF Advanced Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksql-troubleshooting&#34;&gt;KSQL Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksql-atm-fraud-detection&#34;&gt;ATM Fraud detection with Kafka and KSQL&lt;/a&gt; (&lt;a href=&#34;https://talks.rmoff.net/Cw9hbI/atm-fraud-detection-with-apache-kafka-and-ksql&#34;&gt;🗣️talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streams-movie-demo&#34;&gt;Kafka Streams/KSQL Movie Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mqtt-tracker&#34;&gt;KSQL MQTT demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksql-dump&#34;&gt;KSQL Dump Utility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ksql-workshop&#34;&gt;KSQL workshop&lt;/a&gt; (more recent version is &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/build-a-streaming-pipeline/workshop/&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/multi-cluster-connect-and-ksql&#34;&gt;Multi-node ksqlDB and Kafka Connect clusters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streaming-etl-mongodb-snowflake&#34;&gt;Streaming ETL pipeline from MongoDB to Snowflake with Apache Kafka®&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mongodb-demo&#34;&gt;Bridge to Cloud (and back!) with Confluent and MongoDB Atlas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ibm-demo&#34;&gt;Confluent + IBM Demo&lt;/a&gt; Read data from IBM MQ and IBM DB2, join with ksqlDB, sink to IBM MQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kafka Connect&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kafka-connect-single-message-transforms&#34;&gt;Single Message Transform in Kafka Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/connect-5.3-improvements&#34;&gt;Improvements Kafka Connect in Apache Kafka 2.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kafka-connect-zero-to-hero&#34;&gt;From Zero to Hero with Kafka Connect&lt;/a&gt; (&lt;a href=&#34;https://rmoff.dev/crunch19-zero-to-hero-kafka-connect&#34;&gt;🗣️talk&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/connect-deepdive&#34;&gt;Kafka Connect Converters and Serialization&lt;/a&gt; (&lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/connect-cluster&#34;&gt;Building a Kafka Connect cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/connect-error-handling&#34;&gt;Kafka Connect error handling&lt;/a&gt; (&lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-error-handling-dead-letter-queues/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/multi-cluster-connect-and-ksql&#34;&gt;Multi-node ksqlDB and Kafka Connect clusters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Specific connectors &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kafka-to-s3&#34;&gt; 👉 S3 Sink&lt;/a&gt; (🎥 &lt;a href=&#34;https://rmoff.dev/kafka-s3-video&#34;&gt;tutorial&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kafka-to-database&#34;&gt; 👉 Database&lt;/a&gt; (tutorial &lt;a href=&#34;https://rmoff.dev/kafka-jdbc-video&#34;&gt;🎥 1&lt;/a&gt; / &lt;a href=&#34;https://rmoff.dev/ksqldb-jdbc-sink-video&#34;&gt;🎥 2&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kafka-to-elasticsearch&#34;&gt; 👉 Elasticsearch&lt;/a&gt; (🎥 &lt;a href=&#34;https://rmoff.dev/kafka-elasticsearch-video&#34;&gt;Tutorial&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/rss-feed-into-kafka&#34;&gt;RSS feed into Kafka&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/csv-to-kafka&#34;&gt;Loading CSV data into Kafka&lt;/a&gt; (&lt;a href=&#34;https://rmoff.dev/csv-into-kafka&#34;&gt;🎥 Tutorial&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/xml-to-kafka&#34;&gt;Loading XML data into Kafka&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/connect-jdbc&#34;&gt;Kafka Connect JDBC Source demo environment&lt;/a&gt; (&lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-jdbc-source-connector/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/influxdb-and-kafka&#34;&gt;InfluxDB &amp;amp; Kafka Connect&lt;/a&gt; (&lt;a href=&#34;https://rmoff.net/2020/01/23/notes-on-getting-data-into-influxdb-from-kafka-with-kafka-connect/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/rabbitmq-into-kafka&#34;&gt;RabbitMQ into Kafka&lt;/a&gt; (&lt;a href=&#34;https://rmoff.net/2020/01/08/streaming-messages-from-rabbitmq-into-kafka-with-kafka-connect/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mqtt-connect-connector-demo&#34;&gt;MQTT Connect Connector Demo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/syslog&#34;&gt;Example Kafka Connect syslog configuration and Docker Compose&lt;/a&gt; (see blog series &lt;a href=&#34;https://www.confluent.io/blog/real-time-syslog-processing-apache-kafka-ksql-part-1-filtering/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;1&lt;/a&gt;/&lt;a href=&#34;https://www.confluent.io/blog/real-time-syslog-processing-with-apache-kafka-and-ksql-part-2-event-driven-alerting-with-slack/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;2&lt;/a&gt;/&lt;a href=&#34;https://www.confluent.io/blog/real-time-syslog-processing-apache-kafka-ksql-enriching-events-with-external-data/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;3&lt;/a&gt; and standalone articles &lt;a href=&#34;https://rmoff.net/2019/12/20/analysing-network-behaviour-with-ksqldb-and-mongodb/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://rmoff.net/2019/12/18/detecting-and-analysing-ssh-attacks-with-ksqldb/?utm_campaign=rmoff&amp;amp;utm_source=demo-scene&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/azure-sqldw-sink-connector&#34;&gt;Azure SQL Data Warehouse Connector Sink Demo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ibm-demo&#34;&gt;Confluent + IBM Demo&lt;/a&gt; Read data from IBM MQ and IBM DB2, join with ksqlDB, sink to IBM MQ&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/solace&#34;&gt;Solace Sink/Source Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Confluent Cloud&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/getting-started-with-ccloud-java&#34;&gt;Getting Started with Confluent Cloud using Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/getting-started-with-ccloud-golang&#34;&gt;Getting Started with Confluent Cloud using Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streaming-pacman&#34;&gt;Streaming Pac-Man&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ccloud-cube-demo&#34;&gt;&#34;The Cube&#34; Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ccloud-replicator&#34;&gt;Using Replicator with Confluent Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/streaming-etl-mongodb-snowflake&#34;&gt;Streaming ETL pipeline from MongoDB to Snowflake with Apache Kafka®&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/micronaut-lambda&#34;&gt;Micronaut &amp;amp; AWS Lambda on Confluent Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/mongodb-demo&#34;&gt;Bridge to Cloud (and back!) with Confluent and MongoDB Atlas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/micronaut-pizza-gen&#34;&gt;Random Pizza Generator with Micronaut on Confluent Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/python-microservices&#34;&gt;Random Pizza Generator with Flask and Python on Confluent Cloud&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Confluent Platform&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/self-balancing&#34;&gt;Self-Balancing Clusters Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/tiered-storage&#34;&gt;Tiered Storage Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/cluster-linking&#34;&gt;Cluster Linking Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/adminrest&#34;&gt;Confluent Admin REST APIs Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/ansible-tower&#34;&gt;CP-Ansible on Ansible Tower&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/kafka-ecosystem&#34;&gt;Kafka as a Platform: the Ecosystem from the Ground Up&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=qjTZ4UeJdoI&#34;&gt;🎥 recording&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/export-import-with-kafkacat&#34;&gt;Hacky export/import between Kafka clusters&lt;/a&gt; using &lt;code&gt;kafkacat&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose for just the &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/community-components-only&#34;&gt;community licensed components of Confluent Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/topic-tailer&#34;&gt;Topic Tailer&lt;/a&gt;, stream topics to the browser using websockets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/scalable-payment-processing&#34;&gt;KPay payment processing example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/industry-themes&#34;&gt;Industry themes (e.g. banking Next Best Offer)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/distributed-tracing&#34;&gt;Distributed tracing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/sonos&#34;&gt;Analysing Sonos data in Kafka&lt;/a&gt; (&lt;a href=&#34;https://rmoff.net/2020/01/21/monitoring-sonos-with-ksqldb-influxdb-and-grafana/&#34;&gt;✍️ blog&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/wifi-fun&#34;&gt;Analysing Wi-Fi pcap data with Kafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/twitter-streams&#34;&gt;Twitter streams&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/twitter-streams-operator&#34;&gt;Operator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/demo-scene/master/gen-test-data&#34;&gt;Produce Test Kafka Data&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback &amp;amp; Questions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bugs/issues with demo: raise an issue on this github project&lt;/li&gt; &#xA; &lt;li&gt;General question/assistance: &lt;a href=&#34;https://confluent.io/community/ask-the-community/&#34;&gt;https://confluent.io/community/ask-the-community/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-dev-containers</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/microsoft/vscode-dev-containers</id>
    <link href="https://github.com/microsoft/vscode-dev-containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository of development container definitions for the VS Code Remote - Containers extension and GitHub Codespaces&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VS Code Remote / GitHub Codespaces Container Definitions&lt;/h1&gt; &#xA;&lt;table style=&#34;width: 100%; border-style: none;&#34;&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width: 140px; text-align: center;&#34;&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/download/extension&#34;&gt;&lt;img width=&#34;128px&#34; src=&#34;https://microsoft.github.io/vscode-remote-release/images/remote-extensionpack.png&#34; alt=&#34;Visual Studio Code logo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Visual Studio Code Remote Development and GitHub Codespaces&lt;/strong&gt;&lt;br&gt; &lt;i&gt;Open your code in the cloud, in a local container, on a remote machine, or in WSL and take advantage of VS Code&#39;s full feature set. &lt;/i&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. The &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;VS Code Remote - Containers&lt;/a&gt; extension and &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; allow you to open or clone code in a local or cloud-hosted dev container and take advantage of VS Code&#39;s full development feature set.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains a set of &lt;strong&gt;dev container definitions&lt;/strong&gt; to help get you up and running with a containerized environment. The definitions describe the appropriate container image, runtime arguments for starting the container, and VS Code extensions that should be installed. Each provides a container configuration file (&lt;code&gt;devcontainer.json&lt;/code&gt;) and other needed files that you can drop into any existing folder as a starting point for containerizing your project. You can use the the &lt;strong&gt;Add Development Container Configuration Files...&lt;/strong&gt; command to add one to your project or codespace.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; repositories may also be of interest if you are looking for complete sample projects.&lt;/p&gt; &#xA;&lt;h2&gt;Adding a definition to a project or codespace&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Either &lt;a href=&#34;https://aka.ms/ghcs-open-codespace&#34;&gt;create a codespace for your repository&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;set up your local machine&lt;/a&gt; for use with the Remote - Containers extension, start VS Code, and open your project folder.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt;, and select the &lt;strong&gt;Add Development Container Configuration Files...&lt;/strong&gt; command for &lt;strong&gt;Remote-Containers&lt;/strong&gt; or &lt;strong&gt;Codespaces&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Pick one of the recommended definitions from the list or select &lt;strong&gt;Show All Definitions...&lt;/strong&gt; to see all of them. You may need to choose the &lt;strong&gt;From a predefined container configuration definition...&lt;/strong&gt; option if your project has an existing Dockerfile or Docker Compose file. Answer any questions that appear.&lt;/li&gt; &#xA; &lt;li&gt;See the definition&#39;s &lt;code&gt;README&lt;/code&gt; for configuration options. A link is available in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file added to your folder.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;strong&gt;Remote-Containers: Reopen in Container&lt;/strong&gt; to use it locally, or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; from within a codespace.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding a definition to a repository&lt;/h3&gt; &#xA;&lt;p&gt;You can share a customized dev container definition for your project by adding the files under &lt;code&gt;.devcontainer&lt;/code&gt; to source control.&lt;/p&gt; &#xA;&lt;p&gt;Anyone who then opens a local copy of your repo in VS Code will be prompted to reopen the folder in a container, provided they have the &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;Remote - Containers&lt;/a&gt; extension installed. Additionally, this will be used whenever someone creates a codespace in &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; for the repository.&lt;/p&gt; &#xA;&lt;p&gt;Your team now has a consistent environment and tool-chain and new contributors or team members can be productive quickly. First-time contributors will require less guidance and there will be fewer issues related to environment setup.&lt;/p&gt; &#xA;&lt;h2&gt;Sample projects&lt;/h2&gt; &#xA;&lt;p&gt;If you want to try a sample project which already has a dev container, check out one of the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-node&#34;&gt;Node Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-python&#34;&gt;Python Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-go&#34;&gt;Go Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-java&#34;&gt;Java Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-dotnetcore&#34;&gt;.NET Core Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-rust&#34;&gt;Rust Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-cpp&#34;&gt;C++ Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-php&#34;&gt;PHP Sample&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/containers&#34;&gt;&lt;code&gt;containers&lt;/code&gt;&lt;/a&gt; - Contains reusable dev container definitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library&#34;&gt;&lt;code&gt;script-library&lt;/code&gt;&lt;/a&gt; - Includes scripts used in this repository to install things. Also useful in your own Dockerfiles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/container-templates&#34;&gt;&lt;code&gt;container-templates&lt;/code&gt;&lt;/a&gt; - Contains templates for creating your own container definitions or to &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#contributing-dev-container-definitions&#34;&gt;contribute back&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Can I just reuse an existing container image or Docker / Docker Compose configuration?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! If you have a Dockerfile or Docker Compose file in your project/repository, follow the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/#adding&#34;&gt;same steps to add a definition&lt;/a&gt; and you&#39;ll be prompted to select a Dockerfile or Docker Compose file and customize from there. If you then commit these files to a Git repository, you can use it with &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; as well. If you prefer, you can also start up the container manually and &lt;a href=&#34;https://aka.ms/vscode-remote/containers/attach&#34;&gt;attach to it&lt;/a&gt;. However, note that many images will be missing things like &lt;code&gt;git&lt;/code&gt; that you will want to use. There are scripts in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library&#34;&gt;script-library&lt;/a&gt; like the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library/docs/common.md&#34;&gt;common script&lt;/a&gt; that can help adding these to your existing Dockerfile or image.&lt;/p&gt; &#xA;&lt;h3&gt;What is the goal of &lt;code&gt;devcontainer.json&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;devcontainer.json&lt;/code&gt; file is similar to &lt;code&gt;launch.json&lt;/code&gt; for debugging, but designed to launch (or attach to) a development container instead. At its simplest, all you need is a &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file in your project that references an image, &lt;code&gt;Dockerfile&lt;/code&gt;, or &lt;code&gt;docker-compose.yml&lt;/code&gt;, and a few properties. You can &lt;a href=&#34;https://aka.ms/vscode-remote/containers/folder-setup&#34;&gt;adapt it for use&lt;/a&gt; in a wide variety of situations.&lt;/p&gt; &#xA;&lt;h3&gt;Why do Dockerfiles in this repo use &lt;code&gt;RUN&lt;/code&gt; statements with commands separated by &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;Each &lt;code&gt;RUN&lt;/code&gt; statement creates a Docker image &#34;layer&#34;. If one &lt;code&gt;RUN&lt;/code&gt; statement adds temporary contents, these contents remain in this layer in the image even if they are deleted in a subsequent &lt;code&gt;RUN&lt;/code&gt;. This means the image takes more storage locally and results in slower image download times if you publish the image to a registry. You can resolve this problem by using a &lt;code&gt;RUN&lt;/code&gt; statement that includes any clean up steps (separated by &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) after a given operation. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#why-do-dockerfiles-in-this-repository-use-run-statements-with-commands-separated-by-&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more tips.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing and feedback&lt;/h2&gt; &#xA;&lt;p&gt;Have a question or feedback?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contribute or provide feedback for the &lt;a href=&#34;https://github.com/Microsoft/vscode-remote-release/raw/main/CONTRIBUTING.md&#34;&gt;VS Code Remote&lt;/a&gt; extensions or &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/codespaces-feedback&#34;&gt;GitHub Codespaces&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Search &lt;a href=&#34;https://github.com/Microsoft/vscode-dev-containers/issues&#34;&gt;existing issues&lt;/a&gt; with dev container definitions or &lt;a href=&#34;https://github.com/Microsoft/vscode-dev-containers/issues/new&#34;&gt;report a problem&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Contribute a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#contributing-dev-container-definitions&#34;&gt;development container definition&lt;/a&gt; to the repository.&lt;/li&gt; &#xA; &lt;li&gt;Review and file issues to shape the direction of development containers and the dev container CLI in the &lt;a href=&#34;https://github.com/microsoft/dev-container-spec&#34;&gt;dev container spec repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved. &lt;br&gt; Licensed under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For images generated from this repository, see &lt;a href=&#34;https://github.com/microsoft/containerregistry/raw/main/legal/Container-Images-Legal-Notice.md&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/NOTICE.txt&#34;&gt;NOTICE.txt&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openshift/release</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/openshift/release</id>
    <link href="https://github.com/openshift/release" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Release tooling for OpenShift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenShift Release Tooling&lt;/h1&gt; &#xA;&lt;p&gt;This repository holds OpenShift cluster manifests, component build manifests and CI workflow configuration for OpenShift component repositories for both OKD and OCP.&lt;/p&gt; &#xA;&lt;h2&gt;CI Workflow Configuration&lt;/h2&gt; &#xA;&lt;p&gt;To setup a CI workflow for a new repository, use &lt;code&gt;make new-repo&lt;/code&gt;. See the &lt;a href=&#34;https://docs.ci.openshift.org/docs/how-tos/contributing-openshift-release/&#34;&gt;Contributing CI Configuration to the openshift/release Repository&lt;/a&gt; document for detailed information about how to contribute to this repository.&lt;/p&gt; &#xA;&lt;p&gt;Configuration files for CI workflows live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/&#34;&gt;&lt;code&gt;ci-operator/&lt;/code&gt;&lt;/a&gt; and are split into the following categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/config/&#34;&gt;&lt;code&gt;ci-operator/config&lt;/code&gt;&lt;/a&gt; contains configuration for the &lt;code&gt;ci-operator&lt;/code&gt;, detailing builds and tests for component repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/jobs/&#34;&gt;&lt;code&gt;ci-operator/jobs&lt;/code&gt;&lt;/a&gt; contains configuration for &lt;code&gt;prow&lt;/code&gt;, detailing job triggers. In almost all cases, this configuration is generated automatically from the &lt;code&gt;ci-operator&lt;/code&gt; config. For manual edits, see &lt;a href=&#34;https://docs.ci.openshift.org/docs/how-tos/contributing-openshift-release/#component-ci-configuration&#34;&gt;this section&lt;/a&gt; of the contribution document and the &lt;a href=&#34;https://github.com/kubernetes/test-infra/raw/master/prow/README.md#how-to-add-new-jobs&#34;&gt;upstream configuration document&lt;/a&gt;. Prefer the &lt;code&gt;ci-operator&lt;/code&gt; config whenever possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/step-registry/&#34;&gt;&lt;code&gt;ci-operator/step-registry&lt;/code&gt;&lt;/a&gt; contains the registry of reusable test steps and workflows. See the documentation for this content &lt;a href=&#34;https://docs.ci.openshift.org/docs/architecture/step-registry/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[LEGACY]&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/templates/&#34;&gt;&lt;code&gt;ci-operator/templates&lt;/code&gt;&lt;/a&gt; contains black-box test workflows for use by the &lt;code&gt;ci-operator&lt;/code&gt;. The parent directory&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator#end-to-end-tests&#34;&gt;README&lt;/a&gt; documents how to use them. See the &lt;a href=&#34;https://github.com/openshift/ci-tools/raw/master/TEMPLATES.md&#34;&gt;template document&lt;/a&gt; for general information on template tests. Templates are legacy and new ones should not be added. Multi-stage tests using steps from the shared registry should be used instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cluster and Service Configuration Manifests&lt;/h2&gt; &#xA;&lt;h3&gt;Core Services and Configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Only &lt;code&gt;core-services/secrets&lt;/code&gt; folder is applied to the cluster api.ci.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Except &lt;a href=&#34;https://docs.ci.openshift.org/docs/how-tos/adding-a-new-secret-to-ci/&#34;&gt;user secret management&lt;/a&gt;, no services are running on &lt;code&gt;api.ci&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Additional Services and Configuration (legacy)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;This folder is no longer applied to the cluster api.ci which is going to be offline soon.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cluster Configuration Manifests (legacy)&lt;/h3&gt; &#xA;&lt;p&gt;Manifests for cluster provisioning and installation live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/&#34;&gt;&lt;code&gt;cluster/&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&#34;https://api.ci.openshift.org/&#34;&gt;OpenShift CI cluster&lt;/a&gt; is configured with the manifests under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/ci/&#34;&gt;&lt;code&gt;cluster/ci/&lt;/code&gt;&lt;/a&gt;. (&lt;strong&gt;legacy&lt;/strong&gt;: do not add new services here. Use &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/core-services&#34;&gt;&lt;code&gt;core-services&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/services&#34;&gt;&lt;code&gt;services&lt;/code&gt;&lt;/a&gt; instead.)&lt;/p&gt; &#xA;&lt;p&gt;Clusters that are created by the testing infrastructure for validating OpenShift are configured with the profiles under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/test-deploy/&#34;&gt;&lt;code&gt;cluster/test-deploy/&lt;/code&gt;&lt;/a&gt;. For directions on how to set up clusters for development, see the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/test-deploy/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Legacy Service Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Manifests for services that are in development, experimental, legacy or not critical in some other way are present in the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/projects&#34;&gt;&lt;code&gt;projects&lt;/code&gt;&lt;/a&gt; directory. Compared to the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/#core-services-and-configuration&#34;&gt;core services&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/#additional-services-and-configuration&#34;&gt;services&lt;/a&gt; configuration, these projects do not need to follow any common structure or conventions other than clear ownership. They must not interfere with the core services in any way.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, manifests for building container images for component repositories live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/projects/&#34;&gt;&lt;code&gt;projects/&lt;/code&gt;&lt;/a&gt;. This purpose is deprecated; authors of components built by manifests in this directory should remove them and ensure that their component is appropriately built by the &lt;code&gt;ci-operator&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Tooling Build Manifests&lt;/h2&gt; &#xA;&lt;p&gt;Manifests for building container images for tools live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/tools/&#34;&gt;&lt;code&gt;tools/&lt;/code&gt;&lt;/a&gt;. These tools are either useful in managing this repository or are otherwise useful commonly across component repositories.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gentoo/gentoo</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/gentoo/gentoo</id>
    <link href="https://github.com/gentoo/gentoo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[MIRROR] Official Gentoo ebuild repository&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>conda-forge/miniforge</title>
    <updated>2022-06-03T01:52:29Z</updated>
    <id>tag:github.com,2022-06-03:/conda-forge/miniforge</id>
    <link href="https://github.com/conda-forge/miniforge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A conda-forge distribution.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Miniforge&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/conda-forge/miniforge/workflows/Build%20miniforge/badge.svg?sanitize=true&#34; alt=&#34;Build Miniforge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository holds a minimal installer for &lt;a href=&#34;https://conda.io/&#34;&gt;Conda&lt;/a&gt; specific to &lt;a href=&#34;https://conda-forge.org/&#34;&gt;conda-forge&lt;/a&gt;. Miniforge allows you to install the conda package manager with the following features pre-configured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://conda-forge.org/&#34;&gt;conda-forge&lt;/a&gt; set as the default (and only) channel. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Packages in the base environment are obtained from the &lt;a href=&#34;https://anaconda.org/conda-forge&#34;&gt;conda-forge channel&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Optional support for PyPy in place of standard Python interpretter (aka &#34;CPython&#34;).&lt;/li&gt; &#xA; &lt;li&gt;Optional support for &lt;a href=&#34;https://github.com/mamba-org/mamba&#34;&gt;Mamba&lt;/a&gt; in place of Conda.&lt;/li&gt; &#xA; &lt;li&gt;An emphasis on supporting various CPU architectures (x86_64, ppc64le, and aarch64 including Apple M1).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It can be compared to the &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda&lt;/a&gt; installer.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Miniforge installers are available here: &lt;a href=&#34;https://github.com/conda-forge/miniforge/releases&#34;&gt;https://github.com/conda-forge/miniforge/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Miniforge3&lt;/h4&gt; &#xA;&lt;p&gt;Latest installers with Python 3.9 &lt;code&gt;(*)&lt;/code&gt; in the base environment:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;x86_64 (amd64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh&#34;&gt;Miniforge3-Linux-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;aarch64 (arm64) &lt;code&gt;(**)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh&#34;&gt;Miniforge3-Linux-aarch64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-ppc64le.sh&#34;&gt;Miniforge3-Linux-ppc64le&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OS X&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-x86_64.sh&#34;&gt;Miniforge3-MacOSX-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OS X&lt;/td&gt; &#xA;   &lt;td&gt;arm64 (Apple Silicon) &lt;code&gt;(***)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh&#34;&gt;Miniforge3-MacOSX-arm64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Windows-x86_64.exe&#34;&gt;Miniforge3-Windows-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;(*)&lt;/code&gt; The Python version is specific only to the base environment. Conda can create new environments with different Python versions and implementations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;(**)&lt;/code&gt; For Raspberry PI that include a 64 bit processor, you must also use a 64-bit operating system such as &lt;a href=&#34;https://www.raspberrypi.com/software/operating-systems/#raspberry-pi-os-64-bit&#34;&gt;Raspberry Pi OS 64-bit&lt;/a&gt; or &lt;a href=&#34;https://ubuntu.com/raspberry-pi&#34;&gt;Ubuntu for Raspberry PI&lt;/a&gt;. The versions listed as &#34;System: 32-bit&#34; are not compatible with the installers on this website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;(***)&lt;/code&gt; Apple silicon builds are experimental and haven&#39;t had testing like the other platforms.&lt;/p&gt; &#xA;&lt;h4&gt;Miniforge-pypy3&lt;/h4&gt; &#xA;&lt;p&gt;Latest installers with PyPy 3.7 in the base environment:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;x86_64 (amd64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge-pypy3-Linux-x86_64.sh&#34;&gt;Miniforge-pypy3-Linux-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;aarch64 (arm64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge-pypy3-Linux-aarch64.sh&#34;&gt;Miniforge-pypy3-Linux-aarch64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge-pypy3-Linux-ppc64le.sh&#34;&gt;Miniforge-pypy3-Linux-ppc64le&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OS X&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge-pypy3-MacOSX-x86_64.sh&#34;&gt;Miniforge-pypy3-MacOSX-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Mambaforge&lt;/h4&gt; &#xA;&lt;p&gt;Latest installers with Mamba in the base environment:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;x86_64 (amd64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh&#34;&gt;Mambaforge-Linux-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;aarch64 (arm64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-aarch64.sh&#34;&gt;Mambaforge-Linux-aarch64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-ppc64le.sh&#34;&gt;Mambaforge-Linux-ppc64le&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OS X&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-MacOSX-x86_64.sh&#34;&gt;Mambaforge-MacOSX-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OS X&lt;/td&gt; &#xA;   &lt;td&gt;arm64 (Apple Silicon)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-MacOSX-arm64.sh&#34;&gt;Mambaforge-MacOSX-arm64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe&#34;&gt;Mambaforge-Windows-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Mambaforge-pypy3&lt;/h4&gt; &#xA;&lt;p&gt;Latest installers with Mamba and PyPy 3.7 in the base environment:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;x86_64 (amd64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-pypy3-Linux-x86_64.sh&#34;&gt;Mambaforge-pypy3-Linux-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;aarch64 (arm64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-pypy3-Linux-aarch64.sh&#34;&gt;Mambaforge-pypy3-Linux-aarch64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;ppc64le (POWER8/9)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-pypy3-Linux-ppc64le.sh&#34;&gt;Mambaforge-pypy3-Linux-ppc64le&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OS X&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-pypy3-MacOSX-x86_64.sh&#34;&gt;Mambaforge-pypy3-MacOSX-x86_64&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Unix-like platforms&lt;/h3&gt; &#xA;&lt;p&gt;Download the installer using curl or wget or your favorite program download files and run the script. For eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L -O &#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh&#34;&#xA;bash Mambaforge-$(uname)-$(uname -m).sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget &#34;https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh&#34;&#xA;bash Mambaforge-$(uname)-$(uname -m).sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Uninstallation&lt;/h4&gt; &#xA;&lt;p&gt;Uninstalling Miniforge means removing the files that were created during the installation process. You will typically want to remove:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Any modifications to your shell rc files that were made by Miniforge:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Use this first command to see what rc files will be updated&#xA;conda init --reverse --dry-run&#xA;# Use this next command to take action on the rc files listed above&#xA;conda init --reverse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Remove the folder and all subfolders where the base environment for Miniforge was installed:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CONDA_BASE_ENVIRONMENT=$(conda info --base)&#xA;echo The next command will delete all files in ${CONDA_BASE_ENVIRONMENT}&#xA;# Warning, the rm command below is irreversible!&#xA;# check the output of the echo command above&#xA;# To make sure you are deleting the correct directory&#xA;rm -rf ${CONDA_BASE_ENVIRONMENT}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Any global conda configuration files that are left behind.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo ${HOME}/.condarc will be removed if it exists&#xA;rm -f &#34;${HOME}/.condarc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Download the installer and double click it on the file browser.&lt;/p&gt; &#xA;&lt;h3&gt;Non-interactive install&lt;/h3&gt; &#xA;&lt;p&gt;For non-interactive usage, look at the options by running the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash Miniforge3-Linux-x86_64.sh -h   # or similar for other installers for unix platforms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are on windows, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;start /wait &#34;&#34; build/Miniforge3-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniforge3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Downloading the installer as part of a CI pipeline&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to download the appropriate installer through the command line in a more automated fashion, you may wish to a command similar to&lt;/p&gt; &#xA;&lt;p&gt;For Linux, any architecture, use the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -O Miniforge3.sh &#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For MacOSX, any architecture, use the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -fsSLo Miniforge3.sh &#34;https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-$(uname -m).sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will download the appropriate installer for the present architecture with the filename &lt;code&gt;Miniforge3.sh&lt;/code&gt;. Run the shell script with the command in batch mode with the &lt;code&gt;-b&lt;/code&gt; flash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash Miniforge3.sh -b&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;On macOS, you can install miniforge with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install miniforge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic build of constructor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic upload of constructor results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic testing of constructor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integration with conda-forge&#39;s developer documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integration with conda-forge&#39;s official site.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Upstream to Anaconda ?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;After construction on the CI, the installer is tested against a range of distribution that match the installer architecture (&lt;code&gt;$ARCH&lt;/code&gt;). For example when architecture is &lt;code&gt;aarch64&lt;/code&gt;, the constructed installer is tested against:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Centos 7&lt;/li&gt; &#xA; &lt;li&gt;Debian Buster (10)&lt;/li&gt; &#xA; &lt;li&gt;Debian Bullseye (11)&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 16.04 (&lt;a href=&#34;https://ubuntu.com/about/release-cycle&#34;&gt;LTS&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 18.04 (&lt;a href=&#34;https://ubuntu.com/about/release-cycle&#34;&gt;LTS&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04 (&lt;a href=&#34;https://ubuntu.com/about/release-cycle&#34;&gt;LTS&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 21.10 (Latest non-LTS version)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local usage&lt;/h2&gt; &#xA;&lt;p&gt;Installers are built and uploaded via the CI but if you want to construct your own Miniforge installer, here is how:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Configuration&#xA;export ARCH=aarch64&#xA;export DOCKERIMAGE=condaforge/linux-anvil-aarch64&#xA;&#xA;bash build_miniforge.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Release&lt;/h2&gt; &#xA;&lt;p&gt;To release a new version of Miniforge:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make a new pre-release on GitHub with name &lt;code&gt;$CONDA_VERSION-$BUILD_NUMBER&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wait until all artifacts are uploaded by CI &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For each build, we upload 3 artifacts &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;One installer with the version name&lt;/li&gt; &#xA;     &lt;li&gt;One installer without the version name&lt;/li&gt; &#xA;     &lt;li&gt;The SHA256&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;At the time of writing, the is a sum of 60 artifacts, and with the two sources, we expect a grand total of 62 artifacts.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mark the pre-release as a release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: using a pre-release is important to make sure the latest links work.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/conda-forge/miniforge/main/LICENSE&#34;&gt;BSD 3-Clause&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;Relevant conversations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conda-forge/conda-forge.github.io/issues/871#issue-496677528&#34;&gt;https://github.com/conda-forge/conda-forge.github.io/issues/871#issue-496677528&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conda-forge/conda-forge.github.io/pull/922&#34;&gt;https://github.com/conda-forge/conda-forge.github.io/pull/922&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>