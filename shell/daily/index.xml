<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-10T01:53:54Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dragoonDorise/EmuDeck</title>
    <updated>2022-07-10T01:53:54Z</updated>
    <id>tag:github.com,2022-07-10:/dragoonDorise/EmuDeck</id>
    <link href="https://github.com/dragoonDorise/EmuDeck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emulator configurator for Steam Deck&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EmuDeck&lt;/h1&gt; &#xA;&lt;img src=&#34;https://www.emudeck.com/img/hero.png&#34;&gt; &#xA;&lt;p&gt;EmuDeck is a collection of scripts that allows you to autoconfigure your Steam Deck, it creates your roms directory structure and downloads all of the needed Emulators for you along with the best configurations for each of them. EmuDeck works great with &lt;a href=&#34;https://github.com/SteamGridDB/steam-rom-manager&#34;&gt;Steam Rom Manager&lt;/a&gt; or with &lt;a href=&#34;https://es-de.org&#34;&gt;EmulationStation DE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;** If you are a dev please read till the bottom **&lt;/p&gt; &#xA;&lt;p&gt;There are two ways of using EmuDeck:&lt;/p&gt; &#xA;&lt;h2&gt;Using Steam Rom Manager&lt;/h2&gt; &#xA;&lt;img src=&#34;https://www.emudeck.com/img/ss1.png&#34;&gt; &#xA;&lt;p&gt;This option gives you all your games presented with their box arts as if they were a regular Steam Game. EmuDeck has preloaded configurations for Steam Rom Manager for the following systems:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;System&lt;/th&gt; &#xA;   &lt;th&gt;Emulator&lt;/th&gt; &#xA;   &lt;th&gt;Roms format&lt;/th&gt; &#xA;   &lt;th&gt;File Required in the base of Emulation/bios (or special consideration)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Atari 2600&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Stella core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .a26 .bin .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Atari Lynx&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Beetle Lynx core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .lnx .bin .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Final Burn Neo&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Fbn core&lt;/td&gt; &#xA;   &lt;td&gt;.zip .7z&lt;/td&gt; &#xA;   &lt;td&gt;Bioses will be searched through 3 folders :&lt;br&gt;* the folder of the current romset&lt;br&gt;* the Emulation/bios/fbneo/&lt;br&gt;* the Emulation/bios/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mame 2003 Plus&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Mame 2003 Plus core&lt;/td&gt; &#xA;   &lt;td&gt;.zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mame 2010&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Mame 2010 core&lt;/td&gt; &#xA;   &lt;td&gt;.zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mame Current&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Mame Current core&lt;/td&gt; &#xA;   &lt;td&gt;.zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft Xbox&lt;/td&gt; &#xA;   &lt;td&gt;Xemu&lt;/td&gt; &#xA;   &lt;td&gt;.iso (xiso formatted)&lt;/td&gt; &#xA;   &lt;td&gt;Emulation/bios:&lt;br&gt;mcpx_1.0.bin&lt;br&gt;modified retail &#34;COMPLEX 4627&#34; BIOS&lt;br&gt;&lt;br&gt;Emulation/saves/xemu:&lt;br&gt;xbox_hdd.qcow2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Neo Geo Pocket &amp;amp; Color&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Beetle NeoPop&lt;/td&gt; &#xA;   &lt;td&gt;.7z .ngp .ngc .bin .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo 3DS&lt;/td&gt; &#xA;   &lt;td&gt;Citra&lt;/td&gt; &#xA;   &lt;td&gt;.3ds .3dsx .app .axf .cii .cxi .elf .cia(FOR INSTALL ONLY)&lt;/td&gt; &#xA;   &lt;td&gt;Title keys required for encrypted rom types&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo 64&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Mupen64plus-Next&lt;/td&gt; &#xA;   &lt;td&gt;.7z .bin .n64 .ndd .u1 .v64 .z64 .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo DS&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch melonDS core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .nds .zip&lt;/td&gt; &#xA;   &lt;td&gt;bios7.bin&lt;br&gt;bios9.bin&lt;br&gt;firmware.bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo GameBoy&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Gambatte core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gb .dmg .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo GameBoy Advance&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch mGBA core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gba .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo GameBoy Color&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Gambatte core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gb .gbc .dmg .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo GameCube&lt;/td&gt; &#xA;   &lt;td&gt;Dolphin Standalone&lt;/td&gt; &#xA;   &lt;td&gt;.ciso .dol .elf .gcm .gcz .iso .nkit.iso .rvz .wad .wia .wbfs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo NES&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Nestopia core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .nes .fds .unf .unif .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo PrimeHack&lt;/td&gt; &#xA;   &lt;td&gt;PrimeHack (Metroid Prime specific)&lt;/td&gt; &#xA;   &lt;td&gt;.ciso .dol .elf .gcm .gcz .iso .json .nkit.iso .rvz .wad .wia .wbfs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo Switch&lt;/td&gt; &#xA;   &lt;td&gt;Yuzu&lt;/td&gt; &#xA;   &lt;td&gt;.kp .nca .nro .nso .nsp .xci&lt;/td&gt; &#xA;   &lt;td&gt;Title keys required for encrypted rom types&lt;br&gt;firmware installation with valid mii data required for some games&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo Wii&lt;/td&gt; &#xA;   &lt;td&gt;Dolphin Standalone&lt;/td&gt; &#xA;   &lt;td&gt;.ciso .dol .elf .gcm .gcz .iso .json .nkit.iso .rvz .wad .wia .wbfs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nintendo Wii U&lt;/td&gt; &#xA;   &lt;td&gt;Cemu&lt;/td&gt; &#xA;   &lt;td&gt;.rpx .wud .wux .elf .iso .wad&lt;/td&gt; &#xA;   &lt;td&gt;Title keys required for encrypted rom types&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega 32X&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch PicoDrive core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .32x .bin .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega CD&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Genesis Plus GX core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .32x .cue .chd .iso .zip&lt;/td&gt; &#xA;   &lt;td&gt;bios_CD_E.bin&lt;br&gt;bios_CD_U.bin&lt;br&gt;bios_CD_J.bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega Dreamcast&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch FlyCast Core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .cdi .chd .cue .gdi&lt;/td&gt; &#xA;   &lt;td&gt;dc/dc_boot.bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega Game Gear&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Genesis Plus GX core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gg .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega Genesis / Mega Drive&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Genesis Plus GX core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gen .md .smd .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega Genesis Widescreen&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Genesis Plus GX Wide core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gen .md .smd .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega Master System&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Genesis Plus GX core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .gen .sms .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sega Saturn&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Yabause core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .cue .iso .chd .zip&lt;/td&gt; &#xA;   &lt;td&gt;sega_101.bin&lt;br&gt;mpr-17933.bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sony Playstation&lt;/td&gt; &#xA;   &lt;td&gt;DuckStation Standalone&lt;br&gt;Retroarch Beetle HW&lt;/td&gt; &#xA;   &lt;td&gt;.cue .chd .ecm .iso .m3u .mds .pbp&lt;/td&gt; &#xA;   &lt;td&gt;scph5500.bin&lt;br&gt;scph5501.bin&lt;br&gt;scph5502.bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sony Playstation 2&lt;/td&gt; &#xA;   &lt;td&gt;RPCSX2&lt;/td&gt; &#xA;   &lt;td&gt;.bin .chd .cso .dump .gz .img .iso .mdf .nrg&lt;/td&gt; &#xA;   &lt;td&gt;Bios files are required. Here is an example set:&lt;br&gt;SCPH-70004_BIOS_V12_EUR_200.BIN&lt;br&gt;SCPH-70004_BIOS_V12_EUR_200.EROM&lt;br&gt;SCPH-70004_BIOS_V12_EUR_200.ROM1&lt;br&gt;SCPH-70004_BIOS_V12_EUR_200.ROM2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sony Playstation 3&lt;/td&gt; &#xA;   &lt;td&gt;RPCS3&lt;/td&gt; &#xA;   &lt;td&gt;/PS3_GAME/USRDIR/eboot.bin&lt;/td&gt; &#xA;   &lt;td&gt;Firmware installation in the Emulator is required.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sony Playstation Portable&lt;/td&gt; &#xA;   &lt;td&gt;PPSSPP Standalone&lt;br&gt;PPSSPP Retroarch core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .elf .cso .iso .pbp .prx&lt;/td&gt; &#xA;   &lt;td&gt;The retroarch core requires ppsspp.zip in the bios folder.&lt;br&gt;You can obtain it from within RetroArch&#39;s downloader.&lt;br&gt;Standalone PPSSPP does not require anything special.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Super Nintendo&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Snes9x Current core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .bs .fig .sfc .smc .swx .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Super Nintendo Widescreen&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch bsnes hd beta Current core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .bs .fig .sfc .smc .swx .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wonderswan &amp;amp; Color&lt;/td&gt; &#xA;   &lt;td&gt;Retroarch Beetle Cygne core&lt;/td&gt; &#xA;   &lt;td&gt;.7z .pc2 .ws .wsc .zip&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Using EmulationStation DE&lt;/h2&gt; &#xA;&lt;img src=&#34;https://es-de.org/____impro/1/onewebmedia/ES-DE_logo.png?etag=%226071-6041244a%22&amp;amp;sourceContentType=image%2Fpng&amp;amp;ignoreAspectRatio&amp;amp;resize=240%2B168&#34;&gt; &#xA;&lt;p&gt;EmuDeck configures EmulationStation DE to use the same rom folders that EmuDeck creates for you and it even downloads all the emulators and cores the ES-DE needs, all configurations that EmuDeck installs are carried over when using EmulationStation DE. For a comprehensive list of all the systems that ESDE supports go to &lt;a href=&#34;https://es-de.org&#34;&gt;ES-DE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Hotkeys&lt;/h1&gt; &#xA;&lt;p&gt;We try to use the same hotkeys for every emulator but some of them have their own different hotkeys, shown here:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&amp;nbsp;Hotkey&lt;/th&gt; &#xA;   &lt;th&gt;RetroArch&lt;/th&gt; &#xA;   &lt;th&gt;Dolphin&lt;/th&gt; &#xA;   &lt;th&gt;Citra *&lt;/th&gt; &#xA;   &lt;th&gt;Cemu *&lt;/th&gt; &#xA;   &lt;th&gt;Yuzu&lt;/th&gt; &#xA;   &lt;th&gt;PCSX2 *&lt;/th&gt; &#xA;   &lt;th&gt;RPCS3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Menu&lt;/td&gt; &#xA;   &lt;td&gt;L3 + R3&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Exit&lt;/td&gt; &#xA;   &lt;td&gt;Select + Start&lt;/td&gt; &#xA;   &lt;td&gt;Select + Start&lt;/td&gt; &#xA;   &lt;td&gt;R5&lt;/td&gt; &#xA;   &lt;td&gt;Select + Start&lt;/td&gt; &#xA;   &lt;td&gt;Select + Start&lt;/td&gt; &#xA;   &lt;td&gt;STEAM Button&lt;/td&gt; &#xA;   &lt;td&gt;STEAM Button&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pause/Unpause Emulation&lt;/td&gt; &#xA;   &lt;td&gt;Select + A&lt;/td&gt; &#xA;   &lt;td&gt;Select + A&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Select + A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fast Forward&lt;/td&gt; &#xA;   &lt;td&gt;Select + R2&lt;/td&gt; &#xA;   &lt;td&gt;Select + R2&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Select + R2&lt;/td&gt; &#xA;   &lt;td&gt;Select + R4&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Load State&lt;/td&gt; &#xA;   &lt;td&gt;Select + L1&lt;/td&gt; &#xA;   &lt;td&gt;Select + L1&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Select + L1&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Save State&lt;/td&gt; &#xA;   &lt;td&gt;Select + R1&lt;/td&gt; &#xA;   &lt;td&gt;Select + R1&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Select + R1&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Full Screen&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;L4&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swap Screens&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;R4&lt;/td&gt; &#xA;   &lt;td&gt;R4&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Toggle Layout&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;L5&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that Nintendo-oriented emulators refer to &#34;A&#34; in the emulated sense (physical Steam Deck &#34;B&#34;) * You need to activate Steam Input to get those hotkeys to work &lt;a href=&#34;https://www.emudeck.com/#steam_input&#34;&gt;https://www.emudeck.com/#steam_input&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Developers, developers, developers.&lt;/h1&gt; &#xA;&lt;p&gt;If you wanna help us improve EmuDeck we are open to accept your PR! Just keep in mind this simple guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Think EmuDeck is for everybody, tech savvy and regular users, so everything has to be properly explained, use Easy mode for unattended automatic stuff.&lt;/li&gt; &#xA; &lt;li&gt;User input is non recommended, everything should be done with no mouse or keyboard input. If input is a must then you have to code your feature only on expert mode.&lt;/li&gt; &#xA; &lt;li&gt;Things using sudo are a big no no, there are exceptions but always try to find a way of prevent using sudo.&lt;/li&gt; &#xA; &lt;li&gt;Every Emulator added has to be included on this readme file, have a SRM profile and follow the AmberElec hotkey mapping ( just check the previous table)&lt;/li&gt; &#xA; &lt;li&gt;Always do your PR to the dev branch.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jaromaz/MacintoshPi</title>
    <updated>2022-07-10T01:53:54Z</updated>
    <id>tag:github.com,2022-07-10:/jaromaz/MacintoshPi</id>
    <link href="https://github.com/jaromaz/MacintoshPi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A small project that allows running full-screen versions of Apple&#39;s Mac OS 7, Mac OS 8 and Mac OS 9 with sound, active online connection and modem emulation under Raspberry Pi.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MacintoshPi&lt;/h1&gt; &#xA;&lt;p&gt;MacintoshPi is a small project that allows running full-screen versions of Apple&#39;s &lt;em&gt;Mac OS 7&lt;/em&gt;, &lt;em&gt;Mac OS 8&lt;/em&gt; and &lt;em&gt;Mac OS 9&lt;/em&gt; with sound, active Internet connection and modem emulation under &lt;em&gt;Raspberry Pi&lt;/em&gt;. All this without the X.org manager, only a multimedia SDL2 library and from the CLI /&amp;nbsp;&lt;em&gt;Raspberry Pi OS Lite&lt;/em&gt;. This lets emulators use full power of &lt;em&gt;Raspberry Pi&lt;/em&gt;, making them more stable and useful in combination with additional retro-software. Installation requires running a single script on a clean&amp;nbsp;&lt;em&gt;Raspberry Pi OS Lite&lt;/em&gt;&amp;nbsp;and waiting about two hours for the packages to compile and install. In addition, thanks to a document contained in the project, it is possible in dual-boot to place the fastest (bare-metal) &lt;em&gt;Commodore 64/128/PET&lt;/em&gt;&amp;nbsp;emulator&amp;nbsp;&lt;strong&gt;BMC64&lt;/strong&gt;, thus building an interesting retro package on a single SD card. The entire &lt;em&gt;MacintoshPi&lt;/em&gt; project runs on &lt;strong&gt;Raspberry Pi&amp;nbsp;Zero 2 W&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;2&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;3&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;3B&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;3B+&lt;/strong&gt;&amp;nbsp;(at present, it does not run on version&amp;nbsp;4).&lt;/p&gt; &#xA;&lt;p&gt;Below you will find a short clip showing what MacintoshPi can do:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J2kgQuUPLoY&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jaromaz/MacintoshPi/main/assets/img/vthumb.jpg&#34; width=&#34;50%&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A much longer version of the clip can be &lt;a href=&#34;https://www.youtube.com/watch?v=yDPkjhl2oSI&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project components&lt;/h2&gt; &#xA;&lt;p&gt;The project consists of the following auto-compiling and installing bash scripts for Raspberry Pi:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Macintosh 68K&amp;nbsp;emulator &lt;strong&gt;&lt;a href=&#34;https://basilisk.cebix.net&#34;&gt;Basilisk II&lt;/a&gt;&lt;/strong&gt; supporting&amp;nbsp;Mac OS 7 (System 7.5.5)&amp;nbsp;and&amp;nbsp;Mac OS 8.&lt;/li&gt; &#xA; &lt;li&gt;PowerPC&amp;nbsp;emulator &lt;strong&gt;&lt;a href=&#34;https://sheepshaver.cebix.net&#34;&gt;SheepShaver&lt;/a&gt;&lt;/strong&gt; supporting&amp;nbsp;Mac OS 9.&lt;/li&gt; &#xA; &lt;li&gt;A development library &lt;strong&gt;&lt;a href=&#34;https://www.libsdl.org&#34;&gt;SDL2&lt;/a&gt;&lt;/strong&gt; designed to provide low level access to audio, keyboard, mouse, joystick, and graphics hardware.&lt;/li&gt; &#xA; &lt;li&gt;Commodore 64/128/PET&amp;nbsp;emulator &lt;strong&gt;&lt;a href=&#34;https://vice-emu.sourceforge.io&#34;&gt;VICE&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jaromaz/MacintoshPi#macintoshpi-virtual-modem&#34;&gt;MacintoshPi Virtual Modem&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;using the&amp;nbsp;&lt;strong&gt;&lt;a href=&#34;https://github.com/freemed/tty0tty&#34;&gt;tty0tty&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;&lt;a href=&#34;http://www.jbrain.com/pub/linux/serial/&#34;&gt;tcpser&lt;/a&gt;&lt;/strong&gt; projects, running with the two aforementioned emulators for &lt;em&gt;Apple&lt;/em&gt; and &lt;em&gt;Commodore&lt;/em&gt; products, and on &lt;em&gt;Raspberry Pi OS&lt;/em&gt; itself, as well as allowing any original terminal retro-software to connect with modern-day telnet BBSs.&lt;/li&gt; &#xA; &lt;li&gt;CD-ROM, DVD-ROM emulator &lt;strong&gt;&lt;a href=&#34;https://cdemu.sourceforge.io&#34;&gt;CDEmu&lt;/a&gt;&lt;/strong&gt; which allows mounting CD images (iso, toast, cue/bin, mds/mdf etc.) under &lt;em&gt;Raspberry Pi OS&lt;/em&gt; - runs with &lt;em&gt;BasiliskII&lt;/em&gt; and &lt;em&gt;SheepShaver&lt;/em&gt; emulators, as well as on &lt;em&gt;Raspberry Pi OS&lt;/em&gt;. The emulators are configured automatically to support that virtual CD-ROM drive.&lt;/li&gt; &#xA; &lt;li&gt;A consistent &lt;strong&gt;&lt;a href=&#34;https://github.com/jaromaz/MacintoshPi#macintoshpi-launcher&#34;&gt;MacintoshPi Launcher&lt;/a&gt;&lt;/strong&gt; that runs all of those systems at different resolutions (after reboot) and in different configurations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://syncterm.bbsdev.net&#34;&gt;SyncTERM&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;- an application for connecting with BBSs from the &lt;em&gt;Raspberry Pi OS&lt;/em&gt;, compiled in combination with the &lt;em&gt;SDL library&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Information how to run &lt;em&gt;Raspberry Pi OS&lt;/em&gt; in &lt;strong&gt;dual-boot&lt;/strong&gt; with &lt;strong&gt;&lt;a href=&#34;https://accentual.com/bmc64/&#34;&gt;BMC64&lt;/a&gt;&lt;/strong&gt;, the fastest &lt;em&gt;Commodore&lt;/em&gt; emulator for &lt;em&gt;Raspberry Pi&lt;/em&gt; (bare metal/low latency emulator).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mac OS images&lt;/strong&gt; are pre-configured to support online connections.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://www.cebix.net&#34;&gt;Christian Bauer&lt;/a&gt; and &lt;a href=&#34;https://github.com/kanjitalk755&#34;&gt;kanjitalk755&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The project must be installed on a clean&amp;nbsp;&lt;em&gt;Raspberry Pi OS Lite (Legacy)&lt;/em&gt;&amp;nbsp;or the full version of&amp;nbsp;&lt;em&gt;Raspberry Pi OS (Legacy)&lt;/em&gt;, but in the latter case you must first switch to&amp;nbsp;command line&amp;nbsp;or set system start to CLI. &lt;em&gt;Raspberry Pi OS (Legacy)&lt;/em&gt;&amp;nbsp;can be installed from the&amp;nbsp;&lt;em&gt;Raspberry Pi Imager&lt;/em&gt;&amp;nbsp;level by selecting:&amp;nbsp;&lt;em&gt;CHOOSE OS -&amp;gt; Raspberry Pi OS (other) -&amp;gt; Raspberry Pi OS (Legacy)&lt;/em&gt;, &lt;em&gt;CHOOSE STORAGE -&amp;gt; WRITE&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jaromaz/MacintoshPi/main/assets/img/imager.png&#34; width=&#34;50%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Installation of the entire&amp;nbsp;&lt;em&gt;MacintoshPi&lt;/em&gt;&amp;nbsp;package requires running the single command&amp;nbsp;&lt;code&gt;./build_all.sh&lt;/code&gt;&amp;nbsp;- all dependencies and required packages will be installed automatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/jaromaz/MacintoshPi&#xA;cd MacintoshPi&#xA;./build_all.sh&#xA;# That&#39;s it - now you can run, for example, Mac OS 9:&#xA;mac os9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The process of compiling and installing packages can take about two hours.&lt;/p&gt; &#xA;&lt;p&gt;Each of these sub-projects can be installed separately by running the corresponding compilation &amp;amp; installation script contained in the directory relevant to the sub-project concerned. The installation scripts must be run from the&amp;nbsp;&lt;code&gt;pi&lt;/code&gt; user.&lt;/p&gt; &#xA;&lt;h2&gt;Detailed descriptions of MacintoshPi project components&lt;/h2&gt; &#xA;&lt;h3&gt;Basilisk II (Mac OS 7 and 8) and SheepShaver (Mac OS 9)&lt;/h3&gt; &#xA;&lt;p&gt;The script downloads all files required to start Mac OS - ROMs, system images, and creates configuration files. On installation, directory&amp;nbsp;&lt;code&gt;/home/pi/Downloads&lt;/code&gt;&amp;nbsp;will be visible on the Apple desktop as a&amp;nbsp;&lt;code&gt;Unix&lt;/code&gt;&amp;nbsp;directory - files can be copied both ways between those two resources, but applications cannot be launched directly from that directory. In addition, the so-called &lt;em&gt;NetDriver&lt;/em&gt; is also compiled, which allows full online access from virtualised &lt;em&gt;Apple&lt;/em&gt; systems. Up till now, &lt;em&gt;Mac OS 9&lt;/em&gt; in the full screen mode (without the unnecessary window manager) has not been available for &lt;em&gt;Raspberry Pi&lt;/em&gt;. This is perhaps the first such implementation which allows using &lt;em&gt;Mac OS 9&lt;/em&gt; and SDL2 in the full screen mode with sound and online connection - even on the small&amp;nbsp;&lt;em&gt;Raspberry Pi 2W&lt;/em&gt;. Each system must be launched with the appropriate command:&amp;nbsp;&lt;code&gt;mac os7&lt;/code&gt;,&amp;nbsp;&lt;code&gt;mac os8&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;mac os9&lt;/code&gt;. The additional file&amp;nbsp;&lt;code&gt;.img&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;.dsk&lt;/code&gt;&amp;nbsp;can be added to the launched system by adding the image file name at the end of the command which invokes the system concerned, e.g.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mac os9 demo.img&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Basilisk II&lt;/em&gt; and &lt;em&gt;SheepShaver&lt;/em&gt; emulators can be stopped by using the key combination&amp;nbsp;&lt;em&gt;CTRL+SHIFT+ESC&lt;/em&gt;. This causes an immediate return to the command line. The &lt;em&gt;COMMAND&lt;/em&gt; key is acquired with the left &lt;em&gt;ALT&lt;/em&gt; key in &lt;em&gt;Mac OS 9&lt;/em&gt;, and with the &lt;em&gt;CTRL&lt;/em&gt; key in &lt;em&gt;Mac OS 7&lt;/em&gt; and &lt;em&gt;Mac OS 8&lt;/em&gt;. For more information about those emulators visit the&amp;nbsp;&lt;a href=&#34;https://basilisk.cebix.net&#34;&gt;BasiliskII&lt;/a&gt; and &lt;a href=&#34;https://sheepshaver.cebix.net&#34;&gt;SheepShaver&lt;/a&gt; websites.&lt;/p&gt; &#xA;&lt;h3&gt;VICE&lt;/h3&gt; &#xA;&lt;p&gt;The script that compiles the&amp;nbsp;&lt;strong&gt;VICE&lt;/strong&gt; &lt;em&gt;Commodore&lt;/em&gt; emulator which can be used for connecting an emulated &lt;em&gt;Commodore&lt;/em&gt; with modern BBSs. It allows downloading files which can be used on the same &lt;em&gt;Raspberry Pi&lt;/em&gt; device, but on the fast&amp;nbsp;&lt;em&gt;BMC64&lt;/em&gt; emulator installed in dual boot. On installing the &lt;em&gt;BMC64&lt;/em&gt; partition to &lt;em&gt;rootfs&lt;/em&gt;, data can be downloaded from a BBS directly to the virtual drive that will then be available automatically in&amp;nbsp;&lt;em&gt;BMC64&lt;/em&gt;. The&amp;nbsp;&lt;em&gt;VICE&lt;/em&gt;&amp;nbsp;emulator for &lt;em&gt;Raspberry Pi&lt;/em&gt; is very slow, which is why it is recommended to use the&amp;nbsp;&lt;em&gt;BMC64&lt;/em&gt; emulator for more demanding applications. For more information about the&amp;nbsp;&lt;em&gt;VICE&lt;/em&gt;&amp;nbsp;emulator visit&amp;nbsp;the &lt;a href=&#34;https://vice-emu.sourceforge.io&#34;&gt;project&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;MacintoshPi Virtual Modem&lt;/h3&gt; &#xA;&lt;p&gt;A script that compiles and installs a virtual modem in &lt;em&gt;Raspberry Pi OS&lt;/em&gt;, allowing connection with modern-day telnet BBSs using any terminal software launched on the aforementioned&amp;nbsp;&lt;em&gt;Basilisk II&lt;/em&gt;,&amp;nbsp;&lt;em&gt;SheepShaver&lt;/em&gt; and&amp;nbsp;&lt;em&gt;VICE&lt;/em&gt;&amp;nbsp;emulators, and on &lt;em&gt;Raspberry Pi OS&lt;/em&gt; itself. The &lt;em&gt;MacintoshPi Virtual Modem&lt;/em&gt; is controlled by&amp;nbsp;systemd&amp;nbsp;and uses the&amp;nbsp;&lt;em&gt;tpcser&lt;/em&gt; software which, through the&amp;nbsp;&lt;em&gt;tty0tty&lt;/em&gt;&amp;nbsp;project, writes to virtual device&amp;nbsp;&lt;code&gt;/dev/tnt0&lt;/code&gt;. The data can be read from another virtual device&amp;nbsp;&lt;code&gt;/dev/tnt1&lt;/code&gt;, which thus becomes a virtual serial port in the system.&lt;/p&gt; &#xA;&lt;p&gt;The modem must be started using the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo systemctl start vmodem&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It can be reset or paused with the standard systemd commands:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo systemctl stop vmodem&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo systemctl reset vmodem&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The virtual modem can also be left running permanently in the system using the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo systemctl enable --now vmodem&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Speed (bps) change options can be set in the configuration file as per example entries provided with it:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;/etc/vmodem.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To connect with a telnet BBS, just run the following command on terminal application:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ATDT telnet_url:port&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ATDT borderlinebbs.dyndns.org:6400&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The virtual modem cooperates with the&amp;nbsp;&lt;strong&gt;VICE&lt;/strong&gt; &lt;em&gt;Commodore 64&lt;/em&gt; emulator, but only with a version launched with the&amp;nbsp;&lt;code&gt;x64sc&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h4&gt;Modem speeds depending on emulation&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Maximum speed bps&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Commodore / VICE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mac OS 7-8 / BasiliskII&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28800&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mac OS 9 / SheepShaver&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28800&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Raspberry Pi OS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;38400&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Configuring a virtual modem&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In&amp;nbsp;VICE&amp;nbsp;Commodore 64, run command&amp;nbsp;&lt;em&gt;x64sc&lt;/em&gt;&amp;nbsp;and select:&amp;nbsp;&lt;em&gt;F12&lt;/em&gt;&amp;nbsp;-&amp;gt;&amp;nbsp;&lt;em&gt;Machine settings&lt;/em&gt;&amp;nbsp;-&amp;gt;&amp;nbsp;&lt;em&gt;RS232 Settings&lt;/em&gt;: Set the screen as per the figure below, also marking appropriate dots in green with:&lt;/p&gt; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jaromaz/MacintoshPi/main/assets/img/viceconf.png&#34; width=&#34;50%&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;em&gt;Basilisk II&lt;/em&gt; and &lt;em&gt;SheepShaver&lt;/em&gt;, configuration is already performed automatically in their configuration files. In Apple terminal application, just select the standard serial port and modem speed as set under Raspberry Pi OS in file&amp;nbsp;&lt;code&gt;/etc/vmodem.conf&lt;/code&gt;&amp;nbsp;(default 2400 bps).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In terminal applications directly under &lt;em&gt;Raspberry Pi OS&lt;/em&gt; (e.g. &lt;em&gt;minicom&lt;/em&gt;), just indicate the serial port:&amp;nbsp;&lt;code&gt;/dev/tnt1&lt;/code&gt;&amp;nbsp;and speed as shown in file&amp;nbsp;&lt;code&gt;/etc/vmodem.conf&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CDEmu&lt;/h3&gt; &#xA;&lt;p&gt;A script which compiles the&amp;nbsp;&lt;strong&gt;CDEmu&lt;/strong&gt; CD/DVD emulator, allowing mounting CD and DVD images in &lt;em&gt;iso&lt;/em&gt;, &lt;em&gt;toast&lt;/em&gt;, &lt;em&gt;cue/bin&lt;/em&gt;, &lt;em&gt;mds/mdf&lt;/em&gt; and many other formats. The application is similar to&amp;nbsp;&lt;strong&gt;Daemon Tools&lt;/strong&gt;&amp;nbsp;for Windows and runs with &lt;em&gt;BasiliskII&lt;/em&gt; and &lt;em&gt;SheepShaver&lt;/em&gt; as well as on &lt;em&gt;Raspberry Pi OS&lt;/em&gt;. It allows you to create an image of an old CD-ROM, copy it to &lt;em&gt;Raspberry Pi&lt;/em&gt; and install software from it in an Apple system emulated on &lt;em&gt;Raspberry Pi&lt;/em&gt;. It is no longer necessary to copy&amp;nbsp;&lt;em&gt;.toast&lt;/em&gt;&amp;nbsp;files to the disk image or mount them with software for &lt;em&gt;Mac OS&lt;/em&gt; - you can now unpack a&amp;nbsp;&lt;em&gt;.sit&lt;/em&gt;&amp;nbsp;file under&amp;nbsp;&lt;em&gt;Raspberry Pi OS&lt;/em&gt;&amp;nbsp;using the&amp;nbsp;&lt;code&gt;unar&lt;/code&gt;&amp;nbsp;command, and then mount the unpacked&amp;nbsp;&lt;em&gt;.toast&lt;/em&gt;&amp;nbsp;file also under&amp;nbsp;&lt;em&gt;Raspberry Pi OS&lt;/em&gt;&amp;nbsp;using the&amp;nbsp;&lt;code&gt;cdload&lt;/code&gt;&amp;nbsp;command, and use the CD image on any &lt;em&gt;Mac OS&lt;/em&gt; as you would from a regular CD-ROM. Audio CDs launched in&amp;nbsp;&lt;em&gt;CDEmu&lt;/em&gt; run correctly in&amp;nbsp;&lt;em&gt;Raspberry Pi OS&lt;/em&gt;&amp;nbsp;both in the graphic and text mode, but sound does not work in the &lt;em&gt;Basilisk II&lt;/em&gt; or &lt;em&gt;SheepShaver&lt;/em&gt; emulators. For more information about&amp;nbsp;&lt;em&gt;CDEmu&lt;/em&gt;&amp;nbsp;visit&amp;nbsp;the &lt;a href=&#34;https://cdemu.sourceforge.io&#34;&gt;project&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A CD image can be easiest mounted using the command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cdload image.toast&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The CD will be available in the virtual device:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;/dev/sr0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The image can be unloaded from the virtual device using the command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cdunload&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MacintoshPi Launcher&lt;/h3&gt; &#xA;&lt;p&gt;The maximum emulator performance is achieved in the native resolution of the emulated system, i.e. it is recommended that &lt;em&gt;Raspberry Pi&lt;/em&gt; should start in e.g. 640x480 resolution if we want to launch &lt;em&gt;Mac OS&lt;/em&gt; in 640x480 resolution on it.&lt;/p&gt; &#xA;&lt;p&gt;The launcher&#39;s task is to launch a given version of &lt;em&gt;Mac OS&lt;/em&gt;, and if one is already running with appropriate parameters, then to overwrite&amp;nbsp;&lt;code&gt;config.txt&lt;/code&gt; and any other system files with the appropriate screen resolution and position assigned to a specific system or any other defined application, and then to launch the emulator or application right after a system restart, this time in the new resolution.&lt;/p&gt; &#xA;&lt;p&gt;The name of the directory with the data with which the system is to be overwritten is identical as the name of the parameter following the&amp;nbsp;&lt;code&gt;mac&lt;/code&gt;&amp;nbsp;command, e.g.&amp;nbsp;&lt;code&gt;mac os8-480&lt;/code&gt;&amp;nbsp;will restart&amp;nbsp;&lt;em&gt;Raspberry Pi OS&lt;/em&gt;&amp;nbsp;in 640x480 resolution, and then launch&amp;nbsp;&lt;code&gt;Mac OS 8&lt;/code&gt;&amp;nbsp;also in that resolution, but the&amp;nbsp;&lt;code&gt;mac os8&lt;/code&gt;&amp;nbsp;command will simply launch&amp;nbsp;&lt;em&gt;Mac OS 8&lt;/em&gt;&amp;nbsp;in the most recently selected resolution.&lt;/p&gt; &#xA;&lt;p&gt;The Launcher allows also&amp;nbsp;&lt;code&gt;.img&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;.dsk&lt;/code&gt;&amp;nbsp;files to be added to &lt;em&gt;Mac OS&lt;/em&gt; using e.g.&amp;nbsp;&lt;code&gt;mac os7 file.img&lt;/code&gt;&amp;nbsp;- then the &lt;em&gt;Mac OS&lt;/em&gt; concerned will be launched and the image content will appear on the desktop as an additional drive.&lt;/p&gt; &#xA;&lt;h3&gt;SyncTERM&lt;/h3&gt; &#xA;&lt;p&gt;It is currently the best application for connecting with modern-day BBSs using the telnet protocol. It is compiled with options which use the &lt;em&gt;SDL&lt;/em&gt; graphic library, thanks to which it uses a wide selection of appropriately adapted fonts in the graphic mode rather than system fonts. Again, SyncTERM does not require &lt;em&gt;X.org&lt;/em&gt; to run, and the program itself launches in the full screen mode by default.&lt;/p&gt; &#xA;&lt;h3&gt;Raspberry Pi OS dual-boot&lt;/h3&gt; &#xA;&lt;p&gt;Information about the possibility to launch &lt;em&gt;Raspberry Pi OS&lt;/em&gt; in &lt;em&gt;dual boot&lt;/em&gt;, along with &lt;strong&gt;BMC64&lt;/strong&gt;, the fast &lt;em&gt;Commodore emulator&lt;/em&gt;, is contained in a separate&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/jaromaz/MacintoshPi/main/dual-boot/README.md&#34;&gt;README dual-boot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to install additional software&lt;/h3&gt; &#xA;&lt;p&gt;Software for &lt;em&gt;Mac OS 7&lt;/em&gt;, &lt;em&gt;Mac OS 8&lt;/em&gt; and &lt;em&gt;Mac OS 9&lt;/em&gt; can be found on the following websites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macintoshgarden.org&#34;&gt;Macintosh Garden&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macintoshrepository.org&#34;&gt;Macintosh Repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mac.org&#34;&gt;mac.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://websites.umich.edu/~archive/mac/&#34;&gt;The Macintosh Archives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mirror.macintosharchive.org&#34;&gt;Macintosh Archive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://macgui.com/downloads/?cat_id=56&#34;&gt;Mac GUI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These websites can be used comfortably in the &lt;em&gt;Chromium&lt;/em&gt; browser directly in &lt;em&gt;Raspberry Pi OS&lt;/em&gt; - downloaded files are saved by default in directory&amp;nbsp;&lt;code&gt;/home/pi/Downloads&lt;/code&gt;, which is configured as a shared directory for all &lt;em&gt;Mac OSs&lt;/em&gt; contained in this project - under &lt;em&gt;Mac OS&lt;/em&gt;, it is displayed as a&amp;nbsp;&lt;em&gt;Unix drive&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Although not every downloaded app will run in the &lt;em&gt;Basilisk II&lt;/em&gt; or &lt;em&gt;SheepShaver&lt;/em&gt; emulation (this is the case with e.g. OpenGL applications), the vast majority will run correctly. Before downloading, make sure that the software is from the&amp;nbsp;abandonware&amp;nbsp;group or purchase the required licence if still possible.&lt;/p&gt; &#xA;&lt;p&gt;There are three methods to install the software, depending on the type of the file downloaded:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The file downloaded has the&amp;nbsp;&lt;code&gt;.sit&lt;/code&gt;&amp;nbsp;extension and contains either a&amp;nbsp;&lt;code&gt;.toast&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;.iso&lt;/code&gt; CD image:&lt;/p&gt; &lt;p&gt;unpack the file under&amp;nbsp;&lt;em&gt;Raspberry Pi OS&lt;/em&gt;&amp;nbsp;using the&amp;nbsp;&lt;code&gt;unar file.sit&lt;/code&gt;&amp;nbsp;command; remove any spaces from the name of the unpacked&amp;nbsp;&lt;code&gt;.toast&lt;/code&gt;&amp;nbsp;file (if there are any), and then mount the&amp;nbsp;&lt;code&gt;.toast&lt;/code&gt;&amp;nbsp;file using the&amp;nbsp;&lt;code&gt;cdload file.toast&lt;/code&gt; command. Next, launch a given &lt;em&gt;Mac OS&lt;/em&gt; version and install the software from the virtual CD drive that will be displayed on the desktop.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The file downloaded has either the&amp;nbsp;&lt;code&gt;.sit&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;.zip&lt;/code&gt; extension, and contains an&amp;nbsp;&lt;code&gt;.img&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;.dsk&lt;/code&gt; file:&lt;/p&gt; &lt;p&gt;unpack the file under&amp;nbsp;&lt;em&gt;Raspberry Pi OS&lt;/em&gt;&amp;nbsp;using either the&amp;nbsp;&lt;code&gt;unar file.sit&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;unzip file.zip&lt;/code&gt; command; remove any spaces from the unpacked&amp;nbsp;&lt;code&gt;.img&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;.dsk&lt;/code&gt;&amp;nbsp;file and launch a given &lt;code&gt;Mac OS&lt;/code&gt; using the&amp;nbsp;&lt;code&gt;mac os7 file.img&lt;/code&gt;&amp;nbsp;command - then the image will be automatically added to the system and will appear as an additional drive on the desktop.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The file downloaded has the&amp;nbsp;&lt;code&gt;.sit&lt;/code&gt;&amp;nbsp;extension, and contains software dedicated directly to &lt;em&gt;Mac OS&lt;/em&gt;:&lt;/p&gt; &lt;p&gt;first download an image of&amp;nbsp;&lt;code&gt;Stuffit Expander&lt;/code&gt; app&amp;nbsp;and install this software in &lt;code&gt;Mac OS&lt;/code&gt;; next, take the&amp;nbsp;&lt;code&gt;.sit&lt;/code&gt;&amp;nbsp;file proper originally downloaded to the&amp;nbsp;&lt;code&gt;Downloads&lt;/code&gt;&amp;nbsp;directory and copy it, already in &lt;em&gt;Mac OS&lt;/em&gt;, from the&amp;nbsp;&lt;code&gt;Unix&lt;/code&gt;&amp;nbsp;directory to the&amp;nbsp;&lt;em&gt;Macintosh HD&lt;/em&gt;&amp;nbsp;virtual drive and double click the file to unpack it directly in &lt;em&gt;Mac OS&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;About my Macintosh Classic II&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jaromaz/MacintoshPi/main/assets/img/table.jpg&#34; alt=&#34;MacintoshPi Classic II&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;My version of MacintoshPi is driven by &lt;em&gt;Raspberry Pi 3B+&lt;/em&gt;. I bought my&amp;nbsp;&lt;em&gt;Macintosh Classic II&lt;/em&gt;&amp;nbsp;case on eBay - it was completely yellow, but I restored it to the factory condition by means of 18% hydrogen peroxide and appropriate light exposure. Its&amp;nbsp;&lt;em&gt;LCD IPS 10.1’’ 1024x600px HDMI Waveshare 11870&lt;/em&gt;&amp;nbsp;screen is turned 180°, so that the wiring does not interfere with the upper Macintosh frame. I filled up the space between the flat screen and what was left of the CRT shape with&amp;nbsp;a &lt;a href=&#34;https://www.thingiverse.com/thing:3551263/files&#34;&gt;3D printout&lt;/a&gt; designed by the authors of the&amp;nbsp;&lt;a href=&#34;https://www.youtube.com/watch?v=nguN392TH-g&#34;&gt;2GuysTek&lt;/a&gt; YouTube channel. The &lt;em&gt;Waveshare&lt;/em&gt; screen is a bit too wide, but appropriate operation of the&amp;nbsp;&lt;code&gt;config.txt&lt;/code&gt;&amp;nbsp;file allows software rotation and precise definition of the displayed screen image for each system or application (after a restart). The screen is also too low, which is why I filled up the void with black cardstock, and so those elements are practically indistinguishable (they look like the black background of the frame surrounding the screen). However, I recommend using a different, slightly larger screen, and then use software to reduce the screen image displayed and establish its appropriate position. The keyboard and mouse are&amp;nbsp;&lt;em&gt;Logiteh MK295 Silent Wireless Combo&lt;/em&gt;&amp;nbsp;- they only slightly similar in style to peripheral devices supplied back in the day, but they are also wireless and use a single bluetooth dongle. I added two speakers connected to a &lt;em&gt;Raspberry Pi 3B+&lt;/em&gt; analogue audio/jack input and to a splitter. I integrated all those elements inside the &lt;em&gt;Apple Macintosh Classic II&lt;/em&gt; case.&lt;/p&gt; &#xA;&lt;h3&gt;About this Project&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;ve been working on the topic of Apple computers emulation for about five years now (because I really like and appreciate Apple retro systems), and the topic is quite complex: problems with building the correct images, with configuring system images for Internet support, with the appropriate configs for emulators, with the correct options for compiling emulators and (separately) SDL2 (because, of course, SDL2 from a package won&#39;t work in emulation), with performance, with the correct compilation of NetDriver, with versions of libraries (because they have to be legacy), with minimizing mouse movement delay, problems with sound, etc. etc. Of course, I&#39;m talking about the problems that beginners will encounter, after which they will get discouraged and throw these emulators out. Since I solved all these problems on my Raspberry Pi, I decided to make this solution available to Everyone, so that you can just run one script and get all three systems in one package without any effort - and that&#39;s what this little project is.&lt;/p&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;You can transfer any funds you wish to my &lt;em&gt;&lt;a href=&#34;https://www.paypal.com/paypalme/jaromaz&#34;&gt;PayPal account&lt;/a&gt;&lt;/em&gt; if you want to support this project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LukeShortCloud/winesapOS</title>
    <updated>2022-07-10T01:53:54Z</updated>
    <id>tag:github.com,2022-07-10:/LukeShortCloud/winesapOS</id>
    <link href="https://github.com/LukeShortCloud/winesapOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;winesapOS - Game with Linux anywhere, no installation required!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;winesapOS &lt;img src=&#34;https://user-images.githubusercontent.com/10150374/158224898-bdb4ad3a-ad09-478c-a09d-d313feeb8713.png&#34; width=&#34;15%&#34; height=&#34;15%&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Game with Linux anywhere, no installation required!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/10150374/176823142-88deb83d-ad21-4049-9dde-112541a84d68.jpg&#34; alt=&#34;winesapOS_3_Desktop_Screenshot 720p&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;winesapOS makes it easy to setup Linux and play games off an internal or portable external drive.&lt;/p&gt; &#xA;&lt;p&gt;This project provides an opinionated installation of Linux. It can be used on a flash drive, SD card, HDD, SSD, NVMe, or any other storage device. Both internal and external devices are fully supported. The &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/releases&#34;&gt;release images&lt;/a&gt; are based on SteamOS 3 and the KDE Plasma desktop environment to align with what Valve&#39;s &lt;a href=&#34;https://store.steampowered.com/steamdeck/&#34;&gt;Steam Deck&lt;/a&gt; uses. Software for various games launchers are pre-installed. Additional drivers are installed to support Macs with Intel processors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TABLE OF CONTENTS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#winesapos&#34;&gt;winesapOS&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#macos-limitations&#34;&gt;macOS Limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#features&#34;&gt;Features&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#general&#34;&gt;General&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#mac-support&#34;&gt;Mac Support&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#playstation-4-support&#34;&gt;PlayStation 4 Support&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#community-collaboration&#34;&gt;Community Collaboration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#winesapos-repository&#34;&gt;winesapOS Repository&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#comparison-with-steamos&#34;&gt;Comparison with SteamOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#release-builds&#34;&gt;Release Builds&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#custom-builds&#34;&gt;Custom Builds&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#secure-image&#34;&gt;Secure Image&lt;/a&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#differences&#34;&gt;Differences&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#mac-boot&#34;&gt;Mac Boot&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#upgrades&#34;&gt;Upgrades&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#tips&#34;&gt;Tips&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#no-sound-muted-audio&#34;&gt;No Sound (Muted Audio)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#btrfs-backups&#34;&gt;Btrfs Backups&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#steam&#34;&gt;Steam&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#vpn-zerotier&#34;&gt;VPN (ZeroTier)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#release-image-zip-files&#34;&gt;Release Image Zip Files&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#root-file-system-resizing&#34;&gt;Root File System Resizing&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#some-package-updates-are-ignored&#34;&gt;Some Package Updates are Ignored&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#pamac-shows-ignored-packages&#34;&gt;Pamac Shows Ignored Packages&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#available-storage-space-is-incorrect&#34;&gt;Available Storage Space is Incorrect&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#two-or-more-set-ups-of-winesapos-cause-an-unbootable-system&#34;&gt;Two or More Set Ups of winesapOS Cause an Unbootable System&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#reinstalling-winesapos&#34;&gt;Reinstalling winesapOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#frequently-asked-questions-faq&#34;&gt;Frequently Asked Questions (FAQ)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#history&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;macOS Limitations&lt;/h2&gt; &#xA;&lt;p&gt;These are reasons why macOS is inferior compared to Linux when it comes to gaming.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No 32-bit support. The latest version is now 64-bit only. As of November 2021, there are &lt;a href=&#34;https://www.pcgamingwiki.com/wiki/List_of_OS_X_64-bit_games&#34;&gt;1,263 full PC games&lt;/a&gt; (i.e., not apps) on macOS that are available as 64-bit. That number is only &lt;a href=&#34;https://store.steampowered.com/search/?category1=998&#34;&gt;2% of the 59,368 games available on Steam&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;As of November 2021, &lt;a href=&#34;https://www.protondb.com/&#34;&gt;83% of reported Steam games run on Linux&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Macs in 2020 have started the move from Intel to Arm-based processors, further lowering the amount of full games it supports natively to almost zero.&lt;/li&gt; &#xA; &lt;li&gt;The Apple M1 Arm-based processor has limited graphics capabilities and that are &lt;a href=&#34;https://arstechnica.com/gadgets/2020/11/hands-on-with-the-apple-m1-a-seriously-fast-x86-competitor/&#34;&gt;comparable to integrated graphics offered by AMD and Intel&lt;/a&gt;. These Macs are not designed to be gaming computers. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Intel x86_64 games played through the Rosetta 2 compatibility layer have over a &lt;a href=&#34;https://www.macrumors.com/2020/11/15/m1-chip-emulating-x86-benchmark/&#34;&gt;20% performance penalty&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Steam Play&#39;s Proton is only &lt;a href=&#34;https://github.com/ValveSoftware/Proton/wiki/Requirements&#34;&gt;supported on Linux&lt;/a&gt; (&lt;a href=&#34;https://github.com/ValveSoftware/Proton/issues/1344&#34;&gt;not macOS&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Old and incomplete implementation of OpenGL.&lt;/li&gt; &#xA; &lt;li&gt;No native Vulkan support. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MoltenVK is &lt;a href=&#34;https://github.com/KhronosGroup/MoltenVK/issues/203&#34;&gt;incomplete due to missing functionality in Apple&#39;s Metal API&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux has better gaming support because it supports 32-bit applications, DirectX (via Wine with WineD3D, DXVK, and/or Vkd3d), OpenGL, and Vulkan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codeweavers.com/crossover&#34;&gt;CrossOver Mac&lt;/a&gt;, a commercial Wine product, is one of the few ways to run games on macOS but has some limitations. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It costs money and usually requires a new license yearly.&lt;/li&gt; &#xA;   &lt;li&gt;32-bit Windows application support on 64-bit only macOS versions is still buggy.&lt;/li&gt; &#xA;   &lt;li&gt;It is always based on a old stable Wine version that is at least one year behind upstream Wine version.&lt;/li&gt; &#xA;   &lt;li&gt;Vulkan support via MoltenVK is incomplete due to missing functionality in Apple&#39;s Metal API.&lt;/li&gt; &#xA;   &lt;li&gt;DXVK (DirectX 9-11), via a modified version of MoltenVK, has limited support. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;MoltenVK does not expose all of the features in Vulkan required by DXVK.&lt;/li&gt; &#xA;     &lt;li&gt;MoltenVK only exposes 64-bit Vulkan support. This means that DirectX 11 games that use 32-bit libraries will not work via DXVK.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Vkd3d (DirectX 12) will not be supported until at least &lt;a href=&#34;https://www.codeweavers.com/blog/cjsilver/2021/12/22/were-getting-there-crossover-support-for-directx-12&#34;&gt;2023&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Linux has &lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=FUTEX2-Bits-In-Locking-Core&#34;&gt;kernel-level optimizations&lt;/a&gt; for Wine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;General&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Any computer with an AMD or Intel processor can run winesapOS.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portability.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A drive is bootable on both BIOS and UEFI systems.&lt;/li&gt; &#xA;   &lt;li&gt;Applications are installed using Flatpaks, a universal package manager for Linux, where possible.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Persistent storage.&lt;/strong&gt; Unlike traditional Linux live media, all storage is persistent and kept upon reboots. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Upon the first boot, the root partition is expanded to utilize all available space.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supportability.&lt;/strong&gt; Linux is easy to troubleshoot remotely. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Access: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://remotedesktop.google.com/&#34;&gt;Chrome Remote Desktop&lt;/a&gt; via &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt; can be used to provide remote access similar to Windows RDP.&lt;/li&gt; &#xA;     &lt;li&gt;SSH can be accessed via clients on the same &lt;a href=&#34;https://www.zerotier.com/&#34;&gt;ZeroTier VPN&lt;/a&gt; network.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://tmate.io/&#34;&gt;tmate&lt;/a&gt; makes sharing SSH sessions without VPN connections easy.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Tools: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.clamav.net/&#34;&gt;ClamAV&lt;/a&gt;, and the GUI front-end &lt;a href=&#34;https://github.com/dave-theunsub/clamtk&#34;&gt;Clamtk&lt;/a&gt;, is an open source anti-virus scanner.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/shundhammer/qdirstat&#34;&gt;QDirStat&lt;/a&gt; provides a graphical user interface to view storage space usage.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Usability.&lt;/strong&gt; Software for typical day-to-day use is provided. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;BalenaEtcher&lt;/a&gt; for an image flashing utility.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/blueman-project/blueman&#34;&gt;Blueman&lt;/a&gt; for a Bluetooth pairing client.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://usebottles.com/&#34;&gt;Bottles&lt;/a&gt; for installing any Windows program.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://discord.com/&#34;&gt;Discord&lt;/a&gt; for a gaming chat client.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.kde.org/dolphin/&#34;&gt;Dolphin&lt;/a&gt; (KDE Plasma) or &lt;a href=&#34;https://github.com/linuxmint/nemo&#34;&gt;Nemo&lt;/a&gt; (Cinnamon) = A file manager.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.gnome.org/Apps/Cheese&#34;&gt;Cheese&lt;/a&gt; for a webcam software.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://support.mozilla.org/en-US/kb/switch-to-firefox-extended-support-release-esr&#34;&gt;Firefox ESR&lt;/a&gt; for a stable web browser.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://firewalld.org/&#34;&gt;Firewall&lt;/a&gt; (secure image) provides a GUI for managing firewalld.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt; for a newer web browser.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.kde.org/gwenview/&#34;&gt;Gwenview&lt;/a&gt; (KDE Plasma) or &lt;a href=&#34;https://community.linuxmint.com/software/view/pix&#34;&gt;Pix&lt;/a&gt; (Cinnamon) for an image gallery application.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://keepassxc.org/&#34;&gt;KeePassXC&lt;/a&gt; for a cross-platform password manager.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.libreoffice.org/&#34;&gt;LibreOffice&lt;/a&gt; provides an office suite.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://obsproject.com/&#34;&gt;Open Broadcaster Software (OBS) Studio&lt;/a&gt; for a recording and streaming utility.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://peazip.github.io/&#34;&gt;PeaZip&lt;/a&gt; for an archive/compression utility.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shutter-project.org/&#34;&gt;Shutter&lt;/a&gt; for a screenshot utility.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://terminator-gtk3.readthedocs.io/en/latest/&#34;&gt;Terminator&lt;/a&gt; for a terminal emulator.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://transmissionbt.com/&#34;&gt;Transmission&lt;/a&gt; for a torrent client.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.veracrypt.fr/en/Home.html&#34;&gt;VeraCrypt&lt;/a&gt; for a cross-platform encryption utility.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/&#34;&gt;VLC&lt;/a&gt; for a media player.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tralph3/ZeroTier-GUI&#34;&gt;ZeroTier GUI&lt;/a&gt; for a VPN utility for online LAN gaming.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gaming support&lt;/strong&gt; out-of-the-box. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Game launchers: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/&#34;&gt;Steam&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Heroic-Games-Launcher/HeroicGamesLauncher&#34;&gt;Heroic Games Launcher&lt;/a&gt; for Epic Games Store games.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://lutris.net/&#34;&gt;Lutris&lt;/a&gt; for all other games.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://polymc.org/&#34;&gt;PolyMC&lt;/a&gt; for vanilla and modded Minecraft: Java Edition.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Wine: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/GloriousEggroll/wine-ge-custom&#34;&gt;Wine GE&lt;/a&gt; and &lt;a href=&#34;https://github.com/wine-staging/wine-staging&#34;&gt;Wine Staging&lt;/a&gt; for running Windows applications and games without a game launcher.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/GloriousEggroll/proton-ge-custom&#34;&gt;Proton GE&lt;/a&gt; is installed along with the ProtonUp-Qt package manager for it. This provides better Windows games compatibility in Steam.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/FeralInteractive/gamemode&#34;&gt;GameMode&lt;/a&gt; is available to be used to speed up games.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Plagman/gamescope&#34;&gt;Gamescope&lt;/a&gt; for helping play older games with frame rate or resolution issues.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/flightlessmango/MangoHud&#34;&gt;MangoHUD&lt;/a&gt; for benchmarking OpenGL and Vulkan games.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/benjamimgois/goverlay&#34;&gt;GOverlay&lt;/a&gt; is a GUI for managing Vulkan overlays including MangoHUD, ReplaySorcery, and vkBasalt.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mtkennerly/ludusavi&#34;&gt;Ludusavi&lt;/a&gt; is a game save files manager.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/DavidoTek/ProtonUp-Qt&#34;&gt;ProtonUp-Qt&lt;/a&gt; for managing Steam Play compatibility tools.&lt;/li&gt; &#xA;   &lt;li&gt;ZeroTier VPN can be used to play LAN-only games online with friends.&lt;/li&gt; &#xA;   &lt;li&gt;Open source OpenGL and Vulkan drivers are installed for AMD and Intel graphics.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Controller support&lt;/strong&gt; for most controllers. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;All official PlayStation and Xbox controllers are supported.&lt;/li&gt; &#xA;   &lt;li&gt;All generic DirectInput and XInput controllers are supported.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/AntiMicroX/antimicrox&#34;&gt;AntiMicroX&lt;/a&gt; is provided for configuring controller input for non-Steam games.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Steam Deck look and feel&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Desktop Steam client runs with the windowed Steam Deck UI.&lt;/li&gt; &#xA;   &lt;li&gt;KDE Plasma desktop environment uses Valve&#39;s Vapor theme.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimize writes&lt;/strong&gt; to the drive to improve its longevity. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Root file system is mounted with the options &lt;code&gt;noatime&lt;/code&gt; and &lt;code&gt;nodiratime&lt;/code&gt; to not write the access times for files and directories.&lt;/li&gt; &#xA;   &lt;li&gt;Temporary directories with heavy writes (&lt;code&gt;/tmp/&lt;/code&gt;, &lt;code&gt;/var/log/&lt;/code&gt;, and &lt;code&gt;/var/tmp/&lt;/code&gt;) are mounted as RAM-only file systems.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/software/systemd/man/systemd-journald.service.html&#34;&gt;systemd-journald&lt;/a&gt; is configured to use volatile (RAM-only) storage for all system logs.&lt;/li&gt; &#xA;   &lt;li&gt;Swappiness level is set to 10% (down from the default of 60%).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full backups&lt;/strong&gt; via Btrfs. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/openSUSE/snapper&#34;&gt;Snapper&lt;/a&gt; takes 12 monthly and 1 annual snapshots.&lt;/li&gt; &#xA;   &lt;li&gt;Snapper takes a backup whenever the &lt;code&gt;pacman&lt;/code&gt; package manager is used.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Antynea/grub-btrfs&#34;&gt;grub-btrfs&lt;/a&gt; automatically generates a GRUB menu entry for all of the Btrfs backups.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No automatic operating system updates.&lt;/strong&gt; Updates should always be intentional and planned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Most file systems supported.&lt;/strong&gt; Access any storage device, anywhere. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;APFS&lt;/li&gt; &#xA;   &lt;li&gt;Btrfs&lt;/li&gt; &#xA;   &lt;li&gt;ext2, ext3, and ext4&lt;/li&gt; &#xA;   &lt;li&gt;exFAT&lt;/li&gt; &#xA;   &lt;li&gt;FAT12, FAT16, and FAT32&lt;/li&gt; &#xA;   &lt;li&gt;HFS and HFS+&lt;/li&gt; &#xA;   &lt;li&gt;NTFS&lt;/li&gt; &#xA;   &lt;li&gt;XFS&lt;/li&gt; &#xA;   &lt;li&gt;ZFS&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battery optimizations.&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://github.com/AdnanHodzic/auto-cpufreq&#34;&gt;auto-cpufreq&lt;/a&gt; service provides automatic power management.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully automated installation.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mac Support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;All Intel Macs are supported.&lt;/strong&gt; Linux works on most Macs out-of-the-box these days. Drivers are pre-installed for newer hardware where native Linux support is missing.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hardware&lt;/th&gt; &#xA;   &lt;th&gt;Supported&lt;/th&gt; &#xA;   &lt;th&gt;Third-Party Driver(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Keyboard&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MCMrARM/mbp2018-bridge-drv&#34;&gt;mbp2018-bridge-drv&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mouse&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MCMrARM/mbp2018-bridge-drv&#34;&gt;mbp2018-bridge-drv&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NVMe&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MCMrARM/mbp2018-bridge-drv&#34;&gt;mbp2018-bridge-drv&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sound&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MCMrARM/mbp2018-bridge-drv&#34;&gt;mbp2018-bridge-drv&lt;/a&gt;, &lt;a href=&#34;https://github.com/davidjo/snd_hda_macbookpro&#34;&gt;snd_hda_macbookpro&lt;/a&gt;, and &lt;a href=&#34;https://github.com/egorenar/snd-hda-codec-cs8409&#34;&gt;snd-hda-codec-cs8409&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Touch Bar&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MCMrARM/mbp2018-bridge-drv&#34;&gt;mbp2018-bridge-drv&lt;/a&gt; and &lt;a href=&#34;https://github.com/roadrunner2/macbook12-spi-driver&#34;&gt;macbook12-spi-driver&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bluetooth&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WiFi&lt;/td&gt; &#xA;   &lt;td&gt;Partial&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/MCMrARM/mbp2018-bridge-drv&#34;&gt;mbp2018-bridge-drv&lt;/a&gt; driver provides support for the Apple T2 security chip found on newer Macs. Without this, no hardware would work on Linux.&lt;/p&gt; &#xA;&lt;p&gt;Although we do not provide any additional drivers for wider WiFi support on Macs, the built-in Linux kernel drivers do support it for some devices. If your device does not work, consider purchasing a USB WiFi device that Linux natively supports by using &lt;a href=&#34;https://github.com/morrownr/USB-WiFi/raw/main/home/USB_WiFi_Adapters_that_are_supported_with_Linux_in-kernel_drivers.md&#34;&gt;this guide&lt;/a&gt; by &lt;a href=&#34;https://github.com/morrownr&#34;&gt;Nick (morrownr)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information about Linux support on Macs, refer to the &lt;a href=&#34;https://github.com/Dunedan/mbp-2016-linux&#34;&gt;Linux on MacBook Pro compatibility guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;PlayStation 4 Support&lt;/h3&gt; &#xA;&lt;p&gt;winesapOS has been ported to the PS4 thanks to the hard work from Noob404 as part of the &lt;a href=&#34;https://ps4linux.com/&#34;&gt;PS4Linux&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://ps4linux.com/winesap-os-3-ps4-release/&#34;&gt;winesapOS 3, based on SteamOS 3 for PS4 with Mesa 22.0.3: PS4 Distro Release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Video: &lt;a href=&#34;https://www.youtube.com/watch?v=fYd9iz7LIfA&#34;&gt;winesapOS 3 for PS4, based on SteamOS 3 | Sims 4 at 60+FPS, 2K (1440p) YouTube Video playback &amp;amp; more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community Collaboration&lt;/h3&gt; &#xA;&lt;p&gt;We are actively working alongside these projects to help provide wider SteamOS 3 and/or Steam Deck support to the masses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://batocera.org/&#34;&gt;Batocera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/theVakhovskeIsTaken/holoiso&#34;&gt;HoloISO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ps4linux.com/&#34;&gt;PS4Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;winesapOS Repository&lt;/h3&gt; &#xA;&lt;p&gt;As of winesapOS 3.1.0, we now provide our own repository with some AUR packages pre-built. This repository works on Arch Linux, Manjaro, and SteamOS 3. It is enabled on winesapOS by default. Depending on what distribution you are on, here is how it can be enabled:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arch Linux or Manjaro: &lt;pre&gt;&lt;code&gt;sudo sed -i s&#39;/\[core]/[winesapos]\nServer = https:\/\/winesapos.lukeshort.cloud\/repo\/$repo\/$arch\nSigLevel = Never\n\n[core]/&#39;g /etc/pacman.conf&#xA;sudo pacman -S -y -y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;SteamOS 3: &lt;pre&gt;&lt;code&gt;sudo sed -i s&#39;/\[jupiter]/[winesapos]\nServer = https:\/\/winesapos.lukeshort.cloud\/repo\/$repo\/$arch\nSigLevel = Never\n\n[jupiter]/&#39;g /etc/pacman.conf&#xA;sudo pacman -S -y -y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Comparison with SteamOS&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th&gt;SteamOS 3&lt;/th&gt; &#xA;   &lt;th&gt;winesapOS 3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SteamOS packages&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch Linux packages&lt;/td&gt; &#xA;   &lt;td&gt;Old&lt;/td&gt; &#xA;   &lt;td&gt;New&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Boot compatibility&lt;/td&gt; &#xA;   &lt;td&gt;UEFI&lt;/td&gt; &#xA;   &lt;td&gt;UEFI and legacy BIOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Graphics drivers&lt;/td&gt; &#xA;   &lt;td&gt;AMD&lt;/td&gt; &#xA;   &lt;td&gt;AMD, Intel, and NVIDIA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Audio server&lt;/td&gt; &#xA;   &lt;td&gt;PipeWire&lt;/td&gt; &#xA;   &lt;td&gt;PipeWire&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read-only file system&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Encrypted file system&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes (secure image)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;File system backup type&lt;/td&gt; &#xA;   &lt;td&gt;A/B partitions&lt;/td&gt; &#xA;   &lt;td&gt;Btrfs snapshots&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Number of possible file system backups&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Unlimited&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package managers (CLI)&lt;/td&gt; &#xA;   &lt;td&gt;pacman, yay, flatpak&lt;/td&gt; &#xA;   &lt;td&gt;pacman, yay, flatpak, snap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Preferred package manager (CLI)&lt;/td&gt; &#xA;   &lt;td&gt;flatpak&lt;/td&gt; &#xA;   &lt;td&gt;flatpak&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Package manager (GUI)&lt;/td&gt; &#xA;   &lt;td&gt;Discover (flatpak)&lt;/td&gt; &#xA;   &lt;td&gt;Discover (flatpak) and Pamac (pacman, yay/AUR, flatpak, and snap)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Update type&lt;/td&gt; &#xA;   &lt;td&gt;Image-based&lt;/td&gt; &#xA;   &lt;td&gt;Package manager&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Number of installed packages&lt;/td&gt; &#xA;   &lt;td&gt;Small&lt;/td&gt; &#xA;   &lt;td&gt;Large&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Game launchers&lt;/td&gt; &#xA;   &lt;td&gt;Steam&lt;/td&gt; &#xA;   &lt;td&gt;Steam, Heroic Games Launcher, Lutris, and PolyMC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux kernels&lt;/td&gt; &#xA;   &lt;td&gt;Neptune (5.13)&lt;/td&gt; &#xA;   &lt;td&gt;Neptune (5.13) and Linux LTS (5.15)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Additional Mac drivers&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Desktop environment&lt;/td&gt; &#xA;   &lt;td&gt;Plasma&lt;/td&gt; &#xA;   &lt;td&gt;Plasma&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Desktop theme&lt;/td&gt; &#xA;   &lt;td&gt;Vapor&lt;/td&gt; &#xA;   &lt;td&gt;Vapor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AMD FSR&lt;/td&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td&gt;Per-game&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gamescope&lt;/td&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td&gt;Per-game&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wine&lt;/td&gt; &#xA;   &lt;td&gt;Proton&lt;/td&gt; &#xA;   &lt;td&gt;Proton, GE-Proton, Wine Staging, and Wine-GE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Game controller support&lt;/td&gt; &#xA;   &lt;td&gt;Large&lt;/td&gt; &#xA;   &lt;td&gt;Large&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;exFAT flash drive storage&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes (16 GB)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Minimum:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Processor = Dual-core AMD or Intel processor.&lt;/li&gt; &#xA; &lt;li&gt;RAM = 4 GiB.&lt;/li&gt; &#xA; &lt;li&gt;Graphics = AMD, Intel, or NVIDIA graphics device.&lt;/li&gt; &#xA; &lt;li&gt;Storage = 64 GB USB 3.2 Gen 1 (USB 3.0) flash drive.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recommended:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Processor = Quad-core AMD or Intel processor.&lt;/li&gt; &#xA; &lt;li&gt;RAM = 16 GiB.&lt;/li&gt; &#xA; &lt;li&gt;Graphics = AMD discrete graphics card.&lt;/li&gt; &#xA; &lt;li&gt;Storage &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Internal = 512 GB NVMe SSD.&lt;/li&gt; &#xA;   &lt;li&gt;External = 512 GB USB 3.2 Gen 2 (USB 3.1) SSD.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;h4&gt;Release Builds&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/releases&#34;&gt;release&lt;/a&gt; image archive files. These zip files and the extracted image will be large. In a future release, we will provide a minimal image that is significantly smaller. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Performance (recommended) = Requires 40 GiB of free space to download and extract. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-performance-&amp;lt;VERSION&amp;gt;.img.zip&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-performance-&amp;lt;VERSION&amp;gt;.img.z01&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-performance-&amp;lt;VERSION&amp;gt;.img.z02&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-performance-&amp;lt;VERSION&amp;gt;.img.z03&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-performance-&amp;lt;VERSION&amp;gt;.img.z04&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Secure (for advanced users only) = Requires 50 GiB of free space to download and extract. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.zip&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.z01&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.z02&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.z03&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.z04&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.z05&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;winesapos-secure-&amp;lt;VERSION&amp;gt;.img.z06&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;If you do not have enough free space to download and extract a release build, consider doing a &lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#custom-builds&#34;&gt;custom build&lt;/a&gt; instead.&lt;/li&gt; &#xA;   &lt;li&gt;PlayStation 4 = Requires a special build that is hosted by the PS4Linux project. For more details, read &lt;a href=&#34;https://ps4linux.com/winesap-os-3-ps4-release/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Extract the &lt;code&gt;winesapos-&amp;lt;VERSION&amp;gt;.img.zip&lt;/code&gt; archive. This will automatically extract all of the other &lt;code&gt;zip&lt;/code&gt; file parts. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;GUI: Use &lt;a href=&#34;https://peazip.github.io/&#34;&gt;PeaZip&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;CLI: &lt;code&gt;7z x winesapos-&amp;lt;VERSION&amp;gt;.img.zip&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;macOS: Use &lt;a href=&#34;https://peazip.github.io/&#34;&gt;PeaZip&lt;/a&gt; or &lt;a href=&#34;https://www.keka.io/&#34;&gt;Keka&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Windows: Use &lt;a href=&#34;https://peazip.github.io/&#34;&gt;PeaZip&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Flash the image to an internal or external storage device. &lt;strong&gt;WARNING:&lt;/strong&gt; This will delete any existing data on that storage device. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Linux, macOS, and Windows, the &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; GUI utility can be used to flash the image.&lt;/li&gt; &#xA;   &lt;li&gt;On Linux and macOS, the &lt;code&gt;dd&lt;/code&gt; CLI utility can be used to flash the image.&lt;/li&gt; &#xA;   &lt;li&gt;Ventoy is not supported because winesapOS is not a traditional live media. Support for this will be added for this in the future.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Default accounts have a password set that mirror the username:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;winesapOS (major version &amp;gt;= 3)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Username&lt;/th&gt; &#xA;   &lt;th&gt;Password&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;winesap&lt;/td&gt; &#xA;   &lt;td&gt;winesap&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac Linux Gaming Stick (major version &amp;lt;= 2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Username&lt;/th&gt; &#xA;   &lt;th&gt;Password&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stick&lt;/td&gt; &#xA;   &lt;td&gt;stick&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Upon first login, the &#34;winesapOS First-Time Setup&#34; wizard will launch. It will help setup graphics drivers, the locale, and time zone. The desktop shortcut is located at &lt;code&gt;/home/winesap/.winesapos/winesapos-setup.desktop&lt;/code&gt; and can be manually ran again.&lt;/p&gt; &#xA;&lt;h4&gt;Custom Builds&lt;/h4&gt; &#xA;&lt;p&gt;Instead of using a release build which is already made, advanced users may want to create a custom build. This only requires 1 GiB of free space to download the live Arch Linux environment instead of the full 50 GiB for winesapOS. It also allows using environment variables to configure the build differently than the default release builds.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://archlinux.org/download/&#34;&gt;Download&lt;/a&gt; and setup the latest Arch Linux ISO onto a flash drive that has at least 1 GB of storage.&lt;/p&gt; &lt;p&gt;1a. We also support building winesapOS with Manjaro even though we do not provide release images for it. &lt;a href=&#34;https://manjaro.org/download/&#34;&gt;Download&lt;/a&gt; either the Plasma or Cinnamon desktop edition of Manjaro.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Boot into the flash drive.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the known packages cache and install git.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pacman -S -y&#xA;pacman -S git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/tree/stable&#34;&gt;stable&lt;/a&gt; branch and go to the &#34;scripts&#34; directory.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone --branch stable https://github.com/lukeshortcloud/winesapos.git&#xA;cd ./winesapos/scripts/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/raw/stable/DEVELOPER.md#environment-variables&#34;&gt;environment variables&lt;/a&gt; to customize the build. At the very least, allow the build to work on bare-metal and define what &lt;code&gt;/dev/&amp;lt;DEVICE&amp;gt;&lt;/code&gt; block device to install to. &lt;em&gt;&lt;strong&gt;BE CAREFUL AS THIS WILL DELETE ALL EXISTING DATA ON THAT DEVICE!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;export WINESAPOS_BUILD_IN_VM_ONLY=false&#xA;lsblk&#xA;export WINESAPOS_DEVICE=&amp;lt;DEVICE&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the build.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo -E ./winesapos-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check for any test failures (there should be no output from this command).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;grep -P &#39;FAIL$&#39; /winesapos/etc/winesapos/winesapos-install.log&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more detailed information on the build process, we recommend reading the entire &lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/DEVELOPER.md&#34;&gt;DEVELOPER.md&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h4&gt;Secure Image&lt;/h4&gt; &#xA;&lt;p&gt;If using the secure image, the default LUKS encryption key is &lt;code&gt;password&lt;/code&gt; which should be changed after the first boot. Do not do this before the first boot as the default password is used to unlock the partition for it be resized to fill up the entire storage device. Change the LUKS encryption key for the fifth partition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo cryptsetup luksChangeKey /dev/&amp;lt;DEVICE&amp;gt;5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The user account password for &lt;code&gt;winesap&lt;/code&gt; (or &lt;code&gt;stick&lt;/code&gt; on older versions) and &lt;code&gt;root&lt;/code&gt; are the same as the username. They are set to expire immediately. Upon first login, you will be prompted to enter a new password. Here is how to change it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter the default password of &lt;code&gt;winesap&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The prompt will say &#34;Changing password for winesap.&#34; Enter the default password of &lt;code&gt;winesap&lt;/code&gt; again.&lt;/li&gt; &#xA; &lt;li&gt;The prompt will now say &#34;New password&#34;. Enter a new password.&lt;/li&gt; &#xA; &lt;li&gt;The prompt will finally say &#34;Retype new password&#34;. Enter the new password again. The password has been updated and the KDE Plasma desktop will now load.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Differences&lt;/h5&gt; &#xA;&lt;p&gt;These are the main differences between the performance secure images. The performance is focused on speed and ease-of-use. The secure image is recommended for advanced Linux users.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Performance&lt;/th&gt; &#xA;   &lt;th&gt;Secure&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CPU Mitigations&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Encryption&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes (LUKS)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firewall&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes (Firewalld)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux Kernel Updates&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Passwords Require Reset&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Mac Boot&lt;/h4&gt; &#xA;&lt;p&gt;Boot the Mac into an external drive by pressing and releasing the power button. Then hold down the &lt;code&gt;OPTION&lt;/code&gt; key (or the &lt;code&gt;ALT&lt;/code&gt; key on a Windows keyboard) to access the Mac bootloader. Select the &#34;EFI Boot&#34; device.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; Any &lt;a href=&#34;https://support.apple.com/en-us/HT208862&#34;&gt;Mac with an Apple T2 Security Chip&lt;/a&gt;, which are all Macs made in and after 2018, needs to &lt;a href=&#34;https://support.apple.com/en-us/HT208198&#34;&gt;allow booting from external storage&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Turn on the Mac and immediately hold both the &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt; keys to enter recovery mode.&lt;/li&gt; &#xA; &lt;li&gt;Utilities &amp;gt; Startup Security Utility &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Secure Boot = No Security (Does not enforce any requirements on the bootable OS.)&lt;/li&gt; &#xA;   &lt;li&gt;External Boot = Allow booting from external media (Does not restrict the ability to boot from any devices.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Upgrades&lt;/h3&gt; &#xA;&lt;p&gt;Upgrades are supported and recommended between all minor releases of winesapOS. For example, it is supported to go from 2.0.0 to 2.1.0 but not from 2.2.0 to 3.0.0. Major upgrades will be supported in a future release.&lt;/p&gt; &#xA;&lt;p&gt;Where it makes sense, features are backported from newer versions of winesapOS. Bug and security fixes are also included to fix problems either with winesapOS itself or with upstream changes in SteamOS. Even if a user never upgrades winesapOS, users will continue to get regular system upgrades from SteamOS.&lt;/p&gt; &#xA;&lt;p&gt;Before upgrading, please read the full &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/raw/stable/UPGRADES.md&#34;&gt;UPGRADE.md&lt;/a&gt; notes. This showcases what updates will happen automatically and what updates may need to be manually applied.&lt;/p&gt; &#xA;&lt;p&gt;Development builds do not support upgrades. Here are the releases that we do support upgrades on:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Release&lt;/th&gt; &#xA;   &lt;th&gt;Upgrades Supported&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Release Candidate (RC)&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Beta&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alpha&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Here is how to upgrade winesapOS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GUI = Launch the &#34;winesapOS Upgrade&#34; desktop shortcut.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CLI = Launch the winesapOS upgrade script from the stable branch.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;curl https://raw.githubusercontent.com/LukeShortCloud/winesapOS/stable/scripts/winesapos-upgrade.sh | sudo zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Test booting up the drive first before buying speakers, a Bluetooth adapter, a WiFi adapter, and/or other hardware. Depending on the Mac, the built-in hardware may work out-of-the-box.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Temporarily allow the &lt;code&gt;brcmfmac&lt;/code&gt; and &lt;code&gt;brcmutil&lt;/code&gt; drivers to see if the built-in WiFi will work. Remove the relevant entries from &lt;code&gt;/etc/modprobe.d/winesapos.conf&lt;/code&gt; and then use &lt;code&gt;modprobe&lt;/code&gt; to manually load the drivers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Plug additional hardware into a USB hub. Connect the USB hub to the computer before booting.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do NOT move the USB hub after plugging it in and booting up Linux. It can easily disconnect leading to a corrupt file system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consider buying an SSD instead of a flash drive for a longer life-span, more storage, and faster speeds.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Avoid using Flatpak and Snap packages. These use a lot of additional space compared to native system packages. Programs packaged this way are also slower.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete old Btrfs backups when the drive is running low on storage space.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ sudo snapper list&#xA;$ sudo snapper delete &amp;lt;SNAPSHOT_NUMBER&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable Proton for all Windows games. This will allow them to run in Linux. For more information about Proton, &lt;a href=&#34;https://www.gamingonlinux.com/2019/07/a-simple-guide-to-steam-play-valves-technology-for-playing-windows-games-on-linux&#34;&gt;read this starter guide&lt;/a&gt;. Check the compatibility rating for games on Steam by using &lt;a href=&#34;https://www.protondb.com/&#34;&gt;ProtonDB&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Settings &amp;gt; Steam Play &amp;gt; Enable Steam Play for Support Titles &amp;gt; Use this tool instead of game-specific selections from Steam &amp;gt; Compatibility tool: &amp;gt; (select the latest &#34;Proton&#34; version available) &amp;gt; OK&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;No Sound (Muted Audio)&lt;/h3&gt; &#xA;&lt;p&gt;When Mac hardware is detected, all sound is muted on boot because on newer Macs the experimental sound driver is extremely loud. This means that any sound volume changes will be reset on the next boot. Here is how the mute configuration can be disabled to allow the sound volume to be saved:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;winesapOS (major version &amp;gt;= 3)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Disable and stop the user (not system) &lt;code&gt;mute&lt;/code&gt; service.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ systemctl --user disable --now mute.service&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac Linux Gaming Stick (major version &amp;lt;= 2)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Move or delete the PulseAudio configuration.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ mv /home/stick/.config/pulse/default.pa ~/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Btrfs Backups&lt;/h3&gt; &#xA;&lt;p&gt;Both the root &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/home&lt;/code&gt; directory have automatic backups/snapshots configured by Snapper. A new backup will be taken every month for 12 months. Separately, a new backup will be taken once every year. The root directory will also have a backup taken whenever &lt;code&gt;pacman&lt;/code&gt; is used to install or remove a package.&lt;/p&gt; &#xA;&lt;p&gt;During boot, GRUB will have a &#34;Arch Linux snapshots&#34; section that will allow booting from a root directory snapshot. This will not appear on first boot because no backups have been taken yet. After a backup has been taken, the GRUB configuration file needs to be regenerated to scan for the new backups.&lt;/p&gt; &#xA;&lt;p&gt;Manually rebuild the GRUB configuration file to load the latest snapshots:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View the available backups:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo snapper -c root list&#xA;$ sudo snapper -c home list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Manually create a new backup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo snapper -c &amp;lt;CONFIG&amp;gt; create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Manually delete a backup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo snapper -c &amp;lt;CONFIG&amp;gt; delete &amp;lt;BACKUP_NUMBER&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Steam&lt;/h3&gt; &#xA;&lt;p&gt;Launch and prefer &lt;code&gt;steam-runtime&lt;/code&gt; over &lt;code&gt;steam-native&lt;/code&gt;. It bundles all of the libraries required for Steam to work. In case that has issues, &lt;code&gt;steam-native&lt;/code&gt; is provided as an alternative for testing purposes. It will use the system libraries instead.&lt;/p&gt; &#xA;&lt;h3&gt;VPN (ZeroTier)&lt;/h3&gt; &#xA;&lt;p&gt;A VPN is required for LAN gaming online. Hamachi is reported to no longer work on newer versions of &lt;a href=&#34;https://aur.archlinux.org/packages/logmein-hamachi/&#34;&gt;Arch Linux&lt;/a&gt; and &lt;a href=&#34;https://community.logmein.com/t5/LogMeIn-Hamachi-Discussions/Hamachi-randomly-disconnects-on-Ubuntu-20-04/td-p/222430&#34;&gt;Ubuntu&lt;/a&gt;. Instead, use the free and open source ZeroTier VPN service.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Host&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Only one person needs to create a &lt;a href=&#34;https://my.zerotier.com/&#34;&gt;ZeroTier account&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;They must then create a &lt;a href=&#34;https://www.stratospherix.com/support/setupvpn_01.php&#34;&gt;ZeroTier network&lt;/a&gt;. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Log into &lt;a href=&#34;https://my.zerotier.com/&#34;&gt;ZeroTier Central&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;&lt;a href=&#34;https://my.zerotier.com/network&#34;&gt;Networks&lt;/a&gt;&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;Create A Network&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Select the &#34;Network ID&#34; or &#34;Name&#34; of the new network to modify the settings. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Either (1) set the &#34;Access Control&#34; to &#34;Public&#34; or (2) use this settings page to manually authorize connected clients to be able to communicate on the network.&lt;/li&gt; &#xA;     &lt;li&gt;Take note of the &#34;Network ID&#34;. Send this string to your friends who will connect to the VPN.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Clients&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the ZeroTier VPN service.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ sudo systemctl enable --now zerotier-one&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect to the ZeroTier network.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ sudo zerotier-cli join &amp;lt;NETWORK_ID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Release Image Zip Files&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge: the release image fails to be extracted from the zip files.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solutions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify the integrity of the downloaded zip files.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Linux:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sha512sum --check winesapos-&amp;lt;IMAGE_TYPE&amp;gt;-&amp;lt;VERSION&amp;gt;_sha512sum.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Windows (open Command Prompt as Administrator):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;C:\Windows\system32&amp;gt;CertUtil.exe -hashfile C:\Users\&amp;lt;USER&amp;gt;\Downloads\&amp;lt;FILE&amp;gt; SHA512&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Not all zip files were downloaded.&lt;/strong&gt; This includes the files ending in &lt;code&gt;.zip&lt;/code&gt; and &lt;code&gt;.z&amp;lt;NUMBER&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Not enough free space.&lt;/strong&gt; Ensure you have 40 GiB (performance image) or 50 GiB (secure image) of free space before downloading the zip files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;PeaZip sometimes fails to extract to the current directory.&lt;/strong&gt; Try extracting to a different directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use a different archive utility.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;PeaZip uses the command &lt;code&gt;7z&lt;/code&gt; for extracting multiple zip archives. Use it manually from the CLI to see more information to help with troubleshooting.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;7z x winesapos-&amp;lt;VERSION&amp;gt;.img.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Root File System Resizing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge: the root file system does not resize itself to use all available space on the storage device.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Re-enable the resize service, reboot, and then view the service log. Open up a &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/issues&#34;&gt;GitHub Issue&lt;/a&gt; with the full log output.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo systemctl enable winesapos-resize-root-file-system&#xA;sudo reboot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code&gt;sudo journalctl --unit winesapos-resize-root-file-system&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Some Package Updates are Ignored&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge: Pacman has packages listed in its &lt;code&gt;IgnorePkg&lt;/code&gt; configuration.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solutions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The performance image prevents updates to Linux kernels updates to prevent breaking third-party kernel modules.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo pacman -S -y&#xA;sudo pacman -S core/linux-lts core/linux-lts-headers kernel-lts/linux-lts510 kernel-lts/linux-lts510-headers jupiter/linux-neptune jupiter/linux-neptune-headers core/grub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The secure image only prevents updates to packages that SteamOS provides conflicting packages to. GRUB and the upstream Linux kernels from SteamOS that can cause an unbootable system. These can be manually upgraded by specifying the Arch Linux repository along with the package name.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo pacman -S -y&#xA;sudo pacman -S core/grub core/linux-lts core/linux-lts-headers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Pamac Shows Ignored Packages&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge: in &#34;Add/Remove Software&#34; (the Pamac package manager) packages that are ignored are showing updates available.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;This is &lt;a href=&#34;https://gitlab.manjaro.org/applications/pamac/-/issues/882#note_17262&#34;&gt;by design&lt;/a&gt;.&lt;/strong&gt; These packages are not selected for update by default (even if it looks like it). Pamac is letting the user know that there are updates available. The user has the option to select them for update but it is not recommended. As described in the Troubleshooting section &lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#some-package-updates-are-ignored&#34;&gt;Some Package Updates are Ignored&lt;/a&gt;, updating certain packages that winesapOS ignores can lead to an unusable system.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Available Storage Space is Incorrect&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge: the amount of reported free space seems too small or large.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solutions:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Btrfs is used as the root file system on winesapOS. The most reliable way to view the amount of storage in-use on Btrfs is with this command.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo btrfs filesystem df /&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Snapper is used to take Btrfs snapshots/backups (1) every time Pacman installs, upgrades, or removes a package and (2) every month. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/LukeShortCloud/winesapOS/main/#btrfs-backups&#34;&gt;Btrfs Backups&lt;/a&gt; section for more information on how to manage those snapshots.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Two or More Set Ups of winesapOS Cause an Unbootable System&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Challenge: winesapOS uses labels for file system mounts which confuses the system if more than one label is found.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change the file system label of at least the root file system&lt;/strong&gt; on one of the winesapOS drives. It is recommended to change all of the labels on that same drive. &lt;strong&gt;This can cause an unbootable system.&lt;/strong&gt; Manually review the contents of &lt;code&gt;/etc/fstab&lt;/code&gt; to ensure it is correct.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;lsblk -o name,label&#xA;export DEVICE=vda&#xA;sudo -E exfatlabel /dev/${DEVICE}2 wos-drive0&#xA;sudo -E fatlabel /dev/${DEVICE}3 WOS-EFI0&#xA;sudo sed -i s&#39;/LABEL=WOS-EFI/LABEL=WOS-EFI0/&#39;g /etc/fstab&#xA;sudo -E e2label /dev/${DEVICE}4 winesapos-boot0&#xA;sudo sed -i s&#39;/LABEL=winesapos-boot/LABEL=winesapos-boot0/&#39;g /etc/fstab&#xA;sudo btrfs filesystem label / winesapos-root0&#xA;sudo btrfs filesystem show /&#xA;sudo sed -i s&#39;/LABEL=winesapos-root/LABEL=winesapos-root0/&#39;g /etc/fstab&#xA;lsblk -o name,label&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Reinstalling winesapOS&lt;/h3&gt; &#xA;&lt;p&gt;Reinstalling winesapOS on-top of an existing winesapOS installation can cause issues. This is because the partitions are perfectly aligned which leads to overlapping data. Even wiping the partition table is not enough. For the best results, it is recommended to completely wipe at least the first 28 GiB of the storage device. &lt;strong&gt;WARNING:&lt;/strong&gt; This will delete any existing data on that storage device.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dd if=/dev/zero of=/dev/&amp;lt;DEVICE&amp;gt; bs=1M count=28000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Frequently Asked Questions (FAQ)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Is this the Mac Linux Gaming Stick project?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes. Version 1 and 2 of the project were called Mac Linux Gaming Stick. In version 3, we rebranded to winesapOS.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How do you pronounce winesapOS?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;wine&lt;/code&gt;-&lt;code&gt;sap&lt;/code&gt;-&lt;code&gt;o&lt;/code&gt;-&lt;code&gt;s&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What is the relevance of the word &#34;winesap&#34; in winesapOS?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is a type of apple which signifies how we develop on Macs and ship drivers for them. It also has the word &#34;wine&#34; in it which is the &lt;a href=&#34;https://www.winehq.org/&#34;&gt;name of the project&lt;/a&gt; used to enable Windows gaming on Linux.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What makes this different than adding persistent storage to a live CD with &lt;a href=&#34;https://www.pendrivelinux.com/&#34;&gt;Universal USB Installer or YUMI&lt;/a&gt;?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Having persistent storage work via these hacky methods can be hit-or-miss depending on the distribution. winesapOS was built from the ground-up to have persistent storage. It also features automatic backups, various gaming tools, has support for Macs, and more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Are Arm Macs supported?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No. In general, Linux support for them are still a work-in-progress.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Is winesapOS a Linux distribution?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes. We provide customized packages, a package repository, various optimizations, and our own upgrade process. winesapOS is a fork of SteamOS 3 (which is a fork of Arch Linux).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do I have to install winesapOS?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No. No installation is required. Flash a &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/releases&#34;&gt;release image&lt;/a&gt; to a drive and then boot from it. Everything is already installed and configured.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What if winesapOS was abandoned?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We have no intentions on ever abandoning winesapOS. Even if that happened, since this is an opinionated installation of an Arch Linux distribution, it will continue to get normal operating system updates.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Can anyone build winesapOS?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes. Refer to the &lt;a href=&#34;https://github.com/LukeShortCloud/winesapOS/raw/main/DEVELOPER.md&#34;&gt;DEVELOPER.md&lt;/a&gt; documentation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Can winesapOS be built with a different Linux distribution?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes. We support Arch Linux, Manjaro, and SteamOS as build targets. As of winesapOS 3, SteamOS 3 is the default target that is used for our releases.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Is winesapOS affiliated with Valve?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No. We are an independent project that is using SteamOS 3 packages and source code.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Release Version/Tag&lt;/th&gt; &#xA;   &lt;th&gt;Project Name&lt;/th&gt; &#xA;   &lt;th&gt;Operating System&lt;/th&gt; &#xA;   &lt;th&gt;Desktop Environment&lt;/th&gt; &#xA;   &lt;th&gt;Release Images&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0.0-beta.0&lt;/td&gt; &#xA;   &lt;td&gt;winesapOS&lt;/td&gt; &#xA;   &lt;td&gt;SteamOS 3&lt;/td&gt; &#xA;   &lt;td&gt;KDE Plasma&lt;/td&gt; &#xA;   &lt;td&gt;Performance and Secure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0.0-alpha.0&lt;/td&gt; &#xA;   &lt;td&gt;winesapOS&lt;/td&gt; &#xA;   &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;   &lt;td&gt;KDE Plasma&lt;/td&gt; &#xA;   &lt;td&gt;Performance and Secure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.2.0&lt;/td&gt; &#xA;   &lt;td&gt;Mac Linux Gaming Stick&lt;/td&gt; &#xA;   &lt;td&gt;Manjaro&lt;/td&gt; &#xA;   &lt;td&gt;Cinnamon&lt;/td&gt; &#xA;   &lt;td&gt;Performance and Secure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.0.0&lt;/td&gt; &#xA;   &lt;td&gt;Mac Linux Gaming Stick&lt;/td&gt; &#xA;   &lt;td&gt;Manjaro&lt;/td&gt; &#xA;   &lt;td&gt;Cinnamon&lt;/td&gt; &#xA;   &lt;td&gt;Performance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;Mac Linux Gaming Stick&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04&lt;/td&gt; &#xA;   &lt;td&gt;Cinnamon&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPLv3&lt;/p&gt;</summary>
  </entry>
</feed>