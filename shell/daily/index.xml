<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:53:36Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haixiangyan/jest-tutorial</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/haixiangyan/jest-tutorial</id>
    <link href="https://github.com/haixiangyan/jest-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🃏《Jest 实践指南》&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🃏《Jest 实践指南》&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/haixiangyan/jest-tutorial?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/haixiangyan/jest-tutorial-example/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jest-tutorial&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/cover.jpeg&#34; width=&#34;300&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.yanhaixiang.com/jest-tutorial/&#34;&gt;《Jest 实践指南》访问链接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haixiangyan/jest-tutorial-example&#34;&gt;《Jest 实践指南》配套项目&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jestjs.io/&#34;&gt;Jest&lt;/a&gt; 看似很简单，就像很多博客写的那样：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;expect(sum(1, 1)).toEqual(2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然而在真实业务中，写出一个好测试的难度并没有大家想的那么低。我总结了一下写测试的几个难点：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不会配置。&lt;/strong&gt; Jest 的上手文档非常简单，甚至不需要配置。但真实情况是只要一个配置没配好，所有测试都跑不起来。测试不像开发，代码有问题可以慢慢调。 测试是一个 0 - 1 游戏，不是成功就是失败，挫败感非常强。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不知道要怎么 Mock。&lt;/strong&gt; 这个绝对是经典中的经典。虽然官方文档有教程，但是真实的业务往往不是那么理想，远比文档要复杂的多。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不会构造测试用例。&lt;/strong&gt; 刚接触测试时，很容易把做业务那套 “实现 XXX 功能” 的想法代入测试。但测试的重点不在于实现功能，而是构造用例。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;没有测试策略。&lt;/strong&gt; 上面是 “技” 的难点，测试还有 “术” 的难点。闷着头一通肝测试代码并不高效，使用合适的测试策略远比写 10 个测试用例重要。&lt;/p&gt; &#xA;&lt;p&gt;上面这些问题很容易让人写出难以维护和复杂的测试。只要业务一改，不仅要维护业务代码还要维护测试代码。 这时，你不禁感叹：“测试真浪费时间”，最终放弃写测试，直接开摆。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;好的测试会让你获得很高的代码信心，而不好的测试则会严重拖垮项目开发。所以，大家所厌恶的不应该是测试本身，而是那些维护性差的测试。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目的&lt;/h2&gt; &#xA;&lt;p&gt;我在网上翻找关于前端测试的资料时，我发现真的太少了，几乎可以分为几类：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;入门类。&lt;/strong&gt; 安装 Jest，外加 &lt;code&gt;expect(1 + 1).toEqual(2)&lt;/code&gt; 小例子&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API 说明书类。&lt;/strong&gt; 类似于把 Jest 官网抄了一遍&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;理论类。&lt;/strong&gt; 是什么、为什么、测试分类等，但最重要的 “怎么做” 没有说&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;并不是说这些文章不好，只是，这些文章大多数停留在最初级，很不利于其它同学来学习一门新技术。&lt;/p&gt; &#xA;&lt;p&gt;同时，我还拜访了一下 &lt;a href=&#34;https://jestjs.io/zh-Hans/&#34;&gt;Jest 的官网&lt;/a&gt; 。没想到，都 2022 年了，中文翻译依然这么难看：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/docs/bad-translation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;先不说翻译的正确性如何，单看这中文的内容就让人没有想看下去的欲望，真希望 Jest 能找稍微专业一点的人来做翻译。 由于官网的中文翻译做的实在太烂，遇到问题几乎在中文社区是找不到的。&lt;/p&gt; &#xA;&lt;p&gt;终于，我看到了 React Testing Library 作者 Kent C. Dodds 的 &lt;a href=&#34;https://kentcdodds.com/&#34;&gt;博客&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/docs/kentcdodds.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;他写了很多关于测试思路的文章，每一篇都非常精彩。&lt;strong&gt;受他的启发，我觉得有必要把这些思想和技巧分享出来，最终形成了这本小书。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;内容&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;此次教程主要分享测试的思路为主，虽然以 React 为主要技术栈，但使用其它技术栈的读者依然可以流畅阅读。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;本教程是我结合了自身实践、Kent C. Dodds 文章、StackOverflow、Github Issue 以及别的博客最终总结出来的一套实践指南。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;小书包含 3 部分：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;基础实践。&lt;/strong&gt; 从 0 到 1 写项目和测试，每一章会通过一个业务例子来分享测试难点、解法和思路。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;测试思路。&lt;/strong&gt; 分享一些 Kent 的文章（中文翻译）以及测试总结。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/haixiangyan/jest-tutorial-example&#34;&gt;配套项目&lt;/a&gt;。&lt;/strong&gt; 如果你在某一步卡壳了，也可以参考这个项目。&lt;/p&gt; &#xA;&lt;p&gt;最近给这个 Repo 开了一个 &lt;a href=&#34;https://github.com/haixiangyan/jest-tutorial/discussions&#34;&gt;讨论区&lt;/a&gt; ，如果你有任何问题（Jest、测试、小书） ，都可以在这里一起讨论 😄。&lt;/p&gt; &#xA;&lt;h2&gt;求关注&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;这教程 + 配套项目写了 3 周，说实话挺累的。原创不易，打赏就不必了，观众老爷省着吧。只求大家多关注一下我的新公众号【写代码的海怪】。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/docs/qrcode.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>521xueweihan/OneFile</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/521xueweihan/OneFile</id>
    <link href="https://github.com/521xueweihan/OneFile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;只有一个文件！&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OneFile&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/onefile.png&#34;&gt; &lt;br&gt;用一个文件，惊艳所有人！ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square&#34; alt=&#34;WeiXin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/OneFile/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/521xueweihan/OneFile.svg?style=popout-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://weibo.com/hellogithub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square&#34; alt=&#34;Sina Weibo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;你是否记得：刚学完编程基础那会儿特别想写个东西，但动起手来却发现到处碰壁？&lt;/p&gt; &#xA;&lt;p&gt;你是否发现：一个好玩的开源项目，结果卡在了部署环境、安装依赖上？最后，&#34;含恨而终&#34;！&lt;/p&gt; &#xA;&lt;p&gt;你是否在寻找：一个文件、运行简单、一看就懂的开源项目呢？&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;OneFile 汇集了仅一个文件，好玩的开源项目。&lt;/p&gt; &#xA;&lt;p&gt;这里有游戏、编译器、服务器、工具、实用库等，它们简单有趣甚至&lt;strong&gt;复制代码就能跑&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/doc/join.md&#34;&gt;加入一个文件的编程挑战&lt;/a&gt;：写你感兴趣的代码，用一个文件惊艳所有人！&lt;/p&gt; &#xA;&lt;p&gt;如果只用一个文件展示“平生所学”，编程语言不限！你会交出什么样的作品呢？&lt;/p&gt; &#xA;&lt;h2&gt;项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hellogithub.yuque.com/forms/share/4f0bf06b-2991-4f7e-a860-5b76337b7b5b&#34;&gt;轻点&lt;/a&gt; 即可提交项目，开启开源之旅。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;   &lt;th&gt;语言&lt;/th&gt; &#xA;   &lt;th&gt;描述&lt;/th&gt; &#xA;   &lt;th&gt;作者&lt;/th&gt; &#xA;   &lt;th&gt;操作&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/EZLippi/Tinyhttpd&#34;&gt;tinyhttpd&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;不到 500 行的超轻量型 HTTP Server...&lt;/td&gt; &#xA;   &lt;td&gt;J. David Blackstone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/c/tinyhttpd.c&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/loadzero/si78c&#34;&gt;si78c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;用 C 语言实现的《太空侵略者》命令行游戏&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/loadzero&#34;&gt;loadzero&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/c/si78c.c&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rui314/minilisp&#34;&gt;minilisp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;用 C 语言写的 Lisp 解释器。实现了整数、符...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rui314&#34;&gt;rui314&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/c/minilisp.c&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/progschj/ThreadPool&#34;&gt;threadpoll&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C++&lt;/td&gt; &#xA;   &lt;td&gt;一个简单的 C++11 线程池实现&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/progschj&#34;&gt;progschj&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/cplusplus/threadpoll.h&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;minesweeper&lt;/td&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;扫雷游戏&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terrymckay&#34;&gt;terrymckay&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hellogithub.com/onefile/code/e235d1d133134aea93ca6cdf2ed4fc5d&#34;&gt;试玩&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2048&lt;/td&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;2048 游戏&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bxm0927&#34;&gt;bxm0927&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hellogithub.com/onefile/code/8d627fe4cfa540b19dcd04d4327cf26c&#34;&gt;试玩&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ascii-cam&lt;/td&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;把视频图像转成 ascii&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/iveseenthedark&#34;&gt;iveseenthedark&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hellogithub.com/onefile/code/126093303b6b414dbab9d623c957fdd4&#34;&gt;试玩&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vasanthv/looptap&#34;&gt;looptap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;消磨时间的小游戏，把球停在有颜色区域&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vasanthv&#34;&gt;vasanthv&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hellogithub.com/onefile/code/cc759276aefe4bad87ac259940042581&#34;&gt;试玩&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jamiebuilds/the-super-tiny-compiler&#34;&gt;the-super-tiny-compiler&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;人人都能看懂的微型编译器&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jamiebuilds&#34;&gt;jamiebuilds&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/javascript/the-super-tiny-compiler.js&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nenadmarkus/picojs&#34;&gt;pico&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;200 行实现的面部识别库&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nenadmarkus&#34;&gt;nenadmarkus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://nenadmarkus.com/p/picojs-intro/demo/&#34;&gt;试玩&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/erusev/parsedown&#34;&gt;parsedown&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;一个小而美的 PHP 的 Markdown 解析库&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/erusev&#34;&gt;erusev&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/php/parsedown.php&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/reorx/httpstat&#34;&gt;httpstat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;用更优雅的方式展示 curl 结果的命令行工具&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/reorx&#34;&gt;reorx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/python/httpstat.py&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cckuailong/py2sec&#34;&gt;py2sec&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;一款轻量级跨平台 Python “加密”、加速的脚...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cckuailong&#34;&gt;cckuailong&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/python/py2sec.py&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/coolcode/tomato-clock&#34;&gt;tomato-clock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;Python 写的命令行番茄工作法定时器&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/coolcode&#34;&gt;coolcode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/python/tomato-clock.py&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/beavailable/share&#34;&gt;share&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;基于 HTTP 协议的文件分享工具&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/beavailable&#34;&gt;beavailable&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/python/share.py&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web-server&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;一个简单的 Web 框架&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan&#34;&gt;521xueweihan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/python/web-server.py&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dylanaraps/neofetch&#34;&gt;neofetch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shell&lt;/td&gt; &#xA;   &lt;td&gt;展示操作系统信息的命令行工具，支持 100 多种操...&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dylanaraps&#34;&gt;dylanaraps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/521xueweihan/OneFile/raw/main/src/shell/neofetch&#34;&gt;源码&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;更新计划&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加投票&lt;/li&gt; &#xA; &lt;li&gt;自动化流程&lt;/li&gt; &#xA; &lt;li&gt;增设奖金（赞助请&lt;a href=&#34;mailto:595666367@qq.com&#34;&gt;联系我&lt;/a&gt;）&lt;/li&gt; &#xA; &lt;li&gt;英文描述&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width: 0&#34; src=&#34;https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;本作品采用 &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 进行许可。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dokku/dokku</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/dokku/dokku</id>
    <link href="https://github.com/dokku/dokku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A docker-powered PaaS that helps you build and manage the lifecycle of applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dokku&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dokku/dokku/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/dokku/dokku/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagecloud.io/dokku/dokku&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/package-ubuntu-brightgreen.svg?style=flat-square&#34; alt=&#34;Ubuntu Package&#34; title=&#34;Ubuntu Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aur.archlinux.org/packages/dokku/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/package-arch-brightgreen.svg?style=flat-square&#34; alt=&#34;Arch Package&#34; title=&#34;Arch Package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://glider-slackin.herokuapp.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/irc-slack-blue.svg?style=flat-square&#34; alt=&#34;Slack Group&#34; title=&#34;Slack Group&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dokku.com/docs/getting-started/installation/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-site-blue.svg?style=flat-square&#34; alt=&#34;Documentation&#34; title=&#34;Site&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dokku/dokku/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsors/badge.svg?style=flat-square&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dokku/dokku/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backers/badge.svg?style=flat-square&#34; alt=&#34;OpenCollective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/dokku/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/patreon-donate-green.svg?style=flat-square&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docker powered mini-Heroku. The smallest PaaS implementation you&#39;ve ever seen.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on GitHub with a link to your site. [&lt;a href=&#34;https://opencollective.com/dokku#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/dokku/sponsor/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/0/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/1/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/2/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/3/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/4/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/5/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/6/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/7/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/8/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/9/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 9&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/10/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/10/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 10&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/11/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/11/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 11&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/12/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/12/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 12&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/13/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/13/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 13&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/14/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/14/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 14&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/15/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 15&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/16/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/16/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/17/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/17/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 17&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/sponsor/18/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/sponsor/18/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Sponsor 18&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&#34;https://opencollective.com/dokku#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/dokku/backer/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/0/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/1/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/2/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/3/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/4/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 4&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/5/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 5&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/6/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 6&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/7/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/8/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/9/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 9&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/10/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/10/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 10&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/11/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/11/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 11&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/12/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/12/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 12&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/13/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/13/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 13&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/14/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/14/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 14&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/15/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/15/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 15&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/16/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/16/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 16&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/17/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/17/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 17&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/18/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/18/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/19/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/19/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 19&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/20/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/20/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/21/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/21/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 21&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/22/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/22/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 22&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/23/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/23/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 23&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/24/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/24/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 24&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/25/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/25/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 25&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/26/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/26/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 26&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/27/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/27/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 27&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/28/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/28/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 28&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/dokku/backer/29/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/dokku/backer/29/avatar.svg?sanitize=true&#34; alt=&#34;OpenCollective Backer 29&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;A fresh VM running any of the following operating systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 18.04/20.04 x64 - Any currently supported release&lt;/li&gt; &#xA; &lt;li&gt;Debian 9+ x64&lt;/li&gt; &#xA; &lt;li&gt;CentOS 7 x64 &lt;em&gt;(experimental)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux x64 &lt;em&gt;(experimental)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;An SSH keypair that can be used for application deployment. If this exists before installation, it will be automatically imported into dokku. Otherwise, you will need to import the keypair manually after installation using &lt;code&gt;dokku ssh-keys:add&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the latest stable release, run the following commands as a user who has access to &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget https://raw.githubusercontent.com/dokku/dokku/v0.27.5/bootstrap.sh&#xA;sudo DOKKU_TAG=v0.27.5 bash bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then proceed to configure your server domain (via &lt;code&gt;dokku domains:set-global&lt;/code&gt;) and user access (via &lt;code&gt;dokku ssh-keys:add&lt;/code&gt;) to complete the installation.&lt;/p&gt; &#xA;&lt;p&gt;If you wish for a more unattended installation method, see &lt;a href=&#34;https://dokku.com/docs/getting-started/install/debian/#unattended-installation&#34;&gt;these&lt;/a&gt; docs.&lt;/p&gt; &#xA;&lt;h3&gt;Upgrade&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dokku.com/docs/getting-started/upgrading/&#34;&gt;View the docs&lt;/a&gt; for upgrading from an older version of Dokku.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation - including advanced installation docs - are available online at &lt;a href=&#34;https://dokku.com/docs/getting-started/installation/&#34;&gt;https://dokku.com/docs/getting-started/installation/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/dokku/dokku/issues&#34;&gt;GitHub Issues&lt;/a&gt;, check &lt;a href=&#34;https://dokku.com/docs/getting-started/troubleshooting/&#34;&gt;Troubleshooting&lt;/a&gt; in the documentation, or join us on &lt;a href=&#34;https://glider-slackin.herokuapp.com/&#34;&gt;Gliderlabs Slack in the #dokku channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;After checking &lt;a href=&#34;https://github.com/dokku/dokku/issues&#34;&gt;GitHub Issues&lt;/a&gt;, the &lt;a href=&#34;https://dokku.com/docs/getting-started/troubleshooting/&#34;&gt;Troubleshooting Guide&lt;/a&gt; or having a chat with us on &lt;a href=&#34;https://glider-slackin.herokuapp.com/&#34;&gt;Gliderlabs Slack in the #dokku channel&lt;/a&gt;, feel free to fork and create a Pull Request.&lt;/p&gt; &#xA;&lt;p&gt;While we may not merge your PR as is, they serve to start conversations and improve the general Dokku experience for all users.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dokku/dokku/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt; © Jeff Lindsay&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MichaelCade/90DaysOfDevOps</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/MichaelCade/90DaysOfDevOps</id>
    <link href="https://github.com/MichaelCade/90DaysOfDevOps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is my documenting repository for learning the world of DevOps. I started this journey on the 1st January 2022 and I plan to run to March 31st for a complete 90-day romp on spending an hour a day including weekends to get a foundational knowledge across a lot of different areas that make up DevOps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;90DaysOfDevOps&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/logo.png?raw=true&#34; alt=&#34;90DaysOfDevOps Logo&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;English Version | &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/zh_cn/README.md&#34;&gt;中文版本&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/zh_tw/README.md&#34;&gt;繁體中文版本&lt;/a&gt;| &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/ja/README.md&#34;&gt;日本語版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is used to document my journey on getting a better foundational knowledge of &#34;DevOps&#34;. I will be starting this journey on the 1st January 2022 but the idea is that we take 90 days which just so happens to be January 1st to March 31st.&lt;/p&gt; &#xA;&lt;p&gt;The reason for documenting these days is so that others can take something from it and also hopefully enhance the resources.&lt;/p&gt; &#xA;&lt;p&gt;The goal is to take 90 days, 1 hour each a day, to tackle over 13 areas of &#34;DevOps&#34; to a foundational knowledge.&lt;/p&gt; &#xA;&lt;p&gt;This will &lt;strong&gt;not cover all things&lt;/strong&gt; &#34;DevOps&#34; but it will cover the areas that I feel will benefit my learning and understanding overall.&lt;/p&gt; &#xA;&lt;p&gt;The quickest way to get in touch is going to be via Twitter, my handle is &lt;a href=&#34;https://twitter.com/MichaelCade1&#34;&gt;@MichaelCade1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ♾️ 1 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day01.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What is and why do we use DevOps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ♾️ 2 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day02.md&#34;&gt;Responsibilities of a DevOps Engineer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 3 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day03.md&#34;&gt;DevOps Lifecycle - Application Focused&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 4 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day04.md&#34;&gt;DevOps &amp;amp; Agile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 5 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day05.md&#34;&gt;Plan &amp;gt; Code &amp;gt; Build &amp;gt; Testing &amp;gt; Release &amp;gt; Deploy &amp;gt; Operate &amp;gt; Monitor &amp;gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 6 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day06.md&#34;&gt;DevOps - The real stories&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learning a Programming Language&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 7 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day07.md&#34;&gt;The Big Picture: DevOps &amp;amp; Learning a Programming Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 8 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day08.md&#34;&gt;Setting up your DevOps environment for Go &amp;amp; Hello World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 9 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day09.md&#34;&gt;Let&#39;s explain the Hello World code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 10 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day10.md&#34;&gt;The Go Workspace &amp;amp; Compiling &amp;amp; running code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 11 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day11.md&#34;&gt;Variables, Constants &amp;amp; Data Types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 12 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day12.md&#34;&gt;Getting user input with Pointers and a finished program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 13 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day13.md&#34;&gt;Tweet your progress with our new App&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Knowing Linux Basics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🐧 14 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day14.md&#34;&gt;The Big Picture: DevOps and Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 15 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day15.md&#34;&gt;Linux Commands for DevOps (Actually everyone)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 16 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day16.md&#34;&gt;Managing your Linux System, Filesystem &amp;amp; Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 17 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day17.md&#34;&gt;Text Editors - nano vs vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 18 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day18.md&#34;&gt;SSH &amp;amp; Web Server(LAMP)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 19 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day19.md&#34;&gt;Automate tasks with bash scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 20 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day20.md&#34;&gt;Dev workstation setup - All the pretty things&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Understand Networking&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🌐 21 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day21.md&#34;&gt;The Big Picture: DevOps and Networking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 22 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day22.md&#34;&gt;The OSI Model - The 7 Layers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 23 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day23.md&#34;&gt;Network Protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 24 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day24.md&#34;&gt;Network Automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 25 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day25.md&#34;&gt;Python for Network Automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 26 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day26.md&#34;&gt;Building our Lab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 27 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day27.md&#34;&gt;Getting Hands-On with Python &amp;amp; Network&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stick to one Cloud Provider&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ☁️ 28 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day28.md&#34;&gt;The Big Picture: DevOps &amp;amp; The Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 29 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day29.md&#34;&gt;Microsoft Azure Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 30 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day30.md&#34;&gt;Microsoft Azure Security Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 31 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day31.md&#34;&gt;Microsoft Azure Compute Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 32 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day32.md&#34;&gt;Microsoft Azure Storage &amp;amp; Database Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 33 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day33.md&#34;&gt;Microsoft Azure Networking Models + Azure Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 34 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day34.md&#34;&gt;Microsoft Azure Hands-On Scenarios&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Git Effectively&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📚 35 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day35.md&#34;&gt;The Big Picture: Git - Version Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 36 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day36.md&#34;&gt;Installing &amp;amp; Configuring Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 37 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day37.md&#34;&gt;Gitting to know Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 38 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day38.md&#34;&gt;Staging &amp;amp; Changing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 39 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day39.md&#34;&gt;Viewing, unstaging, discarding &amp;amp; restoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 40 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day40.md&#34;&gt;Social Network for code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 41 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day41.md&#34;&gt;The Open Source Workflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 42 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day42.md&#34;&gt;The Big Picture: Containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 43 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day43.md&#34;&gt;What is Docker &amp;amp; Getting installed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 44 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day44.md&#34;&gt;Docker Images &amp;amp; Hands-On with Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 45 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day45.md&#34;&gt;The anatomy of a Docker Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 46 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day46.md&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 47 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day47.md&#34;&gt;Docker Networking &amp;amp; Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 48 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day48.md&#34;&gt;Alternatives to Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ☸ 49 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day49.md&#34;&gt;The Big Picture: Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 50 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day50.md&#34;&gt;Choosing your Kubernetes platform &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 51 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day51.md&#34;&gt;Deploying your first Kubernetes Cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 52 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day52.md&#34;&gt;Setting up a multinode Kubernetes Cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 53 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day53.md&#34;&gt;Rancher Overview - Hands On&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 54 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day54.md&#34;&gt;Kubernetes Application Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 55 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day55.md&#34;&gt;State and Ingress in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learn Infrastructure as Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🤖 56 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day56.md&#34;&gt;The Big Picture: IaC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 57 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day57.md&#34;&gt;An intro to Terraform &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 58 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day58.md&#34;&gt;HashiCorp Configuration Language (HCL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 59 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day59.md&#34;&gt;Create a VM with Terraform &amp;amp; Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 60 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day60.md&#34;&gt;Docker Containers, Provisioners &amp;amp; Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 61 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day61.md&#34;&gt;Kubernetes &amp;amp; Multiple Environments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 62 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day62.md&#34;&gt;Testing, Tools &amp;amp; Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Automate Configuration Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📜 63 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day63.md&#34;&gt;The Big Picture: Configuration Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 64 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day64.md&#34;&gt;Ansible: Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 65 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day65.md&#34;&gt;Ansible Playbooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 66 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day66.md&#34;&gt;Ansible Playbooks Continued...&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 67 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day67.md&#34;&gt;Using Roles &amp;amp; Deploying a Loadbalancer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 68 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day68.md&#34;&gt;Tags, Variables, Inventory &amp;amp; Database Server config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 69 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day69.md&#34;&gt;All other things Ansible - Automation Controller, AWX, Vault&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Create CI/CD Pipelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🔄 70 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day70.md&#34;&gt;The Big Picture: CI/CD Pipelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 71 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day71.md&#34;&gt;What is Jenkins?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 72 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day72.md&#34;&gt;Getting hands on with Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 73 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day73.md&#34;&gt;Building a Jenkins pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 74 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day74.md&#34;&gt;Hello World - Jenkinsfile App Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 75 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day75.md&#34;&gt;GitHub Actions Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 76 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day76.md&#34;&gt;ArgoCD Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring, Log Management, and Data Visualisation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📈 77 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day77.md&#34;&gt;The Big Picture: Monitoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 78 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day78.md&#34;&gt;Hands-On Monitoring Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 79 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day79.md&#34;&gt;The Big Picture: Log Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 80 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day80.md&#34;&gt;ELK Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 81 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day81.md&#34;&gt;Fluentd &amp;amp; FluentBit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 82 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day82.md&#34;&gt;EFK Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 83 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day83.md&#34;&gt;Data Visualisation - Grafana&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Store &amp;amp; Protect Your Data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 84 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day84.md&#34;&gt;The Big Picture: Data Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 85 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day85.md&#34;&gt;Data Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 86 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day86.md&#34;&gt;Backup all the platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 87 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day87.md&#34;&gt;Hands-On Backup &amp;amp; Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 88 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day88.md&#34;&gt;Application Focused Backups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 89 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day89.md&#34;&gt;Disaster Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 90 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day90.md&#34;&gt;Data &amp;amp; Application Mobility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Shield: &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg?sanitize=true&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#MichaelCade/90DaysOfDevOps&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=MichaelCade/90DaysOfDevOps&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>89luca89/distrobox</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/89luca89/distrobox</id>
    <link href="https://github.com/89luca89/distrobox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use any linux distribution inside your terminal. Enable both backward and forward compatibility with software and freedom to use whatever distribution you’re more comfortable with. Mirror available at: https://gitlab.com/89luca89/distrobox&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/157771834-7423cf9b-8311-4e90-8a79-cd0eff6bd632.png&#34; alt=&#34;distrobox-logo&#34;&gt; &lt;sub&gt;logo credits &lt;a href=&#34;https://github.com/j4ckr3d&#34;&gt;j4ckr3d&lt;/a&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Distrobox&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/89luca89/distrobox/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint&#34;&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/actions/workflows/compatibility.yml&#34;&gt;&lt;img src=&#34;https://github.com/89luca89/distrobox/actions/workflows/compatibility.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/COPYING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/89luca89/distrobox?color=blue&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/89luca89/distrobox&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/distrobox/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/distrobox.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/89luca89/distrobox/help%20wanted?color=blue&amp;amp;label=Help%20Wanted%20Issues&#34; alt=&#34;Github issue needs help&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/issues?q=is%3Aissue+is%3Aopen+label%3A%22bug%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/89luca89/distrobox/bug?color=red&amp;amp;label=Open%20Bug%20Reports&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use any Linux distribution inside your terminal. Enable both backward and forward compatibility with software and freedom to use whatever distribution you’re more comfortable with. Distrobox uses &lt;code&gt;podman&lt;/code&gt; or &lt;code&gt;docker&lt;/code&gt; to create containers using the Linux distribution of your choice. The created container will be tightly integrated with the host, allowing sharing of the HOME directory of the user, external storage, external USB devices and graphical apps (X11/Wayland), and audio.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://distrobox.privatedns.org/#distrobox&#34;&gt;Documentation&lt;/a&gt; - &lt;a href=&#34;https://matrix.to/#/%23distrobox:matrix.org&#34;&gt;Matrix Room&lt;/a&gt; - &lt;a href=&#34;https://t.me/distrobox&#34;&gt;Telegram Group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/144294862-f6684334-ccf4-4e5e-85f8-1d66210a0fff.png&#34; alt=&#34;overview&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#distrobox&#34;&gt;Distrobox&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#what-it-does&#34;&gt;What it does&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#see-it-in-action&#34;&gt;See it in action&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#why&#34;&gt;Why?&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#aims&#34;&gt;Aims&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#uninstallation&#34;&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md&#34;&gt;Compatibility&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#supported-container-managers&#34;&gt;Supported container managers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;Host Distros&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#containers-distros&#34;&gt;Containers Distros&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md#outside-the-distrobox&#34;&gt;Outside the distrobox&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-create.md&#34;&gt;distrobox-create&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-enter.md&#34;&gt;distrobox-enter&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-list.md&#34;&gt;distrobox-list&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-rm.md&#34;&gt;distrobox-rm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-stop.md&#34;&gt;distrobox-stop&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md#inside-the-distrobox&#34;&gt;Inside the distrobox&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-export.md&#34;&gt;distrobox-export&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-host-exec.md&#34;&gt;distrobox-host-exec&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-init.md&#34;&gt;distrobox-init&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#configure-distrobox&#34;&gt;Configure distrobox&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md&#34;&gt;Useful tips&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#execute-complex-commands-directly-from-distrobox-enter&#34;&gt;Execute complex commands directly from distrobox-enter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#create-a-distrobox-with-a-custom-home-directory&#34;&gt;Create a distrobox with a custom HOME directory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#mount-additional-volumes-in-a-distrobox&#34;&gt;Mount additional volumes in a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#use-a-different-shell-than-the-host&#34;&gt;Use a different shell than the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#duplicate-an-existing-distrobox&#34;&gt;Duplicate an existing distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#export-to-the-host&#34;&gt;Export to the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#execute-commands-on-the-host&#34;&gt;Execute commands on the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#enable-ssh-x-forwarding-when-ssh-ing-in-a-distrobox&#34;&gt;Enable SSH X-Forwarding when SSH-ing in a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#use-distrobox-to-install-different-flatpaks-from-the-host&#34;&gt;Use distrobox to install different flatpaks from the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-podman-inside-a-distrobox&#34;&gt;Using podman inside a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-docker-inside-a-distrobox&#34;&gt;Using docker inside a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-init-system-inside-a-distrobox&#34;&gt;Using init system inside a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-distrobox-as-main-cli&#34;&gt;Using distrobox as main cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-a-different-architecture&#34;&gt;Using a different architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#improve-distrobox-enter-performance&#34;&gt;Improve distrobox-enter performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#slow-creation-on-podman-and-image-size-getting-bigger-with-distrobox-create&#34;&gt;Slow creation on podman and image size getting bigger with distrobox-create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#container-save-and-restore&#34;&gt;Container save and restore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#check-used-resources&#34;&gt;Check used resources&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/distrobox_gentoo.md&#34;&gt;Build a Gentoo distrobox container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/distrobox_custom.md&#34;&gt;Build a Dedicated distrobox container&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/posts.md&#34;&gt;Posts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/run_latest_gnome_kde_on_distrobox.md&#34;&gt;Run latest GNOME and KDE Plasma using distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/integrate_vscode_distrobox.md&#34;&gt;Integrate VSCode and Distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/execute_commands_on_host.md&#34;&gt;Execute a command on the Host&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md&#34;&gt;Featured Articles&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md#articles&#34;&gt;Articles&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://fedoramagazine.org/run-distrobox-on-fedora-linux/&#34;&gt;Run Distrobox on Fedora Linux - Fedora Magazine&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.tecmint.com/distrobox-run-any-linux-distribution/&#34;&gt;DistroBox – Run Any Linux Distribution Inside Linux Terminal - TecMint&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.techrepublic.com/article/how-to-quickly-deploy-a-linux-distribution-with-gui-applications-via-a-container/&#34;&gt;Distrobox - How to quickly deploy a Linux distribution with GUI applications via a container&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Distrobox-Clear-Linux&#34;&gt;Using Distrobox To Augment The Package Selection On Clear Linux - Phoronix&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1305326-clear-linux-container-performance-continues-showing-sizable-gains&#34;&gt;Benchmark: benefits of Clear Linux containers (distrobox) - Phoronix&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://phmurphy.com/posts/distrobox-toolbelt/&#34;&gt;Distrobox - A great item in the Linux toolbelt - phmurphy&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md&#34;&gt;Running Other Linux Distros with Distrobox on Fedora Linux - bandithijo&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.ypsidanger.com/day-to-day-advantages-of-fedora-silverblue/&#34;&gt;Day-to-day differences between Fedora Silverblue and Ubuntu - castrojo&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://cloudyday.tech.blog/2022/05/14/distrobox-is-awesome/&#34;&gt;Distrobox is Awesome - Running Window Manager and Desktop environments using Distrobox&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md#talks&#34;&gt;Talks&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/89luca89/distrobox/files/8598433/distrobox-las-talk.pdf&#34;&gt;Linux App Summit 2022 - Distrobox: Run Any App On Any Distro - BoF&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md#podcasts&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What it does&lt;/h2&gt; &#xA;&lt;p&gt;Simply put it&#39;s a fancy wrapper around &lt;code&gt;podman&lt;/code&gt; or &lt;code&gt;docker&lt;/code&gt; to create and start containers highly integrated with the hosts.&lt;/p&gt; &#xA;&lt;p&gt;The distrobox environment is based on an OCI image. This image is used to create a container that seamlessly integrates with the rest of the operating system by providing access to the user&#39;s home directory, the Wayland and X11 sockets, networking, removable devices (like USB sticks), systemd journal, SSH agent, D-Bus, ulimits, /dev and the udev database, etc...&lt;/p&gt; &#xA;&lt;p&gt;It implements the same concepts introduced by &lt;a href=&#34;https://github.com/containers/toolbox&#34;&gt;https://github.com/containers/toolbox&lt;/a&gt; but in a simplified way using POSIX sh and aiming at broader compatibility.&lt;/p&gt; &#xA;&lt;p&gt;All the props go to them as they had the great idea to implement this stuff.&lt;/p&gt; &#xA;&lt;p&gt;It is divided into 8 commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-create&lt;/code&gt; - creates the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-enter&lt;/code&gt; - to enter the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-list&lt;/code&gt; - to list containers created with distrobox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-rm&lt;/code&gt; - to delete a container created with distrobox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-stop&lt;/code&gt; - to stop a running container created with distrobox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-init&lt;/code&gt; - the entrypoint of the container (not meant to be used manually)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-export&lt;/code&gt; - it is meant to be used inside the container, useful to export apps and services from the container to the host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-host-exec&lt;/code&gt; - to run commands/programs from the host, while inside of the container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It also includes a little wrapper to launch commands with &lt;code&gt;distrobox COMMAND&lt;/code&gt; instead of calling the single files.&lt;/p&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md&#34;&gt;the usage docs here&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md&#34;&gt;see some handy tips on how to use it&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;See it in action&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/castrojo&#34;&gt;castrojo&lt;/a&gt;, you can see Distrobox in action in this explanatory video on his setup with Distrobox, Toolbx, Fedora Silverblue on his project &lt;a href=&#34;https://github.com/castrojo/ublue&#34;&gt;ublue&lt;/a&gt; (check it out!)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Q2PrISAOtbY&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/153680522-f5903607-2854-4cfb-a186-cba7403745bd.png&#34; alt=&#34;Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide a mutable environment on an immutable OS, like Endless OS, Fedora Silverblue, OpenSUSE MicroOS or SteamOS3&lt;/li&gt; &#xA; &lt;li&gt;Provide a locally privileged environment for sudoless setups (eg. company-provided laptops, security reasons, etc...)&lt;/li&gt; &#xA; &lt;li&gt;To mix and match a stable base system (eg. Debian Stable, Ubuntu LTS, RedHat) with a bleeding-edge environment for development or gaming (eg. Arch, OpenSUSE Tumbleweed or Fedora with latest Mesa)&lt;/li&gt; &#xA; &lt;li&gt;Leverage high abundance of curated distro images for docker/podman to manage multiple environments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Refer to the compatiblity list for an overview of supported host&#39;s distro &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;HERE&lt;/a&gt; and container&#39;s distro &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#containers-distros&#34;&gt;HERE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Aims&lt;/h3&gt; &#xA;&lt;p&gt;This project aims to bring &lt;strong&gt;any distro userland to any other distro&lt;/strong&gt; supporting podman or docker. It has been written in POSIX sh to be as portable as possible and not have problems with dependencies and glibc version&#39;s compatibility.&lt;/p&gt; &#xA;&lt;p&gt;Refer &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#supported-container-managers&#34;&gt;HERE&lt;/a&gt; for a list of supported container managers and minimum supported versions.&lt;/p&gt; &#xA;&lt;p&gt;It also aims to enter the container &lt;strong&gt;as fast as possible&lt;/strong&gt;, every millisecond adds up if you use the container as your default environment for your terminal:&lt;/p&gt; &#xA;&lt;p&gt;These are some sample results of &lt;code&gt;distrobox-enter&lt;/code&gt; on the same container on my weak laptop from 2015 with 2 core cpu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Total time for 100 container enters:&#xA;&#xA;  ~$ time (for i in {1..100}; do distrobox-enter --name fedora-toolbox-35 -- whoami; done)&#xA;  real 0m36.209s&#xA;  user 0m6.520s&#xA;  sys 0m4.803s&#xA;&#xA;Mean:&#xA;&#xA;36.209s/100 = ~0.362ms mean time to enter the container&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I would like to keep it always below the &lt;a href=&#34;https://lawsofux.com/doherty-threshold/&#34;&gt;Doherty Treshold&lt;/a&gt; of 400ms.&lt;/p&gt; &#xA;&lt;h4&gt;Security implications&lt;/h4&gt; &#xA;&lt;p&gt;Isolation and sandboxing is &lt;strong&gt;not&lt;/strong&gt; the main aim of the project, on the contrary it aims to tightly integrate the container with the host. The container will have complete access to your home, pen drives and so on, so do not expect it to be highly sandboxed like a plain docker/podman container or a flatpak.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;BE CAREFUL&lt;/strong&gt;: if you use docker, or you use podman with the &lt;code&gt;--root/-r&lt;/code&gt; flag, the containers will run as root, so &lt;strong&gt;root inside the rootful container can modify system stuff outside the container&lt;/strong&gt;, if you have security concern for this, &lt;strong&gt;use podman that runs in rootless mode&lt;/strong&gt;. Rootless docker is still not working as intended and will be included in the future when it will be complete.&lt;/p&gt; &#xA;&lt;p&gt;That said, it is in the works to implement some sort of decoupling with the host, as discussed here: &lt;a href=&#34;https://github.com/89luca89/distrobox/issues/28&#34;&gt;#28 Sandboxed mode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Basic usage&lt;/h1&gt; &#xA;&lt;p&gt;Create a new distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox create -n test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enter created distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox enter test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Execute a command in a distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox enter test -- command-to-execute&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;List running distroboxes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox list&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stop a running distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox stop test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Remove a distrobox&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox rm test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can check &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md&#34;&gt;HERE for more advanced usage&lt;/a&gt; and check a &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md&#34;&gt;comprehensive list of useful tips HERE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Configure Distrobox&lt;/h1&gt; &#xA;&lt;p&gt;Configuration files can be placed in the following paths, from the least important to the most important:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/usr/share/distrobox/distrobox.conf&lt;/li&gt; &#xA; &lt;li&gt;/etc/distrobox/distrobox.conf&lt;/li&gt; &#xA; &lt;li&gt;${HOME}/.config/distrobox/distrobox.conf&lt;/li&gt; &#xA; &lt;li&gt;${HOME}/.distroboxrc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;container_always_pull=&#34;1&#34;&#xA;container_user_custom_home=&#34;/home/.local/share/container-home-test&#34;&#xA;container_image=&#34;registry.opensuse.org/opensuse/toolbox:latest&#34;&#xA;container_manager=&#34;docker&#34;&#xA;container_name=&#34;test-name-1&#34;&#xA;non_interactive=&#34;1&#34;&#xA;skip_workdir=&#34;0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively it is possible to specify preferences using ENV variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DBX_CONTAINER_ALWAYS_PULL&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_CUSTOM_HOME&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_IMAGE&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_MANAGER&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_NAME&lt;/li&gt; &#xA; &lt;li&gt;DBX_NON_INTERACTIVE&lt;/li&gt; &#xA; &lt;li&gt;DBX_SKIP_WORKDIR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Distrobox is packaged in the following distributions, if your distribution is on this list, you can refer to your repos for installation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/distrobox/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/distrobox.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the maintainers for their work: &lt;a href=&#34;https://github.com/M0Rf30&#34;&gt;M0Rf30&lt;/a&gt;, &lt;a href=&#34;https://github.com/alcir&#34;&gt;alcir&lt;/a&gt;, &lt;a href=&#34;https://github.com/dfaggioli&#34;&gt;dfaggioli&lt;/a&gt;, &lt;a href=&#34;https://github.com/AtilaSaraiva&#34;&gt;AtilaSaraiva&lt;/a&gt;, &lt;a href=&#34;https://github.com/michel-slm&#34;&gt;michel-slm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Else, if you like to live your life dangerously, or you want the latest release, you can trust me and simply run this in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sudo sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to select a custom directory to install without sudo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sh -s -- --prefix ~/.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can clone the project using &lt;code&gt;git clone&lt;/code&gt; or using the latest release &lt;a href=&#34;https://github.com/89luca89/distrobox/releases/latest&#34;&gt;HERE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Enter the directory and run &lt;code&gt;./install&lt;/code&gt;, by default it will attempt to install in &lt;code&gt;~/.local&lt;/code&gt; but if you run the script as root, it will default to &lt;code&gt;/usr/local&lt;/code&gt;. You can specify a custom directory with the &lt;code&gt;--prefix&lt;/code&gt; flag such as &lt;code&gt;./install --prefix ~/.distrobox&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Prefix explained: main distrobox files get installed to &lt;code&gt;${prefix}/bin&lt;/code&gt; whereas the manpages get installed to &lt;code&gt;${prefix}/share/man&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;Host Distros&lt;/a&gt; compatibility list for distro-specific instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Distrobox depends on a container manager to work, you can choose to install either podman or docker. Please look in the &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;Compatibility Table&lt;/a&gt; for your distribution notes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Uninstallation&lt;/h2&gt; &#xA;&lt;p&gt;If you installed distrobox using the &lt;code&gt;install&lt;/code&gt; script in the default install directory use this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/uninstall | sudo sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you specified a custom path:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/uninstall | sh -s -- --prefix ~/.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Else if cloned the project using &lt;code&gt;git clone&lt;/code&gt; or using the latest archive release from &lt;a href=&#34;https://github.com/89luca89/distrobox/releases/latest&#34;&gt;HERE&lt;/a&gt;,&lt;/p&gt; &#xA;&lt;p&gt;enter the directory and run &lt;code&gt;./uninstall&lt;/code&gt;, by default it will assume the install directory was &lt;code&gt;/usr/local&lt;/code&gt; if ran as root or &lt;code&gt;~/.local&lt;/code&gt;, you can specify another directory if needed with &lt;code&gt;./uninstall --prefix ~/.local&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/144294113-ab3c62b0-4ff0-488f-8e85-dfecc308e561.png&#34; alt=&#34;distrobox-box&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>rupa/z</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/rupa/z</id>
    <link href="https://github.com/rupa/z" rel="alternate"></link>
    <summary type="html">&lt;p&gt;z - jump around&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Z(1) User Commands Z(1)&lt;/p&gt; &#xA;&lt;p&gt;NAME z - jump around&lt;/p&gt; &#xA;&lt;p&gt;SYNOPSIS z [-chlrtx] [regex1 regex2 ... regexn]&lt;/p&gt; &#xA;&lt;p&gt;AVAILABILITY bash, zsh&lt;/p&gt; &#xA;&lt;p&gt;DESCRIPTION Tracks your most used directories, based on &#39;frecency&#39;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   After  a  short  learning  phase, z will take you to the most &#39;frecent&#39;&#xA;   directory that matches ALL of the regexes given on the command line, in&#xA;   order.&#xA;&#xA;   For example, z foo bar would match /foo/bar but not /bar/foo.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS -c restrict matches to subdirectories of the current directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   -e     echo the best match, don&#39;t cd&#xA;&#xA;   -h     show a brief help message&#xA;&#xA;   -l     list only&#xA;&#xA;   -r     match by rank only&#xA;&#xA;   -t     match by recent access only&#xA;&#xA;   -x     remove the current directory from the datafile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;EXAMPLES z foo cd to most frecent dir matching foo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   z foo bar     cd to most frecent dir matching foo, then bar&#xA;&#xA;   z -r foo      cd to highest ranked dir matching foo&#xA;&#xA;   z -t foo      cd to most recently accessed dir matching foo&#xA;&#xA;   z -l foo      list all dirs matching foo (by frecency)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTES Installation: Put something like this in your $HOME/.bashrc or $HOME/.zshrc:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;          . /path/to/z.sh&#xA;&#xA;   cd around for a while to build up the db.&#xA;&#xA;   PROFIT!!&#xA;&#xA;   Optionally:&#xA;          Set $_Z_CMD to change the command name (default z).&#xA;          Set $_Z_DATA to change the datafile (default $HOME/.z).&#xA;          Set  $_Z_MAX_SCORE  lower  to  age  entries  out faster (default&#xA;          9000).&#xA;          Set $_Z_NO_RESOLVE_SYMLINKS to prevent symlink resolution.&#xA;          Set $_Z_NO_PROMPT_COMMAND to handle PROMPT_COMMAND/precmd  your-&#xA;          self.&#xA;          Set $_Z_EXCLUDE_DIRS to an array of directory trees to  exclude.&#xA;          Set $_Z_OWNER to allow usage when in &#39;sudo -s&#39; mode.&#xA;          (These  settings  should  go  in  .bashrc/.zshrc before the line&#xA;          added above.)&#xA;          Install the provided man page z.1  somewhere  in  your  MANPATH,&#xA;          like /usr/local/man/man1.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Aging: The rank of directories maintained by z undergoes aging based on a sim- ple formula. The rank of each entry is incremented every time it is accessed. When the sum of ranks is over 9000, all ranks are multiplied by 0.99. Entries with a rank lower than 1 are forgotten.&lt;/p&gt; &#xA;&lt;p&gt;Frecency: Frecency is a portmanteau of &#39;recent&#39; and &#39;frequency&#39;. It is a weighted rank that depends on how often and how recently something occurred. As far as I know, Mozilla came up with the term.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   To z, a directory that has low ranking but has been  accessed  recently&#xA;   will  quickly  have  higher rank than a directory accessed frequently a&#xA;   long time ago.&#xA;&#xA;   Frecency is determined at runtime.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Common: When multiple directories match all queries, and they all have a common prefix, z will cd to the shortest matching directory, without regard to priority. This has been in effect, if undocumented, for quite some time, but should probably be configurable or reconsidered.&lt;/p&gt; &#xA;&lt;p&gt;Tab Completion: z supports tab completion. After any number of arguments, press TAB to complete on directories that match each argument. Due to limitations of the completion implementations, only the last argument will be com- pleted in the shell.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   Internally, z decides you&#39;ve requested a completion if the  last  argu-&#xA;   ment  passed  is  an  absolute  path to an existing directory. This may&#xA;   cause unexpected behavior if the last argument to z begins with /.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ENVIRONMENT A function _z() is defined.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   The contents of the variable $_Z_CMD is aliased to _z 2&amp;gt;&amp;amp;1. If not set,&#xA;   $_Z_CMD defaults to z.&#xA;&#xA;   The  environment  variable $_Z_DATA can be used to control the datafile&#xA;   location. If it is not defined, the location defaults to $HOME/.z.&#xA;&#xA;   The environment variable $_Z_NO_RESOLVE_SYMLINKS can be set to  prevent&#xA;   resolving  of  symlinks.  If  it  is  not  set,  symbolic links will be&#xA;   resolved when added to the datafile.&#xA;&#xA;   In bash, z appends a command to the PROMPT_COMMAND environment variable&#xA;   to maintain its database. In zsh, z appends a function _z_precmd to the&#xA;   precmd_functions array.&#xA;&#xA;   The environment variable $_Z_NO_PROMPT_COMMAND can be set if  you  want&#xA;   to handle PROMPT_COMMAND or precmd yourself.&#xA;&#xA;   The  environment  variable  $_Z_EXCLUDE_DIRS  can be set to an array of&#xA;   directory trees to exclude from tracking.  $HOME  is  always  excluded.&#xA;   Directories must be full paths without trailing slashes.&#xA;&#xA;   The  environment  variable  $_Z_OWNER  can  be set to your username, to&#xA;   allow usage of z when your sudo environment keeps $HOME set.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;FILES Data is stored in $HOME/.z. This can be overridden by setting the $_Z_DATA environment variable. When initialized, z will raise an error if this path is a directory, and not function correctly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   A man page (z.1) is provided.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SEE ALSO regex(7), pushd, popd, autojump, cdargs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   Please file bugs at https://github.com/rupa/z/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;z January 2013 Z(1)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lroudge/holberton-system_engineering-devops</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/lroudge/holberton-system_engineering-devops</id>
    <link href="https://github.com/lroudge/holberton-system_engineering-devops" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Holberton School System Engineering &amp;amp; DevOps Track&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;At Holberton School, we learn by doing. We have projects everyday that we have to push on GitHub in order for an automatic review to be done. This repository contains directories each corresponding to a system engineering or DevOps project. These projects are part of the Holberton School year 1 curriculum. In these projects, we cover everything from the basics of the Linux Shell, Bash commands, Bash scripting, networking, APIs, and web-stack debugging to more advanced topics.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Directories&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x00-shell_basics&#34;&gt;0x00-shell_basics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to the basics of the Linux Shell&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x01-shell_permissions&#34;&gt;0x01-shell_permissions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to Shell permissions and the file system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x02-shell_redirections&#34;&gt;0x02-shell_redirections&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to Shell redirections&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x03-shell_variables_expansion&#34;&gt;0x03-shell_variables_expansions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to Shell variable expansions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x04-loops_conditions_and_parsing&#34;&gt;0x04-loops_conditions_and_parsing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to Bash scripting with loops and conditions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x05-processes_and_signals&#34;&gt;0x05-processes_and_signals&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to processes and signals in the Shell&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x06-regular_expressions&#34;&gt;0x06-regular_expressions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to regular expressions in Ruby&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x07-networking_basics&#34;&gt;0x07-networking_basics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to networking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x08-networking_basics_2&#34;&gt;0x08-networking_basics_2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Advanced networking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x09-web_infrastructure_design&#34;&gt;0x09-web_infrastructure_design&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Diagrams illustrating a Web Infrastructure (LAMP)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x0A-configuration_management&#34;&gt;0x0A-configuration_management&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to configuration management with Puppet&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x0B-ssh&#34;&gt;0x0B-ssh&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Managing our own servers, and sshing into it&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x0C-web_server&#34;&gt;0x0C-web_server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to web servers and installing Nginx on our servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x0D-web_stack_debugging_0&#34;&gt;0x0D-web_stack_debugging_0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to web stack debugging&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x0E-web_stack_debugging_1&#34;&gt;0x0E-web_stack_debugging_1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Advanced web stack debugging&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x0F-load_balancer&#34;&gt;0x0F-load_balancer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to load-balancing and installing HAProxy on our own servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x10-https_ssl&#34;&gt;0x10-https_ssl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to HTTPS, SSL and getting our own SSL certificate for our servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x11-what_happens_when_your_type_holbertonschool_com_in_your_browser_and_press_enter&#34;&gt;0x11-what_happens_when_your_type_holbertonschool_com_in_your_browser_and_press_enter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Blog post explaining a web infrastructure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x12-web_stack_debugging_2&#34;&gt;0x12-web_stack_debugging_2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;More advanced web stack debugging&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x13-firewall&#34;&gt;0x13-firewall&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to firewalls and setting up of a firewall on our own servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x14-mysql&#34;&gt;0x14-mysql&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Introduction to Database clusters and setting up a Primary-Replica MySQL cluster on our own servers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x15-api&#34;&gt;0x15-api&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Querying an API and exporting data to JSON or CSV format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lroudge/holberton-system_engineering-devops/master/0x16-api_advanced&#34;&gt;0x16-api_advanced&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Advanced API queries, recursive requests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Laura Roudge - Cohort 8&lt;/p&gt; &#xA;&lt;p&gt;email: &lt;a href=&#34;mailto:laura.derohan@gmail.com&#34;&gt;laura.derohan@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/LRoudge&#34;&gt;https://twitter.com/LRoudge&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>boostchicken-dev/udm-utilities</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/boostchicken-dev/udm-utilities</id>
    <link href="https://github.com/boostchicken-dev/udm-utilities" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of things I have made to make the Unifi Dream Machine more useful&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;udm-utilities &lt;a href=&#34;https://discord.gg/8zqrQJFghg&#34;&gt;&lt;img src=&#34;https://img.shields.io:/discord/939817841107034172?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34; title=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmp.yml&#34;&gt;&lt;img src=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmp.yml/badge.svg?sanitize=true&#34; alt=&#34;UDM-Pro Podman&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmse.yml&#34;&gt;&lt;img src=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmse.yml/badge.svg?branch=master&#34; alt=&#34;UDM-SE Podman&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of things to enhance the capabilities of your Unifi Dream Machine or Dream Machine Pro.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull Requests welcome! If you use this functionality to do new cool stuff to your UDM/P please send a PR and share it with the community!&lt;/p&gt; &#xA;&lt;h2&gt;Custom Kernel&lt;/h2&gt; &#xA;&lt;p&gt;If you want to do a custom kernel with wireguard support, multicast, multipath routing that is now a possiblity. Please see the repo and please use at your own risk. This a much larger change than anything in this repo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fabianishere/udm-kernel-tools&#34;&gt;udm-kernel-tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Podman Builds for UDM-SE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions&#34;&gt;https://github.com/boostchicken-dev/udm-utilities/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Extract the zip to the root of your device! Look at the assets on the Podman workflow.&lt;/p&gt; &#xA;&lt;h2&gt;General Tools&lt;/h2&gt; &#xA;&lt;h3&gt;on-boot-script&lt;/h3&gt; &#xA;&lt;p&gt;Do this first. Enables &lt;code&gt;init.d&lt;/code&gt; style scripts to run on every boot of your UDM. Includes examples to run &lt;code&gt;wpa-supplicant/eap-proxy&lt;/code&gt; and/or &lt;code&gt;ntop-ng&lt;/code&gt; on startup. Follow this &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/raw/master/on-boot-script/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It enables complete customization of your UDM/P and fills the gap that config.gateway.json left behind.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;podman-update&lt;/h3&gt; &#xA;&lt;p&gt;Updates Podman, conmon, and runc to a recent version. This allows docker-compose usage as well.&lt;/p&gt; &#xA;&lt;h3&gt;container-common&lt;/h3&gt; &#xA;&lt;p&gt;Apply this after on-boot-script. Updates container defaults to maintain &lt;strong&gt;stable disk usage footprint&lt;/strong&gt; of custom containers. &lt;strong&gt;Prevents logs filling up UDM storage full&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;python&lt;/h3&gt; &#xA;&lt;p&gt;If you need python3 on your UDM, generally not recommended, can always use it in unifi-os container.&lt;/p&gt; &#xA;&lt;h3&gt;UDMP Persistence SSH Keys Script&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDMP-Persistence-SSH-Keys&#34;&gt;https://github.com/fire1ce/UDMP-Persistence-SSH-Keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Script to presist ssh keys after reboot&lt;/p&gt; &#xA;&lt;h2&gt;VPN Servers / Clients&lt;/h2&gt; &#xA;&lt;h3&gt;wireguard-go&lt;/h3&gt; &#xA;&lt;p&gt;Run a Wireguard client/server on your UDM/P. Utilizes wireguard-go, not linux kernel modules. The performance will take a hit due to that.&lt;/p&gt; &#xA;&lt;h3&gt;WireGuard kernel module for UDM/P&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tusc/wireguard-kmod&#34;&gt;https://github.com/tusc/wireguard-kmod&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Uses a prebuilt linux kernel module, without the need to move to a custom kernel.&lt;/p&gt; &#xA;&lt;h3&gt;OpenConnect VPN&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shuguet/openconnect-udm&#34;&gt;https://github.com/shuguet/openconnect-udm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenConnect VPN Client for the UniFi Dream Machine Pro (Unofficial).&lt;/p&gt; &#xA;&lt;h3&gt;split-vpn&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/peacey/split-vpn&#34;&gt;https://github.com/peacey/split-vpn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A split tunnel VPN script for the UDM with policy based routing. This helper script can be used on your UDM to route select VLANs, clients, or even domains through a VPN connection. It supports OpenVPN, WireGuard, and OpenConnect (Cisco AnyConnect) clients running directly on your UDM, and external VPN clients running on other servers on your network.&lt;/p&gt; &#xA;&lt;h2&gt;DNS Providers&lt;/h2&gt; &#xA;&lt;p&gt;Install a DNS server that functions as a network-wide ad and tracker blocker, and which can also securely proxy encrypted DNS requests to an upstream DNS provider. Begin by following the instructions to setup &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/tree/master/on-boot-script&#34;&gt;on-boot-script&lt;/a&gt; and &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/tree/master/dns-common/on_boot.d&#34;&gt;dns-common&lt;/a&gt;. Then, follow the guides below to setup either Pi-Hole, NextDNS, or AdGuard Home.&lt;/p&gt; &#xA;&lt;h3&gt;dns-common&lt;/h3&gt; &#xA;&lt;p&gt;Base configuration for DNS server containers, both IPv4 and IPv6. Utilizes MacVLAN CNI plugins to completely isolate the network stack.&lt;/p&gt; &#xA;&lt;h3&gt;run-pihole&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PiHole w/ DoH Image. Run Pi-hole on your UDM with podman. Also contains custom image for Pi-hole with &lt;code&gt;cloudflared&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;PiHole with DoTe&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole-dote.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Desigened by: &lt;a href=&#34;https://github.com/chrisstaite/DoTe/&#34;&gt;https://github.com/chrisstaite/DoTe/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternative to mine which uses DoTe&lt;/p&gt; &#xA;&lt;h3&gt;AdguardHome&lt;/h3&gt; &#xA;&lt;p&gt;Run AdguardHome on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;Cloudflare DDNS&lt;/h3&gt; &#xA;&lt;p&gt;Update your cloudflare domains from your UDM with podman.&lt;/p&gt; &#xA;&lt;h2&gt;Cool projects you can use with this&lt;/h2&gt; &#xA;&lt;h3&gt;multicast-relay&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/multicast-relay&#34;&gt;https://hub.docker.com/r/scyto/multicast-relay&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/alsmith/multicast-relay&#34;&gt;https://github.com/alsmith/multicast-relay&lt;/a&gt; to provide mDNS and SSDP on a unifi dream machine. It will likely work on any multi homed host.&lt;/p&gt; &#xA;&lt;h3&gt;mqtt-mosquitto&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/eclipse-mosquitto&#34;&gt;https://hub.docker.com/_/eclipse-mosquitto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Eclipse Mosquitto is an open source message broker which implements MQTT version 5, 3.1.1 and 3.1.&lt;/p&gt; &#xA;&lt;h3&gt;ntopng&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tusc/ntopng-udm&#34;&gt;https://github.com/tusc/ntopng-udm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Much better network stats for your UDM/P! Install this docker container and create an on_boot script to make sure it&#39;s always running.&lt;/p&gt; &#xA;&lt;h3&gt;LetsEncrypt SSL Certs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kchristensen/udm-le&#34;&gt;https://github.com/kchristensen/udm-le&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provision and renew LetsEncrypt SSL certs from your UDM/P.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alxwolf/ubios-cert&#34;&gt;https://github.com/alxwolf/ubios-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;udm-le&lt;/code&gt;, adding different providers for SSL/TLS certificates (LE, ZeroSSL, BuyPass) and DNS API (all-inkl.com) currently not supported by &lt;a href=&#34;https://go-acme.github.io/lego/dns/&#34;&gt;LEGO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unifi API Browser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/unifibrowser&#34;&gt;https://hub.docker.com/r/scyto/unifibrowser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/Art-of-WiFi/UniFi-API-browser&#34;&gt;https://github.com/Art-of-WiFi/UniFi-API-browser&lt;/a&gt; to provide a graphical tool to inspect the data structures available via the unifi API. Great if you are using the REST API for your own purposes and want to explore. Works with multiple controller versions.&lt;/p&gt; &#xA;&lt;h3&gt;Unifi UDM-Pro auto fan speed&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/renedis/ubnt-auto-fan-speed&#34;&gt;https://github.com/renedis/ubnt-auto-fan-speed&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A shell script with the goal to make the UDM-Pro silenced while still having good thermal values. It stops the build in service that monitors the thermal values, fan speed and connection of a HDD/SSD. After that it sets the thermal/fan chip (adt7475) to automatic mode. Once that is done it changes the thermal and fan values specified in the script.&lt;/p&gt; &#xA;&lt;h3&gt;rclone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rclone.org/&#34;&gt;https://rclone.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run rclone container with Web GUI for offsite backups.&lt;/p&gt; &#xA;&lt;h3&gt;Telegram-Notifications On WAN Failorver&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDMP-Failover-Telegram-Notifications&#34;&gt;https://github.com/fire1ce/UDMP-Failover-Telegram-Notifications&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use telegram bot to be notified of a wan failover with local account&lt;/p&gt; &#xA;&lt;h3&gt;udm-proxy&lt;/h3&gt; &#xA;&lt;p&gt;Run a reverse proxy (using caddy in vlan) on the udm-pro.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xpherism/udm-proxy&#34;&gt;https://github.com/xpherism/udm-proxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Unsupported / No longer maintained&lt;/h2&gt; &#xA;&lt;h3&gt;nextdns&lt;/h3&gt; &#xA;&lt;p&gt;Run NextDNS on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;suricata&lt;/h3&gt; &#xA;&lt;p&gt;Updates suricata to a recent version.&lt;/p&gt; &#xA;&lt;h3&gt;Jumbo Frames&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kalenarndt/udmp-jumbo-frames&#34;&gt;https://github.com/kalenarndt/udmp-jumbo-frames&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; native jumbo frame support for the UDM and UDM-Pro is added in the 1.12.13 EA firmware, support for the UDM-SE is not yet announced.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>acmesh-official/acme.sh</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/acmesh-official/acme.sh</id>
    <link href="https://github.com/acmesh-official/acme.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A pure Unix shell script implementing ACME client protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An ACME Shell script: acme.sh&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&#34; alt=&#34;Solaris&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/Shellcheck/badge.svg?sanitize=true&#34; alt=&#34;Shellcheck&#34;&gt; &lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/PebbleStrict/badge.svg?sanitize=true&#34; alt=&#34;PebbleStrict&#34;&gt; &lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/Build%20DockerHub/badge.svg?sanitize=true&#34; alt=&#34;DockerHub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh&#34; alt=&#34;Financial Contributors on Open Collective&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/all/badge.svg?label=financial+contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/acme-sh/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/acme-sh/Lobby.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/acme-sh/Lobby&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neilpang/acme.sh&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/neilpang/acme.sh.svg?sanitize=true&#34; alt=&#34;Docker stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neilpang/acme.sh&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/neilpang/acme.sh.svg?sanitize=true&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An ACME protocol client written purely in Shell (Unix shell) language.&lt;/li&gt; &#xA; &lt;li&gt;Full ACME protocol implementation.&lt;/li&gt; &#xA; &lt;li&gt;Support ECDSA certs&lt;/li&gt; &#xA; &lt;li&gt;Support SAN and wildcard certs&lt;/li&gt; &#xA; &lt;li&gt;Simple, powerful and very easy to use. You only need 3 minutes to learn it.&lt;/li&gt; &#xA; &lt;li&gt;Bash, dash and sh compatible.&lt;/li&gt; &#xA; &lt;li&gt;Purely written in Shell with no dependencies on python.&lt;/li&gt; &#xA; &lt;li&gt;Just one script to issue, renew and install your certificates automatically.&lt;/li&gt; &#xA; &lt;li&gt;DOES NOT require &lt;code&gt;root/sudoer&lt;/code&gt; access.&lt;/li&gt; &#xA; &lt;li&gt;Docker ready&lt;/li&gt; &#xA; &lt;li&gt;IPv6 ready&lt;/li&gt; &#xA; &lt;li&gt;Cron job notifications for renewal or error etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s probably the &lt;code&gt;easiest &amp;amp; smartest&lt;/code&gt; shell script to automatically issue &amp;amp; renew the free certificates.&lt;/p&gt; &#xA;&lt;p&gt;Wiki: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Docker Fans: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker&#34;&gt;acme.sh &lt;span&gt;💕&lt;/span&gt; Docker &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/neilpangxa&#34;&gt;@neilpangxa&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&#34;&gt;中文说明&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Who:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.crashed.org/letsencrypt-in-freebsd-org/&#34;&gt;FreeBSD.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ruby-china.org/topics/31983&#34;&gt;ruby-china.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pve.proxmox.com/wiki/Certificate_Management&#34;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfsense/FreeBSD-ports/pull/89&#34;&gt;pfsense&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.webfaction.com/questions/19988/using-letsencrypt&#34;&gt;webfaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.loadbalancer.org/blog/loadbalancer-org-with-lets-encrypt-quick-and-dirty&#34;&gt;Loadbalancer.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meta.discourse.org/t/setting-up-lets-encrypt/40709&#34;&gt;discourse.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://centminmod.com/letsencrypt-acmetool-https.html&#34;&gt;Centminmod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.splynx.com/t/free-ssl-cert-for-splynx-lets-encrypt/297&#34;&gt;splynx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.archlinux.org/packages/community/any/acme.sh&#34;&gt;archlinux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opnsense/plugins/tree/master/security/acme-client/src/opnsense/scripts/OPNsense/AcmeClient&#34;&gt;opnsense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://centos-webpanel.com/&#34;&gt;CentOS Web Panel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lnmp.org/&#34;&gt;lnmp.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Blogs-and-tutorials&#34;&gt;more...&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tested OS&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;NO&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mac OSX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows (cygwin with curl, openssl and crontab included)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&#34; alt=&#34;Solaris&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;NA&lt;/td&gt; &#xA;   &lt;td&gt;pfsense&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;NA&lt;/td&gt; &#xA;   &lt;td&gt;OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CentOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alpine Linux (with curl)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Archlinux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kali Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Oracle Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mageia&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Gentoo Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ClearLinux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;-----&lt;/td&gt; &#xA;   &lt;td&gt;Cloud Linux &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/issues/111&#34;&gt;https://github.com/acmesh-official/acme.sh/issues/111&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;-----&lt;/td&gt; &#xA;   &lt;td&gt;OpenWRT: Tested and working. See &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-run-on-OpenWRT&#34;&gt;wiki page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/letest#here-are-the-latest-status&#34;&gt;&lt;img src=&#34;https://acmesh-official.github.io/acmetest/status/proxmox.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proxmox: See Proxmox VE Wiki. Version &lt;a href=&#34;https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Let.27s_Encrypt_using_acme.sh&#34;&gt;4.x, 5.0, 5.1&lt;/a&gt;, version &lt;a href=&#34;https://pve.proxmox.com/wiki/Certificate_Management&#34;&gt;5.2 and up&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://github.com/acmesh-official/acmetest&#34;&gt;testing project&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acmetest&#34;&gt;https://github.com/acmesh-official/acmetest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported CA&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA&#34;&gt;ZeroSSL.com CA&lt;/a&gt;(default)&lt;/li&gt; &#xA; &lt;li&gt;Letsencrypt.org CA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/BuyPass.com-CA&#34;&gt;BuyPass.com CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/SSL.com-CA&#34;&gt;SSL.com CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Google-Public-CA&#34;&gt;Google.com Public CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsencrypt/pebble&#34;&gt;Pebble strict Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any other &lt;a href=&#34;https://tools.ietf.org/html/rfc8555&#34;&gt;RFC8555&lt;/a&gt;-compliant CA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported modes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Webroot mode&lt;/li&gt; &#xA; &lt;li&gt;Standalone mode&lt;/li&gt; &#xA; &lt;li&gt;Standalone tls-alpn mode&lt;/li&gt; &#xA; &lt;li&gt;Apache mode&lt;/li&gt; &#xA; &lt;li&gt;Nginx mode&lt;/li&gt; &#xA; &lt;li&gt;DNS mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode&#34;&gt;DNS alias mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Stateless-Mode&#34;&gt;Stateless mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;1. How to install&lt;/h1&gt; &#xA;&lt;h3&gt;1. Install online&lt;/h3&gt; &#xA;&lt;p&gt;Check this project: &lt;a href=&#34;https://github.com/acmesh-official/get.acme.sh&#34;&gt;https://github.com/acmesh-official/get.acme.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://get.acme.sh | sh -s email=my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O -  https://get.acme.sh | sh -s email=my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Or, Install from git&lt;/h3&gt; &#xA;&lt;p&gt;Clone this project and launch installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/acmesh-official/acme.sh.git&#xA;cd ./acme.sh&#xA;./acme.sh --install -m my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;code&gt;don&#39;t have to be root&lt;/code&gt; then, although &lt;code&gt;it is recommended&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Advanced Installation: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The installer will perform 3 actions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and copy &lt;code&gt;acme.sh&lt;/code&gt; to your home dir (&lt;code&gt;$HOME&lt;/code&gt;): &lt;code&gt;~/.acme.sh/&lt;/code&gt;. All certs will be placed in this folder too.&lt;/li&gt; &#xA; &lt;li&gt;Create alias for: &lt;code&gt;acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create daily cron job to check and renew the certs if needed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Cron entry example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;0 0 * * * &#34;/home/user/.acme.sh&#34;/acme.sh --cron --home &#34;/home/user/.acme.sh&#34; &amp;gt; /dev/null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the installation, you must close the current terminal and reopen it to make the alias take effect.&lt;/p&gt; &#xA;&lt;p&gt;Ok, you are ready to issue certs now.&lt;/p&gt; &#xA;&lt;p&gt;Show help message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;root@v1:~# acme.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;2. Just issue a cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Single domain.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /home/wwwroot/example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /home/username/public_html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /var/www/html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; Multiple domains in the same cert.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parameter &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt; or &lt;code&gt;/home/username/public_html&lt;/code&gt; or &lt;code&gt;/var/www/html&lt;/code&gt; is the web root folder where you host your website files. You &lt;strong&gt;MUST&lt;/strong&gt; have &lt;code&gt;write access&lt;/code&gt; to this folder.&lt;/p&gt; &#xA;&lt;p&gt;Second argument &lt;strong&gt;&#34;example.com&#34;&lt;/strong&gt; is the main domain you want to issue the cert for. You must have at least one domain there.&lt;/p&gt; &#xA;&lt;p&gt;You must point and bind all the domains to the same webroot dir: &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The certs will be placed in &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. Install the cert to Apache/Nginx etc.&lt;/h1&gt; &#xA;&lt;p&gt;After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. You &lt;strong&gt;MUST&lt;/strong&gt; use this command to copy the certs to the target files, &lt;strong&gt;DO NOT&lt;/strong&gt; use the certs files in &lt;strong&gt;~/.acme.sh/&lt;/strong&gt; folder, they are for internal use only, the folder structure may change in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --install-cert -d example.com \&#xA;--cert-file      /path/to/certfile/in/apache/cert.pem  \&#xA;--key-file       /path/to/keyfile/in/apache/key.pem  \&#xA;--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \&#xA;--reloadcmd     &#34;service apache2 force-reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --install-cert -d example.com \&#xA;--key-file       /path/to/keyfile/in/nginx/key.pem  \&#xA;--fullchain-file /path/to/fullchain/nginx/cert.pem \&#xA;--reloadcmd     &#34;service nginx force-reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only the domain is required, all the other parameters are optional.&lt;/p&gt; &#xA;&lt;p&gt;The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.&lt;/p&gt; &#xA;&lt;p&gt;Install/copy the cert/key to the production Apache or Nginx path.&lt;/p&gt; &#xA;&lt;p&gt;The cert will be renewed every &lt;strong&gt;60&lt;/strong&gt; days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: &lt;code&gt;service apache2 force-reload&lt;/code&gt; or &lt;code&gt;service nginx force-reload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please take care: The reloadcmd is very important. The cert can be automatically renewed, but, without a correct &#39;reloadcmd&#39; the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;4. Use Standalone server to issue cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 80 (TCP))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port &lt;code&gt;80&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;5. Use Standalone ssl server to issue cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 443 (TCP))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port &lt;code&gt;443&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;6. Use Apache mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Apache server)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; &#xA;&lt;p&gt;Just set string &#34;apache&#34; as the second argument and it will force use of apache plugin automatically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This apache mode is only to issue the cert, it will not change your apache config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your apache server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;7. Use Nginx mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Nginx server)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; &#xA;&lt;p&gt;Just set string &#34;nginx&#34; as the second argument.&lt;/p&gt; &#xA;&lt;p&gt;It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.&lt;/p&gt; &#xA;&lt;p&gt;So, the config is not changed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This nginx mode is only to issue the cert, it will not change your nginx config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your nginx server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;8. Automatic DNS API integration&lt;/h1&gt; &#xA;&lt;p&gt;If your DNS provider supports API access, we can use that API to automatically issue the certs.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to do anything manually!&lt;/p&gt; &#xA;&lt;h3&gt;Currently acme.sh supports most of the dns providers:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;9. Use DNS manual mode:&lt;/h1&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;If your dns provider doesn&#39;t support any api access, you can add the txt record by hand.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should get an output like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Add the following txt record:&#xA;Domain:_acme-challenge.example.com&#xA;Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c&#xA;&#xA;Add the following txt record:&#xA;Domain:_acme-challenge.www.example.com&#xA;Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#xA;&#xA;Please add those txt records to the domains. Waiting for the dns to take effect.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just rerun with &lt;code&gt;renew&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --renew -d example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ok, it&#39;s done.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please use dns api mode instead.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;10. Issue ECC certificates&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Let&#39;s Encrypt&lt;/code&gt; can now issue &lt;strong&gt;ECDSA&lt;/strong&gt; certificates.&lt;/p&gt; &#xA;&lt;p&gt;And we support them too!&lt;/p&gt; &#xA;&lt;p&gt;Just set the &lt;code&gt;keylength&lt;/code&gt; parameter with a prefix &lt;code&gt;ec-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;h3&gt;Single domain ECC certificate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SAN multi domain ECC certificate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please look at the &lt;code&gt;keylength&lt;/code&gt; parameter above.&lt;/p&gt; &#xA;&lt;p&gt;Valid values are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-256 (prime256v1, &#34;ECDSA P-256&#34;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-384 (secp384r1, &#34;ECDSA P-384&#34;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-521 (secp521r1, &#34;ECDSA P-521&#34;, which is not supported by Let&#39;s Encrypt yet.)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;11. Issue Wildcard certificates&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s simple, just give a wildcard domain as the &lt;code&gt;-d&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh  --issue -d example.com  -d &#39;*.example.com&#39;  --dns dns_cf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;12. How to renew the certs&lt;/h1&gt; &#xA;&lt;p&gt;No, you don&#39;t need to renew the certs manually. All the certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; &#xA;&lt;p&gt;However, you can also force to renew a cert:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --renew -d example.com --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, for ECC cert:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --renew -d example.com --force --ecc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;13. How to stop cert renewal&lt;/h1&gt; &#xA;&lt;p&gt;To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --remove -d example.com [--ecc]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The cert/key file is not removed from the disk.&lt;/p&gt; &#xA;&lt;p&gt;You can remove the respective directory (e.g. &lt;code&gt;~/.acme.sh/example.com&lt;/code&gt;) by yourself.&lt;/p&gt; &#xA;&lt;h1&gt;14. How to upgrade &lt;code&gt;acme.sh&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;acme.sh is in constant development, so it&#39;s strongly recommended to use the latest code.&lt;/p&gt; &#xA;&lt;p&gt;You can update acme.sh to the latest code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also enable auto upgrade:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade --auto-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;strong&gt;acme.sh&lt;/strong&gt; will be kept up to date automatically.&lt;/p&gt; &#xA;&lt;p&gt;Disable auto upgrade:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade --auto-upgrade 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;15. Issue a cert from an existing CSR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;16. Send notifications in cronjob&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/notify&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/notify&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;17. Under the Hood&lt;/h1&gt; &#xA;&lt;p&gt;Speak ACME language using shell, directly to &#34;Let&#39;s Encrypt&#34;.&lt;/p&gt; &#xA;&lt;p&gt;TODO:&lt;/p&gt; &#xA;&lt;h1&gt;18. Acknowledgments&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Acme-tiny: &lt;a href=&#34;https://github.com/diafygi/acme-tiny&#34;&gt;https://github.com/diafygi/acme-tiny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ACME protocol: &lt;a href=&#34;https://github.com/ietf-wg-acme/acme&#34;&gt;https://github.com/ietf-wg-acme/acme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/acmesh/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/acmesh/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;19. License &amp;amp; Others&lt;/h1&gt; &#xA;&lt;p&gt;License is GPLv3&lt;/p&gt; &#xA;&lt;p&gt;Please Star and Fork me.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/pulls&#34;&gt;pull requests&lt;/a&gt; are welcome.&lt;/p&gt; &#xA;&lt;h1&gt;20. Donate&lt;/h1&gt; &#xA;&lt;p&gt;Your donation makes &lt;strong&gt;acme.sh&lt;/strong&gt; better:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PayPal/Alipay(支付宝)/Wechat(微信): &lt;a href=&#34;https://donate.acme.sh/&#34;&gt;https://donate.acme.sh/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Donate-list&#34;&gt;Donate List&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-quickstart-templates</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/Azure/azure-quickstart-templates</id>
    <link href="https://github.com/Azure/azure-quickstart-templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Azure Quickstart Templates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure Resource Manager QuickStart Templates&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains all currently available Azure Resource Manager templates contributed by the community. A searchable template index is maintained at &lt;a href=&#34;https://azure.microsoft.com/en-us/documentation/templates&#34;&gt;azure.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/README.md#contribution-guide&#34;&gt;&lt;strong&gt;Contribution guide&lt;/strong&gt;&lt;/a&gt; for how to use or contribute to this repo.&lt;/p&gt; &#xA;&lt;h2&gt;NOTE&lt;/h2&gt; &#xA;&lt;p&gt;We have finished migration of the samples to subfolders, see &lt;a href=&#34;https://azure.microsoft.com/en-us/documentation/templates&#34;&gt;azure.com&lt;/a&gt; if you need help finding a sample. A few obsolete samples were removed in the migration.&lt;/p&gt; &#xA;&lt;h3&gt;Final Note&lt;/h3&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MichaIng/DietPi</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/MichaIng/DietPi</id>
    <link href="https://github.com/MichaIng/DietPi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight justice for your single-board computer!&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MichaIng/DietPi-Website/master/images/dietpi-logo_180x180.png&#34; alt=&#34;DietPi logo&#34; width=&#34;180&#34; height=&#34;180&#34; loading=&#34;lazy&#34;&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Lightweight justice for your single-board computer!&lt;/b&gt; &lt;br&gt;&lt;br&gt; optimised • simplified • for everyone &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://dietpi.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://dietpi.com/#download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Downloads&lt;/a&gt; • &lt;a href=&#34;https://dietpi.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://dietpi.com/forum/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Forum&lt;/a&gt; • &lt;a href=&#34;https://dietpi.com/blog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blog&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Ready to run&lt;/strong&gt; optimised software choices with &lt;a href=&#34;https://dietpi.com/dietpi-software.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dietpi-software&lt;/strong&gt;&lt;/a&gt; &lt;br&gt;Feature-rich configuration tool for your device with &lt;strong&gt;dietpi-config&lt;/strong&gt;. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;DietPi is an extremely lightweight Debian-based OS. It is highly optimised for minimal CPU and RAM resource usage, ensuring your SBC always runs at its maximum potential.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;dietpi programs&lt;/strong&gt; use lightweight whiptail menus. You&#39;ll spend more time enjoying DietPi and applications you need and less time staring at the command line.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;dietpi-software&lt;/code&gt; to quick and easy install &lt;strong&gt;Ready to Run&lt;/strong&gt; &amp;amp; &lt;strong&gt;Optimised&lt;/strong&gt; applications for your system. DietPi will do all the necessary configurations, including starting the services. Few highlights: &lt;a href=&#34;https://dietpi.com/docs/software/desktop/&#34;&gt;Desktop Environments&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/remote_desktop/&#34;&gt;Remote Desktop Access&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/media/&#34;&gt;Media Systems &amp;amp; Players&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/bittorrent/&#34;&gt;BitTorrent &amp;amp; Downloading&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/cloud/&#34;&gt;Cloud &amp;amp; Backup&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/gaming/&#34;&gt;Gaming &amp;amp; Emulation&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/social/&#34;&gt;Social &amp;amp; Search&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/camera/&#34;&gt;Camera &amp;amp; Surveillance&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/advanced_networking/&#34;&gt;Networking&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/system_stats/&#34;&gt;System Stats &amp;amp; Management&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/home_automation/&#34;&gt;Home Automation&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/hardware_projects/&#34;&gt;Hardware &amp;amp; Voice Projects&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/webserver_stack/&#34;&gt;Webserver Stacks&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/dns_servers/&#34;&gt;DNS Servers / Pi-hole&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/file_servers/&#34;&gt;File Servers&lt;/a&gt;, &lt;a href=&#34;https://dietpi.com/docs/software/printing/&#34;&gt;Printing&lt;/a&gt; and much more.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;dietpi-services&lt;/code&gt; to control which installed software has higher or lower priority levels (nice, affinity, policy scheduler).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;dietpi-update&lt;/code&gt; automatically checks for updates and informs you when they are available. Update instantly, without having to write a new image. &lt;strong&gt;DietPi automation&lt;/strong&gt; allows you to completely automate a DietPi installation with no user input, simply by configuring &lt;code&gt;dietpi.txt&lt;/code&gt; before powering on.&lt;/p&gt; &#xA;&lt;h2&gt;The DietPi Project Team&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/MichaIng&#34;&gt;Micha&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined Q3 2017&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project lead (20/02/2019 and onwards), source code contributor, bug fixes, software improvements, DietPi forum administrator.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/Fourdee&#34;&gt;Daniel Knight&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Project founder and previous project lead (19/02/2019 and previous), source code contributor and tester.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://dietpi.com/forum/u/johnvick/summary&#34;&gt;JohnVick&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2016-06-08&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;DietPi forum co-administrator, management, support, testing and valuable feedback.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/sal666&#34;&gt;sal666&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2017-07-26&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creator and maintainer of the Clonezilla based installer images for x86_64 UEFI systems.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/Joulinar&#34;&gt;Joulinar&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined Q4 2019&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;DietPi forum moderator, support, testing, bug reports + investigation and valuable feedback.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/StephanStS&#34;&gt;StephanStS&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined Q4 2019&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;NanoPi image creator, tester and bug reports.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/fpetru&#34;&gt;Petru&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2020-05-31&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;DietPi documentation author, product manager, SEO and DietPi visibility recommendations.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/ravenclaw900&#34;&gt;ravenclaw900&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2020-10-11&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Source code contributor, creator of the &lt;a href=&#34;https://github.com/ravenclaw900/DietPi-Dashboard&#34;&gt;DietPi-Dashboard&lt;/a&gt; and many software implementations.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/yumiris&#34;&gt;yumiris&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2018-04-16&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Creator and maintainer of the &lt;a href=&#34;https://github.com/yumiris/DietPi.Hyper-V&#34;&gt;DietPi Hyper-V images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Collaborations&lt;/h3&gt; &#xA;&lt;h4&gt;DietPi + &lt;a href=&#34;https://github.com/midwan/amiberry&#34;&gt;Amiberry&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Since 2016-09-02&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Joint venture to bring you the ultimate Amiga experience on your SBC, running lightweight and optimised DietPi at its core: &lt;a href=&#34;https://github.com/MichaIng/DietPi/issues/474&#34;&gt;https://github.com/MichaIng/DietPi/issues/474&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Hall of Fame&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/k-plan&#34;&gt;K-Plan&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2016-01-01&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributions to the DietPi in general, in-depth testing, bug finding and valuable feedback, forum moderator.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://dietpi.com/forum/u/zombievirus/summary&#34;&gt;ZombieVirus&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2016-03-20&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;DietPi forum moderator and version history maintainer on forums.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/rhkean&#34;&gt;Rhkean&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2018-03-01&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributions to the DietPi in general, including source code, testing, new devices, forum moderator.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/pilovali&#34;&gt;Pilovali&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2015-10-10&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provided dietpi.com web hosting for 1 year until April 17th 2016. Additionally: forum moderator, testing, bug reporting.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/xenfomation&#34;&gt;Xenfomation&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2016-04-01&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contributions to the DietPi in general, including source code and VirtualBox image creation/conversion.&lt;/p&gt; &#xA;&lt;h4&gt;AWL29&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Joined 2016-10-01&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Created the DietPi image for NanoPi M3/T3.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Git coders, please use the active development branch: &lt;a href=&#34;https://github.com/MichaIng/DietPi/tree/dev&#34;&gt;dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MichaIng/DietPi/wiki/How-to-add-a-new-software-title&#34;&gt;How to add a new software title to DietPi-Software&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Are you able to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide feedback and/or test areas of DietPi, to improve the user experience?&lt;/li&gt; &#xA; &lt;li&gt;Report bugs?&lt;/li&gt; &#xA; &lt;li&gt;Improve/add more features to the &lt;a href=&#34;https://github.com/MichaIng/DietPi-Website&#34;&gt;DietPi website&lt;/a&gt; or &lt;a href=&#34;https://github.com/MichaIng/DietPi-Website&#34;&gt;documentation&lt;/a&gt;?&lt;/li&gt; &#xA; &lt;li&gt;Compile software for our supported SBCs?&lt;/li&gt; &#xA; &lt;li&gt;Contribute to DietPi with programming on GitHub?&lt;/li&gt; &#xA; &lt;li&gt;Suggest new software that we can add to the &lt;code&gt;dietpi-software&lt;/code&gt; install system?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If so, let us know!&lt;br&gt; We are always looking for talented people who believe in the DietPi project, and, wish to contribute in any way you can.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Send me an Email: &lt;a href=&#34;mailto:micha@dietpi.com&#34;&gt;micha@dietpi.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join our forum: &lt;a href=&#34;https://dietpi.com/forum/&#34;&gt;https://dietpi.com/forum/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/MichaIng/DietPi&#34;&gt;https://github.com/MichaIng/DietPi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also read our &lt;a href=&#34;https://dietpi.com/contribute.html&#34;&gt;contribute page&lt;/a&gt; for an overview of way to support DietPi.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;DietPi Copyright (C) 2020 MichaIng&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email &lt;a href=&#34;mailto:micha@dietpi.com&#34;&gt;micha@dietpi.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Web &lt;a href=&#34;https://dietpi.com/&#34;&gt;https://dietpi.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;h3&gt;DietPi Source&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/MichaIng/DietPi&#34;&gt;https://github.com/MichaIng/DietPi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build: Not applicable, as DietPi uses Bash scripts only, no building or compiling is required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DietPi Files&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All files located in (recursively): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/var/lib/dietpi/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/var/tmp/dietpi/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/boot/dietpi/&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/boot/dietpi.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/boot/config.txt&lt;/code&gt; (RPi)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/boot/boot.ini&lt;/code&gt; (Odroid)&lt;/li&gt; &#xA; &lt;li&gt;All files prefixed with: &lt;code&gt;dietpi-&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The above GPLv2 documentation also applies to all mentioned files!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3rd Party Sources/Credits&lt;/h3&gt; &#xA;&lt;p&gt;Links to hardware and software manufacturers, sources and build instructions used in DietPi:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/torvalds/linux&#34;&gt;Linux kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/&#34;&gt;GNU operating system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.savannah.gnu.org/cgit/bash.git&#34;&gt;Bash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://salsa.debian.org/&#34;&gt;Debian distribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raspberrypi&#34;&gt;Raspberry&lt;/a&gt; &lt;a href=&#34;https://github.com/RPi-Distro&#34;&gt;Pi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hardkernel?tab=repositories&#34;&gt;Hardkernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.odroid.com/viewtopic.php?t=5908&#34;&gt;Meveric&#39;s Odroid repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sparkysbc?tab=repositories&#34;&gt;Sparky&lt;/a&gt; &lt;a href=&#34;https://github.com/sparky-sbc/sparky-test&#34;&gt;SBC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pine64.org/&#34;&gt;PINE64&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/friendlyarm?tab=repositories&#34;&gt;FriendlyARM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/radxa/apt&#34;&gt;Radxa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian&#34;&gt;Armbian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/curl/curl&#34;&gt;curl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.x.org/archive//individual/&#34;&gt;X.Org-X-Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LXDE&#34;&gt;LXDE desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lxqt&#34;&gt;LXQt desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.xfce.org/&#34;&gt;Xfce desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mate-desktop&#34;&gt;MATE desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gnustep&#34;&gt;GNUstep&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chromium.googlesource.com/chromium/src/&#34;&gt;Chromium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xbmc/xbmc&#34;&gt;Kodi/XBMC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://transmissionbt.com/download/&#34;&gt;Transmission&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rakshasa/rtorrent&#34;&gt;rTorrent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Novik/ruTorrent&#34;&gt;ruTorrent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbittorrent/qBittorrent&#34;&gt;qBittorrent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nextcloud/server&#34;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/owncloud/core&#34;&gt;ownCloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/syncthing/syncthing&#34;&gt;Syncthing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sourceforge.net/p/minidlna/git/ci/master/tree/&#34;&gt;ReadyMedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MusicPlayerDaemon/MPD&#34;&gt;MPD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/notandy/ympd&#34;&gt;ympd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jcorporation/myMPD&#34;&gt;myMPD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache&#34;&gt;Apache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hg.nginx.org/nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redmine.lighttpd.net/projects/lighttpd/repository&#34;&gt;Lighttpd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.php.net/&#34;&gt;PHP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amnuts/opcache-gui&#34;&gt;PHP OPcache GUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MariaDB&#34;&gt;MariaDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phpmyadmin&#34;&gt;phpMyAdmin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/certbot/certbot&#34;&gt;Certbot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pi-hole/pi-hole&#34;&gt;Pi-hole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phpbb/phpbb&#34;&gt;phpBB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/proftpd/proftpd&#34;&gt;ProFTPD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://security.appspot.com/vsftpd.html&#34;&gt;vsftpd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.samba.org/index.php/Using_Git_for_Samba_Development&#34;&gt;Samba&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://linux-nfs.org/wiki/index.php/Main_Page&#34;&gt;NFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mkj/dropbear&#34;&gt;Dropbear&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openssh/openssh-portable&#34;&gt;OpenSSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenVPN&#34;&gt;OpenVPN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pivpn/pivpn&#34;&gt;PiVPN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/midwan/amiberry&#34;&gt;Amiberry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org/opentyrian/opentyrian/wiki/Home&#34;&gt;OpenTyrian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/silvanmelchior/RPi_Cam_Web_Interface&#34;&gt;RPi Cam Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.deluge-torrent.org/wiki/Development#SourceCode&#34;&gt;Deluge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airsonic-advanced/airsonic-advanced&#34;&gt;Airsonic-Advanced&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Logitech/slimserver&#34;&gt;Logitech Media Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ralph-irving/squeezelite&#34;&gt;Squeezelite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ampache/ampache&#34;&gt;Ampache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.plex.tv/&#34;&gt;Plex Media Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tautulli/Tautulli&#34;&gt;Tautulli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FFmpeg/FFmpeg&#34;&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mikebrady/shairport-sync&#34;&gt;Shairport-Sync&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FreshRSS/FreshRSS&#34;&gt;FreshRSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FoldingAtHome&#34;&gt;Folding@Home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pymedusa/Medusa&#34;&gt;Medusa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grafana/grafana&#34;&gt;Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/stevenshiau/clonezilla&#34;&gt;Clonezilla&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-gitea/gitea&#34;&gt;Gitea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gogs/gogs&#34;&gt;Gogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/home-assistant/core&#34;&gt;Home Assistant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reloxx13/TasmoAdmin&#34;&gt;TasmoAdmin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/domoticz/domoticz&#34;&gt;Domoticz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla-services/syncserver&#34;&gt;Firefox Sync Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jellyfin/jellyfin&#34;&gt;Jellyfin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gotson/komga&#34;&gt;Komga&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HTPC-Manager/HTPC-Manager&#34;&gt;HTPC Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/morpheus65535/bazarr&#34;&gt;Bazarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PaperMC/Paper&#34;&gt;PaperMC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NLnetLabs/unbound&#34;&gt;Unbound&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dani-garcia/vaultwarden&#34;&gt;vaultwarden&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/docker-ce&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/portainer/portainer&#34;&gt;Portainer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.torproject.org/tpo/core/tor&#34;&gt;Tor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ptitSeb/box86&#34;&gt;Box86&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ptitSeb/box64&#34;&gt;Box64&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/&#34;&gt;Steam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jacksonliam/mjpg-streamer&#34;&gt;mjpg-streamer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ipfs/ipfs&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenPrinting/cups&#34;&gt;CUPS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/golang/go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/VSCodium/vscodium&#34;&gt;VSCodium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Freenove/WebIOPi&#34;&gt;WebIOPi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WiringPi/WiringPi&#34;&gt;WiringPi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hg.mozilla.org/mozilla-unified&#34;&gt;Firefox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/beetbox/beets&#34;&gt;Beets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fatedier/frp&#34;&gt;frp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AdguardTeam/AdGuardHome&#34;&gt;AdGuard Home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/badaix/snapcast&#34;&gt;Snapcast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/k3s-io/k3s&#34;&gt;K3s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matrix-org/synapse&#34;&gt;Synapse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ytdl-org/youtube-dl&#34;&gt;youtube-dl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.postgresql.org/gitweb/?p=postgresql.git&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openjdk&#34;&gt;OpenJDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Peterkn2001/blynk-server&#34;&gt;Blynk Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/filebrowser/filebrowser&#34;&gt;File Browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Spotifyd/spotifyd&#34;&gt;Spotifyd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ravenclaw900/dietpi-dashboard&#34;&gt;DietPi-Dashboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/canonical/microk8s&#34;&gt;MicroK8s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MichaIng/DietPi-AlloGUI&#34;&gt;Allo GUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/composer/composer&#34;&gt;PHP Composer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/motioneye-project/motioneye&#34;&gt;motionEye&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sonarr/Sonarr&#34;&gt;Sonarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Radarr/Radarr&#34;&gt;Radarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lidarr/Lidarr&#34;&gt;Lidarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Prowlarr/Prowlarr&#34;&gt;Prowlarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jackett/Jackett&#34;&gt;Jackett&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://www.myvirtualserver.com/images/myvirtualserver_logo.png&#34; alt=&#34;myVirtualserver logo&#34; width=&#34;200&#34; height=&#34;44&#34; loading=&#34;lazy&#34;&gt; &lt;br&gt;DietPi&#39;s web hosting is powered by &lt;a href=&#34;https://www.myvirtualserver.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;myVirtualserver&lt;/a&gt;. &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>markshust/docker-magento</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/markshust/docker-magento</id>
    <link href="https://github.com/markshust/docker-magento" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mark Shust&#39;s Docker Configuration for Magento&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;markshust/docker-magento&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;Mark Shust&#39;s Docker Configuration for Magento&lt;/p&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/magento-2.X-brightgreen.svg?logo=magento&amp;amp;longCache=true&#34; alt=&#34;Supported Magento Versions&#34;&gt; &#xA; &lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-php/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/markoshust/magento-php.svg?label=php%20docker%20pulls&#34; alt=&#34;Docker Hub Pulls - PHP&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-nginx/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/markoshust/magento-nginx.svg?label=nginx%20docker%20pulls&#34; alt=&#34;Docker Hub Pulls - Nginx&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%3F-yes-brightgreen.svg?sanitize=true&#34; alt=&#34;Maintained - Yes&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/apple%20silicon%20support-yes-brightgreen&#34; alt=&#34;Apple Silicon Support&#34;&gt; &#xA; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#docker-hub&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#free-course&#34;&gt;Free Course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#updates&#34;&gt;Updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#custom-cli-commands&#34;&gt;Custom CLI Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#misc-info&#34;&gt;Misc Info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker Hub&lt;/h2&gt; &#xA;&lt;p&gt;View Dockerfiles for the latest tags:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-nginx/&#34;&gt;markoshust/magento-nginx (Docker Hub)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markshust/docker-magento/tree/master/images/nginx/1.18&#34;&gt;&lt;code&gt;1.18&lt;/code&gt;, &lt;code&gt;1.18-7&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-php/&#34;&gt;markoshust/magento-php (Docker Hub)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markshust/docker-magento/tree/master/images/php/8.1&#34;&gt;&lt;code&gt;8.1-fpm&lt;/code&gt;, &lt;code&gt;8.1-fpm-1&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markshust/docker-magento/tree/master/images/php/7.4&#34;&gt;&lt;code&gt;7.4-fpm&lt;/code&gt;, &lt;code&gt;7.4-fpm-15&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-elasticsearch/&#34;&gt;markoshust/magento-elasticsearch (Docker Hub)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markshust/docker-magento/tree/master/images/elasticsearch/7.16&#34;&gt;&lt;code&gt;7.16&lt;/code&gt;, &lt;code&gt;7.16-0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-rabbitmq/&#34;&gt;markoshust/magento-rabbitmq (Docker Hub)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markshust/docker-magento/tree/master/images/rabbitmq/3.9&#34;&gt;&lt;code&gt;3.9&lt;/code&gt;, &lt;code&gt;3.9-0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/markoshust/magento-ssh/&#34;&gt;markoshust/ssh (Docker Hub)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markshust/docker-magento/tree/master/images/ssh&#34;&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Free Course&lt;/h2&gt; &#xA;&lt;p&gt;This course is sponsored by &lt;a href=&#34;https://m.academy&#34; target=&#34;_blank&#34;&gt;M.academy&lt;/a&gt;, the simplest way to learn Magento.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://m.academy&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/docs/macademy-logo.png&#34; alt=&#34;M.academy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A free screencast course is available (which was fully refreshed in December 2021), which details the basic usage of this project:&lt;/p&gt; &#xA;&lt;a href=&#34;https://m.academy/courses/set-up-magento-2-development-environment-docker&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/docs/set-up-magento-2-development-environment-docker-og.png&#34; alt=&#34;Set Up a Magento 2 Development Environment with Docker&#34; width=&#34;400&#34;&gt;&lt;br&gt; Set Up a Magento 2 Development Environment with Docker &lt;/a&gt; &#xA;&lt;h3&gt;Course Curriculm&lt;/h3&gt; &#xA;&lt;h4&gt;Intro&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36738848&#34; target=&#34;_blank&#34;&gt;Quick hi &amp;amp; welcome from Mark!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36738860&#34; target=&#34;_blank&#34;&gt;About the course format&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Initial Project Setup&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9205849&#34; target=&#34;_blank&#34;&gt;Install Docker Desktop &amp;amp; configure preferences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/8974570&#34; target=&#34;_blank&#34;&gt;Set up Magento with the automated onelinesetup script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064259&#34; target=&#34;_blank&#34;&gt;Set up Magento manually from a custom Git branch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9283467&#34; target=&#34;_blank&#34;&gt;Set up Docker for an existing Magento project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;The Basics of docker-magento&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064258&#34; target=&#34;_blank&#34;&gt;Execute docker-magento helper scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9331008&#34; target=&#34;_blank&#34;&gt;Start, stop, restart and check container status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064269&#34; target=&#34;_blank&#34;&gt;Execute bin/magento and composer within Docker containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36150902&#34; target=&#34;_blank&#34;&gt;Install Magento sample data&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docker Filesystem &amp;amp; Data Volumes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064334&#34; target=&#34;_blank&#34;&gt;Understand Docker volumes &amp;amp; host bind mounts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064338&#34; target=&#34;_blank&#34;&gt;Manage files &amp;amp; folders within Docker containers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;PhpStorm&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9748834&#34; target=&#34;_blank&#34;&gt;Set up a docker-magento project in PhpStorm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9763893&#34; target=&#34;_blank&#34;&gt;Set up the Magento PhpStorm plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Xdebug&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064478&#34; target=&#34;_blank&#34;&gt;Install the Xdebug helper browser plugin for Chrome &amp;amp; PhpStorm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064482&#34; target=&#34;_blank&#34;&gt;Enable disable check the status of Xdebug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064615&#34; target=&#34;_blank&#34;&gt;Configure PhpStorm for Xdebug connections&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064617&#34; target=&#34;_blank&#34;&gt;Trigger an Xdebug breakpoint in PhpStorm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36677538&#34; target=&#34;_blank&#34;&gt;Trigger an Xdebug breakpoint for CLI commands in PhpStorm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Customize Server Configurations&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36702830&#34; target=&#34;_blank&#34;&gt;Understand the docker-compose application structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36702861&#34; target=&#34;_blank&#34;&gt;Increase the PHP memory limit in php.ini&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064349&#34; target=&#34;_blank&#34;&gt;Increase the Nginx request timeout in nginx.conf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36703258&#34; target=&#34;_blank&#34;&gt;Increase the MySQL buffer pool size with command or in my.cnf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064350&#34; target=&#34;_blank&#34;&gt;Install a new PHP extension by building a custom Docker image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/14780970&#34; target=&#34;_blank&#34;&gt;Configure multi-store instances in Docker with Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This configuration is intended to be used as a Docker-based development environment for Magento 2.&lt;/p&gt; &#xA;&lt;p&gt;Folders:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;images&lt;/code&gt;: Docker images for nginx and php&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;compose&lt;/code&gt;: sample setups with Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Magento 1 version of this development environment has been deprecated and is no longer supported. PHP 5 was used as it&#39;s base, and that version has reached end-of-life. If you still wish to use this setup, please reference &lt;a href=&#34;https://github.com/markshust/docker-magento/tree/20.1.1/compose/magento-1&#34;&gt;compose/magento-1 on tag 20.1.1&lt;/a&gt;, but please be aware these images are no longer maintained.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;This setup assumes you are running Docker on a computer with at least 6GB of RAM allocated to Docker, a dual-core, and an SSD hard drive. &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Download &amp;amp; Install Docker Desktop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This configuration has been tested on Mac &amp;amp; Linux. Windows is supported through the use of Docker on WSL.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Automated Setup (New Project)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create your project directory then go into it:&#xA;mkdir -p ~/Sites/magento&#xA;cd $_&#xA;&#xA;# Run this automated one-liner from the directory you want to install your project.&#xA;curl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/onelinesetup | bash -s -- magento.test 2.4.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;magento.test&lt;/code&gt; above defines the hostname to use, and the &lt;code&gt;2.4.4&lt;/code&gt; defines the Magento version to install. Note that since we need a write to &lt;code&gt;/etc/hosts&lt;/code&gt; for DNS resolution, you will be prompted for your system password during setup.&lt;/p&gt; &#xA;&lt;p&gt;After the one-liner above completes running, you should be able to access your site at &lt;code&gt;https://magento.test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Install sample data&lt;/h4&gt; &#xA;&lt;p&gt;After the above installation is complete, run the following lines to install sample data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/magento sampledata:deploy&#xA;bin/magento setup:upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Setup&lt;/h3&gt; &#xA;&lt;p&gt;Same result as the one-liner above. Just replace &lt;code&gt;magento.test&lt;/code&gt; references with the hostname that you wish to use.&lt;/p&gt; &#xA;&lt;h4&gt;New Projects&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create your project directory then go into it:&#xA;mkdir -p ~/Sites/magento&#xA;cd $_&#xA;&#xA;# Download the Docker Compose template:&#xA;curl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/template | bash&#xA;&#xA;# Download the version of Magento you want to use with:&#xA;bin/download 2.4.4&#xA;&#xA;# or for Magento core development:&#xA;# docker-compose -f docker-compose.yml up -d&#xA;# bin/setup-composer-auth&#xA;# bin/cli git clone git@github.com:magento/magento2.git .&#xA;# bin/cli git checkout 2.4-develop&#xA;# bin/composer install&#xA;&#xA;# Run the setup installer for Magento:&#xA;bin/setup magento.test&#xA;&#xA;open https://magento.test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Existing Projects&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Take a backup of your existing database:&#xA;bin/mysqldump &amp;gt; ~/Sites/existing/magento.sql&#xA;&#xA;# Create your project directory then go into it:&#xA;mkdir -p ~/Sites/magento&#xA;cd $_&#xA;&#xA;# Download the Docker Compose template:&#xA;curl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/template | bash&#xA;&#xA;# Replace with existing source code of your existing Magento instance:&#xA;cp -R ~/Sites/existing src&#xA;# or: git clone git@github.com:myrepo.git src&#xA;&#xA;# Start some containers, copy files to them and then restart the containers:&#xA;docker-compose -f docker-compose.yml up -d&#xA;bin/copytocontainer --all ## Initial copy will take a few minutes...&#xA;&#xA;# Import existing database:&#xA;bin/mysql &amp;lt; ../existing/magento.sql&#xA;&#xA;# Update database connection details to use the above Docker MySQL credentials:&#xA;# Also note: creds for the MySQL server are defined at startup from env/db.env&#xA;# vi src/app/etc/env.php&#xA;&#xA;# Import app-specific environment settings:&#xA;bin/magento app:config:import&#xA;&#xA;# Create a DNS host entry and setup Magento base url&#xA;bin/setup-domain yoursite.test&#xA;&#xA;bin/restart&#xA;&#xA;open https://magento.test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;To update your project to the latest version of &lt;code&gt;docker-magento&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We recommend keeping your docker config files in version control, so you can monitor the changes to files after updates. After reviewing the code updates and ensuring they updated as intended, run &lt;code&gt;bin/restart&lt;/code&gt; to restart your containers to have the new configuration take effect.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to keep your root docker config files in one repository, and your Magento code setup in another. This ensures the Magento base path lives at the top of one specific repository, which makes automated build pipelines and deployments easy to manage, and maintains compatibility with projects such as Magento Cloud.&lt;/p&gt; &#xA;&lt;h2&gt;Custom CLI Commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/analyse&lt;/code&gt;: Run &lt;code&gt;phpstan analyse&lt;/code&gt; within the container to statically analyse code, passing in directory to analyse. Ex. &lt;code&gt;bin/analyse app/code&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/bash&lt;/code&gt;: Drop into the bash prompt of your Docker container. The &lt;code&gt;phpfpm&lt;/code&gt; container should be mainly used to access the filesystem within Docker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/cache-clean&lt;/code&gt;: Access the &lt;a href=&#34;https://github.com/mage2tv/magento-cache-clean&#34;&gt;cache-clean&lt;/a&gt; CLI. Note the watcher is automatically started at startup in &lt;code&gt;bin/start&lt;/code&gt;. Ex. &lt;code&gt;bin/cache-clean config full_page&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/cli&lt;/code&gt;: Run any CLI command without going into the bash prompt. Ex. &lt;code&gt;bin/cli ls&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/clinotty&lt;/code&gt;: Run any CLI command with no TTY. Ex. &lt;code&gt;bin/clinotty chmod u+x bin/magento&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/cliq&lt;/code&gt;: The same as &lt;code&gt;bin/cli&lt;/code&gt;, but pipes all output to &lt;code&gt;/dev/null&lt;/code&gt;. Useful for a quiet CLI, or implementing long-running processes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/composer&lt;/code&gt;: Run the composer binary. Ex. &lt;code&gt;bin/composer install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/copyfromcontainer&lt;/code&gt;: Copy folders or files from container to host. Ex. &lt;code&gt;bin/copyfromcontainer vendor&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/copytocontainer&lt;/code&gt;: Copy folders or files from host to container. Ex. &lt;code&gt;bin/copytocontainer --all&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/cron&lt;/code&gt;: Start or stop the cron service. Ex. &lt;code&gt;bin/cron start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/dev-urn-catalog-generate&lt;/code&gt;: Generate URN&#39;s for PhpStorm and remap paths to local host. Restart PhpStorm after running this command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/devconsole&lt;/code&gt;: Alias for &lt;code&gt;bin/n98-magerun2 dev:console&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/download&lt;/code&gt;: Download specific Magento version from Composer to the container, with an optional type of either &#34;community&#34; (default) or &#34;enterprise&#34;. Ex. &lt;code&gt;bin/download 2.4.4 enterprise&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/fixowns&lt;/code&gt;: This will fix filesystem ownerships within the container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/fixperms&lt;/code&gt;: This will fix filesystem permissions within the container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/grunt&lt;/code&gt;: Run the grunt binary. Ex. &lt;code&gt;bin/grunt exec&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/magento&lt;/code&gt;: Run the Magento CLI. Ex: &lt;code&gt;bin/magento cache:flush&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/mftf&lt;/code&gt;: Run the Magento MFTF. Ex: &lt;code&gt;bin/mftf build:project&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/mysql&lt;/code&gt;: Run the MySQL CLI with database config from &lt;code&gt;env/db.env&lt;/code&gt;. Ex. &lt;code&gt;bin/mysql -e &#34;EXPLAIN core_config_data&#34;&lt;/code&gt; or&lt;code&gt;bin/mysql &amp;lt; magento.sql&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/mysqldump&lt;/code&gt;: Backup the Magento database. Ex. &lt;code&gt;bin/mysqldump &amp;gt; magento.sql&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/n98-magerun2&lt;/code&gt;: Access the &lt;a href=&#34;https://github.com/netz98/n98-magerun2&#34;&gt;n98-magerun2&lt;/a&gt; CLI. Ex: &lt;code&gt;bin/n98-magerun2 dev:console&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/node&lt;/code&gt;: Run the node binary. Ex. &lt;code&gt;bin/node --version&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/npm&lt;/code&gt;: Run the npm binary. Ex. &lt;code&gt;bin/npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/pwa-studio&lt;/code&gt;: (BETA) Start the PWA Studio server. Note that Chrome will throw SSL cert errors and not allow you to view the site, but Firefox will.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/redis&lt;/code&gt;: Run a command from the redis container. Ex. &lt;code&gt;bin/redis redis-cli monitor&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/remove&lt;/code&gt;: Remove all containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/removeall&lt;/code&gt;: Remove all containers, networks, volumes, and images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/removevolumes&lt;/code&gt;: Remove all volumes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/restart&lt;/code&gt;: Stop and then start all containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/root&lt;/code&gt;: Run any CLI command as root without going into the bash prompt. Ex &lt;code&gt;bin/root apt-get install nano&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/rootnotty&lt;/code&gt;: Run any CLI command as root with no TTY. Ex &lt;code&gt;bin/rootnotty chown -R app:app /var/www/html&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup&lt;/code&gt;: Run the Magento setup process to install Magento from the source code, with optional domain name. Defaults to &lt;code&gt;magento.test&lt;/code&gt;. Ex. &lt;code&gt;bin/setup magento.test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup-composer-auth&lt;/code&gt;: Setup authentication credentials for Composer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup-domain&lt;/code&gt;: Setup Magento domain name. Ex: &lt;code&gt;bin/setup-domain magento.test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup-grunt&lt;/code&gt;: Install and configure Grunt JavaScript task runner to compile .less files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup-pwa-studio&lt;/code&gt;: (BETA) Install PWA Studio (requires NodeJS and Yarn to be installed on the host machine). Pass in your base site domain, otherwise the default &lt;code&gt;master-7rqtwti-mfwmkrjfqvbjk.us-4.magentosite.cloud&lt;/code&gt; will be used. Ex: &lt;code&gt;bin/setup-pwa-studio magento.test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup-ssl&lt;/code&gt;: Generate an SSL certificate for one or more domains. Ex. &lt;code&gt;bin/setup-ssl magento.test foo.test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/setup-ssl-ca&lt;/code&gt;: Generate a certificate authority and copy it to the host.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/start&lt;/code&gt;: Start all containers, good practice to use this instead of &lt;code&gt;docker-compose up -d&lt;/code&gt;, as it may contain additional helpers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/status&lt;/code&gt;: Check the container status.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/stop&lt;/code&gt;: Stop all project containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/stopall&lt;/code&gt;: Stop all docker running containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/update&lt;/code&gt;: Update your project to the most recent version of &lt;code&gt;docker-magento&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bin/xdebug&lt;/code&gt;: Disable or enable Xdebug. Accepts params &lt;code&gt;disable&lt;/code&gt; (default) or &lt;code&gt;enable&lt;/code&gt;. Ex. &lt;code&gt;bin/xdebug enable&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Misc Info&lt;/h2&gt; &#xA;&lt;h3&gt;Caching&lt;/h3&gt; &#xA;&lt;p&gt;For an improved developer experience, caches are automatically refreshed when related files are updated, courtesy of &lt;a href=&#34;https://github.com/mage2tv/magento-cache-clean&#34;&gt;cache-clean&lt;/a&gt;. This means you can keep all of the standard Magento caches enabled, and this script will only clear the specific caches needed, and only when necessary.&lt;/p&gt; &#xA;&lt;p&gt;To disable this functionality, uncomment the last line in the &lt;code&gt;bin/start&lt;/code&gt; file to disable the watcher.&lt;/p&gt; &#xA;&lt;h3&gt;Database&lt;/h3&gt; &#xA;&lt;p&gt;The hostname of each service is the name of the service within the &lt;code&gt;docker-compose.yml&lt;/code&gt; file. So for example, MySQL&#39;s hostname is &lt;code&gt;db&lt;/code&gt; (not &lt;code&gt;localhost&lt;/code&gt;) when accessing it from within a Docker container. Elasticsearch&#39;s hostname is &lt;code&gt;elasticsearch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To connect to the MySQL CLI tool of the Docker instance, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;bin/mysql&lt;/code&gt; script to import a database, for example a file stored in your local host directory at &lt;code&gt;magento.sql&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/mysql &amp;lt; magento.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You also can use &lt;code&gt;bin/mysqldump&lt;/code&gt; to export the database. The file will appear in your local host directory at &lt;code&gt;magento.sql&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/mysqldump &amp;gt; magento.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Getting an &#34;Access denied, you need (at least one of) the SUPER privilege(s) for this operation.&#34; message when running one of the above lines? Try running it as root with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bin/clinotty mysql -hdb -uroot -pmagento magento &amp;lt; src/backup.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You can also remove the DEFINER lines from the MySQL backup file with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;sed &#39;s/\sDEFINER=`[^`]*`@`[^`]*`//g&#39; -i src/backup.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Composer Authentication&lt;/h3&gt; &#xA;&lt;p&gt;First setup Magento Marketplace authentication (details in the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/install-gde/prereq/connect-auth.html&#34;&gt;DevDocs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Copy &lt;code&gt;src/auth.json.sample&lt;/code&gt; to &lt;code&gt;src/auth.json&lt;/code&gt;. Then, update the username and password values with your Magento public and private keys, respectively. Finally, copy the file to the container by running &lt;code&gt;bin/copytocontainer auth.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Email / Mailcatcher&lt;/h3&gt; &#xA;&lt;p&gt;View emails sent locally through Mailcatcher by visiting &lt;a href=&#34;http://%7Byourdomain%7D:1080&#34;&gt;http://{yourdomain}:1080&lt;/a&gt;. During development, it&#39;s easiest to test emails using a third-party module such as [https://github.com/mageplaza/magento-2-smtp](Mageplaza&#39;s SMTP module). Set the mailserver host to &lt;code&gt;mailcatcher&lt;/code&gt; and port to &lt;code&gt;1080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Redis&lt;/h3&gt; &#xA;&lt;p&gt;Redis is now the default cache and session storage engine, and is automatically configured &amp;amp; enabled when running &lt;code&gt;bin/setup&lt;/code&gt; on new installs.&lt;/p&gt; &#xA;&lt;p&gt;Use the following lines to enable Redis on existing installs:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enable for Cache:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bin/magento setup:config:set --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enable for Full Page Cache:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bin/magento setup:config:set --page-cache=redis --page-cache-redis-server=redis --page-cache-redis-db=1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enable for Session:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bin/magento setup:config:set --session-save=redis --session-save-redis-host=redis --session-save-redis-log-level=4 --session-save-redis-db=2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may also monitor Redis by running: &lt;code&gt;bin/redis redis-cli monitor&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information about Redis usage with Magento, &lt;a href=&#34;https://devdocs.magento.com/guides/v2.4/config-guide/redis/redis-session.html&#34; target=&#34;_blank&#34;&gt;see the DevDocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Xdebug &amp;amp; VS Code&lt;/h3&gt; &#xA;&lt;p&gt;Install and enable the PHP Debug extension from the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug&#34;&gt;Visual Studio Marketplace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, this project now automatically sets up Xdebug support with VS Code. If you wish to set this up manually, please see the &lt;a href=&#34;https://github.com/markshust/docker-magento/blame/master/compose/.vscode/launch.json&#34;&gt;&lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Xdebug &amp;amp; PhpStorm&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;First, install the &lt;a href=&#34;https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc&#34;&gt;Chrome Xdebug helper&lt;/a&gt;. After installed, right click on the Chrome icon for it and go to Options. Under IDE Key, select PhpStorm from the list to set the IDE Key to &#34;PHPSTORM&#34;, then click Save.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Next, enable Xdebug debugging in the PHP container by running: &lt;code&gt;bin/xdebug enable&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then, open &lt;code&gt;PhpStorm &amp;gt; Preferences &amp;gt; PHP&lt;/code&gt; and configure:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;CLI Interpreter&lt;/code&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Create a new interpreter from the &lt;code&gt;From Docker, Vagrant, VM...&lt;/code&gt; list.&lt;/li&gt; &#xA;     &lt;li&gt;Select the Docker Compose option.&lt;/li&gt; &#xA;     &lt;li&gt;For Server, select &lt;code&gt;Docker&lt;/code&gt;. If you don&#39;t have Docker set up as a server, create one and name it &lt;code&gt;Docker&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;For Configuration files, add both the &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; files from your project directory.&lt;/li&gt; &#xA;     &lt;li&gt;For Service, select &lt;code&gt;phpfpm&lt;/code&gt;, then click OK.&lt;/li&gt; &#xA;     &lt;li&gt;Name this CLI Interpreter &lt;code&gt;phpfpm&lt;/code&gt;, then click OK again.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;Path mappings&lt;/code&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;There is no need to define a path mapping in this area.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;PhpStorm &amp;gt; Preferences &amp;gt; PHP &amp;gt; Debug&lt;/code&gt; and ensure Debug Port is set to &lt;code&gt;9000,9003&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;PhpStorm &amp;gt; Preferences &amp;gt; PHP &amp;gt; Servers&lt;/code&gt; and create a new server:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the Name, set this to the value of your domain name (ex. &lt;code&gt;magento.test&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;For the Host, set this to the value of your domain name (ex. &lt;code&gt;magento.test&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Keep port set to &lt;code&gt;80&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Check the &#34;Use path mappings&#34; box and map &lt;code&gt;src&lt;/code&gt; to the absolute path of &lt;code&gt;/var/www/html&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;Run &amp;gt; Edit Configurations&lt;/code&gt; and create a new &lt;code&gt;PHP Remote Debug&lt;/code&gt; configuration.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set the Name to the name of your domain (ex. &lt;code&gt;magento.test&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Check the &lt;code&gt;Filter debug connection by IDE key&lt;/code&gt; checkbox, select the Server you just setup.&lt;/li&gt; &#xA;   &lt;li&gt;For IDE key, enter &lt;code&gt;PHPSTORM&lt;/code&gt;. This value should match the IDE Key value set by the Chrome Xdebug Helper.&lt;/li&gt; &#xA;   &lt;li&gt;Click OK to finish setting up the remote debugger in PHPStorm.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open up &lt;code&gt;pub/index.php&lt;/code&gt; and set a breakpoint near the end of the file.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Start the debugger with &lt;code&gt;Run &amp;gt; Debug &#39;magento.test&#39;&lt;/code&gt;, then open up a web browser.&lt;/li&gt; &#xA;   &lt;li&gt;Ensure the Chrome Xdebug helper is enabled by clicking on it and selecting Debug. The icon should turn bright green.&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to your Magento store URL, and Xdebug should now trigger the debugger within PhpStorm at the toggled breakpoint.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;SSH&lt;/h3&gt; &#xA;&lt;p&gt;Since version &lt;code&gt;40.0.0&lt;/code&gt;, this project supports connecting to Docker with SSH/SFTP. This means that if you solely use either PhpStorm or VSCode, you no longer need to selectively mount host volumes in order to gain bi-directional sync capabilities from host to container. This will enable full speed in the native filesystem, as all files will be stored directly in the &lt;code&gt;appdata&lt;/code&gt; container volume, rather than being synced from the host. This is especially useful if you&#39;d like to sync larger directories such as &lt;code&gt;generated&lt;/code&gt;, &lt;code&gt;pub&lt;/code&gt; &amp;amp; &lt;code&gt;vendor&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Copy &lt;code&gt;docker-compose.dev-ssh.yml&lt;/code&gt; to &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; before installing Magento to take advantage of this setup. Then, create an SFTP connection at Preferences -&amp;gt; Build, Execution, Deployment -&amp;gt; Deployment. Connect to &lt;code&gt;localhost&lt;/code&gt; and use &lt;code&gt;app&lt;/code&gt; for the username &amp;amp; password. You can set additional options for working with Magento in PhpStorm at Preferences -&amp;gt; Build, Execution, Deployment -&amp;gt; Deployment -&amp;gt; Options.&lt;/p&gt; &#xA;&lt;p&gt;Note that you must use your IDE&#39;s SSH/SFTP functionality, otherwise changes will not be synced. To re-sync your host environment at any time, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/copyfromcontainer --all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Running Docker on Linux should be pretty straight-forward. Note that you need to run some &lt;a href=&#34;https://docs.docker.com/install/linux/linux-postinstall/&#34;&gt;post install commands&lt;/a&gt; as well as &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;installing Docker Compose&lt;/a&gt; before continuing. These steps are taken care of automatically with Docker Desktop, but not on Linux.&lt;/p&gt; &#xA;&lt;p&gt;Copy &lt;code&gt;docker-compose.dev-linux.yml&lt;/code&gt; to &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; before installing Magento to take advantage of this setup.&lt;/p&gt; &#xA;&lt;h4&gt;The host.docker.internal hostname&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;host.docker.internal&lt;/code&gt; hostname is used on Docker for Mac/Windows to reference the Docker daemon. On Linux, this hostname does not exist.&lt;/p&gt; &#xA;&lt;p&gt;This hostname is &lt;a href=&#34;https://github.com/markshust/docker-magento/raw/master/images/php/7.4/conf/php.ini#L8&#34;&gt;hard-coded in the php.ini file&lt;/a&gt;. To make this hostname resolve, add &lt;code&gt;&#34;host.docker.internal:172.17.0.1&#34;&lt;/code&gt; to the &lt;code&gt;app.extra_hosts&lt;/code&gt; parameter of &lt;code&gt;docker-compose.yml&lt;/code&gt;, replacing &lt;code&gt;172.17.0.1&lt;/code&gt; with the result of:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm alpine ip route | awk &#39;NR==1 {print $3}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You must also create a new entry in your &lt;code&gt;/etc/hosts&lt;/code&gt; file using the same IP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;172.17.0.1 host.docker.internal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Extra settings&lt;/h4&gt; &#xA;&lt;p&gt;To enable Xdebug on Linux, you may also need to open port 9003 on the firewall by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 9003 -j ACCEPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also have to increase a virtual memory map count on the host system which is required by &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html&#34;&gt;Elasticsearch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add the following line to the &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; file on your host:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Blackfire.io&lt;/h3&gt; &#xA;&lt;p&gt;These docker images have built-in support for Blackfire.io. To use it, first register your server ID and token with the Blackfire agent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/root blackfire-agent --register --server-id={YOUR_SERVER_ID} --server-token={YOUR_SERVER_TOKEN}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, open up the &lt;code&gt;bin/start&lt;/code&gt; helper script and uncomment the line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#bin/root /etc/init.d/blackfire-agent start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, restart the containers with &lt;code&gt;bin/restart&lt;/code&gt;. After doing so, everything is now configured and you can use a browser extension to profile your Magento store with Blackfire.&lt;/p&gt; &#xA;&lt;h3&gt;MFTF&lt;/h3&gt; &#xA;&lt;p&gt;To work with MFTF you will need to first enable the &lt;code&gt;selenium&lt;/code&gt; image in the &lt;code&gt;docker-compose.dev.yml&lt;/code&gt; file. Then, you will need to run the following.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run mftf build process &lt;code&gt;bin/mftf build:project&lt;/code&gt;. This should build the basic setup for mftf in your project.&lt;/li&gt; &#xA; &lt;li&gt;Update the &lt;code&gt;extra_host&lt;/code&gt; values to match your Magento URL and IP in &lt;code&gt;docker-compose.dev.yml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Update the values in &lt;code&gt;src/dev/tests/acceptance/.env&lt;/code&gt;, including adding the new line &lt;code&gt;SELENIUM_HOST=selenium&lt;/code&gt; to define the host Codeception should connect to.&lt;/li&gt; &#xA; &lt;li&gt;Run a sample test &lt;code&gt;bin/mftf run:test AdminLoginSuccessfulTest&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Update your &lt;code&gt;nginx.conf&lt;/code&gt; file to allow access to the dev section with the following, before the final &lt;code&gt;deny all&lt;/code&gt; section:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;location ~* ^/dev/tests/acceptance/utils($|/) {&#xA;    root $MAGE_ROOT;&#xA;    location ~ ^/dev/tests/acceptance/utils/command.php {&#xA;        fastcgi_pass   fastcgi_backend;&#xA;        fastcgi_index  index.php;&#xA;        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;&#xA;        include        fastcgi_params;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For debugging, you can connect to the selenium image using a VCN client.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect with the VCN option and &lt;code&gt;127.0.0.1:5900&lt;/code&gt;, (default password: &lt;code&gt;secret&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bin/mftf doctor&lt;/code&gt; to validate all sections are setup correctly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find more info &lt;a href=&#34;https://devdocs.magento.com/mftf/docs/getting-started.html&#34;&gt;here&lt;/a&gt; about mftf configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;M.academy&lt;/h3&gt; &#xA;&lt;p&gt;This course is sponsored by &lt;a href=&#34;https://m.academy&#34; target=&#34;_blank&#34;&gt;M.academy&lt;/a&gt;, the simplest way to learn Magento.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://m.academy&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/markshust/docker-magento/master/docs/macademy-logo.png&#34; alt=&#34;M.academy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mark Shust&lt;/h3&gt; &#xA;&lt;p&gt;My name is Mark Shust and I&#39;m the creator of this repo. I&#39;m a &lt;a href=&#34;http://www.zend.com/en/yellow-pages/ZEND014633&#34; target=&#34;_blank&#34;&gt;Zend Certified Engineer&lt;/a&gt; and &lt;a href=&#34;https://www.youracclaim.com/users/mark-shust&#34; target=&#34;_blank&#34;&gt;Adobe Certified Magento Developer&lt;/a&gt;, and have been involved since the early days of Magento (0.8!). I&#39;m no longer available for consulting, but am creating course content full-time at &lt;a href=&#34;https://m.academy&#34; target=&#34;_blank&#34;&gt;M.academy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can follow me on Twitter &lt;a href=&#34;https://twitter.com/MarkShust&#34; target=&#34;_blank&#34;&gt;@MarkShust&lt;/a&gt;, connect with me on LinkedIn &lt;a href=&#34;https://www.linkedin.com/in/MarkShust/&#34; target=&#34;_blank&#34;&gt;@MarkShust&lt;/a&gt;, read my blog at &lt;a href=&#34;https://markshust.com&#34; target=&#34;_blank&#34;&gt;markshust.com&lt;/a&gt;, or contact me directly at &lt;a href=&#34;mailto:mark@shust.com&#34;&gt;&lt;/a&gt;&lt;a href=&#34;mailto:mark@shust.com&#34;&gt;mark@shust.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tfutils/tfenv</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/tfutils/tfenv</id>
    <link href="https://github.com/tfutils/tfenv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terraform version manager&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/tfutils/tfenv/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;tfenv&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/&#34;&gt;Terraform&lt;/a&gt; version manager inspired by &lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Currently tfenv supports the following OSes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac OS X (64bit)&lt;/li&gt; &#xA; &lt;li&gt;Linux &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;64bit&lt;/li&gt; &#xA;   &lt;li&gt;Arm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows (64bit) - only tested in git-bash - currently presumed failing due to symlink issues in git-bash&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Automatic&lt;/h3&gt; &#xA;&lt;p&gt;Install via Homebrew&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ brew install tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install via Arch User Repository (AUR)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ yay --sync tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install via puppet&lt;/p&gt; &#xA;&lt;p&gt;Using puppet module &lt;a href=&#34;https://github.com/SergK/puppet-tfenv&#34;&gt;sergk-tfenv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-puppet&#34;&gt;include ::tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check out tfenv into any path (here is &lt;code&gt;${HOME}/.tfenv&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/tfutils/tfenv.git ~/.tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add &lt;code&gt;~/.tfenv/bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt; any way you like&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo &#39;export PATH=&#34;$HOME/.tfenv/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bash_profile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR you can make symlinks for &lt;code&gt;tfenv/bin/*&lt;/code&gt; scripts into a path that is already added to your &lt;code&gt;$PATH&lt;/code&gt; (e.g. &lt;code&gt;/usr/local/bin&lt;/code&gt;) &lt;code&gt;OSX/Linux Only!&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ln -s ~/.tfenv/bin/* /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu/Debian touching &lt;code&gt;/usr/local/bin&lt;/code&gt; might require sudo access, but you can create &lt;code&gt;${HOME}/bin&lt;/code&gt; or &lt;code&gt;${HOME}/.local/bin&lt;/code&gt; and on next login it will get added to the session &lt;code&gt;$PATH&lt;/code&gt; or by running &lt;code&gt;. ${HOME}/.profile&lt;/code&gt; it will get added to the current shell session&#39;s &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ mkdir -p ~/.local/bin/&#xA;$ . ~/.profile&#xA;$ ln -s ~/.tfenv/bin/* ~/.local/bin&#xA;$ which tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;tfenv install [version]&lt;/h3&gt; &#xA;&lt;p&gt;Install a specific version of Terraform.&lt;/p&gt; &#xA;&lt;p&gt;If no parameter is passed, the version to use is resolved automatically via &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version files&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv_terraform_version&#34;&gt;TFENV_TERRAFORM_VERSION environment variable&lt;/a&gt; (TFENV_TERRAFORM_VERSION takes precedence), defaulting to &#39;latest&#39; if none are found.&lt;/p&gt; &#xA;&lt;p&gt;If a parameter is passed, available options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;x.y.z&lt;/code&gt; &lt;a href=&#34;https://semver.org/&#34;&gt;Semver 2.0.0&lt;/a&gt; string specifying the exact version to install&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; is a syntax to install latest version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; is a syntax to install latest version matching regex (used by grep -e)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;min-required&lt;/code&gt; is a syntax to recursively scan your Terraform files to detect which version is minimally required. See &lt;a href=&#34;https://www.terraform.io/docs/configuration/terraform.html&#34;&gt;required_version&lt;/a&gt; docs. Also &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#min-required&#34;&gt;see min-required&lt;/a&gt; section below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv install&#xA;$ tfenv install 0.7.0&#xA;$ tfenv install latest&#xA;$ tfenv install latest:^0.8&#xA;$ tfenv install min-required&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;shasum&lt;/code&gt; is present in the path, tfenv will verify the download against Hashicorp&#39;s published sha256 hash. If &lt;a href=&#34;https://keybase.io/&#34;&gt;keybase&lt;/a&gt; is available in the path it will also verify the signature for those published hashes using Hashicorp&#39;s published public key.&lt;/p&gt; &#xA;&lt;p&gt;You can opt-in to using GnuPG tools for PGP signature verification if keybase is not available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo &#39;trust-tfenv: yes&#39; &amp;gt; ~/.tfenv/use-gpgv&#xA;$ tfenv install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;trust-tfenv&lt;/code&gt; directive means that verification uses a copy of the Hashicorp OpenPGP key found in the tfenv repository. Skipping that directive means that the Hashicorp key must be in the existing default trusted keys. Use the file &lt;code&gt;~/.tfenv/use-gnupg&lt;/code&gt; to instead invoke the full &lt;code&gt;gpg&lt;/code&gt; tool and see web-of-trust status; beware that a lack of trust path will not cause a validation failure.&lt;/p&gt; &#xA;&lt;h4&gt;.terraform-version&lt;/h4&gt; &#xA;&lt;p&gt;If you use a &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version&lt;/a&gt; file, &lt;code&gt;tfenv install&lt;/code&gt; (no argument) will install the version written in it.&lt;/p&gt; &#xA;&lt;h4&gt;min-required&lt;/h4&gt; &#xA;&lt;p&gt;Please note that we don&#39;t do semantic version range parsing but use first ever found version as the candidate for minimally required one. It is up to the user to keep the definition reasonable. I.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terraform&#34;&gt;// this will detect 0.12.3&#xA;terraform {&#xA;  required_version  = &#34;&amp;lt;0.12.3, &amp;gt;= 0.10.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terraform&#34;&gt;// this will detect 0.10.0&#xA;terraform {&#xA;  required_version  = &#34;&amp;gt;= 0.10.0, &amp;lt;0.12.3&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;h4&gt;TFENV&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_ARCH&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: amd64)&lt;/p&gt; &#xA;&lt;p&gt;Specify architecture. Architecture other than the default amd64 can be specified with the &lt;code&gt;TFENV_ARCH&lt;/code&gt; environment variable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_ARCH=arm tfenv install 0.7.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_AUTO_INSTALL&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: true)&lt;/p&gt; &#xA;&lt;p&gt;Should tfenv automatically install terraform if the version specified by defaults or a .terraform-version file is not currently installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_AUTO_INSTALL=false terraform plan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_CURL_OUTPUT&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 2)&lt;/p&gt; &#xA;&lt;p&gt;Set the mechanism used for displaying download progress when downloading terraform versions from the remote server.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2: v1 Behaviour: Pass &lt;code&gt;-#&lt;/code&gt; to curl&lt;/li&gt; &#xA; &lt;li&gt;1: Use curl default&lt;/li&gt; &#xA; &lt;li&gt;0: Pass &lt;code&gt;-s&lt;/code&gt; to curl&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_DEBUG&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;Set the debug level for TFENV.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0: No debug output&lt;/li&gt; &#xA; &lt;li&gt;1: Simple debug output&lt;/li&gt; &#xA; &lt;li&gt;2: Extended debug output, with source file names and interactive debug shells on error&lt;/li&gt; &#xA; &lt;li&gt;3: Debug level 2 + Bash execution tracing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_REMOTE&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: &lt;a href=&#34;https://releases.hashicorp.com&#34;&gt;https://releases.hashicorp.com&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;To install from a remote other than the default&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_REMOTE=https://example.jfrog.io/artifactory/hashicorp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_CONFIG_DIR&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Path (Default: &lt;code&gt;$TFENV_ROOT&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;The path to a directory where the local terraform versions and configuration files exist.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;TFENV_CONFIG_DIR=&#34;$XDG_CONFIG_HOME/tfenv&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_TERRAFORM_VERSION&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: &#34;&#34;)&lt;/p&gt; &#xA;&lt;p&gt;If not empty string, this variable overrides Terraform version, specified in &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version files&lt;/a&gt;. &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; syntax are also supported. &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv-install-version&#34;&gt;&lt;code&gt;tfenv install&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv-use-version&#34;&gt;&lt;code&gt;tfenv use&lt;/code&gt;&lt;/a&gt; command also respects this variable.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_TERRAFORM_VERSION=latest:^0.11. terraform --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Bashlog Logging Library&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_COLOURS&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 1)&lt;/p&gt; &#xA;&lt;p&gt;To disable colouring of console output, set to 0.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_DATE_FORMAT&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: +%F %T)&lt;/p&gt; &#xA;&lt;p&gt;The display format for the date as passed to the &lt;code&gt;date&lt;/code&gt; binary to generate a datestamp used as a prefix to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FILE&lt;/code&gt; type log file lines.&lt;/li&gt; &#xA; &lt;li&gt;Each console output line when &lt;code&gt;BASHLOG_EXTRA=1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_EXTRA&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;By default, console output from tfenv does not print a date stamp or log severity.&lt;/p&gt; &#xA;&lt;p&gt;To enable this functionality, making normal output equivalent to FILE log output, set to 1.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_FILE&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;Set to 1 to enable plain text logging to file (FILE type logging).&lt;/p&gt; &#xA;&lt;p&gt;The default path for log files is defined by /tmp/$(basename $0).log Each executable logs to its own file.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ BASHLOG_FILE=1 tfenv use latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will log to &lt;code&gt;/tmp/tfenv-use.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_FILE_PATH&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: /tmp/$(basename ${0}).log)&lt;/p&gt; &#xA;&lt;p&gt;To specify a single file as the target for all FILE type logging regardless of the executing script.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_I_PROMISE_TO_BE_CAREFUL_CUSTOM_EVAL_PREFIX&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: &#34;&#34;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;BE CAREFUL - MISUSE WILL DESTROY EVERYTHING YOU EVER LOVED&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This variable allows you to pass a string containing a command that will be executed using &lt;code&gt;eval&lt;/code&gt; in order to produce a prefix to each console output line, and each FILE type log entry.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ BASHLOG_I_PROMISE_TO_BE_CAREFUL_CUSTOM_EVAL_PREFIX=&#39;echo &#34;${$$} &#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will prefix every log line with the calling process&#39; PID.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_JSON&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;Set to 1 to enable JSON logging to file (JSON type logging).&lt;/p&gt; &#xA;&lt;p&gt;The default path for log files is defined by /tmp/$(basename $0).log.json Each executable logs to its own file.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ BASHLOG_JSON=1 tfenv use latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will log in JSON format to &lt;code&gt;/tmp/tfenv-use.log.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;JSON log content:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{&#34;timestamp&#34;:&#34;&amp;lt;date +%s&amp;gt;&#34;,&#34;level&#34;:&#34;&amp;lt;log-level&amp;gt;&#34;,&#34;message&#34;:&#34;&amp;lt;log-content&amp;gt;&#34;}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_JSON_PATH&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: /tmp/$(basename ${0}).log.json)&lt;/p&gt; &#xA;&lt;p&gt;To specify a single file as the target for all JSON type logging regardless of the executing script.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_SYSLOG&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;To log to syslog using the &lt;code&gt;logger&lt;/code&gt; binary, set this to 1.&lt;/p&gt; &#xA;&lt;p&gt;The basic functionality is thus:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ local tag=&#34;${BASHLOG_SYSLOG_TAG:-$(basename &#34;${0}&#34;)}&#34;;&#xA;$ local facility=&#34;${BASHLOG_SYSLOG_FACILITY:-local0}&#34;;&#xA;$ local pid=&#34;${$}&#34;;&#xA;$ logger --id=&#34;${pid}&#34; -t &#34;${tag}&#34; -p &#34;${facility}.${severity}&#34; &#34;${syslog_line}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_SYSLOG_FACILITY&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: local0)&lt;/p&gt; &#xA;&lt;p&gt;The syslog facility to specify when using SYSLOG type logging.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_SYSLOG_TAG&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: $(basename $0))&lt;/p&gt; &#xA;&lt;p&gt;The syslog tag to specify when using SYSLOG type logging.&lt;/p&gt; &#xA;&lt;p&gt;Defaults to the PID of the calling process.&lt;/p&gt; &#xA;&lt;h3&gt;tfenv use [version]&lt;/h3&gt; &#xA;&lt;p&gt;Switch a version to use&lt;/p&gt; &#xA;&lt;p&gt;If no parameter is passed, the version to use is resolved automatically via &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version files&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv_terraform_version&#34;&gt;TFENV_TERRAFORM_VERSION environment variable&lt;/a&gt; (TFENV_TERRAFORM_VERSION takes precedence), defaulting to &#39;latest&#39; if none are found.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;latest&lt;/code&gt; is a syntax to use the latest installed version&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; is a syntax to use latest installed version matching regex (used by grep -e)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;min-required&lt;/code&gt; will switch to the version minimally required by your terraform sources (see above &lt;code&gt;tfenv install&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv use&#xA;$ tfenv use min-required&#xA;$ tfenv use 0.7.0&#xA;$ tfenv use latest&#xA;$ tfenv use latest:^0.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tfenv uninstall &amp;lt;version&amp;gt;&lt;/h3&gt; &#xA;&lt;p&gt;Uninstall a specific version of Terraform &lt;code&gt;latest&lt;/code&gt; is a syntax to uninstall latest version &lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; is a syntax to uninstall latest version matching regex (used by grep -e)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv uninstall 0.7.0&#xA;$ tfenv uninstall latest&#xA;$ tfenv uninstall latest:^0.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tfenv list&lt;/h3&gt; &#xA;&lt;p&gt;List installed versions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv list&#xA;* 0.10.7 (set by /opt/tfenv/version)&#xA;  0.9.0-beta2&#xA;  0.8.8&#xA;  0.8.4&#xA;  0.7.0&#xA;  0.7.0-rc4&#xA;  0.6.16&#xA;  0.6.2&#xA;  0.6.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tfenv list-remote&lt;/h3&gt; &#xA;&lt;p&gt;List installable versions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv list-remote&#xA;0.9.0-beta2&#xA;0.9.0-beta1&#xA;0.8.8&#xA;0.8.7&#xA;0.8.6&#xA;0.8.5&#xA;0.8.4&#xA;0.8.3&#xA;0.8.2&#xA;0.8.1&#xA;0.8.0&#xA;0.8.0-rc3&#xA;0.8.0-rc2&#xA;0.8.0-rc1&#xA;0.8.0-beta2&#xA;0.8.0-beta1&#xA;0.7.13&#xA;0.7.12&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;.terraform-version file&lt;/h2&gt; &#xA;&lt;p&gt;If you put a &lt;code&gt;.terraform-version&lt;/code&gt; file on your project root, or in your home directory, tfenv detects it and uses the version written in it. If the version is &lt;code&gt;latest&lt;/code&gt; or &lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt;, the latest matching version currently installed will be selected.&lt;/p&gt; &#xA;&lt;p&gt;Note, that &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv_terraform_version&#34;&gt;TFENV_TERRAFORM_VERSION environment variable&lt;/a&gt; can be used to override version, specified by &lt;code&gt;.terraform-version&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cat .terraform-version&#xA;0.6.16&#xA;&#xA;$ terraform version&#xA;Terraform v0.6.16&#xA;&#xA;Your version of Terraform is out of date! The latest version&#xA;is 0.7.3. You can update by downloading from www.terraform.io&#xA;&#xA;$ echo 0.7.3 &amp;gt; .terraform-version&#xA;&#xA;$ terraform version&#xA;Terraform v0.7.3&#xA;&#xA;$ echo latest:^0.8 &amp;gt; .terraform-version&#xA;&#xA;$ terraform version&#xA;Terraform v0.8.8&#xA;&#xA;$ TFENV_TERRAFORM_VERSION=0.7.3 terraform --version&#xA;Terraform v0.7.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git --git-dir=~/.tfenv/.git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uninstalling&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rm -rf /some/path/to/tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tfutils/tfenv/raw/master/LICENSE&#34;&gt;tfenv itself&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rbenv/rbenv/raw/master/LICENSE&#34;&gt;rbenv&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;tfenv partially uses rbenv&#39;s source code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nginxinc/docker-nginx</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/nginxinc/docker-nginx</id>
    <link href="https://github.com/nginxinc/docker-nginx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official NGINX Dockerfiles&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About this Repo&lt;/h1&gt; &#xA;&lt;p&gt;This is the Git repo of the official Docker image for &lt;a href=&#34;https://registry.hub.docker.com/_/nginx/&#34;&gt;nginx&lt;/a&gt;. See the Hub page for the full readme on how to use the Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The full readme is generated over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;docker-library/docs&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/nginx&#34;&gt;docker-library/docs/nginx&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The changelog for NGINX releases is available at &lt;a href=&#34;https://nginx.org/en/CHANGES&#34;&gt;nginx.org changes page&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hwdsl2/setup-ipsec-vpn</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/hwdsl2/setup-ipsec-vpn</id>
    <link href="https://github.com/hwdsl2/setup-ipsec-vpn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scripts to build your own IPsec VPN server, with IPsec/L2TP, Cisco IPsec and IKEv2&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/README-zh.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;IPsec VPN Server Auto Setup Scripts&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/stargazers&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/badges/github-stars.svg?sanitize=true&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hwdsl2/docker-ipsec-vpn-server&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/badges/docker-stars.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hwdsl2/docker-ipsec-vpn-server&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/badges/docker-pulls.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set up your own IPsec VPN server in just a few minutes, with IPsec/L2TP, Cisco IPsec and IKEv2.&lt;/p&gt; &#xA;&lt;p&gt;An IPsec VPN encrypts your network traffic, so that nobody between you and the VPN server can eavesdrop on your data as it travels via the Internet. This is especially useful when using unsecured networks, e.g. at coffee shops, airports or hotel rooms.&lt;/p&gt; &#xA;&lt;p&gt;We will use &lt;a href=&#34;https://libreswan.org/&#34;&gt;Libreswan&lt;/a&gt; as the IPsec server, and &lt;a href=&#34;https://github.com/xelerance/xl2tpd&#34;&gt;xl2tpd&lt;/a&gt; as the L2TP provider.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;» See also: &lt;a href=&#34;https://github.com/hwdsl2/openvpn-install&#34;&gt;OpenVPN&lt;/a&gt; and &lt;a href=&#34;https://github.com/hwdsl2/wireguard-install&#34;&gt;WireGuard&lt;/a&gt; Auto Setup Scripts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;First, prepare your Linux server* with a fresh install of Ubuntu, Debian or CentOS.&lt;/p&gt; &#xA;&lt;p&gt;Use this one-liner to set up an IPsec VPN server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://get.vpnsetup.net -O vpn.sh &amp;amp;&amp;amp; sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your VPN login details will be randomly generated, and displayed when finished.&lt;/p&gt; &#xA;&lt;p&gt;After setup, you may optionally install &lt;a href=&#34;https://github.com/hwdsl2/openvpn-install&#34;&gt;OpenVPN&lt;/a&gt; and/or &lt;a href=&#34;https://github.com/hwdsl2/wireguard-install&#34;&gt;WireGuard&lt;/a&gt; on the same server.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Alternative one-liners. &lt;/summary&gt; &#xA; &lt;p&gt;You may also use &lt;code&gt;curl&lt;/code&gt; to download:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://get.vpnsetup.net -o vpn.sh &amp;amp;&amp;amp; sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Alternative setup URL:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://gitlab.com/hwdsl2/setup-ipsec-vpn/-/raw/master/vpnsetup.sh -o vpn.sh &amp;amp;&amp;amp; sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you are unable to download, open &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/vpnsetup.sh&#34;&gt;vpnsetup.sh&lt;/a&gt;, then click the &lt;code&gt;Raw&lt;/code&gt; button on the right. Press &lt;code&gt;Ctrl/Cmd+A&lt;/code&gt; to select all, &lt;code&gt;Ctrl/Cmd+C&lt;/code&gt; to copy, then paste into your favorite editor.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; See the VPN script in action (terminal recording). &lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This recording is for demo purposes only. VPN credentials in this recording are &lt;strong&gt;NOT&lt;/strong&gt; valid.&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/script-demo.svg?sanitize=true&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;A pre-built &lt;a href=&#34;https://github.com/hwdsl2/docker-ipsec-vpn-server&#34;&gt;Docker image&lt;/a&gt; is also available. For other options and client setup, read the sections below.&lt;/p&gt; &#xA;&lt;p&gt;* A cloud server, virtual private server (VPS) or dedicated server.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully automated IPsec VPN server setup, no user input needed&lt;/li&gt; &#xA; &lt;li&gt;Supports IKEv2 with strong and fast ciphers (e.g. AES-GCM)&lt;/li&gt; &#xA; &lt;li&gt;Generates VPN profiles to auto-configure iOS, macOS and Android devices&lt;/li&gt; &#xA; &lt;li&gt;Supports Windows, macOS, iOS, Android and Linux as VPN clients&lt;/li&gt; &#xA; &lt;li&gt;Includes helper scripts to manage VPN users and certificates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;A cloud server, virtual private server (VPS) or dedicated server, freshly installed with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 22.04, 20.04 or 18.04&lt;/li&gt; &#xA; &lt;li&gt;Debian 11&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/#debian-10-note&#34;&gt;*&lt;/a&gt;, 10&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/#debian-10-note&#34;&gt;*&lt;/a&gt; or 9&lt;/li&gt; &#xA; &lt;li&gt;CentOS 7 or CentOS Stream 8&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/#centos-8-note&#34;&gt;**&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rocky Linux or AlmaLinux 8&lt;/li&gt; &#xA; &lt;li&gt;Oracle Linux 8 or 7&lt;/li&gt; &#xA; &lt;li&gt;Red Hat Enterprise Linux (RHEL) 8 or 7&lt;/li&gt; &#xA; &lt;li&gt;Amazon Linux 2&lt;/li&gt; &#xA; &lt;li&gt;Alpine Linux 3.15 or 3.14&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This also includes Linux VMs in public clouds, such as &lt;a href=&#34;https://blog.ls20.com/digitalocean&#34;&gt;DigitalOcean&lt;/a&gt;, &lt;a href=&#34;https://blog.ls20.com/vultr&#34;&gt;Vultr&lt;/a&gt;, &lt;a href=&#34;https://blog.ls20.com/linode&#34;&gt;Linode&lt;/a&gt;, &lt;a href=&#34;https://www.ovhcloud.com/en/vps/&#34;&gt;OVH&lt;/a&gt; and &lt;a href=&#34;https://azure.microsoft.com&#34;&gt;Microsoft Azure&lt;/a&gt;. Public cloud users can also deploy using &lt;a href=&#34;https://blog.ls20.com/ipsec-l2tp-vpn-auto-setup-for-ubuntu-12-04-on-amazon-ec2/#vpnsetup&#34;&gt;user data&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://dovpn.carlfriess.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/do-install-button.png&#34; alt=&#34;Deploy to DigitalOcean&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;a href=&#34;https://cloud.linode.com/stackscripts/37239&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/linode-deploy-button.png&#34; alt=&#34;Deploy to Linode&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/azure/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/images/azure-deploy-button.png&#34; alt=&#34;Deploy to Azure&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.ls20.com/ipsec-l2tp-vpn-auto-setup-for-ubuntu-12-04-on-amazon-ec2/#gettingavps&#34;&gt;&lt;strong&gt;» I want to run my own VPN but don&#39;t have a server for that&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A pre-built &lt;a href=&#34;https://github.com/hwdsl2/docker-ipsec-vpn-server&#34;&gt;Docker image&lt;/a&gt; is also available. Advanced users can install on a &lt;a href=&#34;https://www.raspberrypi.org&#34;&gt;Raspberry Pi&lt;/a&gt;. &lt;a href=&#34;https://elasticbyte.net/posts/setting-up-a-native-cisco-ipsec-vpn-server-using-a-raspberry-pi/&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;https://www.stewright.me/2018/07/create-a-raspberry-pi-vpn-server-using-l2tpipsec/&#34;&gt;[2]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;debian-10-note&#34;&gt;&lt;/a&gt; * Debian 11/10 users should &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/clients.md#debian-10-kernel&#34;&gt;use the standard Linux kernel&lt;/a&gt;.&lt;br&gt; &lt;a name=&#34;centos-8-note&#34;&gt;&lt;/a&gt; ** CentOS Linux 8 &lt;a href=&#34;https://www.centos.org/centos-linux-eol/&#34;&gt;is no longer supported&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;DO NOT&lt;/strong&gt; run these scripts on your PC or Mac! They should only be used on a server!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First, update your server with &lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get dist-upgrade&lt;/code&gt; (Ubuntu/Debian) or &lt;code&gt;sudo yum update&lt;/code&gt; and reboot. This is optional, but recommended.&lt;/p&gt; &#xA;&lt;p&gt;To install the VPN, please choose one of the following options:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt; Have the script generate random VPN credentials for you (will be displayed when finished).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://get.vpnsetup.net -O vpn.sh &amp;amp;&amp;amp; sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt; Edit the script and provide your own VPN credentials.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://get.vpnsetup.net -O vpn.sh&#xA;nano -w vpn.sh&#xA;[Replace with your own values: YOUR_IPSEC_PSK, YOUR_USERNAME and YOUR_PASSWORD]&#xA;sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A secure IPsec PSK should consist of at least 20 random characters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 3:&lt;/strong&gt; Define your VPN credentials as environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# All values MUST be placed inside &#39;single quotes&#39;&#xA;# DO NOT use these special characters within values: \ &#34; &#39;&#xA;wget https://get.vpnsetup.net -O vpn.sh&#xA;sudo VPN_IPSEC_PSK=&#39;your_ipsec_pre_shared_key&#39; \&#xA;VPN_USER=&#39;your_vpn_username&#39; \&#xA;VPN_PASSWORD=&#39;your_vpn_password&#39; \&#xA;sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After setup, you may optionally install &lt;a href=&#34;https://github.com/hwdsl2/openvpn-install&#34;&gt;OpenVPN&lt;/a&gt; and/or &lt;a href=&#34;https://github.com/hwdsl2/wireguard-install&#34;&gt;WireGuard&lt;/a&gt; on the same server.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Advanced users can optionally customize IKEv2 options. &lt;/summary&gt; &#xA; &lt;p&gt;Advanced users can optionally specify a DNS name for the IKEv2 server address. The DNS name must be a fully qualified domain name (FQDN). Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo VPN_DNS_NAME=&#39;vpn.example.com&#39; sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Similarly, you may specify a name for the first IKEv2 client. The default is &lt;code&gt;vpnclient&lt;/code&gt; if not specified.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo VPN_CLIENT_NAME=&#39;your_client_name&#39; sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;By default, clients are set to use &lt;a href=&#34;https://developers.google.com/speed/public-dns/&#34;&gt;Google Public DNS&lt;/a&gt; when the VPN is active. You may specify custom DNS server(s) for all VPN modes. Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo VPN_DNS_SRV1=1.1.1.1 VPN_DNS_SRV2=1.0.0.1 sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;By default, no password is required when importing IKEv2 client configuration. You can choose to protect client config files using a random password.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo VPN_PROTECT_CONFIG=yes sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Click here if you are unable to download. &lt;/summary&gt; &#xA; &lt;p&gt;You may also use &lt;code&gt;curl&lt;/code&gt; to download. For example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fL https://get.vpnsetup.net -o vpn.sh&#xA;sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Alternative setup URL:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fL https://gitlab.com/hwdsl2/setup-ipsec-vpn/-/raw/master/vpnsetup.sh -o vpn.sh&#xA;sudo sh vpn.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you are unable to download, open &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/vpnsetup.sh&#34;&gt;vpnsetup.sh&lt;/a&gt;, then click the &lt;code&gt;Raw&lt;/code&gt; button on the right. Press &lt;code&gt;Ctrl/Cmd+A&lt;/code&gt; to select all, &lt;code&gt;Ctrl/Cmd+C&lt;/code&gt; to copy, then paste into your favorite editor.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Next steps&lt;/h2&gt; &#xA;&lt;p&gt;Get your computer or device to use the VPN. Please refer to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/ikev2-howto.md&#34;&gt;&lt;strong&gt;Guide: How to Set Up and Use IKEv2 VPN&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/clients.md&#34;&gt;&lt;strong&gt;Configure IPsec/L2TP VPN Clients&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/clients-xauth.md&#34;&gt;&lt;strong&gt;Configure IPsec/XAuth (&#34;Cisco IPsec&#34;) VPN Clients&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you get an error when trying to connect, see &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/clients.md#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Enjoy your very own VPN! &lt;span&gt;✨&lt;/span&gt;&lt;span&gt;🎉&lt;/span&gt;&lt;span&gt;🚀&lt;/span&gt;&lt;span&gt;✨&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Important notes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Read this in other languages: &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/README.md#important-notes&#34;&gt;English&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/README-zh.md#%E9%87%8D%E8%A6%81%E6%8F%90%E7%A4%BA&#34;&gt;中文&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: For IPsec/L2TP mode, a &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/clients.md#windows-error-809&#34;&gt;one-time registry change&lt;/a&gt; is required if the VPN server or client is behind NAT (e.g. home router).&lt;/p&gt; &#xA;&lt;p&gt;The same VPN account can be used by your multiple devices. However, due to an IPsec/L2TP limitation, if you wish to connect multiple devices from behind the same NAT (e.g. home router), you must use &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/ikev2-howto.md&#34;&gt;IKEv2&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/clients-xauth.md&#34;&gt;IPsec/XAuth&lt;/a&gt; mode. To view or update VPN user accounts, see &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/manage-users.md&#34;&gt;Manage VPN users&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For servers with an external firewall (e.g. &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html&#34;&gt;EC2&lt;/a&gt;/&lt;a href=&#34;https://cloud.google.com/vpc/docs/firewalls&#34;&gt;GCE&lt;/a&gt;), open UDP ports 500 and 4500 for the VPN. Aliyun users, see &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/issues/433&#34;&gt;#433&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Clients are set to use &lt;a href=&#34;https://developers.google.com/speed/public-dns/&#34;&gt;Google Public DNS&lt;/a&gt; when the VPN is active. If another DNS provider is preferred, see &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/advanced-usage.md&#34;&gt;Advanced usage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Using kernel support could improve IPsec/L2TP performance. It is available on &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/#requirements&#34;&gt;all supported OS&lt;/a&gt;. Ubuntu users should install the &lt;code&gt;linux-modules-extra-$(uname -r)&lt;/code&gt; package and run &lt;code&gt;service xl2tpd restart&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The scripts will backup existing config files before making changes, with &lt;code&gt;.old-date-time&lt;/code&gt; suffix.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrade Libreswan&lt;/h2&gt; &#xA;&lt;p&gt;Use this one-liner to update &lt;a href=&#34;https://libreswan.org&#34;&gt;Libreswan&lt;/a&gt; (&lt;a href=&#34;https://github.com/libreswan/libreswan/raw/main/CHANGES&#34;&gt;changelog&lt;/a&gt; | &lt;a href=&#34;https://lists.libreswan.org/mailman/listinfo/swan-announce&#34;&gt;announce&lt;/a&gt;) on your VPN server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://get.vpnsetup.net/upg -O vpnup.sh &amp;amp;&amp;amp; sudo sh vpnup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Alternative one-liners. &lt;/summary&gt; &#xA; &lt;p&gt;You may also use &lt;code&gt;curl&lt;/code&gt; to download:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://get.vpnsetup.net/upg -o vpnup.sh &amp;amp;&amp;amp; sudo sh vpnup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Alternative update URL:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://gitlab.com/hwdsl2/setup-ipsec-vpn/-/raw/master/extras/vpnupgrade.sh -o vpnup.sh &amp;amp;&amp;amp; sudo sh vpnup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you are unable to download, open &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/extras/vpnupgrade.sh&#34;&gt;vpnupgrade.sh&lt;/a&gt;, then click the &lt;code&gt;Raw&lt;/code&gt; button on the right. Press &lt;code&gt;Ctrl/Cmd+A&lt;/code&gt; to select all, &lt;code&gt;Ctrl/Cmd+C&lt;/code&gt; to copy, then paste into your favorite editor.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;The latest supported Libreswan version is &lt;code&gt;4.7&lt;/code&gt;. Check installed version: &lt;code&gt;ipsec --version&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;xl2tpd&lt;/code&gt; can be updated using your system&#39;s package manager, such as &lt;code&gt;apt-get&lt;/code&gt; on Ubuntu/Debian.&lt;/p&gt; &#xA;&lt;h2&gt;Manage VPN users&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/manage-users.md&#34;&gt;Manage VPN users&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced usage&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/advanced-usage.md&#34;&gt;Advanced usage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstall the VPN&lt;/h2&gt; &#xA;&lt;p&gt;To uninstall IPsec VPN, run the &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/extras/vpnuninstall.sh&#34;&gt;helper script&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; This helper script will remove IPsec VPN from your server. All VPN configuration will be &lt;strong&gt;permanently deleted&lt;/strong&gt;, and Libreswan and xl2tpd will be removed. This &lt;strong&gt;cannot be undone&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://get.vpnsetup.net/unst -O vpnunst.sh &amp;amp;&amp;amp; sudo bash vpnunst.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/docs/uninstall.md&#34;&gt;Uninstall the VPN&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback &amp;amp; Questions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Have a suggestion for this project? Open an &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/issues/new/choose&#34;&gt;Enhancement request&lt;/a&gt;. &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/pulls&#34;&gt;Pull requests&lt;/a&gt; are also welcome.&lt;/li&gt; &#xA; &lt;li&gt;If you found a reproducible bug, open a bug report for the &lt;a href=&#34;https://github.com/libreswan/libreswan/issues?q=is%3Aissue&#34;&gt;IPsec VPN&lt;/a&gt; or for the &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/issues/new/choose&#34;&gt;VPN scripts&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Got a question? Please first search &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn/issues?q=is%3Aissue&#34;&gt;existing issues&lt;/a&gt; and comments &lt;a href=&#34;https://gist.github.com/hwdsl2/9030462#comments&#34;&gt;in this Gist&lt;/a&gt; and &lt;a href=&#34;https://blog.ls20.com/ipsec-l2tp-vpn-auto-setup-for-ubuntu-12-04-on-amazon-ec2/#disqus_thread&#34;&gt;on my blog&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ask VPN related questions on the &lt;a href=&#34;https://lists.libreswan.org/mailman/listinfo/swan&#34;&gt;Libreswan&lt;/a&gt; or &lt;a href=&#34;https://lists.strongswan.org/mailman/listinfo/users&#34;&gt;strongSwan&lt;/a&gt; mailing list, or read these wikis: &lt;a href=&#34;https://libreswan.org/wiki/Main_Page&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-securing_virtual_private_networks&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;https://wiki.strongswan.org/projects/strongswan/wiki/UserDocumentation&#34;&gt;[3]&lt;/a&gt; &lt;a href=&#34;https://wiki.gentoo.org/wiki/IPsec_L2TP_VPN_server&#34;&gt;[4]&lt;/a&gt; &lt;a href=&#34;https://wiki.archlinux.org/index.php/Openswan_L2TP/IPsec_VPN_client_setup&#34;&gt;[5]&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2014-2022 &lt;a href=&#34;https://github.com/hwdsl2&#34;&gt;Lin Song&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/in/linsongui&#34;&gt;&lt;img src=&#34;https://static.licdn.com/scds/common/u/img/webpromo/btn_viewmy_160x25.png&#34; alt=&#34;View my profile on LinkedIn&#34;&gt;&lt;/a&gt;&lt;br&gt; Based on &lt;a href=&#34;https://github.com/sarfata/voodooprivacy&#34;&gt;the work of Thomas Sarlandie&lt;/a&gt; (Copyright 2012)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;&lt;img src=&#34;https://i.creativecommons.org/l/by-sa/3.0/88x31.png&#34; alt=&#34;Creative Commons License&#34;&gt;&lt;/a&gt;&lt;br&gt; This work is licensed under the &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;Creative Commons Attribution-ShareAlike 3.0 Unported License&lt;/a&gt;&lt;br&gt; Attribution required: please include my name in any derivative and let me know how you have improved it!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>codeedu/wsl2-docker-quickstart</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/codeedu/wsl2-docker-quickstart</id>
    <link href="https://github.com/codeedu/wsl2-docker-quickstart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Guia rápido do WSL2 + Docker&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fullcycle.com.br/&#34; target=&#34;blank&#34;&gt;&lt;img src=&#34;https://fullcycle.com.br/wp-content/themes/fullcycle/assets/images/fullcycle-logo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Guia rápido do WSL2 + Docker&lt;/h1&gt; &#xA;&lt;h2&gt;O que é o WSL2&lt;/h2&gt; &#xA;&lt;p&gt;Em 2016, a Microsoft anunciou a possibilidade de rodar o Linux dentro do Windows 10 como um subsistema e o nome a isto foi dado de &lt;strong&gt;WSL&lt;/strong&gt; ou &lt;strong&gt;Windows Subsystem for Linux&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;O acesso ao sistema de arquivos no Windows 10 pelo Linux era simples e rápido, porém não tínhamos uma execução completa do kernel do Linux, além de outros artefatos nativos e isto impossibilitava a execução de várias tarefas no Linux, uma delas é o Docker.&lt;/p&gt; &#xA;&lt;p&gt;Em 2019, a Microsoft anunciou o &lt;strong&gt;WSL 2&lt;/strong&gt;, com uma dinâmica aprimorada em relação a 1ª versão:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execução do kernel completo do Linux.&lt;/li&gt; &#xA; &lt;li&gt;Melhor desempenho para acesso aos arquivos dentro do Linux.&lt;/li&gt; &#xA; &lt;li&gt;Compatibilidade completa de chamada do sistema.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;O WSL 2 foi lançado oficialmente no dia 28 de maio de 2020.&lt;/p&gt; &#xA;&lt;p&gt;Com WSL 2 é possível executar Docker no Linux usando o Windows 10/11.&lt;/p&gt; &#xA;&lt;p&gt;Compare as versões: &lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/wsl/compare-versions&#34;&gt;https://docs.microsoft.com/pt-br/windows/wsl/compare-versions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;O que é Docker&lt;/h2&gt; &#xA;&lt;p&gt;Docker é uma plataforma open source que possibilita o empacotamento de uma aplicação dentro de um container. Uma aplicação consegue se adequar e rodar em qualquer máquina que tenha essa tecnologia instalada.&lt;/p&gt; &#xA;&lt;h2&gt;Porque usar WSL 2 + Docker para desenvolvimento&lt;/h2&gt; &#xA;&lt;p&gt;Configurar ambientes de desenvolvimento no Windows sempre foi burocrático e complexo, além do desempenho de algumas ferramentas não serem totalmente satisfatórias.&lt;/p&gt; &#xA;&lt;p&gt;Com o nascimento do Docker este cenário melhorou bastante, pois podemos montar nosso ambiente de desenvolvimento baseado em Unix, de forma independente e rápida, e ainda unificada com outros sistemas operacionais.&lt;/p&gt; &#xA;&lt;p&gt;Veja nossa &lt;strong&gt;live sobre WSL 2 + Docker no canal Full Cycle&lt;/strong&gt;: &lt;a href=&#34;https://www.youtube.com/watch?v=usF0rYCcj-E&#34;&gt;https://www.youtube.com/watch?v=usF0rYCcj-E&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Modos de usar Docker no Windows&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-toolbox&#34;&gt;Docker Toolbox&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-desktop-com-hyper-v&#34;&gt;Docker Desktop com Hyper-V&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-desktop-com-wsl2&#34;&gt;Docker Desktop com WSL2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-engine-docker-nativo-diretamente-instalado-no-wsl2&#34;&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Toolbox&lt;/h3&gt; &#xA;&lt;p&gt;Roda em cima do programa de virtualização de sistemas da Oracle, chamado de &lt;strong&gt;VirtualBox&lt;/strong&gt;. O desempenho do Docker Toolbox para muitas aplicações/ferramentas pode ser muito ruim, inviabilizando seu uso.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Desktop com Hyper-V&lt;/h3&gt; &#xA;&lt;p&gt;Roda em cima do &lt;strong&gt;Hyper-V&lt;/strong&gt; da Microsoft em vez de usar o VirtualBox usando pelo Docker Toolbox. O Docker Desktop com Hyper-V necessita da versão &lt;strong&gt;PRO&lt;/strong&gt; do Windows 10/11, portanto é necessário compra-la se você não a tem.&lt;/p&gt; &#xA;&lt;p&gt;O Hyper-V costuma requerer muitos recursos da máquina e apesar do desempenho ser melhor que o Docker Toolbox, a máquina pode ficar lenta para se utilizar outras coisas no Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A Docker já anunciou que vai remover o suporte ao Hyper-V futuramente.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker Desktop com WSL2&lt;/h3&gt; &#xA;&lt;p&gt;Roda em cima do &lt;strong&gt;Virtual Machine Platform&lt;/strong&gt; em vez de usar o VirtualBox ou Hyper-V. Se integra com o WSL2 permitindo rodar o Docker dentro do ambiente do Linux. Não é necessário adquirir licença PRO do Windows 10/11, tem um grande desempenho e consome menos recursos quando comparado ao Docker Toolbox ou Docker Desktop com Hyper-V.&lt;/p&gt; &#xA;&lt;p&gt;Temos a grande vantagem de se trabalhar totalmente dentro do Linux para desenvolvimento, portanto, usar WSL2 + Docker é a melhor maneira de se desenvolver aplicações no Windows.&lt;/p&gt; &#xA;&lt;h4&gt;Vantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simplifica a configuração do Docker tanto no Windows quanto no WSL 2.&lt;/li&gt; &#xA; &lt;li&gt;Permite rodar o Docker fora do WSL 2. É possível usar qualquer shell como PowerShell ou DOS.&lt;/li&gt; &#xA; &lt;li&gt;Suporta containers em modo Windows (Imagens que contém Windows por debaixo dos panos ao invés de Linux).&lt;/li&gt; &#xA; &lt;li&gt;Cria um ambiente centralizado para armazenamento de imagens, volumes e outros configurações Docker. Pode-se ter várias distribuições do WSL 2 rodando o mesmo Docker.&lt;/li&gt; &#xA; &lt;li&gt;Interface visual para administrar o Docker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Desvantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uso de memória inicial sem rodar nenhum container Docker pode chegar a 3GB.&lt;/li&gt; &#xA; &lt;li&gt;Adiciona infraestrutura complexa para executar Docker, quando se necessita apenas de rodar os containers Docker dentro de um WSL 2 apenas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;docker-engine-docker-nativo-diretamente-instalado-no-wsl2&#34;&gt;&lt;/a&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2.&lt;/h3&gt; &#xA;&lt;p&gt;O Docker Engine é o Docker nativo que roda no ambiente Linux e completamente suportado para WSL 2. Sua instalação é idêntica a descrita para as próprias distribuições Linux disponibilizadas no site do &lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Vantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consume o mínimo de memória necessário para rodar o Docker Daemon (servidor do Docker).&lt;/li&gt; &#xA; &lt;li&gt;É mais rápido ainda que com Docker Desktop, porque rodar diretamente dentro da própria instância do WSL2 e não em uma instância separada de Linux.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Desvantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Necessário executar o comando &lt;code&gt;sudo service docker start&lt;/code&gt; sempre que o WSL 2 foi reiniciado. Isto não é necessariamente uma desvantagem, mas é bom pontuar, mas isto é um pequeno detalhe e será resolvido futuramente com a inclusão do arquivo /etc/wsl.conf que permitirá incluir comandos para serem executados toda vez que o WSL for reiniciado.&lt;/li&gt; &#xA; &lt;li&gt;Se necessitar executar Docker em outra instância do WSL 2, é necessário instalar novamente o Docker nesta instância ou configurar o acesso ao socket do Docker desejado para compartilhar o Docker entre as instâncias.&lt;/li&gt; &#xA; &lt;li&gt;Não suporta containers no modo Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requisitos mínimos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows 10 Home ou Professional&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Versão 1903 ou superior para sistemas x64, com Build 18362 ou superior.&lt;/li&gt; &#xA;   &lt;li&gt;Versão 2004 ou superior para sistemas ARM64, com Build 19041 ou superior.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows 11 Home ou Professional&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Versão 22000 ou superior.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Provavelmente seu Windows já está na versão suportada, mas verifique isto acessando o &lt;code&gt;menu de notificações perto do relógio &amp;gt; Todas as configurações &amp;gt; Sistema &amp;gt; Sobre&lt;/code&gt;. Caso não esteja, use o Assistente do Windows Update para atualizar a sua versão do Windows.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uma máquina compatível com virtualização (verifique a disponibilidade de acordo com a marca do seu processador. Se sua máquina for mais antiga pode ser necessária habilita-la na BIOS).&lt;/li&gt; &#xA; &lt;li&gt;Pelo menos 4GB de memória RAM.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Instalação do WSL 2&lt;/h2&gt; &#xA;&lt;h3&gt;Habilite o WSL no Windows 10/11&lt;/h3&gt; &#xA;&lt;p&gt;Execute os seguintes comandos no PowerShell em modo administrador:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart&#xA;dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Abra o PowerShell e digite o comando &lt;code&gt;wsl&lt;/code&gt;, se não funcionar reinicie sua máquina.&lt;/p&gt; &#xA;&lt;h3&gt;Instale o WSL 2 no Windows 10/11&lt;/h3&gt; &#xA;&lt;p&gt;Baixe o Kernel do WSL 2 neste link: &lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/wsl/wsl2-kernel&#34;&gt;https://docs.microsoft.com/pt-br/windows/wsl/wsl2-kernel&lt;/a&gt; e instale o pacote.&lt;/p&gt; &#xA;&lt;h3&gt;Atribua a versão default do WSL para a versão 2&lt;/h3&gt; &#xA;&lt;p&gt;A versão 1 do WSL é a padrão no momento, atribua a versão default para a versão 2, assim todas as distribuições Linux instaladas serão já por default da versão 2. Execute o comando com o PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --set-default-version 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Escolha sua distribuição Linux no Windows Store&lt;/h3&gt; &#xA;&lt;p&gt;Escolha sua distribuição Linux preferida no aplicativo Windows Store, sugerimos o Ubuntu por ser uma distribuição popular e que já vem com várias ferramentas instaladas por padrão.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/distribuicoes_linux.png&#34; alt=&#34;Distribuições Linux no Windows Store&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ao iniciar o Linux instalado, você deverá criar um &lt;strong&gt;nome de usuário&lt;/strong&gt; que poderá ser o mesmo da sua máquina e uma &lt;strong&gt;senha&lt;/strong&gt;, este será o usuário &lt;strong&gt;root da sua instância WSL&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Parabéns, seu WSL2 já está funcionando:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/wsl2_funcionando.png&#34; alt=&#34;Exemplo de WSL2 funcionando&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;(Opcional) Desinstale o Hyper-V&lt;/h3&gt; &#xA;&lt;p&gt;Agora que temos o WSL 2 não precisamos mais do Hyper-V, desabilite-o em Painel de Controle &amp;gt; Programas e Recursos (se você tiver instalado o Hyper-V).&lt;/p&gt; &#xA;&lt;h3&gt;(Opcional) Alterar a versão do WSL 1 de uma distribuição para a versão 2&lt;/h3&gt; &#xA;&lt;p&gt;Se você já tiver o WSL 1 na máquina e acabou de instalar a versão 2, pode-se converter sua distribuição Linux WSL 1 para WSL 2, execute o comando com o PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --set-version &amp;lt;distribution name&amp;gt; 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Isto pode demorar muitos minutos.&lt;/p&gt; &#xA;&lt;h3&gt;(Opcional) Usar Windows Terminal como terminal padrão de desenvolvimento para Windows&lt;/h3&gt; &#xA;&lt;p&gt;Uma deficiência que o Windows sempre teve era prover um terminal adequado para desenvolvimento. Agora temos o &lt;strong&gt;Windows Terminal&lt;/strong&gt; construído pela própria Microsoft que permite rodar terminais em abas, alterar cores e temas, configurar atalhos e muito mais.&lt;/p&gt; &#xA;&lt;p&gt;Instale-o pelo Windows Store e use estas &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/windows-terminal-settings.json&#34;&gt;configurações padrões&lt;/a&gt; para habilitar WSL 2, Git Bash e o tema drácula e alguns atalhos.&lt;/p&gt; &#xA;&lt;p&gt;Para sobrescrever as configurações &lt;strong&gt;clique a seta para baixo do lado das abas e em configurações&lt;/strong&gt;, abrirá as configurações do Windows Terminal, apenas cole o conteúdo do arquivo JSON e salve.&lt;/p&gt; &#xA;&lt;h2&gt;O que o WSL 2 pode usar de recursos da sua máquina&lt;/h2&gt; &#xA;&lt;p&gt;Podemos dizer que o WSL 2 tem acesso quase que total ao recursos de sua máquina. Ele tem acesso por padrão:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A todo disco rígido.&lt;/li&gt; &#xA; &lt;li&gt;A usar completamente os recursos de processamento.&lt;/li&gt; &#xA; &lt;li&gt;A usar 80% da memória RAM disponível.&lt;/li&gt; &#xA; &lt;li&gt;A usar 25% da memória disponível para SWAP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Isto pode não ser interessante, uma vez que o WSL 2 pode usar praticamente todos os recursos de sua máquina, mas podemos configurar limites.&lt;/p&gt; &#xA;&lt;p&gt;Crie um arquivo chamado &lt;code&gt;.wslconfig&lt;/code&gt; na raiz da sua pasta de usuário &lt;code&gt;(C:\Users\&amp;lt;seu_usuario&amp;gt;)&lt;/code&gt; e defina estas configurações:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;[wsl2]&#xA;memory=8GB&#xA;processors=4&#xA;swap=2GB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Estes são limites de exemplo e as configurações mais básicas a serem utilizadas, configure-os às suas disponibilidades. Para mais detalhes veja esta documentação da Microsoft: &lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/wsl/wsl-config#wsl-2-settings&#34;&gt;https://docs.microsoft.com/pt-br/windows/wsl/wsl-config#wsl-2-settings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Para aplicar estas configurações é necessário reiniciar as distribuições Linux, então sugerimos executar no PowerShell o comando: &lt;code&gt;wsl --shutdown&lt;/code&gt; (Este comando vai desligar todas as instâncias WSL 2 ativas e basta abrir o terminal novamente para usa-la já com as novas configurações).&lt;/p&gt; &#xA;&lt;h2&gt;Integrar Docker com WSL 2&lt;/h2&gt; &#xA;&lt;p&gt;No início deste tutorial vimos &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#modos-de-usar-docker-no-windows&#34;&gt;4 modos de usar Docker no Windows&lt;/a&gt;, mas somente 2 são recomendamos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instalar-o-docker-com-docker-engine-docker-nativo&#34;&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instalar-o-docker-com-docker-desktop&#34;&gt;Docker Desktop com WSL2&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recomendamos que escolha a 1ª opção pelos seus benefícios, já que a maioria das pessoas poderão usar o WSL 2 como ferramenta central para desenvolvimento. Mas, neste tutorial vamos mostrar as duas forma de instalação.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;instalar-o-docker-com-docker-engine-docker-nativo&#34;&gt;&lt;/a&gt;1 - Instalar o Docker com Docker Engine (Docker Nativo)&lt;/h3&gt; &#xA;&lt;p&gt;A instalação do Docker no WSL 2 é idêntica a instalação do Docker em sua própria distribuição Linux, portanto se você tem o Ubuntu é igual ao Ubuntu, se é Fedora é igual ao Fedora. A documentação de instalação do Docker no Linux por distribuição está &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;aqui&lt;/a&gt;, mas vamos ver como instalar no Ubuntu.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Quem está migrando de Docker Desktop para Docker Engine, temos duas opções&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Desinstalar o Docker Desktop.&lt;/li&gt; &#xA;  &lt;li&gt;Desativar o Docker Desktop Service nos serviços do Windows. Esta opção permite que você utilize o Docker Desktop, se necessário, para a maioria dos usuários a desinstalação do Docker Desktop é a mais recomendada. Se você escolheu a 2º opção, precisará excluir o arquivo ~/.docker/config.json e realizar a autenticação com Docker novamente através do comando &#34;docker login&#34;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Se necessitar integrar o Docker com outras IDEs que não sejam o VSCode&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;O VSCode já se integra com o Docker no WSL desta forma através da extensão Remote WSL ou Remote Container.&lt;/p&gt; &#xA; &lt;p&gt;É necessário habilitar a conexão ao servidor do Docker via TCP. Vamos aos passos:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Crie o arquivo /etc/docker/daemon.json: &lt;code&gt;sudo echo &#39;{&#34;hosts&#34;: [&#34;tcp://0.0.0.0:2375&#34;, &#34;unix:///var/run/docker.sock&#34;]}&#39; &amp;gt; /etc/docker/daemon.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Reinicie o Docker: &lt;code&gt;sudo service docker restart&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Após este procedimento, vá na sua IDE e para conectar ao Docker escolha a opção TCP Socket e coloque a URL &lt;code&gt;http://IP-DO-WSL:2375&lt;/code&gt;. Seu IP do WSL pode ser encontrado com o comando &lt;code&gt;cat /etc/resolv.conf&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Se caso não funcionar, reinicie o WSL com o comando &lt;code&gt;wsl --shutdown&lt;/code&gt; e inicie o serviço do Docker novamente.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Instale os pré-requisitos:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&#xA;sudo apt remove docker docker-engine docker.io containerd runc&#xA;sudo apt-get install \&#xA;    apt-transport-https \&#xA;    ca-certificates \&#xA;    curl \&#xA;    gnupg \&#xA;    lsb-release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adicione o repositório do Docker na lista de sources do Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg&#xA;echo \&#xA;  &#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \&#xA;  $(lsb_release -cs) stable&#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instale o Docker Engine&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dê permissão para rodar o Docker com seu usuário corrente:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instale o Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo curl -L &#34;https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)&#34; -o /usr/local/bin/docker-compose&#xA;sudo chmod +x /usr/local/bin/docker-compose&#xA;sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inicie o serviço do Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo service docker start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Este comando acima terá que ser executado toda vez que Linux for reiniciado. Se caso o serviço do Docker não estiver executando, mostrará esta mensagem de erro:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Dica para Windows 11&lt;/h4&gt; &#xA;&lt;p&gt;No Windows 11 é possível especificar um comando padrão para ser executados sempre que o WSL for iniciado, isto permite que já coloquemos o serviço do docker para iniciar automaticamente. Edite o arquivo &lt;code&gt;/etc/wsl.conf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Rode o comando para editar:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo vim /etc/wsl.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Aperte a letra &lt;code&gt;i&lt;/code&gt; e cole o conteúdo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[boot]&#xA;command=&#34;service docker start&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Aperte a tecla &lt;code&gt;:&lt;/code&gt;, digite &lt;code&gt;wq&lt;/code&gt; para salvar/sair e pressione enter. Pronto, para reiniciar o WSL com o comando &lt;code&gt;wsl --shutdown&lt;/code&gt; no DOS ou PowerShell para testar. Após abrir o WSL novamente, digite o comando &lt;code&gt;docker ps&lt;/code&gt; para avaliar se o comando não retorna a mensagem acima: &lt;code&gt;Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;instalar-o-docker-com-docker-desktop&#34;&gt;&lt;/a&gt;2 - Instalar o Docker com Docker Desktop&lt;/h3&gt; &#xA;&lt;p&gt;Baixe neste link: &lt;a href=&#34;https://hub.docker.com/editions/community/docker-ce-desktop-windows&#34;&gt;https://hub.docker.com/editions/community/docker-ce-desktop-windows&lt;/a&gt; e instale o Docker Desktop.&lt;/p&gt; &#xA;&lt;p&gt;Clique no &lt;code&gt;ícone do Docker perto do relógio -&amp;gt; Settings -&amp;gt; Settings no topo -&amp;gt; Resources -&amp;gt; WSL Integration&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Habilite &lt;code&gt;Enable integration with my default WSL distro&lt;/code&gt; e habilite sua versão Linux.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/docker_funcionando_dentro_do_wsl2.png&#34; alt=&#34;Docker funcionando dentro do WSL 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dicas e truques básicos com WSL 2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A performance do WSL 2 está em se executar tudo dentro do Linux, por isso evite executar seus projetos com ou sem Docker do caminho &lt;code&gt;/mnt/c&lt;/code&gt;, pois você perderá performance.&lt;/li&gt; &#xA; &lt;li&gt;Para abrir o terminal do WSL basta digitar o nome da distribuição no menu Iniciar ou executar &lt;code&gt;C:\Windows\System32\wsl.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;O sistema de arquivos do Windows 10/11 é acessível em &lt;code&gt;/mnt&lt;/code&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/mount_no_wsl2.png&#34; alt=&#34;Mount no WSL2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;É possível acessar o sistema de arquivos do Linux pela rede do Windows, digite &lt;code&gt;\\wsl$&lt;/code&gt; no Windows Explorer. &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/acessando_wsl2_no_explorer.png&#34; alt=&#34;Acessando WSL2 no Windows Explorer&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;É possível acessar uma pasta no Windows Explorer digitando o comando &lt;code&gt;explorer.exe .&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;É possível abrir uma pasta ou arquivo com o Visual Studio Code digitando o comando &lt;code&gt;code . ou code meu_arquivo.ext&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Incrivelmente é possível acessar executáveis do Windows no terminal do Linux executando-os com .exe no final (não significa que funcionarão corretamente). &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/executaveis_do_windows_no_wsl2.png&#34; alt=&#34;Executando executáveis do Windows no WSL2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;É possível executar algumas aplicações gráficas do Linux com WSL 2. Leia este tutorial: &lt;a href=&#34;https://medium.com/@dianaarnos/aplica%C3%A7%C3%B5es-gr%C3%A1ficas-no-wsl2-e0a481e9768c&#34;&gt;https://medium.com/@dianaarnos/aplica%C3%A7%C3%B5es-gr%C3%A1ficas-no-wsl2-e0a481e9768c&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Execute o comando &lt;code&gt;wsl -l -v&lt;/code&gt; com o PowerShell para ver as versões de Linux instaladas e seu status atual(parado ou rodando). &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/verificando_distribuicoes_instaladas_do_linux_no_wsl2.png&#34; alt=&#34;Verificando distribuições instaladas do Linux no WSL 2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute o comando &lt;code&gt;wsl --shutdown&lt;/code&gt; com o PowerShell para desligar todas as distribuições Linux que estão rodando no momento (ao executar o comando, as distribuições do Docker também serão desligadas e o Docker Desktop mostrará uma notificação ao lado do relógio perguntando se você quer iniciar as distribuições dele novamente, se você não aceitar terá que iniciar o Docker novamente com o ícone perto do relógio do Windows).&lt;/li&gt; &#xA; &lt;li&gt;Execute com o PowerShell o comando &lt;code&gt;wsl --t &amp;lt;distribution name&amp;gt;&lt;/code&gt; para desligar somente uma distribuição Linux específica.&lt;/li&gt; &#xA; &lt;li&gt;Se verificar que o WSL 2 está consumindo muitos recursos da máquina, execute os seguintes comandos dentro do terminal WSL 2 para liberar memória RAM:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo 1 | sudo tee /proc/sys/vm/drop_caches&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Acrescente &lt;code&gt;export DOCKER_BUILDKIT=1&lt;/code&gt; no final do arquivo .profile do seu usuário do Linux para ganhar mais performance ao realizar builds com Docker. Execute o comando &lt;code&gt;source ~/.profile&lt;/code&gt; para carregar esta variável de ambiente no ambiente do seu WSL 2.&lt;/li&gt; &#xA; &lt;li&gt;Caso queira automatizar a inicialização do docker(pode-se iniciar outros serviços também), descrito na seção de desvantagens da utilização do docker nativo, enquanto não é inculído o wsl.conf, você pode configurar uma tarefa no windows para executar comandos no wsl, veja o tutorial a seguir, &lt;a href=&#34;https://techbrij.com/wsl-2-ubuntu-services-windows-10-startup&#34;&gt;WSL 2: Run Ubuntu Services on Windows 10 Startup&lt;/a&gt;, substituindo o conteúdo do arquivo /etc/init-wsl, por um dos exemplos abaixo:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Exemplo de inicialização do serviço do docker&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  #!/bin/sh&#xA;  #Mensagem de Inicialização dos seviços&#xA;  echo initializing services&#xA;  #Inicializa o serviço do docker&#xA;  service docker start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exemplo gerando um log na Área de trabalho&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  #!/bin/sh&#xA;  #Grava a data/hora de início da execução no log&#xA;  date +%d/%m/%Y%t%H:%M:%S &amp;gt;&amp;gt; /mnt/c/Users/seu-usuario-do-windows/Desktop/wsl_start.log&#xA;  #Grava mensagem de Inicialização dos seviços no log&#xA;  echo initializing services &amp;gt;&amp;gt; /mnt/c/Users/seu-usuario-do-windows/Desktop/wsl_start.log&#xA;  #Inicializa o serviço do docker e grava o resultado do comando no log&#xA;  service docker start &amp;gt;&amp;gt; /mnt/c/Users/seu-usuario-do-windows/Desktop/wsl_start.log&#xA;  #Verifica o status do serviço do docker e grava o resultado do comando no log&#xA;  service docker status &amp;gt;&amp;gt; /mnt/c/Users/seu-usuario-do-windows/Desktop/wsl_start.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Infelizmente, caso reinicie o WSL manualmente, será necessário reiniciar os serviços manualmente, ou executar o init-wsl manualmente.&lt;/li&gt; &#xA; &lt;li&gt;No Windows 11 é possível iniciar o Docker automaticamente, veja a seção: &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#dica-para-windows-11&#34;&gt;Dica para Windows 11&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dúvidas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;O WSL 2 funciona junto com outras máquinas virtuais como &lt;strong&gt;VirtualBox&lt;/strong&gt; ou &lt;strong&gt;VMWare&lt;/strong&gt;? Siga a &lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/wsl/wsl2-faq#will-i-be-able-to-run-wsl-2-and-other-3rd-party-virtualization-tools-such-as-vmware-or-virtualbox&#34;&gt;referência&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>prowler-cloud/prowler</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/prowler-cloud/prowler</id>
    <link href="https://github.com/prowler-cloud/prowler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prowler is an Open Source security tool to perform AWS security best practices assessments, audits, incident response, continuous monitoring, hardening and forensics readiness. It contains more than 240 controls covering CIS, PCI-DSS, ISO27001, GDPR, HIPAA, FFIEC, SOC2, AWS FTR, ENS and custom security frameworks.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/docs/images/prowler-pro-dark.png#gh-dark-mode-only&#34; width=&#34;150&#34; height=&#34;36&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/docs/images/prowler-pro-light.png#gh-light-mode-only&#34; width=&#34;15%&#34; height=&#34;15%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;&lt;i&gt;&amp;nbsp;&amp;nbsp;&amp;amp;nbspExplore the Pro version of Prowler at &lt;a href=&#34;https://prowler.pro&#34;&gt;prowler.pro&lt;/a&gt;&lt;/i&gt;&lt;/b&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3985464/113734260-7ba06900-96fb-11eb-82bc-d4f68a1e2710.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/UjSMCVnxSB&#34;&gt;&lt;img alt=&#34;Discord Shield&#34; src=&#34;https://img.shields.io/discord/807208614288818196&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/toniblyx/prowler&#34;&gt;&lt;img alt=&#34;Docker Pulls&#34; src=&#34;https://img.shields.io/docker/pulls/toniblyx/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/toniblyx/prowler&#34;&gt;&lt;img alt=&#34;Docker&#34; src=&#34;https://img.shields.io/docker/cloud/build/toniblyx/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/toniblyx/prowler&#34;&gt;&lt;img alt=&#34;Docker&#34; src=&#34;https://img.shields.io/docker/image-size/toniblyx/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gallery.ecr.aws/o4g1s5r6/prowler&#34;&gt;&lt;img width=&#34;120&#34; height=&#34;19&amp;quot;&#34; alt=&#34;AWS ECR Gallery&#34; src=&#34;https://user-images.githubusercontent.com/3985464/151531396-b6535a68-c907-44eb-95a1-a09508178616.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler&#34;&gt;&lt;img alt=&#34;Repo size&#34; src=&#34;https://img.shields.io/github/repo-size/prowler-cloud/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler&#34;&gt;&lt;img alt=&#34;Lines&#34; src=&#34;https://img.shields.io/tokei/lines/github/prowler-cloud/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler/issues&#34;&gt;&lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/prowler-cloud/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler/releases&#34;&gt;&lt;img alt=&#34;Version&#34; src=&#34;https://img.shields.io/github/v/release/prowler-cloud/prowler?include_prereleases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler/releases&#34;&gt;&lt;img alt=&#34;Version&#34; src=&#34;https://img.shields.io/github/release-date/prowler-cloud/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler&#34;&gt;&lt;img alt=&#34;Contributors&#34; src=&#34;https://img.shields.io/github/contributors-anon/prowler-cloud/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prowler-cloud/prowler&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/prowler-cloud/prowler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ToniBlyx&#34;&gt;&lt;img alt=&#34;Twitter&#34; src=&#34;https://img.shields.io/twitter/follow/toniblyx?style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;Prowler&lt;/i&gt; is an Open Source security tool to perform AWS security best practices assessments, audits, incident response, continuous monitoring, hardening and forensics readiness. It contains more than 200 controls covering CIS, PCI-DSS, ISO27001, GDPR, HIPAA, FFIEC, SOC2, AWS FTR, ENS and custome security frameworks. &lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#high-level-architecture&#34;&gt;High level architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#requirements-and-installation&#34;&gt;Requirements and Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#advanced-usage&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#security-hub-integration&#34;&gt;Security Hub integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#codebuild-deployment&#34;&gt;CodeBuild deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#allowlist-or-remove-a-fail-from-resources&#34;&gt;Allowlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#how-to-fix-every-fail&#34;&gt;Fix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#extras&#34;&gt;Extras&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#forensics-ready-checks&#34;&gt;Forensics Ready Checks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#gdpr-checks&#34;&gt;GDPR Checks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#hipaa-checks&#34;&gt;HIPAA Checks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#trust-boundaries-checks&#34;&gt;Trust Boundaries Checks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/util/org-multi-account/README.md&#34;&gt;Multi Account and Continuous Monitoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#custom-checks&#34;&gt;Custom Checks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#third-party-integrations&#34;&gt;Third Party Integrations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/LIST_OF_CHECKS_AND_GROUPS.md&#34;&gt;Full list of checks and groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Prowler is a command line tool that helps you with AWS security assessment, auditing, hardening and incident response.&lt;/p&gt; &#xA;&lt;p&gt;It follows guidelines of the CIS Amazon Web Services Foundations Benchmark (49 checks) and has more than 100 additional checks including related to GDPR, HIPAA, PCI-DSS, ISO-27001, FFIEC, SOC2 and others.&lt;/p&gt; &#xA;&lt;p&gt;Read more about &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34;&gt;CIS Amazon Web Services Foundations Benchmark v1.2.0 - 05-23-2018&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;+200 checks covering security best practices across all AWS regions and most of AWS services and related to the next groups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Identity and Access Management [group1]&lt;/li&gt; &#xA; &lt;li&gt;Logging [group2]&lt;/li&gt; &#xA; &lt;li&gt;Monitoring [group3]&lt;/li&gt; &#xA; &lt;li&gt;Networking [group4]&lt;/li&gt; &#xA; &lt;li&gt;CIS Level 1 [cislevel1]&lt;/li&gt; &#xA; &lt;li&gt;CIS Level 2 [cislevel2]&lt;/li&gt; &#xA; &lt;li&gt;Extras &lt;em&gt;see Extras section&lt;/em&gt; [extras]&lt;/li&gt; &#xA; &lt;li&gt;Forensics related group of checks [forensics-ready]&lt;/li&gt; &#xA; &lt;li&gt;GDPR [gdpr] Read more &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#gdpr-checks&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HIPAA [hipaa] Read more &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#hipaa-checks&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Trust Boundaries [trustboundaries] Read more &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#trust-boundaries-checks&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Secrets&lt;/li&gt; &#xA; &lt;li&gt;Internet exposed resources&lt;/li&gt; &#xA; &lt;li&gt;EKS-CIS&lt;/li&gt; &#xA; &lt;li&gt;Also includes PCI-DSS, ISO-27001, FFIEC, SOC2, ENS (Esquema Nacional de Seguridad of Spain).&lt;/li&gt; &#xA; &lt;li&gt;AWS FTR [FTR] Read more &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#aws-ftr-checks&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With Prowler you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get a direct colorful or monochrome report&lt;/li&gt; &#xA; &lt;li&gt;A HTML, CSV, JUNIT, JSON or JSON ASFF (Security Hub) format report&lt;/li&gt; &#xA; &lt;li&gt;Send findings directly to Security Hub&lt;/li&gt; &#xA; &lt;li&gt;Run specific checks and groups or create your own&lt;/li&gt; &#xA; &lt;li&gt;Check multiple AWS accounts in parallel or sequentially&lt;/li&gt; &#xA; &lt;li&gt;And more! Read examples below&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;High level architecture&lt;/h2&gt; &#xA;&lt;p&gt;You can run Prowler from your workstation, an EC2 instance, Fargate or any other container, Codebuild, CloudShell and Cloud9.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3985464/109143232-1488af80-7760-11eb-8d83-726790fda592.jpg&#34; alt=&#34;Prowler high level architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements and Installation&lt;/h2&gt; &#xA;&lt;p&gt;Prowler has been written in bash using AWS-CLI underneath and it works in Linux, Mac OS or Windows with cygwin or virtualization. Also requires &lt;code&gt;jq&lt;/code&gt; and &lt;code&gt;detect-secrets&lt;/code&gt; to work properly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure the latest version of AWS-CLI is installed. It works with either v1 or v2, however &lt;em&gt;latest v2 is recommended if using new regions since they require STS v2 token&lt;/em&gt;, and other components needed, with Python pip already installed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Amazon Linux (&lt;code&gt;yum&lt;/code&gt; based Linux distributions and AWS CLI v2):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo yum update -y&#xA;sudo yum remove -y awscli&#xA;curl &#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&#34; -o &#34;awscliv2.zip&#34;&#xA;unzip awscliv2.zip&#xA;sudo ./aws/install&#xA;sudo yum install -y python3 jq git&#xA;sudo pip3 install detect-secrets==1.0.3&#xA;git clone https://github.com/prowler-cloud/prowler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Ubuntu Linux (&lt;code&gt;apt&lt;/code&gt; based Linux distributions and AWS CLI v2):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install python3 python3-pip jq git zip&#xA;pip install detect-secrets==1.0.3&#xA;curl &#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&#34; -o &#34;awscliv2.zip&#34;&#xA;unzip awscliv2.zip&#xA;sudo ./aws/install&#xA;git clone https://github.com/prowler-cloud/prowler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;NOTE: detect-secrets Yelp version is no longer supported, the one from IBM is mantained now. Use the one mentioned below or the specific Yelp version 1.0.3 to make sure it works as expected (&lt;code&gt;pip install detect-secrets==1.0.3&lt;/code&gt;):&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install &#34;git+https://github.com/ibm/detect-secrets.git@master#egg=detect-secrets&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;AWS-CLI can be also installed it using other methods, refer to official documentation for more details: &lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;https://aws.amazon.com/cli/&lt;/a&gt;, but &lt;code&gt;detect-secrets&lt;/code&gt; has to be installed using &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;pip3&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once Prowler repository is cloned, get into the folder and you can run it:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd prowler&#xA;./prowler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Since Prowler users AWS CLI under the hood, you can follow any authentication method as described &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html#cli-configure-quickstart-precedence&#34;&gt;here&lt;/a&gt;. Make sure you have properly configured your AWS-CLI with a valid Access Key and Region or declare AWS variables properly (or instance profile/role):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;aws configure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export AWS_ACCESS_KEY_ID=&#34;ASXXXXXXX&#34;&#xA;export AWS_SECRET_ACCESS_KEY=&#34;XXXXXXXXX&#34;&#xA;export AWS_SESSION_TOKEN=&#34;XXXXXXXXX&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Those credentials must be associated to a user or role with proper permissions to do all checks. To make sure, add the AWS managed policies, SecurityAudit and ViewOnlyAccess, to the user or role being used. Policy ARNs are:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;arn:aws:iam::aws:policy/SecurityAudit&#xA;arn:aws:iam::aws:policy/job-function/ViewOnlyAccess&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Additional permissions needed: to make sure Prowler can scan all services included in the group &lt;em&gt;Extras&lt;/em&gt;, make sure you attach also the custom policy &lt;a href=&#34;https://github.com/prowler-cloud/prowler/raw/master/iam/prowler-additions-policy.json&#34;&gt;prowler-additions-policy.json&lt;/a&gt; to the role you are using. If you want Prowler to send findings to &lt;a href=&#34;https://aws.amazon.com/security-hub&#34;&gt;AWS Security Hub&lt;/a&gt;, make sure you also attach the custom policy &lt;a href=&#34;https://github.com/prowler-cloud/prowler/raw/master/iam/prowler-security-hub.json&#34;&gt;prowler-security-hub.json&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;prowler&lt;/code&gt; command without options (it will use your environment variable credentials if they exist or will default to using the &lt;code&gt;~/.aws/credentials&lt;/code&gt; file and run checks over all regions when needed. The default region is us-east-1):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Use &lt;code&gt;-l&lt;/code&gt; to list all available checks and the groups (sections) that reference them. To list all groups use &lt;code&gt;-L&lt;/code&gt; and to list content of a group use &lt;code&gt;-l -g &amp;lt;groupname&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you want to avoid installing dependencies run it using Docker:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -ti --rm --name prowler --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN toniblyx/prowler:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In case you want to get reports created by Prowler use docker volume option like in the example below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -ti --rm -v /your/local/output:/prowler/output --name prowler --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN toniblyx/prowler:latest -g hipaa -M csv,json,html&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For custom AWS-CLI profile and region, use the following: (it will use your custom profile and run checks over all regions when needed):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -p custom-profile -r us-east-1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For a single check use option &lt;code&gt;-c&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -c check310&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With Docker:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -ti --rm --name prowler --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN toniblyx/prowler:latest &#34;-c check310&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or multiple checks separated by comma:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -c check310,check722&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or all checks but some of them:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -E check42,check43&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or for custom profile and region:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -p custom-profile -r us-east-1 -c check11&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or for a group of checks use group name:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g group1 # for iam related checks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or exclude some checks in the group:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g group4 -E check42,check43&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Valid check numbers are based on the AWS CIS Benchmark guide, so 1.1 is check11 and 3.10 is check310&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Regions&lt;/h3&gt; &#xA;&lt;p&gt;By default, Prowler scans all opt-in regions available, that might take a long execution time depending on the number of resources and regions used. Same applies for GovCloud or China regions. See below Advance usage for examples.&lt;/p&gt; &#xA;&lt;p&gt;Prowler has two parameters related to regions: &lt;code&gt;-r&lt;/code&gt; that is used query AWS services API endpoints (it uses &lt;code&gt;us-east-1&lt;/code&gt; by default and required for GovCloud or China) and the option &lt;code&gt;-f&lt;/code&gt; that is to filter those regions you only want to scan. For example if you want to scan Dublin only use &lt;code&gt;-f eu-west-1&lt;/code&gt; and if you want to scan Dublin and Ohio &lt;code&gt;-f eu-west-1,us-east-1&lt;/code&gt;, note the regions are separated by a comma deliminator (it can be used as before with &lt;code&gt;-f &#39;eu-west-1,us-east-1&#39;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Sample screenshot of default console report first lines of command &lt;code&gt;./prowler&lt;/code&gt;:&lt;/p&gt; &lt;img width=&#34;900&#34; src=&#34;https://user-images.githubusercontent.com/3985464/141444529-84640bed-be0b-4112-80a2-2a43e3ebf53f.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sample screenshot of the html output &lt;code&gt;-M html&lt;/code&gt;:&lt;/p&gt; &lt;img width=&#34;900&#34; alt=&#34;Prowler html&#34; src=&#34;https://user-images.githubusercontent.com/3985464/141443976-41d32cc2-533d-405a-92cb-affc3995d6ec.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sample screenshot of the Quicksight dashboard, see &lt;a href=&#34;https://quicksight-security-dashboard.workshop.aws/&#34;&gt;quicksight-security-dashboard.workshop.aws&lt;/a&gt;:&lt;/p&gt; &lt;img width=&#34;900&#34; alt=&#34;Prowler with Quicksight&#34; src=&#34;https://user-images.githubusercontent.com/3985464/128932819-0156e838-286d-483c-b953-fda68a325a3d.png&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sample screenshot of the junit-xml output in CodeBuild &lt;code&gt;-M junit-xml&lt;/code&gt;:&lt;/p&gt; &lt;img width=&#34;900&#34; src=&#34;https://user-images.githubusercontent.com/3985464/113942824-ca382b00-9801-11eb-84e5-d7731548a7a9.png&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Save your reports&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to save your report for later analysis thare are different ways, natively (supported text, mono, csv, json, json-asff, junit-xml and html, see note below for more info):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M csv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or with multiple formats at the same time:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M csv,json,json-asff,html&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or just a group of checks in multiple formats:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g gdpr -M csv,json,json-asff&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or if you want a sorted and dynamic HTML report do:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M html&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now &lt;code&gt;-M&lt;/code&gt; creates a file inside the prowler &lt;code&gt;output&lt;/code&gt; directory named &lt;code&gt;prowler-output-AWSACCOUNTID-YYYYMMDDHHMMSS.format&lt;/code&gt;. You don&#39;t have to specify anything else, no pipes, no redirects.&lt;/p&gt; &lt;p&gt;or just saving the output to a file like below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M mono &amp;gt; prowler-report.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To generate JUnit report files, include the junit-xml format. This can be combined with any other format. Files are written inside a prowler root directory named &lt;code&gt;junit-reports&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M text,junit-xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note about output formats to use with &lt;code&gt;-M&lt;/code&gt;: &#34;text&#34; is the default one with colors, &#34;mono&#34; is like default one but monochrome, &#34;csv&#34; is comma separated values, &#34;json&#34; plain basic json (without comma between lines) and &#34;json-asff&#34; is also json with Amazon Security Finding Format that you can ship to Security Hub using &lt;code&gt;-S&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;To save your report in an S3 bucket, use &lt;code&gt;-B&lt;/code&gt; to define a custom output bucket along with &lt;code&gt;-M&lt;/code&gt; to define the output format that is going to be uploaded to S3:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M csv -B my-bucket/folder/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;In the case you do not want to use the assumed role credentials but the initial credentials to put the reports into the S3 bucket, use &lt;code&gt;-D&lt;/code&gt; instead of &lt;code&gt;-B&lt;/code&gt;. Make sure that the used credentials have s3:PutObject permissions in the S3 path where the reports are going to be uploaded.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;When generating multiple formats and running using Docker, to retrieve the reports, bind a local directory to the container, e.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -ti --rm --name prowler --volume &#34;$(pwd)&#34;:/prowler/output --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_SESSION_TOKEN toniblyx/prowler:latest -M csv,json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To perform an assessment based on CIS Profile Definitions you can use cislevel1 or cislevel2 with &lt;code&gt;-g&lt;/code&gt; flag, more information about this &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34;&gt;here, page 8&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g cislevel1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to run Prowler to check multiple AWS accounts in parallel (runs up to 4 simultaneously &lt;code&gt;-P 4&lt;/code&gt;) but you may want to read below in Advanced Usage section to do so assuming a role:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;grep -E &#39;^\[([0-9A-Aa-z_-]+)\]&#39;  ~/.aws/credentials | tr -d &#39;][&#39; | shuf |  \&#xA;xargs -n 1 -L 1 -I @ -r -P 4 ./prowler -p @ -M csv  2&amp;gt; /dev/null  &amp;gt;&amp;gt; all-accounts.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For help about usage run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./prowler -h&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Assume Role:&lt;/h3&gt; &#xA;&lt;p&gt;Prowler uses the AWS CLI underneath so it uses the same authentication methods. However, there are few ways to run Prowler against multiple accounts using IAM Assume Role feature depending on eachg use case. You can just set up your custom profile inside &lt;code&gt;~/.aws/config&lt;/code&gt; with all needed information about the role to assume then call it with &lt;code&gt;./prowler -p your-custom-profile&lt;/code&gt;. Additionally you can use &lt;code&gt;-A 123456789012&lt;/code&gt; and &lt;code&gt;-R RemoteRoleToAssume&lt;/code&gt; and Prowler will get those temporary credentials using &lt;code&gt;aws sts assume-role&lt;/code&gt;, set them up as environment variables and run against that given account. To create a role to assume in multiple accounts easier eather as CFN Stack or StackSet, look at &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/create_role_to_assume_cfn.yaml&#34;&gt;this CloudFormation template&lt;/a&gt; and adapt it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -A 123456789012 -R ProwlerRole&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -A 123456789012 -R ProwlerRole -I 123456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;NOTE 1 about Session Duration&lt;/em&gt;: By default it gets credentials valid for 1 hour (3600 seconds). Depending on the mount of checks you run and the size of your infrastructure, Prowler may require more than 1 hour to finish. Use option &lt;code&gt;-T &amp;lt;seconds&amp;gt;&lt;/code&gt; to allow up to 12h (43200 seconds). To allow more than 1h you need to modify &lt;em&gt;&#34;Maximum CLI/API session duration&#34;&lt;/em&gt; for that particular role, read more &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;NOTE 2 about Session Duration&lt;/em&gt;: Bear in mind that if you are using roles assumed by role chaining there is a hard limit of 1 hour so consider not using role chaining if possible, read more about that, in foot note 1 below the table &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For example, if you want to get only the fails in CSV format from all checks regarding RDS without banner from the AWS Account 123456789012 assuming the role RemoteRoleToAssume and set a fixed session duration of 1h:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -A 123456789012 -R RemoteRoleToAssume -T 3600 -b -M cvs -q -g rds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with a given External ID:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -A 123456789012 -R RemoteRoleToAssume -T 3600 -I 123456 -b -M cvs -q -g rds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assume Role and across all accounts in AWS Organizations or just a list of accounts:&lt;/h3&gt; &#xA;&lt;p&gt;If you want to run Prowler or just a check or a group across all accounts of AWS Organizations you can do this:&lt;/p&gt; &#xA;&lt;p&gt;First get a list of accounts that are not suspended:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ACCOUNTS_IN_ORGS=$(aws organizations list-accounts --query Accounts[?Status==`ACTIVE`].Id --output text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run Prowler to assume a role (same in all members) per each account, in this example it is just running one particular check:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;for accountId in $ACCOUNTS_IN_ORGS; do ./prowler -A $accountId -R RemoteRoleToAssume -c extra79; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using the same for loop it can be scanned a list of accounts with a variable like &lt;code&gt;ACCOUNTS_LIST=&#39;11111111111 2222222222 333333333&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Get AWS Account details from your AWS Organization:&lt;/h3&gt; &#xA;&lt;p&gt;From Prowler v2.8, you can get additional information of the scanned account in CSV and JSON outputs. When scanning a single account you get the Account ID as part of the output. Now, if you have AWS Organizations and are scanning multiple accounts using the assume role functionality, Prowler can get your account details like Account Name, Email, ARN, Organization ID and Tags and you will have them next to every finding in the CSV and JSON outputs. In order to do that you can use the new option &lt;code&gt;-O &amp;lt;management account id&amp;gt;&lt;/code&gt;, requires &lt;code&gt;-R &amp;lt;role to assume&amp;gt;&lt;/code&gt; and also needs permissions &lt;code&gt;organizations:ListAccounts*&lt;/code&gt; and &lt;code&gt;organizations:ListTagsForResource&lt;/code&gt;. See the following sample command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./prowler -R ProwlerScanRole -A 111111111111 -O 222222222222 -M json,csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In that command Prowler will scan the account &lt;code&gt;111111111111&lt;/code&gt; assuming the role &lt;code&gt;ProwlerScanRole&lt;/code&gt; and getting the account details from the AWS Organizatiosn management account &lt;code&gt;222222222222&lt;/code&gt; assuming the same role &lt;code&gt;ProwlerScanRole&lt;/code&gt; for that and creating two reports with those details in JSON and CSV.&lt;/p&gt; &#xA;&lt;p&gt;In the JSON output below (redacted) you can see tags coded in base64 to prevent breaking CSV or JSON due to its format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;Account Email&#34;: &#34;my-prod-account@domain.com&#34;,&#xA;  &#34;Account Name&#34;: &#34;my-prod-account&#34;,&#xA;  &#34;Account ARN&#34;: &#34;arn:aws:organizations::222222222222:account/o-abcde1234/111111111111&#34;,&#xA;  &#34;Account Organization&#34;: &#34;o-abcde1234&#34;,&#xA;  &#34;Account tags&#34;: &#34;\&#34;eyJUYWdzIjpasf0=\&#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The additional fields in CSV header output are as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csv&#34;&gt;ACCOUNT_DETAILS_EMAIL,ACCOUNT_DETAILS_NAME,ACCOUNT_DETAILS_ARN,ACCOUNT_DETAILS_ORG,ACCOUNT_DETAILS_TAGS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GovCloud&lt;/h3&gt; &#xA;&lt;p&gt;Prowler runs in GovCloud regions as well. To make sure it points to the right API endpoint use &lt;code&gt;-r&lt;/code&gt; to either &lt;code&gt;us-gov-west-1&lt;/code&gt; or &lt;code&gt;us-gov-east-1&lt;/code&gt;. If not filter region is used it will look for resources in both GovCloud regions by default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -r us-gov-west-1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For Security Hub integration see below in Security Hub section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Custom folder for custom checks&lt;/h3&gt; &#xA;&lt;p&gt;Flag &lt;code&gt;-x /my/own/checks&lt;/code&gt; will include any check in that particular directory (files must start by check). To see how to write checks see &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#add-custom-checks&#34;&gt;Add Custom Checks&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;S3 URIs are also supported as custom folders for custom checks, e.g. &lt;code&gt;s3://bucket/prefix/checks&lt;/code&gt;. Prowler will download the folder locally and run the checks as they are called with default execution,&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;-g&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that the used credentials have s3:GetObject permissions in the S3 path where the custom checks are located.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Show or log only FAILs&lt;/h3&gt; &#xA;&lt;p&gt;In order to remove noise and get only FAIL findings there is a &lt;code&gt;-q&lt;/code&gt; flag that makes Prowler to show and log only FAILs. It can be combined with any other option. Will show WARNINGS when a resource is excluded, just to take into consideration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# -q option combined with -M csv -b&#xA;./prowler -q -M csv -b&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set the entropy limit for detect-secrets&lt;/h3&gt; &#xA;&lt;p&gt;Sets the entropy limit for high entropy base64 strings from environment variable &lt;code&gt;BASE64_LIMIT&lt;/code&gt;. Value must be between 0.0 and 8.0, defaults is 4.5. Sets the entropy limit for high entropy hex strings from environment variable &lt;code&gt;HEX_LIMIT&lt;/code&gt;. Value must be between 0.0 and 8.0, defaults is 3.0.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export BASE64_LIMIT=4.5&#xA;export HEX_LIMIT=3.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Prowler using AWS CloudShell&lt;/h3&gt; &#xA;&lt;p&gt;An easy way to run Prowler to scan your account is using AWS CloudShell. Read more and learn how to do it &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/util/cloudshell/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security Hub integration&lt;/h2&gt; &#xA;&lt;p&gt;Since October 30th 2020 (version v2.3RC5), Prowler supports natively and as &lt;strong&gt;official integration&lt;/strong&gt; sending findings to &lt;a href=&#34;https://aws.amazon.com/security-hub&#34;&gt;AWS Security Hub&lt;/a&gt;. This integration allows Prowler to import its findings to AWS Security Hub. With Security Hub, you now have a single place that aggregates, organizes, and prioritizes your security alerts, or findings, from multiple AWS services, such as Amazon GuardDuty, Amazon Inspector, Amazon Macie, AWS Identity and Access Management (IAM) Access Analyzer, and AWS Firewall Manager, as well as from AWS Partner solutions and from Prowler for free.&lt;/p&gt; &#xA;&lt;p&gt;Before sending findings to Prowler, you need to perform next steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Since Security Hub is a region based service, enable it in the region or regions you require. Use the AWS Management Console or using the AWS CLI with this command if you have enough permissions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;aws securityhub enable-security-hub --region &amp;lt;region&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Enable Prowler as partner integration integration. Use the AWS Management Console or using the AWS CLI with this command if you have enough permissions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;aws securityhub enable-import-findings-for-product --region &amp;lt;region&amp;gt; --product-arn arn:aws:securityhub:&amp;lt;region&amp;gt;::product/prowler/prowler&lt;/code&gt; (change region also inside the ARN).&lt;/li&gt; &#xA;   &lt;li&gt;Using the AWS Management Console: &lt;img src=&#34;https://user-images.githubusercontent.com/3985464/97634660-5ade3400-1a36-11eb-9a92-4a45cc98c158.png&#34; alt=&#34;Screenshot 2020-10-29 at 10 26 02 PM&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;As mentioned in section &#34;Custom IAM Policy&#34;, to allow Prowler to import its findings to AWS Security Hub you need to add the policy below to the role or user running Prowler: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/prowler-security-hub.json&#34;&gt;iam/prowler-security-hub.json&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once it is enabled, it is as simple as running the command below (for all regions):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M json-asff -S&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for only one filtered region like eu-west-1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -M json-asff -q -S -f eu-west-1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note 1: It is recommended to send only fails to Security Hub and that is possible adding &lt;code&gt;-q&lt;/code&gt; to the command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note 2: Since Prowler perform checks to all regions by defaults you may need to filter by region when runing Security Hub integration, as shown in the example above. Remember to enable Security Hub in the region or regions you need by calling &lt;code&gt;aws securityhub enable-security-hub --region &amp;lt;region&amp;gt;&lt;/code&gt; and run Prowler with the option &lt;code&gt;-f &amp;lt;region&amp;gt;&lt;/code&gt; (if no region is used it will try to push findings in all regions hubs).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note 3: to have updated findings in Security Hub you have to run Prowler periodically. Once a day or every certain amount of hours.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Once you run findings for first time you will be able to see Prowler findings in Findings section:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3985464/97634676-66c9f600-1a36-11eb-9341-70feb06f6331.png&#34; alt=&#34;Screenshot 2020-10-29 at 10 29 05 PM&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Security Hub in GovCloud regions&lt;/h3&gt; &#xA;&lt;p&gt;To use Prowler and Security Hub integration in GovCloud there is an additional requirement, usage of &lt;code&gt;-r&lt;/code&gt; is needed to point the API queries to the right API endpoint. Here is a sample command that sends only failed findings to Security Hub in region &lt;code&gt;us-gov-west-1&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./prowler -r us-gov-west-1 -f us-gov-west-1 -S -M csv,json-asff -q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Security Hub in China regions&lt;/h3&gt; &#xA;&lt;p&gt;To use Prowler and Security Hub integration in China regions there is an additional requirement, usage of &lt;code&gt;-r&lt;/code&gt; is needed to point the API queries to the right API endpoint. Here is a sample command that sends only failed findings to Security Hub in region &lt;code&gt;cn-north-1&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./prowler -r cn-north-1 -f cn-north-1 -q -S -M csv,json-asff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CodeBuild deployment&lt;/h2&gt; &#xA;&lt;p&gt;Either to run Prowler once or based on a schedule this template makes it pretty straight forward. This template will create a CodeBuild environment and run Prowler directly leaving all reports in a bucket and creating a report also inside CodeBuild basedon the JUnit output from Prowler. Scheduling can be cron based like &lt;code&gt;cron(0 22 * * ? *)&lt;/code&gt; or rate based like &lt;code&gt;rate(5 hours)&lt;/code&gt; since CloudWatch Event rules (or Eventbridge) is used here.&lt;/p&gt; &#xA;&lt;p&gt;The Cloud Formation template that helps you doing that is &lt;a href=&#34;https://github.com/prowler-cloud/prowler/raw/master/util/codebuild/codebuild-prowler-audit-account-cfn.yaml&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a simple solution to monitor one account. For multiples accounts see &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/util/org-multi-account/README.md&#34;&gt;Multi Account and Continuous Monitoring&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Allowlist or remove a fail from resources&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you may find resources that are intentionally configured in a certain way that may be a bad practice but it is all right with it, for example an S3 bucket open to the internet hosting a web site, or a security group with an open port needed in your use case. Now you can use &lt;code&gt;-w allowlist_sample.txt&lt;/code&gt; and add your resources as &lt;code&gt;checkID:resourcename&lt;/code&gt; as in this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./prowler -w allowlist_sample.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;S3 URIs are also supported as allowlist file, e.g. &lt;code&gt;s3://bucket/prefix/allowlist_sample.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that the used credentials have s3:GetObject permissions in the S3 path where the allowlist file is located.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;DynamoDB table ARNs are also supported as allowlist file, e.g. &lt;code&gt;arn:aws:dynamodb:us-east-1:111111222222:table/allowlist&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that the table has &lt;code&gt;account_id&lt;/code&gt; as partition key and &lt;code&gt;rule&lt;/code&gt; as sort key, and that the used credentials have &lt;code&gt;dynamodb:PartiQLSelect&lt;/code&gt; permissions in the table.&lt;/p&gt; &#xA; &lt;p align=&#34;left&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/38561120/165769502-296f9075-7cc8-445e-8158-4b21804bfe7e.png&#34; alt=&#34;image&#34; width=&#34;397&#34; height=&#34;252&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The field &lt;code&gt;account_id&lt;/code&gt; can contains either an account ID or an &lt;code&gt;*&lt;/code&gt; (which applies to all the accounts that use this table as a whitelist). As in the traditional allowlist file, the &lt;code&gt;rule&lt;/code&gt; field must contain &lt;code&gt;checkID:resourcename&lt;/code&gt; pattern.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/38561120/165770610-ed5c2764-7538-44c2-9195-bcfdecc4ef9b.png&#34; alt=&#34;image&#34; width=&#34;394&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Allowlist option works along with other options and adds a &lt;code&gt;WARNING&lt;/code&gt; instead of &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;PASS&lt;/code&gt; or &lt;code&gt;FAIL&lt;/code&gt; to any output format except for &lt;code&gt;json-asff&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to fix every FAIL&lt;/h2&gt; &#xA;&lt;p&gt;Check your report and fix the issues following all specific guidelines per check in &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34;&gt;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;STS expired token&lt;/h3&gt; &#xA;&lt;p&gt;If you are using an STS token for AWS-CLI and your session is expired you probably get this error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;A client error (ExpiredToken) occurred when calling the GenerateCredentialReport operation: The security token included in the request is expired&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To fix it, please renew your token by authenticating again to the AWS API, see next section below if you use MFA.&lt;/p&gt; &#xA;&lt;h3&gt;Run Prowler with MFA protected credentials&lt;/h3&gt; &#xA;&lt;p&gt;To run Prowler using a profile that requires MFA you just need to get the session token before hand. Just make sure you use this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;aws --profile &amp;lt;YOUR_AWS_PROFILE&amp;gt; sts get-session-token --duration 129600 --serial-number &amp;lt;ARN_OF_MFA&amp;gt; --token-code &amp;lt;MFA_TOKEN_CODE&amp;gt; --output text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you get your token you can export it as environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export AWS_PROFILE=YOUR_AWS_PROFILE&#xA;export AWS_SESSION_TOKEN=YOUR_NEW_TOKEN&#xA;AWS_SECRET_ACCESS_KEY=YOUR_SECRET&#xA;export AWS_ACCESS_KEY_ID=YOUR_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or set manually up your &lt;code&gt;~/.aws/credentials&lt;/code&gt; file properly.&lt;/p&gt; &#xA;&lt;p&gt;There are some helpfull tools to save time in this process like &lt;a href=&#34;https://github.com/asagage/aws-mfa-script&#34;&gt;aws-mfa-script&lt;/a&gt; or &lt;a href=&#34;https://github.com/sweharris/aws-cli-mfa&#34;&gt;aws-cli-mfa&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;AWS Managed IAM Policies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_view-only-user&#34;&gt;ViewOnlyAccess&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use case: This user can view a list of AWS resources and basic metadata in the account across all services. The user cannot read resource content or metadata that goes beyond the quota and list information for resources.&lt;/li&gt; &#xA; &lt;li&gt;Policy description: This policy grants List*, Describe*, Get*, View*, and Lookup* access to resources for most AWS services. To see what actions this policy includes for each service, see &lt;a href=&#34;https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/job-function/ViewOnlyAccess&#34;&gt;ViewOnlyAccess Permissions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_security-auditor&#34;&gt;SecurityAudit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use case: This user monitors accounts for compliance with security requirements. This user can access logs and events to investigate potential security breaches or potential malicious activity.&lt;/li&gt; &#xA; &lt;li&gt;Policy description: This policy grants permissions to view configuration data for many AWS services and to review their logs. To see what actions this policy includes for each service, see &lt;a href=&#34;https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/SecurityAudit&#34;&gt;SecurityAudit Permissions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom IAM Policy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/prowler-additions-policy.json&#34;&gt;Prowler-Additions-Policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some new and specific checks require Prowler to inherit more permissions than SecurityAudit and ViewOnlyAccess to work properly. In addition to the AWS managed policies, &#34;SecurityAudit&#34; and &#34;ViewOnlyAccess&#34;, the user/role you use for checks may need to be granted a custom policy with a few more read-only permissions (to support additional services mostly). Here is an example policy with the additional rights, &#34;Prowler-Additions-Policy&#34; (see below bootstrap script for set it up):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/prowler-additions-policy.json&#34;&gt;iam/prowler-additions-policy.json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/prowler-security-hub.json&#34;&gt;Prowler-Security-Hub Policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Allows Prowler to import its findings to &lt;a href=&#34;https://aws.amazon.com/security-hub&#34;&gt;AWS Security Hub&lt;/a&gt;. More information in &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/#security-hub-integration&#34;&gt;Security Hub integration&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/prowler-security-hub.json&#34;&gt;iam/prowler-security-hub.json&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bootstrap Script&lt;/h3&gt; &#xA;&lt;p&gt;Quick bash script to set up a &#34;prowler&#34; IAM user with &#34;SecurityAudit&#34; and &#34;ViewOnlyAccess&#34; group with the required permissions (including &#34;Prowler-Additions-Policy&#34;). To run the script below, you need user with administrative permissions; set the &lt;code&gt;AWS_DEFAULT_PROFILE&lt;/code&gt; to use that account:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export AWS_DEFAULT_PROFILE=default&#xA;export ACCOUNT_ID=$(aws sts get-caller-identity --query &#39;Account&#39; | tr -d &#39;&#34;&#39;)&#xA;aws iam create-group --group-name Prowler&#xA;aws iam create-policy --policy-name Prowler-Additions-Policy --policy-document file://$(pwd)/iam/prowler-additions-policy.json&#xA;aws iam attach-group-policy --group-name Prowler --policy-arn arn:aws:iam::aws:policy/SecurityAudit&#xA;aws iam attach-group-policy --group-name Prowler --policy-arn arn:aws:iam::aws:policy/job-function/ViewOnlyAccess&#xA;aws iam attach-group-policy --group-name Prowler --policy-arn arn:aws:iam::${ACCOUNT_ID}:policy/Prowler-Additions-Policy&#xA;aws iam create-user --user-name prowler&#xA;aws iam add-user-to-group --user-name prowler --group-name Prowler&#xA;aws iam create-access-key --user-name prowler&#xA;unset ACCOUNT_ID AWS_DEFAULT_PROFILE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;aws iam create-access-key&lt;/code&gt; command will output the secret access key and the key id; keep these somewhere safe, and add them to &lt;code&gt;~/.aws/credentials&lt;/code&gt; with an appropriate profile name to use them with Prowler. This is the only time they secret key will be shown. If you lose it, you will need to generate a replacement.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/iam/create_role_to_assume_cfn.yaml&#34;&gt;This CloudFormation template&lt;/a&gt; may also help you on that task.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Extras&lt;/h2&gt; &#xA;&lt;p&gt;We are adding additional checks to improve the information gather from each account, these checks are out of the scope of the CIS benchmark for AWS, but we consider them very helpful to get to know each AWS account set up and find issues on it.&lt;/p&gt; &#xA;&lt;p&gt;Some of these checks look for publicly facing resources may not actually be fully public due to other layered controls like S3 Bucket Policies, Security Groups or Network ACLs.&lt;/p&gt; &#xA;&lt;p&gt;To list all existing checks in the extras group run the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -l -g extras&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;There are some checks not included in that list, they are experimental or checks that takes long to run like &lt;code&gt;extra759&lt;/code&gt; and &lt;code&gt;extra760&lt;/code&gt; (search for secrets in Lambda function variables and code).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To check all extras in one command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g extras&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or to run just one of the checks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -c extraNUMBER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or to run multiple extras in one go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -c extraNumber,extraNumber&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Forensics Ready Checks&lt;/h2&gt; &#xA;&lt;p&gt;With this group of checks, Prowler looks if each service with logging or audit capabilities has them enabled to ensure all needed evidences are recorded and collected for an eventual digital forensic investigation in case of incident. List of checks part of this group (you can also see all groups with &lt;code&gt;./prowler -L&lt;/code&gt;). The list of checks can be seen in the group file at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/groups/group8_forensics&#34;&gt;groups/group8_forensics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;forensics-ready&lt;/code&gt; group of checks uses existing and extra checks. To get a forensics readiness report, run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g forensics-ready&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GDPR Checks&lt;/h2&gt; &#xA;&lt;p&gt;With this group of checks, Prowler shows result of checks related to GDPR, more information &lt;a href=&#34;https://github.com/prowler-cloud/prowler/issues/189&#34;&gt;here&lt;/a&gt;. The list of checks can be seen in the group file at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/groups/group9_gdpr&#34;&gt;groups/group9_gdpr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;gdpr&lt;/code&gt; group of checks uses existing and extra checks. To get a GDPR report, run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g gdpr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;AWS FTR Checks&lt;/h2&gt; &#xA;&lt;p&gt;With this group of checks, Prowler shows result of checks related to the AWS Foundational Technical Review, more information &lt;a href=&#34;https://apn-checklists.s3.amazonaws.com/foundational/partner-hosted/partner-hosted/CVLHEC5X7.html&#34;&gt;here&lt;/a&gt;. The list of checks can be seen in the group file at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/groups/group25_FTR&#34;&gt;groups/group25_ftr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;ftr&lt;/code&gt; group of checks uses existing and extra checks. To get a AWS FTR report, run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g ftr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;HIPAA Checks&lt;/h2&gt; &#xA;&lt;p&gt;With this group of checks, Prowler shows results of controls related to the &#34;Security Rule&#34; of the Health Insurance Portability and Accountability Act aka &lt;a href=&#34;https://www.hhs.gov/hipaa/for-professionals/security/index.html&#34;&gt;HIPAA&lt;/a&gt; as defined in &lt;a href=&#34;https://www.law.cornell.edu/cfr/text/45/part-164/subpart-C&#34;&gt;45 CFR Subpart C - Security Standards for the Protection of Electronic Protected Health Information&lt;/a&gt; within &lt;a href=&#34;https://www.law.cornell.edu/cfr/text/45/part-160&#34;&gt;PART 160 - GENERAL ADMINISTRATIVE REQUIREMENTS&lt;/a&gt; and &lt;a href=&#34;https://www.law.cornell.edu/cfr/text/45/part-164/subpart-A&#34;&gt;Subpart A&lt;/a&gt; and &lt;a href=&#34;https://www.law.cornell.edu/cfr/text/45/part-164/subpart-C&#34;&gt;Subpart C&lt;/a&gt; of PART 164 - SECURITY AND PRIVACY&lt;/p&gt; &#xA;&lt;p&gt;More information on the original PR is &lt;a href=&#34;https://github.com/prowler-cloud/prowler/issues/227&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Note on Business Associate Addendum&#39;s (BAA)&lt;/h3&gt; &#xA;&lt;p&gt;Under the HIPAA regulations, cloud service providers (CSPs) such as AWS are considered business associates. The Business Associate Addendum (BAA) is an AWS contract that is required under HIPAA rules to ensure that AWS appropriately safeguards protected health information (PHI). The BAA also serves to clarify and limit, as appropriate, the permissible uses and disclosures of PHI by AWS, based on the relationship between AWS and our customers, and the activities or services being performed by AWS. Customers may use any AWS service in an account designated as a HIPAA account, but they should only process, store, and transmit protected health information (PHI) in the HIPAA-eligible services defined in the Business Associate Addendum (BAA). For the latest list of HIPAA-eligible AWS services, see &lt;a href=&#34;https://aws.amazon.com/compliance/hipaa-eligible-services-reference/&#34;&gt;HIPAA Eligible Services Reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information on AWS &amp;amp; HIPAA can be found &lt;a href=&#34;https://aws.amazon.com/compliance/hipaa-compliance/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The list of checks showed by this group is as follows, they will be mostly relevant for Subsections &lt;a href=&#34;https://www.law.cornell.edu/cfr/text/45/164.306&#34;&gt;164.306 Security standards: General rules&lt;/a&gt; and &lt;a href=&#34;https://www.law.cornell.edu/cfr/text/45/164.312&#34;&gt;164.312 Technical safeguards&lt;/a&gt;. Prowler is only able to make checks in the spirit of the technical requirements outlined in these Subsections, and cannot cover all procedural controls required. They be found in the group file at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/groups/group10_hipaa&#34;&gt;groups/group10_hipaa&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;hipaa&lt;/code&gt; group of checks uses existing and extra checks. To get a HIPAA report, run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g hipaa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Trust Boundaries Checks&lt;/h2&gt; &#xA;&lt;h3&gt;Definition and Terms&lt;/h3&gt; &#xA;&lt;p&gt;The term &#34;trust boundary&#34; is originating from the threat modelling process and the most popular contributor Adam Shostack and author of &#34;Threat Modeling: Designing for Security&#34; defines it as following (&lt;a href=&#34;https://adam.shostack.org/uncover.html&#34;&gt;reference&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Trust boundaries are perhaps the most subjective of all: these represent the border between trusted and untrusted elements. Trust is complex. You might trust your mechanic with your car, your dentist with your teeth, and your banker with your money, but you probably don&#39;t trust your dentist to change your spark plugs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;AWS is made to be flexible for service links within and between different AWS accounts, we all know that.&lt;/p&gt; &#xA;&lt;p&gt;This group of checks helps to analyse a particular AWS account (subject) on existing links to other AWS accounts across various AWS services, in order to identify untrusted links.&lt;/p&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;To give it a quick shot just call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -g trustboundaries&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scenarios&lt;/h3&gt; &#xA;&lt;p&gt;Currently, this check group supports two different scenarios:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Single account environment: no action required, the configuration is happening automatically for you.&lt;/li&gt; &#xA; &lt;li&gt;Multi account environment: in case you environment has multiple trusted and known AWS accounts you maybe want to append them manually to &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/groups/group16_trustboundaries&#34;&gt;groups/group16_trustboundaries&lt;/a&gt; as a space separated list into &lt;code&gt;GROUP_TRUSTBOUNDARIES_TRUSTED_ACCOUNT_IDS&lt;/code&gt; variable, then just run prowler.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Coverage&lt;/h3&gt; &#xA;&lt;p&gt;Current coverage of Amazon Web Service (AWS) taken from &lt;a href=&#34;https://docs.aws.amazon.com/whitepapers/latest/aws-overview/introduction.html&#34;&gt;here&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Trust Boundary&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Networking and Content Delivery&lt;/td&gt; &#xA;   &lt;td&gt;Amazon VPC&lt;/td&gt; &#xA;   &lt;td&gt;VPC endpoints connections (&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/checks/check_extra786&#34;&gt;extra786&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;VPC endpoints allowlisted principals (&lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/checks/check_extra787&#34;&gt;extra787&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;All ideas or recommendations to extend this group are very welcome &lt;a href=&#34;https://github.com/prowler-cloud/prowler/issues/new/choose&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Detailed Explanation of the Concept&lt;/h3&gt; &#xA;&lt;p&gt;The diagrams depict two common scenarios, single account and multi account environments. Every circle represents one AWS account. The dashed line represents the trust boundary, that separates trust and untrusted AWS accounts. The arrow simply describes the direction of the trust, however the data can potentially flow in both directions.&lt;/p&gt; &#xA;&lt;p&gt;Single Account environment assumes that only the AWS account subject to this analysis is trusted. However, there is a chance that two VPCs are existing within that one AWS account which are still trusted as a self reference. &lt;img src=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/docs/images/prowler-single-account-environment.png&#34; alt=&#34;single-account-environment&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Multi Account environments assumes a minimum of two trusted or known accounts. For this particular example all trusted and known accounts will be tested. Therefore &lt;code&gt;GROUP_TRUSTBOUNDARIES_TRUSTED_ACCOUNT_IDS&lt;/code&gt; variable in &lt;a href=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/groups/group16_trustboundaries&#34;&gt;groups/group16_trustboundaries&lt;/a&gt; should include all trusted accounts Account #A, Account #B, Account #C, and Account #D in order to finally raise Account #E and Account #F for being untrusted or unknown. &lt;img src=&#34;https://raw.githubusercontent.com/prowler-cloud/prowler/master/docs/images/prowler-multi-account-environment.png&#34; alt=&#34;multi-account-environment&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Checks&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;code&gt;./prowler -c extra9999 -a&lt;/code&gt; you can build your own on-the-fly custom check by specifying the AWS CLI command to execute.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Omit the &#34;aws&#34; command and only use its parameters within quotes and do not nest quotes in the aws parameter, --output text is already included in the check.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here is an example of a check to find SGs with inbound port 80:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./prowler -c extra9999 -a &#39;ec2 describe-security-groups --filters Name=ip-permission.to-port,Values=80 --query SecurityGroups[*].GroupId[]]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to add any new check feel free to create a new extra check in the extras group or other group. To do so, you will need to follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow structure in file &lt;code&gt;checks/check_sample&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Name your check with a number part of an existing group or a new one&lt;/li&gt; &#xA; &lt;li&gt;Save changes and run it as &lt;code&gt;./prowler -c extraNN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send me a pull request! :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Add Custom Groups&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow structure in file &lt;code&gt;groups/groupN_sample&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Name your group with a non existing number&lt;/li&gt; &#xA; &lt;li&gt;Save changes and run it as &lt;code&gt;./prowler -g extraNN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send me a pull request! :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can also create a group with only the checks that you want to perform in your company, for instance a group named &lt;code&gt;group9_mycompany&lt;/code&gt; with only the list of checks that you care or your particular compliance applies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Third Party Integrations&lt;/h2&gt; &#xA;&lt;h3&gt;Telegram&lt;/h3&gt; &#xA;&lt;p&gt;Javier Pecete has done an awesome job integrating Prowler with Telegram, you have more details here &lt;a href=&#34;https://github.com/i4specete/ServerTelegramBot&#34;&gt;https://github.com/i4specete/ServerTelegramBot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cloud Security Suite&lt;/h3&gt; &#xA;&lt;p&gt;The guys of SecurityFTW have added Prowler in their Cloud Security Suite along with other cool security tools &lt;a href=&#34;https://github.com/SecurityFTW/cs-suite&#34;&gt;https://github.com/SecurityFTW/cs-suite&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Prowler is licensed as Apache License 2.0 as specified in each file. You may obtain a copy of the License at &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m not related anyhow with CIS organization, I just write and maintain Prowler to help companies over the world to make their cloud infrastructure more secure.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to contact me visit &lt;a href=&#34;https://blyx.com/contact&#34;&gt;https://blyx.com/contact&lt;/a&gt; or follow me on Twitter &lt;a href=&#34;https://twitter.com/prowler-cloud&#34;&gt;https://twitter.com/prowler-cloud&lt;/a&gt; my DMs are open.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zabbix/zabbix-docker</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/zabbix/zabbix-docker</id>
    <link href="https://github.com/zabbix/zabbix-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Zabbix Dockerfiles&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://assets.zabbix.com/img/logo/zabbix_logo_500x131.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zabbix/zabbix-docker/actions/workflows/images_build.yml&#34;&gt;&lt;img src=&#34;https://github.com/zabbix/zabbix-docker/actions/workflows/images_build.yml/badge.svg?branch=6.0&amp;amp;event=push&#34; alt=&#34;Build images (DockerHub)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zabbix/zabbix-docker/actions/workflows/images_build_windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/zabbix/zabbix-docker/actions/workflows/images_build_windows.yml/badge.svg?branch=6.0&amp;amp;event=push&#34; alt=&#34;Build images (DockerHub, Windows)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Zabbix?&lt;/h1&gt; &#xA;&lt;p&gt;Zabbix is an enterprise-class open source distributed monitoring solution.&lt;/p&gt; &#xA;&lt;p&gt;Zabbix is software that monitors numerous parameters of a network and the health and integrity of servers. Zabbix uses a flexible notification mechanism that allows users to configure e-mail based alerts for virtually any event. This allows a fast reaction to server problems. Zabbix offers excellent reporting and data visualisation features based on the stored data. This makes Zabbix ideal for capacity planning.&lt;/p&gt; &#xA;&lt;p&gt;For more information and related downloads for Zabbix components, please visit &lt;a href=&#34;https://hub.docker.com/u/zabbix/&#34;&gt;https://hub.docker.com/u/zabbix/&lt;/a&gt; and &lt;a href=&#34;https://zabbix.com&#34;&gt;https://zabbix.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Zabbix Dockerfiles&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains &lt;strong&gt;Dockerfile&lt;/strong&gt; of &lt;a href=&#34;https://zabbix.com/&#34;&gt;Zabbix&lt;/a&gt; for &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&#39;s &lt;a href=&#34;https://registry.hub.docker.com/u/zabbix/&#34;&gt;automated build&lt;/a&gt; published to the public &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub Registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Base Docker Image&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/alpine/&#34;&gt;alpine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quay.io/repository/centos/centos?tab=info&#34;&gt;centos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/oraclelinux/&#34;&gt;oracle linux&lt;/a&gt; from Zabbix 5.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/ubuntu/&#34;&gt;ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important information: All Zabbix images based on CentOS 8 image can not be updated anymore because CentOS 8 base image is outdated on Docker Hub (base image is not updated for half year). CentOS Stream 8 from quay.io is used currently.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;There is some documentation and examples in the &lt;a href=&#34;https://www.zabbix.com/documentation/current/manual/installation/containers&#34;&gt;official Zabbix Documentation&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Please also follow usage instructions of each Zabbix component image:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-appliance/&#34;&gt;zabbix-appliance&lt;/a&gt; - Zabbix appliance with built-in MySQL server, Zabbix server, Zabbix Java Gateway and Zabbix frontend based on Nginx web-server&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Important information: Zabbix Docker Appliance has been decommissioned (except Red Hat edition) and will not be available for 3.0.31, 4.0.19, 4.4.7, 5.0.0 and newer releases. Please use a separate Docker images for each component instead of the all-in-one solution.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-agent/&#34;&gt;zabbix-agent&lt;/a&gt; - Zabbix agent&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-agent2/&#34;&gt;zabbix-agent2&lt;/a&gt; - Zabbix agent 2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-server-mysql/&#34;&gt;zabbix-server-mysql&lt;/a&gt; - Zabbix server with MySQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-server-pgsql/&#34;&gt;zabbix-server-pgsql&lt;/a&gt; - Zabbix server with PostgreSQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-web-apache-mysql/&#34;&gt;zabbix-web-apache-mysql&lt;/a&gt; - Zabbix web interface on Apache2 web server with MySQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-web-apache-pgsql/&#34;&gt;zabbix-web-apache-pgsql&lt;/a&gt; - Zabbix web interface on Apache2 web server with PostgreSQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-web-nginx-mysql/&#34;&gt;zabbix-web-nginx-mysql&lt;/a&gt; - Zabbix web interface on Nginx web server with MySQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-web-nginx-pgsql/&#34;&gt;zabbix-web-nginx-pgsql&lt;/a&gt; - Zabbix web interface on Nginx web server with PostgreSQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-proxy-sqlite3/&#34;&gt;zabbix-proxy-sqlite3&lt;/a&gt; - Zabbix proxy with SQLite3 database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-proxy-mysql/&#34;&gt;zabbix-proxy-mysql&lt;/a&gt; - Zabbix proxy with MySQL database support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-java-gateway/&#34;&gt;zabbix-java-gateway&lt;/a&gt; - Zabbix Java Gateway&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-web-service/&#34;&gt;zabbix-web-service&lt;/a&gt; - Zabbix web service for performing various tasks using headless web browser (for example, reporting)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/zabbix/zabbix-snmptraps/&#34;&gt;zabbix-snmptraps&lt;/a&gt; - Additional container image for Zabbix server and Zabbix proxy to support SNMP traps&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues and Wiki&lt;/h2&gt; &#xA;&lt;p&gt;Be sure to check &lt;a href=&#34;https://github.com/zabbix/zabbix-docker/wiki&#34;&gt;the Wiki-page&lt;/a&gt; on common problems and questions. If you still have problems with or questions about the images, please contact us through a &lt;a href=&#34;https://github.com/zabbix/zabbix-docker/issues&#34;&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.&lt;/p&gt; &#xA;&lt;p&gt;Before you start to code, we recommend discussing your plans through a &lt;a href=&#34;https://github.com/zabbix/zabbix-docker/issues&#34;&gt;GitHub issue&lt;/a&gt;, especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kodekloudhub/certified-kubernetes-administrator-course</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/kodekloudhub/certified-kubernetes-administrator-course</id>
    <link href="https://github.com/kodekloudhub/certified-kubernetes-administrator-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Certified Kubernetes Administrator - CKA Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Certified Kubernetes Administrator (CKA) Course&lt;/h1&gt; &#xA;&lt;p&gt;These are notes from the &lt;a href=&#34;https://kodekloud.com/courses/certified-kubernetes-administrator-cka/&#34;&gt;Certified Kubernetes Administrator Course&lt;/a&gt; hosted on KodeKloud.&lt;/p&gt; &#xA;&lt;h1&gt;Sections&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/01-Introduction&#34;&gt;01-Introduction&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/01-Introduction/01-Course-Introduction.md&#34;&gt;01-Course-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/01-Introduction/02-Certification.md&#34;&gt;02-Certification&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts&#34;&gt;02-Core-Concepts&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/01-Core-Concepts-Section-Introduction.md&#34;&gt;01-Core-Concepts-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/02-Cluster-Architecture.md&#34;&gt;02-Cluster-Architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/03-ETCD-For-Beginners.md&#34;&gt;03-ETCD-For-Beginners&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/04-ETCD-in-Kubernetes.md&#34;&gt;04-ETCD-in-Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/05-Kube-API-Server.md&#34;&gt;05-Kube-API-Server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/06-Kube-Controller-Manager.md&#34;&gt;06-Kube-Controller-Manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/07-Kube-Scheduler.md&#34;&gt;07-Kube-Scheduler&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/08-Kubelet.md&#34;&gt;08-Kubelet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/09-Kube-Proxy.md&#34;&gt;09-Kube-Proxy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/10-Pods.md&#34;&gt;10-Pods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/11-Practice-Test-Introduction.md&#34;&gt;11-Practice-Test-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/12-Practice-Test-PODs.md&#34;&gt;12-Practice-Test-PODs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/13-ReplicaSets.md&#34;&gt;13-ReplicaSets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/14-Practice-Tests-ReplicaSet.md&#34;&gt;14-Practice-Tests-ReplicaSet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/15-Deployments.md&#34;&gt;15-Deployments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/16-Practice-Tests-Deployments.md&#34;&gt;16-Practice-Tests-Deployments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/17-Namespaces.md&#34;&gt;17-Namespaces&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/18-Practice-Test-Namespaces.md&#34;&gt;18-Practice-Test-Namespaces&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/19-Services.md&#34;&gt;19-Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/20-Services-ClusterIP.md&#34;&gt;20-Services-ClusterIP&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/21-Practice-Test-Services.md&#34;&gt;21-Practice-Test-Services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/22-Imperative-Commands-with-kubectl.md&#34;&gt;22-Imperative-Commands-with-kubectl&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/23-Practice-Test-Imperative-Commands.md&#34;&gt;23-Practice-Test-Imperative-Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/24-Attachments.md&#34;&gt;24-Attachments&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling&#34;&gt;03-Scheduling&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/01-Scheduling-Section-Introduction.md&#34;&gt;01-Scheduling-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/02-Manual-Scheduling.md&#34;&gt;02-Manual-Scheduling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/03-Practice-Test-Manual-Scheduling.md&#34;&gt;03-Practice-Test-Manual-Scheduling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/04-Labels-and-Selectors.md&#34;&gt;04-Labels-and-Selectors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/05-Practice-Test-Scheduling.md&#34;&gt;05-Practice-Test-Scheduling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/06-Taints-and-Tolerations.md&#34;&gt;06-Taints-and-Tolerations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/07-Practice-Test-Taints-and-Tolerations.md&#34;&gt;07-Practice-Test-Taints-and-Tolerations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/08-Node-Selectors.md&#34;&gt;08-Node-Selectors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/09-Node-Affinity.md&#34;&gt;09-Node-Affinity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/10-Practice-Test-Node-Affinity.md&#34;&gt;10-Practice-Test-Node-Affinity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/11.Taints-and-Tolerations-vs-Node-Affinity.md&#34;&gt;11.Taints-and-Tolerations-vs-Node-Affinity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/12-Resource-Limits.md&#34;&gt;12-Resource-Limits&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/13-Practice-Test-Resource-Limits.md&#34;&gt;13-Practice-Test-Resource-Limits&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/14-DaemonSets.md&#34;&gt;14-DaemonSets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/15-Practice-Test-DaemonSets.md&#34;&gt;15-Practice-Test-DaemonSets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/16-Static-Pods.md&#34;&gt;16-Static-Pods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/17-Practice-Test-StaticPods.md&#34;&gt;17-Practice-Test-StaticPods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/18-Multiple-Schedulers.md&#34;&gt;18-Multiple-Schedulers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/19-Practice-Test-Multiple-Schedulers.md&#34;&gt;19-Practice-Test-Multiple-Schedulers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/20-Configuring-Kubernetes-Schedulers.md&#34;&gt;20-Configuring-Kubernetes-Schedulers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/21-Download-Presentation-Deck.md&#34;&gt;21-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring&#34;&gt;04-Logging-and-Monitoring&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/01-Logging-and-Monitoring-Section-Introduction.md&#34;&gt;01-Logging-and-Monitoring-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/02-Monitor-Cluster-Components.md&#34;&gt;02-Monitor-Cluster-Components&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/03-Practice-Test-Monitor-Cluster-Components.md&#34;&gt;03-Practice-Test-Monitor-Cluster-Components&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/04-Managing-Application-Logs.md&#34;&gt;04-Managing-Application-Logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/05-Download-Presentation-Deck.md&#34;&gt;05-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/06-Practice-Test-Managing-Application-Logs.md&#34;&gt;06-Practice-Test-Managing-Application-Logs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management&#34;&gt;05-Application-Lifecycle-Management&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/01-Application-Lifecycle-Management--Section-Introduction.md&#34;&gt;01-Application-Lifecycle-Management--Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/02-RollingUpdates-and-Rollback.md&#34;&gt;02-RollingUpdates-and-Rollback&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/03-Practice-Test-RollingUpdates-Rollback.md&#34;&gt;03-Practice-Test-RollingUpdates-Rollback&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/04-Commands-and-Arguments-in-Docker.md&#34;&gt;04-Commands-and-Arguments-in-Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/05-Commands-and-Arguments-in-Kubernetes.md&#34;&gt;05-Commands-and-Arguments-in-Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/06-Practice-Test-Commands-and-Arguments.md&#34;&gt;06-Practice-Test-Commands-and-Arguments&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/07.Configure-Environment-Variables-in-Applications.md&#34;&gt;07.Configure-Environment-Variables-in-Applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/08-Configure-ConfigMaps-in-Applications.md&#34;&gt;08-Configure-ConfigMaps-in-Applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/09-Practice-Test-Env-Variables.md&#34;&gt;09-Practice-Test-Env-Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/10.Secrets.md&#34;&gt;10.Secrets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/11.Practice-Test-Secrets.md&#34;&gt;11.Practice-Test-Secrets&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/12.Multi-Containers-PODs.md&#34;&gt;12.Multi-Containers-PODs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/13-Practice-Test-Multi-Container-Pods.md&#34;&gt;13-Practice-Test-Multi-Container-Pods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/14-Multi-Container-Pods-Design-Patterns.md&#34;&gt;14-Multi-Container-Pods-Design-Patterns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/15.Init-Containers.md&#34;&gt;15.Init-Containers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/16-Practice-Test-Init-Containers.md&#34;&gt;16-Practice-Test-Init-Containers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/17.Self-Healing-Applications.md&#34;&gt;17.Self-Healing-Applications&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/18.Download-Presentation-Deck.md&#34;&gt;18.Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance&#34;&gt;06-Cluster-Maintenance&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/01-Cluster-Maintenance-Section-Introduction.md&#34;&gt;01-Cluster-Maintenance-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/02-OS-Upgrades.md&#34;&gt;02-OS-Upgrades&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/03-Practice-Test-OS-Upgrades.md&#34;&gt;03-Practice-Test-OS-Upgrades&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/04-Kubernetes-Software-Versions.md&#34;&gt;04-Kubernetes-Software-Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/05-Cluster-Upgrade-Introduction.md&#34;&gt;05-Cluster-Upgrade-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/06-Practice-Test-Cluster-Upgrade-Process.md&#34;&gt;06-Practice-Test-Cluster-Upgrade-Process&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/07-Backup-and-Restore-Methods.md&#34;&gt;07-Backup-and-Restore-Methods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/08-Working-With-ETCDCTL.md&#34;&gt;08-Working-With-ETCDCTL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/09-Practice-Test-Backup-and-Restore-Methods.md&#34;&gt;09-Practice-Test-Backup-and-Restore-Methods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/10-Download-Presentation-Deck.md&#34;&gt;10-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security&#34;&gt;07-Security&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/01-Security-Section-Introduction.md&#34;&gt;01-Security-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/02-Kubernetes-Security-Primitives.md&#34;&gt;02-Kubernetes-Security-Primitives&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/03-Authentication.md&#34;&gt;03-Authentication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/04-TLS-Certificates.md&#34;&gt;04-TLS-Certificates&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/05-TLS-Basics.md&#34;&gt;05-TLS-Basics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/06-TLS-in-Kubernetes.md&#34;&gt;06-TLS-in-Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/07-TLS-in-Kubernetes-Certificate-Creation.md&#34;&gt;07-TLS-in-Kubernetes-Certificate-Creation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/08-View-Certificate-Details.md&#34;&gt;08-View-Certificate-Details&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/09-Certificate-Health-Check-Spreadsheet.md&#34;&gt;09-Certificate-Health-Check-Spreadsheet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/10-Practice-Test-View-Certificate-Details.md&#34;&gt;10-Practice-Test-View-Certificate-Details&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/11-Certificate-API.md&#34;&gt;11-Certificate-API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/12-Practice-Test-Certificates-API.md&#34;&gt;12-Practice-Test-Certificates-API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/13-kubeconfig.md&#34;&gt;13-kubeconfig&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/14-Practice-Test-KubeConfig.md&#34;&gt;14-Practice-Test-KubeConfig&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/15-API-Groups.md&#34;&gt;15-API-Groups&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/16-Authorization.md&#34;&gt;16-Authorization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/17-RBAC.md&#34;&gt;17-RBAC&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/18-Practice-Test-RBAC.md&#34;&gt;18-Practice-Test-RBAC&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/19-Cluster-Roles.md&#34;&gt;19-Cluster-Roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/20-Practice-Test-Cluster-Roles.md&#34;&gt;20-Practice-Test-Cluster-Roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/21-Image-Security.md&#34;&gt;21-Image-Security&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/22-Practice-Test-Image-Security.md&#34;&gt;22-Practice-Test-Image-Security&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/23-Security-Context.md&#34;&gt;23-Security-Context&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/24-Practice-Test-Security-Context.md&#34;&gt;24-Practice-Test-Security-Context&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/25-Network-Policies.md&#34;&gt;25-Network-Policies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/26-Practice-Test-Network-Policies.md&#34;&gt;26-Practice-Test-Network-Policies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/27-kubectx-and-kubens-commands.md&#34;&gt;27-kubectx-and-kubens-commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/28-Download-Presentation-Deck.md&#34;&gt;28-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage&#34;&gt;08-Storage&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/01-Storage-Section-Introduction.md&#34;&gt;01-Storage-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/02-Introduction-to-Docker-Storage.md&#34;&gt;02-Introduction-to-Docker-Storage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/03-Storage-in-Docker.md&#34;&gt;03-Storage-in-Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/04-Volume-Driver-Plugins-in-Docker.md&#34;&gt;04-Volume-Driver-Plugins-in-Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/05-Container.Storage-Interface.md&#34;&gt;05-Container.Storage-Interface&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/06-Volumes.md&#34;&gt;06-Volumes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/07-Persistent-Volumes.md&#34;&gt;07-Persistent-Volumes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/08-Persistent-Volume-Claims.md&#34;&gt;08-Persistent-Volume-Claims&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/09-Using-PVC-in-PODs.md&#34;&gt;09-Using-PVC-in-PODs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/10-Practice-Test-Persistent-Volume-Claims.md&#34;&gt;10-Practice-Test-Persistent-Volume-Claims&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/11-Download-Presentation-Deck.md&#34;&gt;11-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/12-Storage-Class.md&#34;&gt;12-Storage-Class&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/13-Practice-Test-Storage-Class.md&#34;&gt;13-Practice-Test-Storage-Class&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking&#34;&gt;09-Networking&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/01-Networking-Introduction.md&#34;&gt;01-Networking-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/02-Pre-requisite-Switching-Routing-Gateways.md&#34;&gt;02-Pre-requisite-Switching-Routing-Gateways&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/03-Pre-requisite-DNS.md&#34;&gt;03-Pre-requisite-DNS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/04-Pre-requisite-CoreDNS.md&#34;&gt;04-Pre-requisite-CoreDNS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/05-Pre-requisite-Network-Namespace.md&#34;&gt;05-Pre-requisite-Network-Namespace&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/06-Pre-requisite-Docker-Networking.mdd&#34;&gt;06-Pre-requisite-Docker-Networking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/07-Pre-requisite-CNI.md&#34;&gt;07-Pre-requisite-CNI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/08-Cluster-Networking.md&#34;&gt;08-Cluster-Networking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/09-Practice-Test-Explore-Env.md&#34;&gt;09-Practice-Test-Explore-Env&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/10-Pod-Networking.md&#34;&gt;10-Pod-Networking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/11-CNI-in-Kubernetes.md&#34;&gt;11-CNI-in-Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/12-CNI-weave.md&#34;&gt;12-CNI-weave&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/13-Practice-Test-CNI-weave.md&#34;&gt;13-Practice-Test-CNI-weave&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/14-Practice-Test-Deploy-Network-Solution.md&#34;&gt;14-Practice-Test-Deploy-Network-Solution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/15-ipam-weave.md&#34;&gt;15-ipam-weave&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/16-Practice-Test-Networking-weave.md&#34;&gt;16-Practice-Test-Networking-weave&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/17-Service-Networking.md&#34;&gt;17-Service-Networking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/18-Practice-Test-Service-Networking.md&#34;&gt;18-Practice-Test-Service-Networking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/19-DNS-in-kubernetes.md&#34;&gt;19-DNS-in-kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/20-CoreDNS-in-Kubernetes.md&#34;&gt;20-CoreDNS-in-Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/21-Practice-Test-CoreDNS-in-Kubernetes.md&#34;&gt;21-Practice-Test-CoreDNS-in-Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/22-Ingress.md&#34;&gt;22-Ingress&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/23-Ingress-Annotations-and-rewrite-target.md&#34;&gt;23-Ingress-Annotations-and-rewrite-target&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/24-Practice-Test-CKA-Ingress-Net-1.md&#34;&gt;24-Practice-Test-CKA-Ingress-Net-1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/25-Practice-Test-CKA-Ingress-Net-2.md&#34;&gt;25-Practice-Test-CKA-Ingress-Net-2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/26-Dowload-Presentation-Deck.md&#34;&gt;26-Dowload-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster&#34;&gt;10-Design-and-Install-Kubernetes-Cluster&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/01-Designing-a-Kubernetes-Cluster.md&#34;&gt;01-Designing-a-Kubernetes-Cluster&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/02-Choosing-Kubernetes-Infrastructure.md&#34;&gt;02-Choosing-Kubernetes-Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/03-Configure-High-Availability.md&#34;&gt;03-Configure-High-Availability&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/04-ETCD-in-HA.md&#34;&gt;04-ETCD-in-HA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/05-Important-update-kubernetes-the-hard-way.md&#34;&gt;05-Important-update-k8s-hard-way&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/06-Download-Presentation-Deck.md&#34;&gt;06-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way&#34;&gt;11-Install-Kubernetes-the-kubeadm-way&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/01-Introduction-to-Deployment-with-kubeadm.md&#34;&gt;01-Introduction-to-Deployment-with-kubeadm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/02-Resources.md&#34;&gt;02-Resources&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/03-Provision-VMs-with-Vagrant.md&#34;&gt;03-Provision-VMs-with-Vagrant&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/04-Demo-Deployment-with-Kubeadm.md&#34;&gt;04-Demo-Deployment-with-Kubeadm&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/05-Practice-Test-Deploy-Kubernetes-Cluster-using-Kubeadm.md&#34;&gt;05-Practice-Test-Deploy-Kubernetes-Cluster-using-Kubeadm&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting&#34;&gt;12-Troubleshooting&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/01-Troubelshooting-Section-Introduction.md&#34;&gt;01-Troubelshooting-Section-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/02-Application-Failure.md&#34;&gt;02-Application-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/03-Solution-Application-Failure.md&#34;&gt;03-Solution-Application-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/04-Control-Plane-Failure.md&#34;&gt;04-Control-Plane-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/05-Practice-Test-Control-Plane-Failure.md&#34;&gt;05-Practice-Test-Control-Plane-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/06-Solution-Control-Plane-Failure.md&#34;&gt;06-Solution-Control-Plane-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/07-Worker-Node-Failure.md&#34;&gt;07-Worker-Node-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/08-Practice-Test-Worker-Node-Failure.md&#34;&gt;08-Practice-Test-Worker-Node-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/09-Solution-Worker-Node-Failure.md&#34;&gt;09-Solution-Worker-Node-Failure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/10-Practice-Test-Troubleshoot-Network.md&#34;&gt;10-Practice-Test-Troubleshoot-Network&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics&#34;&gt;13-Other-Topics&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/01-Labs-JSON-PATH.md&#34;&gt;01-Labs-JSON-PATH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/02-Pre-Requisites-JSON-PATH.md&#34;&gt;02-Pre-Requisites-JSON-PATH&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/03-Advance-Kubectl-Commands.md&#34;&gt;03-Advance-Kubectl-Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/04-Practice-Test-Advance-Kubectl-Commands.md&#34;&gt;04-Practice-Test-Advance-Kubectl-Commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/14-Lightning-Labs&#34;&gt;14-Lightning-Labs&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/14-Lightning-Labs/01-Lightning-Labs-Introduction.md&#34;&gt;01-Lightning-Labs-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/14-Lightning-Labs/02-Lightning-Lab-1.md&#34;&gt;02-Lightning-Lab-1&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams&#34;&gt;15-Mock-Exams&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/01-Introduction.md&#34;&gt;01-Introduction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/02-Mock-Exam-1.md&#34;&gt;02-Mock-Exam-1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/03-Mock-Exam-2.md&#34;&gt;03-Mock-Exam-2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/04-CKA-MockExam-2-Solution.md&#34;&gt;04-CKA-MockExam-2-Solution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/05-Mock-Exam-3.md&#34;&gt;05-Mock-Exam-3&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/06-CKA-MockExam-3-Solution.md&#34;&gt;06-CKA-MockExam-3-Solution&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>catppuccin/catppuccin</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/catppuccin/catppuccin</id>
    <link href="https://github.com/catppuccin/catppuccin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;😸 Soothing pastel theme for the high-spirited!&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/logos/exports/1544x1544_circle.png&#34; width=&#34;100&#34; alt=&#34;Logo&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;30&#34; width=&#34;0px&#34;&gt; Catppuccin Theme &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;30&#34; width=&#34;0px&#34;&gt; &lt;/h3&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin#-palette&#34;&gt;Palettes&lt;/a&gt; · &lt;a href=&#34;https://github.com/catppuccin/catppuccin#-ports-and-more&#34;&gt;Ports&lt;/a&gt; · &lt;a href=&#34;https://github.com/catppuccin/catppuccin/tree/main/docs&#34;&gt;Docs&lt;/a&gt; &lt;/h6&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/macchiato.png&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin/stargazers&#34;&gt; &lt;img alt=&#34;Stargazers&#34; src=&#34;https://img.shields.io/github/stars/catppuccin/catppuccin?style=for-the-badge&amp;amp;logo=starship&amp;amp;color=C9CBFF&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin/releases/latest&#34;&gt; &lt;img alt=&#34;Releases&#34; src=&#34;https://img.shields.io/github/release/catppuccin/catppuccin.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;color=F2CDCD&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/catppuccin/catppuccin?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;color=B5E8E0&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/r6Mdz5dpFc&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/907385605422448742?style=for-the-badge&amp;amp;logo=discord&amp;amp;color=DDB6F2&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Catppuccin is a community-driven pastel theme that aims to be the middle ground between low and high contrast themes. It consists of 4 soothing warm palettes with 26 eye-candy colors each, perfect for coding, designing, and much more! In addition, this repository tracks the development of the actual color palette, &lt;a href=&#34;https://github.com/catppuccin/catppuccin/tree/dev/docs&#34;&gt;&lt;b&gt;the project&#39;s documentation&lt;/b&gt;&lt;/a&gt;, organization-wide assets, resources and code samples for maintainers/developers. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/r6Mdz5dpFc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/social/discord.png&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;Discord Logo&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;1&#34; width=&#34;5&#34;&gt; &lt;a href=&#34;https://github.com/catppuccin&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/social/github.png&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;Github Logo&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;1&#34; width=&#34;5&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/org/catppuccin&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/social/npm.svg?sanitize=true&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;Npm Logo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Join our community! &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;🧠 Design Philosophy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Colorful is better than colorless&lt;/strong&gt;: the colorfulness of something contributes to the distinction amongst the parts of that &lt;em&gt;something&lt;/em&gt;, making it marginally easier to understand how things are structured.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;There should be balance&lt;/strong&gt;: not too dull, not too bright. Suitability under various light conditions is a must.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Harmony is superior to dissonance&lt;/strong&gt;: vivacious colors must complement each other.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;🎨 Palettes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Catppuccin&lt;/strong&gt; constist of 4 beautiful pastel color palettes. All the details can be found below.&lt;br&gt; To make the best use them please refer to the &lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/main/docs/style-guide.md&#34;&gt;style guide&lt;/a&gt;. &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;10&#34; width=&#34;0&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🌻 Latte&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#dc8a78&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(220, 138, 120)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(11, 59%, 67%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#dd7878&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(221, 120, 120)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 60%, 67%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ea76cb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(234, 118, 203)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 73%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8839ef&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(136, 57, 239)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(266, 85%, 58%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#d20f39&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(210, 15, 57)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(347, 87%, 44%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e64553&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(230, 69, 83)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(355, 76%, 59%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#fe640b&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(254, 100, 11)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt; hsl(22, 99%, 52%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#df8e1d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(223, 142, 29)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(35, 77%, 49%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#40a02b&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(64, 160, 43)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(109, 58%, 40%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#179299&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(23, 146, 153)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(183, 74%, 35%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#04a5e5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(4, 165, 229)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(197, 97%, 46%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#209fb5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(32, 159, 181)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 70%, 42%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#1e66f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(30, 102, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 91%, 54%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7287fd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(114, 135, 253)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 97%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#4c4f69&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(76, 79, 105)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(234, 16%, 35%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#5c5f77&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(92, 95, 119)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 13%, 41%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#6c6f85&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(108, 111, 133)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 10%, 47%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7c7f93&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(124, 127, 147)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(232, 10%, 53%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8c8fa1&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(140, 143, 161)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 10%, 59%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#9ca0b0&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(156, 160, 176)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 11%, 65%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#acb0be&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(172, 176, 190)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 12%, 71%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#bcc0cc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(188, 192, 204)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(225, 14%, 77%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ccd0da&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(204, 208, 218)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(223, 16%, 83%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eff1f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(239, 241, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 23%, 95%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e6e9ef&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(230, 233, 239)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 22%, 92%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#dce0e8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(220, 224, 232)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 21%, 89%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🪴 Frappé&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f2d5cf&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(242, 213, 207)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(10, 57%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eebebe&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(238, 190, 190)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 59%, 84%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f4b8e4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(244, 184, 228)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 73%, 84%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ca9ee6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(202, 158, 230)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(277, 59%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e78284&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(231, 130, 132)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(359, 68%, 71%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ea999c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(234, 153, 156)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(358, 66%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ef9f76&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(239, 159, 118)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(20, 79%, 70%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e5c890&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(229, 200, 144)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(40, 62%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6d189&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 209, 137)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(96, 44%, 68%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#81c8be&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(129, 200, 190)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(172, 39%, 65%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#99d1db&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(153, 209, 219)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 48%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#85c1dc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(133, 193, 220)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(199, 55%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8caaee&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(140, 170, 238)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(222, 74%, 74%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#babbf1&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(186, 187, 241)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(239, 66%, 84%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#c6d0f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(198, 208, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 70%, 87%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b5bfe2&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(181, 191, 226)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 44%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a5adce&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(165, 173, 206)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 29%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#949cbb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(148, 156, 187)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 22%, 66%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#838ba7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(131, 139, 167)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 17%, 58%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#737994&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(115, 121, 148)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(229, 13%, 52%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#626880&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(98, 104, 128)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 13%, 44%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#51576d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(81, 87, 109)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 15%, 37%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#414559&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(65, 69, 89)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 16%, 30%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#303446&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(48, 52, 70)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(229, 19%, 23%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#292c3c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(41, 44, 60)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 19%, 20%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#232634&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(35, 38, 52)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(229, 20%, 17%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🌺 Macchiato&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f4dbd6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(244, 219, 214)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(10, 58%, 90%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f0c6c6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(240, 198, 198)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 58%, 86%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5bde6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 189, 230)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 74%, 85%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#c6a0f6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(198, 160, 246)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(267, 83%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ed8796&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(237, 135, 150)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(351, 74%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ee99a0&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(238, 153, 160)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(355, 71%, 77%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5a97f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 169, 127)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(21, 86%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eed49f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(238, 212, 159)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(40, 70%, 78%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6da95&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 218, 149)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(105, 48%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8bd5ca&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(139, 213, 202)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(171, 47%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#91d7e3&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(145, 215, 227)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 59%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7dc4e4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(125, 196, 228)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(199, 66%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8aadf4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(138, 173, 244)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 83%, 75%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b7bdf8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(183, 189, 248)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(234, 82%, 85%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#cad3f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(202, 211, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 68%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b8c0e0&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(184, 192, 224)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 39%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a5adcb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(165, 173, 203)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 27%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#939ab7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(147, 154, 183)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 20%, 65%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8087a2&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(128, 135, 162)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 15%, 57%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#6e738d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(110, 115, 141)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 12%, 49%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#5b6078&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(91, 96, 120)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 14%, 41%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#494d64&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(73, 77, 100)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 16%, 34%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#363a4f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(54, 58, 79)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 19%, 26%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#24273a&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(36, 39, 58)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(232, 23%, 18%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#1e2030&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(30, 32, 48)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 23%, 15%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#181926&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(24, 25, 38)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(236, 23%, 12%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🌿 Mocha&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5e0dc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 224, 220)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(10, 56%, 91%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f2cdcd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(242, 205, 205)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 59%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5c2e7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 194, 231)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 72%, 86%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#cba6f7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(203, 166, 247)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(267, 84%, 81%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f38ba8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(243, 139, 168)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(343, 81%, 75%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eba0ac&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(235, 160, 172)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(350, 65%, 77%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#fab387&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(250, 179, 135)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(23, 92%, 75%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f9e2af&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(249, 226, 175)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(41, 86%, 83%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6e3a1&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 227, 161)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(115, 54%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#94e2d5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(148, 226, 213)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(170, 57%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#89dceb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(137, 220, 235)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 71%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#74c7ec&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(116, 199, 236)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(199, 76%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#89b4fa&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(137, 180, 250)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(217, 92%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b4befe&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(180, 190, 254)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(232, 97%, 85%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#cdd6f4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(205, 214, 244)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(226, 64%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#bac2de&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(186, 194, 222)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 35%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6adc8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 173, 200)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 24%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#9399b2&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(147, 153, 178)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 17%, 64%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7f849c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(127, 132, 156)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 13%, 55%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#6c7086&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(108, 112, 134)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 11%, 47%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#585b70&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(88, 91, 112)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 12%, 39%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#45475a&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(69, 71, 90)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(234, 13%, 31%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#313244&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(49, 50, 68)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(237, 16%, 23%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#1e1e2e&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(30, 30, 46)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(240, 21%, 15%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#181825&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(24, 24, 37)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(240, 21%, 12%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#11111b&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(17, 17, 27)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(240, 23%, 9%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;🪵 Ports and more!&lt;/h3&gt; &#xA;&lt;p&gt;Catppuccin is available for various apps and in different formats. Here is a list of them:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: recently &lt;a href=&#34;https://github.com/catppuccin/catppuccin/releases/tag/v0.2.0&#34;&gt;Ctp v0.2.0&lt;/a&gt; was released and thus most of the ports need to be updated. Please refer to &lt;a href=&#34;https://github.com/orgs/catppuccin/projects/2&#34;&gt;this&lt;/a&gt; Kanban project to check out the progress made so far.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;IDEs/DEs&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/nvim&#34;&gt;Nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/vscode&#34;&gt;Vscode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/sublime-text&#34;&gt;Sublime-text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/emacs&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/jetbrains&#34;&gt;Jetbrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/geany&#34;&gt;Geany&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/micro&#34;&gt;Micro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/vim&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/helix&#34;&gt;Helix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/kakoune&#34;&gt;Kakoune&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Development&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/template&#34;&gt;Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/wallpapers&#34;&gt;Wallpapers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/palette&#34;&gt;Palette&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/toolbox&#34;&gt;Toolbox&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;System&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/xresources&#34;&gt;Xresources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/cava&#34;&gt;Cava&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/gtk&#34;&gt;Gtk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/btop&#34;&gt;Btop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/mako&#34;&gt;Mako&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/kde&#34;&gt;Kde&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/grub&#34;&gt;Grub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/sddm&#34;&gt;Sddm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/rofi&#34;&gt;Rofi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/plank&#34;&gt;Plank&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/lxqt&#34;&gt;Lxqt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/floris-board&#34;&gt;Floris-board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/cursors&#34;&gt;Cursors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/dunst&#34;&gt;Dunst&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/papirus-folders&#34;&gt;Papirus-folders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/alfred&#34;&gt;Alfred&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/fzf&#34;&gt;Fzf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/conky&#34;&gt;Conky&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Shells&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/fish&#34;&gt;Fish&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Productivity&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/zathura&#34;&gt;Zathura&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/github&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Leisure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/spicetify&#34;&gt;Spicetify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/spotify-player&#34;&gt;spotify-player&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Browsers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/duckduckgo&#34;&gt;Duckduckgo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/firefox&#34;&gt;Firefox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/vimium&#34;&gt;Vimium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/chrome&#34;&gt;Chrome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/whoogle&#34;&gt;Whoogle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/dark-reader&#34;&gt;Dark-reader&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Messaging&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/telegram&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/revolt&#34;&gt;Revolt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/discord&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Note-taking&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/obsidian&#34;&gt;Obsidian&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Terminals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/alacritty&#34;&gt;Alacritty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/st&#34;&gt;St&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/hyper&#34;&gt;Hyper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/iterm&#34;&gt;Iterm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/urxvt&#34;&gt;Urxvt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/gnome-terminal&#34;&gt;Gnome-terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/terminator&#34;&gt;Terminator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/kitty&#34;&gt;Kitty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/tmux&#34;&gt;Tmux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/termux&#34;&gt;Termux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/konsole&#34;&gt;Konsole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/xfce4-terminal&#34;&gt;Xfce4-terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/windows-terminal&#34;&gt;Windows-terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/contour&#34;&gt;Contour&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/wezterm&#34;&gt;Wezterm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/tym&#34;&gt;Tym&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/fcitx5&#34;&gt;Fcitx5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/zellij&#34;&gt;Zellij&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/foot&#34;&gt;Foot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Social&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/libreddit&#34;&gt;Libreddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/monkeytype&#34;&gt;Monkeytype&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/youtube&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/mailspring&#34;&gt;Mailspring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/Aliucord&#34;&gt;Aliucord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/github-readme-stats&#34;&gt;Github-readme-stats&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;👐 Contribute&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;📜 License&lt;/h3&gt; &#xA;&lt;p&gt;Catppuccin is released under the MIT license, which grants the following permissions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commercial use&lt;/li&gt; &#xA; &lt;li&gt;Distribution&lt;/li&gt; &#xA; &lt;li&gt;Modification&lt;/li&gt; &#xA; &lt;li&gt;Private use&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more convoluted language, see the &lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;❤️ Gratitude&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the following tools developing this project is possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolors.co/&#34;&gt;coolors.co&lt;/a&gt;: A tool for creating and collecting color palettes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inkscape.org/&#34;&gt;InkScape&lt;/a&gt;: Free and open-source vector graphics editor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/colors/colors_converter.asp&#34;&gt;colors_converter.asp&lt;/a&gt;: Color format converter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mdigi.tools/&#34;&gt;mdigi.tools&lt;/a&gt;: Web based digital tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/footers/gray0_ctp_on_line.svg?sanitize=true&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Copyright © 2021-present &lt;a href=&#34;https://github.com/catppuccin&#34; target=&#34;_blank&#34;&gt;Catppuccin Org&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?style=for-the-badge&amp;amp;label=License&amp;amp;message=MIT&amp;amp;logoColor=d9e0ee&amp;amp;colorA=302d41&amp;amp;colorB=c9cbff&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kylemanna/docker-openvpn</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/kylemanna/docker-openvpn</id>
    <link href="https://github.com/kylemanna/docker-openvpn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔒 OpenVPN server in a Docker container complete with an EasyRSA PKI CA&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenVPN for Docker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/kylemanna/docker-openvpn&#34;&gt;&lt;img src=&#34;https://travis-ci.org/kylemanna/docker-openvpn.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kylemanna/openvpn/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/kylemanna/openvpn.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kylemanna/openvpn/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kylemanna/openvpn.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/#/images/kylemanna/openvpn&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/kylemanna/openvpn.svg?sanitize=true&#34; alt=&#34;ImageLayers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fkylemanna%2Fdocker-openvpn?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fkylemanna%2Fdocker-openvpn.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN server in a Docker container complete with an EasyRSA PKI CA.&lt;/p&gt; &#xA;&lt;p&gt;Extensively tested on &lt;a href=&#34;http://bit.ly/1C7cKr3&#34;&gt;Digital Ocean $5/mo node&lt;/a&gt; and has a corresponding &lt;a href=&#34;http://bit.ly/1AGUZkq&#34;&gt;Digital Ocean Community Tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Upstream Links&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker Registry @ &lt;a href=&#34;https://hub.docker.com/r/kylemanna/openvpn/&#34;&gt;kylemanna/openvpn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub @ &lt;a href=&#34;https://github.com/kylemanna/docker-openvpn&#34;&gt;kylemanna/docker-openvpn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pick a name for the &lt;code&gt;$OVPN_DATA&lt;/code&gt; data volume container. It&#39;s recommended to use the &lt;code&gt;ovpn-data-&lt;/code&gt; prefix to operate seamlessly with the reference systemd service. Users are encourage to replace &lt;code&gt;example&lt;/code&gt; with a descriptive name of their choosing.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;OVPN_DATA=&#34;ovpn-data-example&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize the &lt;code&gt;$OVPN_DATA&lt;/code&gt; container that will hold the configuration files and certificates. The container will prompt for a passphrase to protect the private key used by the newly generated certificate authority.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker volume create --name $OVPN_DATA&#xA;docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://VPN.SERVERNAME.COM&#xA;docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start OpenVPN server process&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -v $OVPN_DATA:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate a client certificate without a passphrase&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full CLIENTNAME nopass&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Retrieve the client configuration with embedded certificates&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient CLIENTNAME &amp;gt; CLIENTNAME.ovpn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;h3&gt;More Reading&lt;/h3&gt; &#xA;&lt;p&gt;Miscellaneous write-ups for advanced configurations are available in the &lt;a href=&#34;https://raw.githubusercontent.com/kylemanna/docker-openvpn/master/docs&#34;&gt;docs&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Systemd Init Scripts&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;systemd&lt;/code&gt; init script is available to manage the OpenVPN container. It will start the container on system boot, restart the container if it exits unexpectedly, and pull updates from Docker Hub to keep itself up to date.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/kylemanna/docker-openvpn/master/docs/systemd.md&#34;&gt;systemd documentation&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use &lt;code&gt;docker-compose&lt;/code&gt; please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/kylemanna/docker-openvpn/master/docs/docker-compose.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an environment variable with the name DEBUG and value of 1 to enable debug output (using &#34;docker -e&#34;).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  docker run -v $OVPN_DATA:/etc/openvpn -p 1194:1194/udp --cap-add=NET_ADMIN -e DEBUG=1 kylemanna/openvpn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Test using a client that has openvpn installed correctly&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ openvpn --config CLIENTNAME.ovpn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run through a barrage of debugging checks on the client if things don&#39;t just work&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ ping 8.8.8.8    # checks connectivity without touching name resolution&#xA;  $ dig google.com  # won&#39;t use the search directives in resolv.conf&#xA;  $ nslookup google.com # will use search&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consider setting up a &lt;a href=&#34;https://raw.githubusercontent.com/kylemanna/docker-openvpn/master/docs/systemd.md&#34;&gt;systemd service&lt;/a&gt; for automatic start-up at boot time and restart in the event the OpenVPN daemon or Docker crashes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Does It Work?&lt;/h2&gt; &#xA;&lt;p&gt;Initialize the volume container using the &lt;code&gt;kylemanna/openvpn&lt;/code&gt; image with the included scripts to automatically generate:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Diffie-Hellman parameters&lt;/li&gt; &#xA; &lt;li&gt;a private key&lt;/li&gt; &#xA; &lt;li&gt;a self-certificate matching the private key for the OpenVPN server&lt;/li&gt; &#xA; &lt;li&gt;an EasyRSA CA key and certificate&lt;/li&gt; &#xA; &lt;li&gt;a TLS auth key from HMAC security&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The OpenVPN server is started with the default run cmd of &lt;code&gt;ovpn_run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The configuration is located in &lt;code&gt;/etc/openvpn&lt;/code&gt;, and the Dockerfile declares that directory as a volume. It means that you can start another container with the &lt;code&gt;-v&lt;/code&gt; argument, and access the configuration. The volume also holds the PKI keys and certs so that it could be backed up.&lt;/p&gt; &#xA;&lt;p&gt;To generate a client certificate, &lt;code&gt;kylemanna/openvpn&lt;/code&gt; uses EasyRSA via the &lt;code&gt;easyrsa&lt;/code&gt; command in the container&#39;s path. The &lt;code&gt;EASYRSA_*&lt;/code&gt; environmental variables place the PKI CA under &lt;code&gt;/etc/openvpn/pki&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Conveniently, &lt;code&gt;kylemanna/openvpn&lt;/code&gt; comes with a script called &lt;code&gt;ovpn_getclient&lt;/code&gt;, which dumps an inline OpenVPN client configuration file. This single file can then be given to a client for access to the VPN.&lt;/p&gt; &#xA;&lt;p&gt;To enable Two Factor Authentication for clients (a.k.a. OTP) see &lt;a href=&#34;https://raw.githubusercontent.com/kylemanna/docker-openvpn/master/docs/otp.md&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;OpenVPN Details&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;code&gt;tun&lt;/code&gt; mode, because it works on the widest range of devices. &lt;code&gt;tap&lt;/code&gt; mode, for instance, does not work on Android, except if the device is rooted.&lt;/p&gt; &#xA;&lt;p&gt;The topology used is &lt;code&gt;net30&lt;/code&gt;, because it works on the widest range of OS. &lt;code&gt;p2p&lt;/code&gt;, for instance, does not work on Windows.&lt;/p&gt; &#xA;&lt;p&gt;The UDP server uses&lt;code&gt;192.168.255.0/24&lt;/code&gt; for dynamic clients by default.&lt;/p&gt; &#xA;&lt;p&gt;The client profile specifies &lt;code&gt;redirect-gateway def1&lt;/code&gt;, meaning that after establishing the VPN connection, all traffic will go through the VPN. This might cause problems if you use local DNS recursors which are not directly reachable, since you will try to reach them through the VPN and they might not answer to you. If that happens, use public DNS resolvers like those of Google (8.8.4.4 and 8.8.8.8) or OpenDNS (208.67.222.222 and 208.67.220.220).&lt;/p&gt; &#xA;&lt;h2&gt;Security Discussion&lt;/h2&gt; &#xA;&lt;p&gt;The Docker container runs its own EasyRSA PKI Certificate Authority. This was chosen as a good way to compromise on security and convenience. The container runs under the assumption that the OpenVPN container is running on a secure host, that is to say that an adversary does not have access to the PKI files under &lt;code&gt;/etc/openvpn/pki&lt;/code&gt;. This is a fairly reasonable compromise because if an adversary had access to these files, the adversary could manipulate the function of the OpenVPN server itself (sniff packets, create a new PKI CA, MITM packets, etc).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The certificate authority key is kept in the container by default for simplicity. It&#39;s highly recommended to secure the CA key with some passphrase to protect against a filesystem compromise. A more secure system would put the EasyRSA PKI CA on an offline system (can use the same Docker image and the script &lt;a href=&#34;https://raw.githubusercontent.com/kylemanna/docker-openvpn/master/docs/paranoid.md&#34;&gt;&lt;code&gt;ovpn_copy_server_files&lt;/code&gt;&lt;/a&gt; to accomplish this).&lt;/li&gt; &#xA; &lt;li&gt;It would be impossible for an adversary to sign bad or forged certificates without first cracking the key&#39;s passphase should the adversary have root access to the filesystem.&lt;/li&gt; &#xA; &lt;li&gt;The EasyRSA &lt;code&gt;build-client-full&lt;/code&gt; command will generate and leave keys on the server, again possible to compromise and steal the keys. The keys generated need to be signed by the CA which the user hopefully configured with a passphrase as described above.&lt;/li&gt; &#xA; &lt;li&gt;Assuming the rest of the Docker container&#39;s filesystem is secure, TLS + PKI security should prevent any malicious host from using the VPN.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benefits of Running Inside a Docker Container&lt;/h2&gt; &#xA;&lt;h3&gt;The Entire Daemon and Dependencies are in the Docker Image&lt;/h3&gt; &#xA;&lt;p&gt;This means that it will function correctly (after Docker itself is setup) on all distributions Linux distributions such as: Ubuntu, Arch, Debian, Fedora, etc. Furthermore, an old stable server can run a bleeding edge OpenVPN server without having to install/muck with library dependencies (i.e. run latest OpenVPN with latest OpenSSL on Ubuntu 12.04 LTS).&lt;/p&gt; &#xA;&lt;h3&gt;It Doesn&#39;t Stomp All Over the Server&#39;s Filesystem&lt;/h3&gt; &#xA;&lt;p&gt;Everything for the Docker container is contained in two images: the ephemeral run time image (kylemanna/openvpn) and the &lt;code&gt;$OVPN_DATA&lt;/code&gt; data volume. To remove it, remove the corresponding containers, &lt;code&gt;$OVPN_DATA&lt;/code&gt; data volume and Docker image and it&#39;s completely removed. This also makes it easier to run multiple servers since each lives in the bubble of the container (of course multiple IPs or separate ports are needed to communicate with the world).&lt;/p&gt; &#xA;&lt;h3&gt;Some (arguable) Security Benefits&lt;/h3&gt; &#xA;&lt;p&gt;At the simplest level compromising the container may prevent additional compromise of the server. There are many arguments surrounding this, but the take away is that it certainly makes it more difficult to break out of the container. People are actively working on Linux containers to make this more of a guarantee in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Differences from jpetazzo/dockvpn&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No longer uses serveconfig to distribute the configuration via https&lt;/li&gt; &#xA; &lt;li&gt;Proper PKI support integrated into image&lt;/li&gt; &#xA; &lt;li&gt;OpenVPN config files, PKI keys and certs are stored on a storage volume for re-use across containers&lt;/li&gt; &#xA; &lt;li&gt;Addition of tls-auth for HMAC security&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Originally Tested On&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker hosts: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;server a &lt;a href=&#34;https://www.digitalocean.com/?refcode=d19f7fe88c94&#34;&gt;Digital Ocean&lt;/a&gt; Droplet with 512 MB RAM running Ubuntu 14.04&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clients &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Android App OpenVPN Connect 1.1.14 (built 56) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;OpenVPN core 3.0 android armv7a thumb2 32-bit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;OS X Mavericks with Tunnelblick 3.4beta26 (build 3828) using openvpn-2.3.4&lt;/li&gt; &#xA;   &lt;li&gt;ArchLinux OpenVPN pkg 2.3.4-1&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fkylemanna%2Fdocker-openvpn?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fkylemanna%2Fdocker-openvpn.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jgraph/drawio-desktop</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/jgraph/drawio-desktop</id>
    <link href="https://github.com/jgraph/drawio-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a diagramming and whiteboarding desktop app based on &lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt; that wraps the &lt;a href=&#34;https://github.com/jgraph/drawio&#34;&gt;core draw.io editor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download built binaries from the &lt;a href=&#34;https://github.com/jgraph/drawio-desktop/releases&#34;&gt;releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; &lt;em&gt;in the root directory of this repo&lt;/em&gt; runs the app. For debugging, use &lt;code&gt;npm start --enable-logging&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To release:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; &#xA; &lt;li&gt;Wait for the builds to complete (&lt;a href=&#34;https://travis-ci.org/jgraph/drawio-desktop&#34;&gt;https://travis-ci.org/jgraph/drawio-desktop&lt;/a&gt; and &lt;a href=&#34;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&#34;&gt;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/jgraph/drawio-desktop/releases&#34;&gt;https://github.com/jgraph/drawio-desktop/releases&lt;/a&gt;, edit the preview release.&lt;/li&gt; &#xA; &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add release notes&lt;/li&gt; &#xA; &lt;li&gt;Publish release&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt; &#xA;&lt;h2&gt;Open-source, not open-contribution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sqlite.org/copyright.html&#34;&gt;Similar to SQLite&lt;/a&gt;, diagrams.net is open source but closed to contributions.&lt;/p&gt; &#xA;&lt;p&gt;The level of complexity of this project means that even simple changes can break a &lt;em&gt;lot&lt;/em&gt; of other moving parts. The amount of testing required is far more than it first seems. If we were to receive a PR, we&#39;d have to basically throw it away and write it how we want it to be implemented.&lt;/p&gt; &#xA;&lt;p&gt;We are grateful for community involvement, bug reports, &amp;amp; feature requests. We do not wish to come off as anything but welcoming, however, we&#39;ve made the decision to keep this project closed to contributions for the long term viability of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Jeevan-kumar-Raj/Grokking-System-Design</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/Jeevan-kumar-Raj/Grokking-System-Design</id>
    <link href="https://github.com/Jeevan-kumar-Raj/Grokking-System-Design" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Systems design is the process of defining the architecture, modules, interfaces, and data for a system to satisfy specified requirements. Systems design could be seen as the application of systems theory to product development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.educative.io/collection/5668639101419520/5649050225344512&#34;&gt;Grokking System Design Interview&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://www.educative.io&#34;&gt;educative&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Interview Process&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scope the problem &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Don’t make assumptions.&lt;/li&gt; &#xA;   &lt;li&gt;Ask clarifying questions to understand the constraints and use cases.&lt;/li&gt; &#xA;   &lt;li&gt;Steps &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Requirements clarifications&lt;/li&gt; &#xA;     &lt;li&gt;System interface definition&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sketch up an abstract design &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Building blocks of the system&lt;/li&gt; &#xA;   &lt;li&gt;Relationships between them&lt;/li&gt; &#xA;   &lt;li&gt;Steps &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Back-of-the-envelope estimation&lt;/li&gt; &#xA;     &lt;li&gt;Defining data model&lt;/li&gt; &#xA;     &lt;li&gt;High-level design&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Identify and address the bottlenecks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use the fundamental principles of scalable system design&lt;/li&gt; &#xA;   &lt;li&gt;Steps &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Detailed design&lt;/li&gt; &#xA;     &lt;li&gt;Identifying and resolving bottlenecks&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Distributed System Design Basics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/key-characteristics.md&#34;&gt;Key Characterics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/load-balancing.md&#34;&gt;Load balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/caching.md&#34;&gt;Caching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/sharding.md&#34;&gt;Sharding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/indexes.md&#34;&gt;Indexes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/proxies.md&#34;&gt;Proxies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/queues.md&#34;&gt;Queues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/redundancy.md&#34;&gt;Redundancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/sql-vs-nosql.md&#34;&gt;SQL vs. NoSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/cap-theorem.md&#34;&gt;CAP Theorem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/consistent-hashing.md&#34;&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/client-server-communication.md&#34;&gt;Client Server Communication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Designs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/short-url.md&#34;&gt;Short URL Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/pastebin.md&#34;&gt;Pastebin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/instagram.md&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/dropbox.md&#34;&gt;Dropbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/twitter.md&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/youtube.md&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/twitter-search.md&#34;&gt;Twitter Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/web-crawler.md&#34;&gt;Web Crawler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/facebook-newsfeed.md&#34;&gt;Facebook Newsfeed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/yelp.md&#34;&gt;Yelp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/uber-backend.md&#34;&gt;Uber Backend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/ticketmaster.md&#34;&gt;Ticketmaster&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Design Interviews: A step by step guide&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;SYSTEM DESIGN PREPARATION&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to prepare for and answer system design questions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Objective&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Learning about and implementing large-scale distributed system is not easy. I do not want to give the impression that it&#39;s something that can be learnt in a month.&lt;/em&gt; What this repository aims to achieve, is for software engineers and students to get a rough idea of how the thought process of designing a large scale works and how big companies have managed to solve really hard problems. Along with that, there is a recent trend for companies to have an open-ended interview with system design questions, which is at times hard for engineers of all levels if they haven&#39;t gotten the opportunity to work on such systems themselves.&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of links/documents for the following use cases: a) Prepare for a system design or open-ended rounds. b) Learn more about how large-scale systems work and thought process of designing a new system.&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#start&#34;&gt;Starting point&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#basics&#34;&gt;basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#howtoans&#34;&gt;How to answer in interviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#myapproach&#34;&gt;Steps how I approach the system design questions in interviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#designques&#34;&gt;Common Design questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#architecture&#34;&gt;architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#blog&#34;&gt;company engineering blog links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#tldr&#34;&gt;Low on time ?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;start&#34;&gt; Starting point &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For a very broad overview please go through these lectures, really useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX&#34;&gt;Gaurav Sen&#39;s system design series&lt;/a&gt; Starts from simple stuff like load balancing and message queues, then moves to building full systems like Whatsapp and Tinder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-W9F__D3oY4&amp;amp;list=PLmhRNZyYVpDmLpaVQm3mK5PY5KB_4hLjE&amp;amp;index=10&#34;&gt;david malans cs75 scalability talk&lt;/a&gt; Feel free to go through other lectures if needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.udacity.com/course/web-development--cs253&#34;&gt;david huffman&#39;s talk , scaling up talk&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=pjNTgULVVf4&amp;amp;list=PLVi1LmRuKQ0NINQfjKLVen7J2lZFL35wP&amp;amp;index=1&#34;&gt;Youtube link&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.lecloud.net/tagged/scalability&#34;&gt;scalability for dummies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;&#34;&gt;Designing data intensive appliations&lt;/a&gt; This is by far one of the best books about large-scale systems and the practical challenges encountered during building them. It&#39;s focussed more on data-oriented applications though.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These talks should give you a starting point on how to think about such problems.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;basics&#34;&gt; Basics &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;But before you begin, here are some topics(in no particular order) which in my opinion you should have a decent idea of before proceeding.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Operating system basics: how a file system, virtual memory, paging, instruction execution cycle etc work (For starters silbershatz should be enough. If you already have decent knowledge try stallings book on OS)&lt;/li&gt; &#xA; &lt;li&gt;Networking basics: Should know the TCP/IP stack, basics of how Internet, HTTP, TCP/IP work at the minimum. cs75 on youtube (1st lecture) should give a broad overview. I personally love &lt;a href=&#34;http://www.amazon.com/Computer-Networking-Top-Down-Approach-Edition/dp/0132856204&#34;&gt;networking-a top down approach&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Concurrency basics: threads, processes, threading in the language you know. Locks , mutex etc.&lt;/li&gt; &#xA; &lt;li&gt;DB basics: types of DB&#39;s (SQL vs noSQL etc ), hashing and indexing, EAV based databases, Sharding, caching for databases, master-slave etc&lt;/li&gt; &#xA; &lt;li&gt;A basic idea of how a basic web architecture is: say load balancers, proxy, servers, Database servers, caching servers, precompute, logging big data etc. Just know broadly what is each layer for.&lt;/li&gt; &#xA; &lt;li&gt;very basic summary of what the &lt;a href=&#34;http://robertgreiner.com/2014/08/cap-theorem-revisited/&#34;&gt;CAP theorem&lt;/a&gt; is (Have never been asked about the theorem itself, but knowing it will help you in designing large-scale systems.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;howtoans&#34;&gt; How to answer in interviews &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;I found &lt;a href=&#34;http://www.hiredintech.com/system-design&#34;&gt;hiredintech&lt;/a&gt; videos an excellent place to start with. The way how to approach a design question as given in the link is really useful. It goes into how we start with clearing the use-cases of the system, then thinking in the abstract manner of the various component and the interactions. Think about the bottlenecks of the system and what is more critical for your system (eg latency vs reliability vs uptime etc) Address those giving the tradeoff of your approach.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.flipkart.com/cracking-coding-interview-150-programming-questions-solutions-english-5th/p/itmdz4pvzbhcv6uv&#34;&gt;system design in crack the coding interview&lt;/a&gt;: good approach on how to begin attacking a problem by first solving for a small usecase then expanding the system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The best way to prepare for such questions is do mock interviews, pick any topic (given below) try to come up with a design and then go and see how and why it is designed in that manner. There is absolutely no alternative to practice!! Whiteboarding a system design question is similar to actually writing code and testing it! Just reading will only take you so far.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;myapproach&#34;&gt;Steps how I approach the system design questions in interviews&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;These are the steps I go through mentally in the interviews, followed by actual interview experiences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a) &lt;strong&gt;Be absolutely sure you understand the problem being asked&lt;/strong&gt;, clarify on the onset rather than assuming anything&lt;/li&gt; &#xA; &lt;li&gt;b) &lt;strong&gt;Use-cases&lt;/strong&gt;. This is critical, you MUST know what is the system going to be used for, what is the scale it is going to be used for. Also, constraints like requests per second, requests types, data written per second, data read per second.&lt;/li&gt; &#xA; &lt;li&gt;c) Solve the problem for a &lt;strong&gt;very small set&lt;/strong&gt;, say, 100 users. This will broadly help you figure out the data structures, components, abstract design of the overall model.&lt;/li&gt; &#xA; &lt;li&gt;d) Write down the various components figured out so far and how will they interact with each other.&lt;/li&gt; &#xA; &lt;li&gt;e) As a rule of thumb remember at least these :&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;processing and servers&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;storage&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;3&#34;&gt; &#xA;   &lt;li&gt;caching&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;4&#34;&gt; &#xA;   &lt;li&gt;concurrency and communication&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;5&#34;&gt; &#xA;   &lt;li&gt;security&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;6&#34;&gt; &#xA;   &lt;li&gt;load balancing and proxy&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;7&#34;&gt; &#xA;   &lt;li&gt;CDN&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;8&#34;&gt; &#xA;   &lt;li&gt;Monetization: if relevant, how will you monetize? eg. What kind of DB (Is Postgres enough, if not why?), do you need caching and how much, is security a prime concern?&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;f) &lt;strong&gt;Special cases&lt;/strong&gt; for the question asked. Say designing a system for storing thumbnails, will a file system be enough? What if you have to scale for facebook or google? Will a nosql based database work?&lt;/li&gt; &#xA; &lt;li&gt;g) After I have my components in place, what I generally try to do is look for minor optimization in various places according to the use-cases, various tradeoffs that will help in better scaling in 99% cases.&lt;/li&gt; &#xA; &lt;li&gt;h) [Scaling out or up] (&lt;a href=&#34;http://highscalability.com/blog/2014/5/12/4-architecture-issues-when-scaling-web-applications-bottlene.html&#34;&gt;http://highscalability.com/blog/2014/5/12/4-architecture-issues-when-scaling-web-applications-bottlene.html&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;i) Check with the interviewer is there any other special case he is looking to solve? Also, it really helps if you know about the company you are interviewing with, what its architecture is, what will the interviewer have more interest in based on the company and what he works on?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;designques&#34;&gt; Common Design questions &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;It generally depends what you are and you will be working on. Also what your level is but these are some of the more frequent interview questions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Design amazon&#39;s frequently viewed product page (eg. which shows the last 5 items you saw)&lt;/li&gt; &#xA; &lt;li&gt;Design an online poker game for multiplayer. Solve for persistence, concurrency, scale. Draw the ER diagram for this&lt;/li&gt; &#xA; &lt;li&gt;Design a [url compression system] (&lt;a href=&#34;http://www.hiredintech.com/system-design/the-system-design-process/&#34;&gt;http://www.hiredintech.com/system-design/the-system-design-process/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://infolab.stanford.edu/~backrub/google.html&#34;&gt;Search engine&lt;/a&gt; (generally asked with people who have some domain knowledge): basic crawling, collection, hashing etc. Depends on your expertise on this topic&lt;/li&gt; &#xA; &lt;li&gt;Design dropbox&#39;s architecture. &lt;a href=&#34;https://www.youtube.com/watch?v=PE4gwstWhmc&#34;&gt;good talk on this&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Design a &lt;a href=&#34;http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html&#34;&gt;picture sharing website&lt;/a&gt;. How will you store thumbnails, photos? Usage of CDNS? caching at various layers etc.&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Design a news feed (eg. Facebook , Twitter): &lt;a href=&#34;http://www.quora.com/Software-Engineering-Best-Practices/What-are-best-practices-for-building-something-like-a-News-Feed&#34;&gt;news feed&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Design a product based on maps, eg hotel / ATM finder given a location.&lt;/li&gt; &#xA; &lt;li&gt;Design malloc, free and &lt;a href=&#34;http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf&#34;&gt;garbage collection system&lt;/a&gt;. What data structures to use? decorator pattern over malloc etc.&lt;/li&gt; &#xA; &lt;li&gt;Design a site like &lt;a href=&#34;http://www.junglee.com/&#34;&gt;junglee.com&lt;/a&gt; i.e price comparision, availability on e-commerce websites. When and will you cache, how much to query, how to crawl efficiently over e-commerce sites, sharding of databases, basic database design&lt;/li&gt; &#xA; &lt;li&gt;A web application for instant messaging, eg &lt;a href=&#34;http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html&#34;&gt;whatsapp&lt;/a&gt;, facebook chat. Issues of each, scaling problems, status and availability notification etc.&lt;/li&gt; &#xA; &lt;li&gt;Design a system for collaborating over a document simultaneously (eg &lt;a href=&#34;https://neil.fraser.name/writing/sync/&#34;&gt;google docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;(very common:) top &#39;n&#39; or most frequent items of a running stream of data&lt;/li&gt; &#xA; &lt;li&gt;Design election commission architecture : Let&#39;s say we work with the Election Commission. On Counting day, we want to collate the votes received at the lakhs of voting booths all over the country. Each booth has a voting machine, which, when connected to the network, returns an array of the form {[party_id, num_votes],[party_id_2, num_votes_2],...}. We want to collect these and get the current scores in real time. The report we need continuously is how many seats is each party leading in. Please design a system for this.&lt;/li&gt; &#xA; &lt;li&gt;Design a logging system (For web applications, it is common to have a large number of servers running the same application, with a load balancer in front to distribute the incoming requests. In this scenario, we want to check and alarm in case an exception is thrown in any of the servers. We want a system that checks for the appearance of specific words, &#34;Exception&#34;, &#34;Disk Full&#34; etc. in the logs of any of the servers. How would you design this system?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;architecture&#34;&gt;Architectures :&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Personally I looked into the following architectures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://infolab.stanford.edu/~backrub/google.html&#34;&gt;Basics of google search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Basics of messaging frameworks like Kafka , queuing architectures like rabbitmq.&lt;/li&gt; &#xA; &lt;li&gt;Broad overview and advantages of Redis , mongodb , cassandra.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf&#34;&gt;Google file system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Google architecture] (&lt;a href=&#34;http://highscalability.com/google-architecture&#34;&gt;http://highscalability.com/google-architecture&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances&#34;&gt;Instagram&lt;/a&gt; and other image based social networks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf&#34;&gt;Memcache scaling by facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=z8LU0Cj6BOU&#34;&gt;Twitter scaling&lt;/a&gt; and facebook feeds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf&#34;&gt;facebook graph api&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf&#34;&gt;facebook haystack needle architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZW5_eEKEC28&#34;&gt;youtube architecture and optimizations for video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;blog&#34;&gt;Company engineering blog links &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;courtesy &lt;a href=&#34;https://github.com/checkcheckzz/system-design-interview#toc&#34;&gt;checkcheckzz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depending on where you are interviewing, go through the company blog. VERY USEFUL IN INTERVIEWS! It really helps if you have an idea of the architecture, as the questions asked will generally be of that domain and your prior knowledge will help out here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nerds.airbnb.com/&#34;&gt;Airbnb Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.amazon.com/blogs&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/&#34;&gt;Amazon AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bandcamptech.wordpress.com/&#34;&gt;Bandcamp Tech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.simple.com/engineering/&#34;&gt;BankSimple Simple Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://word.bitly.com/&#34;&gt;Bitly Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.cloudera.com/blog/&#34;&gt;Cloudera Developer Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.dropbox.com/&#34;&gt;Dropbox Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.quora.com/&#34;&gt;Engineering at Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codeascraft.com/&#34;&gt;Etsy Code as Craft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Engineering&#34;&gt;Facebook Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://code.flickr.net/&#34;&gt;Flickr Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.foursquare.com/&#34;&gt;Foursquare Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://googleresearch.blogspot.com/&#34;&gt;Google Research Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.groupon.com/&#34;&gt;Groupn Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/&#34;&gt;High Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/&#34;&gt;Instagram Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.linkedin.com/blog&#34;&gt;LinkedIn Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tech.oyster.com/&#34;&gt;Oyster Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.pinterest.com/&#34;&gt;Pinterest Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://devblog.songkick.com/&#34;&gt;Songkick Technology Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.soundcloud.com/blog/&#34;&gt;SoundCloud Backstage Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://corner.squareup.com/&#34;&gt;Square The Corner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.redditblog.com/&#34;&gt;THE REDDIT BLOG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blog/category/engineering&#34;&gt;The GitHub Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://techblog.netflix.com/&#34;&gt;The Netflix Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.twilio.com/engineering&#34;&gt;Twilio Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.twitter.com/&#34;&gt;Twitter Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eng.uber.com/&#34;&gt;Uber Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/walmartlabs&#34;&gt;Walmart Labs Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.webengage.com/&#34;&gt;WebEngage Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://eng.yammer.com/blog/&#34;&gt;Yammer Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineeringblog.yelp.com/&#34;&gt;Yelp Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://smarketshq.com/&#34;&gt;Smarkets Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;tldr&#34;&gt;Low on time ?&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;I would HIGHLY recommend you do not take a shortcut unless you have a week or so for an interview. System design is best learnt by practising, shortcuts might help you in the short term, but would recommend coming back to this link for an in-depth understanding after the interview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a) Go through cs76 and Udacity&#39;s links given above for scaling systems.&lt;/li&gt; &#xA; &lt;li&gt;b) Go through the engineering blog of the company you are interviewing in (or if its a startup go through the link of the company closest to yours)&lt;/li&gt; &#xA; &lt;li&gt;c) See this talk: &lt;a href=&#34;http://www.hiredintech.com/system-design/the-system-design-process/&#34;&gt;http://www.hiredintech.com/system-design/the-system-design-process/&lt;/a&gt; and develop a process for how to answer such questions.&lt;/li&gt; &#xA; &lt;li&gt;d) Remember these terms, just roll over them in your interview in your mind, and if relevant mention it in the interview&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;processing and servers&lt;/li&gt; &#xA; &lt;li&gt;storage&lt;/li&gt; &#xA; &lt;li&gt;caching&lt;/li&gt; &#xA; &lt;li&gt;concurrency and communication&lt;/li&gt; &#xA; &lt;li&gt;security&lt;/li&gt; &#xA; &lt;li&gt;load balancing and proxy&lt;/li&gt; &#xA; &lt;li&gt;CDN&lt;/li&gt; &#xA; &lt;li&gt;Monetization&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Best of luck &lt;span&gt;👍&lt;/span&gt;, feel free to send pull requests to add more content to this git!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ansible/ansible-examples</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/ansible/ansible-examples</id>
    <link href="https://github.com/ansible/ansible-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A few starter examples of ansible playbooks, to show features and how they work together. See http://galaxy.ansible.com for example roles from the Ansible community for deploying many popular applications.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Ansible Examples&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains examples and best practices for building Ansible Playbooks.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SeleniumHQ/docker-selenium</title>
    <updated>2022-06-01T01:53:36Z</updated>
    <id>tag:github.com,2022-06-01:/SeleniumHQ/docker-selenium</id>
    <link href="https://github.com/SeleniumHQ/docker-selenium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images for Selenium Grid&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/workflows/Build%20&amp;amp;%20test/badge.svg?branch=trunk&#34; alt=&#34;Build &amp;amp; test&#34;&gt; &lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/workflows/Deploys/badge.svg?sanitize=true&#34; alt=&#34;Deployments&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Docker images for the Selenium Grid Server&lt;/h1&gt; &#xA;&lt;p&gt;The project is made possible by volunteer contributors who have put in thousands of hours of their own time, and made the source code freely available under the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/LICENSE.md&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These Docker images come with a handful of tags to simplify its usage, have a look at them in one of our &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/releases/tag/4.2.1-20220531&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get notifications of new releases, add yourself as a &#34;Releases only&#34; watcher.&lt;/p&gt; &#xA;&lt;p&gt;These images are published to the Docker Hub registry at &lt;a href=&#34;https://hub.docker.com/u/selenium&#34;&gt;Selenium Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Do you need help to use these Docker images? Talk to us at &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;https://www.selenium.dev/support/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#experimental-mult-arch-aarch64armhfamd64-images&#34;&gt;Experimental Mult-Arch aarch64/armhf/amd64 Images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-modes&#34;&gt;Execution modes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#standalone&#34;&gt;Standalone&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#hub-and-nodes&#34;&gt;Hub and Nodes&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#docker-networking&#34;&gt;Docker networking&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-different-machinesvms&#34;&gt;Using different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#fully-distributed-mode---router-queue-distributor-eventbus-sessionmap-and-nodes&#34;&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording&#34;&gt;Video recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dynamic-grid&#34;&gt;Dynamic Grid&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuration-example&#34;&gt;Configuration example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-hub--node-roles&#34;&gt;Execution with Hub &amp;amp; Node roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-standalone-roles&#34;&gt;Execution with Standalone roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-dynamic-grid-in-different-machinesvms&#34;&gt;Using Dynamic Grid in different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-docker-compose&#34;&gt;Execution with Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording-screen-resolution-and-time-zones-in-a-dynamic-grid&#34;&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#deploying-to-kubernetes&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuring-the-containers&#34;&gt;Configuring the containers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_opts-selenium-configuration-options&#34;&gt;SE_OPTS Selenium Configuration Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#java_opts-java-environment-options&#34;&gt;JAVA_OPTS Java Environment Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#node-configuration-options&#34;&gt;Node configuration options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#setting-screen-resolution&#34;&gt;Setting Screen Resolution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#grid-url-and-session-timeout&#34;&gt;Grid Url and Session Timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#session-request-timeout&#34;&gt;Session request timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#increasing-session-concurrency-per-container&#34;&gt;Increasing session concurrency per container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#running-in-headless-mode&#34;&gt;Running in Headless mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#building-the-images&#34;&gt;Building the images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#waiting-for-the-grid-to-be-ready&#34;&gt;Waiting for the Grid to be ready&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start a Docker container with Firefox&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Point your WebDriver tests to &lt;a href=&#34;http://localhost:4444&#34;&gt;http://localhost:4444&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;That&#39;s it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) To see what is happening inside the container, head to &lt;a href=&#34;http://localhost:7900&#34;&gt;http://localhost:7900&lt;/a&gt; (password is &lt;code&gt;secret&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;More details about visualising the container activity, check the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; When executing &lt;code&gt;docker run&lt;/code&gt; for an image that contains a browser please use the flag &lt;code&gt;--shm-size=2g&lt;/code&gt; to use the host&#39;s shared memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; Always use a Docker image with a full tag to pin a specific browser and Grid version. See &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/wiki/Tagging-Convention&#34;&gt;Tagging Conventions&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Experimental Mult-Arch aarch64/armhf/amd64 Images&lt;/h2&gt; &#xA;&lt;p&gt;For experimental docker container images, which run on platforms such as the Mac M1 or Raspberry Pi, see the community driven repository hosted at &lt;a href=&#34;https://github.com/seleniumhq-community/docker-seleniarm&#34;&gt;seleniumhq-community/docker-seleniarm&lt;/a&gt;. These images are built for three separate architectures: linux/arm64 (aarch64), linux/arm/v7 (armhf), and linux/amd64.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, these experimental container images are published on &lt;a href=&#34;https://hub.docker.com/u/seleniarm&#34;&gt;Seleniarm Docker Hub&lt;/a&gt; registry.&lt;/p&gt; &#xA;&lt;p&gt;See issue &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1076&#34;&gt;#1076&lt;/a&gt; for more information on these images.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re working on an Intel or AMD64 architecture, we recommend using the container images in &lt;em&gt;this&lt;/em&gt; repository (SeleniumHQ/docker-selenium) instead of the experimental ones.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Execution modes&lt;/h2&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_24x24.png&#34; alt=&#34;Firefox&#34;&gt; Firefox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_24x24.png&#34; alt=&#34;Chrome&#34;&gt; Chrome&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_24x24.png&#34; alt=&#34;Edge&#34;&gt; Edge&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Only one Standalone container can run on port&lt;/em&gt; &lt;code&gt;4444&lt;/code&gt; &lt;em&gt;at the same time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Hub and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;There are different ways to run the images and create a Grid with a Hub and Nodes, check the following options.&lt;/p&gt; &#xA;&lt;h4&gt;Docker networking&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created in the same network and they will recognize each other by their container name. A Docker &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_create/&#34;&gt;network&lt;/a&gt; needs to be created as a first step.&lt;/p&gt; &#xA;&lt;h5&gt;macOS/Linux&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows PowerShell&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-chrome:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-edge:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using different machines/VMs&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created on different machines/VMs, they need to know each other&#39;s IPs to communicate properly. If more than one node will be running on the same Machine/VM, they must be configured to expose different ports.&lt;/p&gt; &#xA;&lt;h5&gt;Hub - Machine/VM 1&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 2&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; \&#xA;    selenium/node-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; `&#xA;    selenium/node-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Edge - Machine/VM 3&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; \&#xA;    selenium/node-edge:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; `&#xA;    selenium/node-edge:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Firefox - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    selenium/node-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    selenium/node-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5556:5556 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    -e SE_NODE_PORT=5556 \&#xA;    selenium/node-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5556:5556 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    -e SE_NODE_PORT=5556 `&#xA;    selenium/node-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Compose&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; is the simplest way to start a Grid. Use the linked resources below, save them locally, and check the execution instructions on top of each file.&lt;/p&gt; &#xA;&lt;h5&gt;Version 2&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v2.yml&#34;&gt;&lt;code&gt;docker-compose-v2.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Version 3&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3.yml&#34;&gt;&lt;code&gt;docker-compose-v3.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To stop the Grid and cleanup the created containers, run &lt;code&gt;docker-compose down&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Version 3 with Swarm support&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-swarm.yml&#34;&gt;&lt;code&gt;docker-compose-v3-swarm.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to start a Selenium Grid with all its components apart. For simplicity, only an example with docker-compose will be provided. Save the file locally, and check the execution instructions on top of it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-full-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Video recording&lt;/h2&gt; &#xA;&lt;p&gt;Tests execution can be recorded by using the &lt;code&gt;selenium/video:ffmpeg-4.3.1-20220531&lt;/code&gt; Docker image. One container is needed per each container where a browser is running. This means if you are running 5 Nodes/Standalone containers, you will need 5 video containers, the mapping is 1-1.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the only way to do this mapping is manually (either starting the containers manually, or through &lt;code&gt;docker-compose&lt;/code&gt;). We are iterating on this process and probably this setup will be more simple in the future.&lt;/p&gt; &#xA;&lt;p&gt;The video Docker image we provide is based on the ffmpeg Ubuntu image provided by the &lt;a href=&#34;https://github.com/jrottenberg/ffmpeg&#34;&gt;jrottenberg/ffmpeg&lt;/a&gt; project, thank you for providing this image and simplifying our work &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have questions or feedback, please use the community contact points shown &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please report any bugs through GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/new/choose&#34;&gt;issues&lt;/a&gt;, and provide all the information requested on the template.&lt;/li&gt; &#xA; &lt;li&gt;Video recording for headless browsers is not supported.&lt;/li&gt; &#xA; &lt;li&gt;Video recording tends to use considerable amounts of CPU. Normally you should estimate 1CPU per video container, and 1 CPU per browser container.&lt;/li&gt; &#xA; &lt;li&gt;Videos are stored in the &lt;code&gt;/videos&lt;/code&gt; directory inside the video container. Map a local directory to get the videos.&lt;/li&gt; &#xA; &lt;li&gt;If you are running more than one video container, be sure to overwrite the video file name through the &lt;code&gt;FILE_NAME&lt;/code&gt; environment variable to avoid unexpected results.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This example shows how to start the containers manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4444:4444 -p 6900:5900 --net grid --name selenium --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.1-20220531&#xA;$ docker run -d --net grid --name video -v /tmp/videos:/videos selenium/video:ffmpeg-4.3.1-20220531&#xA;# Run your tests&#xA;$ docker stop video &amp;amp;&amp;amp; docker rm video&#xA;$ docker stop selenium &amp;amp;&amp;amp; docker rm selenium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the containers are stopped and removed, you should see a video file on your machine&#39;s &lt;code&gt;/tmp/videos&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a few Nodes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video.yml&#34;&gt;&lt;code&gt;docker-compose-v3-video.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dynamic Grid&lt;/h2&gt; &#xA;&lt;p&gt;Grid 4 has the ability to start Docker containers on demand, this means that it starts a Docker container in the background for each new session request, the test gets executed there, and when the test completes, the container gets thrown away.&lt;/p&gt; &#xA;&lt;p&gt;This execution mode can be used either in the Standalone or Node roles. The &#34;dynamic&#34; execution mode needs to be told what Docker images to use when the containers get started. Additionally, the Grid needs to know the URI of the Docker daemon.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration example&lt;/h3&gt; &#xA;&lt;p&gt;You can save this file locally and name it, for example, &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.2.1-20220531&#34;, &#34;{\&#34;browserName\&#34;: \&#34;firefox\&#34;}&#34;,&#xA;    &#34;selenium/standalone-chrome:4.2.1-20220531&#34;, &#34;{\&#34;browserName\&#34;: \&#34;chrome\&#34;}&#34;,&#xA;    &#34;selenium/standalone-edge:4.2.1-20220531&#34;, &#34;{\&#34;browserName\&#34;: \&#34;MicrosoftEdge\&#34;}&#34;&#xA;    ]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-4.3.1-20220531&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;#[server]&#xA;#host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;#port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Hub &amp;amp; Node roles&lt;/h3&gt; &#xA;&lt;p&gt;This can be expanded to a full Grid deployment, all components deployed individually. The overall idea is to have the Hub in one virtual machine, and each of the Nodes in separate and more powerful virtual machines.&lt;/p&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.1-20220531&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Standalone roles&lt;/h3&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/standalone-docker:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/standalone-docker:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Dynamic Grid in different machines/VMs&lt;/h3&gt; &#xA;&lt;h4&gt;Hub - Machine/VM 1&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Node Chrome - Machine/VM 2&lt;/h4&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Complete the &lt;code&gt;[server]&lt;/code&gt; section in the &lt;code&gt;config.toml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.2.1-20220531&#34;, &#34;{\&#34;browserName\&#34;: \&#34;firefox\&#34;}&#34;,&#xA;    &#34;selenium/standalone-chrome:4.2.1-20220531&#34;, &#34;{\&#34;browserName\&#34;: \&#34;chrome\&#34;}&#34;,&#xA;    &#34;selenium/standalone-edge:4.2.1-20220531&#34;, &#34;{\&#34;browserName\&#34;: \&#34;MicrosoftEdge\&#34;}&#34;&#xA;    ]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-4.3.1-20220531&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;[server]&#xA;host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Execution with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a Node:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-dynamic-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-dynamic-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/h3&gt; &#xA;&lt;p&gt;To record your WebDriver session, you need to add a &lt;code&gt;se:recordVideo&lt;/code&gt; field set to &lt;code&gt;true&lt;/code&gt;. You can also set a time zone and a screen resolution, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;browserName&#34;: &#34;firefox&#34;,&#xA;  &#34;platformName&#34;: &#34;linux&#34;,&#xA;  &#34;se:recordVideo&#34;: &#34;true&#34;,&#xA;  &#34;se:timeZone&#34;: &#34;US/Pacific&#34;,&#xA;  &#34;se:screenResolution&#34;: &#34;1920x1080&#34;  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running a test, check the path you mounted to the Docker container, (&lt;code&gt;${PWD}/assets&lt;/code&gt;), and you should see videos and session information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploying to Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;We offer a Helm chart to deploy these Docker images to Kubernetes. Read more details at the Helm &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/charts/selenium-grid/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Configuring the containers&lt;/h2&gt; &#xA;&lt;h3&gt;SE_OPTS Selenium Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;SE_OPTS&lt;/code&gt; variable with additional commandline parameters for starting a hub or a node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_OPTS=&#34;--log-level FINE&#34; --name selenium-hub selenium/hub:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JAVA_OPTS Java Environment Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable to java process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e JAVA_OPTS=-Xmx512m --name selenium-hub selenium/hub:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Node configuration options&lt;/h3&gt; &#xA;&lt;p&gt;The Nodes register themselves through the Event Bus. When the Grid is started in its typical Hub/Node setup, the Hub will be the one acting as the Event Bus, and when the Grid is started with all its five elements apart, the Event Bus will be running on its own.&lt;/p&gt; &#xA;&lt;p&gt;In both cases, it is necessary to tell the Node where the Event Bus is, so it can register itself. That is the purpose of the &lt;code&gt;SE_EVENT_BUS_HOST&lt;/code&gt;, &lt;code&gt;SE_EVENT_BUS_PUBLISH_PORT&lt;/code&gt; and &lt;code&gt;SE_EVENT_BUS_SUBSCRIBE_PORT&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the default values of these environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -e SE_EVENT_BUS_HOST=&amp;lt;event_bus_ip|event_bus_name&amp;gt; -e SE_EVENT_BUS_PUBLISH_PORT=4442 \ &#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 --shm-size=&#34;2g&#34; selenium/node-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Screen Resolution&lt;/h3&gt; &#xA;&lt;p&gt;By default, nodes start with a screen resolution of 1360 x 1020 with a color depth of 24 bits and a dpi of 96. These settings can be adjusted by specifying &lt;code&gt;SCREEN_WIDTH&lt;/code&gt;, &lt;code&gt;SCREEN_HEIGHT&lt;/code&gt;, &lt;code&gt;SCREEN_DEPTH&lt;/code&gt;, and/or &lt;code&gt;SCREEN_DPI&lt;/code&gt; environmental variables when starting the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -e SCREEN_WIDTH=1366 -e SCREEN_HEIGHT=768 -e SCREEN_DEPTH=24 -e SCREEN_DPI=74 selenium/standalone-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Grid Url and Session Timeout&lt;/h3&gt; &#xA;&lt;p&gt;In some use cases you might need to set the Grid url to the Node, for example if you&#39;d like to access the BiDi/CDP endpoint. This is also needed when you want to use the new &lt;code&gt;RemoteWebDriver.builder()&lt;/code&gt; or &lt;code&gt;Augmenter()&lt;/code&gt; present in Selenium 4 (since they setup the BiDi/CDP connection implicitly). You can do that through the &lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt; environment variable. Setting this env var is needed if you want to see the live view while sessions are executing.&lt;/p&gt; &#xA;&lt;p&gt;Grid has a default session timeout of 300 seconds, where the session can be on a stale state until it is killed. You can use &lt;code&gt;SE_NODE_SESSION_TIMEOUT&lt;/code&gt; to overwrite that value in seconds.&lt;/p&gt; &#xA;&lt;h3&gt;Session request timeout&lt;/h3&gt; &#xA;&lt;p&gt;A new session request is placed in the Session Queue before it is processed, and the request sits in the queue until a matching slot is found across the registered Nodes. However, the new session request might timeout if no slot was found. By default, a request will stay in the queue up to 300 seconds before it a timeout is reached. In addition, an attempt to process the request is done every 5 seconds (by default).&lt;/p&gt; &#xA;&lt;p&gt;It is possible to override those values through environment variables in the Hub and the SessionQueue (&lt;code&gt;SE_SESSION_REQUEST_TIMEOUT&lt;/code&gt; and &lt;code&gt;SE_SESSION_RETRY_INTERVAL&lt;/code&gt;). For example, a timeout of 500 seconds would be &lt;code&gt;SE_SESSION_REQUEST_TIMEOUT=500&lt;/code&gt; and a retry interval of 2 seconds would be &lt;code&gt;SE_SESSION_RETRY_INTERVAL=2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Increasing session concurrency per container&lt;/h3&gt; &#xA;&lt;p&gt;By default, only one session is configured to run per container through the &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; environment variable. It is possible to increase that number up to the maximum available processors, this is because more stability is achieved when one container/browser has 1 CPU to run.&lt;/p&gt; &#xA;&lt;p&gt;However, if you have measured performance and based on that, you think more sessions can be executed in each container, you can override the maximum limit by setting both &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; to a desired number and &lt;code&gt;SE_NODE_OVERRIDE_MAX_SESSIONS&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Nevertheless, running more browser sessions than the available processors is not recommended since you will be overloading the resources.&lt;/p&gt; &#xA;&lt;p&gt;Overriding this setting has a undesired side effect when video recording is enabled, since more than one browser session might be captured in the same video.&lt;/p&gt; &#xA;&lt;h3&gt;Running in Headless mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/web/updates/2017/04/headless-chrome&#34;&gt;Chrome&lt;/a&gt;, When using headless mode, there&#39;s no need for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Xvfb&#34;&gt;Xvfb&lt;/a&gt; server to be started.&lt;/p&gt; &#xA;&lt;p&gt;To avoid starting the server you can set the &lt;code&gt;START_XVFB&lt;/code&gt; environment variable to &lt;code&gt;false&lt;/code&gt; (or any other value than &lt;code&gt;true&lt;/code&gt;), for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 -e START_XVFB=false --shm-size=&#34;2g&#34; selenium/node-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see this GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/567&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stopping the Node/Standalone after N sessions have been executed&lt;/h3&gt; &#xA;&lt;p&gt;In some environments, like Docker Swarm or Kubernetes, it is useful to shut down the Node or Standalone container after N tests have been executed. For example, this can be used in Kubernetes to terminate the pod and then scale a new one after N sessions. Set the environment variable &lt;code&gt;DRAIN_AFTER_SESSION_COUNT&lt;/code&gt; to a value higher than zero to enable this behaviour.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -e DRAIN_AFTER_SESSION_COUNT=5 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the previous command, the Standalone container will shutdown after 5 sessions have been executed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Building the images&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo and from the project directory root you can build everything by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=local make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to configure environment variable in order to build the image (http proxy for instance), simply set an environment variable &lt;code&gt;BUILD_ARGS&lt;/code&gt; that contains the additional variables to pass to the docker context (this will only work with docker &amp;gt;= 1.9)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ BUILD_ARGS=&#34;--build-arg http_proxy=http://acme:3128 --build-arg https_proxy=http://acme:3128&#34; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Omitting&lt;/em&gt; &lt;code&gt;VERSION=local&lt;/code&gt; &lt;em&gt;will build the images with the released version but replacing the date for the current one.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Waiting for the Grid to be ready&lt;/h2&gt; &#xA;&lt;p&gt;It is a good practice to check first if the Grid is up and ready to receive requests, this can be done by checking the &lt;code&gt;/wd/hub/status&lt;/code&gt; endpoint.&lt;/p&gt; &#xA;&lt;p&gt;A Grid that is ready, composed by a hub and two nodes, could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;value&#34;: {&#xA;    &#34;ready&#34;: true,&#xA;    &#34;message&#34;: &#34;Selenium Grid ready.&#34;,&#xA;    &#34;nodes&#34;: [&#xA;      {&#xA;        &#34;id&#34;: &#34;6c0a2c59-7e99-469d-bbfc-313dc638797c&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.3:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;firefox&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      },&#xA;      {&#xA;        &#34;id&#34;: &#34;26af3363-a0d8-4bd6-a854-2c7497ed64a4&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.4:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;chrome&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;&#34;ready&#34;: true&lt;/code&gt; value indicates that the Grid is ready to receive requests. This status can be polled through a script before running any test, or it can be added as a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; when the docker container is started.&lt;/p&gt; &#xA;&lt;h3&gt;Adding a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; to the Grid&lt;/h3&gt; &#xA;&lt;p&gt;The script &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/Base/check-grid.sh&#34;&gt;check-grid.sh&lt;/a&gt;, which is included in the images, can be used to poll the Grid status.&lt;/p&gt; &#xA;&lt;p&gt;This example checks the status of the Grid every 15 seconds, it has a timeout of 30 seconds when the check is done, and it retries up to 5 times until the container is marked as unhealthy. Please use adjusted values to fit your needs, (if needed) replace the &lt;code&gt;--host&lt;/code&gt; and &lt;code&gt;--port&lt;/code&gt; parameters for the ones used in your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4444:4444 --net grid --name selenium-hub \&#xA;    --health-cmd=&#39;/opt/bin/check-grid.sh --host 0.0.0.0 --port 4444&#39; \&#xA;    --health-interval=15s --health-timeout=30s --health-retries=5 \&#xA;    selenium/hub:4.2.1-20220531&#xA;$ docker run -d --net grid -e HUB_HOST=selenium-hub --shm-size=&#34;2g&#34; selenium/node-chrome:4.2.1-20220531&#xA;$ docker run -d --net grid -e HUB_HOST=selenium-hub --shm-size=&#34;2g&#34; selenium/node-edge:4.2.1-20220531&#xA;$ docker run -d --net grid -e HUB_HOST=selenium-hub --shm-size=&#34;2g&#34; selenium/node-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;\&lt;/code&gt; line delimiter won&#39;t work on Windows based terminals, try either &lt;code&gt;^&lt;/code&gt; or a backtick.&lt;/p&gt; &#xA;&lt;p&gt;The container health status can be checked by doing &lt;code&gt;docker ps&lt;/code&gt; and verifying the &lt;code&gt;(healthy)|(unhealthy)&lt;/code&gt; status or by inspecting it in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker inspect --format=&#39;{{json .State.Health.Status}}&#39; selenium-hub&#xA;&#34;healthy&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a bash script to wait for the Grid&lt;/h3&gt; &#xA;&lt;p&gt;A common problem known in docker is that a running container does not always mean that the application inside it is ready. A simple way to tackle this is by using a &#34;wait-for-it&#34; script, more information can be seen &lt;a href=&#34;https://docs.docker.com/compose/startup-order/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following script is an example of how this can be done using bash, but the same principle applies if you want to do this with the programming language used to write the tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;# wait-for-grid.sh&#xA;&#xA;set -e&#xA;&#xA;cmd=&#34;$@&#34;&#xA;&#xA;while ! curl -sSL &#34;http://localhost:4444/wd/hub/status&#34; 2&amp;gt;&amp;amp;1 \&#xA;        | jq -r &#39;.value.ready&#39; 2&amp;gt;&amp;amp;1 | grep &#34;true&#34; &amp;gt;/dev/null; do&#xA;    echo &#39;Waiting for the Grid&#39;&#xA;    sleep 1&#xA;done&#xA;&#xA;&amp;gt;&amp;amp;2 echo &#34;Selenium Grid is up - executing tests&#34;&#xA;exec $cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Will require &lt;code&gt;jq&lt;/code&gt; installed via &lt;code&gt;apt-get&lt;/code&gt;, else the script will keep printing &lt;code&gt;Waiting&lt;/code&gt; without completing the execution.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If needed, replace &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;4444&lt;/code&gt; for the correct values in your environment. Also, this script is polling indefinitely, you might want to tweak it and establish a timeout.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say that the normal command to execute your tests is &lt;code&gt;mvn clean test&lt;/code&gt;. Here is a way to use the above script and execute your tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./wait-for-grid.sh mvn clean test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like this, the script will poll until the Grid is ready, and then your tests will start.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/LibVNC/x11vnc&#34;&gt;x11vnc&lt;/a&gt; as VNC server to allow users inspect what is happening inside the container. Users can connect to this server in two ways:&lt;/p&gt; &#xA;&lt;h3&gt;Using a VNC client&lt;/h3&gt; &#xA;&lt;p&gt;The VNC server is listening to port 5900, you can use a VNC client and connect to it. Feel free to map port 5900 to any free external port that you wish.&lt;/p&gt; &#xA;&lt;p&gt;The internal 5900 port remains the same because that is the configured port for the VNC server running inside the container. You can override it with the &lt;code&gt;VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 5900:5900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.1-20220531&#xA;$ docker run -d -p 4445:4444 -p 5901:5900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.2.1-20220531&#xA;$ docker run -d -p 4446:4444 -p 5902:5900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your VNC client:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Port 5900 to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;Port 5901 to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;Port 5902 to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;. If you wish to change this, you should either change it in the &lt;code&gt;/NodeBase/Dockerfile&lt;/code&gt; and build the images yourself, or you can define a Docker image that derives from the posted ones which reconfigures it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;#FROM selenium/node-chrome:4.2.1-20220531&#xA;#FROM selenium/node-edge:4.2.1-20220531&#xA;#FROM selenium/node-firefox:4.2.1-20220531&#xA;#Choose the FROM statement that works for you.&#xA;&#xA;RUN x11vnc -storepasswd &amp;lt;your-password-here&amp;gt; /home/seluser/.vnc/passwd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to run VNC without password authentication you can set the environment variable &lt;code&gt;VNC_NO_PASSWORD=1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run VNC in view-only mode you can set the environment variable &lt;code&gt;VNC_VIEW_ONLY=1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using your browser (no VNC client is needed)&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/novnc/noVNC&#34;&gt;noVNC&lt;/a&gt; to allow users inspect visually container activity with their browser. This might come handy if you cannot install a VNC client on your machine. Port 7900 is used to start noVNC, so you will need to connect to that port with your browser.&lt;/p&gt; &#xA;&lt;p&gt;Similarly to the previous section, feel free to map port 7900 to any free external port that you wish. You can also override it with the &lt;code&gt;NO_VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.1-20220531&#xA;$ docker run -d -p 4445:4444 -p 7901:7900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.2.1-20220531&#xA;$ docker run -d -p 4446:4444 -p 7902:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your browser:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7900/&#34;&gt;http://localhost:7900/&lt;/a&gt; to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7901/&#34;&gt;http://localhost:7901/&lt;/a&gt; to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7902/&#34;&gt;http://localhost:7902/&lt;/a&gt; to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;All output gets sent to stdout, so it can be inspected by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker logs -f &amp;lt;container-id|container-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can increase the log output by passing environment variable to the containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SE_OPTS=&#34;--log-level FINE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;--shm-size=&#34;2g&#34;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Why is &lt;code&gt;--shm-size 2g&lt;/code&gt; necessary?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a known workaround to avoid the browser crashing inside a docker container, here are the documented issues for &lt;a href=&#34;https://code.google.com/p/chromium/issues/detail?id=519952&#34;&gt;Chrome&lt;/a&gt; and &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1338771#c10&#34;&gt;Firefox&lt;/a&gt;. The shm size of 2gb is arbitrary but known to work well, your specific use case might need a different value, it is recommended to tune this value according to your needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Headless&lt;/h3&gt; &#xA;&lt;p&gt;If you see the following selenium exceptions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: invalid argument: can&#39;t kill an exited process&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: unknown error: Chrome failed to start: exited abnormally&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The reason &lt;em&gt;might&lt;/em&gt; be that you&#39;ve set the &lt;code&gt;START_XVFB&lt;/code&gt; environment variable to &#34;false&#34;, but forgot to actually run Firefox, Chrome or Edge in headless mode.&lt;/p&gt; &#xA;&lt;h3&gt;Mounting volumes to retrieve downloaded files&lt;/h3&gt; &#xA;&lt;p&gt;A common scenario is mounting a volume to the browser container in order to retrieve downloaded files. This works well in Windows and macOS but not without workarounds in Linux. For more details, check this well documented &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1095&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, while using Linux, you might be starting a container in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; \&#xA;  -v /home/ubuntu/files:/home/seluser/files \&#xA;  selenium/standalone-chrome:4.2.1-20220531&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will mount the host &lt;code&gt;/home/ubuntu/files&lt;/code&gt; directory to the &lt;code&gt;/home/seluser/files&lt;/code&gt; inside the container. The problem happens because the volume will be mounted as &lt;code&gt;root&lt;/code&gt;, and therefore the browser cannot write a file to that directory because it is running under the user &lt;code&gt;seluser&lt;/code&gt;. This happens because that is how Docker mounts volumes in Linux, more details in this &lt;a href=&#34;https://github.com/moby/moby/issues/2259&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A workaround for this is to create the directory on the host and change its permissions &lt;strong&gt;before mounting the volume&lt;/strong&gt;. Depending on your user permissions, you might need to use &lt;code&gt;sudo&lt;/code&gt; for some of these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /home/ubuntu/files&#xA;chown 1200:1201 /home/ubuntu/files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After doing this, you should be able to download files to the mounted directory. If you have a better workaround, please send us a pull request!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/SeleniumHQ/docker-selenium&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>