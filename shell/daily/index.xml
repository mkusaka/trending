<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-16T01:36:17Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rails/docked</title>
    <updated>2022-12-16T01:36:17Z</updated>
    <id>tag:github.com,2022-12-16:/rails/docked</id>
    <link href="https://github.com/rails/docked" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Running Rails from Docker for easy start to development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docked Rails&lt;/h1&gt; &#xA;&lt;p&gt;Setting up Rails for the first time with all the dependencies necessary can be daunting for beginners. Docked Rails uses a Rails CLI Docker image to make it much easier, requiring only Docker to be installed.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;First install &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker&lt;/a&gt; (and &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; on Windows). Then copy&#39;n&#39;paste into your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker volume create ruby-bundle-cache&#xA;alias rails=&#39;docker run --rm -it -v $PWD:/rails -v ruby-bundle-cache:/bundle ghcr.io/rails/cli&#39;&#xA;alias rails-server=&#39;docker run --rm -it -v $PWD:/rails -v ruby-bundle-cache:/bundle -p 3000:3000 ghcr.io/rails/cli server -b 0.0.0.0&#39;&#xA;alias rails-dev=&#39;docker run --rm -it -v $PWD:/rails -v ruby-bundle-cache:/bundle -p 3000:3000 --entrypoint bin/dev ghcr.io/rails/cli&#39;&#xA;alias bundle=&#39;docker run --rm -it -v $PWD:/rails -v ruby-bundle-cache:/bundle --entrypoint bundle ghcr.io/rails/cli&#39;&#xA;alias rake=&#39;docker run --rm -it -v $PWD:/rails -v ruby-bundle-cache:/bundle --entrypoint rake ghcr.io/rails/cli&#39;&#xA;alias yarn=&#39;docker run --rm -it -v $PWD:/rails -v ruby-bundle-cache:/bundle --entrypoint yarn ghcr.io/rails/cli&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create your Rails app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rails new weblog&#xA;cd weblog&#xA;rails generate scaffold post title:string body:text&#xA;rails db:migrate&#xA;rails-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! You&#39;re running Rails on &lt;code&gt;http://localhost:3000/posts&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MoeClub/Note</title>
    <updated>2022-12-16T01:36:17Z</updated>
    <id>tag:github.com,2022-12-16:/MoeClub/Note</id>
    <link href="https://github.com/MoeClub/Note" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Some Note&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Note&lt;/h1&gt; &#xA;&lt;h2&gt;MacOS&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo xattr -r -d com.apple.quarantine &amp;lt;/File/To/Path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uncheck &#34;Reopen windows when logging back in&#34; by defaults&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;defaults write com.apple.loginwindow TALLogoutSavesState -bool FALSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Diasble other account&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;defaults write com.apple.loginwindow SHOWOTHERUSERS_MANAGED -bool FALSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clear system update red notice&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;defaults delete com.apple.systempreferences AttentionPrefBundleIDs &amp;amp;&amp;amp; killall Dock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clear App Store Update Notification&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;defaults write /Library/Preferences/com.apple.AppStore.plist DisableSoftwareUpdateNotifications -bool TRUE&#xA;defaults write com.apple.appstored.plist BadgeCount 0 &amp;amp;&amp;amp; killall Dock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;System update notice&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# disable&#xA;sudo chmod 644 /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager&#xA;&#xA;# enable&#xA;sudo chmod 751 /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS System &amp;amp; App Store&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# check&#xA;/usr/libexec/nsurlsessiond&#xA;&#xA;# notice&#xA;/System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager&#xA;&#xA;# download&#xA;/System/Library/PrivateFrameworks/MobileSoftwareUpdate.framework/Support/softwareupdated&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Delete system file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Disbale SIP (command + r)&#xA;csrutil disable&#xA;csrutil authenticated-root disable&#xA;&#xA;# Mount &#39;/&#39; as write&#xA;sudo mount -uw /&#xA;&#xA;# Do something&#xA;sudo cd &#34;/Volumes/$(ls -1 /Volumes|head -n1)&#34;&#xA;sudo rm -rf /System/Applications/TV.app&#xA;sudo rm -rf /System/Applications/News.app&#xA;sudo rm -rf /System/Applications/Home.app&#xA;sudo rm -rf /System/Applications/Books.app&#xA;sudo rm -rf /System/Applications/Chess.app&#xA;sudo rm -rf /System/Applications/Podcasts.app&#xA;sudo rm -rf /System/Applications/Stocks.app&#xA;sudo rm -rf /System/Applications/Music.app&#xA;&#xA;# Enable SIP&#xA;csrutil enable&#xA;csrutil authenticated-root enable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Modify user name and folder&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a user as Administrator, like &#34;temp&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Login &#34;temp&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Change user name and folder.&lt;/li&gt; &#xA; &lt;li&gt;Disable SIP.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;sudo mv &amp;lt;OldFolder&amp;gt; &amp;lt;NewFolder&amp;gt;&lt;/code&gt; to rename folder.&lt;/li&gt; &#xA; &lt;li&gt;Enable SIP.&lt;/li&gt; &#xA; &lt;li&gt;Login.&lt;/li&gt; &#xA; &lt;li&gt;Delete user &#34;temp&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>grahampugh/erase-install</title>
    <updated>2022-12-16T01:36:17Z</updated>
    <id>tag:github.com,2022-12-16:/grahampugh/erase-install</id>
    <link href="https://github.com/grahampugh/erase-install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A script that automates downloading macOS installers, and optionally erasing or upgrading macOS in a single process.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;erase-install&lt;/h1&gt; &#xA;&lt;p&gt;by Graham Pugh&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING. This is a self-destruct script. Do not try it out on your own device!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;erase-install.sh&lt;/code&gt; is a script to reinstall macOS directly from the system volume using &lt;code&gt;startosinstall&lt;/code&gt;, which is built into macOS installer applications since version 10.12.4. The eraseinstall option was added with macOS 10.13.4.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It can be used to reinstall, upgrade or erase macOS.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The script is designed to interact with &lt;code&gt;installinstallmacos.py&lt;/code&gt;, a script developed by Greg Neagle, in order to download a macOS Installer application directly from Apple to the client. However, to allow the two scripts to operate better together, a forked version of installinstallmacos.py is used (see &lt;a href=&#34;https://github.com/grahampugh/macadmin-scripts&#34;&gt;grahampugh/macadmin-scripts&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;It is alternatively possible to use the &lt;code&gt;softwareupdate --fetch-full-installer&lt;/code&gt; command that is built in to macOS since 10.15, though the default method is to date more reliable and more flexible.&lt;/p&gt; &#xA;&lt;p&gt;The script has many options to suit a large variety of workflows, management tools and user experiences. Originally designed to work with Macs that are enrolled into Jamf Pro, it now has additional options for use with other management systems or no management systems at all.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/grahampugh/erase-install/wiki&#34;&gt;Please refer to the Wiki for detailed documentation&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
</feed>