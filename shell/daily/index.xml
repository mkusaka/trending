<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-11T02:01:33Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>oracle/docker-images</title>
    <updated>2022-06-11T02:01:33Z</updated>
    <id>tag:github.com,2022-06-11:/oracle/docker-images</id>
    <link href="https://github.com/oracle/docker-images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official source for Docker configurations, images, and examples of Dockerfiles for Oracle products and projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker Images from Oracle&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;Dockerfiles&lt;/a&gt; and samples to build &lt;a href=&#34;https://www.docker.com/what-docker&#34;&gt;Docker&lt;/a&gt; images for Oracle commercial products and &lt;a href=&#34;https://opensource.oracle.com&#34;&gt;Oracle sponsored open source projects&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Container Images on GitHub&lt;/h2&gt; &#xA;&lt;p&gt;These images will require you to download any required Oracle commercial software before installation. If you want commercial software downloaded for you, view &lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/#pre-built-images-with-commercial-software&#34;&gt;Pre-Built Images with Commercial Software&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Oracle Commercial Products&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleAccessManagement&#34;&gt;Oracle Access Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleBI&#34;&gt;Oracle BI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleCloudInfrastructure&#34;&gt;Oracle Cloud Infrastructure Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleCoherence&#34;&gt;Oracle Coherence&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleDatabase&#34;&gt;Oracle Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleEssbase&#34;&gt;Oracle Essbase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleFMWInfrastructure&#34;&gt;Oracle FMW Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleGoldenGate&#34;&gt;Oracle GoldenGate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleHTTPServer&#34;&gt;Oracle HTTP Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleIdentityGovernance&#34;&gt;Oracle Identity Governance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleInstantClient&#34;&gt;Oracle Instant Client&lt;/a&gt; (Basic, SDK and SQL*Plus)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleInternetDirectory&#34;&gt;Oracle Internet Directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleJava&#34;&gt;Oracle Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleRestDataServices&#34;&gt;Oracle Rest Data Services&lt;/a&gt; (ORDS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleSOASuite&#34;&gt;Oracle SOA Suite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleUnifiedDirectory&#34;&gt;Oracle Unified Directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleUnifiedDirectorySM&#34;&gt;Oracle Unified Directory Service Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleWebLogic&#34;&gt;Oracle WebLogic Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleWebCenterContent&#34;&gt;Oracle WebCenter Content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleWebCenterPortal&#34;&gt;Oracle WebCenter Portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleWebCenterSites&#34;&gt;Oracle WebCenter Sites&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Oracle Sponsored Open Source Projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/graalvm/container/tree/master/community&#34;&gt;GraalVM CE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mysql/mysql-docker&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/OracleOpenJDK&#34;&gt;Oracle OpenJDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/NoSQL&#34;&gt;Oracle NoSQL Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oracle/container-images&#34;&gt;Oracle Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community Contributions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oracle/docker-images/issues/212&#34;&gt;Oracle Forms and Reports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/Contrib/OracleUnifiedDirectory/&#34;&gt;Oracle Unified Directory&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Archived Projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/Archive/ContainerCloud&#34;&gt;ContainerCloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/Archive/OracleDataIntegrator&#34;&gt;Oracle Data Integrator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/Archive/OracleEDQ&#34;&gt;Oracle Enterprise Data Quality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/Archive/OracleTuxedo&#34;&gt;Oracle Tuxedo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oracle/docker-images/main/Archive/OracleTuxedo/tsam&#34;&gt;Oracle TSAM Plus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-Built Images with Commercial Software&lt;/h2&gt; &#xA;&lt;p&gt;These sources already contain Oracle commercial software and require license acceptance prior to download:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://container-registry.oracle.com&#34;&gt;Oracle Container Registry&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For support and certification information, please consult the documentation for each product.&lt;/p&gt; &#xA;&lt;p&gt;For support, bug reporting and feedback about the provided Dockerfiles, please open an &lt;a href=&#34;https://github.com/oracle/docker-images/issues&#34;&gt;issue on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need general support with running containers on Oracle Linux, you can submit a question under the &lt;a href=&#34;https://community.oracle.com/tech/apps-infra/categories/containers-and-orchestration&#34;&gt;Containers and Orchestration&lt;/a&gt; category of the Applications and Infrastructure Community of Oracle Communities.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PurpurMC/Purpur</title>
    <updated>2022-06-11T02:01:33Z</updated>
    <id>tag:github.com,2022-06-11:/PurpurMC/Purpur</id>
    <link href="https://github.com/PurpurMC/Purpur" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Purpur is a drop-in replacement for Paper servers designed for configurability, and new fun and exciting gameplay features.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://purpurmc.org&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/74448585/150906023-101cd383-da82-4a3c-9603-a3b5741c3994.png&#34; alt=&#34;Purpur&#34;&gt;&lt;/a&gt; &#xA; &lt;h2&gt;Purpur&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PurpurMC/Purpur/ver/1.18.2/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PurpurMC/Purpur?&amp;amp;logo=github&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://purpurmc.org/downloads/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/PurpurMC/purpur/Build?event=push&amp;amp;logo=github&#34; alt=&#34;Github Actions Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/PurpurMC/purpur&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/PurpurMC/purpur/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://purpurmc.org/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/685683385313919172.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Join us on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/PurpurMC/Purpur/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PurpurMC/Purpur?label=stars&amp;amp;logo=github&#34; alt=&#34;Purpur&#39;s Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpurMC/Purpur/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/PurpurMC/Purpur?label=forks&amp;amp;logo=github&#34; alt=&#34;Purpur Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpurMC/Purpur/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/PurpurMC/Purpur?label=watchers&amp;amp;logo=github&#34; alt=&#34;Purpur Watchers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Purpur is a drop-in replacement for &lt;a href=&#34;https://github.com/PaperMC/Paper&#34;&gt;Paper&lt;/a&gt; servers designed for configurability, new fun and exciting gameplay features, and performance built on top of &lt;a href=&#34;https://github.com/PaperMC/Paper/&#34;&gt;Paper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/mtAAnkk&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/685683385313919172.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Join us on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join us on &lt;a href=&#34;https://discord.gg/mtAAnkk&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://purpurmc.org/downloads&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/PurpurMC/purpur/Build?event=push&amp;amp;label=Downloads&amp;amp;logo=github&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Downloads can be obtained from the &lt;a href=&#34;https://purpurmc.org/downloads/&#34;&gt;downloads page&lt;/a&gt; or the &lt;a href=&#34;https://api.purpurmc.org&#34;&gt;downloads API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Downloads API endpoints:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;List versions of Minecraft with builds available: &lt;code&gt;https://api.purpurmc.org/v2/purpur&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;List builds for a version of Minecraft: &lt;code&gt;https://api.purpurmc.org/v2/purpur/&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download a specific build of a specific version: &lt;code&gt;https://api.purpurmc.org/v2/purpur/&amp;lt;version&amp;gt;/&amp;lt;build&amp;gt;/download&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the latest build for a version of Minecraft: &lt;code&gt;https://api.purpurmc.org/v2/purpur/&amp;lt;version&amp;gt;/latest/download&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PurpurMC/Purpur/ver/1.18.2/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PurpurMC/Purpur?&amp;amp;logo=github&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;All patches are licensed under the MIT license, unless otherwise noted in the patch headers.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/PaperMC/Paper&#34;&gt;PaperMC/Paper&lt;/a&gt;, and &lt;a href=&#34;https://github.com/PaperMC/paperweight&#34;&gt;PaperMC/Paperweight&lt;/a&gt; for the license of material used by this project.&lt;/p&gt; &#xA;&lt;h2&gt;bStats&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bstats.org/plugin/server-implementation/Purpur&#34;&gt;&lt;img src=&#34;https://bstats.org/signatures/server-implementation/Purpur.svg?sanitize=true&#34; alt=&#34;bStats Graph Data&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://purpurmc.org/javadoc&#34;&gt;Javadoc&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Dependency Information&lt;/h3&gt; &#xA;&lt;p&gt;Maven&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;repository&amp;gt;&#xA;    &amp;lt;id&amp;gt;purpur&amp;lt;/id&amp;gt;&#xA;    &amp;lt;url&amp;gt;https://repo.purpurmc.org/snapshots&amp;lt;/url&amp;gt;&#xA;&amp;lt;/repository&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.purpurmc.purpur&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;purpur-api&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.18.2-R0.1-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Gradle&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    maven(&#34;https://repo.purpurmc.org/snapshots&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;    compileOnly(&#34;org.purpurmc.purpur&#34;, &#34;purpur-api&#34;, &#34;1.18.2-R0.1-SNAPSHOT&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Yes, this also includes all API provided by Paper, Spigot, and Bukkit.&lt;/p&gt; &#xA;&lt;h2&gt;Building and setting up&lt;/h2&gt; &#xA;&lt;h4&gt;Initial setup&lt;/h4&gt; &#xA;&lt;p&gt;Run the following commands in the root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew applyPatches&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating a patch&lt;/h4&gt; &#xA;&lt;p&gt;Patches are effectively just commits in either &lt;code&gt;Purpur-API&lt;/code&gt; or &lt;code&gt;Purpur-Server&lt;/code&gt;. To create one, just add a commit to either repo and run &lt;code&gt;./gradlew rebuildPatches&lt;/code&gt;, and a patch will be placed in the patches folder. Modifying commits will also modify its corresponding patch file.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/PurpurMC/Purpur/ver/1.18.2/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more detailed information.&lt;/p&gt; &#xA;&lt;h4&gt;Compiling&lt;/h4&gt; &#xA;&lt;p&gt;Use the command &lt;code&gt;./gradlew build&lt;/code&gt; to build the API and server. Compiled JARs will be placed under &lt;code&gt;Purpur-API/build/libs&lt;/code&gt; and &lt;code&gt;Purpur-Server/build/libs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get a purpurclip jar, run &lt;code&gt;./gradlew createReobfPaperclipJar&lt;/code&gt;. To install the &lt;code&gt;purpur-api&lt;/code&gt; and &lt;code&gt;purpur&lt;/code&gt; dependencies to your local Maven repo, run &lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks To:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.yourkit.com/images/yklogo.png&#34; alt=&#34;YourKit-Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yourkit.com/&#34;&gt;YourKit&lt;/a&gt;, makers of the outstanding Java profiler, support open source projects of all kinds with their full featured &lt;a href=&#34;https://www.yourkit.com/java/profiler&#34;&gt;Java&lt;/a&gt; and &lt;a href=&#34;https://www.yourkit.com/.net/profiler&#34;&gt;.NET&lt;/a&gt; application profilers. We thank them for allowing us to use their software so we can make Purpur the best it can be.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shadlyd15/DoomLinux</title>
    <updated>2022-06-11T02:01:33Z</updated>
    <id>tag:github.com,2022-06-11:/shadlyd15/DoomLinux</id>
    <link href="https://github.com/shadlyd15/DoomLinux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A bash script to build a minimal linux operating system just to play Doom.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DoomLinux&lt;/h1&gt; &#xA;&lt;p&gt;A single script to build a minimal live Linux operating system from source code that runs Doom on boot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./DoomLinux.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will create an iso of DoomLinux which is bootable from USB stick.&lt;/p&gt; &#xA;&lt;h2&gt;What it does&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Downloads Linux Kernel 5.4.3 source and compiles it with a minimal configuration&lt;/li&gt; &#xA; &lt;li&gt;Downloads Busybox 1.35.0 source and compiles it statically.&lt;/li&gt; &#xA; &lt;li&gt;Downloads FBDoom and compiles it statically.&lt;/li&gt; &#xA; &lt;li&gt;Creates rootfs for linux kernel.&lt;/li&gt; &#xA; &lt;li&gt;Generates grub configuration&lt;/li&gt; &#xA; &lt;li&gt;Creates a bootable live Linux iso that runs Doom on boot.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Dependencies&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install wget make gawk gcc bc bison flex xorriso libelf-dev libssl-dev grub-common&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;h3&gt;Creating folders and downloading the source codes&lt;/h3&gt; &#xA;&lt;p&gt;We need to create some folders for managing the codes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p rootfs&#xA;mkdir -p staging&#xA;mkdir -p iso/boot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;rootfs - It is the root file system of DoomLinux.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;&#x9;rootfs&#xA;&#x9;&#x9;├── bin (Busybox and fbdoom binaries)&#xA;&#x9;&#x9;├── dev (All the available devices)&#xA;&#x9;&#x9;├── mnt (Mount point for temporary external media)&#xA;&#x9;&#x9;├── proc (Different information of currently running kernel)&#xA;&#x9;&#x9;├── sys (Directory for virtual filesystem)&#xA;&#x9;&#x9;└── tmp (Directory for temporary files required during runtime)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;staging - Here all the source codes are downloaded and compiled.&lt;/li&gt; &#xA; &lt;li&gt;iso - It is the folder structure for grub to make a bootable iso. In boot folder we will place grub.cfg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;&#x9;iso&#xA;&#x9;&#x9;└── boot&#xA;&#x9;&#x9;    ├── bzImage (Compiled Linux Kernel)&#xA;&#x9;&#x9;    ├── grub&#xA;&#x9;&#x9;    │   └── grub.cfg (Grub Configuration)&#xA;&#x9;&#x9;    ├── rootfs.gz (Compressed root file system)&#xA;&#x9;&#x9;    └── System.map (System map that is compiled with kernel)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setting variables to make things easy&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;KERNEL_VERSION=5.4.3&#xA;BUSYBOX_VERSION=1.35.0&#xA;&#xA;SOURCE_DIR=$PWD&#xA;ROOTFS=$SOURCE_DIR/rootfs&#xA;STAGING=$SOURCE_DIR/staging&#xA;ISO_DIR=$SOURCE_DIR/iso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We need to download the required source codes in staging folder and extract them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux kernel 5.4.3&lt;/li&gt; &#xA; &lt;li&gt;Busybox 1.35.0 - For creating minimum shell environment.&lt;/li&gt; &#xA; &lt;li&gt;FBDoom - A port of Doom original source code for Linux framebuffer.&lt;/li&gt; &#xA; &lt;li&gt;Doom shareware - The shareware version of Doom. You can use other versions if you want.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $STAGING&#xA;wget -nc -O kernel.tar.xz http://kernel.org/pub/linux/kernel/v5.x/linux-${KERNEL_VERSION}.tar.xz&#xA;wget -nc -O busybox.tar.bz2 http://busybox.net/downloads/busybox-${BUSYBOX_VERSION}.tar.bz2&#xA;wget -nc -O fbDOOM-master.zip https://github.com/maximevince/fbDOOM/archive/refs/heads/master.zip&#xA;wget -nc -O doom1.wad https://distro.ibiblio.org/slitaz/sources/packages/d/doom1.wad&#xA;&#xA;tar -xvf kernel.tar.xz&#xA;tar -xvf busybox.tar.bz2&#xA;unzip fbDOOM-master.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring the kernel and compile it&lt;/h3&gt; &#xA;&lt;p&gt;Change directory to kernel source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $STAGING&#xA;cd linux-${KERNEL_VERSION}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Creating a config file for kernel. You can use either of the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make -j$(nproc) defconfig # Creates a &#34;.config&#34; file with default options from current architecture&#xA;make -j$(nproc) menuconfig # Menu-driven user interface for configuring kernel&#xA;make -j$(nproc) xconfig # GUI based user interface for configuring kernel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;-j$(nproc) flag sets the number of jobs to the number of CPU cores/threads available. It make things compile faster.&lt;/p&gt; &#xA;&lt;p&gt;Now we will make a couple of changes in the .config file to make our kernel size smaller. It will also reduce the compile time.&lt;/p&gt; &#xA;&lt;p&gt;Use xz kernel compression instead of gzip&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s|.*# CONFIG_KERNEL_XZ is not set.*|CONFIG_KERNEL_XZ=y|&#34; .config&#xA;sed -i &#34;s|.*CONFIG_KERNEL_GZIP=y.*|# CONFIG_KERNEL_GZIP is not set|&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable sound drivers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s|.*CONFIG_SOUND=y.*|# CONFIG_SOUND is not set|&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable network drivers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s|.*CONFIG_NET=y.*|# CONFIG_NET is not set|&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable EFI stubs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s|.*CONFIG_EFI=y.*|# CONFIG_EFI is not set|&#34; .config &#xA;sed -i &#34;s|.*CONFIG_EFI_STUB=y.*|# CONFIG_EFI_STUB is not set|&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disable kernel debug.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s/^CONFIG_DEBUG_KERNEL.*/\\# CONFIG_DEBUG_KERNEL is not set/&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optimize for size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s|.*CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y.*|# CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE is not set|&#34; .config&#xA;sed -i &#34;s|.*# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set.*|CONFIG_CC_OPTIMIZE_FOR_SIZE=y|&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change host name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &#34;s|.*CONFIG_DEFAULT_HOSTNAME=*|CONFIG_DEFAULT_HOSTNAME=\&#34;DoomLinux\&#34;|&#34; .config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now compile the kernel and copy the binaries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make -j$(nproc) bzImage&#xA;cp arch/x86/boot/bzImage $SOURCE_DIR/iso/boot/bzImage&#xA;cp System.map $SOURCE_DIR/iso/boot/System.map&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring busybox and compile it&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd  $STAGING&#xA;cd busybox-${BUSYBOX_VERSION}&#xA;make defconfig&#xA;sed -i &#34;s|.*CONFIG_STATIC.*|CONFIG_STATIC=y|&#34; .config&#xA;make -j$(nproc) busybox install&#xA;cd _install&#xA;cp -r ./ $ROOTFS/&#xA;cd $ROOTFS&#xA;rm -f linuxrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These commands will statically compile busybox. The default installation folder for busybox is _install. We will copy the compiled binaries from there to our rootfs.&lt;/p&gt; &#xA;&lt;h3&gt;Compile FBDoom statically&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $STAGING&#xA;cd fbDOOM-master/fbdoom&#xA;sed -i &#34;s|CFLAGS+=-ggdb3 -Os|CFLAGS+=-ggdb3 -Os -static|&#34; Makefile&#xA;make -j$(nproc)&#xA;cp fbdoom $ROOTFS/bin/fbdoom&#xA;cp $STAGING/doom1.wad $ROOTFS/bin/doom1.wad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We need to statically compile FBDoom to work it in our system with minimal dependencies. The above commands will do that for us and it will also copy the doom1.wad in our root folder.&lt;/p&gt; &#xA;&lt;h3&gt;Archive rootfs&lt;/h3&gt; &#xA;&lt;p&gt;We will create additional folders so that Linux kernel can use them on runtime.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $ROOTFS&#xA;mkdir -p dev proc sys mnt tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we will create a init file for our kernel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;#!/bin/sh&#39; &amp;gt; init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Suppress all messages from the kernel except panic messages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;dmesg -n 1&#39; &amp;gt;&amp;gt; init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mount dev folder to devtmpfs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;mount -t devtmpfs none /dev&#39; &amp;gt;&amp;gt; init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mount proc folder to proc&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;mount -t proc none /proc&#39; &amp;gt;&amp;gt; init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mount sys folder to sysfs&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;mount -t sysfs none /sys&#39; &amp;gt;&amp;gt; init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run doom right after booting the kernel. After that we will run busybox with cttyhack to stop kernel panic if we want to exit busybox. It will open another shell instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;fbdoom -iwad /bin/doom1.wad&#39; &amp;gt;&amp;gt; init&#xA;echo &#39;setsid cttyhack /bin/sh&#39; &amp;gt;&amp;gt; init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We must have to make the init file executable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now archive the rootfs with cpio.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $ROOTFS&#xA;find . | cpio -R root:root -H newc -o | gzip &amp;gt; $SOURCE_DIR/iso/boot/rootfs.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using GRUB bootloader to boot DoomLinux&lt;/h3&gt; &#xA;&lt;p&gt;Create a grub configuration file in iso/boot directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $SOURCE_DIR/iso/boot&#xA;mkdir -p grub&#xA;cd grub&#xA;cat &amp;gt; grub.cfg &amp;lt;&amp;lt; EOF&#xA;set default=0&#xA;set timeout=30&#xA;&#xA;# Menu Colours&#xA;set menu_color_normal=white/black&#xA;set menu_color_highlight=white/green&#xA;&#xA;root (hd0,0)&#xA;&#xA;menuentry &#34;DoomLinux&#34; {      &#xA;  linux  /boot/bzImage&#xA;  initrd /boot/rootfs.gz&#xA;}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These are the location of our compiled kernel and archived rootfs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  linux  /boot/bzImage&#xA;  initrd /boot/rootfs.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally create DoomLinux bootable iso&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $SOURCE_DIR&#xA;grub-mkrescue --compress=xz -o DoomLinux.iso iso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can now write the iso in your USB stick and play Doom.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compiled size&lt;/h2&gt; &#xA;&lt;p&gt;The final iso should be around 20 MB in size depending on the architecture. For my x86_64 CPU the compiled kernel size is 4.1 MB and the iso is 17.9 MB.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=asnXWOUKhTA&#34;&gt;Write your own Operating System&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ivandavidov/minimal-linux-script&#34;&gt;Minimal linux script&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maximevince/fbDOOM&#34;&gt;FBDoom&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DoomLinux in Action&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VaALEKWQOpg&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/VaALEKWQOpg/0.jpg&#34; alt=&#34;DoomLinux&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is made just for those who wants to learn how basic linux systems works. Under no circumstances shall the author be liable for any damage.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT License.&lt;/p&gt;</summary>
  </entry>
</feed>