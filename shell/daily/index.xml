<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-21T03:20:45Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DerDanilo/proxmox-stuff</title>
    <updated>2024-04-21T03:20:45Z</updated>
    <id>tag:github.com,2024-04-21:/DerDanilo/proxmox-stuff</id>
    <link href="https://github.com/DerDanilo/proxmox-stuff" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a collection of stuff that I wrote for Proxmox.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Proxmox stuff&lt;/h1&gt; &#xA;&lt;p&gt;This is a collection of stuff that I wrote for Proxmox. Its possble to use the &lt;a href=&#34;https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/#ansible&#34;&gt;Ansible roles&lt;/a&gt; I wrote or to use the &lt;a href=&#34;https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/#bash-scripts&#34;&gt;bash scripts&lt;/a&gt; for the backup &amp;amp; restore tasks.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Ansible&lt;/h1&gt; &#xA;&lt;p&gt;Small Ansible playbook and role collection for Proxmox related stuff.&lt;/p&gt; &#xA;&lt;h1&gt;prox_config_backup&lt;/h1&gt; &#xA;&lt;p&gt;I just wrote this script quick and dirty. Some people use it on a daily basis (including me).&lt;/p&gt; &#xA;&lt;p&gt;There might be a PBS backup feature to backup PVE cluster config in the near future provided by the Proxmox team. But since this was only mentioned on the roadmap we still have to wait.&lt;/p&gt; &#xA;&lt;p&gt;Meanwhile I manage all PVE nodes with Ansible and usually have no need to restore configuration unless all cluster nodes failed at once. But having a full cluster config backup is still useful and makes PVE admins sleep well at night (or day).&lt;/p&gt; &#xA;&lt;p&gt;The script must be run as root, and can be run from cron or an interactive terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Backup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/prox_config_backup.sh&#34;&gt;script&lt;/a&gt;&lt;br&gt; &lt;code&gt;cd /root/; wget -qO- https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/prox_config_backup.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set the permanent backups directory environment variable &lt;code&gt;export BACK_DIR=&#34;/path/to/backup/directory&#34;&lt;/code&gt; or edit the script to set the &lt;code&gt;$DEFAULT_BACK_DIR&lt;/code&gt; variable to your preferred backup directory&lt;/li&gt; &#xA; &lt;li&gt;Make the script executable &lt;code&gt;chmod +x ./prox_config_backup.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shut down ALL VMs + LXC Containers if you want to go the safe way. (Not required)&lt;/li&gt; &#xA; &lt;li&gt;Run the script &lt;code&gt;./prox_config_backup.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notification&lt;/h3&gt; &#xA;&lt;p&gt;The script supports &lt;a href=&#34;https://healthchecks.io&#34;&gt;healthchecks.io&lt;/a&gt; notifications, either to the hosted service, or a self-hosted instance. The notification sends during the final cleanup stage, and either returns 0 to tell Healthchecks that the command was successful, or the exit error code (1-255) to tell Healthchecks that the command failed. To enable:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set the &lt;code&gt;$HEALTHCHECK&lt;/code&gt; variable to 1&lt;/li&gt; &#xA; &lt;li&gt;Set the &lt;code&gt;$HEALTHCHECK_URL&lt;/code&gt; variable to the full ping URL for your check. Do not include anything after the UUID, the status flag will be added by the script.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Restore&lt;/h2&gt; &#xA;&lt;p&gt;❗ &lt;strong&gt;ONLY USE THIS SCRIPT ON THE SAME NODE / PROXMOX VERSION, OTHERWISE IT WILL BREAK YOUR FRESH PROXMOX INSTALLATION. IT WILL ALSO FAIL IF YOU ARE RUNNING A CLUSTER!&lt;/strong&gt; ❗&lt;/p&gt; &#xA;&lt;p&gt;For more info also see #5.&lt;/p&gt; &#xA;&lt;h1&gt;Bash Scripts&lt;/h1&gt; &#xA;&lt;h3&gt;Cron&lt;/h3&gt; &#xA;&lt;p&gt;To set up a automatic cron job on a monthly (&lt;code&gt;/etc/cron.weekly&lt;/code&gt; or &lt;code&gt;/etc/cron.daily&lt;/code&gt; can be used to!) schedule, running the prox_config_backup script, follow these steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;wget https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/prox_config_backup.sh -O /etc/cron.monthly/prox_config_backup&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Change &lt;code&gt;DEFAULT_BACK_DIR=&#34;/mnt/pve/truenas_backup/pve&#34;&lt;/code&gt; and &lt;code&gt;MAX_BACKUPS=5&lt;/code&gt; to the values you want!&lt;/p&gt; &#xA;&lt;p&gt;Optional: &lt;a href=&#34;https://superuser.com/questions/402781/what-is-run-parts-in-etc-crontab-and-how-do-i-use-it&#34;&gt;Execute run-parts&lt;/a&gt; to see if it contains errors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;run-parts -v --test /etc/cron.monthly&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;On my machine, you end up with a GZipped file of about 1-5 MB with a name like &#34;proxmox_backup_proxmoxhostname_2017-12-02.15.48.10.tar.gz&#34;.&lt;br&gt; Depending upon how you schedule it and the size of your server, that could eventually become a space issue so don&#39;t&lt;br&gt; forget to set up some kind of archive maintenance.&lt;/p&gt; &#xA;&lt;p&gt;To restore, move the file back to proxmox with cp, scp, webmin, a thumb drive, whatever.&lt;br&gt; I place it back into the /var/tmp directory from where it came.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Unpack the original backup&#xA;tar -zxvf proxmox_backup_proxmoxhostname_2017-12-02.15.48.10.tar.gz&#xA;# unpack the tared contents&#xA;tar -xvf proxmoxpve.2017-12-02.15.48.10.tar&#xA;tar -xvf proxmoxetc.2017-12-02.15.48.10.tar&#xA;tar -xvf proxmoxroot.2017-12-02.15.48.10.tar&#xA;&#xA;# If the services are running, stop them:&#xA;for i in pve-cluster pvedaemon vz qemu-server; do systemctl stop $i ; done&#xA;&#xA;# Copy the old content to the original directory:&#xA;cp -avr /var/tmp/var/tmp/etc /etc&#xA;cp -avr /var/tmp/var/tmp/var /var&#xA;cp -avr /var/tmp/var/tmp/root /root&#xA;&#xA;# And, finally, restart services:&#xA;for i in qemu-server vz pvedaemon pve-cluster; do systemctl start $i ; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If nothing goes wrong, and you have separately restored the VM images using the default Proxmox process.&lt;br&gt; You should be back where you started. But let&#39;s hope it never comes to that.&lt;/p&gt; &#xA;&lt;h3&gt;Script&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/prox_config_restore.sh&#34;&gt;script&lt;/a&gt;&lt;br&gt; &lt;code&gt;cd /root/; wget -qO- https://raw.githubusercontent.com/DerDanilo/proxmox-stuff/master/prox_config_restore.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make the script executable &lt;code&gt;chmod +x ./prox_config_restore.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the script &lt;code&gt;./prox_config_restore.sh proxmox_backup_proxmoxhostname_2017-12-02.15.48.10.tar.gz&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://ziemecki.net/content/proxmox-config-backups&#34;&gt;http://ziemecki.net/content/proxmox-config-backups&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>junegunn/fzf-git.sh</title>
    <updated>2024-04-21T03:20:45Z</updated>
    <id>tag:github.com,2024-04-21:/junegunn/fzf-git.sh</id>
    <link href="https://github.com/junegunn/fzf-git.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;bash and zsh key bindings for Git objects, powered by fzf&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fzf-git.sh&lt;/h1&gt; &#xA;&lt;p&gt;bash and zsh key bindings for Git objects, powered by &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img width=&#34;1680&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/700826/185568470-20d70937-eea4-4274-aec5-14dfe7ee2de6.png&#34;&gt; &#xA;&lt;p&gt;Each binding will allow you to browse through Git objects of a certain type, and select the objects you want to paste to your command-line.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the latest version of &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; (including &lt;a href=&#34;https://github.com/junegunn/fzf/raw/master/bin/fzf-tmux&#34;&gt;fzf-tmux&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(Optional) Install &lt;a href=&#34;https://github.com/sharkdp/bat&#34;&gt;bat&lt;/a&gt; for syntax-highlighted file previews&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Source &lt;a href=&#34;https://raw.githubusercontent.com/junegunn/fzf-git.sh/main/fzf-git.sh&#34;&gt;fzf-git.sh&lt;/a&gt; file from your .bashrc or .zshrc&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;List of bindings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-F&lt;/kbd&gt; for &lt;strong&gt;F&lt;/strong&gt;iles&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-B&lt;/kbd&gt; for &lt;strong&gt;B&lt;/strong&gt;ranches&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-T&lt;/kbd&gt; for &lt;strong&gt;T&lt;/strong&gt;ags&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-R&lt;/kbd&gt; for &lt;strong&gt;R&lt;/strong&gt;emotes&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-H&lt;/kbd&gt; for commit &lt;strong&gt;H&lt;/strong&gt;ashes&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-S&lt;/kbd&gt; for &lt;strong&gt;S&lt;/strong&gt;tashes&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-L&lt;/kbd&gt; for ref&lt;strong&gt;l&lt;/strong&gt;ogs&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-W&lt;/kbd&gt; for &lt;strong&gt;W&lt;/strong&gt;orktrees&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-E&lt;/kbd&gt; for &lt;strong&gt;E&lt;/strong&gt;ach ref (&lt;code&gt;git for-each-ref&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] You may have issues with these bindings in the following cases:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-B&lt;/kbd&gt; will not work if &lt;kbd&gt;CTRL-B&lt;/kbd&gt; is used as the tmux prefix&lt;/li&gt; &#xA;  &lt;li&gt;&lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-S&lt;/kbd&gt; will not work if flow control is enabled, &lt;kbd&gt;CTRL-S&lt;/kbd&gt; will freeze the terminal instead &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;(&lt;code&gt;stty -ixon&lt;/code&gt; will disable it)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;To workaround the problems, you can use &lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;&lt;em&gt;{key}&lt;/em&gt;&lt;/kbd&gt; instead of &lt;kbd&gt;CTRL-G&lt;/kbd&gt;&lt;kbd&gt;CTRL-&lt;em&gt;{KEY}&lt;/em&gt;&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] If zsh&#39;s &lt;code&gt;KEYTIMEOUT&lt;/code&gt; is too small (e.g. 1), you may not be able to hit two keys in time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Inside fzf&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;TAB&lt;/kbd&gt; or &lt;kbd&gt;SHIFT-TAB&lt;/kbd&gt; to select multiple objects&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-/&lt;/kbd&gt; to change preview window layout&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;CTRL-O&lt;/kbd&gt; to open the object in the web browser (in GitHub URL scheme)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Redefine this function to change the options&#xA;_fzf_git_fzf() {&#xA;  fzf-tmux -p80%,60% -- \&#xA;    --layout=reverse --multi --height=50% --min-height=20 --border \&#xA;    --border-label-pos=2 \&#xA;    --color=&#39;header:italic:underline,label:blue&#39; \&#xA;    --preview-window=&#39;right,50%,border-left&#39; \&#xA;    --bind=&#39;ctrl-/:change-preview-window(down,50%,border-top|hidden|)&#39; &#34;$@&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Defining shortcut commands&lt;/h2&gt; &#xA;&lt;p&gt;Each binding is backed by &lt;code&gt;_fzf_git_*&lt;/code&gt; function so you can do something like this in your shell configuration file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gco() {&#xA;  _fzf_git_each_ref --no-multi | xargs git checkout&#xA;}&#xA;&#xA;gswt() {&#xA;  cd &#34;$(_fzf_git_worktrees --no-multi)&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>