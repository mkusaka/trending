<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-13T01:55:43Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ivanhao/pvetools</title>
    <updated>2022-07-13T01:55:43Z</updated>
    <id>tag:github.com,2022-07-13:/ivanhao/pvetools</id>
    <link href="https://github.com/ivanhao/pvetools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;proxmox ve tools script(debian9+ can use it).Including email, samba, NFS set zfs max ram, nested virtualization ,docker , pci passthrough etc. for english user,please look the end of readme.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-4fc23dfbe28b491a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;pvetools&lt;/h1&gt; &#xA;&lt;p&gt;proxmox ve tools script(debian9+ can use it).Including &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;samba&lt;/code&gt;,&lt;code&gt; NFS set zfs max ram&lt;/code&gt;, &lt;code&gt;nested virtualization&lt;/code&gt; ,&lt;code&gt;docker &lt;/code&gt;, &lt;code&gt;pci passthrough&lt;/code&gt; etc. for english user,please look the end of readme.&lt;/p&gt; &#xA;&lt;p&gt;这是一个为proxmox ve写的工具脚本（理论上debian9+可以用）。包括&lt;code&gt;配置邮件&lt;/code&gt;，&lt;code&gt;samba&lt;/code&gt;，&lt;code&gt;NFS&lt;/code&gt;，&lt;code&gt;zfs&lt;/code&gt;，&lt;code&gt;嵌套虚拟化&lt;/code&gt;，&lt;code&gt;docker&lt;/code&gt;，&lt;code&gt;硬盘直通&lt;/code&gt;等功能。&lt;/p&gt; &#xA;&lt;h3&gt;安装&lt;/h3&gt; &#xA;&lt;h5&gt;中国用户:&lt;/h5&gt; &#xA;&lt;h6&gt;方式一：命令行安装&lt;/h6&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;需要用root账号来运行&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;在终端中按行分别执行以下内容：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;强烈建议先删除企业源：&lt;code&gt;rm /etc/apt/sources.list.d/pve-enterprise.list&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;export LC_ALL=en_US.UTF-8&#xA;apt update &amp;amp;&amp;amp; apt -y install git &amp;amp;&amp;amp; git clone https://github.com/ivanhao/pvetools.git&#xA;cd pvetools&#xA;./pvetools.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;一键无脑安装:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#34;nameserver  8.8.8.8&#34; &amp;gt;&amp;gt; /etc/resolv.conf &amp;amp;&amp;amp; rm /etc/apt/sources.list.d/pve-enterprise.list &amp;amp;&amp;amp; export LC_ALL=en_US.UTF-8 &amp;amp;&amp;amp; apt update &amp;amp;&amp;amp; apt -y install git &amp;amp;&amp;amp; git clone https://github.com/ivanhao/pvetools.git &amp;amp;&amp;amp; cd pvetools &amp;amp;&amp;amp; ./pvetools.sh&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;方式二：下载zip安装&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-49193f4b6f4040fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;download&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;建议使用方式一来安装，不建议直接下载单sh脚本使用，因为那样更新的功能会无法使用！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果网络无法使用，或命令行使用有困难，可以使用方式二下载zip包拷入系统中使用。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;卸载&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;删除下载的pvetools目录&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;运行&lt;/h3&gt; &#xA;&lt;p&gt;在shell中进入pvetools目录，输入 &lt;code&gt;./pvetools.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果提示没有权限，输入&lt;code&gt;chmod +x ./*.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;主界面&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-501e3adb625c82fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;main&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-53fc13764f684c4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;main1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;根据需要选择对应的选项即可。&lt;/p&gt; &#xA;&lt;h4&gt;配置邮件说明：&lt;/h4&gt; &#xA;&lt;p&gt;只有以下界面需要用tab键选成红框的内容,其他的一律无脑回车即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-2ee76fb89c0f253e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;mail&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;如果这个脚本帮到你了，麻烦点一下右上角的star小星星^_^&lt;/h4&gt; &#xA;&lt;h2&gt;qq交流群: 878510703&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://upload-images.jianshu.io/upload_images/4171480-e0204ead0fb41d5e.jpg&#34; alt=&#34;qq&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如果觉得好的请捐赠一下^_^&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-04c3ebb5c11cfdf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;alipay&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢捐赠人员！&lt;/p&gt; &#xA;&lt;p&gt;捐赠列表：&lt;/p&gt; &#xA;&lt;p&gt;杨惠(来源qq)&lt;/p&gt; &#xA;&lt;p&gt;蓝蓝的天空（来源qq）&lt;/p&gt; &#xA;&lt;p&gt;久别重逢（来源qq）&lt;/p&gt; &#xA;&lt;p&gt;小呀嘛小Kiwi（来源qq)&lt;/p&gt; &#xA;&lt;p&gt;*兴乐（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;孤独的根号三 （来源qq）&lt;/p&gt; &#xA;&lt;p&gt;我心依旧丶(来源qq)&lt;/p&gt; &#xA;&lt;p&gt;*俊磊（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;*家鑫（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;*小虎（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;*杭（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;*伟（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;*棘（来源支付宝）&lt;/p&gt; &#xA;&lt;p&gt;zm （来源qq）&lt;/p&gt; &#xA;&lt;h1&gt;[版本说明]&lt;/h1&gt; &#xA;&lt;h5&gt;v2.3.0&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2022.05.30&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;修复pve7（debian 11)后security更新源地址格式变动的影响。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;fix pve7 (debian 11) security source address.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;添加pve7以上版本配置硬件直通里的参数&lt;code&gt;iommu=pt pcie_acs_override=downstream&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;add pve7　grub config &lt;code&gt;iommu=pt pcie_acs_override=downstream&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;删除默认.vimrc中重复的&lt;code&gt;set termencoding=unix&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;delete .vimrc duplicate termencoding setting &lt;code&gt;set termencoding=unix&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;增加去除订阅提示的修复&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;add reinstall proxmox-widget-toolkit to fix remove subscription failure.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.9&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2022.05.29&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加常用工具下的自动扩展ROOT分区可用空间，比如有些用户使用dd等方式克隆系统盘，更换大硬盘还原镜像后可以一键扩展分区&lt;/li&gt; &#xA; &lt;li&gt;add auto expand / partition size.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.8&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2021.10.26&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;优化pve7去订阅提示的判断和处理。&lt;/li&gt; &#xA; &lt;li&gt;fix pve7 subscription note.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.7&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2021.10.14&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在常用的工具下添加pve界面黑暗模式&lt;/li&gt; &#xA; &lt;li&gt;add proxmox ve darkmode interface to manyTools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.6&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2021.09.09&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加pve7的支持。&lt;/li&gt; &#xA; &lt;li&gt;add proxmox ve 7.x support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.5&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.12.16&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;优化pve升级后温度安装提示判断逻辑。&lt;/li&gt; &#xA; &lt;li&gt;update sensors data install.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.4&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.12.14&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复温度显示界面高度自适应。&lt;/li&gt; &#xA; &lt;li&gt;fix sensors display interface.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.3&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.12.09&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加对/etc/pve/qemu-server下的conf文件自动备份功能，可以选择备份路径和保留备份个数，建议备份到系统分区以外的虚拟机数据盘中，这样重装系统后方便直接恢复&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.2&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.11.30&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;根据群友&lt;code&gt;嗨 我是奶酪&lt;/code&gt;的建议，添加pve 更新源地址为非订阅更新源&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.2.0&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.08.17&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加USB设备做为系统盘的优化，在&#39;常用工具&#39;下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.9&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.07.15&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加N卡vbios的提示功能，在&#39;常用工具&#39;下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.8&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.07.14&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复cpu省电，还原配置无法恢复频率的问题。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.7&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.05.19&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;优化cpu省电提示，处理卸载后再次运行不安装cpufrequtils的问题。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.5&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.03.28&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;解决docker重启不能自动启动的问题。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.4&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2020.02.21&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;常用工具中增加释放内存、speedtest、bbr\bbr+、v2ray功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.3&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.12.24&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;优化samba回收站配置,在设置共享文件夹时自动提示是否开启；可以单独增加和取消某个共享文件夹的回收站；&lt;/li&gt; &#xA; &lt;li&gt;优化web界面温度显示功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.2&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.12.18&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加samba回收站配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.1&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.12.16&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;常用工具中增加dns配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.1.0&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.12.09&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加在pve中直接安装omv( &lt;a href=&#34;https://github.com/ivanhao/omvinpve&#34;&gt;omvInPve&lt;/a&gt;)。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.9&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.12.04&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加samba共享文件夹权限自动配置，不再需要手工配置权限；同时删除共享文件夹会自动还原原来的用户组权限。 建议之前已使用的用户可以先删除旧的共享文件夹，手工恢复权限后，再用工具配置添加。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.8&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.28&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加chroot自定义安装路径的功能。&lt;/li&gt; &#xA; &lt;li&gt;增加chroot docker迁移的功能。 &lt;a href=&#34;https://github.com/ivanhao/pvetools/wiki/m--1-%E9%85%8D%E7%BD%AEdocker-web%E7%95%8C%E9%9D%A2&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.7&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.25&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加安装NFS的功能。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/ivanhao/pvetools#v206-1&#34;&gt;&lt;/a&gt;v2.0.6&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.20&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加常用工具，此版本增加了局域网扫描&lt;/li&gt; &#xA; &lt;li&gt;修复dockerd启动bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/ivanhao/pvetools#v205&#34;&gt;&lt;/a&gt;v2.0.5&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.14&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;chroot优化,增加对alpine版本的判断，优化速度&lt;/li&gt; &#xA; &lt;li&gt;中文环境下包的下载全改到国内服务器&lt;/li&gt; &#xA; &lt;li&gt;docker配置国内源&lt;/li&gt; &#xA; &lt;li&gt;portainer改用docker pull的方式拉取镜像（之前使用tar包部署，github上下载包太慢）&lt;/li&gt; &#xA; &lt;li&gt;增加chroot后台管理功能，检测chroot的运行&lt;/li&gt; &#xA; &lt;li&gt;删除代码目录中的图片，改成简书图片链接&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.4&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.06&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加docker的web界面（portainer)&lt;/li&gt; &#xA; &lt;li&gt;去除隐藏的命令输出，例如apt-get install的输出等。&lt;/li&gt; &#xA; &lt;li&gt;chroot优化&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.3&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.04&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加qm set映射物理硬盘的功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.2&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.11.01&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加chroot功能，默认安装好Alpine&lt;/li&gt; &#xA; &lt;li&gt;增加docker功能，默认安装在Alpine中&lt;/li&gt; &#xA; &lt;li&gt;bug修复&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0.1&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.10.24&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加显卡直通的支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;v2.0&lt;/h5&gt; &#xA;&lt;p&gt;发布时间：2019.10.01&lt;/p&gt; &#xA;&lt;p&gt;new feature:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;界面修改为whiptail，交互性更好，不需要输入字母来选择&lt;/li&gt; &#xA; &lt;li&gt;bug修复&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;installation method&lt;/h3&gt; &#xA;&lt;h6&gt;1. command line&lt;/h6&gt; &#xA;&lt;h5&gt;for english user:&lt;/h5&gt; &#xA;&lt;p&gt;Use root accout to run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export LC_ALL=en_US.UTF-8&#xA;apt update &amp;amp;&amp;amp; apt -y install git &amp;amp;&amp;amp; git clone https://github.com/ivanhao/pvetools.git&#xA;cd pvetools&#xA;./pvetools.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If update error,you can remove enterprise source by : &lt;code&gt;rm /etc/apt/sources.list.d/pve-enterprise.list&lt;/code&gt; and retry.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h6&gt;2. download&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-49193f4b6f4040fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;download&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Interface&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-501e3adb625c82fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;main&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-0e0920b58ce482d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;main1&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Uninstall&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;delete pvetools folder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;cd to pvetools folder,and type:&lt;code&gt;./pvetools.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you should &lt;code&gt;chmod +x pvetools.sh&lt;/code&gt; first.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;email configration note：&lt;/h4&gt; &#xA;&lt;p&gt;you should choose &lt;code&gt;Internet Site&lt;/code&gt; below, and keep others default.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4171480-2ee76fb89c0f253e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;mail&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fluxcd/flux2-kustomize-helm-example</title>
    <updated>2022-07-13T01:55:43Z</updated>
    <id>tag:github.com,2022-07-13:/fluxcd/flux2-kustomize-helm-example</id>
    <link href="https://github.com/fluxcd/flux2-kustomize-helm-example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A GitOps workflow example for multi-env deployments with Flux, Kustomize and Helm.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;flux2-kustomize-helm-example&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluxcd/flux2-kustomize-helm-example/actions&#34;&gt;&lt;img src=&#34;https://github.com/fluxcd/flux2-kustomize-helm-example/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluxcd/flux2-kustomize-helm-example/actions&#34;&gt;&lt;img src=&#34;https://github.com/fluxcd/flux2-kustomize-helm-example/workflows/e2e/badge.svg?sanitize=true&#34; alt=&#34;e2e&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fluxcd/flux2-kustomize-helm-example/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fluxcd/flux2-kustomize-helm-example.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For this example we assume a scenario with two clusters: staging and production. The end goal is to leverage Flux and Kustomize to manage both clusters while minimizing duplicated declarations.&lt;/p&gt; &#xA;&lt;p&gt;We will configure Flux to install, test and upgrade a demo app using &lt;code&gt;HelmRepository&lt;/code&gt; and &lt;code&gt;HelmRelease&lt;/code&gt; custom resources. Flux will monitor the Helm repository, and it will automatically upgrade the Helm releases to their latest chart version based on semver ranges.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;You will need a Kubernetes cluster version 1.16 or newer and kubectl version 1.18. For a quick local test, you can use &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/&#34;&gt;Kubernetes kind&lt;/a&gt;. Any other Kubernetes setup will work as well though.&lt;/p&gt; &#xA;&lt;p&gt;In order to follow the guide you&#39;ll need a GitHub account and a &lt;a href=&#34;https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line&#34;&gt;personal access token&lt;/a&gt; that can create repositories (check all permissions under &lt;code&gt;repo&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Install the Flux CLI on MacOS and Linux using Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install fluxcd/tap/flux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install the CLI by downloading precompiled binaries using a Bash script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://fluxcd.io/install.sh | sudo bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Repository structure&lt;/h2&gt; &#xA;&lt;p&gt;The Git repository contains the following top directories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;apps&lt;/strong&gt; dir contains Helm releases with a custom configuration per cluster&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;infrastructure&lt;/strong&gt; dir contains common infra tools such as NGINX ingress controller and Helm repository definitions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;clusters&lt;/strong&gt; dir contains the Flux configuration per cluster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;├── apps&#xA;│&amp;nbsp;&amp;nbsp; ├── base&#xA;│&amp;nbsp;&amp;nbsp; ├── production &#xA;│&amp;nbsp;&amp;nbsp; └── staging&#xA;├── infrastructure&#xA;│&amp;nbsp;&amp;nbsp; ├── nginx&#xA;│&amp;nbsp;&amp;nbsp; ├── redis&#xA;│&amp;nbsp;&amp;nbsp; └── sources&#xA;└── clusters&#xA;    ├── production&#xA;    └── staging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The apps configuration is structured into:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;apps/base/&lt;/strong&gt; dir contains namespaces and Helm release definitions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;apps/production/&lt;/strong&gt; dir contains the production Helm release values&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;apps/staging/&lt;/strong&gt; dir contains the staging values&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;./apps/&#xA;├── base&#xA;│&amp;nbsp;&amp;nbsp; └── podinfo&#xA;│&amp;nbsp;&amp;nbsp;     ├── kustomization.yaml&#xA;│&amp;nbsp;&amp;nbsp;     ├── namespace.yaml&#xA;│&amp;nbsp;&amp;nbsp;     └── release.yaml&#xA;├── production&#xA;│&amp;nbsp;&amp;nbsp; ├── kustomization.yaml&#xA;│&amp;nbsp;&amp;nbsp; └── podinfo-patch.yaml&#xA;└── staging&#xA;    ├── kustomization.yaml&#xA;    └── podinfo-patch.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;strong&gt;apps/base/podinfo/&lt;/strong&gt; dir we have a HelmRelease with common values for both clusters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: helm.toolkit.fluxcd.io/v2beta1&#xA;kind: HelmRelease&#xA;metadata:&#xA;  name: podinfo&#xA;  namespace: podinfo&#xA;spec:&#xA;  releaseName: podinfo&#xA;  chart:&#xA;    spec:&#xA;      chart: podinfo&#xA;      sourceRef:&#xA;        kind: HelmRepository&#xA;        name: podinfo&#xA;        namespace: flux-system&#xA;  interval: 5m&#xA;  values:&#xA;    cache: redis-master.redis:6379&#xA;    ingress:&#xA;      enabled: true&#xA;      annotations:&#xA;        kubernetes.io/ingress.class: nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;strong&gt;apps/staging/&lt;/strong&gt; dir we have a Kustomize patch with the staging specific values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: helm.toolkit.fluxcd.io/v2beta1&#xA;kind: HelmRelease&#xA;metadata:&#xA;  name: podinfo&#xA;spec:&#xA;  chart:&#xA;    spec:&#xA;      version: &#34;&amp;gt;=1.0.0-alpha&#34;&#xA;  test:&#xA;    enable: true&#xA;  values:&#xA;    ingress:&#xA;      hosts:&#xA;        - host: podinfo.staging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that with &lt;code&gt; version: &#34;&amp;gt;=1.0.0-alpha&#34;&lt;/code&gt; we configure Flux to automatically upgrade the &lt;code&gt;HelmRelease&lt;/code&gt; to the latest chart version including alpha, beta and pre-releases.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;strong&gt;apps/production/&lt;/strong&gt; dir we have a Kustomize patch with the production specific values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: helm.toolkit.fluxcd.io/v2beta1&#xA;kind: HelmRelease&#xA;metadata:&#xA;  name: podinfo&#xA;  namespace: podinfo&#xA;spec:&#xA;  chart:&#xA;    spec:&#xA;      version: &#34;&amp;gt;=1.0.0&#34;&#xA;  values:&#xA;    ingress:&#xA;      hosts:&#xA;        - host: podinfo.production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that with &lt;code&gt; version: &#34;&amp;gt;=1.0.0&#34;&lt;/code&gt; we configure Flux to automatically upgrade the &lt;code&gt;HelmRelease&lt;/code&gt; to the latest stable chart version (alpha, beta and pre-releases will be ignored).&lt;/p&gt; &#xA;&lt;p&gt;Infrastructure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./infrastructure/&#xA;├── nginx&#xA;│&amp;nbsp;&amp;nbsp; ├── kustomization.yaml&#xA;│&amp;nbsp;&amp;nbsp; ├── namespace.yaml&#xA;│&amp;nbsp;&amp;nbsp; └── release.yaml&#xA;├── redis&#xA;│&amp;nbsp;&amp;nbsp; ├── kustomization.yaml&#xA;│&amp;nbsp;&amp;nbsp; ├── namespace.yaml&#xA;│&amp;nbsp;&amp;nbsp; └── release.yaml&#xA;└── sources&#xA;    ├── bitnami.yaml&#xA;    ├── kustomization.yaml&#xA;    └── podinfo.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;strong&gt;infrastructure/sources/&lt;/strong&gt; dir we have the Helm repositories definitions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: source.toolkit.fluxcd.io/v1beta2&#xA;kind: HelmRepository&#xA;metadata:&#xA;  name: podinfo&#xA;spec:&#xA;  interval: 5m&#xA;  url: https://stefanprodan.github.io/podinfo&#xA;---&#xA;apiVersion: source.toolkit.fluxcd.io/v1beta2&#xA;kind: HelmRepository&#xA;metadata:&#xA;  name: bitnami&#xA;spec:&#xA;  interval: 30m&#xA;  url: https://charts.bitnami.com/bitnami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that with &lt;code&gt; interval: 5m&lt;/code&gt; we configure Flux to pull the Helm repository index every five minutes. If the index contains a new chart version that matches a &lt;code&gt;HelmRelease&lt;/code&gt; semver range, Flux will upgrade the release.&lt;/p&gt; &#xA;&lt;h2&gt;Bootstrap staging and production&lt;/h2&gt; &#xA;&lt;p&gt;The clusters dir contains the Flux configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./clusters/&#xA;├── production&#xA;│&amp;nbsp;&amp;nbsp; ├── apps.yaml&#xA;│&amp;nbsp;&amp;nbsp; └── infrastructure.yaml&#xA;└── staging&#xA;    ├── apps.yaml&#xA;    └── infrastructure.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;strong&gt;clusters/staging/&lt;/strong&gt; dir we have the Kustomization definitions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: kustomize.toolkit.fluxcd.io/v1beta2&#xA;kind: Kustomization&#xA;metadata:&#xA;  name: apps&#xA;  namespace: flux-system&#xA;spec:&#xA;  interval: 10m0s&#xA;  dependsOn:&#xA;    - name: infrastructure&#xA;  sourceRef:&#xA;    kind: GitRepository&#xA;    name: flux-system&#xA;  path: ./apps/staging&#xA;  prune: true&#xA;  wait: true&#xA;---&#xA;apiVersion: kustomize.toolkit.fluxcd.io/v1beta2&#xA;kind: Kustomization&#xA;metadata:&#xA;  name: infrastructure&#xA;  namespace: flux-system&#xA;spec:&#xA;  interval: 10m0s&#xA;  sourceRef:&#xA;    kind: GitRepository&#xA;    name: flux-system&#xA;  path: ./infrastructure&#xA;  prune: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that with &lt;code&gt;path: ./apps/staging&lt;/code&gt; we configure Flux to sync the staging Kustomize overlay and with &lt;code&gt;dependsOn&lt;/code&gt; we tell Flux to create the infrastructure items before deploying the apps.&lt;/p&gt; &#xA;&lt;p&gt;Fork this repository on your personal GitHub account and export your GitHub access token, username and repo name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export GITHUB_TOKEN=&amp;lt;your-token&amp;gt;&#xA;export GITHUB_USER=&amp;lt;your-username&amp;gt;&#xA;export GITHUB_REPO=&amp;lt;repository-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that your staging cluster satisfies the prerequisites with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux check --pre&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the kubectl context to your staging cluster and bootstrap Flux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux bootstrap github \&#xA;    --context=staging \&#xA;    --owner=${GITHUB_USER} \&#xA;    --repository=${GITHUB_REPO} \&#xA;    --branch=main \&#xA;    --personal \&#xA;    --path=clusters/staging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bootstrap command commits the manifests for the Flux components in &lt;code&gt;clusters/staging/flux-system&lt;/code&gt; dir and creates a deploy key with read-only access on GitHub, so it can pull changes inside the cluster.&lt;/p&gt; &#xA;&lt;p&gt;Watch for the Helm releases being install on staging:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ watch flux get helmreleases --all-namespaces &#xA;NAMESPACE&#x9;NAME   &#x9;REVISION&#x9;SUSPENDED&#x9;READY&#x9;MESSAGE                          &#xA;nginx    &#x9;nginx  &#x9;5.6.14  &#x9;False    &#x9;True &#x9;release reconciliation succeeded&#x9;&#xA;podinfo  &#x9;podinfo&#x9;5.0.3   &#x9;False    &#x9;True &#x9;release reconciliation succeeded&#x9;&#xA;redis    &#x9;redis  &#x9;11.3.4  &#x9;False    &#x9;True &#x9;release reconciliation succeeded&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that the demo app can be accessed via ingress:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ kubectl -n nginx port-forward svc/nginx-ingress-controller 8080:80 &amp;amp;&#xA;&#xA;$ curl -H &#34;Host: podinfo.staging&#34; http://localhost:8080&#xA;{&#xA;  &#34;hostname&#34;: &#34;podinfo-59489db7b5-lmwpn&#34;,&#xA;  &#34;version&#34;: &#34;5.0.3&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bootstrap Flux on production by setting the context and path to your production cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux bootstrap github \&#xA;    --context=production \&#xA;    --owner=${GITHUB_USER} \&#xA;    --repository=${GITHUB_REPO} \&#xA;    --branch=main \&#xA;    --personal \&#xA;    --path=clusters/production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Watch the production reconciliation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ flux get kustomizations --watch&#xA;NAME          &#x9;REVISION                                        READY&#xA;apps          &#x9;main/797cd90cc8e81feb30cfe471a5186b86daf2758d&#x9;True&#xA;flux-system   &#x9;main/797cd90cc8e81feb30cfe471a5186b86daf2758d&#x9;True&#xA;infrastructure&#x9;main/797cd90cc8e81feb30cfe471a5186b86daf2758d&#x9;True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Encrypt Kubernetes secrets&lt;/h2&gt; &#xA;&lt;p&gt;In order to store secrets safely in a Git repository, you can use Mozilla&#39;s SOPS CLI to encrypt Kubernetes secrets with OpenPGP or KMS.&lt;/p&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.gnupg.org/&#34;&gt;gnupg&lt;/a&gt; and &lt;a href=&#34;https://github.com/mozilla/sops&#34;&gt;sops&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install gnupg sops&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a GPG key for Flux without specifying a passphrase and retrieve the GPG key ID:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ gpg --full-generate-key&#xA;Email address: fluxcdbot@users.noreply.github.com&#xA;&#xA;$ gpg --list-secret-keys fluxcdbot@users.noreply.github.com&#xA;sec   rsa3072 2020-09-06 [SC]&#xA;      1F3D1CED2F865F5E59CA564553241F147E7C5FA4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a Kubernetes secret on your clusters with the private key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gpg --export-secret-keys \&#xA;--armor 1F3D1CED2F865F5E59CA564553241F147E7C5FA4 |&#xA;kubectl create secret generic sops-gpg \&#xA;--namespace=flux-system \&#xA;--from-file=sops.asc=/dev/stdin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a Kubernetes secret manifest and encrypt the secret&#39;s data field with sops:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl -n redis create secret generic redis-auth \&#xA;--from-literal=password=change-me \&#xA;--dry-run=client \&#xA;-o yaml &amp;gt; infrastructure/redis/redis-auth.yaml&#xA;&#xA;sops --encrypt \&#xA;--pgp=1F3D1CED2F865F5E59CA564553241F147E7C5FA4 \&#xA;--encrypted-regex &#39;^(data|stringData)$&#39; \&#xA;--in-place infrastructure/redis/redis-auth.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the secret to &lt;code&gt;infrastructure/redis/kustomization.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: kustomize.config.k8s.io/v1beta1&#xA;kind: Kustomization&#xA;namespace: redis&#xA;resources:&#xA;  - namespace.yaml&#xA;  - release.yaml&#xA;  - redis-auth.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enable decryption on your clusters by editing the &lt;code&gt;infrastructure.yaml&lt;/code&gt; files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: kustomize.toolkit.fluxcd.io/v1beta2&#xA;kind: Kustomization&#xA;metadata:&#xA;  name: infrastructure&#xA;  namespace: flux-system&#xA;spec:&#xA;  # content omitted for brevity&#xA;  decryption:&#xA;    provider: sops&#xA;    secretRef:&#xA;      name: sops-gpg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Export the public key so anyone with access to the repository can encrypt secrets but not decrypt them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gpg --export -a fluxcdbot@users.noreply.github.com &amp;gt; public.key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Push the changes to the main branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add -A &amp;amp;&amp;amp; git commit -m &#34;add encrypted secret&#34; &amp;amp;&amp;amp; git push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that the secret has been created in the &lt;code&gt;redis&lt;/code&gt; namespace on both clusters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl --context staging -n redis get secrets&#xA;kubectl --context production -n redis get secrets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use Kubernetes secrets to provide values for your Helm releases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: helm.toolkit.fluxcd.io/v2beta1&#xA;kind: HelmRelease&#xA;metadata:&#xA;  name: redis&#xA;spec:&#xA;  # content omitted for brevity&#xA;  values:&#xA;    usePassword: true&#xA;  valuesFrom:&#xA;  - kind: Secret&#xA;    name: redis-auth&#xA;    valuesKey: password&#xA;    targetPath: password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find out more about Helm releases values overrides in the &lt;a href=&#34;https://fluxcd.io/docs/components/helm/helmreleases/#values-overrides&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Add clusters&lt;/h2&gt; &#xA;&lt;p&gt;If you want to add a cluster to your fleet, first clone your repo locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/${GITHUB_USER}/${GITHUB_REPO}.git&#xA;cd ${GITHUB_REPO}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a dir inside &lt;code&gt;clusters&lt;/code&gt; with your cluster name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir -p clusters/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the sync manifests from staging:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp clusters/staging/infrastructure.yaml clusters/dev&#xA;cp clusters/staging/apps.yaml clusters/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could create a dev overlay inside &lt;code&gt;apps&lt;/code&gt;, make sure to change the &lt;code&gt;spec.path&lt;/code&gt; inside &lt;code&gt;clusters/dev/apps.yaml&lt;/code&gt; to &lt;code&gt;path: ./apps/dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Push the changes to the main branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add -A &amp;amp;&amp;amp; git commit -m &#34;add dev cluster&#34; &amp;amp;&amp;amp; git push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the kubectl context and path to your dev cluster and bootstrap Flux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux bootstrap github \&#xA;    --context=dev \&#xA;    --owner=${GITHUB_USER} \&#xA;    --repository=${GITHUB_REPO} \&#xA;    --branch=main \&#xA;    --personal \&#xA;    --path=clusters/dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Identical environments&lt;/h2&gt; &#xA;&lt;p&gt;If you want to spin up an identical environment, you can bootstrap a cluster e.g. &lt;code&gt;production-clone&lt;/code&gt; and reuse the &lt;code&gt;production&lt;/code&gt; definitions.&lt;/p&gt; &#xA;&lt;p&gt;Bootstrap the &lt;code&gt;production-clone&lt;/code&gt; cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux bootstrap github \&#xA;    --context=production-clone \&#xA;    --owner=${GITHUB_USER} \&#xA;    --repository=${GITHUB_REPO} \&#xA;    --branch=main \&#xA;    --personal \&#xA;    --path=clusters/production-clone&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull the changes locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git pull origin main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;kustomization.yaml&lt;/code&gt; inside the &lt;code&gt;clusters/production-clone&lt;/code&gt; dir:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: kustomize.config.k8s.io/v1beta1&#xA;kind: Kustomization&#xA;resources:&#xA;  - flux-system&#xA;  - ../production/infrastructure.yaml&#xA;  - ../production/apps.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that besides the &lt;code&gt;flux-system&lt;/code&gt; kustomize overlay, we also include the &lt;code&gt;infrastructure&lt;/code&gt; and &lt;code&gt;apps&lt;/code&gt; manifests from the production dir.&lt;/p&gt; &#xA;&lt;p&gt;Push the changes to the main branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add -A &amp;amp;&amp;amp; git commit -m &#34;add production clone&#34; &amp;amp;&amp;amp; git push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tell Flux to deploy the production workloads on the &lt;code&gt;production-clone&lt;/code&gt; cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flux reconcile kustomization flux-system \&#xA;    --context=production-clone \&#xA;    --with-source &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Any change to the Kubernetes manifests or to the repository structure should be validated in CI before a pull requests is merged into the main branch and synced on the cluster.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the following GitHub CI workflows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/fluxcd/flux2-kustomize-helm-example/main/.github/workflows/test.yaml&#34;&gt;test&lt;/a&gt; workflow validates the Kubernetes manifests and Kustomize overlays with &lt;a href=&#34;https://github.com/yannh/kubeconform&#34;&gt;kubeconform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/fluxcd/flux2-kustomize-helm-example/main/.github/workflows/e2e.yaml&#34;&gt;e2e&lt;/a&gt; workflow starts a Kubernetes cluster in CI and tests the staging setup by running Flux in Kubernetes Kind&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cloudevents/spec</title>
    <updated>2022-07-13T01:55:43Z</updated>
    <id>tag:github.com,2022-07-13:/cloudevents/spec</id>
    <link href="https://github.com/cloudevents/spec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CloudEvents Specification&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CloudEvents&lt;/h1&gt; &#xA;&lt;!-- no verify-specs --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/cncf/artwork/raw/master/projects/cloudevents/horizontal/color/cloudevents-horizontal-color.png&#34; alt=&#34;CloudEvents logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Events are everywhere. However, event producers tend to describe events differently.&lt;/p&gt; &#xA;&lt;p&gt;The lack of a common way of describing events means developers must constantly re-learn how to consume events. This also limits the potential for libraries, tooling and infrastructure to aide the delivery of event data across environments, like SDKs, event routers or tracing systems. The portability and productivity we can achieve from event data is hindered overall.&lt;/p&gt; &#xA;&lt;p&gt;CloudEvents is a specification for describing event data in common formats to provide interoperability across services, platforms and systems.&lt;/p&gt; &#xA;&lt;p&gt;CloudEvents has received a large amount of industry interest, ranging from major cloud providers to popular SaaS companies. CloudEvents is hosted by the &lt;a href=&#34;https://cncf.io&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF) and was approved as a Cloud Native sandbox level project on &lt;a href=&#34;https://docs.google.com/presentation/d/1KNSv70fyTfSqUerCnccV7eEC_ynhLsm9A_kjnlmU_t0/edit#slide=id.g37acf52904_1_41&#34;&gt;May 15, 2018&lt;/a&gt; and as an incubator project on &lt;a href=&#34;https://github.com/cncf/toc/pull/297&#34;&gt;Oct 24, 2019&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;CloudEvents Documents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Latest Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Working Draft&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Core Specification:&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CloudEvents&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/spec.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/spec.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Optional Specifications:&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AMQP Protocol Binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/bindings/amqp-protocol-binding.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/bindings/amqp-protocol-binding.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AVRO Event Format&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/formats/avro-format.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/formats/avro-format.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTTP Protocol Binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/bindings/http-protocol-binding.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/bindings/http-protocol-binding.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;JSON Event Format&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/formats/json-format.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/formats/json-format.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Kafka Protocol Binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/bindings/kafka-protocol-binding.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/bindings/kafka-protocol-binding.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MQTT Protocol Binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/bindings/mqtt-protocol-binding.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/bindings/mqtt-protocol-binding.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NATS Protocol Binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/bindings/nats-protocol-binding.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/bindings/nats-protocol-binding.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WebSockets Protocol Binding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/bindings/websockets-protocol-binding.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Protobuf Event Format&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/formats/protobuf-format.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/formats/protobuf-format.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;XML Event Format&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/working-drafts/xml-format.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Web hook&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/http-webhook.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/http-webhook.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Additional Documentation:&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CloudEvents Primer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cloudevents/spec/raw/v1.0.2/cloudevents/primer.md&#34;&gt;v1.0.2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/primer.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/adapters.md&#34;&gt;CloudEvents Adapters&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/adapters.md&#34;&gt;Not versioned&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/SDK.md&#34;&gt;CloudEvents SDK Requirements&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/SDK.md&#34;&gt;Not versioned&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/documented-extensions.md&#34;&gt;Documented Extensions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/documented-extensions.md&#34;&gt;Not versioned&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/proprietary-specs.md&#34;&gt;Proprietary Specifications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/proprietary-specs.md&#34;&gt;Not versioned&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Other Specifications&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Latest Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Working Draft&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CE SQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cesql/spec.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Discovery&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/discovery/spec.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pagination&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/pagination/spec.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Schema Registry&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/schemaregistry/spec.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Subscriptions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/subscriptions/spec.md&#34;&gt;WIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additional release related information: &lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/docs/RELEASES.md&#34;&gt;Historical releases and changelogs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are new to CloudEvents, it is recommended that you start by reading the &lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/primer.md&#34;&gt;Primer&lt;/a&gt; for an overview of the specification&#39;s goals and design decisions, and then move on to the &lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/spec.md&#34;&gt;core specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since not all event producers generate CloudEvents by default, there is documentation describing the recommended process for adapting some popular events into CloudEvents, see &lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/adapters.md&#34;&gt;CloudEvents Adapters&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;SDKs&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the documentation mentioned above, there is also an &lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/cloudevents/SDK.md&#34;&gt;SDK proposal&lt;/a&gt;. A set of SDKs is also being developed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-csharp&#34;&gt;CSharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-javascript&#34;&gt;Javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-php&#34;&gt;PHP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-powershell&#34;&gt;PowerShell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-ruby&#34;&gt;Ruby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudevents/sdk-rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community and Docs&lt;/h2&gt; &#xA;&lt;p&gt;Learn more about the people and organizations who are creating a dynamic cloud native ecosystem by making our systems interoperable with CloudEvents.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/docs/GOVERNANCE.md&#34;&gt;Governance&lt;/a&gt; documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/docs/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guidance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/docs/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloudevents.io/&#34;&gt;Adopters&lt;/a&gt; - See &#34;Integrations&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/docs/contributors.md&#34;&gt;Contributors&lt;/a&gt;: people and organizations who helped us get started or are actively working on the CloudEvents specification.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudevents/spec/main/docs/README.md&#34;&gt;Demos &amp;amp; open source&lt;/a&gt; -- if you have something to share about your use of CloudEvents, please submit a PR!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cncf/foundation/raw/master/code-of-conduct.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security Concerns&lt;/h3&gt; &#xA;&lt;p&gt;If there is a security concern with one of the specifications in this repository please &lt;a href=&#34;https://github.com/cloudevents/spec/issues&#34;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Communications&lt;/h3&gt; &#xA;&lt;p&gt;The main mailing list for e-mail communications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Send emails to: &lt;a href=&#34;mailto:cncf-cloudevents@lists.cncf.io&#34;&gt;cncf-cloudevents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To subscribe see: &lt;a href=&#34;https://lists.cncf.io/g/cncf-cloudevents&#34;&gt;https://lists.cncf.io/g/cncf-cloudevents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Archives are at: &lt;a href=&#34;https://lists.cncf.io/g/cncf-cloudevents/topics&#34;&gt;https://lists.cncf.io/g/cncf-cloudevents/topics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And a #cloudevents Slack channel under &lt;a href=&#34;http://slack.cncf.io/&#34;&gt;CNCF&#39;s Slack workspace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For SDK related comments and questions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email to: &lt;a href=&#34;mailto:cncf-cloudevents-sdk@lists.cncf.io&#34;&gt;cncf-cloudevents-sdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;To subscribe see: &lt;a href=&#34;https://lists.cncf.io/g/cncf-cloudevents-sdk&#34;&gt;https://lists.cncf.io/g/cncf-cloudevents-sdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Archives are at: &lt;a href=&#34;https://lists.cncf.io/g/cncf-cloudevents-sdk/topics&#34;&gt;https://lists.cncf.io/g/cncf-cloudevents-sdk/topics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: #cloudeventssdk on &lt;a href=&#34;http://slack.cncf.io/&#34;&gt;CNCF&#39;s Slack workspace&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Meeting Time&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.cncf.io/community/calendar/&#34;&gt;CNCF public events calendar&lt;/a&gt;. This specification is being developed by the &lt;a href=&#34;https://github.com/cncf/wg-serverless&#34;&gt;CNCF Serverless Working Group&lt;/a&gt;. This working group meets every Thursday at 9AM PT (USA Pacific) (&lt;a href=&#34;http://www.thetimezoneconverter.com/?t=9:00%20am&amp;amp;tz=San%20Francisco&amp;amp;&#34;&gt;World Time Zone Converter&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://docs.google.com/document/d/1OVF68rpuPK5shIHILK9JOqlZBbfe91RNzQ7u_P7YCDE/edit#&#34;&gt;meeting minutes doc&lt;/a&gt; for the latest information on how to join the calls.&lt;/p&gt; &#xA;&lt;p&gt;Recording from our calls are available &lt;a href=&#34;https://www.youtube.com/channel/UC70hQml92GsoNgnB-CKNEXg/videos&#34;&gt;here&lt;/a&gt;, and older ones are &lt;a href=&#34;https://www.youtube.com/playlist?list=PLj6h78yzYM2Ph7YoBIgsZNW_RGJvNlFOt&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Periodically, the group may have in-person meetings that coincide with a major conference. Please see the &lt;a href=&#34;https://docs.google.com/document/d/1OVF68rpuPK5shIHILK9JOqlZBbfe91RNzQ7u_P7YCDE/edit#&#34;&gt;meeting minutes doc&lt;/a&gt; for any future plans.&lt;/p&gt;</summary>
  </entry>
</feed>