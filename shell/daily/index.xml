<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-11T01:42:44Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>github/scripts-to-rule-them-all</title>
    <updated>2024-01-11T01:42:44Z</updated>
    <id>tag:github.com,2024-01-11:/github/scripts-to-rule-them-all</id>
    <link href="https://github.com/github/scripts-to-rule-them-all" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Set of boilerplate scripts describing the normalized script pattern that GitHub uses in its projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scripts To Rule Them All&lt;/h1&gt; &#xA;&lt;p&gt;This is a set of boilerplate scripts describing the &lt;a href=&#34;http://githubengineering.com/scripts-to-rule-them-all/&#34;&gt;normalized script pattern that GitHub uses in its projects&lt;/a&gt;. While these patterns can work for projects based on any framework or language, these particular examples are for a simple Ruby on Rails application.&lt;/p&gt; &#xA;&lt;h2&gt;The Idea&lt;/h2&gt; &#xA;&lt;p&gt;If your scripts are normalized by name across all of your projects, your contributors only need to know the pattern, not a deep knowledge of the application. This means they can jump into a project and make contributions without first learning how to bootstrap the project or how to get its tests to run.&lt;/p&gt; &#xA;&lt;p&gt;The intricacies of things like test commands and bootstrapping can be managed by maintainers, who have a rich understanding of the project&#39;s domain. Individual contributors need only to know the patterns and can simply run the commands and get what they expect.&lt;/p&gt; &#xA;&lt;h2&gt;The Scripts&lt;/h2&gt; &#xA;&lt;p&gt;Each of these scripts is responsible for a unit of work. This way they can be called from other scripts.&lt;/p&gt; &#xA;&lt;p&gt;This not only cleans up a lot of duplicated effort, it means contributors can do the things they need to do, without having an extensive fundamental knowledge of how the project works. Lowering friction like this is key to faster and happier contributions.&lt;/p&gt; &#xA;&lt;p&gt;The following is a list of scripts and their primary responsibilities.&lt;/p&gt; &#xA;&lt;h3&gt;script/bootstrap&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/bootstrap&#34;&gt;&lt;code&gt;script/bootstrap&lt;/code&gt;&lt;/a&gt; is used solely for fulfilling dependencies of the project.&lt;/p&gt; &#xA;&lt;p&gt;This can mean RubyGems, npm packages, Homebrew packages, Ruby versions, Git submodules, etc.&lt;/p&gt; &#xA;&lt;p&gt;The goal is to make sure all required dependencies are installed.&lt;/p&gt; &#xA;&lt;h3&gt;script/setup&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/setup&#34;&gt;&lt;code&gt;script/setup&lt;/code&gt;&lt;/a&gt; is used to set up a project in an initial state. This is typically run after an initial clone, or, to reset the project back to its initial state.&lt;/p&gt; &#xA;&lt;p&gt;This is also useful for ensuring that your bootstrapping actually works well.&lt;/p&gt; &#xA;&lt;h3&gt;script/update&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/update&#34;&gt;&lt;code&gt;script/update&lt;/code&gt;&lt;/a&gt; is used to update the project after a fresh pull.&lt;/p&gt; &#xA;&lt;p&gt;If you have not worked on the project for a while, running &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/update&#34;&gt;&lt;code&gt;script/update&lt;/code&gt;&lt;/a&gt; after a pull will ensure that everything inside the project is up to date and ready to work.&lt;/p&gt; &#xA;&lt;p&gt;Typically, &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/bootstrap&#34;&gt;&lt;code&gt;script/bootstrap&lt;/code&gt;&lt;/a&gt; is run inside this script. This is also a good opportunity to run database migrations or any other things required to get the state of the app into shape for the current version that is checked out.&lt;/p&gt; &#xA;&lt;h3&gt;script/server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/server&#34;&gt;&lt;code&gt;script/server&lt;/code&gt;&lt;/a&gt; is used to start the application.&lt;/p&gt; &#xA;&lt;p&gt;For a web application, this might start up any extra processes that the application requires to run in addition to itself.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/update&#34;&gt;&lt;code&gt;script/update&lt;/code&gt;&lt;/a&gt; should be called ahead of any application booting to ensure that the application is up to date and can run appropriately.&lt;/p&gt; &#xA;&lt;h3&gt;script/test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/test&#34;&gt;&lt;code&gt;script/test&lt;/code&gt;&lt;/a&gt; is used to run the test suite of the application.&lt;/p&gt; &#xA;&lt;p&gt;A good pattern to support is having an optional argument that is a file path. This allows you to support running single tests.&lt;/p&gt; &#xA;&lt;p&gt;Linting (i.e. rubocop, jshint, pmd, etc.) can also be considered a form of testing. These tend to run faster than tests, so put them towards the beginning of a &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/test&#34;&gt;&lt;code&gt;script/test&lt;/code&gt;&lt;/a&gt; so it fails faster if there&#39;s a linting problem.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/test&#34;&gt;&lt;code&gt;script/test&lt;/code&gt;&lt;/a&gt; should be called from &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/cibuild&#34;&gt;&lt;code&gt;script/cibuild&lt;/code&gt;&lt;/a&gt;, so it should handle setting up the application appropriately based on the environment. For example, if called in a development environment, it should probably call &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/update&#34;&gt;&lt;code&gt;script/update&lt;/code&gt;&lt;/a&gt; to always ensure that the application is up to date. If called from &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/cibuild&#34;&gt;&lt;code&gt;script/cibuild&lt;/code&gt;&lt;/a&gt;, it should probably reset the application to a clean state.&lt;/p&gt; &#xA;&lt;h3&gt;script/cibuild&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/cibuild&#34;&gt;&lt;code&gt;script/cibuild&lt;/code&gt;&lt;/a&gt; is used for your continuous integration server. This script is typically only called from your CI server.&lt;/p&gt; &#xA;&lt;p&gt;You should set up any specific things for your environment here before your tests are run. Your test are run simply by calling &lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/test&#34;&gt;&lt;code&gt;script/test&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;script/console&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/scripts-to-rule-them-all/master/script/console&#34;&gt;&lt;code&gt;script/console&lt;/code&gt;&lt;/a&gt; is used to open a console for your application.&lt;/p&gt; &#xA;&lt;p&gt;A good pattern to support is having an optional argument that is an environment name, so you can connect to that environment&#39;s console.&lt;/p&gt; &#xA;&lt;p&gt;You should configure and run anything that needs to happen to open a console for the requested environment.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MatheuZSecurity/D3m0n1z3dShell</title>
    <updated>2024-01-11T01:42:44Z</updated>
    <id>tag:github.com,2024-01-11:/MatheuZSecurity/D3m0n1z3dShell</id>
    <link href="https://github.com/MatheuZSecurity/D3m0n1z3dShell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demonized Shell is an Advanced Tool for persistence in linux.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;„Äåüòà„ÄçAbout D3m0n1z3dShell &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MatheuZSecurity/D3m0n1z3dShell/main/banner2.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Demonized Shell is an Advanced Tool for persistence in linux.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/MatheuZSecurity/D3m0n1z3dShell.git&#xA;cd D3m0n1z3dShell&#xA;chmod +x demonizedshell.sh&#xA;sudo ./demonizedshell.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;One-Liner Install&lt;/h3&gt; &#xA;&lt;p&gt;Download D3m0n1z3dShell with all files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://github.com/MatheuZSecurity/D3m0n1z3dShell/archive/main.tar.gz | tar xz &amp;amp;&amp;amp; cd D3m0n1z3dShell-main &amp;amp;&amp;amp; sudo ./demonizedshell.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load D3m0n1z3dShell statically (without the static-binaries directory):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo curl -s https://raw.githubusercontent.com/MatheuZSecurity/D3m0n1z3dShell/main/static/demonizedshell_static.sh -o /tmp/demonizedshell_static.sh &amp;amp;&amp;amp; sudo bash /tmp/demonizedshell_static.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Demonized Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto Generate SSH keypair for all users&lt;/li&gt; &#xA; &lt;li&gt;APT Persistence&lt;/li&gt; &#xA; &lt;li&gt;Crontab Persistence&lt;/li&gt; &#xA; &lt;li&gt;Systemd User level&lt;/li&gt; &#xA; &lt;li&gt;Systemd Root Level&lt;/li&gt; &#xA; &lt;li&gt;Bashrc Persistence&lt;/li&gt; &#xA; &lt;li&gt;Privileged user &amp;amp; SUID bash&lt;/li&gt; &#xA; &lt;li&gt;LKM Rootkit Modified, Bypassing rkhunter &amp;amp; chkrootkit&lt;/li&gt; &#xA; &lt;li&gt;LKM Rootkit With file encoder. persistent icmp backdoor and others features.&lt;/li&gt; &#xA; &lt;li&gt;ICMP Backdoor&lt;/li&gt; &#xA; &lt;li&gt;LD_PRELOAD Setup PrivEsc&lt;/li&gt; &#xA; &lt;li&gt;Static Binaries For Process Monitoring, Dump credentials, Enumeration, Trolling and Others Binaries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pending Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; LD_PRELOAD Rootkit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Process Injection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; install for example: curl github.com/test/test/demonized.sh | bash&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Static D3m0n1z3dShell&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Intercept Syscall Write from a file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ELF/Rootkit Anti-Reversing Technique&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; PAM Backdoor&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rc.local Persistence&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; init.d Persistence&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; motd Persistence&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Persistence via php webshell.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And other types of features that will come in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute and help with the tool, please contact me on twitter: @MatheuzSecurity&lt;/p&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We are not responsible for any damage caused by this tool, use the tool intelligently and for educational purposes only.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>