<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-20T01:31:04Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dnburgess/dockerinstall</title>
    <updated>2023-12-20T01:31:04Z</updated>
    <id>tag:github.com,2023-12-20:/dnburgess/dockerinstall</id>
    <link href="https://github.com/dnburgess/dockerinstall" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Just a quick and easy way to deploy Docker and Docker Compose with just a couple of commands&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DB Tech&#39;s Docker and Docker Compose Install&lt;/h1&gt; &#xA;&lt;h2&gt;Install Using Root (Non-Root method below)&lt;/h2&gt; &#xA;&lt;p&gt;To install the newest versions of sudo (optional depending on which script you use), curl, Docker, and docker compose, simply ssh into your server, then clone this repository with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/dnburgess/dockerinstall.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have git installed, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change into the new directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd dockerinstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make the file executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chmod +x dockerinstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute the file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./dockerinstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install Without Using Root&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t want to use root/sudo, you can do the following:&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/dnburgess/dockerinstall.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have git installed, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change into the new directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd dockerinstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make the file executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chmod +x dockerinstallnoroot.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute the file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./dockerinstallnoroot.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install Using Root (includes Portainer)&lt;/h2&gt; &#xA;&lt;p&gt;To install the newest versions of sudo (optional depending on which script you use), curl, Docker, and docker compose, simply ssh into your server, then clone this repository with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/dnburgess/dockerinstall.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have git installed, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change into the new directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd dockerinstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make the file executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;chmod +x dockerportainerinstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute the file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./dockerportainerinstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;The Bash Script Explained&lt;/h1&gt; &#xA;&lt;p&gt;This shell script appears to automate the installation of Docker and Docker Compose on a Linux system. Here&#39;s a breakdown of what each section of the script does:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set Script Options:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;set -o errexit&#xA;set -o nounset&#xA;IFS=$(printf &#39;\n\t&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;set -o errexit&lt;/code&gt;: The script will exit if any command exits with a non-zero status.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;set -o nounset&lt;/code&gt;: The script will exit if it tries to use an uninitialized variable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IFS=$(printf &#39;\n\t&#39;)&lt;/code&gt;: Internal Field Separator is set to newline and tab.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install Docker&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install sudo -y &amp;amp;&amp;amp; apt install curl -y&#xA;curl -fsSL https://get.docker.com -o get-docker.sh&#xA;sudo sh get-docker.sh&#xA;printf &#39;\nDocker installed successfully\n\n&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installs sudo and curl using the apt package manager.&lt;/li&gt; &#xA; &lt;li&gt;Downloads the Docker installation script using curl.&lt;/li&gt; &#xA; &lt;li&gt;Executes the Docker installation script using sudo sh.&lt;/li&gt; &#xA; &lt;li&gt;Prints a success message.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Wait for Docker to Start&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;printf &#39;Waiting for Docker to start...\n\n&#39;&#xA;sleep 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prints a message indicating that the script is waiting for Docker to start.&lt;/li&gt; &#xA; &lt;li&gt;Sleeps for 5 seconds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install Docker Compose:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep &#39;tag_name&#39; | cut -d\&#34; -f4)&#xA;sudo curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` &amp;gt; /usr/local/bin/docker-compose&#xA;sudo chmod +x /usr/local/bin/docker-compose&#xA;sudo curl -L https://raw.githubusercontent.com/docker/compose/${COMPOSE_VERSION}/contrib/completion/bash/docker-compose &amp;gt; /etc/bash_completion.d/docker-compose&#xA;printf &#39;\nDocker Compose installed successfully\n\n&#39;&#xA;sudo docker-compose -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Retrieves the latest Docker Compose version from GitHub API.&lt;/li&gt; &#xA; &lt;li&gt;Downloads Docker Compose binary using &lt;code&gt;curl&lt;/code&gt; and installs it in &lt;code&gt;/usr/local/bin/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Sets executable permissions for Docker Compose.&lt;/li&gt; &#xA; &lt;li&gt;Downloads Bash completion script for Docker Compose.&lt;/li&gt; &#xA; &lt;li&gt;Prints a success message.&lt;/li&gt; &#xA; &lt;li&gt;Displays the installed Docker Compose version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note that this script assumes a Debian-based Linux distribution. If you are using a different distribution, adjustments may be needed. Additionally, it&#39;s essential to review and understand scripts before executing them, especially when using sudo commands from the internet.&lt;/p&gt;</summary>
  </entry>
</feed>