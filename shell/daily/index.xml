<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-06T01:44:00Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MortezaBashsiz/CFScanner</title>
    <updated>2023-02-06T01:44:00Z</updated>
    <id>tag:github.com,2023-02-06:/MortezaBashsiz/CFScanner</id>
    <link href="https://github.com/MortezaBashsiz/CFScanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud Flare scanner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sudoer Telegram Bot&lt;/h1&gt; &#xA;&lt;p&gt;This script scans all 1.5 Million cloudflare IP addresses and generate a result file contains the IPs which are work with CDN&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;You have to install following packages&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl&#xA;nmap&#xA;parallel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to run&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[~]&amp;gt;$ git clone https://github.com/MortezaBashsiz/CFScanner.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Change direcotry&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[~]&amp;gt;$ cd CFScanner/scripts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Execute it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You must specify the parallel process count. In this example I execute it in 16 simultanious processes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[~/CFScanner/scripts]&amp;gt;$ bash cfFindIP.sh 16 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Result It will generate a file by datetime in result direcotry&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[~/CFScanner]&amp;gt;$ ls result/&#xA;20230120-203358-result.cf&#xA;[~/CFScanner]&amp;gt;$&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>zscole/canto-node-primer</title>
    <updated>2023-02-06T01:44:00Z</updated>
    <id>tag:github.com,2023-02-06:/zscole/canto-node-primer</id>
    <link href="https://github.com/zscole/canto-node-primer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Canto Node Primer&lt;/h1&gt; &#xA;&lt;h2&gt;How To Set Up A Canto Node&lt;/h2&gt; &#xA;&lt;p&gt;Hello, friend! Welcome to Cantofornia! This guide is intended for people who are new to Canto and want to run a personal node. It is not written for people who are already running a node. If you are already running a node, you probably don&#39;t need this guide.&lt;/p&gt; &#xA;&lt;p&gt;This is meant to be a friendly and informal how-to for network hobbyists, community members, and anyone else who wants to quickly set up a node for personal use.&lt;/p&gt; &#xA;&lt;p&gt;If you have any more advanced questions, feel free to ask them in the &lt;a href=&#34;https://t.me/cantocult&#34;&gt;Canto Cult Telegram group&lt;/a&gt;. You can also &lt;a href=&#34;https://twitter.com/0xzak&#34;&gt;DM me on Twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Although I am a core contributor to the project, I do not speak for the community.&lt;/p&gt; &#xA;&lt;h2&gt;What is Canto?&lt;/h2&gt; &#xA;&lt;p&gt;Before we dive into the technical details, let&#39;s quickly go over the basics of the Canto community.&lt;/p&gt; &#xA;&lt;p&gt;Canto is a permissionless, general-purpose blockchain running the Ethereum Virtual Machine (EVM).&lt;/p&gt; &#xA;&lt;p&gt;It was built using the &lt;a href=&#34;https://github.com/cosmos/cosmos-sdk&#34;&gt;Cosmos SDK&lt;/a&gt;, which is a framework for building blockchains.&lt;/p&gt; &#xA;&lt;p&gt;One of the primary goals of Canto, as an experimental project, is to provide an alternative financial system that is easy to use and understand. The reason I do what I do is to build systems that enable decentralized finance (DeFi) services for the world in a manner that ensures consent, privacy, and equitable access to anyone who would want to join and participate within the community.&lt;/p&gt; &#xA;&lt;p&gt;Now, let&#39;s dive into the technical details.&lt;/p&gt; &#xA;&lt;h1&gt;Recommended System Requirements:&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;  * A computer or VM with a 64-bit operating system (Windows, Linux, Mac OS X, etc.)&#xA;  * At least 2GB of RAM&#xA;  * At least 10GB of free disk space&#xA;  * A broadband internet connection&#xA;  * A static IP address (optional, but recommended)&#xA;  * A Canto wallet (optional, but recommended)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I am setting up a node on a VM that I have deployed on &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;. I&#39;m using Ubuntu 18.04 LTS. I have selected a general-purpose e2-standard-4 VM with 4 vCPUs, 16GB of RAM, and 300GB of disk space. If you require high perfomance, I would recommend running NVME SSDs, but for the purpose of this guide, I&#39;m using standard persistent disks. The total monthly cost for a VM with this configuration is approximately $127.84, or about $0.18 hourly.&lt;/p&gt; &#xA;&lt;h1&gt;Network Details&lt;/h1&gt; &#xA;&lt;p&gt;Network Type: Mainnet&lt;br&gt; Chain ID: canto_7700-1&lt;br&gt; Current Node Version: v5.0.0.&lt;/p&gt; &#xA;&lt;h1&gt;Run Bash Script&lt;/h1&gt; &#xA;&lt;p&gt;Included in this repository is a simple bash script that will install all of the necessary dependencies, set up your node, and configure everything needed to get going.&lt;/p&gt; &#xA;&lt;p&gt;Git clone this repository to your home directory and then navigate to the folder once it&#39;s successfully cloned.&lt;/p&gt; &#xA;&lt;p&gt;From the &lt;code&gt;$HOME/canto-node-primer&lt;/code&gt; folder, run &lt;code&gt;chmod 700 setup.sh&lt;/code&gt; to make the bash script an executable file.&lt;/p&gt; &#xA;&lt;p&gt;Before running the script, edit the &lt;code&gt;canto.service&lt;/code&gt; file and replace &lt;code&gt;INSERT_YOUR_USERNAME_HERE&lt;/code&gt; with your username on line 7. If you&#39;re on a VM, you can edit the file from your CLI by running &lt;code&gt;vim canto.service&lt;/code&gt;. If you&#39;re not sure what your username is, just run the command &lt;code&gt;echo $USER&lt;/code&gt;, which will return your username.&lt;/p&gt; &#xA;&lt;p&gt;Make sure your go version is &amp;gt;= 1.18 and correctly configured&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;./setup.sh&lt;/code&gt; and let the script work its magic.&lt;/p&gt; &#xA;&lt;p&gt;The sync process shouldn&#39;t take very long because we leverage state-sync functionality which is pulled from a node operated by the Polkachu team. By default, your node will run as a full node. This means it will maintain historical state and also validate whether or not a transaction was confirmed by the network, but if your application requires specific historical events, you&#39;ll need an archive node, which takes a much longer time to sync and demands a higher amount of computational resources.&lt;/p&gt; &#xA;&lt;h1&gt;Additional Notes&lt;/h1&gt; &#xA;&lt;p&gt;If you plan on interacting with the node often, it might make more sense to run the application in a &lt;a href=&#34;https://github.com/tmux/tmux/wiki&#34;&gt;tmux&lt;/a&gt; window as opposed to a systemd service. This will allow you to interact with your node&#39;s command line interface without running the risk of halting the application process.&lt;/p&gt;</summary>
  </entry>
</feed>