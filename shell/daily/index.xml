<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-16T01:44:53Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wangmingcc/docker-compose-demo</title>
    <updated>2023-11-16T01:44:53Z</updated>
    <id>tag:github.com,2023-11-16:/wangmingcc/docker-compose-demo</id>
    <link href="https://github.com/wangmingcc/docker-compose-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐳 一个能帮助你彻底解决使用docker搭建各种服务难题的代码库。&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/wangming2674/docker-compose-demo&#34; target=&#34;_blank&#34;&gt;Docker Compose Demo&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/wangming2674/docker-compose-demo/raw/master/license&#34;&gt;&lt;img alt=&#34;LICENSE&#34; src=&#34;https://img.shields.io/github/license/wangming2674/docker-compose-demo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wangming2674&#34;&gt;&lt;img alt=&#34;author&#34; src=&#34;https://img.shields.io/badge/author-Evan Wang-blue.svg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jetbrains.com/?from=docker-compose-demo&#34;&gt;&lt;img alt=&#34;author&#34; src=&#34;https://img.shields.io/badge/IntelliJ%20IDEA-提供支持-green.svg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/wangming2674/docker-compose-demo/stargazers&#34;&gt;&lt;img alt=&#34;star&#34; src=&#34;https://img.shields.io/github/stars/wangming2674/docker-compose-demo.svg?label=Stars&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wangming2674/docker-compose-demo/network/members&#34;&gt;&lt;img alt=&#34;star&#34; src=&#34;https://img.shields.io/github/forks/wangming2674/docker-compose-demo.svg?label=Fork&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wangming2674/docker-compose-demo/watchers&#34;&gt;&lt;img alt=&#34;star&#34; src=&#34;https://img.shields.io/github/watchers/wangming2674/docker-compose-demo.svg?label=Watch&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;项目简介&lt;/h2&gt; &#xA;&lt;p&gt;您是否在工作中用&lt;code&gt;docker&lt;/code&gt;搭建服务时，遇到过以下问题：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;1.每次都要重复查找搭建服务的docker命令，浪费时间。&#xA;2.找到的docker命令各式各样，毫无规范。&#xA;3.命令可以使用，但是需要设置的参数残缺不全。&#xA;4.对要搭建的服务需要设置的相关参数一知半解，无法配置。&#xA;5.不清楚使用的命令是否经过验证，无法保证安全性和可靠性。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose demo&lt;/code&gt; 是一个旨在帮助开发者用&lt;code&gt;docker-compose&lt;/code&gt; 快速、便捷、可靠地部署相关&lt;code&gt;docker&lt;/code&gt; 服务的代码库，目前总共包含 &lt;code&gt;15&lt;/code&gt; 个demo。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;服务&lt;/th&gt; &#xA;   &lt;th&gt;功能简介&lt;/th&gt; &#xA;   &lt;th&gt;官方网站&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;jenkins&lt;/td&gt; &#xA;   &lt;td&gt;持续集成工具&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.jenkins.io&#34;&gt;https://www.jenkins.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;gitlab&lt;/td&gt; &#xA;   &lt;td&gt;代码仓库管理系统&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com&#34;&gt;https://gitlab.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;redis&lt;/td&gt; &#xA;   &lt;td&gt;缓存数据库&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://redis.io&#34;&gt;https://redis.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nginx&lt;/td&gt; &#xA;   &lt;td&gt;反向代理web服务器&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://nginx.com&#34;&gt;https://nginx.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;sonarqube&lt;/td&gt; &#xA;   &lt;td&gt;源代码检测工具&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sonarsource.com&#34;&gt;https://www.sonarsource.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mysql&lt;/td&gt; &#xA;   &lt;td&gt;关系数据库&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.mysql.com&#34;&gt;https://dev.mysql.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;elastic search&lt;/td&gt; &#xA;   &lt;td&gt;分布式的全文搜索引擎&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co&#34;&gt;https://www.elastic.co&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logstash&lt;/td&gt; &#xA;   &lt;td&gt;服务器端数据处理管道&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co&#34;&gt;https://www.elastic.co&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;kibana&lt;/td&gt; &#xA;   &lt;td&gt;分布式数据分析与可视化平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co&#34;&gt;https://www.elastic.co&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;kafka&lt;/td&gt; &#xA;   &lt;td&gt;分布式消息队列&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kafka.apache.org&#34;&gt;https://kafka.apache.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;minio&lt;/td&gt; &#xA;   &lt;td&gt;分布式文件存储&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://min.io&#34;&gt;https://min.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rabbitmq&lt;/td&gt; &#xA;   &lt;td&gt;分布式消息队列&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.rabbitmq.com&#34;&gt;https://www.rabbitmq.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;zookeeper&lt;/td&gt; &#xA;   &lt;td&gt;分布式应用程序协调服务&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://zookeeper.apache.org&#34;&gt;https://zookeeper.apache.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;portainer&lt;/td&gt; &#xA;   &lt;td&gt;Docker可视化容器管理工具&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.portainer.io&#34;&gt;https://www.portainer.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rocketmq&lt;/td&gt; &#xA;   &lt;td&gt;分布式消息队列&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rocketmq.apache.org&#34;&gt;https://rocketmq.apache.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果大家还有其他想要搭建的&lt;code&gt;docker&lt;/code&gt;服务，可以在&lt;a href=&#34;https://github.com/wangming2674/docker-compose-demo/issues/new&#34;&gt;issue&lt;/a&gt;中提出需求。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;项目中&lt;code&gt;docker-compose&lt;/code&gt;代码均来自于实践总结，但难免会出现错误，如果您发现有问题，请及时进行反馈，我会在收到反馈后第一时间进行修复。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果您有已经编写好的&lt;code&gt;docker-compose&lt;/code&gt;代码，欢迎提出PR，提前感谢您的贡献。🤝&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Docker和Docker-Compose安装&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;注意：以下脚本已经过&lt;code&gt;linux centos7.x&lt;/code&gt;系统测试，其他系统无法保证完全适用。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/bash&#xA;# 更新yum依赖&#xA;yum update -y &amp;amp;&amp;amp; yum makecache -y&#xA;&#xA;# 安装依赖包&#xA;yum install -y yum-uitls device-mapper-persistent-data lvm2&#xA;&#xA;echo &#39;Install started...&#39;&#xA;&#xA;# 安装docker&#xA;curl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo&#xA;yum install -y docker-ce&#xA;&#xA;# 启动docker&#xA;systemctl enable docker&#xA;systemctl start docker&#xA;&#xA;# 配置docker镜像加速&#xA;[ -f /etc/docker/daemon.json ] || touch /etc/docker/daemon.json&#xA;cat &amp;gt;&amp;gt;/etc/docker/daemon.json &amp;lt;&amp;lt;EOF&#xA;{&#xA;&#34;registry-mirrors&#34;: [&#34;https://gdhauhuq.mirror.aliyuncs.com&#34;],&#xA;&#34;log-driver&#34;:&#34;json-file&#34;,&#xA;&#34;log-opts&#34;:{&#34;max-size&#34; :&#34;1000m&#34;,&#34;max-file&#34;:&#34;5&#34;}&#xA;}&#xA;EOF&#xA;&#xA;# 重新加载docker配置&#xA;systemctl daemon-reload&#xA;systemctl restart docker&#xA;&#xA;# 安装docker-compose&#xA;curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m) &amp;gt;/usr/local/bin/docker-compose&#xA;chmod +x /usr/local/bin/docker-compose&#xA;&#xA;# 查看版本信息&#xA;docker -v&#xA;docker-compose -v&#xA;&#xA;echo &#34;Install completed!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker-Compose命令&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 在后台启动服务&#xA;docker-compose up -d &#xA;&#xA;# 查看启动的服务&#xA;docker-compose ps   &#xA;&#xA;# 停止服务&#xA;docker-compose stop&#xA;&#xA;# 查看帮助&#xA;docker-compose -h&#xA;&#xA;# -f 指定使用的compose模板文件，默认为docker-compose.yml，可以多次指定。&#xA;docker-compose -f docker-compose.yml up -d &#xA;&#xA;# 启动所有容器，-d 将会在后台启动并运行所有的容器&#xA;docker-compose up -d&#xA;&#xA;# 停用移除所有容器以及网络相关&#xA;docker-compose down&#xA;&#xA;# 查看服务容器的输出&#xA;docker-compose logs&#xA;&#xA;# 列出项目中目前的所有容器&#xA;docker-compose ps&#xA;&#xA;# 构建（重新构建）项目中的服务容器。服务容器一旦构建后，将会带上一个标记名，例如对于 web 项目中的一个 db 容器，可能是 web_db，可以随时在项目目录下运行build命令。&#xA;docker-compose build&#xA;&#xA;# 拉取服务依赖的镜像&#xA;docker-compose pull&#xA;&#xA;# 重启项目中的服务&#xA;docker-compose restart&#xA;&#xA;# 删除所有（停止状态的）服务容器。推荐先执行 docker-compose stop 命令来停止容器。&#xA;docker-compose rm &#xA;&#xA;# 在指定服务上执行一个命令。&#xA;docker-compose run ubuntu ping docker.com&#xA;&#xA;# 设置指定服务运行的容器个数。通过 service=num 的参数来设置数量&#xA;docker-compose scale web=3 db=2&#xA;&#xA;# 启动已经存在的服务容器。&#xA;docker-compose start&#xA;&#xA;# 停止已经处于运行状态的容器，但不删除它。通过 docker-compose start 可以再次启动这些容器。&#xA;docker-compose stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;寻求支持&lt;/h2&gt; &#xA;&lt;p&gt;如果您遇到了技术上的问题难以解决，包括但不限于&lt;code&gt;docker&lt;/code&gt;，请在&lt;code&gt;star&lt;/code&gt;本项目后，加入以下qq群，我会对您进行支持。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🐧群号：463524210&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://postimg.cc/WDgGTKdt&#34;&gt;&lt;img src=&#34;https://i.postimg.cc/QMn0kZsg/image.png&#34; alt=&#34;image.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其他&lt;/h2&gt; &#xA;&lt;h3&gt;我的博客&lt;/h3&gt; &#xA;&lt;p&gt;定期会分享一些技术文章、心得感悟、和软件资源，欢迎关注。👉 &lt;a href=&#34;https://evanwang.blog.csdn.net&#34;&gt;Evan&#39;s Blog ٩(๑❛ᴗ❛๑)۶&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>maxvfischer/sonos-streaming</title>
    <updated>2023-11-16T01:44:53Z</updated>
    <id>tag:github.com,2023-11-16:/maxvfischer/sonos-streaming</id>
    <link href="https://github.com/maxvfischer/sonos-streaming" rel="alternate"></link>
    <summary type="html">&lt;p&gt;How to stream vinyl (or any other analog RCA) to your Sonos system&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/main_banner.gif&#34; alt=&#34;main_gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This guide goes through all the steps to stream music from an analog vinyl player (or any other RCA source) to your Sonos system, by using a Raspberry Pi.&lt;/p&gt; &#xA;&lt;p&gt;The guide is based on this Instructable guide: &lt;a href=&#34;https://www.instructables.com/Add-Aux-to-Sonos-Using-Raspberry-Pi/&#34;&gt;https://www.instructables.com/Add-Aux-to-Sonos-Using-Raspberry-Pi/&lt;/a&gt;. But I&#39;ve spent time simplifying the process, wrapping everything in a &lt;code&gt;docker-compose.yml&lt;/code&gt; and creating a pre-built Raspberry Pi image where everything is set up using a &lt;code&gt;systemd&lt;/code&gt; service.&lt;/p&gt; &#xA;&lt;h1&gt;Table of content&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#needed-hardware&#34;&gt;Needed hardware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#overview-software&#34;&gt;Overview software&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#darkice&#34;&gt;Darkice&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#icecast2&#34;&gt;Icecast2&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#how-to-stream-vinyl-to-your-sonos-speakers&#34;&gt;How to stream vinyl to your Sonos speakers&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#download-the-pre-built-raspberry-pi-image&#34;&gt;Download the pre-built Raspberry Pi image&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#unzip-the-raspberry-pi-image&#34;&gt;Unzip the Raspberry Pi image&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#install-raspberry-pi-installer&#34;&gt;Install Raspberry Pi Installer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#install-the-raspberry-pi-image-to-the-sd-card&#34;&gt;Install the Raspberry Pi image to the SD card&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#connect-vinyl-player-to-the-raspberry-pi&#34;&gt;Connect vinyl player to the Raspberry Pi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/#point-the-sonos-speakers-to-the-vinyl-stream&#34;&gt;Point the Sonos speakers to the vinyl stream&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Needed hardware&lt;/h2&gt; &#xA;&lt;p&gt;To stream the sound from a vinyl record player to the Sonos speakers, you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1x RaspberryPi (with USB Type-A)&lt;/li&gt; &#xA; &lt;li&gt;1x RaspberryPi power adapter (adjusted to the RaspberryPi you&#39;re using)&lt;/li&gt; &#xA; &lt;li&gt;1x 8GB MicroSD card&lt;/li&gt; &#xA; &lt;li&gt;1x SD card reader/adapter (if your computer doesn&#39;t already support it)&lt;/li&gt; &#xA; &lt;li&gt;1x Behringer U-PHONE UFO202&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview software&lt;/h2&gt; &#xA;&lt;h3&gt;Darkice&lt;/h3&gt; &#xA;&lt;p&gt;DarkIce is a live audio streamer. It records audio from an audio interface (e.g. sound card), encodes it and sends it to a streaming server. This software is used to read the vinyl signals coming from the U-PHONE UFO202.&lt;/p&gt; &#xA;&lt;p&gt;URL: &lt;a href=&#34;http://www.darkice.org&#34;&gt;http://www.darkice.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Icecast2&lt;/h3&gt; &#xA;&lt;p&gt;Icecast is a streaming media server which we will use to stream the live audio from Darkice and broadcast it out in our local network. This is what the Sonos speakers will pick up and play.&lt;/p&gt; &#xA;&lt;p&gt;URL: &lt;a href=&#34;https://icecast.org&#34;&gt;https://icecast.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to stream vinyl to your Sonos speakers&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; This section uses my pre-built Raspberry Pi image. If you wish to use the default Raspberry Pi image and set up the service yourself, that is also possible. This can be done by flashing the SD card with the default RPi image, clone down this repository on the RPi, &lt;code&gt;cd&lt;/code&gt; into the repo, install docker by executing &lt;code&gt;install-docker.sh&lt;/code&gt; and setting up the service by running &lt;code&gt;setup-service.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Download the pre-built Raspberry Pi image&lt;/h3&gt; &#xA;&lt;p&gt;Start by downloading the pre-built Raspberry Pi image here: &lt;a href=&#34;https://github.com/maxvfischer/sonos-streaming/suites/17721720018/artifacts/1014666374&#34;&gt;https://github.com/maxvfischer/sonos-streaming/suites/17721720018/artifacts/1014666374&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This image was built using &lt;code&gt;pi-gen&lt;/code&gt;, by executing &lt;code&gt;build-pi-image.sh&lt;/code&gt; inside a GitHub Action pipeline (&lt;a href=&#34;https://github.com/maxvfischer/sonos-streaming/actions/runs/6682008698/job/18156701236&#34;&gt;https://github.com/maxvfischer/sonos-streaming/actions/runs/6682008698/job/18156701236&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The image will automatically start the &lt;code&gt;systemd&lt;/code&gt; service &lt;code&gt;sonos-streaming&lt;/code&gt; on boot up, starting the streaming by executing &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unzip the Raspberry Pi image&lt;/h3&gt; &#xA;&lt;p&gt;As both &lt;code&gt;pi-gen&lt;/code&gt; and &lt;code&gt;GitHub Actions&lt;/code&gt; apply compression, you will need to decompress it twice until you have the raw image file &lt;code&gt;image_2023-10-29-sonos-streaming.img&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install Raspberry Pi Installer&lt;/h3&gt; &#xA;&lt;p&gt;The Raspberry Pi Installer is a software developed by the Raspberry Pi Foundation to simplify the installation of the Raspberry Pi OS to a microSD card.&lt;/p&gt; &#xA;&lt;p&gt;Download the Raspberry Pi Installer on your computer by following the instructions on this website: &lt;a href=&#34;https://www.raspberrypi.com/software/&#34;&gt;https://www.raspberrypi.com/software/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After you&#39;ve downloaded, installed and started the installer, you should see a page similar to this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_1.png&#34; alt=&#34;installer_1&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Install the Raspberry Pi image to the SD card&lt;/h3&gt; &#xA;&lt;p&gt;Start of by inserting the microSD card you&#39;re planing to use into the computer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_4.png&#34; alt=&#34;installer_4&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_3.png&#34; alt=&#34;installer_3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then click on &lt;code&gt;CHOOSE OS&lt;/code&gt; and choose &lt;code&gt;Use custom&lt;/code&gt; at the very bottom. Look for and choose the downloaded Raspberry Pi image.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_2.png&#34; alt=&#34;installer_2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After that, click on &lt;code&gt;CHOOSE STORAGE&lt;/code&gt; and choose the microSD card you just inserted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_5.png&#34; alt=&#34;installer_5&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before installing the OS, we want to change some configurations. This is done by clicking on the cogwheel in the lower right corner.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_6.png&#34; alt=&#34;installer_6&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check &lt;code&gt;Enable SSH&lt;/code&gt; and &lt;code&gt;Use password authentication&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;code&gt;Set username and password&lt;/code&gt; and choose whatever username and password you want to use to log into the Raspberry Pi.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;code&gt;Configure wireless LAN&lt;/code&gt; and &lt;strong&gt;fill in the name of the wifi your Sonos speakers are connected to, as well as the wifi password&lt;/strong&gt; (this is very important, if done incorrectly, the speakers won&#39;t find the music stream).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then click &lt;code&gt;SAVE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_7.png&#34; alt=&#34;installer_7&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_7_1.png&#34; alt=&#34;installer_7_1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install the OS to the microSD card, click &lt;code&gt;WRITE&lt;/code&gt;. You might get prompted with a warning saying that all existing data will be erasted. If you&#39;re fine with this and want to proceed installing the OS, click &lt;code&gt;YES&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_8.png&#34; alt=&#34;installer_8&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The installation should take approx. 5-10 minutes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_9.png&#34; alt=&#34;installer_9&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When the installation is done, remove the microSD card from your computer and insert it into the Raspberry Pi.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_10.png&#34; alt=&#34;installer_10&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Connect vinyl player to the Raspberry Pi&lt;/h3&gt; &#xA;&lt;p&gt;Start of by connecting the USB from Behringer U-PHONE UFO202 to the Raspberry Pi.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_11.png&#34; alt=&#34;installer_11&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then connect the red and white RCA cable from the vinyl player to the equivalent &lt;strong&gt;input&lt;/strong&gt; on the Behringer U-PHONE UFO202. Red to input red, white to input white.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_12.png&#34; alt=&#34;installer_12&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, connect the power cable to the Raspberry Pi.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_13.png&#34; alt=&#34;installer_13&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Point the Sonos speakers to the vinyl stream&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that you have the Sonos app installer on your phone. It can be found in the App store. Also make sure that your Sonos system is properly set up and that you can control your speakers from your app.&lt;/p&gt; &#xA;&lt;p&gt;Sorry about the language in the upcoming images. I wasn&#39;t able to change the language in my app from Swedish to English.&lt;/p&gt; &#xA;&lt;p&gt;Open the Sonos app and click on the &lt;code&gt;Music&lt;/code&gt; icon in the botton navigation bar. Then Click &lt;code&gt;Add a Service&lt;/code&gt;, scroll down and click on &lt;code&gt;TuneIn&lt;/code&gt; (not &lt;code&gt;TunIn (New)&lt;/code&gt;, but the old one). Then follow the instructions to add &lt;code&gt;TunIn&lt;/code&gt; to your app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_14.png&#34; alt=&#34;installer_14&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_15.png&#34; alt=&#34;installer_15&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When added correctly, &lt;code&gt;TunIn&lt;/code&gt; should show up under your Services. Click on it, then click on &lt;code&gt;My radio stations&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_16.png&#34; alt=&#34;installer_16&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_17.png&#34; alt=&#34;installer_17&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click on the three dots in the top right corner, then on &lt;code&gt;Add a new radio station&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_18.png&#34; alt=&#34;installer_18&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_19.png&#34; alt=&#34;installer_19&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fill in the following in the prompt:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Streaming-URL: &lt;a href=&#34;http://raspberrypi.local:8000/rapi.mp3&#34;&gt;http://raspberrypi.local:8000/rapi.mp3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Station name: Vinyl&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_20.png&#34; alt=&#34;installer_20&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your vinal streaming station should now show up under &lt;code&gt;My radio stations&lt;/code&gt;. You can now click on the &lt;code&gt;Vinyl&lt;/code&gt; station, check the speakers you want to play the music from, put on a vinyl on your record player and enjoy.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_21.png&#34; alt=&#34;installer_21&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maxvfischer/sonos-streaming/main/images/installer_22.png&#34; alt=&#34;installer_22&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThrynSec/CVE-2023-32629-CVE-2023-2640---POC-Escalation</title>
    <updated>2023-11-16T01:44:53Z</updated>
    <id>tag:github.com,2023-11-16:/ThrynSec/CVE-2023-32629-CVE-2023-2640---POC-Escalation</id>
    <link href="https://github.com/ThrynSec/CVE-2023-32629-CVE-2023-2640---POC-Escalation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ubuntu Privilege Escalation bash one-liner using CVE-2023-32629 &amp; CVE-2023-2640&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2023-32629 &amp;amp; CVE-2023-2640 : Privilege escalation&lt;/h1&gt; &#xA;&lt;p&gt;Ubuntu Privilege Escalation bash one-liner using CVE-2023-32629 &amp;amp; CVE-2023-2640.&lt;/p&gt; &#xA;&lt;p&gt;TOTALLY STOLE IT FROM &lt;a href=&#34;https://twitter.com/liadeliyahu/status/1684841527959273472?t=puhDAlZCy_75s7UbdV-bFw&amp;amp;s=19&#34;&gt;https://twitter.com/liadeliyahu/status/1684841527959273472?t=puhDAlZCy_75s7UbdV-bFw&amp;amp;s=19&lt;/a&gt; PLEASE RETWEET THE ORIGINAL SOURCE&lt;/p&gt; &#xA;&lt;p&gt;I just wanted to keep this script on Github for me and to share it easily&lt;/p&gt;</summary>
  </entry>
</feed>