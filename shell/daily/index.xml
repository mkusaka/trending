<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-05T01:38:31Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FelixKratz/dotfiles</title>
    <updated>2022-12-05T01:38:31Z</updated>
    <id>tag:github.com,2022-12-05:/FelixKratz/dotfiles</id>
    <link href="https://github.com/FelixKratz/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My personal macOS configuration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dotfiles&lt;/h1&gt; &#xA;&lt;p&gt;My macOS configuration files. &lt;img width=&#34;1512&#34; alt=&#34;Screenshot 2022-11-11 at 17 33 00&#34; src=&#34;https://user-images.githubusercontent.com/22680421/201389026-20255532-8c7a-4c48-a34c-e8e3b1cb03fa.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;jklö centric navigation and vim moves for my german keyboard. nvim as a capable C/C++ debugging environment. color scheme consistency across all configurations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;neovim&lt;/li&gt; &#xA; &lt;li&gt;skhd&lt;/li&gt; &#xA; &lt;li&gt;nnn (personal fork)&lt;/li&gt; &#xA; &lt;li&gt;yabai (personal fork)&lt;/li&gt; &#xA; &lt;li&gt;sketchybar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most setup steps are in &lt;code&gt;.install.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SketchyBar Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;sf-symbols&lt;/code&gt;: &lt;code&gt;brew install --cask sf-symbols&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;jq&lt;/code&gt;: &lt;code&gt;brew install jq&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;github-cli&lt;/code&gt;: &lt;code&gt;brew install gh&lt;/code&gt; (&lt;code&gt;gh auth login&lt;/code&gt; for notifications)&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://github.com/kvndrsslr/sketchybar-app-font&#34;&gt;sketchybar-app-font&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://github.com/kvndrsslr/sketchybar-app-font/releases/download/v1.0.3/sketchybar-app-font.ttf -o $HOME/Library/Fonts/sketchybar-app-font.ttf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The volume icon is an &lt;code&gt;alias&lt;/code&gt;, make sure to give screen capture permission. If your system is british, you need to rename &#34;Control Center&#34; to &#34;Control Centre&#34; in &lt;code&gt;items/volume.sh&lt;/code&gt;. The volume icon should be enabled to always show in the macOS bar via System Preferences.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t use yabai you can safely remove the &lt;code&gt;yabai&lt;/code&gt; item from &lt;code&gt;ìtems/front_app.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;(optional; needed for yabai window state and running application icons) yabai events:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yabai -m signal --add event=window_focused action=&#34;sketchybar --trigger window_focus&#34;&#xA;yabai -m signal --add event=window_created action=&#34;sketchybar --trigger windows_on_spaces&#34;&#xA;yabai -m signal --add event=window_destroyed action=&#34;sketchybar --trigger windows_on_spaces&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(optional; needed for yabai window state and running application icons) skhd shortcuts should trigger the sketchybar events, e.g.:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lalt - space : yabai -m window --toggle float; sketchybar --trigger window_focus&#xA;shift + lalt - f : yabai -m window --toggle zoom-fullscreen; sketchybar --trigger window_focus&#xA;lalt - f : yabai -m window --toggle zoom-parent; sketchybar --trigger window_focus&#xA;shift + lalt - 1 : yabai -m window --space 1 &amp;amp;&amp;amp; sketchybar --trigger windows_on_spaces&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(optional) Uses &lt;code&gt;brew install switchaudio-osx&lt;/code&gt; for audio device switching context menu on volume alias right click&lt;/li&gt; &#xA; &lt;li&gt;(optional) update outdated packages after running brew commands (add to &lt;code&gt;.zshrc&lt;/code&gt;):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;function brew() {&#xA;  command brew &#34;$@&#34; &#xA;&#xA;  if [[ $* =~ &#34;upgrade&#34; ]] || [[ $* =~ &#34;update&#34; ]] || [[ $* =~ &#34;outdated&#34; ]]; then&#xA;    sketchybar --trigger brew_update&#xA;  fi&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: The &lt;code&gt;helper&lt;/code&gt; C program is included here only to show off this specific functionality of sketchybar and is not needed generally. It provides the data for the cpu graph. Using a &lt;code&gt;mach_helper&lt;/code&gt; provides a &lt;em&gt;much&lt;/em&gt; lower overhead solution for performance sensitive tasks, since the &lt;code&gt;helper&lt;/code&gt; talks directly to sketchybar via kernel level messages. For most tasks (including those listed above) this difference in performance does not matter at all.&lt;/p&gt; &#xA;&lt;h2&gt;neovim setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Paste my .confg/nvim/ folder&lt;/li&gt; &#xA; &lt;li&gt;Run PackerSync&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvim +PackerSync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My remappings are in .config/nvim/lua/mappings.lua, you can change or remove them freely.&lt;/li&gt; &#xA; &lt;li&gt;(optional) Install font and set it as the terminal font:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:shaunsingh/SFMono-Nerd-Font-Ligaturized.git /tmp/SFMono_Nerd_Font&#xA;mv /tmp/SFMono_Nerd_Font/* $HOME/Library/Fonts&#xA;rm -rf /tmp/SFMono_Nerd_Font/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>