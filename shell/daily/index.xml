<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-22T01:39:35Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TinrLin/Script_installation</title>
    <updated>2023-09-22T01:39:35Z</updated>
    <id>tag:github.com,2023-09-22:/TinrLin/Script_installation</id>
    <link href="https://github.com/TinrLin/Script_installation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;脚本支持IPV6单栈机。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;脚本支持 CentOS 8+、Debian 10+、Ubuntu 20+ 操作系统。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;脚本支持 warp 解锁 ChatGPT、Netflix、Disney+。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;脚本支持多用户。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;脚本支持多种协议共存。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;脚本支持生成sing-box客户端配置文件。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;电脑端使用方法：下载生成的win_client_&amp;amp;&amp;amp;&amp;amp;.json文件====&amp;gt;&amp;gt;V2rayN客户端添加自定义配置服务器====&amp;gt;&amp;gt;地址加载生成的win_client_&amp;amp;&amp;amp;&amp;amp;.json文件====&amp;gt;&amp;gt;Core类型选sing_box====&amp;gt;&amp;gt;Socks端口填1080。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;手机端使用方法：下载生成的phone_client_&amp;amp;&amp;amp;&amp;amp;.json文件====&amp;gt;&amp;gt;手机下载sing-box官方客户端====&amp;gt;&amp;gt;Profiles点击New profile====&amp;gt;&amp;gt;name自己命名====&amp;gt;&amp;gt;Source选择Import====&amp;gt;&amp;gt;点击Import File====&amp;gt;&amp;gt;选择下载的phone_client_&amp;amp;&amp;amp;&amp;amp;.json文件。&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian&amp;amp;&amp;amp;Ubuntu使用以下命令安装依赖&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt update &amp;amp;&amp;amp; apt -y install curl wget tar socat jq git openssl uuid-runtime build-essential zlib1g-dev libssl-dev libevent-dev dnsutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CentOS使用以下命令安装依赖&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yum update &amp;amp;&amp;amp; yum -y install curl wget tar socat jq git openssl util-linux gcc-c++ zlib-devel openssl-devel libevent-devel bind-utils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;使用以下命令运行脚本&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -L https://raw.githubusercontent.com/TinrLin/script_installation/main/Install.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;&lt;strong&gt;Hysteria端口跳跃&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Debian&amp;amp;&amp;amp;Ubuntu&#xA;&#xA;## 安装iptables-persistent&#xA;apt install iptables-persistent&#xA;&#xA;## 清空默认规则&#xA;iptables -F&#xA;&#xA;## 清空自定义规则&#xA;iptables -X&#xA;&#xA;## 允许本地访问&#xA;iptables -A INPUT -i lo -j ACCEPT&#xA;&#xA;## 开放SSH端口（假设SSH端口为22）&#xA;iptables -A INPUT -p tcp --dport 22 -j ACCEPT&#xA;&#xA;## 开放HTTP端口&#xA;iptables -A INPUT -p tcp --dport 80 -j ACCEPT&#xA;&#xA;## 开放UDP端口（10010替换为节点的监听端口）&#xA;iptables -A INPUT -p udp --dport 10010 -j ACCEPT&#xA;&#xA;## 开放UDP端口范围（假设UDP端口范围为20000-40000）&#xA;iptables -A INPUT -p udp --dport 20000:40000 -j ACCEPT&#xA;&#xA;## 允许接受本机请求之后的返回数据&#xA;iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT&#xA;&#xA;## 其他入站一律禁止&#xA;iptables -P INPUT DROP&#xA;&#xA;## 允许所有出站&#xA;iptables -P OUTPUT ACCEPT&#xA;&#xA;## 查看开放的端口&#xA;iptables -L&#xA;&#xA;## 添加NAT规则，20000:40000替换为你设置端口跳跃的范围，10010替换为你节点的监听端口&#xA;iptables -t nat -A PREROUTING -p udp --dport 20000:40000 -j DNAT --to-destination :10010&#xA;&#xA;## 查看NAT规则&#xA;iptables -t nat -nL --line&#xA;&#xA;## 保存iptables规则&#xA;netfilter-persistent save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;# CentOS&#xA;## 安装iptables-service&#xA;yum install iptables-services&#xA;&#xA;## 启用iptables服务&#xA;systemctl enable iptables&#xA;&#xA;## 启动iptables服务&#xA;systemctl start iptables&#xA;&#xA;## 清空默认规则&#xA;iptables -F&#xA;&#xA;## 清空自定义规则&#xA;iptables -X&#xA;&#xA;## 允许本地访问&#xA;iptables -A INPUT -i lo -j ACCEPT&#xA;&#xA;## 开放SSH端口（假设SSH端口为22）&#xA;iptables -A INPUT -p tcp --dport 22 -j ACCEPT&#xA;&#xA;## 开放HTTP端口&#xA;iptables -A INPUT -p tcp --dport 80 -j ACCEPT&#xA;&#xA;## 开放UDP端口（10010替换为节点的监听端口）&#xA;iptables -A INPUT -p udp --dport 10010 -j ACCEPT&#xA;&#xA;## 开放UDP端口范围（假设UDP端口范围为20000-40000）&#xA;iptables -A INPUT -p udp --dport 20000:40000 -j ACCEPT&#xA;&#xA;## 允许接受本机请求之后的返回数据&#xA;iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT&#xA;&#xA;## 其他入站一律禁止&#xA;iptables -P INPUT DROP&#xA;&#xA;## 允许所有出站&#xA;iptables -P OUTPUT ACCEPT&#xA;&#xA;## 查看开放的端口&#xA;iptables -L&#xA;&#xA;## 添加NAT规则，20000:40000替换为你设置端口跳跃的范围，10010替换为你节点的监听端口&#xA;iptables -t nat -A PREROUTING -p udp --dport 20000:40000 -j DNAT --to-destination :10010&#xA;&#xA;## 查看NAT规则&#xA;iptables -t nat -nL --line&#xA;&#xA;## 保存iptables规则&#xA;service iptables save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;&lt;strong&gt;脚本支持的节点类型&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Socks&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TUIC V5&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;juicity&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WireGuard--解锁 ChatGPT、Netflix、Disney+&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hysteria2&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vless+vision+Reality&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vless+h2+Reality&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vless+gRPC+Reality&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct--sing-box版任意门&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trojan+tcp+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trojan+H2C+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trojan+gRPC+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trojan+ws+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hysteria&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ShadowTLS V3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NaiveProxy&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shadowsocks&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+tcp&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+ws&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+grpc&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+tcp+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+ws+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+h2+tls&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vmess+grpc+tls&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>