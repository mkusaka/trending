<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-10T01:47:06Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Wowu/docker-rollout</title>
    <updated>2023-02-10T01:47:06Z</updated>
    <id>tag:github.com,2023-02-10:/Wowu/docker-rollout</id>
    <link href="https://github.com/Wowu/docker-rollout" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üöÄ Zero Downtime Deployment for Docker Compose&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;code&gt;docker rollout&lt;/code&gt;&lt;br&gt; Zero Downtime Deployment for Docker Compose &lt;/h1&gt; &#xA;&lt;p&gt;Docker CLI plugin that updates Docker Compose services without downtime.&lt;/p&gt; &#xA;&lt;p&gt;Simply replace &lt;code&gt;docker compose up -d &amp;lt;service&amp;gt;&lt;/code&gt; with &lt;code&gt;docker rollout &amp;lt;service&amp;gt;&lt;/code&gt; in your deployment scripts. This command will scale the service to 2 instances, wait for the new container to be ready, and then remove the old container.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#%EF%B8%8F-caveats&#34;&gt;‚ö†Ô∏è Caveats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#sample-deployment-script&#34;&gt;Sample deployment script&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#why&#34;&gt;Why?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚è≥ Zero downtime deployment for Docker Compose services&lt;/li&gt; &#xA; &lt;li&gt;üê≥ Works with Docker Compose and docker-compose&lt;/li&gt; &#xA; &lt;li&gt;‚ù§Ô∏è Supports Docker healthchecks out of the box&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create directory for Docker cli plugins&#xA;mkdir -p ~/.docker/cli-plugins&#xA;&#xA;# Download docker-rollout script to Docker cli plugins directory&#xA;curl https://raw.githubusercontent.com/wowu/docker-rollout/master/docker-rollout -o ~/.docker/cli-plugins/docker-rollout&#xA;&#xA;# Make the script executable&#xA;chmod +x ~/.docker/cli-plugins/docker-rollout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;docker rollout &amp;lt;name&amp;gt;&lt;/code&gt; instead of &lt;code&gt;docker compose up -d &amp;lt;name&amp;gt;&lt;/code&gt; to update a service without downtime.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker rollout -f docker-compose.yml &amp;lt;service-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-f | --file FILE&lt;/code&gt; - (not required) - Path to compose file, can be specified multiple times, as in &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-t | --timeout SECONDS&lt;/code&gt; - (not required) - Timeout in seconds to wait for new container to become healthy, if the container has healthcheck defined in &lt;code&gt;Dockerfile&lt;/code&gt; or &lt;code&gt;docker-compose.yml&lt;/code&gt;. Default: 60&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-w | --wait SECONDS&lt;/code&gt; - (not required) - Time to wait for new container to be ready if healthcheck is not defined. Default: 10&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See examples in &lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/examples&#34;&gt;examples&lt;/a&gt; directory for sample &lt;code&gt;docker-compose.yml&lt;/code&gt; files.&lt;/p&gt; &#xA;&lt;h3&gt;‚ö†Ô∏è Caveats&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Currently only services with scale 1 are supported.&lt;/li&gt; &#xA; &lt;li&gt;Your service cannot have &lt;code&gt;container_name&lt;/code&gt; and &lt;code&gt;ports&lt;/code&gt; defined in &lt;code&gt;docker-compose.yml&lt;/code&gt;, as it&#39;s not possible to run multiple containers with the same name or port mapping. Use a proxy as described below.&lt;/li&gt; &#xA; &lt;li&gt;Proxy like &lt;a href=&#34;https://github.com/traefik/traefik&#34;&gt;Traefik&lt;/a&gt; or &lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy&#34;&gt;nginx-proxy&lt;/a&gt; is required to route traffic.&lt;/li&gt; &#xA; &lt;li&gt;Each deployment will increment the index in container name (e.g. &lt;code&gt;project-web-1&lt;/code&gt; -&amp;gt; &lt;code&gt;project-web-2&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sample deployment script&lt;/h3&gt; &#xA;&lt;p&gt;Sample deployment script for &lt;code&gt;web&lt;/code&gt; service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download latest code&#xA;git pull&#xA;# Build new app image&#xA;docker compose build web&#xA;# Run database migrations&#xA;docker compose run web rake db:migrate&#xA;# Deploy new version&#xA;docker rollout web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;code&gt;docker compose up&lt;/code&gt; to deploy a new version of a service causes downtime because the app container is stopped before the new container is created. If your application takes a while to boot, this may be noticeable to users.&lt;/p&gt; &#xA;&lt;p&gt;Using container orchestration tools like &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; or &lt;a href=&#34;https://www.nomadproject.io/&#34;&gt;Nomad&lt;/a&gt; is usually an overkill for projects that will do fine with a single-server Docker Compose setup. &lt;a href=&#34;https://github.com/dokku/dokku&#34;&gt;Dokku&lt;/a&gt; comes with zero-downtime deployment and more useful features, but it&#39;s not as flexible as Docker Compose.&lt;/p&gt; &#xA;&lt;p&gt;If you have a proxy like &lt;a href=&#34;https://github.com/traefik/traefik&#34;&gt;Traefik&lt;/a&gt; or &lt;a href=&#34;https://github.com/nginx-proxy/nginx-proxy&#34;&gt;nginx-proxy&lt;/a&gt;, a zero downtime deployment can be achieved by writing a script that scales the service to 2 instances, waits for the new container to be ready, and then removes the old container. &lt;code&gt;docker rollout&lt;/code&gt; does exactly that, but with a single command that you can use in your deployment scripts. If you&#39;re using Docker healthchecks, Traefik will make sure that traffic is only routed to the new container when it&#39;s ready.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Wowu/docker-rollout/main/LICENSE&#34;&gt;MIT License&lt;/a&gt; ¬© Karol Musur&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tektoncd/catalog</title>
    <updated>2023-02-10T01:47:06Z</updated>
    <id>tag:github.com,2023-02-10:/tektoncd/catalog</id>
    <link href="https://github.com/tektoncd/catalog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Catalog of shared Tasks and Pipelines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tekton Catalog&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want &lt;code&gt;v1alpha1&lt;/code&gt; resources, you need to go to the &lt;a href=&#34;https://github.com/tektoncd/catalog/tree/v1alpha1&#34;&gt;&lt;code&gt;v1alpha1&lt;/code&gt;&lt;/a&gt; branch. The &lt;a href=&#34;https://github.com/tektoncd/catalog/tree/main&#34;&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt; branch is synced with &lt;a href=&#34;https://github.com/tektoncd/catalog/tree/v1beta1&#34;&gt;&lt;code&gt;v1beta1&lt;/code&gt;&lt;/a&gt; since 2020, 19th June.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains a catalog of &lt;code&gt;Task&lt;/code&gt; resources (and someday &lt;code&gt;Pipeline&lt;/code&gt;s and &lt;code&gt;Resource&lt;/code&gt;s), which are designed to be reusable in many pipelines.&lt;/p&gt; &#xA;&lt;p&gt;Each &lt;code&gt;Task&lt;/code&gt; is provided in a separate directory along with a README.md and a Kubernetes manifest, so you can choose which &lt;code&gt;Task&lt;/code&gt;s to install on your cluster. A directory can hold one task and multiple versions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tektoncd/catalog/main/roadmap.md&#34;&gt;our project roadmap&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://hub.tekton.dev/&#34;&gt;Hub&lt;/a&gt; provides an easy way to search and discover all Tekton resources&lt;/h4&gt; &#xA;&lt;h2&gt;Catalog Structure&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Each resource follows the following structure&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./task/                     üëà the kind of the resource&#xA;&#xA;    /argocd                 üëà definition file must have same name&#xA;       /0.1&#xA;         /OWNERS            üëà owners of this resource&#xA;         /README.md&#xA;         /argocd.yaml       üëà the file name should match the resource name&#xA;         /samples/deploy-to-k8s.yaml&#xA;       /0.2/...&#xA;&#xA;    /golang-build&#xA;       /OWNERS&#xA;       /README.md&#xA;       /0.1&#xA;         /README.md&#xA;         /golang-build.yaml&#xA;         /samples/golang-build.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Resource YAML file includes following changes&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Labels include the version of the resource.&lt;/li&gt; &#xA; &lt;li&gt;Annotations include &lt;code&gt;minimum pipeline version&lt;/code&gt; supported by the resource, &lt;code&gt;tags&lt;/code&gt; associated with the resource and &lt;code&gt;displayName&lt;/code&gt; of the resource&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;&#xA; labels:&#xA;    app.kubernetes.io/version: &#34;0.1&#34;                 üëà Version of the resource&#xA;&#xA;  annotations:&#xA;    tekton.dev/pipelines.minVersion: &#34;0.12.1&#34;        üëà Min Version of pipeline resource is compatible&#xA;    tekton.dev/categories: CLI&#x9;&#x9;        üëà Comma separated list of categories&#xA;    tekton.dev/tags: &#34;ansible, cli&#34;                  üëà Comma separated list of tags&#xA;    tekton.dev/displayName: &#34;Ansible Tower Cli&#34;      üëà displayName can be optional&#xA;    tekton.dev/platforms: &#34;linux/amd64,linux/s390x&#34;  üëà Comma separated list of platforms, can be optional&#xA;&#xA;spec:&#xA;  description: |-&#xA;    ansible-tower-cli task simplifies&#xA;    workflow, jobs, manage users...                  üëà Summary&#xA;&#xA;    Ansible Tower (formerly ‚ÄòAWX‚Äô) is a ...&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Categories are a generalized list and are maintained by Hub. To add new categories, please follow the procedure mentioned &lt;a href=&#34;https://github.com/tektoncd/hub/raw/main/docs/ADD_NEW_CATEGORY.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;Task&lt;/code&gt; Kinds&lt;/h2&gt; &#xA;&lt;p&gt;There are two kinds of &lt;code&gt;Task&lt;/code&gt;s:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;ClusterTask&lt;/code&gt; with a Cluster scope, which can be installed by a cluster operator and made available to users in all namespaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Task&lt;/code&gt; with a Namespace scope, which is designed to be installed and used only within that namespace.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;Task&lt;/code&gt;s in this repo are namespace-scoped &lt;code&gt;Task&lt;/code&gt;s, but can be installed as &lt;code&gt;ClusterTask&lt;/code&gt;s by changing the &lt;code&gt;kind&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using &lt;code&gt;Task&lt;/code&gt;s&lt;/h2&gt; &#xA;&lt;p&gt;First, install a &lt;code&gt;Task&lt;/code&gt; onto your cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl apply -f golang/build.yaml&#xA;task.tekton.dev/golang-build created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see which &lt;code&gt;Task&lt;/code&gt;s are installed using &lt;code&gt;kubectl&lt;/code&gt; as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get tasks&#xA;NAME           AGE&#xA;golang-build   3s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the &lt;code&gt;Task&lt;/code&gt; installed, you can define a &lt;code&gt;TaskRun&lt;/code&gt; that runs that &lt;code&gt;Task&lt;/code&gt;, being sure to provide values for required input parameters and resources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apiVersion: tekton.dev/v1beta1&#xA;kind: TaskRun&#xA;metadata:&#xA;  name: example-run&#xA;spec:&#xA;  taskRef:&#xA;    name: golang-build&#xA;  params:&#xA;  - name: package&#xA;    value: github.com/tektoncd/pipeline&#xA;  workspaces:&#xA;  - name: source&#xA;    persistentVolumeClaim:&#xA;      claimName: my-source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, create the &lt;code&gt;TaskRun&lt;/code&gt; you defined:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl apply -f example-run.yaml&#xA;taskrun.tekton.dev/example-run created&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check the status of the &lt;code&gt;TaskRun&lt;/code&gt; using &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get taskrun example-run -oyaml&#xA;apiVersion: tekton.dev/v1beta1&#xA;kind: TaskRun&#xA;metadata:&#xA;  name: example-run&#xA;spec:&#xA;  ...&#xA;status:&#xA;  completionTime: &#34;2019-04-25T18:10:09Z&#34;&#xA;  conditions:&#xA;  - lastTransitionTime: &#34;2019-04-25T18:10:09Z&#34;&#xA;    status: True&#xA;    type: Succeeded&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;Task&lt;/code&gt;s through Bundles&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tekton.dev/docs/pipelines/pipelines/#tekton-bundles&#34;&gt;Tekton Bundles&lt;/a&gt; are an alpha feature of Tekton pipelines that allows storing &lt;code&gt;Tasks&lt;/code&gt; as bundles in a container registry, instead of as custom resources in etcd in a Kubernetes cluster. With Tekton Bundles are enabled, it is possible to reference any task in the catalog without installing it first. Tasks are available at &lt;a href=&#34;https://console.cloud.google.com/gcr/images/tekton-releases/GLOBAL/catalog/upstream?gcrImageListsize=100&#34;&gt;&lt;code&gt;gcr.io/tekton-releases/catalog/upstream/&amp;lt;task-name&amp;gt;:&amp;lt;task-version&amp;gt;&lt;/code&gt;&lt;/a&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apiVersion: tekton.dev/v1beta1&#xA;kind: TaskRun&#xA;metadata:&#xA;  name: example-run&#xA;spec:&#xA;  taskRef:&#xA;    name: golang-build&#xA;    bundle: gcr.io/tekton-releases/catalog/upstream/golang-build:0.1&#xA;  params:&#xA;  - name: package&#xA;    value: github.com/tektoncd/pipeline&#xA;  workspaces:&#xA;  - name: source&#xA;    persistentVolumeClaim:&#xA;      claimName: my-source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing and Support&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this repository, please see our &lt;a href=&#34;https://raw.githubusercontent.com/tektoncd/catalog/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; guidelines.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for support, enter an &lt;a href=&#34;https://github.com/tektoncd/catalog/issues/new&#34;&gt;issue&lt;/a&gt; or join our &lt;a href=&#34;https://github.com/tektoncd/community/raw/main/contact.md#slack&#34;&gt;Slack workspace&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status of the Project&lt;/h2&gt; &#xA;&lt;p&gt;This project is still under active development, so you might run into &lt;a href=&#34;https://github.com/tektoncd/catalog/issues&#34;&gt;issues&lt;/a&gt;. If you do, please don&#39;t be shy about letting us know, or better yet, contribute a fix or feature. Its folder structure is not yet set in stone either.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tektoncd/catalog/main/roadmap.md&#34;&gt;our project roadmap&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wangdoc/bash-tutorial</title>
    <updated>2023-02-10T01:47:06Z</updated>
    <id>tag:github.com,2023-02-10:/wangdoc/bash-tutorial</id>
    <link href="https://github.com/wangdoc/bash-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bash ÊïôÁ®ã&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Êú¨ÊïôÁ®ã‰ªãÁªç Linux ÂëΩ‰ª§Ë°å Bash ÁöÑÂü∫Êú¨Áî®Ê≥ïÂíåËÑöÊú¨ÁºñÁ®ã„ÄÇ&lt;/p&gt;</summary>
  </entry>
</feed>