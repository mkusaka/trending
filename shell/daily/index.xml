<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-12T01:56:49Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>seanap/Plex-Audiobook-Guide</title>
    <updated>2022-07-12T01:56:49Z</updated>
    <id>tag:github.com,2022-07-12:/seanap/Plex-Audiobook-Guide</id>
    <link href="https://github.com/seanap/Plex-Audiobook-Guide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A walkthrough for optimal Audiobook experience using Plex&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Plex &amp;amp; Booksonic Audiobook Guide&lt;/h1&gt; &#xA;&lt;p&gt;This guide is specifically for optimal Audiobook experience using Plex, which in it&#39;s current state only quasi-supports audiobooks. This is my method for processing large libraries with bad/missing tags as quick as possible while getting the most metadata into Plex in the least amount of time. I&#39;ll be doing a deep dive into some advanced features of the tools available to us in order to get a nice, clean, and functional UI. This guide is meant to serve as a framework for fully utilizing metadata.&amp;nbsp; Everything is customizable, and easy to change. While focused on Plex, if you follow the tagging and file processing steps you will also be compatible with Booksonic and AudiobookShelf servers.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: This guide targets and has been tested on Windows systems. Most of it also works on Linux/Mac but the Mp3tag Audible WebSource script only works on Windows. For workarounds see &lt;a href=&#34;https://raw.githubusercontent.com/seanap/issues/2&#34;&gt;issue #2&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#goal&#34;&gt;Goal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#working-folders&#34;&gt;Working Folders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#optional-automatically-copy-untagged-audiobook-files-to-a-temp-folder&#34;&gt;(Optional) Automatically copy untagged Audiobook files to a temp folder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#optional-automatically-convert-mp3-audiobooks-to-chapterized-m4b-linuxwindows&#34;&gt;(Optional) Automatically convert mp3 audiobooks to chapterized M4B&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#configure-mp3tag&#34;&gt;Configure Mp3tag&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#set-the-default-folder-mp3tag-automatically-looks-for-book-files-in&#34;&gt;Set the default folder&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#download-my-example-configuration-files-to-mp3tags-appdata-directory&#34;&gt;Download my example configuration files to Mp3tag&#39;s Appdata directory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#edit-the-newly-copied-config-files-with-your-specific-paths&#34;&gt;Edit the newly copied config files with your specific paths&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#test&#34;&gt;Test&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#configure-plex&#34;&gt;Configure Plex&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#install-metadata-agent-for-plex&#34;&gt;Install Plex Audiobook Agents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#configure-metadata-agent-in-plex&#34;&gt;Configure Metadata Agent in Plex&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#create-audiobook-library-in-plex&#34;&gt;Create Audiobook Library in Plex&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#workflow&#34;&gt;Workflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#tips&#34;&gt;Tips!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#tags-that-are-being-set&#34;&gt;Tags that are being set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#players&#34;&gt;Players&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanap/Plex-Audiobook-Guide/master/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Goal&lt;/h3&gt; &#xA;&lt;p&gt;Show as much metadata as possible in Plex &amp;amp; Booksonic.&amp;nbsp; Filter/browse/search by Narrator, Author, Genre, Year, Series, Rating, or Publisher.&amp;nbsp; Show Album Covers and Summary&#39;s. Make the organizing and tagging as quick and painless as possible. We need to do these 4 general steps:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;(Optional) Convert mp3&#39;s to chapterized m4b.&lt;/li&gt; &#xA; &lt;li&gt;Ensure the ALBUM and ALBUMARTIST (or ARTIST) tags are set and correct.&lt;/li&gt; &#xA; &lt;li&gt;Install the Audnexus Audible Metadata Agent in Plex.&lt;/li&gt; &#xA; &lt;li&gt;Use a 3rd party Audiobook player app such as BookCamp or Prologue.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/k4up0ao.jpg&#34; alt=&#34;Plex Library View&#34;&gt;&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://i.imgur.com/C3wgGte.png&#34; width=&#34;48%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/YHqhdhO.png&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/oSfZLHo.png&#34; alt=&#34;alt text&#34; title=&#34;Booksonic Book Summary&#34;&gt;&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://i.imgur.com/A1IYa5I.png&#34; width=&#34;24%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/eKrH92i.png&#34; width=&#34;23.5%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/HGbPdNM.png&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Backing up your Audible books&lt;/h3&gt; &#xA;&lt;p&gt;I plan on having a seprate walkthrough that will take you through backing up your Audible .aax files, and converting them to chapterized .M4B files. This giude will work for both mp3 and m4b files, but I prefer chapterized m4b&#39;s. Plex handles M4B metadata better than mp3&#39;s, some third party players like Prologue and BookCamp can handle the M4B chapter splits and names, and generally having less files helps plex run smoother.&lt;/p&gt; &#xA;&lt;p&gt;In the mean time please check out this awesome guide here: &lt;a href=&#34;http://checkthebenchmarks.com/2019/09/23/why-you-should-manage-your-own-audible-library/&#34;&gt;http://checkthebenchmarks.com/2019/09/23/why-you-should-manage-your-own-audible-library/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For some more Software resources for Audible-centric audiobook management, including removing DRM from Audible files check out &lt;a href=&#34;https://github.com/rmcrackan&#34;&gt;@rmcrackan&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/rmcrackan/AudiobookHub&#34;&gt;AudiobookHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now that you have your files, let get them in a format Plex can handle so we can stream our whole library with our firends and family.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Working folders&lt;/h3&gt; &#xA;&lt;p&gt;I have 3 working directories for my Audiobooks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;~/Original&lt;/code&gt; Folder where I keep the un-altered original audio Files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/temp&lt;/code&gt; Folder where I copy the audio files that need to be processed, this is the folder Mp3tag will open by default&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/Audiobooks&lt;/code&gt; Folder where I archive my properly tagged files in the proper folder structure, this is the folder I point Plex at&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Anywhere these folders are referenced, make sure to update to your specific paths&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Best Practice: Tag your files &lt;em&gt;before&lt;/em&gt; adding them to Plex.&lt;/p&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;(Optional) Automatically copy untagged Audiobook files to a temp folder&lt;/h3&gt; &#xA;&lt;p&gt;Optional: This step is only required if you want to preserve the original unedited Audiobook files. This is required if you are seeding torrents, for example from librivox.org. That said, this is a recommended step for everyone, just incase something goes horribly wrong with Mp3tag or copying files.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What I want to achieve with this step: (click to expand)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This Script will:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Check every 2min for a new audiobook in the &lt;code&gt;/original&lt;/code&gt; folder&lt;/li&gt; &#xA;  &lt;li&gt;Find only files and folders added to &lt;code&gt;/original&lt;/code&gt; since the last run&lt;/li&gt; &#xA;  &lt;li&gt;Filter files to just Audiofiles (mp3 m4b ogg etc)&lt;/li&gt; &#xA;  &lt;li&gt;Copy only the Audiofiles to &lt;code&gt;/temp&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Ignore folder structure, bring everything to the &lt;code&gt;/temp/*&lt;/code&gt; level&lt;/li&gt; &#xA;  &lt;li&gt;If exists do not copy again&lt;/li&gt; &#xA;  &lt;li&gt;We will configure Mp3tag to open to the &lt;code&gt;/temp&lt;/code&gt; folder by default&lt;/li&gt; &#xA;  &lt;li&gt;When you run the Mp3tag custom Action (installed/created below), Mp3tag will move the files from &lt;code&gt;/temp&lt;/code&gt; to &lt;code&gt;~/Audiobook&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;/original&#xA;|&#xA;+-- /Book1&#xA;|   |&#xA;|   +-- book1.mp3 (Date: T-1min)&#xA;|   +-- book1cover.jpg (Date: T-1min)&#xA;|&#xA;+-- book2.m4b (Date: T-2min)&#xA;+-- book3.m4b (Date: T-1Hr)&#xA;&#xA;RUN SCRIPT (every 2min)&#xA;&#xA;/temp&#xA;|&#xA;+-- book1.mp3&#xA;+-- book2.m4b&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;This will automatically copy untagged books from &lt;code&gt;\Original&lt;/code&gt; to &lt;code&gt;\temp&lt;/code&gt;, which we will set as the default folder Mp3tag opens to, so all you have to do is open Mp3tag and any books that need processing will be automatically loaded. Expand and follow one of the options below for your OS.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;[WINDOWS] Monitor /original folder and move untagged audiofiles to /temp: (click to expand)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Download, Install, and Run &lt;a href=&#34;http://www.dropitproject.com/#download&#34;&gt;Dropit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Download Dropit settings Backup file &lt;a href=&#34;https://github.com/seanap/Plex-Audiobook-Guide/raw/master/Dropit/Backup/BookCopy%20%5Bv1%5D.zip&#34;&gt;BookCopy [v1].zip&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;In the System Tray: Right-Click &lt;code&gt;Dropit&lt;/code&gt; &amp;gt; &lt;code&gt;Options&lt;/code&gt; &amp;gt; &lt;code&gt;Various&lt;/code&gt; &amp;gt; &lt;code&gt;Restore&lt;/code&gt; and &lt;strong&gt;Open&lt;/strong&gt; &lt;code&gt;BookCopy [v1].zip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://i.imgur.com/qrEFFQH.png&#34; width=&#34;69%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/DBdlB6k.png&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;In the &lt;code&gt;Options&lt;/code&gt; window, go to the &lt;code&gt;Monitoring&lt;/code&gt; tab and edit &lt;code&gt;Z:\Original&lt;/code&gt; with your specific folder&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/evlHN8K.png&#34; alt=&#34;Update Monitored Folder Path&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click Save, and OK to close the Options windows&lt;/li&gt; &#xA;  &lt;li&gt;Right-Click &lt;code&gt;Dropit&lt;/code&gt; icon in system tray&lt;/li&gt; &#xA;  &lt;li&gt;Click &lt;code&gt;Associations&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Make sure &lt;code&gt;BookCopy&lt;/code&gt; profile is selected in the bottom drop-down&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Double-Click &lt;code&gt;AudiobookCopy&lt;/code&gt; and edit &lt;code&gt;4. Destination Folder&lt;/code&gt; with your specific &lt;code&gt;\temp&lt;/code&gt; folder&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/T4HoYQq.png&#34; alt=&#34;Update Destination Folder&#34;&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Test it by Copying an audiofile to /Original. Make sure it&#39;s working before moving on&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;[LINUX] Create a BookCopy script: (click to expand)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Open Notepad++&lt;/li&gt; &#xA;  &lt;li&gt;Create a new file and name it &lt;code&gt;BookCopy.sh&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Copy and paste the code below, update your path, and save.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code&gt;#!/bin/sh&#xA;find /full/path/to/Original/ -type f \( -iname \*.m4b -o -iname \*.mp3 -o -iname \*.mp4 -o -iname \*.m4a -o -iname \*.ogg \) -mmin -3 -exec cp -n &#34;{}&#34; /full/path/to/temp/ \;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Edit cron &lt;code&gt;crontab -e&lt;/code&gt; add the following line:&lt;br&gt; &lt;code&gt;*/2 * * * * /bin/sh /path/to/BookCopy.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;(Optional) Automatically convert mp3 audiobooks to chapterized M4B [Linux+Windows]&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s face it, Large Libraries Sink Ships. Everything runs quicker, and smoother, the lower the total number of files there are to scan. Let&#39;s say you have 5000 books. If they were mp3&#39;s then you would be looking at least 100,000 files, vs 5000 m4b&#39;s. M4b&#39;s can also hold chapter data, and generally the metadata works better with Plex over mp3&#39;s.&lt;/p&gt; &#xA;&lt;p&gt;If you use both Linux and Windows, I have a Linux script that watches your &lt;code&gt;/original&lt;/code&gt; folder for newly added mp3 audiobooks and converts them to M4b files with chapters separated by mp3 file. It&#39;s pretty slick.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creating and Installing auto-m4b-tool script guide &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/seanap/Auto-M4B-Tool#m4b-tool-automation&#34;&gt;https://github.com/seanap/Auto-M4B-Tool#m4b-tool-automation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Configure Mp3tag&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install, or Upgrade &lt;a href=&#34;https://www.mp3tag.de/en/&#34;&gt;Mp3tag&lt;/a&gt; to the latest version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Set the default folder Mp3tag automatically looks for book files in.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Tools &amp;gt; Options &amp;gt; Directories&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Put the full path of the &lt;code&gt;\temp&lt;/code&gt; directory with your untagged books in &lt;code&gt;Favorite directory:&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;CHECK &lt;code&gt;start from this directory&lt;/code&gt;&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/R2lh1YH.png&#34; alt=&#34;alt text&#34; title=&#34;Default Directory&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Download my example configuration files to Mp3tag&#39;s Appdata directory&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download my repo by clicking &lt;a href=&#34;https://github.com/seanap/Plex-Audiobook-Guide/archive/master.zip&#34;&gt;Here&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alternatively, click the green &#39;Code&#39; dropdown button at the top of this Github page and select “Download Zip”.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;Mp3tag&lt;/code&gt; folder will be located in the zip archive. Unzip the archive.&lt;/li&gt; &#xA; &lt;li&gt;Open the &lt;code&gt;Plex-Audiobook-Guide&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Copy (or move) the &lt;code&gt;Mp3tag&lt;/code&gt; folder to &lt;code&gt;C:\Users\your-username-here\Appdata\Roaming&lt;/code&gt; folder &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click &lt;code&gt;Yes&lt;/code&gt; to merge/overwrite files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Edit the newly copied config files with your specific paths&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Right click the following provided config files and OPEN WITH Notepad++ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;%APPDATA%\Mp3tag\data\action\&amp;amp;1 Rename Relocate Extras Title.mta&lt;/code&gt; Update lines 3, 15, 22 with the path to your Plex &lt;code&gt;\Audiobook&lt;/code&gt; folder&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%APPDATA%\Mp3tag\export\001 Generate.mte&lt;/code&gt; Update line 1 with your windows username &lt;code&gt;C:\Users\your-username-here\...&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%APPDATA%\Mp3tag\export\desc.mte&lt;/code&gt; Update line 1 with the path to your Plex &lt;code&gt;\Audiobook&lt;/code&gt; folder&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;%APPDATA%\Mp3tag\export\reader.mte&lt;/code&gt; Update line 1 with the path to your Plex &lt;code&gt;\Audiobook&lt;/code&gt; folder&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternatively, you can manually create and configure mp3tag to your specific needs (click to expand)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;h4&gt;Install the Audible custom web sources&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/seanap/Audible.com-Search-by-Album/archive/master.zip&#34;&gt;Download&lt;/a&gt; the custom web source files&lt;/li&gt; &#xA;  &lt;li&gt;Drop the &lt;code&gt;Audible.com#Search by Album.src&lt;/code&gt; file in your &lt;code&gt;%appdata%\Roaming\Mp3tag\data\sources&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Cofigure the &lt;code&gt;Tag Panel&lt;/code&gt;&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;This can be manually adjusted Under &lt;code&gt;Tools &amp;gt; Options &amp;gt; Tag Panel&lt;/code&gt;&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/wHdZcHh.png&#34; alt=&#34;alt text&#34; title=&#34;Tag Panel&#34;&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Create a custom Action that will Rename, Proper Folder Structure, and Export cover/desc/reader&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Load an audiobook file in Mp3tag for testing, and select it&lt;/li&gt; &#xA;  &lt;li&gt;Click the Actions menu, select Actions (or &lt;code&gt;Alt-6&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;Click New, and Label it (eg. 01 - Filename - Folder Structure - Cover in Folder)&lt;/li&gt; &#xA;  &lt;li&gt;Add a New Action &lt;code&gt;Format Value&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Field = &lt;code&gt;_FILENAME&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Format String = &lt;code&gt;C:\path\to\Audiobooks\%albumartist%\%series%\%year% - %album%[ &#39;[&#39;%series% %series-part%&#39;]&#39;]\%album% (%year%) [&#39;[&#39;%series% %series-part%&#39;]&#39; ]- pt$num(%track%,2)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Add a New Action &lt;code&gt;Export Cover to File&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Format String = &lt;code&gt;%album% (%year%) [&#39;[&#39;%series% %series-part%&#39;]&#39; ]- cover&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Add a New Action &lt;code&gt;Export&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;New&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Label it &lt;code&gt;desc&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Edit the &lt;code&gt;desc.mte&lt;/code&gt; file to only include the following two lines:&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code&gt;$filename(desc.txt,utf-8)&#xA;%comment%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Save &lt;code&gt;desc.mte&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Set &lt;code&gt;Export File Name:&lt;/code&gt; as:&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;C:\path\to\Audiobooks\%albumartist%\%series%\%year% - %album%[ &#39;[&#39;%series% %series-part%&#39;]&#39;]\desc.txt&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Add New Action &lt;code&gt;Export&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Click &lt;code&gt;New&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Label it &lt;code&gt;reader&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Edit the &lt;code&gt;reader.mte&lt;/code&gt; file to only include the following two lines:&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code&gt;$filename(reader.txt,utf-8)&#xA;%composer%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Save &lt;code&gt;reader.mte&lt;/code&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Set &lt;code&gt;Export File Name:&lt;/code&gt; as:&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;C:\path\to\Audiobooks\%albumartist%\%series%\%year% - %album%[ &#39;[&#39;%series% %series-part%&#39;]&#39;]\reader.txt&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Your New Action should look like this:&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/SiRhEdU.png&#34; alt=&#34;alt text&#34; title=&#34;Example Actions&#34;&gt; &lt;img src=&#34;https://i.imgur.com/kmOiNqc.png&#34; alt=&#34;alt text&#34; title=&#34;Custom Action Sequence&#34;&gt; &lt;img src=&#34;https://i.imgur.com/YfxJOGj.png&#34; alt=&#34;alt text&#34; title=&#34;Filename format&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Test&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Put an audiobook file for testing in your &lt;code&gt;\temp&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Open Mp3tag and select all files for that book&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ctrl-k&lt;/code&gt; and set/fix the Track Numbering if applicable&lt;/li&gt; &#xA; &lt;li&gt;Click the Web Sources drop down button, select Audible.com &amp;gt; Search by Album&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/Q4ySYh2.png&#34; alt=&#34;alt text&#34; title=&#34;Web Source Select&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click the Action drop down button, select the &lt;code&gt;&amp;amp;1 Rename Relocate Extras Title&lt;/code&gt; Action&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/OMRONbp.png&#34; alt=&#34;alt text&#34; title=&#34;Filename-Folder-Cover&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: After selecting the Web Source manually for the first time we can then use the keyboard shortcut &lt;code&gt;ctrl+shift+i&lt;/code&gt; to call it moving forward. Likewise the action script can be called using &lt;code&gt;alt+a 1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Configure Plex&lt;/h3&gt; &#xA;&lt;h4&gt;Install Metadata Agent for Plex&lt;/h4&gt; &#xA;&lt;p&gt;Follow the Instructions &lt;a href=&#34;https://github.com/djdembeck/Audnexus.bundle&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;https://github.com/djdembeck/Audnexus.bundle&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternate Installation using WebTools Plex Plugin (click to expand)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://github.com/ukdtom/WebTools.bundle/wiki/Install&#34;&gt;WebTools 4 Plex v3.0&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Restart Plex&lt;/li&gt; &#xA;    &lt;li&gt;Access WebTools at this URL &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;code&gt;http://&amp;lt;your IP address here&amp;gt;:33400/&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Install the Audiobook Metadata Agent using WebTools: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;In the WebTools page Click &lt;code&gt;UAS&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Enter the following Manual Installation URL &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;code&gt;https://github.com/djdembeck/Audnexus.bundle&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;Restart Plex&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Configure Metadata Agent in Plex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Settings &amp;gt; Agents &amp;gt; Artist &amp;gt; Audiobooks&lt;/code&gt; Put Audnexus above Local Media Assets&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/5ZJmSXf.png&#34; alt=&#34;alt text&#34; title=&#34;Artist Agent Config&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;Settings &amp;gt; Agents &amp;gt; Albums &amp;gt; Audiobooks&lt;/code&gt; Put Audnexus above Local Media Assets&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/AgzM1Wm.png&#34; alt=&#34;alt text&#34; title=&#34;Album Agent Config&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Create Audiobook Library in Plex&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; select &lt;code&gt;Music&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add folders&lt;/strong&gt; browse to your Audiobook folders&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; set the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Agent = Audnexus Agents&lt;/li&gt; &#xA;   &lt;li&gt;Keep existing genre&#39;s - The new agent pulls 4-6 meaningful genres but if you want to keep your existing CHECK this box&lt;/li&gt; &#xA;   &lt;li&gt;Album sorting - By Name (This uses the Albumsort tag to keep series together and in order)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;UNCHECK&lt;/em&gt; Prefer Local Metadata&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;CHECK&lt;/em&gt; Store track progress&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;UNCHECK&lt;/em&gt; Author Bio&lt;/li&gt; &#xA;   &lt;li&gt;Genres = None&lt;/li&gt; &#xA;   &lt;li&gt;Album Art = Local Files Only&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Workflow&lt;/h3&gt; &#xA;&lt;p&gt;Now that the hard part of setting everything up is out of the way, this is what your typical workflow will look like moving forward:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Mp3tag can only work on one audiobook at a time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;Open Mp3tag&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;Ctrl-a&lt;/code&gt; or, Select All tracks of an Audiobook&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ctrl-k&lt;/code&gt; Set/fix the track numbers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ctrl-shift-i&lt;/code&gt; or Click the Web Source (quick) button &lt;img src=&#34;https://i.imgur.com/AjJbUqE.png&#34; alt=&#34;alt text&#34; title=&#34;Tag Source&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alt-a 1&lt;/code&gt; or Click the Action drop down menu&lt;br&gt; &lt;img src=&#34;https://i.imgur.com/OMRONbp.png&#34; alt=&#34;alt text&#34; title=&#34;Filename-Folder-Cover&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;This does not set the TITLE tag for multifile books. Plex uses TITLE as the Chapter Name. There are two easy options to set this: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click the &lt;code&gt;Filename - Tag&lt;/code&gt; button, &lt;code&gt;Format String=&lt;/code&gt; &lt;code&gt;%Title%&lt;/code&gt;, this will set the filename as the Chapter name.&lt;/li&gt; &#xA;   &lt;li&gt;Click the Action drop down, select &lt;code&gt;Chapter %track%&lt;/code&gt; which will give you a generic &#34;Chapter 1, Chapter 2, ...&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Tips!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are two key board shortcuts that call the Audible Web Source script, which one to use depends on if the Album and Artist tags exist or are accurate. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Ctrl-i&lt;/code&gt; - Use if there are &lt;strong&gt;no&lt;/strong&gt; tags, or if the Album/Artist tags are incorrect or contain junk data that will effect the Audible search. This shortcut will bring up the search and allow you to put exactly what you want to search Audible with, try to keep it as simple as possible with only Album and Author, you can also put the ASIN number in this dialog box to search for a specific book on Audible.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Ctrl-Shift-i&lt;/code&gt; Use if the Album and Artist tag look to be ok, this will bypass the search input dialog box and bring you straight to the results.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If the Author is also the Narrator make sure you delete the duplicate entry in the Artist field. The script automatically combines the Author and Narrator (ex. &lt;code&gt;Peter Clines, Ray Porter&lt;/code&gt;) in the Artist tag, which Plex uses as a &#34;All Artists on this track&#34; tag. Combining these tags for the Artist helps when searching Plex.&lt;/li&gt; &#xA; &lt;li&gt;Try to only keep 1 cover file in the tag, when the script asks if you want to save the existing cover, say &#34;&lt;strong&gt;No&lt;/strong&gt;&#34;. If you happen to like the included cover over Audibles, in the Tag Review screen you can click the &#34;Utils&#34; button (bottom left) and UNCHECK &#34;Save Image to Tag&#34;, but &lt;em&gt;make sure you remember to recheck this on the next book&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Tags that are being set&lt;/h3&gt; &#xA;&lt;p&gt;I did a lot of digging into ID3 standards and this was the best way I could come up with to shoehorn Audiobook metadata into mp3 tags. It certainly isn&#39;t perfect, but it does work very nicely for Plex and other Audiobook apps. These can be changed to fit your particular style by editing the Audible.com#Search by Album.src file in Notepad++.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;mp3tag Tag&lt;/th&gt; &#xA;   &lt;th&gt;Audible.com Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TIT1&lt;/code&gt; (CONTENTGROUP)&lt;/td&gt; &#xA;   &lt;td&gt;Series, Book #&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TALB&lt;/code&gt; (ALBUM)&lt;/td&gt; &#xA;   &lt;td&gt;Title&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TIT3&lt;/code&gt; (SUBTITLE)&lt;/td&gt; &#xA;   &lt;td&gt;Subtitle&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TPE1&lt;/code&gt; (ARTIST)&lt;/td&gt; &#xA;   &lt;td&gt;Author, Narrator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TPE2&lt;/code&gt; (ALBUMARTIST)&lt;/td&gt; &#xA;   &lt;td&gt;Author&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TCOM&lt;/code&gt; (COMPOSER)&lt;/td&gt; &#xA;   &lt;td&gt;Narrator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TCON&lt;/code&gt; (GENRE)&lt;/td&gt; &#xA;   &lt;td&gt;Genre1/Genre2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TYER&lt;/code&gt; (YEAR)&lt;/td&gt; &#xA;   &lt;td&gt;Copyright Year*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COMM&lt;/code&gt; (COMMENT)&lt;/td&gt; &#xA;   &lt;td&gt;Publisher&#39;s Summary (MP3)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;desc&lt;/code&gt; (DESCRIPTION)&lt;/td&gt; &#xA;   &lt;td&gt;Publisher&#39;s Summary (M4B)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TSOA&lt;/code&gt; (ALBUMSORT)&lt;/td&gt; &#xA;   &lt;td&gt;If ALBUM only, then %Title%&lt;br&gt;If ALBUM and SUBTITLE, then %Title% - %Subtitle%&lt;br&gt;If Series, then %Series% %Series-part% - %Title%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TDRL&lt;/code&gt; (RELEASETIME)&lt;/td&gt; &#xA;   &lt;td&gt;Audiobook Release Year&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TPUB&lt;/code&gt; (PUBLISHER)&lt;/td&gt; &#xA;   &lt;td&gt;Publisher&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TCOP&lt;/code&gt; (COPYRIGHT)&lt;/td&gt; &#xA;   &lt;td&gt;Copyright&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ASIN&lt;/code&gt; (ASIN)&lt;/td&gt; &#xA;   &lt;td&gt;Amazon Standard Identification Number&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;POPM&lt;/code&gt; (RATING WMP)&lt;/td&gt; &#xA;   &lt;td&gt;Audible Rating&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WOAF&lt;/code&gt; (WWWAUDIOFILE)&lt;/td&gt; &#xA;   &lt;td&gt;Audible Album URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;stik&lt;/code&gt; (ITUNESMEDIATYPE)&lt;/td&gt; &#xA;   &lt;td&gt;M4B Media type = Audiobook&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pgap&lt;/code&gt; (ITUNESGAPLESS)&lt;/td&gt; &#xA;   &lt;td&gt;M4B Gapless album = 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;shwm&lt;/code&gt; (SHOWMOVEMENT)&lt;/td&gt; &#xA;   &lt;td&gt;Show Movement (M4B), if Series then = 1 else blank&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MVNM&lt;/code&gt; (MOVEMENTNAME)&lt;/td&gt; &#xA;   &lt;td&gt;Series&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MVIN&lt;/code&gt; (MOVEMENT)&lt;/td&gt; &#xA;   &lt;td&gt;Series Book #&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TXXX&lt;/code&gt; (SERIES)**&lt;/td&gt; &#xA;   &lt;td&gt;Series&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TXXX&lt;/code&gt; (SERIES-PART)**&lt;/td&gt; &#xA;   &lt;td&gt;Series Book #&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TXXX&lt;/code&gt; (TMP_GENRE1)**&lt;/td&gt; &#xA;   &lt;td&gt;Genre 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TXXX&lt;/code&gt; (TMP_GENRE2)**&lt;/td&gt; &#xA;   &lt;td&gt;Genre 2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CoverUrl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Album Cover Art&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TIT2&lt;/code&gt; (TITLE)&lt;/td&gt; &#xA;   &lt;td&gt;Not Scraped, but used for Chapter Title&lt;br&gt;If no chapter data available set to filename&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;*&lt;em&gt;I would prefer Original Pub. year, but Audible is really bad at providing this data&lt;/em&gt;&lt;br&gt; **&lt;em&gt;Custom Tags used as placeholders, To view this tag Tools&amp;gt;Options&amp;gt;Tag Panel&amp;gt;New&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Players:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;iOS&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/fr/app/bookcamp/id1523540165&#34;&gt;BookCamp&lt;/a&gt; ($12/yr) - Connects to Plex, Cross Platform, NEW! Still in Beta&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/prologue/id1459223267&#34;&gt;Prologue&lt;/a&gt; ($5) - Connects to Plex,&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/play-sub-music-streamer/id955329386&#34;&gt;Play:Sub&lt;/a&gt; - Connects to Booksonic&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=app.bookcamp.android&#34;&gt;BookCamp&lt;/a&gt; ($12/yr) - Connects to Plex, Cross Platform, NEW! Still in Beta&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.github.mattpvaughn.chronicle&#34;&gt;Chronicle&lt;/a&gt; (Opensource) - Connects to Plex, limited functionality but works well&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://plexamp.com/&#34;&gt;PlexAmp&lt;/a&gt; (Plexpass) - Connects to Plex, Official Plex audio app, Music focused player, easy to lose your place.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=github.popeen.dsub&#34;&gt;Booksonic&lt;/a&gt; - Connects to &lt;a href=&#34;https://booksonic.org/&#34;&gt;Booksonic&lt;/a&gt;, has a few quirks but it works&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=ak.alizandro.smartaudiobookplayer&#34;&gt;Smart&lt;/a&gt; - Local media files only, but tons of great Audiobook specific features&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;h3&gt;Notes:&lt;/h3&gt; &#xA;&lt;p&gt;Once you have mp3tag, Audiobook metadata agent, and Plex configured the work flow becomes pretty quick and painless, especially when using keyboard shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;Following this guide will also give you everything you need for a properly organized AudiobookShelf and Booksonic server. While Plex doesn&#39;t really care about your folder structure beyond &lt;code&gt;/Audiobook/Author/Book/book.mp3&lt;/code&gt;, Booksonic exclusively uses folder structure for it&#39;s organization and it also looks for &lt;code&gt;cover.jpg&lt;/code&gt;/&lt;code&gt;desc.txt&lt;/code&gt;/&lt;code&gt;reader.txt&lt;/code&gt; files (automatically created with the Action script) for additional metadata.&lt;/p&gt; &#xA;&lt;p&gt;I currently use &lt;a href=&#34;https://www.bookcamp.app/&#34;&gt;BookCamp&lt;/a&gt; ($12/yr), it is &lt;em&gt;miles&lt;/em&gt; better than the Plex app and PlexAmp and works on both iOS and Android, but if you are on iOS then Prologue is the preferred option.&lt;/p&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- blank line --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/seanap&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-green.png&#34; alt=&#34;Buy Me A Book&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dnschneid/crouton</title>
    <updated>2022-07-12T01:56:49Z</updated>
    <id>tag:github.com,2022-07-12:/dnschneid/crouton</id>
    <link href="https://github.com/dnschneid/crouton" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chromium OS Universal Chroot Environment&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;crouton: Chromium OS Universal Chroot Environment&lt;/h1&gt; &#xA;&lt;p&gt;crouton is a set of scripts that bundle up into an easy-to-use, Chromium OS-centric chroot generator. Currently Ubuntu and Debian are supported (using debootstrap behind the scenes), but &#34;Chromium OS Debian, Ubuntu, and Probably Other Distros Eventually Chroot Environment&#34; doesn&#39;t acronymize as well (crodupodece is admittedly pretty fun to say, though).&lt;/p&gt; &#xA;&lt;h3&gt;crouton is now maintenance-only&lt;/h3&gt; &#xA;&lt;p&gt;This means that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only bugfix and release list PRs will be accepted.&lt;/li&gt; &#xA; &lt;li&gt;New distro releases will be added to the list as unsupported.&lt;/li&gt; &#xA; &lt;li&gt;As xenial is EOL, crouton will (at some point) no longer have a default release. You will always have to specify &lt;code&gt;-r&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bugs without updates in the past year will be bulk-closed with a &#34;stale&#34; tag.&lt;/li&gt; &#xA; &lt;li&gt;Open PRs will be left open but have the &#34;stale&#34; tag added. If anyone who forks crouton wants to pick up the feature work, they can build right off of those PRs.&lt;/li&gt; &#xA; &lt;li&gt;For the safety of users and stability of crouton&#39;s functionality for those on EOL devices, offers to take over the dnschneid/crouton repo or Chrome extension will be declined, and requests to change the goo.gl/fd3zc or goo.gl/OVQOEt destinations will be rejected. If you would like to continue feature work on crouton, fork it, do a good job of it, and people can choose to use it at their own risk.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;But first...&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;Steps to install crouton have changed!&lt;/strong&gt; &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Due to improved security within Chromium OS (&lt;a href=&#34;https://chromium.googlesource.com/chromiumos/docs/+/HEAD/security/noexec_shell_scripts.md&#34;&gt;yay!&lt;/a&gt;), the steps needed to launch the crouton installer, and the steps to run crouton from SD cards have to change a little.&lt;/p&gt; &#xA;&lt;p&gt;Please read the relevant sections of this README carefully, and reach out to your favorite weblogger/tutorialer/videotuber to update their guides if they&#39;re behind the times. If you&#39;re successful, brag about your accomplishments in &lt;a href=&#34;https://github.com/dnschneid/crouton/issues/4026&#34;&gt;the issue tracker&lt;/a&gt; and earn the personal gratitude of the crouton authors*!&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;* limit one (1) gratitude per commenter&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;WHOA&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ok, back to business.&lt;/p&gt; &#xA;&lt;h2&gt;&#34;crouton&#34;...an acronym?&lt;/h2&gt; &#xA;&lt;p&gt;It stands for &lt;em&gt;ChRomium Os Universal chrooT envirONment&lt;/em&gt; ...or something like that. Do capitals really matter if caps-lock has been (mostly) banished, and the keycaps are all lower-case?&lt;/p&gt; &#xA;&lt;p&gt;Moving on...&lt;/p&gt; &#xA;&lt;h2&gt;Who&#39;s this for?&lt;/h2&gt; &#xA;&lt;p&gt;Anyone who wants to run straight Linux on their Chromium OS device, and doesn&#39;t care about physical security. You&#39;re also better off having some knowledge of Linux tools and the command line in case things go funny, but it&#39;s not strictly necessary.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s a chroot?&lt;/h2&gt; &#xA;&lt;p&gt;Like virtualization, chroots provide the guest OS with their own, segregated file system to run in, allowing applications to run in a different binary environment from the host OS. Unlike virtualization, you are &lt;em&gt;not&lt;/em&gt; booting a second OS; instead, the guest OS is running using the Chromium OS system. The benefit to this is that there is zero speed penalty since everything is run natively, and you aren&#39;t wasting RAM to boot two OSes at the same time. The downside is that you must be running the correct chroot for your hardware, the software must be compatible with Chromium OS&#39;s kernel, and machine resources are inextricably tied between the host Chromium OS and the guest OS. What this means is that while the chroot cannot directly access files outside of its view, it &lt;em&gt;can&lt;/em&gt; access all of your hardware devices, including the entire contents of memory. A root exploit in your guest OS will essentially have unfettered access to the rest of Chromium OS.&lt;/p&gt; &#xA;&lt;p&gt;...but hey, you can run &lt;a href=&#34;https://en.wikipedia.org/wiki/Tux_Racer&#34;&gt;TuxRacer&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;What about dem crostinis though?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chromium.googlesource.com/chromiumos/docs/+/HEAD/containers_and_vms.md&#34;&gt;Crostini&lt;/a&gt; is an official project within Chromium OS to bring the Linux shell and apps to the platform &lt;em&gt;in verified mode&lt;/em&gt; with clean integration, multi-layered security, and all the polish you expect from Chromium OS proper.&lt;/p&gt; &#xA;&lt;p&gt;That means compared to crouton, Crostini has official support, competent engineers, and code that looks a little less like ramen. crouton, in its defense, has wider device compatibility, enables direct hardware access, and is named after an objectively tastier bread-based food item.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a solid community on &lt;a href=&#34;https://www.reddit.com/r/Crostini/&#34;&gt;Reddit&lt;/a&gt; if you&#39;d like to try Crostini out. If it works for you -- great! No hard feelings. If in the end you decide that crouton suits you better, read on!&lt;/p&gt; &#xA;&lt;p&gt;Note: you can&#39;t get the best of both worlds by installing crouton inside of Crostini. The technology (and life itself) just doesn&#39;t work that way. Not to mention a crouton Crostini would look ridiculous and be impossible to eat without getting bits everywhere.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;You need a device running Chromium OS that has been switched to developer mode.&lt;/p&gt; &#xA;&lt;p&gt;For instructions on how to do that, go to &lt;a href=&#34;https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices&#34;&gt;this Chromium OS wiki page&lt;/a&gt;, click on your device model and follow the steps in the &lt;em&gt;Entering Developer Mode&lt;/em&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Note that developer mode, in its default configuration, is &lt;em&gt;completely insecure&lt;/em&gt;, so don&#39;t expect a password in your chroot to keep anyone from your data. crouton does support encrypting chroots, but the encryption is only as strong as the quality of your passphrase. Consider this your warning.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s also highly recommended that you install the &lt;a href=&#34;https://goo.gl/OVQOEt&#34;&gt;crouton extension&lt;/a&gt;, which, when combined with the &lt;code&gt;extension&lt;/code&gt; or &lt;code&gt;xiwi&lt;/code&gt; targets, provides much improved integration with Chromium OS.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s it! Surprised?&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;crouton is a powerful tool, and there are a &lt;em&gt;lot&lt;/em&gt; of features, but basic usage is as simple as possible by design.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re just here to use crouton, you can grab the latest release from &lt;a href=&#34;https://goo.gl/fd3zc&#34;&gt;https://goo.gl/fd3zc&lt;/a&gt;. Download it, pop open a shell (Ctrl+Alt+T, type &lt;code&gt;shell&lt;/code&gt; and hit enter), make the installer executable with &lt;code&gt;sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton&lt;/code&gt;, then launch it with &lt;code&gt;sudo crouton&lt;/code&gt; to see the help text. See the &#34;examples&#34; section for some usage examples.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re modifying crouton, you&#39;ll probably want to clone or download the repo into a subdirectory of &lt;code&gt;/usr/local&lt;/code&gt; and then either run &lt;code&gt;installer/main.sh&lt;/code&gt; directly, or use &lt;code&gt;make&lt;/code&gt; to build your very own &lt;code&gt;crouton&lt;/code&gt;. You can also download the latest release, install it as above and run &lt;code&gt;crouton -x&lt;/code&gt; to extract out the juicy scripts contained within, but you&#39;ll be missing build-time stuff like the Makefile. You also need to remember to place the unbundled scripts somewhere in &lt;code&gt;/usr/local&lt;/code&gt; in order to be able to execute them.&lt;/p&gt; &#xA;&lt;p&gt;crouton uses the concept of &#34;targets&#34; to decide what to install. While you will have apt-get in your chroot, some targets may need minor hacks to avoid issues when running in the chrooted environment. As such, if you expect to want something that is fulfilled by a target, install that target when you make the chroot and you&#39;ll have an easier time. Don&#39;t worry if you forget to include a target; you can always update the chroot later and add it. You can see the list of available targets by running &lt;code&gt;crouton -t help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve set up your chroot, you can easily enter it using the newly-installed &lt;code&gt;enter-chroot&lt;/code&gt; command, or one of the target-specific start* commands. Ta-da! That was easy.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;The easy way (assuming you want an Ubuntu LTS with Xfce)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;code&gt;crouton&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open a shell (Ctrl+Alt+T, type &lt;code&gt;shell&lt;/code&gt; and hit enter)&lt;/li&gt; &#xA; &lt;li&gt;Copy the installer to an executable location by running &lt;code&gt;sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now that it&#39;s executable, run the installer itself: &lt;code&gt;sudo crouton -t xfce&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wait patiently and answer the prompts like a good person.&lt;/li&gt; &#xA; &lt;li&gt;Done! You can jump straight to your Xfce session by running &lt;code&gt;sudo enter-chroot startxfce4&lt;/code&gt; or, as a special shortcut, &lt;code&gt;sudo startxfce4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cycle through Chromium OS and your running graphical chroots using Ctrl+Alt+Shift+Back and Ctrl+Alt+Shift+Forward.&lt;/li&gt; &#xA; &lt;li&gt;Exit the chroot by logging out of Xfce.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;With encryption!&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;-e&lt;/code&gt; parameter when you run crouton to create an encrypted chroot or encrypt a non-encrypted chroot.&lt;/li&gt; &#xA; &lt;li&gt;You can get some extra protection on your chroot by storing the decryption key separately from the place the chroot is stored. Use the &lt;code&gt;-k&lt;/code&gt; parameter to specify a file or directory to store the keys in (such as a USB drive or SD card) when you create the chroot. Beware that if you lose this file, your chroot will not be decryptable. That&#39;s kind of the point, of course.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Hey now, Ubuntu 16.04 is pretty old; I&#39;m young and hip&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The &lt;code&gt;-r&lt;/code&gt; parameter specifies which distro release you want to use.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;crouton -r list&lt;/code&gt; to list the recognized releases and which distros they belong to.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Wasteful redundancies are wasteful: one clipboard, one browser, one window&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://goo.gl/OVQOEt&#34;&gt;crouton extension&lt;/a&gt; into Chromium OS.&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;extension&lt;/code&gt; or &lt;code&gt;xiwi&lt;/code&gt; version to your chroot.&lt;/li&gt; &#xA; &lt;li&gt;Try some copy-pasta, or uninstall all your web browsers from the chroot.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Installing the extension and its target gives you synchronized clipboards, the option of using Chromium OS to handle URLs, and allows chroots to create graphical sessions as Chromium OS windows.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;I don&#39;t always use Linux, but when I do, I use CLI&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can save a chunk of space by ditching X and just installing command-line tools using &lt;code&gt;-t core&lt;/code&gt; or &lt;code&gt;-t cli-extra&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter the chroot in as many crosh shells as you want simultaneously using &lt;code&gt;sudo enter-chroot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://goo.gl/eczLT&#34;&gt;Crosh Window&lt;/a&gt; extension to keep Chromium OS from eating standard keyboard shortcuts.&lt;/li&gt; &#xA; &lt;li&gt;If you installed cli-extra, &lt;code&gt;startcli&lt;/code&gt; will launch a new VT right into the chroot.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;A new version of crouton came out; my chroot is therefore obsolete and sad&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Exit the chroot if you have it open.&lt;/li&gt; &#xA; &lt;li&gt;If you haven&#39;t already, download &lt;code&gt;crouton&lt;/code&gt;, and copy it so it works: &lt;code&gt;sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update your chroot with &lt;code&gt;sudo crouton -u -n chrootname&lt;/code&gt;. It will update all installed targets.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;I want to open my desktop in a window or a tab but I don&#39;t have the &#39;xiwi&#39; target/xmethod.&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &#39;xiwi&#39; or any other target to an existing chroot with the &lt;code&gt;-u&lt;/code&gt; option: &lt;code&gt;sudo crouton -t xiwi -u -n chrootname&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This will also make &#39;xiwi&#39; the default xmethod.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;If you want to keep the &#39;xorg&#39; xmethod as the default then pick it first: &lt;code&gt;sudo sh crouton -t xorg,xiwi -u -n chrootname&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;A backup a day keeps the price-gouging data restoration services away&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo edit-chroot -b chrootname&lt;/code&gt; backs up your chroot to a timestamped tarball in the current directory. Chroots are named either via the &lt;code&gt;-n&lt;/code&gt; parameter when created or by the release name if -n was not specified.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo edit-chroot -r chrootname&lt;/code&gt; restores the chroot from the most recent timestamped tarball. You can explicitly specify the tarball with &lt;code&gt;-f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If your machine is new, powerwashed, or held upside-down and shaken, you can use the crouton installer to restore a chroot and relevant scripts: &lt;code&gt;sudo crouton -f mybackup.tar.gz&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Unlike with Chromium OS, the data in your chroot isn&#39;t synced to the cloud.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;This chroot&#39;s name/location/password/existence sucks. How to fix?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check out the &lt;code&gt;edit-chroot&lt;/code&gt; command; it likely does what you need it to do.&lt;/li&gt; &#xA; &lt;li&gt;If you set a Chromium OS root password, you can change it with &lt;code&gt;sudo chromeos-setdevpasswd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can change the password inside your chroot with &lt;code&gt;passwd&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;I want to install the chroot to another location&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use &lt;code&gt;-p&lt;/code&gt; to specify the directory in which to install the chroot and scripts. Be sure to quote or escape spaces.&lt;/li&gt; &#xA; &lt;li&gt;When entering the chroot for the first time each boot, you will first need to ensure the place you&#39;ve installed the scripts is in a place that allows executables to run. Determine the mountpoint by running &lt;code&gt;df --output=target /path/to/enter-chroot&lt;/code&gt;, then mark the mount exec with &lt;code&gt;sudo mount -o remount,exec /path/to/mountpoint&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can then launch the chroot by specifying the full path of any of the enter-chroot or start* scripts (i.e. &lt;code&gt;sudo /path/to/enter-chroot&lt;/code&gt;), or use the &lt;code&gt;-c&lt;/code&gt; parameter to explicitly specify the chroots directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;If for some reason you have to run the installer without touching the local disk, you can (for the time being) run &lt;code&gt;curl -fL https://goo.gl/fd3zc | sudo sh -s -- options_for_crouton_installer&lt;/code&gt;. Note that this will definitely break in the near future, so don&#39;t depend on it.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Downloading bootstrap files over and over again is a waste of time&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;code&gt;crouton&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open a shell (Ctrl+Alt+T, type &lt;code&gt;shell&lt;/code&gt; and hit enter)&lt;/li&gt; &#xA; &lt;li&gt;Copy the installer to an executable location by running &lt;code&gt;sudo install -Dt /usr/local/bin -m 755 ~/Downloads/crouton&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now that it&#39;s executable, use the installer to build a bootstrap tarball: &lt;code&gt;sudo crouton -d -f ~/Downloads/mybootstrap.tar.bz2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Include the &lt;code&gt;-r&lt;/code&gt; parameter if you want to specify for which release to prepare a bootstrap.&lt;/li&gt; &#xA; &lt;li&gt;You can then create chroots using the tarball by running &lt;code&gt;sudo crouton -f ~/Downloads/mybootstrap.tar.bz2&lt;/code&gt;. Make sure you also specify the target environment with &lt;code&gt;-t&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;This is the quickest way to create multiple chroots at once, since you won&#39;t have to determine and download the bootstrap files every time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Targets are cool. Abusing them for fun and profit is even cooler&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can make your own target files (start by copying one of the existing ones) and then use them with any version of crouton via the &lt;code&gt;-T&lt;/code&gt; parameter.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;This is great for automating common tasks when creating chroots.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Help! I&#39;ve created a monster that must be slain!&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The delete-chroot command is your sword, shield, and only true friend. &lt;code&gt;sudo delete-chroot evilchroot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s actually just a shortcut to &lt;code&gt;sudo edit-chroot -d evilchroot&lt;/code&gt;, which I suppose makes it a bit of a deceptive Swiss Army knife friend...still good?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chroots are cheap! Create multiple ones using &lt;code&gt;-n&lt;/code&gt;, break them, then make new, better ones!&lt;/li&gt; &#xA; &lt;li&gt;You can change the distro mirror from the default by using &lt;code&gt;-m&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Want to use a proxy? &lt;code&gt;-P&lt;/code&gt; lets you specify one (or disable it).&lt;/li&gt; &#xA; &lt;li&gt;A script is installed in your chroot called &lt;code&gt;brightness&lt;/code&gt;. You can assign this to keyboard shortcuts to adjust the brightness of the screen (e.g. &lt;code&gt;brightness up&lt;/code&gt;) or keyboard (e.g. &lt;code&gt;brightness k down&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Multiple monitors will work fine in the chroot, but you may have to switch to Chromium OS and back to enable them.&lt;/li&gt; &#xA; &lt;li&gt;You can make commands run in the background so that you can close the terminal. This is particularly useful for desktop environments: try running &lt;code&gt;sudo startxfce4 -b&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Want to disable Chromium OS&#39;s power management? Run &lt;code&gt;croutonpowerd -i&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Only want power management disabled for the duration of a command? &lt;code&gt;croutonpowerd -i command and arguments&lt;/code&gt; will automatically stop inhibiting power management when the command exits.&lt;/li&gt; &#xA; &lt;li&gt;Have a Pixel or two or 4.352 million? &lt;code&gt;-t touch&lt;/code&gt; improves touch support.&lt;/li&gt; &#xA; &lt;li&gt;Want to share some files and/or folders between ChromeOS and your chroot?&lt;br&gt; Check out the &lt;code&gt;/etc/crouton/shares&lt;/code&gt; file, or read all about it in the wiki.&lt;/li&gt; &#xA; &lt;li&gt;Want more tips? Check the &lt;a href=&#34;https://github.com/dnschneid/crouton/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues?&lt;/h2&gt; &#xA;&lt;p&gt;Running another OS in a chroot is a pretty messy technique (although it&#39;s hidden behind very pretty scripts), and while these scripts are relatively mature, Chromium OS is changing all the time so problems are not surprising. Check the issue tracker and file a bug if your issue isn&#39;t there. When filing a new bug, include the output of &lt;code&gt;croutonversion&lt;/code&gt; run from inside the chroot or, if you cannot mount your chroot, include the output of &lt;code&gt;cat /etc/lsb-release&lt;/code&gt; from Crosh.&lt;/p&gt; &#xA;&lt;h2&gt;I want to be a Contributor!&lt;/h2&gt; &#xA;&lt;p&gt;That&#39;s great! But before your code can be merged, you&#39;ll need to have signed the &lt;a href=&#34;https://cla.developers.google.com/clas/new?kind=KIND_INDIVIDUAL&amp;amp;domain=DOMAIN_GOOGLE&#34;&gt;Individual Contributor License Agreement&lt;/a&gt;. Don&#39;t worry, it only takes a minute and you&#39;ll definitely get to keep your firstborn, probably. If you&#39;ve already signed it for contributing to Chromium or Chromium OS, you&#39;re already done.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t know what to do with your time as an official Contributor, keep in mind that crouton is maintenance-only and will only be accepting a limited amount of changes. That having been said, here&#39;s some suggestions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Really like a certain desktop environment? Fork crouton, add the target, and let people know in the discussions area.&lt;/li&gt; &#xA; &lt;li&gt;Is your distro underrepresented? Want to contribute to the elusive and mythical beast known as &#34;croagh&#34;? Fork crouton, add the distro, and people will come.&lt;/li&gt; &#xA; &lt;li&gt;Discovered a bug lurking within the scripts, or a papercut that bothers you just enough to make you want to actually do something about it? You guessed it: fork crouton, fix everything, and create a pull request.&lt;/li&gt; &#xA; &lt;li&gt;Are most bugs too high-level for you to defeat? Grind up some &lt;a href=&#34;https://en.wikipedia.org/wiki/Experience_point&#34;&gt;EXP&lt;/a&gt; by using your fork to eat &lt;a href=&#34;https://github.com/dnschneid/crouton/labels/pie&#34;&gt;pie&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Are there other, non-Contributory ways I can help?&lt;/h2&gt; &#xA;&lt;p&gt;Yes!&lt;/p&gt; &#xA;&lt;h2&gt;But how?&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s a way For Everyone to help!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Something broken? File a bug! Bonus points if you try to fix it. It helps if you provide the output of &lt;code&gt;croutonversion&lt;/code&gt; (or the output of &lt;code&gt;cat /etc/lsb-release&lt;/code&gt; from Crosh) when you submit the bug.&lt;/li&gt; &#xA; &lt;li&gt;Look through &lt;a href=&#34;https://github.com/dnschneid/crouton/issues?state=open&#34;&gt;open issues&lt;/a&gt; and see if there&#39;s a topic or application you happen to have experience with. And then, preferably, share that experience with others.&lt;/li&gt; &#xA; &lt;li&gt;Find issues that need &lt;a href=&#34;https://github.com/dnschneid/crouton/issues?labels=needswiki&amp;amp;state=open,closed&#34;&gt;wiki entries&lt;/a&gt; and add the relevant info to the &lt;a href=&#34;https://github.com/dnschneid/crouton/wiki&#34;&gt;wiki&lt;/a&gt;. Or just add things to/improve things in the wiki in general, but do try to keep it relevant and organized.&lt;/li&gt; &#xA; &lt;li&gt;Really like a certain desktop environment, but not up for coding? Open or comment on a bug with steps to get things working well.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;crouton (including this eloquently-written README) is copyright © 2016 The crouton Authors. All rights reserved. Use of the source code included here is governed by a BSD-style license that can be found in the LICENSE file in the source tree.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getumbrel/umbrel-os</title>
    <updated>2022-07-12T01:56:49Z</updated>
    <id>tag:github.com,2022-07-12:/getumbrel/umbrel-os</id>
    <link href="https://github.com/getumbrel/umbrel-os" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convert a Raspberry Pi 4 into your personal server in one click&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/getumbrel/umbrel-os&#34;&gt;&lt;img src=&#34;https://static.getumbrel.com/github/github-banner-umbrel-os.svg?sanitize=true&#34; alt=&#34;Umbrel OS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getumbrel/umbrel-os/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/getumbrel/umbrel-os?color=%235351FB&amp;amp;label=version&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getumbrel/umbrel-os/actions?query=workflow%3A%22Build+image+on+push+or+PR%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/getumbrel/umbrel-os/Build%20image%20on%20push%20or%20PR?color=%235351FB&#34; alt=&#34;Automated builds&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/getumbrel&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/community%20chat-telegram-%235351FB&#34; alt=&#34;Community Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://keybase.io/team/getumbrel&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dev%20chat-keybase-%235351FB&#34; alt=&#34;Developer Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/getumbrel&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/getumbrel?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://reddit.com/r/getumbrel&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/getumbrel?label=Subscribe%20%2Fr%2Fgetumbrel&amp;amp;style=social&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;☂️ OS&lt;/h1&gt; &#xA;&lt;p&gt;Umbrel OS is the operating system of Umbrel Bitcoin and Lightning node. It&#39;s based on Raspberry Pi OS (formerly Raspbian) and uses &lt;a href=&#34;https://github.com/RPi-Distro/pi-gen&#34;&gt;pi-gen&lt;/a&gt; for customization.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To run Umbrel on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raspberry Pi 4 (recommended) — &lt;a href=&#34;https://github.com/getumbrel/umbrel-os/releases/latest&#34;&gt;Download the latest Umbrel OS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi 3 (no longer supported) - &lt;a href=&#34;https://github.com/getumbrel/umbrel-os/releases/tag/v0.2.10&#34;&gt;Download Umbrel OS v0.2.10&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any other hardware - &lt;a href=&#34;https://github.com/getumbrel/umbrel#-installation&#34;&gt;Manually install Umbrel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Instructions:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you&#39;ve everything ready:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B08C4SK5C3/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B08C4SK5C3&amp;amp;linkCode=as2&amp;amp;tag=umbrel08-20&amp;amp;linkId=d3f17fd4813568c4863d239839311d67&#34;&gt;Raspberry Pi 4 with 4GB or 8GB RAM&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B077SF8KMG/ref=as_li_tl?ie=UTF8&amp;amp;tag=umbrel08-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B077SF8KMG&amp;amp;linkId=5fa12eae55f9ecaed22984bdb9ebb546&#34;&gt;1TB SSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B01LY97QE8/ref=as_li_tl?ie=UTF8&amp;amp;tag=umbrel08-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B01LY97QE8&amp;amp;linkId=c73e0df3b8ebd4e5a03f37b7e3b371b3&#34;&gt;SSD Enclosure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B07B98GXQT/ref=as_li_tl?ie=UTF8&amp;amp;tag=umbrel08-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07B98GXQT&amp;amp;linkId=e72147bff5eef2a86d9d74300af70180&#34;&gt;16GB+ microSD Card&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B07G5JV2B5/ref=as_li_tl?ie=UTF8&amp;amp;tag=umbrel08-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07G5JV2B5&amp;amp;linkId=474cdf41a783f4ea511b9affa05f33d8&#34;&gt;microSD Card Reader&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B07ZTR9K9Z/ref=as_li_tl?ie=UTF8&amp;amp;tag=umbrel08-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07ZTR9K9Z&amp;amp;linkId=41269d57d8fbc8dfaf312893e689f5be&#34;&gt;Ethernet Cable&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/gp/product/B07WG4DW52/ref=as_li_tl?ie=UTF8&amp;amp;tag=umbrel08-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07WG4DW52&amp;amp;linkId=738df0605882b2422080f18d8a74e669&#34;&gt;Case&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;a href=&#34;https://github.com/getumbrel/umbrel-os/releases/latest&#34;&gt;latest release of Umbrel OS&lt;/a&gt;, or &lt;a href=&#34;https://raw.githubusercontent.com/getumbrel/umbrel-os/master/#-build-umbrel-os-from-source&#34;&gt;build the image from source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use an image flasher such as &lt;a href=&#34;https://github.com/balena-io/etcher&#34;&gt;Balena Etcher&lt;/a&gt; to flash the image to a microSD card.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Put the microSD card in your Raspberry Pi, attach an external SSD or HDD (to USB 3 port), connect the Pi to your router with an ethernet cable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Turn on the Pi and open &lt;a href=&#34;http://umbrel.local&#34;&gt;http://umbrel.local&lt;/a&gt; from any device connected to the same network (it might take a while for it to be accessible).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;⚠️ All data on the external hard drive will be erased on first boot.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re running Umbrel OS on Bitcoin mainnet (default), the external SSD or HDD should be at least 750 GB in size (we recommend 1 TB+) so it can store the whole Bitcoin blockchain.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💻 SSH&lt;/h2&gt; &#xA;&lt;p&gt;SSH is enabled by default and you can use the following credentials to login to your Umbrel node.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hostname: &lt;code&gt;umbrel.local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;User: &lt;code&gt;umbrel&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: The same password you use to log in to the Umbrel dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you haven&#39;t yet run through the setup process, the password will be set to &lt;code&gt;moneyprintergobrrr&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🛠 Build Umbrel OS from source&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Don&#39;t trust. Verify.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Step 1. Clone this repo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/getumbrel/umbrel-os.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 2. Switch to repo&#39;s directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd umbrel-os&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 3. BUIDL!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo ./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the build completes (it can take a looooooong time), the image will be inside &lt;code&gt;deploy/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;🔧 Advanced&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Config variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;config&lt;/code&gt; file has system defaults which are used when building the image and for automated builds.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UMBREL_VERSION&lt;/code&gt; - To install the specific &lt;a href=&#34;https://github.com/getumbrel/umbrel&#34;&gt;Umbrel&lt;/a&gt; version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;GITHUB_USERNAME&lt;/code&gt; - To automatically login to your Umbrel without typing a password.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UMBREL_REPO&lt;/code&gt; - A custom git repo used to download Umbrel. &lt;code&gt;UMBREL_VERSION&lt;/code&gt; is ignored if this is set, but it is required to also set &lt;code&gt;UMBREL_BRANCH&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;UMBREL_BRANCH&lt;/code&gt; - The git branch or commit SHA in the custom repo that should be checked out.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other Raspbian-related stuff can be found in &lt;a href=&#34;https://github.com/RPi-Distro/pi-gen/raw/master/README.md&#34;&gt;Raspbian&#39;s documentation&lt;/a&gt; which is still applicable.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;⚡️ Don&#39;t be too reckless&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Umbrel is still in an early stage and things are expected to break every now and then. We &lt;strong&gt;DO NOT&lt;/strong&gt; recommend running it on mainnet with real money just yet, unless you want to be really &lt;em&gt;#reckless&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;❤️ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome and appreciate new contributions!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a developer looking to help but not sure where to begin, check out &lt;a href=&#34;https://github.com/getumbrel/umbrel-os/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;these issues&lt;/a&gt; that have specifically been marked as being friendly to new contributors.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for a bigger challenge, before opening a pull request please &lt;a href=&#34;https://github.com/getumbrel/umbrel-os/issues/new/choose&#34;&gt;create an issue&lt;/a&gt; or &lt;a href=&#34;https://t.me/getumbrel&#34;&gt;join our community chat&lt;/a&gt; to get feedback, discuss the best way to tackle the challenge, and to ensure that there&#39;s no duplication of work.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;&#34;Being open source means anyone can independently review the code. If it was closed source, nobody could verify the security. I think it&#39;s essential for a program of this nature to be open source.&#34; — Satoshi Nakamoto&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getumbrel/umbrel-os/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/getumbrel/umbrel-os?color=%235351FB&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getumbrel.com&#34;&gt;getumbrel.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>