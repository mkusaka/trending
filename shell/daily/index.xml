<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-18T01:32:30Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Aloxaf/fzf-tab</title>
    <updated>2024-05-18T01:32:30Z</updated>
    <id>tag:github.com,2024-05-18:/Aloxaf/fzf-tab</id>
    <link href="https://github.com/Aloxaf/fzf-tab" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Replace zsh&#39;s default completion selection menu with fzf!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fzf-tab&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Aloxaf/fzf-tab/actions?query=workflow%3Aci&#34;&gt;&lt;img src=&#34;https://github.com/Aloxaf/fzf-tab/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Aloxaf/fzf-tab/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Aloxaf/fzf-tab&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Replace zsh&#39;s default completion selection menu with fzf!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/293849&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/293849.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- markdown-toc start - Don&#39;t edit this section. Run M-x markdown-toc-refresh-toc --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#fzf-tab&#34;&gt;fzf-tab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#install&#34;&gt;Install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#antigen&#34;&gt;Antigen&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#zinit&#34;&gt;Zinit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#oh-my-zsh&#34;&gt;Oh-My-Zsh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#prezto&#34;&gt;Prezto&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#configure&#34;&gt;Configure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#tmux&#34;&gt;Tmux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#binary-module&#34;&gt;Binary module&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#difference-from-other-plugins&#34;&gt;Difference from other plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#compatibility-with-other-plugins&#34;&gt;Compatibility with other plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Aloxaf/fzf-tab/master/#related-projects&#34;&gt;Related projects&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- markdown-toc end --&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;make sure &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; is installed&lt;/li&gt; &#xA;  &lt;li&gt;fzf-tab needs to be loaded after &lt;code&gt;compinit&lt;/code&gt;, but before plugins which will wrap widgets, such as &lt;a href=&#34;https://github.com/zsh-users/zsh-autosuggestions&#34;&gt;zsh-autosuggestions&lt;/a&gt; or &lt;a href=&#34;https://github.com/zdharma-continuum/fast-syntax-highlighting&#34;&gt;fast-syntax-highlighting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;First, clone this repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://github.com/Aloxaf/fzf-tab ~/somewhere&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add the following line to your &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;autoload -U compinit; compinit&#xA;source ~/somewhere/fzf-tab.plugin.zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Antigen&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;antigen bundle Aloxaf/fzf-tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Zinit&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;zinit light Aloxaf/fzf-tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Oh-My-Zsh&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository to your custom directory and then add &lt;code&gt;fzf-tab&lt;/code&gt; to your plugin list.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://github.com/Aloxaf/fzf-tab ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Prezto&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository to your contrib directory and then add &lt;code&gt;fzf-tab&lt;/code&gt; to your module list in &lt;code&gt;.zpreztorc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://github.com/Aloxaf/fzf-tab $ZPREZTODIR/contrib/fzf-tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Just press &lt;kbd&gt;Tab&lt;/kbd&gt; as usual~&lt;/p&gt; &#xA;&lt;p&gt;Available keybindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;kbd&gt;Ctrl+&#xA;    &lt;kdb&gt;&#xA;     Space&#xA;    &lt;/kdb&gt;&lt;/kbd&gt;: select multiple results, can be configured by &lt;code&gt;fzf-bindings&lt;/code&gt; tag&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;kbd&gt;F1&lt;/kbd&gt;/&lt;kbd&gt;F2&lt;/kbd&gt;: switch between groups, can be configured by &lt;code&gt;switch-group&lt;/code&gt; tag&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;kbd&gt;/&lt;/kbd&gt;: trigger continuous completion (useful when completing a deep path), can be configured by &lt;code&gt;continuous-trigger&lt;/code&gt; tag&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;disable-fzf-tab&lt;/code&gt;: disable fzf-tab and fallback to compsys&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;enable-fzf-tab&lt;/code&gt;: enable fzf-tab&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;toggle-fzf-tab&lt;/code&gt;: toggle the state of fzf-tab. This is also a zle widget.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configure&lt;/h2&gt; &#xA;&lt;p&gt;A common configuration is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;# disable sort when completing `git checkout`&#xA;zstyle &#39;:completion:*:git-checkout:*&#39; sort false&#xA;# set descriptions format to enable group support&#xA;# NOTE: don&#39;t use escape sequences here, fzf-tab will ignore them&#xA;zstyle &#39;:completion:*:descriptions&#39; format &#39;[%d]&#39;&#xA;# set list-colors to enable filename colorizing&#xA;zstyle &#39;:completion:*&#39; list-colors ${(s.:.)LS_COLORS}&#xA;# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix&#xA;zstyle &#39;:completion:*&#39; menu no&#xA;# preview directory&#39;s content with eza when completing cd&#xA;zstyle &#39;:fzf-tab:complete&lt;span&gt;ðŸ’¿&lt;/span&gt;*&#39; fzf-preview &#39;eza -1 --color=always $realpath&#39;&#xA;# switch group using `&amp;lt;` and `&amp;gt;`&#xA;zstyle &#39;:fzf-tab:*&#39; switch-group &#39;&amp;lt;&#39; &#39;&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tmux&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using tmux &amp;gt;= 3.2, we provide a script &lt;code&gt;ftb-tmux-popup&lt;/code&gt; to make full use of it&#39;s &#34;popup&#34; feature.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;zstyle &#39;:fzf-tab:*&#39; fzf-command ftb-tmux-popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BTW, you can also use this script outside the fzf-tab.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;ls | ftb-tmux-popup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/367471&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/367471.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information, please see &lt;a href=&#34;https://github.com/Aloxaf/fzf-tab/wiki/Configuration&#34;&gt;Wiki#Configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Binary module&lt;/h2&gt; &#xA;&lt;p&gt;By default, fzf-tab uses &lt;a href=&#34;https://github.com/xPMo/zsh-ls-colors&#34;&gt;zsh-ls-colors&lt;/a&gt; to parse and apply ZLS_COLORS if you have set the &lt;code&gt;list-colors&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;p&gt;However, it is a pure zsh script and is slow if you have too many files to colorize. fzf-tab is shipped with a binary module to speed up this process. You can build it with &lt;code&gt;build-fzf-tab-module&lt;/code&gt;, then it will be enabled automatically.&lt;/p&gt; &#xA;&lt;h1&gt;Difference from other plugins&lt;/h1&gt; &#xA;&lt;p&gt;fzf-tab doesn&#39;t do &#34;complete&#34;, it just shows you the results of the default completion system.&lt;/p&gt; &#xA;&lt;p&gt;So it works EVERYWHERE (variables, function names, directory stack, in-word completion, etc.). And most of your configuration for default completion system is still valid.&lt;/p&gt; &#xA;&lt;h1&gt;Compatibility with other plugins&lt;/h1&gt; &#xA;&lt;p&gt;Some plugins may also bind &#34;^I&#34; to their custom widget, like &lt;a href=&#34;https://github.com/junegunn/fzf/raw/master/shell/completion.zsh&#34;&gt;fzf/shell/completion.zsh&lt;/a&gt; or &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/raw/master/lib/completion.zsh#L61-L73&#34;&gt;ohmyzsh/lib/completion.zsh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, fzf-tab will call the widget previously bound to &#34;^I&#34; to get the completion list. So there is no problem in most cases, unless fzf-tab is initialized before a plugin which doesn&#39;t handle the previous binding properly.&lt;/p&gt; &#xA;&lt;p&gt;So if you find your fzf-tab doesn&#39;t work properly, &lt;strong&gt;please make sure it is the last plugin to bind &#34;^I&#34;&lt;/strong&gt; (If you don&#39;t know what I mean, just put it to the end of your plugin list).&lt;/p&gt; &#xA;&lt;h1&gt;Related projects&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lincheney/fzf-tab-completion&#34;&gt;https://github.com/lincheney/fzf-tab-completion&lt;/a&gt; (fzf tab completion for zsh, bash and GNU readline apps)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>