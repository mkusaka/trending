<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-12T01:53:06Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>screetsec/Sudomy</title>
    <updated>2022-06-12T01:53:06Z</updated>
    <id>tag:github.com,2022-06-12:/screetsec/Sudomy</id>
    <link href="https://github.com/screetsec/Sudomy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sudomy is a subdomain enumeration tool to collect subdomains and analyzing domains performing automated reconnaissance (recon) for bug hunting / pentesting&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sudomy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Screetsec/Sudomy/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-red.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Screetsec/Sudomy/actions&#34;&gt;&lt;img src=&#34;https://action-badges.now.sh/screetsec/sudomy&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Release-1.2.1-red.svg?maxAge=259200&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Supported_OS-Linux-yellow.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Supported_WSL-Windows-blue.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/screetsec/sudomy/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;Contributions Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/screetsec&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Subdomain Enumeration &amp;amp; Analysis&lt;/h3&gt; &#xA;&lt;img width=&#34;935&#34; alt=&#34;sudomy&#34; src=&#34;https://user-images.githubusercontent.com/17976841/102172910-685b5a80-3ecc-11eb-9bac-3003d786dd33.png&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Sudomy&lt;/strong&gt;&lt;/em&gt; is a subdomain enumeration tool to collect subdomains and analyzing domains performing advanced automated reconnaissance (framework). This tool can also be used for OSINT (Open-source intelligence) activities.&lt;/p&gt; &#xA;&lt;h2&gt;Features !&lt;/h2&gt; &#xA;&lt;h5&gt;For recent time, &lt;em&gt;&lt;strong&gt;Sudomy&lt;/strong&gt;&lt;/em&gt; has these 20 features:&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy, light, fast and powerful. Bash script (controller) is available by default in almost all Linux distributions. By using bash script multiprocessing feature, all processors will be utilized optimally.&lt;/li&gt; &#xA; &lt;li&gt;Subdomain enumeration process can be achieved by using &lt;strong&gt;active&lt;/strong&gt; method or &lt;strong&gt;passive&lt;/strong&gt; method &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Active Method&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;Sudomy&lt;/em&gt; utilize Gobuster tools because of its highspeed performance in carrying out DNS Subdomain Bruteforce attack (wildcard support). The wordlist that is used comes from combined SecList (Discover/DNS) lists which contains around 3 million entries&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Passive Method&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;By evaluating and &lt;strong&gt;selecting&lt;/strong&gt; the &lt;strong&gt;good&lt;/strong&gt; third-party sites/resources, the enumeration process can be &lt;strong&gt;optimized&lt;/strong&gt;. More results will be obtained with less time required. &lt;em&gt;Sudomy&lt;/em&gt; can collect data from these well-curated 22 third-party sites:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  https://censys.io&#xA;  https://developer.shodan.io&#xA;  https://dns.bufferover.run&#xA;  https://index.commoncrawl.org &#xA;  https://riddler.io &#xA;  https://api.certspotter.com&#xA;  https://api.hackertarget.com &#xA;  https://api.threatminer.org&#xA;  https://community.riskiq.com&#xA;  https://crt.sh&#xA;  https://dnsdumpster.com&#xA;  https://docs.binaryedge.io&#xA;  https://securitytrails.com&#xA;  https://graph.facebook.com&#xA;  https://otx.alienvault.com&#xA;  https://rapiddns.io&#xA;  https://spyse.com&#xA;  https://urlscan.io&#xA;  https://www.dnsdb.info&#xA;  https://www.virustotal.com&#xA;  https://threatcrowd.org&#xA;  https://web.archive.org&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Test the list of collected subdomains and probe for working http or https servers. This feature uses a third-party tool, &lt;a href=&#34;https://github.com/tomnomnom/httprobe&#34; title=&#34;httprobe&#34;&gt;httprobe&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Subdomain availability test based on Ping Sweep and/or by getting HTTP status code.&lt;/li&gt; &#xA; &lt;li&gt;The ability to detect virtualhost (several subdomains which resolve to single IP Address). Sudomy will resolve the collected subdomains to IP addresses, then classify them if several subdomains resolve to single IP address. This feature will be very useful for the next penetration testing/bug bounty process. For instance, in port scanning, single IP address won’t be scanned repeatedly&lt;/li&gt; &#xA; &lt;li&gt;Performed port scanning from collected subdomains/virtualhosts IP Addresses&lt;/li&gt; &#xA; &lt;li&gt;Testing Subdomain TakeOver attack (CNAME Resolver, DNSLookup, Detect NXDomain, Check Vuln)&lt;/li&gt; &#xA; &lt;li&gt;Taking Screenshots of subdomains default using gowitness or you can choice another screenshot tools, like (-ss webscreeenshot)&lt;/li&gt; &#xA; &lt;li&gt;Identify technologies on websites (category,application,version)&lt;/li&gt; &#xA; &lt;li&gt;Detection urls, ports, title, content-length, status-code, response-body probbing.&lt;/li&gt; &#xA; &lt;li&gt;Smart auto fallback from https to http as default.&lt;/li&gt; &#xA; &lt;li&gt;Data Collecting/Scraping open port from 3rd party (Default::Shodan), For right now just using Shodan [Future::Censys,Zoomeye]. More efficient and effective to collecting port from list ip on target [[ Subdomain &amp;gt; IP Resolver &amp;gt; Crawling &amp;gt; ASN &amp;amp; Open Port ]]&lt;/li&gt; &#xA; &lt;li&gt;Collecting Juicy URL &amp;amp; Extract URL Parameter ( Resource Default::WebArchive, CommonCrawl, UrlScanIO)&lt;/li&gt; &#xA; &lt;li&gt;Collect interesting path (api|.git|admin|etc), document (doc|pdf), javascript (js|node) and parameter&lt;/li&gt; &#xA; &lt;li&gt;Define path for outputfile (specify an output file when completed)&lt;/li&gt; &#xA; &lt;li&gt;Check an IP is Owned by Cloudflare&lt;/li&gt; &#xA; &lt;li&gt;Generate &amp;amp; make wordlist based on collecting url resources (wayback,urlscan,commoncrawl. To make that, we Extract All the paramater and path from our domain recon&lt;/li&gt; &#xA; &lt;li&gt;Generate Network Graph Visualization Subdomain &amp;amp; Virtualhosts&lt;/li&gt; &#xA; &lt;li&gt;Report output in HTML &amp;amp; CSV format&lt;/li&gt; &#xA; &lt;li&gt;Sending notifications to a slack channel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Sudomy Works&lt;/h2&gt; &#xA;&lt;p&gt;How sudomy works or recon flow, when you run the best arguments to collect subdomains and analyze by doing automatic recon.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;root@maland: ./sudomy -d bugcrowd.com -dP -eP -rS -cF -pS -tO -gW --httpx --dnsprobe  -aI webanalyze -sS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Recon Worfklow&lt;/h3&gt; &#xA;&lt;p&gt;This Recon Workflow Sudomy v1.1.8#dev&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Screetsec/Sudomy/master/doc/Sudomy%20-%20Recon%20Workflow%20v1.1.8%23dev.png&#34; alt=&#34;Recon Workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Detail information&lt;/h3&gt; &#xA;&lt;p&gt;Detail information File Reconnaissance &amp;amp; Juicy Data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------------------------------&#xA;&#xA;- subdomain.txt             -- Subdomain list             &amp;lt; $DOMAIN (Target)&#xA;- httprobe_subdomain.txt    -- Validate Subdomain&#x9;  &amp;lt; subdomain.txt&#xA;- webanalyzes.txt           -- Identify technology scan   &amp;lt; httprobe_subdomain.txt&#xA;- httpx_status_title.txt    -- title+statuscode+lenght    &amp;lt; httprobe_subdomain.txt&#xA;- dnsprobe_subdomain.txt    -- Subdomain resolv&#x9;&#x9;  &amp;lt; subdomain.txt&#xA;- Subdomain_Resolver.txt    -- Subdomain resolv (alt)     &amp;lt; subdomain.txt&#xA;- cf-ipresolv.txt           -- Cloudflare scan        &#x9;  &amp;lt; ip_resolver.txt &#xA;- Live_hosts_pingsweep.txt  -- Live Host check&#x9;&#x9;  &amp;lt; ip_resolver.txt&#x9; &#xA;- ip_resolver.txt           -- IP resolv list          &#x9;  &amp;lt; Subdomain_Resolver::dnsprobe&#xA;- ip_dbasn.txt&#x9;&#x9;    -- ASN Number Check&#x9;&#x9;  &amp;lt; ip_resolver.txt&#xA;- vHost_subdomain.txt       -- Virtual Host (Group by ip) &amp;lt; Subdomain_Resolver.txt&#xA;- nmap_top_ports.txt        -- Active port scanning       &amp;lt; cf-ipresolv.txt&#xA;- ip_dbport.txt&#x9;&#x9;    -- Passive port scanning&#x9;  &amp;lt; cf-ipresolv.txt&#xA;&#xA;------------------------------------------------------------------------------------------------------&#xA;- Passive_Collect_URL_Full.txt &#x9;&#x9;-- Full All Url Crawl (WebArchive, CommonCrawl, UrlScanIO)&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;- ./screenshots/report-0.html   &#x9;-- Screenshoting report    &#x9;&amp;lt; httprobe_subdomain.txt&#xA;- ./screenshots/gowitness.db   &#x9;&#x9;-- Database screenshot    &#x9;&amp;lt; httprobe_subdomain.txt&#xA;&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;- ./interest/interesturi-allpath.out&#x9;-- Interest path(/api,/git,etc) &amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./interest/interesturi-doc.out&#x9;-- Interest doc (doc,pdf,xls)   &amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./interest/interesturi-otherfile.out&#x9;-- Other files (.json,.env,etc) &amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./interest/interesturi-js.out&#x9;&#x9;-- All Javascript files(*.js)  &#x9;&amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./interest/interesturi-nodemodule.out&#x9;-- Files from /node_modules/    &amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./interest/interesturi-param-full.out&#x9;-- Full parameter list &#x9;&#x9;&amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./interest/interesturi-paramsuniq.out -- Full Uniq parameter list &#x9;&amp;lt; Passive_Collect_URL_Full.txt&#xA;&#xA;-  Notes : You can validate juicy/interest urls/param using urlprobe or httpx to avoid false positives&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;- ./takeover/CNAME-resolv.txt&#x9;&#x9;-- CNAME Resolver &#x9;&#x9;&amp;lt; subdomain.txt&#xA;- ./takeover/TakeOver-Lookup.txt&#x9;-- DNSLookup &#x9;&#x9;&#x9;&amp;lt; CNAME-resolv.txt&#xA;- ./takeover/TakeOver-nxdomain.txt&#x9;-- Other 3d service platform&#x9;&amp;lt; TakeOver-Lookup.txt&#xA;- ./takeover/TakeOver.txt&#x9;&#x9;-- Checking Vulnerabilty&#x9;&amp;lt; CNAME-resolv.txt&#xA;&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;- ./wordlist/wordlist-parameter.lst     -- Generate params wordlist     &amp;lt; Passive_Collect_URL_Full.txt&#xA;- ./wordlist/wordlist-pathurl.lst       -- Generate List paths wordlis  &amp;lt; Passive_Collect_URL_Full.txt&#xA;&#xA;-  Notes : This Wordlist based on domain &amp;amp; subdomain information (path,file,query strings &amp;amp; parameter)&#xA;------------------------------------------------------------------------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Publication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iopscience.iop.org/article/10.1088/1757-899X/771/1/012019/meta&#34;&gt;Sudomy: Information Gathering Tools for Subdomain Enumeration and Analysis&lt;/a&gt; - IOP Conference Series: Materials Science and Engineering, Volume 771, 2nd International Conference on Engineering and Applied Sciences (2nd InCEAS) 16 November 2019, Yogyakarta, Indonesia&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;User Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Offline User Guide : &lt;a href=&#34;https://github.com/Screetsec/Sudomy/raw/master/doc/Sudomy%20-%20Subdomain%20Enumeration%20%26%20Analaysis%20User%20Guide%20v1.0.pdf&#34;&gt;Sudomy - Subdomain Enumeration and Analysis User Guide v1.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Online User Guide : &lt;a href=&#34;https://sudomy.screetsec.web.id/features&#34;&gt;Subdomain Enumeration and Analysis User Guide&lt;/a&gt; - Up to date&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Comparison&lt;/h2&gt; &#xA;&lt;p&gt;Sudomy minimize more resources when use resources (Third-Party Sites) By evaluating and selecting the good third-party sites/resources, so the enumeration process can be optimized. The domain that is used in this comparison is &lt;em&gt;&lt;strong&gt;tiket.com&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following are the results of passive enumeration DNS testing of &lt;em&gt;Sublist3r v1.1.0, Subfinder v2.4.5&lt;/em&gt;, and &lt;em&gt;Sudomy v1.2.0&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;img width=&#34;935&#34; alt=&#34;Untitled&#34; src=&#34;https://user-images.githubusercontent.com/17976841/102053848-00990700-3e1b-11eb-9f48-9a82a8b3e64e.png&#34;&gt; &#xA;&lt;p&gt;In here subfinder is still classified as very fast for collecting subdomains by utilizing quite a lot of resources. Especially if the resources used have been optimized (?).&lt;/p&gt; &#xA;&lt;p&gt;For compilation results and videos, you can check here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ksZkMpLljcY&#34;&gt;Sudomy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/Zxf3pwh7uMI&#34;&gt;Subfinder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/DexFkrEwtt4&#34;&gt;Sublist3r&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When I have free time. Maybe In the future, sudomy will use golang too. If you want to contributes it&#39;s open to pull requests.&lt;/p&gt; &#xA;&lt;h3&gt;But it&#39;s shit! And your implementation sucks!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Yes, you&#39;re probably correct. Feel free to &#34;Not use it&#34; and there is a pull button to &#34;Make it better&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Sudomy&lt;/em&gt; is currently extended with the following tools. Instructions on how to install &amp;amp; use the application are linked below.&lt;/p&gt; &#xA;&lt;h3&gt;To Download Sudomy From Github&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone this repository&#xA;git clone --recursive https://github.com/screetsec/Sudomy.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python3 -m pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Sudomy&lt;/em&gt; requires &lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;jq&lt;/a&gt; and &lt;a href=&#34;https://www.gnu.org/software/grep/&#34;&gt;GNU grep&lt;/a&gt; to run and parse. Information on how to download and install jq can be accessed &lt;a href=&#34;https://stedolan.github.io/jq/download/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Linux&#xA;apt-get update&#xA;apt-get install jq nmap phantomjs npm chromium parallel&#xA;npm i -g wappalyzer wscat&#xA;&#xA;# Mac&#xA;brew cask install phantomjs &#xA;brew install jq nmap npm parallel grep&#xA;npm i -g wappalyzer wscat&#xA;&#xA;&#xA;# Note&#xA;All you would need is an installation of the latest Google Chrome or Chromium &#xA;Set the PATH in rc file for GNU grep changes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running in a Docker Container&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Pull an image from DockerHub&#xA;docker pull screetsec/sudomy:v1.2.1-dev&#xA;&#xA;# Create output directory&#xA;mkdir output&#xA;&#xA;# Run an image, you can run the image on custom directory but you must copy/download config sudomy.api on current directory&#xA;docker run -v &#34;${PWD}/output:/usr/lib/sudomy/output&#34; -v &#34;${PWD}/sudomy.api:/usr/lib/sudomy/sudomy.api&#34; -t --rm screetsec/sudomy:v1.1.9-dev [argument]&#xA;&#xA;# or define API variable when executed an image.&#xA;&#xA;docker run -v &#34;${PWD}/output:/usr/lib/sudomy/output&#34; -e &#34;SHODAN_API=xxxx&#34; -e &#34;VIRUSTOTAL=xxxx&#34; -t --rm screetsec/sudomy:v1.1.9-dev [argument]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Post Installation&lt;/h3&gt; &#xA;&lt;p&gt;API Key is needed before querying on third-party sites, such as &lt;code&gt;Shodan, Censys, SecurityTrails, Virustotal,&lt;/code&gt; and &lt;code&gt;BinaryEdge&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The API key setting can be done in sudomy.api file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Shodan&#xA;# URL :  http://developer.shodan.io&#xA;# Example :&#xA;#      - SHODAN_API=&#34;VGhpc1M0bXBsZWwKVGhmcGxlbAo&#34;&#xA;&#xA;SHODAN_API=&#34;&#34;&#xA;&#xA;# Censys&#xA;# URL : https://search.censys.io/register&#xA;&#xA;CENSYS_API=&#34;&#34;&#xA;CENSYS_SECRET=&#34;&#34;&#xA;&#xA;# Virustotal&#xA;# URL : https://www.virustotal.com/gui/&#xA;VIRUSTOTAL=&#34;&#34;&#xA;&#xA;&#xA;# Binaryedge&#xA;# URL : https://app.binaryedge.io/login&#xA;BINARYEDGE=&#34;&#34;&#xA;&#xA;&#xA;# SecurityTrails&#xA;# URL : https://securitytrails.com/&#xA;SECURITY_TRAILS=&#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;YOUR_WEBHOOK_URL is needed before using the slack notifications&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The URL setting can be done in slack.conf file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Configuration Slack Alert&#xA;# For configuration/tutorial to get webhook url following to this site&#xA;#     - https://api.slack.com/messaging/webhooks&#xA;# Example: &#xA;#     - YOUR_WEBHOOK_URL=&#34;https://hooks.slack.com/services/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&#34;&#xA;&#xA;YOUR_WEBHOOK_URL=&#34;https://hooks.slack.com/services/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&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt; ___         _ _  _           &#xA;/ __|_  _ __| (_)(_)_ __ _  _ &#xA;\__ \ || / _  / __ \  &#39; \ || |&#xA;|___/\_,_\__,_\____/_|_|_\_, |&#xA;                          |__/ v{1.2.1#dev} by @screetsec &#xA;Sud⍥my - Fast Subdmain Enumeration and Analyzer      &#xA;         http://github.com/screetsec/sudomy&#xA;&#xA;Usage: sud⍥my.sh [-h [--help]] [-s[--source]][-d[--domain=]] &#xA;&#xA;Example: sud⍥my.sh -d example.com   &#xA;         sud⍥my.sh -s Shodan,VirusTotal -d example.com&#xA;&#xA;Best Argument:&#xA;  sudomy -d domain.com -dP -eP -rS -cF -pS -tO -gW --httpx --dnsprobe  -aI webanalyze --slack -sS&#xA;&#xA;&#xA;Optional Arguments:&#xA;  -a,  --all             Running all Enumeration, no nmap &amp;amp; gobuster &#xA;  -b,  --bruteforce      Bruteforce Subdomain Using Gobuster (Wordlist: ALL Top SecList DNS) &#xA;  -d,  --domain          domain of the website to scan&#xA;  -h,  --help            show this help message&#xA;  -o,  --outfile         specify an output file when completed &#xA;  -s,  --source          Use source for Enumerate Subdomain&#xA;  -aI, --apps-identifier Identify technologies on website (ex: -aI webanalyze)&#xA;  -dP, --db-port         Collecting port from 3rd Party default=shodan&#xA;  -eP, --extract-params  Collecting URL Parameter from Engine&#xA;  -tO, --takeover        Subdomain TakeOver Vulnerabilty Scanner&#xA;  -wS, --websocket       WebSocket Connection Check&#xA;  -cF, --cloudfare       Check an IP is Owned by Cloudflare&#xA;  -pS, --ping-sweep      Check live host using methode Ping Sweep&#xA;  -rS, --resolver        Convert domain lists to resolved IP lists without duplicates&#xA;  -sC, --status-code     Get status codes, response from domain list&#xA;  -nT, --nmap-top        Port scanning with top-ports using nmap from domain list&#xA;  -sS, --screenshot      Screenshots a list of website (default: gowitness)&#xA;  -nP, --no-passive      Do not perform passive subdomain enumeration &#xA;  -gW, --gwordlist       Generate wordlist based on collecting url resources (Passive) &#xA;       --httpx           Perform httpx multiple probers using retryablehttp &#xA;       --dnsprobe        Perform multiple dns queries (dnsprobe) &#xA;       --no-probe        Do not perform httprobe &#xA;       --html            Make report output into HTML &#xA;       --graph           Network Graph Visualization&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use all 22 Sources and Probe for working http or https servers (Validations):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -d hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use one or more source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -s shodan,dnsdumpster,webarchive -d hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use all Sources Without Validations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -d hackerone.com --no-probe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use one or more plugins:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -pS -sC -sS -d hackerone.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use all plugins: testing host status, http/https status code, subdomain takeover and screenshots.&lt;/p&gt; &#xA;&lt;p&gt;Nmap,Gobuster,wappalyzer and wscat Not Included.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -d hackerone.com --all &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create report in HTML Format&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -d hackerone.com --html --all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HTML Report Sample:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dashboard&lt;/th&gt; &#xA;   &lt;th&gt;Reports&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17976841/63597336-6ab6e880-c5e7-11e9-819e-91634e347b0c.PNG&#34; alt=&#34;Index&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17976841/63597476-bbc6dc80-c5e7-11e9-8985-6a73348a2e02.PNG&#34; alt=&#34;f&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To gnereate network graph visualization subdomain &amp;amp; virtualhosts&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudomy -d hackerone.com -rS --graph&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Graph Visualization &lt;a href=&#34;https://screetsec.github.io/&#34;&gt;Sample&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;nGraph&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17976841/104086846-b24a1d00-528d-11eb-88f5-de9bb0b641d1.PNG&#34; alt=&#34;nGraph&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To use best arguments to collect subdomains, analyze by doing automatic recon and sending notifications to slack&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./sudomy -d ngesec.id -dP -eP -rS -cF -pS -tO -gW --httpx --dnsprobe --graph  -aI webanalyze --slack -sS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Slack Notification Sample:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Slack&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/17976841/95856703-a4672780-0d84-11eb-9a3e-03ab39e4dc10.png&#34; alt=&#34;Slacks&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tools Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Youtube Videos : Click &lt;a href=&#34;http://www.youtube.com/watch?v=DpXIBUtasn0&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screetsec/Sudomy/raw/master/doc/README_ID.md&#34;&gt;Indonesia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screetsec/Sudomy/raw/master/doc/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screetsec/Sudomy/raw/master/doc/README_PT_BR.md&#34;&gt;Portuguese - Brazil&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;All notable changes to this project will be documented in this &lt;a href=&#34;https://github.com/Screetsec/sudomy/raw/master/CHANGELOG.md&#34;&gt;file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Alternative Best Tool - Subdomain Enumeration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectdiscovery/subfinder&#34;&gt;Subfinder&lt;/a&gt; - Projectdiscovery&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aboul3la/Sublist3r&#34;&gt;Sublist3r&lt;/a&gt; - aboul3la&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Edu4rdSHL/findomain&#34;&gt;Findomain&lt;/a&gt; - Edu4rdSHL&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OWASP/Amass&#34;&gt;Amass&lt;/a&gt; - OWASP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits &amp;amp; Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomnomnom/&#34;&gt;Tom Hudson&lt;/a&gt; - Tomonomnom&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OJ/&#34;&gt;OJ Reeves&lt;/a&gt; - Gobuster&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectdiscovery&#34;&gt;ProjectDiscovery&lt;/a&gt; - Security Through Intelligent Automation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maaaaz&#34;&gt;Thomas D Maaaaz&lt;/a&gt; - Webscreenshot&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dwisiswant0&#34;&gt;Dwi Siswanto&lt;/a&gt; - cf-checker&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rverton/webanalyze&#34;&gt;Robin Verton&lt;/a&gt; - webanalyze&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/christophetd/censys-subdomain-finder&#34;&gt;christophetd&lt;/a&gt; - Censys&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danielmiessler/&#34;&gt;Daniel Miessler&lt;/a&gt; - SecList&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdOverflow/&#34;&gt;EdOverflow&lt;/a&gt; - can-i-take-over-xyz&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/myugan&#34;&gt;jerukitumanis&lt;/a&gt; - Docker Maintainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ngesec.id/&#34;&gt;NgeSEC&lt;/a&gt; - Community&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://zerobyte.id/&#34;&gt;Zerobyte&lt;/a&gt; - Community&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gauli.net/&#34;&gt;Gauli(dot)Net&lt;/a&gt; - Lab Hacking Indonesia&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/missme3f/&#34;&gt;missme3f&lt;/a&gt; - Raditya Rahma&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bugcrowd.com/&#34;&gt;Bugcrowd&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.hackerone.com/&#34;&gt;Hackerone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://darknetdiaries.com/&#34;&gt;darknetdiaries&lt;/a&gt; - Awesome Art&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>zardus/ctf-tools</title>
    <updated>2022-06-12T01:53:06Z</updated>
    <id>tag:github.com,2022-06-12:/zardus/ctf-tools</id>
    <link href="https://github.com/zardus/ctf-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Some setup scripts for security research tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ctf-tools&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/zardus/ctf-tools&#34;&gt;&lt;img src=&#34;https://travis-ci.org/zardus/ctf-tools.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://webchat.freenode.net/?channels=#ctf-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/freenode-%23ctf--tools-green.svg?sanitize=true&#34; alt=&#34;IRC&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of setup scripts to create an install of various security research tools. Of course, this isn&#39;t a hard problem, but it&#39;s really nice to have them in one place that&#39;s easily deployable to new machines and so forth. The install-scripts for these tools are checked regularly, the results can be found on &lt;a href=&#34;https://raw.githubusercontent.com/zardus/ctf-tools/master/_buildstatus/index.md&#34;&gt;the build status page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installers for the following tools are included:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://lcamtuf.coredump.cx/afl/&#34;&gt;afl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;State-of-the-art fuzzer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://angr.io&#34;&gt;angr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Next-generation binary analysis engine from Shellphish.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/programa-stic/barf-project&#34;&gt;barf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Binary Analysis and Reverse-engineering Framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bitbucket.org/mihaila/bindead/wiki/Home&#34;&gt;bindead&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A static analysis tool for binaries.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.capstone-engine.org&#34;&gt;capstone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi-architecture disassembly framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/slimm609/checksec.sh&#34;&gt;checksec&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check binary hardening settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trailofbits/codereason&#34;&gt;codereason&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Semantic Binary Code Analysis Framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://crosstool-ng.org/&#34;&gt;crosstool-ng&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cross-compilers and cross-architecture tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://kozos.jp/books/asm/asm.html&#34;&gt;cross2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A set of cross-compilation tools from a Japanese book on C.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.muppetlabs.com/~breadbox/software/elfkickers.html&#34;&gt;elfkickers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A set of utilities for working with ELF files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.elfparser.com/&#34;&gt;elfparser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quickly determine the capabilities of an ELF binary through static analysis.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.mathstat.dal.ca/~selinger/md5collision/&#34;&gt;evilize&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tool to create MD5 colliding binaries&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.gnu.org/software/gdb/&#34;&gt;gdb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Up-to-date gdb with python2 bindings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rogerhu/gdb-heap&#34;&gt;gdb-heap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;gdb extension for debugging heap issues.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hugsy/gef&#34;&gt;gef&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enhanced environment for gdb.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/honggfuzz&#34;&gt;hongfuzz&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A general-purpose, easy-to-use fuzzer with interesting analysis options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.keystone-engine.org&#34;&gt;keystone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lightweight multi-architecture assembler framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cloudburst/libheap&#34;&gt;libheap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;gdb python library for examining the glibc heap (ptmalloc)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lief.quarkslab.com/&#34;&gt;lief&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Library to Instrument Executable Formats.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cea-sec/miasm&#34;&gt;miasm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reverse engineering framework in Python.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/david942j/one_gadget&#34;&gt;one_gadget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Magic gadget search for libc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/moyix/panda&#34;&gt;panda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Platform for Architecture-Neutral Dynamic Analysis.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/codelion/pathgrind&#34;&gt;pathgrind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path-based, symbolically-assisted fuzzer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/longld/peda&#34;&gt;peda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enhanced environment for gdb.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zardus/preeny&#34;&gt;preeny&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A collection of helpful preloads (compiled for many architectures!).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zachriggle/pwndbg&#34;&gt;pwndbg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enhanced environment for gdb. Especially for pwning.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Gallopsled/pwntools&#34;&gt;pwntools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Useful CTF utilities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/blankwall/Python_Pin&#34;&gt;python-pin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python bindings for pin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://qemu.org&#34;&gt;qemu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Latest version of qemu!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://qira.me&#34;&gt;qira&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parallel, timeless debugger.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.radare.org/&#34;&gt;radare2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some crazy thing crowell likes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yrp604/rappel&#34;&gt;rappel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A linux-based assembly REPL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sashs/Ropper&#34;&gt;ropper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Another gadget finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/0vercl0k/rp&#34;&gt;rp++&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Another gadget finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://rr-project.org&#34;&gt;rr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Record and Replay Debugging Framework&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pfalcon/ScratchABit&#34;&gt;scratchabit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Easily retargetable and hackable interactive disassembler&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pfalcon/ScratchABlock&#34;&gt;scratchablock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yet another crippled decompiler project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/david942j/seccomp-tools&#34;&gt;seccomp-tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides powerful tools for seccomp analysis&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/reyammer/shellnoob&#34;&gt;shellnoob&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shellcode writing helper.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/b3mb4m/shellsploit-framework&#34;&gt;shellsploit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shellcode development kit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yegord/snowman&#34;&gt;snowman&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cross-architecture decompiler.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wmkhoo/taintgrind&#34;&gt;taintgrind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A valgrind taint analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.unicorn-engine.org&#34;&gt;unicorn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi-architecture CPU emulator framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://valgrind.org&#34;&gt;valgrind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Dynamic Binary Instrumentation framework with some built-in tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wapiflapi/villoc&#34;&gt;villoc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Visualization of heap operations.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/antoniobianchi333/virtualsocket&#34;&gt;virtualsocket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A nice library to interact with binaries.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/endrazine/wcc&#34;&gt;wcc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Witchcraft Compiler Collection is a collection of compilation tools to perform binary black magic on the GNU/Linux and other POSIX platforms.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acama/xrop&#34;&gt;xrop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Gadget finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trailofbits/manticore&#34;&gt;manticore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Manticore is a prototyping tool for dynamic binary analysis, with support for symbolic execution, taint analysis, and binary instrumentation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/devttys0/binwalk.git&#34;&gt;binwalk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Firmware (and arbitrary file) analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.hsc.fr/ressources/outils/dislocker/&#34;&gt;dislocker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tool for reading Bitlocker encrypted partitions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kholia/exetractor-clone&#34;&gt;exetractor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unpacker for packed Python executables. Supports PyInstaller and py2exe.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.google.com/p/firmware-mod-kit/&#34;&gt;firmware-mod-kit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tools for firmware packing/unpacking.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;apt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://foremost.sourceforge.net/&#34;&gt;foremost&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File carver.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://blog.didierstevens.com/programs/pdf-tools/&#34;&gt;pdf-parser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tool for digging in PDF files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jesparza/peepdf&#34;&gt;peepdf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Powerful Python tool to analyze PDF documents.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gist.github.com/bcse/1834878&#34;&gt;scrdec&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A decoder for encoded Windows Scripts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.cgsecurity.org/wiki/TestDisk&#34;&gt;testdisk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Testdisk and photorec for file recovery.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhondta/python-codext&#34;&gt;codext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python codecs extension featuring CLI tools for encoding/decoding anything including AI-based guessing mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/SpiderLabs/cribdrag&#34;&gt;cribdrag&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Interactive crib dragging tool (for crypto).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.win.tue.nl/hashclash/&#34;&gt;fastcoll&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An md5sum collision generator.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ALSchwalm/foresight&#34;&gt;foresight&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tool for predicting the output of random number generators. To run, launch &#34;foresee&#34;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nccgroup/featherduster&#34;&gt;featherduster&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An automated, modular cryptanalysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://web.eecs.utk.edu/~plank/plank/papers/CS-07-593&#34;&gt;galois&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A fast galois field arithmetic library/toolkit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gat3way/hashkill&#34;&gt;hashkill&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hash cracker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bwall/HashPump&#34;&gt;hashpump&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tool for performing hash length extension attaacks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mheistermann/HashPump-partialhash&#34;&gt;hashpump-partialhash&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hashpump, supporting partially-unknown hashes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.google.com/p/hash-identifier/source/checkout&#34;&gt;hash-identifier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Simple hash algorithm identifier.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/niklasb/libc-database&#34;&gt;libc-database&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a database of libc offsets to simplify exploitation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/devttys0/littleblackbox&#34;&gt;littleblackbox&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Database of private SSL/SSH keys for embedded devices.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://sourceforge.net/projects/msieve/&#34;&gt;msieve&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Msieve is a C library implementing a suite of algorithms to factor large integers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nonce-disrespect/nonce-disrespect&#34;&gt;nonce-disrespect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Nonce-Disrespecting Adversaries: Practical Forgery Attacks on GCM in TLS.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/robertdavidgraham/pemcrack&#34;&gt;pemcrack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL PEM file cracker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.unix-ag.uni-kl.de/~conrad/krypto/pkcrack.html&#34;&gt;pkcrack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PkZip encryption cracker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mwielgoszewski/python-paddingoracle&#34;&gt;python-paddingoracle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Padding oracle attack automation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://reveng.sourceforge.net/&#34;&gt;reveng&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CRC finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jjyg/ssh_decoder&#34;&gt;ssh_decoder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tool for decoding ssh traffic. You will need &lt;code&gt;ruby1.8&lt;/code&gt; from &lt;code&gt;https://launchpad.net/~brightbox/+archive/ubuntu/ruby-ng&lt;/code&gt; to run this. Run with &lt;code&gt;ssh_decoder --help&lt;/code&gt; for help, as running it with no arguments causes it to crash.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/droe/sslsplit&#34;&gt;sslsplit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL/TLS MITM.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hellman/xortool&#34;&gt;xortool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;XOR analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://sourceforge.net/projects/yafu/&#34;&gt;yafu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automated integer factorization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://portswigger.net/burp&#34;&gt;burpsuite&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web proxy to do naughty web stuff.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/stasinopoulos/commix&#34;&gt;commix&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Command injection and exploitation tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://dirb.sourceforge.net/&#34;&gt;dirb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web path scanner.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maurosoria/dirsearch&#34;&gt;dirsearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web path scanner.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mitmproxy.org/&#34;&gt;mitmproxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CLI Web proxy and python library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://sqlmap.org/&#34;&gt;sqlmap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SQL injection automation engine.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TheRook/subbrute&#34;&gt;subbrute&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A DNS meta-query spider that enumerates DNS records, and subdomains.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhondta/webgrep&#34;&gt;webgrep&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;grep&lt;/code&gt; for Web pages, with JS deobfuscation, CSS unminifying and OCR on images.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;apt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/+source/pngtools&#34;&gt;pngtools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PNG&#39;s analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.sonicvisualiser.org/&#34;&gt;sound-visualizer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Audio file visualization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.caesum.com/handbook/stego.htm&#34;&gt;steganabara&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Another image stenography solver.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhondta/stegano-tools&#34;&gt;stegano-tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A collection of text and image steganography tools (incl LSB, PVD, PIT).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.outguess.org/&#34;&gt;stegdetect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stenography detection/breaking tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Docker&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DominicBreuker/stego-toolkit&#34;&gt;stego-toolkit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A docker image with dozens of steg tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.caesum.com/handbook/stego.htm&#34;&gt;stegsolve&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image stenography solver.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AngelKitty/stegosaurus&#34;&gt;stegosaurus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A steganography tool for embedding arbitrary payloads in Python bytecode (pyc or pyo) files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zed-0xff/zsteg&#34;&gt;zsteg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;detect stegano-hidden data in PNG &amp;amp; BMP.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dsniff&lt;/td&gt; &#xA;   &lt;td&gt;apt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.monkey.org/~dugsong/dsniff/&#34;&gt;dsniff&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Grabs passwords and other data from pcaps/network streams.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ibotpeaches.github.io/Apktool/&#34;&gt;apktool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dissect, dis-assemble, and re-pack Android APKs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://developer.android.com/sdk&#34;&gt;android-sdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The android SDK (adb, emulator, etc).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://git.kali.org/gitweb/?p=packages/xspy.git;a=summary&#34;&gt;xspy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tiny tool to spy on X sessions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3&#34;&gt;z3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Theorem prover from Microsoft Research.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://jd.benow.ca/&#34;&gt;jdgui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java decompiler.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codisec.com/veles/&#34;&gt;veles&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Binary data analysis and visualization tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://yt-dl.org/&#34;&gt;youtube-dl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Latest version of the popular youtube downloader.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;There are also some installers for non-CTF stuff to break the monotony!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C magic&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zwimer/C-bind&#34;&gt;C-bind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A library used to enable function binding in C!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;game&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.bay12games.com/dwarves/&#34;&gt;Dwarf Fortress&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Something to help you relax after a CTF!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pyvmmonitor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.pyvmmonitor.com/&#34;&gt;pyvmmonitor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PyVmMonitor is a profiler with a simple goal: being the best way to profile a Python program.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;library collection&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nothings/single_file_libs&#34;&gt;single_file_libs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A large collection of useful single file include libraries written for C/C++&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dolphin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sudolph.in/&#34;&gt;sudolphin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If your friend ever leaves their laptop unlocked, &lt;code&gt;curl -sSL sh.sudolph.in | sh&lt;/code&gt; then wait and see!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tor-browser&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.torproject.org/projects/torbrowser.html.en&#34;&gt;tor-browser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Useful when you need to hit a web challenge from different IPs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set up the path&#xA;/path/to/ctf-tools/bin/manage-tools setup&#xA;source ~/.bashrc&#xA;&#xA;# list the available tools&#xA;manage-tools list&#xA;&#xA;# install gdb, allowing it to try to sudo install dependencies&#xA;manage-tools -s install gdb&#xA;&#xA;# install pwntools, but don&#39;t let it sudo install dependencies&#xA;manage-tools install pwntools&#xA;&#xA;# install qemu, but use &#34;nice&#34; to avoid degrading performance during compilation&#xA;manage-tools -n install qemu&#xA;&#xA;# uninstall gdb&#xA;manage-tools uninstall gdb&#xA;&#xA;# uninstall all tools&#xA;manage-tools uninstall all&#xA;&#xA;# search for a tool&#xA;manage-tools search preload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where possible, the tools keep the installs very self-contained (i.e., in to tool/ directory), and most uninstalls are just calls to &lt;code&gt;git clean&lt;/code&gt; (&lt;strong&gt;NOTE&lt;/strong&gt;, this is &lt;strong&gt;NOT&lt;/strong&gt; careful; everything under the tool directory, including whatever you were working on, is blown away during an uninstall). One exception to this are python tools, which are installed using the &lt;code&gt;pip&lt;/code&gt; package manager if possible. A &lt;code&gt;ctftools&lt;/code&gt; virtualenv is created during the &lt;code&gt;manage-tools setup&lt;/code&gt; command and can be accessed using the command &lt;code&gt;workon ctftools&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help!&lt;/h2&gt; &#xA;&lt;p&gt;Something not working? I didn&#39;t write (almost) any of these tools, but hit up &lt;a href=&#34;http://webchat.freenode.net/?channels=#ctf-tools&#34;&gt;#ctf-tools on freenode&lt;/a&gt; if you&#39;re desperate. Maybe some kind soul will help!&lt;/p&gt; &#xA;&lt;h2&gt;Docker (version 1.7+)&lt;/h2&gt; &#xA;&lt;p&gt;By popular demand, a Dockerfile has been included. You can build a docker image with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zardus/ctf-tools&#xA;cd ctf-tools&#xA;docker build -t ctf-tools .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it ctf-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The built image will have ctf-tools cloned and ready to go, but you will still need to install the tools themselves (see above).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can also pull ctf-tools (with some tools preinstalled) from dockerhub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it zardus/ctf-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vagrant&lt;/h2&gt; &#xA;&lt;p&gt;You can build a Vagrant VM with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/zardus/ctf-tools/master/Vagrantfile&#xA;vagrant plugin install vagrant-vbguest&#xA;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And connect to it via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vagrant ssh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Kali Linux&lt;/h2&gt; &#xA;&lt;p&gt;Kali Linux (Sana and Rolling), due to manually setting certain libraries to not use the latest version available (sometimes being out of date by years) causes some tools to not install at all, or fail in strange ways. AFL and Panda comes to mind, in fact any tool that uses QEMU 2.30 will probably fail during compilation under Kali. Overriding these libraries breaks other tools included in Kali so your only solution is to either live with some of Kali&#39;s tools being broken, or running another distribution separately such as Ubuntu.&lt;/p&gt; &#xA;&lt;p&gt;Most tools aren&#39;t affected though.&lt;/p&gt; &#xA;&lt;h2&gt;Adding Tools&lt;/h2&gt; &#xA;&lt;p&gt;To add a tool (say, named &lt;em&gt;toolname&lt;/em&gt;), do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;toolname&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Create an &lt;code&gt;install&lt;/code&gt; script.&lt;/li&gt; &#xA; &lt;li&gt;(optional) if special uninstall steps are required, create an &lt;code&gt;uninstall&lt;/code&gt; script.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Install Scripts&lt;/h3&gt; &#xA;&lt;p&gt;The install script will be run with &lt;code&gt;$PWD&lt;/code&gt; being &lt;code&gt;toolname&lt;/code&gt;. It should install the tool into this directory, in as contained a manner as possible. Ideally, full uninstallation should be possible with a &lt;code&gt;git clean&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The install script should create a &lt;code&gt;bin&lt;/code&gt; directory and put its executables there. These executables will be automatically linked into the main &lt;code&gt;bin&lt;/code&gt; directory for the repo. They could be launched from any directory, so don&#39;t make assumptions about the location of &lt;code&gt;$0&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The individual tools are all licensed under their own licenses. As for ctf-tools itself, it is licensed under BSD 2-Clause License. If you find it useful, star it on github (&lt;a href=&#34;https://github.com/zardus/ctf-tools&#34;&gt;https://github.com/zardus/ctf-tools&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Good luck!&lt;/p&gt; &#xA;&lt;h1&gt;See Also&lt;/h1&gt; &#xA;&lt;p&gt;There&#39;s a curated list of CTF tools, but without installers, here: &lt;a href=&#34;https://github.com/apsdehal/aWEsoMe-cTf&#34;&gt;https://github.com/apsdehal/aWEsoMe-cTf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a Vagrant config with a lot of the bigger frameworks here: &lt;a href=&#34;https://github.com/thebarbershopper/epictreasure&#34;&gt;https://github.com/thebarbershopper/epictreasure&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1</title>
    <updated>2022-06-12T01:53:06Z</updated>
    <id>tag:github.com,2022-06-12:/kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1</id>
    <link href="https://github.com/kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatic unattended weekly builds of the current OpenWrt development master branch for X86/64, NanoPi R2S, NanoPi R4S, NanoPi R2C, Phicomm N1, NanoPi NEO3, 树莓派 4B, DoorNet1, DoorNet2, 香橙派 Orange Pi R1 Plus, 香橙派 Orange Pi R1 Plus LTS, 红米AX6, 小米AX3600, 小米AX9000, 红米AX6S/小米AX3200, 红米AC2100, 小米AC2100, 小米CR6606/TR606(联通版), CR6608/TR608(移动版), CR6609/T…&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;OpenWrt with NGINX for X86/64, NanoPi R2S, NanoPi R4S, NanoPi R5S, NanoPi R2C, Phicomm N1, NanoPi NEO3, 树莓派 4B, DoorNet1, DoorNet2, 香橙派 Orange Pi R1 Plus, 香橙派 Orange Pi R1 Plus LTS, 红米AX6, 小米AX3600, 小米AX9000, 红米AX6S/小米AX3200, 红米AC2100, 小米AC2100, 小米CR6606/TR606(联通版), CR6608/TR608(移动版), CR6609/TR609(电信版), 小米4, 小米 R3G, 小米R3P, 小娱C5, newifi-d2, H1 Box, 贝壳云 P1 , 我家云 lL Pro, x96 Max, 微加云 V-Plus, 章鱼星球 ZYXQ, GT-King, Odroid N2, MXQ Pro+&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLV2-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kiddin9/OpenWrt_x86-r2s-r4s.svg?style=flat-square&amp;amp;label=Stars&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/kiddin9/OpenWrt_x86-r2s-r4s.svg?style=flat-square&amp;amp;label=Forks&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/issues/new&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Issues-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;Issue Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/actions&#34;&gt;&lt;img src=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/actions/workflows/Openwrt-AutoBuild.yml/badge.svg?sanitize=true&#34; alt=&#34;AutoBuild&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/opwrt&#34; target=&#34;_blank&#34;&gt;TG通知频道&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. &lt;strong&gt;特色&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Cutting edge,openwrt官方openwrt-22.03分支版本, Kernel 5.15, 与官方最新源码同步.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;原生极致纯净,固件默认只包含基础上网功能, 后台在线选装插件,系统升级不丢失插件和配置.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自建插件仓库囊括了市面上几乎所有开源插件,插件库日更,系统自动更新所有已安装插件.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在线一键定制固件,可在&lt;a href=&#34;https://supes.top&#34;&gt;supes.top&lt;/a&gt;也可在后台系统定制升级菜单中一键定制, 同时支持github云编译和本地一键编译.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台一键OTA更新固件,省去了每次固件升级都需要找固件,下载固件,上传固件等繁琐操作.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台一键设置旁路由,一键开关IPv6.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持在线安装Kmod内核模块.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重构版SSR-PLUS,国内外智能DNS解析,支持DOH,Trojan-Go等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;替换 Uhttpd 为 Nginx, 支持 反向代理; WebDAV等诸多玩法.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;性能,友好度,易用性,插件,以及针对国内特殊环境等的自定义优化, 开箱即用&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自定制清爽Material风格新主题Edge&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. &lt;strong&gt;固件&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;固件生成有3种方式：在线定制化生成、GitHub编译、本地化编译。&lt;/p&gt; &#xA;&lt;p&gt;可根据需要选择任意一种进行固件生成。&lt;/p&gt; &#xA;&lt;h3&gt;2.1 &lt;strong&gt;在线生成&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;通过浏览器访问&lt;a href=&#34;https://supes.top&#34;&gt;https://supes.top&lt;/a&gt;进行固件定制，等待固件生成结束之后直接下载使用即可。&lt;/p&gt; &#xA;&lt;h3&gt;2.2 &lt;strong&gt;GitHub编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;将仓库进行fork&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按需添加相关环境参数REPO_TOKEN、SCKEY、TELEGRAM_CHAT_ID&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Actions页面选择 Repo Dispatcher 点击 Run workflow&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.3 &lt;strong&gt;GitHub结合浏览器插件编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;请在支持油猴的浏览器中安装 &lt;a href=&#34;https://greasyfork.org/scripts/407616-github-actions-trigger/code/Github%20Actions%20Trigger.user.js&#34;&gt;脚本&lt;/a&gt; ,仓库右上角会出现 x86_64 Actions,K2P Actions等按钮,点击对应按钮即可.更多玩法 &lt;a href=&#34;https://github.com/tete1030/github-repo-dispatcher&#34;&gt;repo-dispatcher&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.4 &lt;strong&gt;本地化编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;注意：&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;不&lt;/strong&gt;要用 &lt;strong&gt;root&lt;/strong&gt; 用户 git 和编译！！！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;国内用户编译前请准备好梯子,使用大陆白名单或全局模式&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;请使用Ubuntu 64bit，推荐 Ubuntu 18 或 Ubuntu 20&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;首次编译:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -S openwrt&#xA;bash -c &#34;$(curl -fsSL https://git.io/opbuild.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;二次编译:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -S openwrt&#xA;bash -c &#34;$(curl -fsSL https://git.io/rebuild.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. &lt;strong&gt;使用&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;3.1 &lt;strong&gt;后台&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;登录地址 op/ 或 10.0.0.1 (若后台无法打开，请尝试插拔交换wan、lan网线顺序。)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认用户 root&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认密码 root&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.2 &lt;strong&gt;快捷访问&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;部分服务需要先自行在软件包中安装并启用，可自行在 /etc/nginx/conf.d/shortcuts.conf 中调整和添加更多快捷访问。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;op/ 可打开 OpenWRT后台 即 lan ip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ql/ 可打开 青龙后台 即 lan ip:5700&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;adg/ 可打开 AdGuardHome管理后台 即 lan ip:3000&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pve/ 可打开 Proxmox VE虚拟机管理 默认为 10.0.0.10:8006&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;by/ 可打开 Bypass插件页面 即 ip/luci/admin/services/bypass&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pk/ 可打开 Packages插件管理页面 即 ip/luci/admin/system/opkg&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ag/ 可打开 Aria2 Web面板 即 ip/ariang&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ug/ 可打开 固件在线更新页面 即 ip/luci/admin/services/gpsysupgrade&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. &lt;strong&gt;注意事项&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;第一次使用请采用全新安装,避免出现升级失败以及其他一些可能的Bug.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;云编译需要 &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;在此&lt;/a&gt; 创建个token,然后在此仓库Settings-&amp;gt;Secrets中添加个名字为REPO_TOKEN的Secret,填入token值,否者无法触发编译。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中分别添加 PPPOE_USERNAME, PPPOE_PASSWD 可设置默认拨号账号密码.有 &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/issues/23&#34;&gt;安全隐患&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中添加 SCKEY 可通过&lt;a href=&#34;http://sc.ftqq.com&#34;&gt;Server酱&lt;/a&gt; 推送编译结果到微信。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中添加 TELEGRAM_CHAT_ID, TELEGRAM_TOKEN 可推送编译结果到Telegram Bot. &lt;a href=&#34;https://longnight.github.io/2018/12/12/Telegram-Bot-notifications&#34;&gt;教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DIY云编译教程参考: &lt;a href=&#34;https://p3terx.com/archives/build-openwrt-with-github-actions.html&#34;&gt;Read the details in my blog (in Chinese) | 中文教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认插件包含: Opkg 软件包管理、Bypass 智能过墙、Samba4 文件共享(x86)、UPNP 自动端口转发、Turbo ACC 网络加速。 其他插件请自行在 后台-&amp;gt;软件包 中安装,系统升级不会丢失插件.每次系统升级完成连接网络后,会自动安装所有已自选安装的插件。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. &lt;strong&gt;系统截图展示&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/3.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For English&lt;/p&gt; &#xA;&lt;p&gt;Build OpenWrt using GitHub Actions&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for &lt;a href=&#34;https://github.com/features/actions/signup&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fork &lt;a href=&#34;https://github.com/kiddin9/OpenWrt&#34;&gt;this GitHub repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;click the &lt;code&gt;Star&lt;/code&gt; button, and the build will starts automatically.Progress can be viewed on the Actions page.&lt;/li&gt; &#xA; &lt;li&gt;When the build is complete, click the &lt;code&gt;Artifacts&lt;/code&gt; button in the upper right corner of the Actions page to download the binaries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/openwrt&#34;&gt;OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;Lean&#39;s OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P3TERX/Actions-OpenWrt/raw/master/LICENSE&#34;&gt;P3TERX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/asu&#34;&gt;aparcar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Boos4721/openwrt&#34;&gt;Boos4721&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>