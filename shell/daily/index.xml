<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-07T01:40:34Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GloriousEggroll/wine-ge-custom</title>
    <updated>2022-10-07T01:40:34Z</updated>
    <id>tag:github.com,2022-10-07:/GloriousEggroll/wine-ge-custom</id>
    <link href="https://github.com/GloriousEggroll/wine-ge-custom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My custom build of wine, made to use with lutris. Built with lutris&#39;s buildbot.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wine-ge-custom&lt;/h1&gt; &#xA;&lt;p&gt;This is my build of WINE based on/forked from the most recent bleeding-edge proton experimental wine repo. This is meant to be used with non-steam games outside of Steam.&lt;/p&gt; &#xA;&lt;p&gt;For Steam games, I provide Proton-GE for usage with Lutris, found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gloriouseggroll/proton-ge-custom&#34;&gt;https://github.com/gloriouseggroll/proton-ge-custom&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Occasionally, I also release League of Legends builds -- These builds will specifically have &#39;lol&#39; or &#39;LoL&#39; in the name. Please note these &#39;LoL&#39; builds are for specific use with League of Legends, and NO other games.&lt;/h2&gt; &#xA;&lt;h2&gt;If you have an issue that happens with my Wine-GE or Wine-LoL-GE builds, provided FROM this repository, please contact me on Discord about the issue:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/6y3BdzC&#34;&gt;https://discord.gg/6y3BdzC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#overview&#34;&gt;Overview&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#media-foundation-fixes-fully-working-or-playable&#34;&gt;Media Foundation Fixes (fully working or playable)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#modification&#34;&gt;Modification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#credits&#34;&gt;Credits&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#tkg-etienne-juvigny&#34;&gt;TKG (Etienne Juvigny)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#guy1524-derek-lesho&#34;&gt;Guy1524 (Derek Lesho)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#joshie-joshua-ashton&#34;&gt;Joshie (Joshua Ashton)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#doitsujin%E3%83%89%E3%82%A4%E3%83%84%E4%BA%BA-philip-rebohle&#34;&gt;doitsujin/ドイツ人 (Philip Rebohle)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#hanskristianthemaister-hans-kristian-arntzen&#34;&gt;HansKristian/themaister (Hans-Kristian Arntzen)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#flibitijibibo-ethan-lee&#34;&gt;flibitijibibo (Ethan Lee)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#simmons-public-chris-simmons&#34;&gt;simmons-public (Chris Simmons)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#sporif-amine-hassane&#34;&gt;Sporif (Amine Hassane)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#wine-staging-maintainers&#34;&gt;wine-staging maintainers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#reporters&#34;&gt;Reporters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#patrons&#34;&gt;Patrons&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#donations&#34;&gt;Donations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Things it contains that Valve&#39;s proton does not:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additional media foundation patches for better video playback support&lt;/li&gt; &#xA; &lt;li&gt;AMD FSR patches added directly to fullscreen hack that can be toggled with WINE_FULLSCREEN_FSR=1&lt;/li&gt; &#xA; &lt;li&gt;FSR Fake resolution patch (details here: &lt;a href=&#34;https://github.com/GloriousEggroll/proton-ge-custom/pull/52&#34;&gt;https://github.com/GloriousEggroll/proton-ge-custom/pull/52&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Nvidia CUDA support for phsyx and nvapi&lt;/li&gt; &#xA; &lt;li&gt;Raw input mouse support&lt;/li&gt; &#xA; &lt;li&gt;fix for Mech Warrior Online&lt;/li&gt; &#xA; &lt;li&gt;fix for Asseto Corsa HUD&lt;/li&gt; &#xA; &lt;li&gt;fix for MK11 crash in single player&lt;/li&gt; &#xA; &lt;li&gt;fix for Killer Instinct Vulkan related crash&lt;/li&gt; &#xA; &lt;li&gt;fix for Cities XXL patches&lt;/li&gt; &#xA; &lt;li&gt;various upstream WINE patches backported&lt;/li&gt; &#xA; &lt;li&gt;various wine-staging patches applied as they become needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Media Foundation fixes (Fully working or playable)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spyro Reignited Trilogy&lt;/li&gt; &#xA; &lt;li&gt;Mortal Kombat 11&lt;/li&gt; &#xA; &lt;li&gt;Injustice 2&lt;/li&gt; &#xA; &lt;li&gt;Power Rangers: Battle for the Grid&lt;/li&gt; &#xA; &lt;li&gt;Borderlands 3&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 0&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 2 Remastered&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 3 Remastered&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 5&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 6&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 7&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 8&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil Revalations&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil Revalations 2&lt;/li&gt; &#xA; &lt;li&gt;Persona 4 Golden&lt;/li&gt; &#xA; &lt;li&gt;PC Building Simulator&lt;/li&gt; &#xA; &lt;li&gt;Dangonronpa V3&lt;/li&gt; &#xA; &lt;li&gt;Super Lucky&#39;s Tale&lt;/li&gt; &#xA; &lt;li&gt;Remnant: From the Ashes&lt;/li&gt; &#xA; &lt;li&gt;BlazBlue Centralfiction&lt;/li&gt; &#xA; &lt;li&gt;Bloodstained: Ritual of the Night&lt;/li&gt; &#xA; &lt;li&gt;Crazy Machines 3&lt;/li&gt; &#xA; &lt;li&gt;Devil May Cry 5&lt;/li&gt; &#xA; &lt;li&gt;Wasteland 3&lt;/li&gt; &#xA; &lt;li&gt;Mutant Year Zero&lt;/li&gt; &#xA; &lt;li&gt;Ultimate Marvel Vs. Capcom 3&lt;/li&gt; &#xA; &lt;li&gt;Industry of Titan&lt;/li&gt; &#xA; &lt;li&gt;Call of Duty Black Ops III&lt;/li&gt; &#xA; &lt;li&gt;Tokyo Xanadu eX+&lt;/li&gt; &#xA; &lt;li&gt;Haven&lt;/li&gt; &#xA; &lt;li&gt;Nier Replicant&lt;/li&gt; &#xA; &lt;li&gt;Scrap Mechanic&lt;/li&gt; &#xA; &lt;li&gt;Aven Colony&lt;/li&gt; &#xA; &lt;li&gt;American Fugitive&lt;/li&gt; &#xA; &lt;li&gt;Asrtonner&lt;/li&gt; &#xA; &lt;li&gt;Soul Caliber VI&lt;/li&gt; &#xA; &lt;li&gt;Monster Hunter Rise&lt;/li&gt; &#xA; &lt;li&gt;Seven: Days Gone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Warframe is problematic with VSync. Turn it off or on in game, do not set to &lt;code&gt;Auto&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Warframe needs a set a frame limit in game. Unlimited framerate can cause slowdowns&lt;/li&gt; &#xA; &lt;li&gt;Warframe on Nvidia: you may need to disable GPU Particles in game otherwise the game can freeze randomly. On AMD they work fine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;PLEASE NOTE: There are prerequisites for using this version of wine:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You must have wine installed on your system&lt;/li&gt; &#xA; &lt;li&gt;You must have winetricks installed on your system&lt;/li&gt; &#xA; &lt;li&gt;You must have wine dependencies installed on your system. See &lt;a href=&#34;https://www.gloriouseggroll.tv/how-to-get-out-of-wine-dependency-hell/&#34;&gt;https://www.gloriouseggroll.tv/how-to-get-out-of-wine-dependency-hell/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You must have vulkan gpu drivers/packages installed properly on your system. See &lt;a href=&#34;https://github.com/lutris/docs/raw/master/InstallingDrivers.md&#34;&gt;https://github.com/lutris/docs/blob/master/InstallingDrivers.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;This section is for manual installation of wine-ge for usage with Lutris.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Extract &lt;code&gt;wine-name-branch-x86_64.tar.gz&lt;/code&gt; to &lt;code&gt;/home/USERNAME/.local/share/lutris/runners/wine/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart lutris. You can now choose &lt;code&gt;wine-name-branch-x86_64&lt;/code&gt; from the runners list in configuration options for any game.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Vagrant with sshfs plugin&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Most distros include the vagrant sshfs plugin as it&#39;s own package. You will need to install this package as the default that vagrant tries to install internally usually causes conflicts/failures.&lt;/li&gt; &#xA; &lt;li&gt;Example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ubuntu:&lt;br&gt; &lt;code&gt;# apt install vagrant vagrant-sshfs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fedora:&lt;br&gt; &lt;code&gt;# dnf install vagrant vagrant-sshfs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;VirtualBox installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Notes:__&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This differs per distro. You will need to find instructions for your distro.&lt;/li&gt; &#xA; &lt;li&gt;Please note that virtualbox is -required-. Libvirt will not work. Specifically libvirt causes segfaults when installing packages in the lxc 32 bit container. Why? who knows.__&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional notes:__&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It is important to note that the wine, wine-staging and patches repos/folders are here for my personal use. The build bot does -NOT- pull from any of these folders directly.__&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to:__&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;replace the wine repository with a clone of your own wine repository,__&lt;/li&gt; &#xA;   &lt;li&gt;then run &lt;code&gt;./patches/protonprep.sh&lt;/code&gt; to apply my changes to your own wine repository,__&lt;/li&gt; &#xA;   &lt;li&gt;then commit + push those changes to a separate branch on your -own- repository.__&lt;/li&gt; &#xA;   &lt;li&gt;THEN follow the instructions below, using your own repository URL and branch.__&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instructions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone --recurse-submodules https://github.com/gloriouseggroll/wine-ge-custom  &#xA;$ cd wine-ge-custom  &#xA;$ VAGRANT_DEFAULT_PROVIDER=virtualbox vagrant up  &#xA;$ ./makebuild.sh name winerepo branch  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;./makebuild.sh lutris http://github.com/gloriouseggroll/wine ge-5.2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Final build will be placed in &lt;code&gt;wine-ge-custom/vagrant_share/ with name format wine-name-branch-x86_64.tar.gz&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;wine-lutris-ge-5.2-x86_64.tar.xz&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Modification&lt;/h2&gt; &#xA;&lt;p&gt;Environment variable options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Compat config string&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;tt&gt;WINE_FULLSCREEN_FSR&lt;/tt&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enable AMD FidelityFX Super Resolution (FSR), use in conjunction with &lt;code&gt;WINE_FULLSCREEN_FSR_STRENGTH&lt;/code&gt; Only works in vulkan games (dxvk and vkd3d-proton included).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;tt&gt;WINE_FULLSCREEN_FSR_STRENGTH&lt;/tt&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AMD FidelityFX Super Resolution (FSR), the default sharpening of 5 is enough without needing modification, but can be changed with 0-5 if wanted. 0 is the maximum sharpness, higher values mean less sharpening. 2 is the AMD recommended default and is set by proton-ge&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;As many of you may or may not already know, there is a Credits section in the README for this Git repository. My proton-ge project contains some of my personal tweaks to Proton, but a large amount of the patches, rebases and fixes come from numerous people&#39;s projects. While I tend to get credited for my builds, a lot of the work that goes into it are from other people as well. I&#39;d like to take some time to point a few of these people out of recognition. In future builds, I plan to make clearer and more informative Git commits, as well as attempt to give these people further crediting, as my README may not be sufficient in doing so.&lt;/p&gt; &#xA;&lt;h3&gt;TKG (Etienne Juvigny)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/tkglitch&#34;&gt;https://www.patreon.com/tkglitch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Frogging-Family/wine-tkg-git&#34;&gt;https://github.com/Frogging-Family/wine-tkg-git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I and many others owe TKG. In regards to both WINE and Proton. He has dedicated a lot of time (2+ years at least) to rebasing WINE and Proton patches, as well as making his own contributions. Before he came along, I did some rebasing work, and mainly only released things for Arch. These days he almost always beats me to rebasing, and it saves myself and others a &lt;strong&gt;lot&lt;/strong&gt; of work.&lt;/p&gt; &#xA;&lt;h3&gt;Guy1524 (Derek Lesho)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Guy1524&#34;&gt;https://github.com/Guy1524&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Derek was responsible for the original rawinput patches, as well as several various game fixes in the past, just to name a few: MK11, FFXV, MHW, Steep, AC Odyssey FS fix. He has also done a massive amount of work on media foundation/mfplat, which should be hopefully working very soon.&lt;/p&gt; &#xA;&lt;h3&gt;Joshie (Joshua Ashton)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Joshua-Ashton/d9vk&#34;&gt;https://github.com/Joshua-Ashton/d9vk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Joshua is the creator of D9VK and also a huge contributor of DXVK. He is also known for his recent DOOM Eternal WINE fixes and also many of the Vulkan tweaks and fixes used, such as FS hack interger scaling.&lt;/p&gt; &#xA;&lt;h3&gt;doitsujin/ドイツ人 (Philip Rebohle)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doitsujin/dxvk&#34;&gt;https://github.com/doitsujin/dxvk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Philip is the creator of DXVK and a heavy contributor of VKD3D. He also put up a lot of my bug reporting for Warframe years ago, when DXVK started.&lt;/p&gt; &#xA;&lt;h3&gt;HansKristian/themaister (Hans-Kristian Arntzen)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HansKristian-Work&#34;&gt;https://github.com/HansKristian-Work&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hans-Kristian is a heavy contributor of VKD3D and he also created a lot of WINE patches that allowed WoW to work.&lt;/p&gt; &#xA;&lt;h3&gt;flibitijibibo (Ethan Lee)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/flibitijibibo&#34;&gt;https://github.com/sponsors/flibitijibibo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fna-xna.github.io/&#34;&gt;https://fna-xna.github.io/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ethan is the creator of FAudio, and he also listened to my Warframe bug reports years ago.&lt;/p&gt; &#xA;&lt;h3&gt;simmons-public (Chris Simmons)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simons-public&#34;&gt;https://github.com/simons-public&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Chris is the creator of the original Protonfixes project. The portions of Protonfixes I&#39;ve imported are what allow customizations to be made to prefixes for various Proton games. without Proton fixes many games would still be broken and/or require manual prefix modification. Huge thanks to Chris.&lt;/p&gt; &#xA;&lt;h3&gt;Sporif (Amine Hassane)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sporif&#34;&gt;https://github.com/Sporif&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Amine is the current maintainer of dxvk-async. This is a feature that was originally removed from dxvk as it happened around the same time a few overwatch bans happened. It was thought, but never confirmed whether or not this feature caused the bans, so the feature was removed as a safety precaution. It is still safe to use in many single player games, and games that do not have competitive anti-cheats. It has also been confirmed to work safely in Warframe and Path of Exile.&lt;/p&gt; &#xA;&lt;h3&gt;wine-staging maintainers&lt;/h3&gt; &#xA;&lt;p&gt;I also of course need to thank my fellow wine-staging maintainers: Alistair Leslie-Hughes, Zebediah Figura and Paul Gofman&lt;/p&gt; &#xA;&lt;p&gt;They have contributed MANY patches to staging, far beyond what I have done, as well as kept up with regular rebasing. A lot of times when bug reports come to me, if it has to do with staging I end up testing and relaying information to these guys in order to get issues resolved.&lt;/p&gt; &#xA;&lt;h3&gt;Reporters&lt;/h3&gt; &#xA;&lt;p&gt;Additionally, a thank you is owed to Andrew Aeikum (aeikum), and kisak (kisak-valve) for regularly keeping me in the loop with Proton and fsync patches, as well as accepting PRs I&#39;ve made to fix Proton build system issues, or listening to bug reports on early Proton patches before they reach Proton release.&lt;/p&gt; &#xA;&lt;h3&gt;Patrons&lt;/h3&gt; &#xA;&lt;p&gt;And finally - To all of my patrons that have supported me, thank you so much. It&#39;s because of you that I&#39;ve been able to keep this project going, getting bug fixes reported, getting Proton/WINE issues fixed, getting various hardware and/or game fixes handled, and so on. Thanks to you, I have been able to use the spare budget in order to both help support the other people that make my project possible, as well as get things necessary for testing such as new game releases or specific hardware that hits odd issues. It&#39;s had a huge effect not just for this project, but a large trickle down effect.&lt;/p&gt; &#xA;&lt;p&gt;My wine-staging co-maintainers are often able to ask me for testing games, or testing on different hardware if they don&#39;t have access to it. This also trickles into both Proton bug reporting AND Lutris bug reporting, as I&#39;m able to provide bug testing and feedback and custom builds and upgrades to them as well. I&#39;m also able to test driver related issues for things such as mesa and getting things reported + patched. This in turn leads to early patches for Mesa, the kernel, VKD3D, and other packages on my copr repos as well. The trickle down effect is just one gigantic awesome rabbit hole for getting things fixed. Thank you once again.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;For anyone else interested, my Patreon can be found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/gloriouseggroll&#34;&gt;https://www.patreon.com/gloriouseggroll&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ophub/amlogic-s9xxx-openwrt</title>
    <updated>2022-10-07T01:40:34Z</updated>
    <id>tag:github.com,2022-10-07:/ophub/amlogic-s9xxx-openwrt</id>
    <link href="https://github.com/ophub/amlogic-s9xxx-openwrt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenWrt for Amlogic s9xxx tv box. Support a311d, s922x, s905x3, s905x2, s912, s905d, s905x, s905w, s905, etc. including install to EMMC and update related functions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenWrt for Amlogic TV Boxes&lt;/h1&gt; &#xA;&lt;p&gt;View Chinese description | &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-openwrt/main/README.cn.md&#34;&gt;查看中文说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://openwrt.org/&#34;&gt;OpenWrt&lt;/a&gt; Project is a Linux router operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. Allows you to freely choose the software package you need to customize your router system. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned. It has more than 3000+ standardized application packages and a very rich third-party plug-in support, so you can easily replicate the same setup on any supported device.&lt;/p&gt; &#xA;&lt;p&gt;Now you can replace the Android TV system of the TV Boxes with the Amlogic chip with the OpenWrt system, making it a powerful router. This project supports one-stop complete compilation of github.com (compiling from custom software packages to packaging firmware, all in one stop at github.com). Support localized packaging (firmware packaging in local Ubuntu and other environments). including OpenWrt firmware install to EMMC and update related functions. Support Amlogic s9xxx TV Boxes are &lt;em&gt;&lt;strong&gt;&lt;code&gt;a311d, s922x, s905x3, s905x2, s905l3a, s912, s905d, s905x, s905w, s905&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, etc. such as &lt;em&gt;&lt;strong&gt;&lt;code&gt;Belink GT-King, Belink GT-King Pro, UGOOS AM6 Plus, X96-Max+, HK1-Box, H96-Max-X3, Phicomm-N1, Octopus-Planet, Fiberhome HG680P, ZTE B860H&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of the OpenWrt firmware can be downloaded in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/releases&#34;&gt;Releases&lt;/a&gt;. Welcome to use &lt;code&gt;Fork&lt;/code&gt; for &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/raw/main/router-config/README.md&#34;&gt;personalized OpenWrt firmware configuration&lt;/a&gt;. If you like it, Please click the &lt;code&gt;Star&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;OpenWrt Firmware instructions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SoC&lt;/th&gt; &#xA;   &lt;th&gt;Device&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;Optional kernel&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;OpenWrt Firmware&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a311d&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/boards---shields/pp_3008145189226460.html&#34;&gt;Khadas-VIM3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_a311d_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s922x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/RAgZmOM41db&#34;&gt;Beelink-GT-King&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008857542462482.html&#34;&gt;Beelink-GT-King-Pro&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3002820788090799.html&#34;&gt;Ugoos-AM6-Plus&lt;/a&gt;, &lt;a href=&#34;https://www.hardkernel.com/shop/odroid-n2-with-4gbyte-ram-2/&#34;&gt;ODROID-N2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s922x_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3001768790621051.html&#34;&gt;X96-Max+&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/xhWeQgTuwfb&#34;&gt;HK1-Box&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/KuWvwoYuwfb&#34;&gt;H96-Max-X3&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/duoIXZpdGgb&#34;&gt;Ugoos-X3&lt;/a&gt;, &lt;a href=&#34;https://www.aliexpress.com/item/1005003772717802.html&#34;&gt;TX3&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3002885621272175.html&#34;&gt;X96-Air&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/ByBL45jdGgb&#34;&gt;A95XF3-Air&lt;/a&gt;, &lt;a href=&#34;https://item.jd.com/100009131339.html&#34;&gt;Tencent-Aurora-3Pro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905x3_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ebay.com/itm/164895650425&#34;&gt;X96Max-4G&lt;/a&gt;, &lt;a href=&#34;https://www.alibaba.com/product-detail/Amlogic-S905X2-Android-TV-Box-X96_62210191636.html&#34;&gt;X96Max-2G&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008133484979616.html&#34;&gt;MECOOL-KM3-4G&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905x2_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s912&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tanix-box.com/project-view/tanix-tx8-max-android-tv-box/&#34;&gt;Tanix-TX8-Max&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_759339.html&#34;&gt;Tanix-TX9-Pro&lt;/a&gt;, &lt;a href=&#34;http://www.tanix-box.com/project-view/tanix-tx92-android-tv-box-powered-amlogic-s912/&#34;&gt;Tanix-TX92&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_424843.html&#34;&gt;Nexbox-A1&lt;/a&gt;, &lt;a href=&#34;https://www.cafago.com/en/p-v2979eu-2g.html&#34;&gt;Nexbox-A95X-A2&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/zQVlmUfgqqb&#34;&gt;A95X&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_503486.html&#34;&gt;H96-Pro-Plus&lt;/a&gt;, &lt;a href=&#34;http://www.vorke.com/project/vorke-z6-2/&#34;&gt;VORKE-Z6-Plus&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3005746210753315.html&#34;&gt;Mecool-M8S-PRO-L&lt;/a&gt;, &lt;a href=&#34;https://nl.aliexpress.com/i/32734559342.html&#34;&gt;Vontar-X92&lt;/a&gt;, &lt;a href=&#34;https://www.ebay.com/itm/253466003975&#34;&gt;T95Z-Plus&lt;/a&gt;, &lt;a href=&#34;https://post.smzdm.com/p/a07oer59/&#34;&gt;Octopus-Planet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s912_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905d&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_629409.html&#34;&gt;MECOOL-KI-Pro&lt;/a&gt;, &lt;a href=&#34;https://www.cnx-software.com/2019/03/11/phicomm-n1-tv-box-linux-distributions/&#34;&gt;Phicomm-N1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905d_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/HbrIbqQcGgb&#34;&gt;HG680P&lt;/a&gt;, &lt;a href=&#34;https://www.zte.com.cn/global/products/cocloud/201707261551/IP-STB/ZXV10-B860H&#34;&gt;B860H&lt;/a&gt;, &lt;a href=&#34;https://www.tbee.com/product/tbee-box/&#34;&gt;TBee-Box&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905x_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905w&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008306149708795.html&#34;&gt;X96-Mini&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_009748238474.html&#34;&gt;TX3-Mini&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_736121.html&#34;&gt;W95&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;5.4.y/5.15.y&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905w_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_321409.html&#34;&gt;Beelink-Mini-MX-2G&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_354313.html&#34;&gt;MXQ-PRO+4K&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905l3a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Calmact/e900v22c&#34;&gt;E900V22C/D&lt;/a&gt;, &lt;a href=&#34;https://www.znds.com/tv-1216697-1-1.html&#34;&gt;CM311-1a-YST&lt;/a&gt;, &lt;a href=&#34;https://blog.csdn.net/fatiaozhang9527/article/details/124157038&#34;&gt;M401A&lt;/a&gt;, &lt;a href=&#34;https://blog.csdn.net/fatiaozhang9527/article/details/126388479&#34;&gt;M411A&lt;/a&gt;, &lt;a href=&#34;https://blog.csdn.net/wjf149575296/article/details/123947681&#34;&gt;UNT403A&lt;/a&gt;, &lt;a href=&#34;https://blog.csdn.net/fatiaozhang9527/article/details/122232733&#34;&gt;UNT413A&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;openwrt_s905l3a_k*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;💡Tip: The current &lt;em&gt;&lt;strong&gt;&lt;code&gt;s905w&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; series of TV Boxes only support the use of the &lt;code&gt;5.4.y/5.15.y&lt;/code&gt; kernel, and cannot use the 5.10.y or higher version. Other types of TV Boxes can use optional kernel versions. Currently &lt;em&gt;&lt;strong&gt;&lt;code&gt;s905&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; TV Boxes can only be used in &lt;code&gt;TF/SD/USB&lt;/code&gt;, other types of TV Boxes also support writing to &lt;code&gt;EMMC&lt;/code&gt;. Please refer to the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/build-armbian/armbian-docs/amlogic_model_database.md&#34;&gt;instructions&lt;/a&gt; for dtb and u-boot of each device.&lt;/p&gt; &#xA;&lt;h2&gt;Install to EMMC and update instructions&lt;/h2&gt; &#xA;&lt;p&gt;Choose the corresponding firmware according to your box. Then write the IMG file to the USB hard disk through software such as &lt;a href=&#34;https://rufus.ie/&#34;&gt;Rufus&lt;/a&gt; or &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt;. Insert the USB hard disk into the box. Common for all &lt;code&gt;Amlogic s9xxx TV Boxes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Install OpenWrt&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Log in to the default IP: 192.168.1.1 → &lt;code&gt;Login in to openwrt&lt;/code&gt; → &lt;code&gt;system menu&lt;/code&gt; → &lt;code&gt;Amlogic Service&lt;/code&gt; → &lt;code&gt;Install OpenWrt&lt;/code&gt;, Select your box in the Supported Devices drop-down list and click the &lt;code&gt;Install OpenWrt&lt;/code&gt; button to install it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Update OpenWrt&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Log in to the default IP: 192.168.1.1 → &lt;code&gt;Login in to openwrt&lt;/code&gt; → &lt;code&gt;system menu&lt;/code&gt; → &lt;code&gt;Amlogic Service&lt;/code&gt; → &lt;code&gt;Upload updates manually / Download updates online&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you choose &lt;code&gt;Upload Updates Manually&lt;/code&gt; &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/releases&#34;&gt;OpenWrt firmware&lt;/a&gt;, You can upload the corresponding OpenWrt firmware package, such as openwrt_s9xxx_k5.15.50_xxx.img.gz (It is recommended to upload the compressed package, and the system will automatically decompress it. If you upload the decompressed xxx.img file, the upload may fail because the file is too large), After the upload is complete, the interface will display the &lt;code&gt;Update firmware&lt;/code&gt; operation button, click to update.&lt;/p&gt; &#xA;&lt;p&gt;If you choose &lt;code&gt;Manually upload updates&lt;/code&gt; &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;OpenWrt kernel&lt;/a&gt;, You can upload the three kernel files &lt;code&gt;boot-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;dtb-amlogic-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;modules-xxx.tar.gz&lt;/code&gt; (Other kernel files are not required. If uploading at the same time does not affect the update, the system can accurately identify the required kernel files.)，After the upload is complete, the interface will display the &lt;code&gt;Update Kernel&lt;/code&gt; operation button, click to update.&lt;/p&gt; &#xA;&lt;p&gt;If you choose &lt;code&gt;Online Download Update&lt;/code&gt; OpenWrt firmware or kernel, it will be downloaded according to &lt;code&gt;Firmware download address&lt;/code&gt; and &lt;code&gt;Kernel download address&lt;/code&gt; in &lt;code&gt;Plugin Settings&lt;/code&gt;, you can customize and modify the download source, For details, please refer to the compilation and usage instructions of &lt;a href=&#34;https://github.com/ophub/luci-app-amlogic&#34;&gt;luci-app-amlogic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tip: Functions such as install/update are provided by &lt;a href=&#34;https://github.com/ophub/luci-app-amlogic&#34;&gt;luci-app-amlogic&lt;/a&gt; to provide visual operation support. Also supports &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/raw/main/router-config/README.md#8-install-the-firmware&#34;&gt;command operations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Use OpenWrt in TF/SD/USB&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Log in to the default IP: 192.168.1.1 → &lt;code&gt;Login in to openwrt&lt;/code&gt; → &lt;code&gt;system menu&lt;/code&gt; → &lt;code&gt;TTYD terminal&lt;/code&gt; → input command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;openwrt-tf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After activating the remaining space, the kernel and OpenWrt system can be upgraded in TF/SD/USB.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Create swap for openwrt system&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you feel that the memory of the current box is not enough when you are using applications with a large memory footprint such as &lt;code&gt;docker&lt;/code&gt;, you can create a &lt;code&gt;swap&lt;/code&gt; virtual memory partition, Change the disk space of &lt;code&gt;/mnt/*4&lt;/code&gt; A certain capacity is virtualized into memory for use. The unit of the input parameter of the following command is &lt;code&gt;GB&lt;/code&gt;, and the default is &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Log in to the default IP: 192.168.1.1 → &lt;code&gt;Login in to openwrt&lt;/code&gt; → &lt;code&gt;system menu&lt;/code&gt; → &lt;code&gt;TTYD terminal&lt;/code&gt; → input command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;openwrt-swap 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Backup/restore the original EMMC system&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supports backup/restore of the box&#39;s &lt;code&gt;EMMC&lt;/code&gt; partition in &lt;code&gt;TF/SD/USB&lt;/code&gt;. It is recommended that you back up the Android TV system that comes with the current box before installing the OpenWrt system in a brand new box, so that you can use it in the future when restoring the TV system.&lt;/p&gt; &#xA;&lt;p&gt;Please start the OpenWrt system from &lt;code&gt;TF/SD/USB&lt;/code&gt;, Log in to the default IP: 192.168.1.1 → &lt;code&gt;Login in to openwrt&lt;/code&gt; → &lt;code&gt;system menu&lt;/code&gt; → &lt;code&gt;TTYD terminal&lt;/code&gt; → input command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;openwrt-ddbr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;According to the prompt, enter &lt;code&gt;b&lt;/code&gt; to perform system backup, and enter &lt;code&gt;r&lt;/code&gt; to perform system recovery.&lt;/p&gt; &#xA;&lt;p&gt;💡Tip: You must use the &lt;code&gt;/mnt/*4/&lt;/code&gt; space to store the &lt;code&gt;BACKUP-arm-64-emmc.img.gz&lt;/code&gt; backup file, Users who have not created the &lt;code&gt;TF/SD/USB&lt;/code&gt; extended partition must first use the &lt;code&gt;openwrt-tf&lt;/code&gt; command to create the extended partition.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Controlling the LED display&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Log in to the default IP: 192.168.1.1 → &lt;code&gt;Login in to openwrt&lt;/code&gt; → &lt;code&gt;system menu&lt;/code&gt; → &lt;code&gt;TTYD terminal&lt;/code&gt; → input command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;openwrt-led&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Debug according to &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/build-armbian/armbian-docs/led_screen_display_control.md&#34;&gt;LED screen display control instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;More instructions for use&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;firstboot&lt;/code&gt; command to restore the system to its initial state. In the use of OpenWrt, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-openwrt/main/router-config&#34;&gt;router-config&lt;/a&gt; for some common problems that may be encountered.&lt;/p&gt; &#xA;&lt;h2&gt;Local build instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the necessary packages (E.g Ubuntu 22.04 LTS user)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo apt-get update -y&#xA;sudo apt-get full-upgrade -y&#xA;# For Ubuntu-22.04&#xA;sudo apt-get install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repository to the local. &lt;code&gt;git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-openwrt.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;openwrt-armvirt&lt;/code&gt; folder, and upload the OpenWrt firmware of the ARM kernel ( Eg: &lt;code&gt;openwrt-armvirt-64-default-rootfs.tar.gz&lt;/code&gt; ) to this &lt;code&gt;~/amlogic-s9xxx-openwrt/openwrt-armvirt&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Enter the &lt;code&gt;~/amlogic-s9xxx-openwrt&lt;/code&gt; root directory. And run Eg: &lt;code&gt;sudo ./make -d -b s905x3 -k 5.10.125&lt;/code&gt;. The generated OpenWrt firmware is in the &lt;code&gt;out&lt;/code&gt; directory under the root directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Description of localized packaging parameters&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-d&lt;/td&gt; &#xA;   &lt;td&gt;Defaults&lt;/td&gt; &#xA;   &lt;td&gt;Compile all cores and all firmware types.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-b&lt;/td&gt; &#xA;   &lt;td&gt;BuildSoC&lt;/td&gt; &#xA;   &lt;td&gt;Specify the Build firmware type. Write the build firmware name individually, such as &lt;code&gt;-b s905x3&lt;/code&gt; . Multiple firmware use &lt;code&gt;_&lt;/code&gt; connect such as &lt;code&gt;-b s905x3_s905d&lt;/code&gt; . Use &lt;code&gt;all&lt;/code&gt; for all SoC models. You can use these codes: &lt;code&gt;a311d&lt;/code&gt;, &lt;code&gt;s905x3&lt;/code&gt;, &lt;code&gt;s905x2&lt;/code&gt;, &lt;code&gt;s905l3a&lt;/code&gt;, &lt;code&gt;s905x&lt;/code&gt;, &lt;code&gt;s905w&lt;/code&gt;, &lt;code&gt;s905d&lt;/code&gt;, &lt;code&gt;s905d-ki&lt;/code&gt;, &lt;code&gt;s905&lt;/code&gt;, &lt;code&gt;s922x&lt;/code&gt;, &lt;code&gt;s922x-n2&lt;/code&gt;, &lt;code&gt;s912&lt;/code&gt;, &lt;code&gt;s912-m8s&lt;/code&gt; . Note: &lt;code&gt;s922x-reva&lt;/code&gt; is &lt;code&gt;s922x-gtking-pro-rev_a&lt;/code&gt;, &lt;code&gt;s922x-n2&lt;/code&gt; is &lt;code&gt;s922x-odroid-n2&lt;/code&gt;, &lt;code&gt;s912-m8s&lt;/code&gt; is &lt;code&gt;s912-mecool-m8s-pro-l&lt;/code&gt;, &lt;code&gt;s905d-ki&lt;/code&gt; is &lt;code&gt;s905d-mecool-ki-pro&lt;/code&gt;, &lt;code&gt;s905x2-km3&lt;/code&gt; is &lt;code&gt;s905x2-mecool-km3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-k&lt;/td&gt; &#xA;   &lt;td&gt;Kernel&lt;/td&gt; &#xA;   &lt;td&gt;Specify the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;kernel&lt;/a&gt; name. Write the kernel name individually such as &lt;code&gt;-k 5.10.125&lt;/code&gt; . Multiple kernel use &lt;code&gt;_&lt;/code&gt; connection such as &lt;code&gt;-k 5.10.125_5.15.50&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a&lt;/td&gt; &#xA;   &lt;td&gt;AutoKernel&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to automatically adopt the latest version of the kernel of the same series. When it is &lt;code&gt;true&lt;/code&gt;, it will automatically find in the kernel library whether there is an updated version of the kernel specified in &lt;code&gt;-k&lt;/code&gt; such as 5.10.125 version. If there is the latest version of same series, it will automatically Replace with the latest version. When set to &lt;code&gt;false&lt;/code&gt;, the specified version of the kernel will be compiled. Default value: &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v&lt;/td&gt; &#xA;   &lt;td&gt;VersionBranch&lt;/td&gt; &#xA;   &lt;td&gt;Specify the name of the kernel &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, Such as &lt;code&gt;-v stable&lt;/code&gt;. The specified name must be the same as the branch directory name. The &lt;code&gt;stable&lt;/code&gt; branch version is used by default.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;Set the ROOTFS partition size for firmware (MiB). The default is 960 MiB, and the specified size must be greater than 512 MiB. Such as &lt;code&gt;-s 960&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d&lt;/code&gt;: Compile latest kernel versions of openwrt for all SoC with the default configuration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -b s905x3 -k 5.10.125&lt;/code&gt;: recommend. Use the default configuration, specify a kernel and a firmware for compilation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -b s905x3_s905d -k 5.10.125_5.15.50&lt;/code&gt;: Use the default configuration, specify multiple cores, and multiple firmware for compilation. use &lt;code&gt;_&lt;/code&gt; to connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -b s905x3 -k 5.10.125 -s 960&lt;/code&gt;: Using the default configuration, one kernel is specified, one model is packaged, and the firmware size is set to 960 MiB.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -b s905x3 -v dev -k 5.10.125&lt;/code&gt;: Use the default configuration, specify the model, specify the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, and specify the kernel for packaging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -b s905x3_s905d&lt;/code&gt;: Use the default configuration, specify multiple firmware, use &lt;code&gt;_&lt;/code&gt; to connect. compile all kernels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -k 5.10.125_5.15.50&lt;/code&gt;: Use the default configuration. Specify multiple cores, use &lt;code&gt;_&lt;/code&gt; to connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -k 5.10.125_5.15.50 -a true&lt;/code&gt;: Use the default configuration. Specify multiple cores, use &lt;code&gt;_&lt;/code&gt; to connect. Auto update to the latest kernel of the same series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./make -d -s 960 -k 5.10.125&lt;/code&gt;: Use the default configuration and set the partition size to 960 MiB, and only compile the openwrt firmware with the kernel version 5.10.125.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use GitHub Actions to build&lt;/h2&gt; &#xA;&lt;p&gt;You can modify the configuration file in the &lt;code&gt;router-config&lt;/code&gt; directory and &lt;code&gt;.yml&lt;/code&gt; file, customize the OpenWrt firmware, and complete the packaging online through &lt;code&gt;Actions&lt;/code&gt;, and complete all the compilation of OpenWrt firmware in github.com One-stop.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Personalized plug-in configuration in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/tree/main/router-config&#34;&gt;router-config&lt;/a&gt; directory. Workflows configuration in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/raw/main/.github/workflows/build-openwrt-with-lede.yml&#34;&gt;.yml&lt;/a&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;New compilation: Select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Build OpenWrt&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; on the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/actions&#34;&gt;Action&lt;/a&gt; page. Click the &lt;em&gt;&lt;strong&gt;&lt;code&gt;Run workflow&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;Compile again: If there is an &lt;code&gt;openwrt-armvirt-64-default-rootfs.tar.gz&lt;/code&gt; file in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/releases&#34;&gt;Releases&lt;/a&gt;, you do not need to compile it completely, you can directly use this file to &lt;code&gt;build openwrt&lt;/code&gt; of different soc. Select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Use Releases file to Packaging&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; on the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/openwrt&#34;&gt;Actions&lt;/a&gt; page. Click the &lt;em&gt;&lt;strong&gt;&lt;code&gt;Run workflow&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;More support: The compiled &lt;code&gt;openwrt-armvirt-64-default-rootfs.tar.gz&lt;/code&gt; file is a common file for making various SoC firmware, and it is also suitable for making OpenWrt firmware using &lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq&#39;s packaging script&lt;/a&gt;. As the pioneer of using OpenWrt and Armbian system in the box, he has supported more devices, such as OpenWrt (&lt;a href=&#34;https://github.com/unifreq/openwrt_packit/raw/master/files/qemu-aarch64/qemu-aarch64-readme.md&#34;&gt;qemu version&lt;/a&gt;) as used by &lt;code&gt;KVM&lt;/code&gt; virtual machine on &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian&#34;&gt;Armbian&lt;/a&gt; system, Allwinner (&lt;code&gt;V-Plus Cloud&lt;/code&gt;), and Rockchip (&lt;code&gt;BeikeYun&lt;/code&gt;, &lt;code&gt;Chainedbox L1 Pro&lt;/code&gt;), and Amlogic series, etc. For details on the packaging method, please refer to his source code repository description. In Actions, you can use &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-openwrt/main/.github/workflows/packaging-openwrt-for-qemu-etc.yml&#34;&gt;packaging-openwrt-for-qemu-etc.yml&lt;/a&gt; to call his packaging script to make more firmware.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Package Armvirt as OpenWrt&#xA;  uses: ophub/amlogic-s9xxx-openwrt@main&#xA;  with:&#xA;    openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz&#xA;    openwrt_soc: s905x3_s905x2_s905x_s905w_s905d_s922x_s912&#xA;    openwrt_kernel: 5.10.125_5.15.50&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GitHub Actions Input parameter description&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The relevant parameters correspond to the &lt;code&gt;local packaging command&lt;/code&gt;, please refer to the above description.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Defaults&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openwrt_path&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;Set the file path of &lt;code&gt;openwrt-armvirt-64-default-rootfs.tar.gz&lt;/code&gt; , you can use a relative path such as &lt;code&gt;openwrt/bin/targets/*/*/*rootfs.tar.gz&lt;/code&gt; or the network file download address. E.g &lt;code&gt;https://github.com/*/releases/*/*rootfs.tar.gz&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openwrt_soc&lt;/td&gt; &#xA;   &lt;td&gt;s905d_s905x3&lt;/td&gt; &#xA;   &lt;td&gt;Set the &lt;code&gt;SoC&lt;/code&gt; of the packaging TV Boxes, function reference &lt;code&gt;-b&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openwrt_kernel&lt;/td&gt; &#xA;   &lt;td&gt;5.10.125_5.15.50&lt;/td&gt; &#xA;   &lt;td&gt;Set the kernel version，function reference &lt;code&gt;-k&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auto_kernel&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to automatically adopt the latest version of the kernel of the same series. function reference &lt;code&gt;-a&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version_branch&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;Specify the name of the kernel &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, function reference &lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openwrt_size&lt;/td&gt; &#xA;   &lt;td&gt;960&lt;/td&gt; &#xA;   &lt;td&gt;Set the size of the firmware ROOTFS partition, function reference &lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GitHub Actions Output variable description&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To upload to &lt;code&gt;Releases&lt;/code&gt;, you need to add &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; and &lt;code&gt;GH_TOKEN&lt;/code&gt; to the repository and set &lt;code&gt;Workflow read and write permissions&lt;/code&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-openwrt/main/router-config#2-set-the-privacy-variable-github_token&#34;&gt;instructions for details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;For example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_OUTPUTPATH }}&lt;/td&gt; &#xA;   &lt;td&gt;out&lt;/td&gt; &#xA;   &lt;td&gt;OpenWrt firmware storage path&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_OUTPUTDATE }}&lt;/td&gt; &#xA;   &lt;td&gt;04.13.1058&lt;/td&gt; &#xA;   &lt;td&gt;Packing date(month.day.hour.minute)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_STATUS }}&lt;/td&gt; &#xA;   &lt;td&gt;success / failure&lt;/td&gt; &#xA;   &lt;td&gt;Package status&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;openwrt-*-rootfs.tar.gz Firmware compilation parameters&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Target System&lt;/td&gt; &#xA;   &lt;td&gt;QEMU ARM Virtual Machine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subtarget&lt;/td&gt; &#xA;   &lt;td&gt;QEMU ARMv8 Virtual Machine(cortex-a53)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Target Profile&lt;/td&gt; &#xA;   &lt;td&gt;Default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Target Images&lt;/td&gt; &#xA;   &lt;td&gt;tar.gz&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/tree/main/router-config&#34;&gt;For more instructions please see: router-config&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OpenWrt firmware default information&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default IP&lt;/td&gt; &#xA;   &lt;td&gt;192.168.1.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default username&lt;/td&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default password&lt;/td&gt; &#xA;   &lt;td&gt;password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default WIFI name&lt;/td&gt; &#xA;   &lt;td&gt;OpenWrt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default WIFI password&lt;/td&gt; &#xA;   &lt;td&gt;none&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Compile the kernel&lt;/h2&gt; &#xA;&lt;p&gt;For the compilation method of the kernel, see &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/tree/main/compile-kernel&#34;&gt;compile-kernel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Compile the kernel for Amlogic s9xxx&#xA;  uses: ophub/amlogic-s9xxx-armbian@main&#xA;  with:&#xA;    build_target: kernel&#xA;    kernel_version: 5.10.125_5.15.50&#xA;    kernel_auto: true&#xA;    kernel_sign: -ophub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resource Description&lt;/h2&gt; &#xA;&lt;p&gt;When making an OpenWrt system, the &lt;a href=&#34;https://github.com/ophub/kernel&#34;&gt;kernel&lt;/a&gt; and &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/tree/main/build-armbian/amlogic-u-boot&#34;&gt;u-boot&lt;/a&gt; files used are the same files used to make an &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian&#34;&gt;Armbian&lt;/a&gt; system. In order to avoid repeated maintenance, the relevant content is classified and placed in the corresponding resource repository, and it will be automatically downloaded from the relevant repository when it is used.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;kernel&lt;/code&gt; / &lt;code&gt;u-boot&lt;/code&gt; and other resources used by this system are mainly copied from the project of &lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq/openwrt_packit&lt;/a&gt;, Some files are shared by users in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/pulls&#34;&gt;Pull&lt;/a&gt; and &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/issues&#34;&gt;Issues&lt;/a&gt; of &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt&#34;&gt;amlogic-s9xxx-openwrt&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian&#34;&gt;amlogic-s9xxx-armbian&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/luci-app-amlogic&#34;&gt;luci-app-amlogic&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/kernel&#34;&gt;kernel&lt;/a&gt; and other projects. &lt;code&gt;unifreq&lt;/code&gt; opened the door for us to use OpenWrt in TV Boxes, and was deeply influenced by him. My firmware has inherited his consistent standards in production and use. To thank these pioneers and sharers, I have recorded them in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/CONTRIBUTORS.md&#34;&gt;CONTRIBUTORS.md&lt;/a&gt;. Thanks again everyone for giving new life and meaning to the Boxes.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/openwrt&#34;&gt;OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;coolsnowwolf/lede&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq/openwrt_packit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The amlogic-s9xxx-openwrt © OPHUB is licensed under &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/raw/main/LICENSE&#34;&gt;GPL-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>