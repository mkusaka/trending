<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-02T01:45:22Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hoochanlon/ihs-simple</title>
    <updated>2023-06-02T01:45:22Z</updated>
    <id>tag:github.com,2023-06-02:/hoochanlon/ihs-simple</id>
    <link href="https://github.com/hoochanlon/ihs-simple" rel="alternate"></link>
    <summary type="html">&lt;p&gt;自用脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;em&gt;&lt;strong&gt;&lt;s&gt;&lt;a href=&#34;https://github.com/hoochanlon/ihs-simple/raw/main/THINGS.md#picgo&#34;&gt;ihs-simple&lt;/a&gt;&lt;/s&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hoochanlon.github.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%94%97blog-hoochanlon-lightgrey.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;mailto:hoochanlon@outlook.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%93%A7hotmail-@%E9%82%AE%E7%AE%B1%E8%81%94%E7%B3%BB-blue.svg?longCache=true&amp;amp;style=flat-square&#34; alt=&#34;outlook&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/hoochanlon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/hoochanlon?color=green&amp;amp;style=social&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hoochanlon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/hoochanlon?color=green&amp;amp;style=social&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;一开始只是用来做图床，图省事方便偶尔随手上传自己的小脚本，结果却成了...所有脚本与指令均需用管理员身份运行，脚本代码及病毒分析文章，也仅供学习与交流使用，切勿做违法用途。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;免责声明：仅面向研究与学习交流之用，切勿用于其他用途！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;资讯分析 &lt;a href=&#34;https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/DTRASH/zixfx.md&#34;&gt;SSS&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;一键获取今日头条、抖音、微博热搜。&lt;a href=&#34;https://www.52pojie.cn/thread-1785460-1-1.html&#34;&gt;图文版&lt;/a&gt; （NLP：&lt;a href=&#34;https://stanfordnlp.github.io/stanza/data_objects.html&#34;&gt;Stanza&lt;/a&gt;）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-python/get_resou_today_s.py)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自动化分类；整体匹配率：84%~96% 区间左右。&lt;/li&gt; &#xA; &lt;li&gt;词频统计；三者共存的热搜，说明为持久公共热度，信息密度较高。&lt;/li&gt; &#xA; &lt;li&gt;文本情感平均值、每条标题的情感数值；主：人为置顶热搜的文本情绪强烈程度。&lt;/li&gt; &#xA; &lt;li&gt;词性分析；标记可能存有引导与被植入意识成分用词，只要定语、状语叠得多，总能是宣传正态形势。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;自动化收集辟谣条目及语言分析（NLP：&lt;a href=&#34;https://github.com/thunlp/THULAC-Python&#34;&gt;ThuLAC&lt;/a&gt;）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;功能大体与上例相当，对词频的较高词语进行语法分析。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-python/get_rumor_analysis.py)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键生成全球信息报表 &lt;a href=&#34;https://www.52pojie.cn/thread-1779165-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-python/get_worldometers.py)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键获取中国新闻网资讯 &lt;a href=&#34;https://www.52pojie.cn/thread-1780608-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-python/get_chinanews.py)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;因企业硬性需求&lt;/h2&gt; &#xA;&lt;p&gt;IE防Edge劫持 &lt;a href=&#34;https://www.52pojie.cn/thread-1774349-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L  https://ghproxy.com/https://github.com/hoochanlon/ihs-simple/raw/main/d-bat/keep_ie.bat|cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键永久关闭Windows更新设置 &lt;a href=&#34;https://www.52pojie.cn/thread-1791338-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L  https://ghproxy.com/https://github.com/hoochanlon/ihs-simple/raw/main/d-bat/stop_update.bat|cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键恢复被关闭的Windows更新设置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L  https://ghproxy.com/https://github.com/hoochanlon/ihs-simple/raw/main/d-bat/re_update.bat|cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键开启或关闭Windows defender实时保护&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -OfsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-bat/choice_wdrt.bat&amp;amp;&amp;amp;call choice_wdrt.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键调用设置程序是否以管理员权限运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -OfsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-bat/nano_runas.bat&amp;amp;&amp;amp;call nano_runas.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;去掉win10/win11热搜条目（需注销或重启） &lt;a href=&#34;https://admx.help/?Category=Windows_8.1_2012R2&amp;amp;Policy=Microsoft.Policies.WindowsExplorer::DisableSearchBoxSuggestions&amp;amp;Language=zh-cn&#34;&gt;admx.help 上见&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;reg add &#34;HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\explorer&#34; /v DisableSearchBoxSuggestions /t reg_dword /d 1 /f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;细枝末节&lt;/h2&gt; &#xA;&lt;p&gt;一键爬取bing壁纸 &lt;a href=&#34;https://www.52pojie.cn/thread-1781868-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-python/get_bing_wallpapers.py)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;powershell active，以及微PE显示IP脚本 &lt;code&gt;explorer https://github.com/hoochanlon/ihs-simple/blob/main/d-bat/weipe_showip.bat&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Set-ExecutionPolicy RemoteSigned&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重置macOS ~/.zshrc （仅环境变量配置失误，造成不可逆后果使用）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export PATH=/usr/bin:/usr/sbin:/bin:/sbin:/usr/X11R6/bin; sudo rm -rf ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows关闭代理设置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;netsh winhttp reset proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键安装打印机原理代码 &lt;a href=&#34;https://www.52pojie.cn/thread-1776328-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/hoochanlon/ihs-simple/blob/main/d-bat/install_public_network_hp_printer_driver.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;win7 打开图片报错“内存不足” &lt;a href=&#34;https://www.52pojie.cn/thread-1768841-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;powershell -c &#34;irm  https://ghproxy.com/https://github.com/hoochanlon/ihs-simple/raw/main/d-bat/exifhelper.bat -Outfile exifhelper.bat&#34; &amp;amp;&amp;amp; exifhelper.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;环境适配&lt;/h2&gt; &#xA;&lt;p&gt;一键安装Java &lt;a href=&#34;https://www.52pojie.cn/thread-1767872-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -O https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-bat/install_jdk.bat&amp;amp;&amp;amp;call install_jdk.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;win11一键显示当前WiFi与密码并生成二维码分享 &lt;a href=&#34;https://www.52pojie.cn/thread-1772481-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -O https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-bat/show_wifi.bat&amp;amp;&amp;amp;call show_wifi.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键显示所有WiFi&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -OfsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-bat/oh_my_wifi.bat&amp;amp;&amp;amp;call oh_my_wifi.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键RAR密码爆破 &lt;a href=&#34;https://www.52pojie.cn/thread-1775357-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -Os https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-bat/seven_z_sensei.bat&amp;amp;&amp;amp;call seven_z_sensei.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mac专题&lt;/h2&gt; &#xA;&lt;p&gt;Mac查看当前Wi-Fi密码 &lt;a href=&#34;https://www.52pojie.cn/thread-1766927-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo bash -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/mac_show_wifi.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mac 一键支持NTFS &lt;a href=&#34;https://github.com/hoochanlon/Free-NTFS-For-Mac&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo /bin/bash -c &#34;$(curl -fsSL https://cdn.statically.io/gh/hoochanlon/Free-NTFS-for-Mac/main/nigate.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Mac 激活各类相关软件 &lt;a href=&#34;https://github.com/QiuChenly/MyMacsAppCrack/tree/main/Shells&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo bash -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/Shells/simple_crack.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;macOS终端下载Office for Mac2021 serializer.pkg 激活&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo /usr/bin/osascript -e &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/serializer_office_for_mac2021.AppleScript)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键RAR密码爆破 &lt;a href=&#34;https://www.52pojie.cn/thread-1775990-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/7z_rar_sensei.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键定时切换壁纸，一面工作，一面生活&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; bash -c &#34;$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/mac_corn_diy_wallpaper.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键安装打印机 &lt;a href=&#34;https://www.cnblogs.com/98record/p/mac-da-yin-ji-yi-jian-an-zhuang.html&#34;&gt;自在拉基 - Mac打印机一键安装 &lt;/a&gt;（转朋友的，没需求，所以没写，原理都差不多，不过挺厉害。）&lt;/p&gt; &#xA;&lt;h2&gt;移花接木&lt;/h2&gt; &#xA;&lt;p&gt;CMD一键调用windows版本切换与Windows/Office激活 &lt;a href=&#34;https://www.52pojie.cn/thread-1743122-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -O https://ghproxy.com/https://raw.githubusercontent.com/TerryHuangHD/Windows10-VersionSwitcher/master/Switch.bat&amp;amp;&amp;amp;TIMEOUT /T 1&amp;amp;&amp;amp;start Switch.bat&amp;amp;&amp;amp;powershell -command &#34;irm https://massgrave.dev/get|iex&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CMD一键安装winrar注册激活 &lt;a href=&#34;https://www.52pojie.cn/thread-1740471-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;powershell -command Invoke-WebRequest -Uri &#34;https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/winrar_down_reg.bat&#34; -OutFile &#34;C:/Users/${env:UserName}/Downloads/winrar_down_reg.bat&#34;&amp;amp;&amp;amp;TIMEOUT /T 1&amp;amp;&amp;amp;start /b C:\Users\%username%\Downloads\winrar_down_reg.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Powershell一键生成Emeditor序列号&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;irm https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-pwsh/emeditor_random_keygen.ps1|iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Powershell一键IDM激活（&lt;a href=&#34;https://github.com/hoochanlon/ihs-simple/raw/main/d-pwsh/fail_idm.ps1&#34;&gt;自己写的方案已失效，国内版权原因不做更新&lt;/a&gt;）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;iwr -useb https://ghproxy.com/https://raw.githubusercontent.com/lstprjct/IDM-Activation-Script/main/IAS.ps1 | iex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Powershell从XchangePDF Editor下载安装到生成许可证&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/xchange_v8_active.ps1 -Outfile xchange_v8_active.ps1 | powershell -c xchange_v8_active.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Linux毛坯房安全改造&lt;/h2&gt; &#xA;&lt;p&gt;一键搞定SSH登录、用户密码策略配置、Ban IP配置 &lt;a href=&#34;https://www.52pojie.cn/thread-1749877-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SSH登录: 免密的密钥模式、心跳长时间连接，客户端不掉线&lt;/li&gt; &#xA; &lt;li&gt;密码策略: 不限特殊字符、大小写，并支持4～5位长度下限&lt;/li&gt; &#xA; &lt;li&gt;Ban IP: 除自己IP外，30秒内短时间三次输错密码，永久封禁IP。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo bash -c  &#34;$(curl -fL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/lite_ssh_n_ban.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;SSH单项、fail2ban单项 click me! &lt;/summary&gt; &#xA; &lt;p&gt;一键调用SSH快速配置 SSH密钥登录策略、用户简单密码配置规则。（单项部分是开启限定自己IP访问的，即 AllowUsers）&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;sudo bash -c  &#34;$(curl -fL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/simple_ssh.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;一键fail2ban从下载到安装及生成配置与启动服务。(再次允许单项部分可以刷新自己公网IP配置)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;sudo bash -c  &#34;$(curl -fL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/simple_ban.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;一键搞定Linux自定义创建具有管理员权限的用户 &lt;a href=&#34;https://www.52pojie.cn/thread-1749877-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自定义用户名&lt;/li&gt; &#xA; &lt;li&gt;su、sudo及wheel组成员免密&lt;/li&gt; &#xA; &lt;li&gt;sshd_config锁root远程登录，提高安全性&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo bash -c  &#34;$(curl -fL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/diy_add_wheel.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一键搞定FTP &lt;a href=&#34;https://www.52pojie.cn/thread-1753070-1-1.html&#34;&gt;图文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;共享目录： /var/ftp/share&lt;/li&gt; &#xA; &lt;li&gt;限制越权出逃共享访问，可读写。&lt;/li&gt; &#xA; &lt;li&gt;安全，私有化，限定自己的公网IP访问。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;不输密码版，用户名:ftpuser 密码：P@ssw0rd&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo bash -c  &#34;$(curl -fL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/simple_vsftpd.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;自定义用户版&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo bash -c  &#34;$(curl -fL https://ghproxy.com/https://raw.githubusercontent.com/hoochanlon/ihs-simple/main/d-shell/lite_vsftpd.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--&#xA;[![telegram](https://img.shields.io/badge/telegram-:me-blue.svg?longCache=true&amp;style=flat-square)](https://t.me/test) &#xA;&#xA;![ ](https://raw.githubusercontent.com/hoochanlon/hoochanlon/master/assets/github-contribution-grid-snake.svg)&#xA;&#xA;[网络辟谣标签工作专区](https://www.piyao.org.cn/bq/index.htm)、[谣言曝光台](https://www.piyao.org.cn/yybgt/index.htm)&#xA;--&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Linux迁移 Windows command 工具：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cygwin.com&#34;&gt;cygwin&lt;/a&gt; 类子系统&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gnuwin32.sourceforge.net&#34;&gt;gnuwin32&lt;/a&gt;、&lt;a href=&#34;http://www.mingw.org&#34;&gt;minGW&lt;/a&gt; 保持原生环境，尽可能提供类似的方案&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;python环境问题&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pyenv+pipx+poetry &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;pyenv灵活地安装与切换python版本，搭配poetry可快速生成相应版本环境。&lt;/li&gt; &#xA;   &lt;li&gt;pipx升级依赖工具包方便，不用担心全局兼容问题。&lt;/li&gt; &#xA;   &lt;li&gt;编译的程序通常会依赖各种包，这个要看开发者给出相应提示安装哪些包了。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;miniconda、anaconda这类python发行版，依赖库齐全。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;对于我来说，博客更侧重日常生活，基本上不会往里塞计网专业上的东西，更多的是个人见闻与人文社科。至于所谓“技术”方面的东西，找个专门的平台发稿就行了。现在想来，那些在xx之家、xx论坛投稿的，也是聪明人。SEO、宣传什么的就交由他们去吧。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Kron4ek/Conty</title>
    <updated>2023-06-02T01:45:22Z</updated>
    <id>tag:github.com,2023-06-02:/Kron4ek/Conty</id>
    <link href="https://github.com/Kron4ek/Conty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy to use unprivileged Linux container packed into a single portable executable&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Conty&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Kron4ek/Conty/actions/workflows/conty.yml&#34;&gt;&lt;img src=&#34;https://github.com/Kron4ek/Conty/actions/workflows/conty.yml/badge.svg?sanitize=true&#34; alt=&#34;Conty CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Kron4ek/Conty/actions/workflows/utils.yml&#34;&gt;&lt;img src=&#34;https://github.com/Kron4ek/Conty/actions/workflows/utils.yml/badge.svg?sanitize=true&#34; alt=&#34;Utils CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is an easy to use compressed unprivileged Linux container packed into a single executable that works on most Linux distros. It is designed to be as simple and user-friendly as possible. You can use it to run any applications, including games (Vulkan and OpenGL).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A single executable - download (or create) and run, nothing else is required. And it&#39;s portable, you can put it anywhere (even on a usb stick).&lt;/li&gt; &#xA; &lt;li&gt;Works on most Linux distros, even very old ones and even without glibc (such as Alpine or Void with musl).&lt;/li&gt; &#xA; &lt;li&gt;Works on Steam Deck.&lt;/li&gt; &#xA; &lt;li&gt;Root rights are &lt;strong&gt;not required&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Compressed (with squashfs or dwarfs), so it takes a lot less disk space than uncompressed containers and may provide faster filesystem access in some cases.&lt;/li&gt; &#xA; &lt;li&gt;Contains many libraries and packages so it can run almost everything. And you don&#39;t need to install anything on your main (host) system. &lt;strong&gt;You can even run 32-bit applications on pure 64-bit systems&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Based on Arch Linux, contains latest software (including latest videodrivers).&lt;/li&gt; &#xA; &lt;li&gt;Almost completely seamless experience. All applications that you run with Conty read and store their configs in your HOME directory as if you weren&#39;t using the container at all.&lt;/li&gt; &#xA; &lt;li&gt;No performance overhead. Since it&#39;s just a container, there is virtually no performance overhead, thus all applications will run at full speed. Regarding memory usage, Conty uses a bit more memory due to compression and because applications from the the container can&#39;t share libraries with your system apps.&lt;/li&gt; &#xA; &lt;li&gt;Supports Xorg, Wayland and XWayland.&lt;/li&gt; &#xA; &lt;li&gt;Supports filesystem and X11 sandboxing (thanks to bubblewrap and xephyr).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In its default release, it includes, among others, these apps: &lt;code&gt;Wine-GE, Steam, Lutris, PlayOnLinux, GameHub, Minigalaxy, Legendary, Bottles, MultiMC, MangoHud, Gamescope, RetroArch, PPSSPP, PCSX2, DuckStation, OBS Studio, OpenJDK, Firefox&lt;/code&gt;. The full list can be read in the &lt;a href=&#34;https://github.com/Kron4ek/Conty/releases/latest/download/pkg_list.txt&#34;&gt;latest release&#39;s pkg_list.txt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If these applications are not enough, you can install additional applications or run external binaries from, for example, your home directory.&lt;/p&gt; &#xA;&lt;h2&gt;Navigate&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#gui&#34;&gt;GUI&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#cli&#34;&gt;CLI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#managing&#34;&gt;Managing&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#install-conty&#34;&gt;Install Conty&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#how-to-update&#34;&gt;How to update&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#how-to-create-your-own-conty-executables&#34;&gt;How to create your own Conty executables&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#automated-github-actions&#34;&gt;Automated (GitHub Actions)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#useful-tips&#34;&gt;Useful Tips&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#sandbox&#34;&gt;Sandbox&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#about-wine&#34;&gt;About Wine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#known-issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#main-used-projects&#34;&gt;Main used projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;small&gt;&lt;i&gt;&lt;a href=&#34;http://ecotrust-canada.github.io/markdown-toc/&#34;&gt;Table of contents generated with markdown-toc&lt;/a&gt;&lt;/i&gt;&lt;/small&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;You can download a ready-to-use release from the &lt;a href=&#34;https://github.com/Kron4ek/Conty/releases&#34;&gt;&lt;strong&gt;releases&lt;/strong&gt;&lt;/a&gt; page or create your own (the instructions are &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#how-to-create-your-own-conty-executables&#34;&gt;below&lt;/a&gt;). Make it executable via &lt;code&gt;chmod&lt;/code&gt; or your file manager&#39;s Properties option (right-click or Alt+Enter) before running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ chmod +x conty.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Chmod only need to be executed once (per file). You can now &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#usage&#34;&gt;start using Conty&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;The only requirements are &lt;code&gt;fuse3&lt;/code&gt; (or &lt;code&gt;fuse2&lt;/code&gt;) and &lt;code&gt;coreutils&lt;/code&gt;. And your &lt;code&gt;/tmp&lt;/code&gt; directory should allow files execution (which it does by default on most distros).&lt;/p&gt; &#xA;&lt;p&gt;Your Linux kernel must be at least version 4.4 and should support unprivileged user namespaces. On some Linux distros this feature is disabled by default and can be enabled with sysfs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# sysctl kernel.unprivileged_userns_clone=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even if unprivileged user namespaces are not supported by your kernel, you can still use Conty if you have bubblewrap with the SUID bit installed on your system, in this case just tell Conty to use system-wide utils instead of the builtin ones.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ export USE_SYS_UTILS=1&#xA;$ ./conty.sh command command_arguments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;p&gt;Conty can be run from a terminal emulator. To run a program inside Conty, simply put the path to &lt;code&gt;conty.sh&lt;/code&gt; as a prefix and then insert the program&#39;s binary name or the full path to it and launch arguments (if needed).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./conty.sh [command] [command_arguments]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./conty.sh steam&#xA;$ ./conty.sh bottles&#xA;$ ./conty.sh /usr/bin/steam&#xA;$ ./conty.sh mangohud glxgears&#xA;$ WINEPREFIX=$HOME/wine-conty ./conty.sh gamescope -f -- wine ./game.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GUI&lt;/h3&gt; &#xA;&lt;p&gt;Running Conty from a terminal emulator is not strictly required, if your file manager allows running executables, you can also run Conty from it in which case it will show its graphical interface. You can also manually invoke the GUI from terminal with &lt;code&gt;conty.sh -g&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Kron4ek/Conty/assets/13851877/05856085-1925-47fa-a2ad-4f6165562d8b&#34; alt=&#34;gui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently, to check the binaries / commands in Conty, you can use &#34;Select File&#34; and browsing to the &lt;code&gt;/usr/bin&lt;/code&gt; directory, or by using &lt;code&gt;ls /usr/bin&lt;/code&gt; using the &#34;Open a terminal&#34; option.&lt;/p&gt; &#xA;&lt;p&gt;However, the GUI will not notify you about errors, so i recommend running Conty from a terminal emulator to see if there are any errors, at least if you&#39;ve never used Conty before.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;There are many packages and usecases that are included in the default &lt;code&gt;conty.sh&lt;/code&gt; from the releases page, such as:&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;File manager&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;It has a builtin file manager (pcmanfm):&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ ./conty.sh pcmanfm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You can also install your own file manager if you want to, but note that file manager will browse the root inside of Conty except for directories that are mounted from the user&#39;s root. &lt;code&gt;/home&lt;/code&gt; is mounted by Conty to allow access to the user&#39;s home files.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Checking hardware acceleration&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;To check if hardware acceleration (OpenGL and Vulkan) works, you can use these tools:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ ./conty.sh glxinfo -B&#xA;$ ./conty.sh glxgears&#xA;$ ./conty.sh vulkaninfo&#xA;$ ./conty.sh vkcube&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Using Conty as build environment&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;You can even use Conty for compilation:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ ./conty.sh gcc src.c&#xA;$ ./conty.sh git clone https://something.git&#xA;$ cd something &amp;amp;&amp;amp; ./conty.sh ./configure&#xA;$ ./conty.sh make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Listing binaries inside Conty&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;There are many more integrated programs. You can list all of them with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ ./conty.sh ls /usr/bin&#xA;$ ./conty.sh ls /opt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Executing user&#39;s binaries &lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;It is also possible to run binaries from your storage. For example, if you want to run an application that resides on your HOME, run something like:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ ./conty.sh /home/username/SomeApplication/binaryfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Note that you cannot run AppImage from Conty (this includes AppImage installed from AUR through Conty&#39;s package manager) except for extracting the AppImage&#39;s content, after which you may use the manually extracted content.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;There are many other features, see the internal help for more information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./conty.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Help Content&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code&gt;Usage: conty.sh [COMMAND] [ARGUMENTS]&#xA;&#xA;&#xA;Arguments:&#xA;  -e    Extract the image&#xA;&#xA;  -h    Display this text&#xA;&#xA;  -H    Display bubblewrap help&#xA;&#xA;  -g    Run the Conty&#39;s graphical interface&#xA;&#xA;  -l    Show a list of all installed packages&#xA;&#xA;  -d    Export desktop files from Conty into the application menu of&#xA;        your desktop environment.&#xA;        Note that not all applications have desktop files, and also that&#xA;        desktop files are tied to the current location of Conty, so if&#xA;        you move or rename it, you will need to re-export them.&#xA;        To remove the exported files, use this argument again.&#xA;&#xA;  -m    Mount/unmount the image&#xA;        The image will be mounted if it&#39;s not, unmounted otherwise.&#xA;        Mount point can be changed with the BASE_DIR env variable&#xA;        (the default is /tmp).&#xA;&#xA;  -o    Show the image offset&#xA;&#xA;  -u    Update all packages inside the container&#xA;        This requires a rebuild of the image, which may take quite&#xA;        a lot of time, depending on your hardware and internet speed.&#xA;        Additional disk space (about 6x the size of the current file)&#xA;        is needed during the update process.&#xA;&#xA;  -v    Display version of this script&#xA;&#xA;  -V    Display version of the image&#xA;&#xA;Arguments that don&#39;t match any of the above will be passed directly to&#xA;bubblewrap, so all bubblewrap arguments are supported as well.&#xA;&#xA;&#xA;Environment variables:&#xA;  BASE_DIR          Sets a custom directory where Conty will extract its&#xA;                    builtin utilities and mount the image.&#xA;                    The default is /tmp.&#xA;&#xA;  DISABLE_NET       Disables network access.&#xA;&#xA;  DISABLE_X11       Disables access to X server.&#xA;&#xA;                    Note: Even with this variable enabled applications&#xA;                    can still access your X server if it doesn&#39;t use&#xA;                    XAUTHORITY and listens to the abstract socket. This&#xA;                    can be solved by enabling XAUTHORITY, disabling the&#xA;                    abstract socket or by disabling network access.&#xA;&#xA;  HOME_DIR          Sets the home directory to a custom location.&#xA;                    For example: HOME_DIR=&#34;/home/user/custom_home&#34;&#xA;                    Note: If this variable is set the home directory&#xA;                    inside the container will still appear as /home/user,&#xA;                    even though the custom directory is used.&#xA;&#xA;  QUIET_MODE        Disables all non-error Conty messages.&#xA;                    Doesn&#39;t affect the output of applications.&#xA;&#xA;  SANDBOX           Enables a sandbox.&#xA;                    To control which files and directories are available&#xA;                    inside the container, you can use the --bind and&#xA;                    --ro-bind launch arguments.&#xA;                    (See bubblewrap help for more info).&#xA;&#xA;  SANDBOX_LEVEL     Controls the strictness of the sandbox.&#xA;                    Available levels:&#xA;                      1: Isolates all user files.&#xA;                      2: Additionally disables dbus and hides all&#xA;                         running processes.&#xA;                      3: Additionally disables network access and&#xA;                         isolates X11 server with Xephyr.&#xA;                    The default is 1.&#xA;&#xA;  USE_OVERLAYFS     Mounts a writable unionfs-fuse filesystem on top&#xA;                    of the read-only squashfs/dwarfs image, allowing to&#xA;                    modify files inside it.&#xA;                    Overlays are stored in ~/.local/share/Conty. If you&#xA;                    want to undo any changes, delete the entire&#xA;                    directory from there.&#xA;&#xA;  NVIDIA_HANDLER    Fixes issues with graphical applications on Nvidia&#xA;                    GPUs with the proprietary driver. Enable this only&#xA;                    if you are using an Nvidia GPU, the proprietary&#xA;                    driver and encountering issues running graphical&#xA;                    applications. At least 2 GB of free disk space is&#xA;                    required. This function is enabled by default.&#xA;&#xA;  USE_SYS_UTILS     Tells the script to use squashfuse/dwarfs and bwrap&#xA;                    installed on the system instead of the builtin ones.&#xA;&#xA;  XEPHYR_SIZE       Sets the size of the Xephyr window. The default is&#xA;                    800x600.&#xA;&#xA;  CUSTOM_MNT        Sets a custom mount point for the Conty. This allows&#xA;                    Conty to be used with already mounted filesystems.&#xA;                    Conty will not mount its image on this mount point,&#xA;                    but it will use files that are already present&#xA;                    there.&#xA;&#xA;Additional notes:&#xA;System directories/files will not be available inside the container if&#xA;you set the SANDBOX variable but don&#39;t bind (mount) any items or set&#xA;HOME_DIR. A fake temporary home directory will be used instead.&#xA;&#xA;If the executed script is a symlink with a different name, said name&#xA;will be used as the command name.&#xA;For instance, if the script is a symlink with the name &#34;wine&#34; it will&#xA;automatically run wine during launch.&#xA;&#xA;Running Conty without any arguments from a graphical interface (for&#xA;example, from a file manager) will automatically launch the Conty&#39;s&#xA;graphical interface.&#xA;&#xA;Besides updating all packages, you can also install and remove packages&#xA;using the same -u argument. To install packages add them as additional&#xA;arguments, to remove add a minus sign (-) before their names.&#xA;  To install: conty.sh -u pkgname1 pkgname2 pkgname3 ...&#xA;  To remove: conty.sh -u -pkgname1 -pkgname2 -pkgname3 ...&#xA;In this case Conty will update all packages and additionally install&#xA;and/or remove specified packages.&#xA;&#xA;If you are using an Nvidia GPU, please read the following:&#xA;https://github.com/Kron4ek/Conty#known-issues&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Managing&lt;/h2&gt; &#xA;&lt;h3&gt;Install Conty&lt;/h3&gt; &#xA;&lt;p&gt;Much like an AppImage, there is no need to install Conty. However, many distribution includes &lt;code&gt;$HOME/.local/bin&lt;/code&gt; as part of their &lt;code&gt;PATH&lt;/code&gt; should the folder exists. You may put Conty there, so that it can be accessed from terminal using &lt;code&gt;conty.sh&lt;/code&gt; without inputting the full path.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Checking and adding PATH&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;To check if you have the directory inside your &lt;code&gt;PATH&lt;/code&gt;, first create the folder, and then use &lt;code&gt;echo $PATH&lt;/code&gt;. If your distribution does not include the directory, you can add it by adding &lt;code&gt;export PATH=$PATH:$HOME/.local/bin&lt;/code&gt; somewhere inside the &lt;code&gt;~/.bashrc&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;In addition, Conty can batch export all .desktop files inside Conty&#39;s &lt;code&gt;/usr/share/applications&lt;/code&gt; to user&#39;s &lt;code&gt;$XDG_DATA_HOME/applications/Conty&lt;/code&gt; folder (typically means &lt;code&gt;~/.local/share/applications/Conty&lt;/code&gt;) so that the applications installed in Conty can be accessed from user&#39;s application launcher.&lt;/p&gt; &#xA;&lt;p&gt;To do so, open the terminal, and type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./conty.sh -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will create the folder and export the files there, append &lt;code&gt;Conty&lt;/code&gt; to all exported application&#39;s name and .desktop filename, and insert Conty&#39;s path to the executable path as a prefix. In addition, it will also export all environment variables and arguments relating to Conty, such as &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#sandbox&#34;&gt;sandboxing options&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Example&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;Conty is located in &lt;code&gt;$HOME/.local/bin/conty.sh&lt;/code&gt;. Then, you ran the following command:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ HOME_DIR=$HOME/Documents/Conty conty.sh --bind $HOME/.steam $HOME/.steam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Firefox (and other apps) will be exported to &lt;code&gt;~/.local/share/applications/Conty&lt;/code&gt; as &lt;code&gt;firefox-conty.desktop&lt;/code&gt;, it will show up in your menu as &lt;code&gt;Firefox (Conty)&lt;/code&gt;, and the &lt;code&gt;Exec=&lt;/code&gt; line inside the exported file will be changed from &lt;code&gt;env UBUNTU_MENUPROXY=0 /usr/lib/firefox/firefox&lt;/code&gt; to &lt;code&gt;env HOME_DIR=&#34;/home/$USER/Documents/Conty&#34; &#34;/home/$USER/.local/bin/conty.sh&#34; --bind /home/$USER/.steam /home/$USER/.steam env UBUNTU_MENUPROXY=0 /usr/lib/firefox/firefox&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;If &lt;code&gt;$XDG_DATA_HOME/applications/Conty&lt;/code&gt; already exists, &lt;code&gt;conty.sh -d&lt;/code&gt; will instead delete the folder. If you have modified any .desktop files inside that folder, it is recommended for you to move or back it up to a different folder.&lt;/p&gt; &#xA;&lt;h3&gt;How to update&lt;/h3&gt; &#xA;&lt;p&gt;There are a few ways to update Conty and get the latest packages, use whichever works best for you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First of all, you can simply download latest release from the &lt;a href=&#34;https://github.com/Kron4ek/Conty/releases&#34;&gt;releases page&lt;/a&gt;, i usually upload a new release about every month.&lt;/li&gt; &#xA; &lt;li&gt;You can use the self-update feature (&lt;code&gt;./conty.sh -u&lt;/code&gt;) integrated into Conty, it will update all integrated packages and will rebuild the squashfs/dwarfs image. Read the internal help for more information about it.&lt;/li&gt; &#xA; &lt;li&gt;You can manually create a Conty executable with latest packages inside, read the &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#how-to-create-your-own-conty-executables&#34;&gt;How to create your own Conty executables&lt;/a&gt; section below.&lt;/li&gt; &#xA; &lt;li&gt;You can clone the repository and &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#automated-github-actions&#34;&gt;use GitHub Actions&lt;/a&gt; to get new Conty file according your specifications, every week (see Automated section below).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to create your own Conty executables&lt;/h2&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Obtain Arch Linux boostrap by using &lt;code&gt;create-arch-bootstrap.sh&lt;/code&gt;. Before running it, you can edit the script if you want , for example, to include a different set of packages inside the container, or to include additional locales. Make sure you have enough free disk space, i recommend at least 10 GB of free space. Root rights are required for this step.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# ./create-arch-bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After that you can use &lt;code&gt;enter-chroot.sh&lt;/code&gt; to chroot into the bootstrap and do some manual modifications (for instance, modify some files, install/remove packages, etc.). Root rights are needed for this step too. This is an optional step, which you can skip if you wish.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# ./enter-chroot.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now use &lt;code&gt;create-conty.sh&lt;/code&gt; to create a SquashFS (or DwarFS) image and create a ready-to-use Conty executable. Root rights are not needed for this step. By default a SquashFS image with zstd compression (level 19) will be created, however, if you want, you can edit the script and enable DwarFS, select a different compression algorithm and/or compression level.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ./create-conty.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For the sake of convenience, there are pre-compiled binaries (utils.tar.gz) of bwrap, squashfuse and dwarfs and their dependencies uploaded in this repo, &lt;code&gt;create-conty.sh&lt;/code&gt; uses them by default. If you want, you can compile your own binaries by using &lt;code&gt;create-utils.sh&lt;/code&gt;, it will compile all needed programs and create utils.tar.gz.&lt;/p&gt; &#xA;&lt;h3&gt;Automated (GitHub Actions)&lt;/h3&gt; &#xA;&lt;p&gt;This repository has GitHub workflows that allows you to make GitHub automatically generate a new Conty binary of your specification, every week or at any time you want.&lt;/p&gt; &#xA;&lt;p&gt;To start, first fork this repository. Then, you may edit the &lt;code&gt;create-arch-bootstrap.sh&lt;/code&gt; inside the new repository, to build the packages you want. Then go to the Actions tab.&lt;/p&gt; &#xA;&lt;p&gt;In the Actions tab, go to the Conty CI section in the left-hand menu. Choose &#34;Run Workflow&#34;. This will make GitHub make you a new Conty binary. &lt;a href=&#34;https://github.com/Kron4ek/Conty/raw/master/.github/workflows/conty.yml#L5&#34;&gt;By default&lt;/a&gt;, it will also generate a new Conty binary every Friday (you can use a &lt;a href=&#34;https://crontab.cronhub.io/&#34;&gt;cron time expression&lt;/a&gt; to change the schedule).&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Illustration&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/bayazidbh/Conty/assets/26621899/c80d08b7-5c4d-41b1-8eab-90178eed7b96&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/bayazidbh/Conty/assets/26621899/5cdd837a-d3cd-4c11-ad6b-bb6480ae8183&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/bayazidbh/Conty/assets/26621899/c065f6c2-f75a-4cf2-9c3d-cf151112ca50&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/bayazidbh/Conty/assets/26621899/6a18f7db-e6f2-44e3-9acf-1aee9af855a6&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Useful Tips&lt;/h2&gt; &#xA;&lt;h3&gt;Sandbox&lt;/h3&gt; &#xA;&lt;p&gt;Conty uses bubblewrap and thus supports filesystem sandboxing, X11 isolation is also supported (via Xephyr). By default sandbox is disabled and almost all directories and files on your system are available (visible and accessible) for the container.&lt;/p&gt; &#xA;&lt;p&gt;Here are the environment variables that you can use to control the sandbox:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SANDBOX&lt;/strong&gt; - enables the sandbox feature itself. Isolates all user files and directories, creates a fake temporary home directory (in RAM), which is destroyed after closing the container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SANDBOX_LEVEL&lt;/strong&gt; - controls the strictness of the sandbox. There are 3 available levels, the default is 1. Level 1 isolates all user files; Level 2 isolates all user files, disables dbus and hides all running processes; Level 3 does the same as the level 2, but additionally disables network access and isolates X11 server with Xephyr.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DISABLE_NET&lt;/strong&gt; - completely disables internet access.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HOME_DIR&lt;/strong&gt; - sets a custom home directory. If you set this, HOME inside the container will still appear as /home/username, but actually a custom directory will be used for it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And launch arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--bind SRC DEST&lt;/code&gt; - binds (mounts) a file or directory to a destination, so it becomes visible inside the container. SRC is what you want to mount, DEST is where you want it to be mounted. This argument can be specified multiple times to mount multiple files/dirs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ro-bind SRC DEST&lt;/code&gt; - same as above but mounts files/dirs as read-only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other bubblewrap arguments are supported too, read the bubblewrap help or manual for more information.&lt;/p&gt; &#xA;&lt;p&gt;Note that when &lt;strong&gt;SANDBOX&lt;/strong&gt; is enabled, none of user files are accessible or visible, for any application that you run in this mode your home directory will be seen as completely empty. If you want to allow access to some files or directories, use the aforementioned &lt;code&gt;--bind&lt;/code&gt; or &lt;code&gt;--ro-bind&lt;/code&gt; arguments.&lt;/p&gt; &#xA;&lt;p&gt;Also note that &lt;code&gt;--bind&lt;/code&gt;, &lt;code&gt;--ro-bind&lt;/code&gt;, &lt;strong&gt;HOME_DIR&lt;/strong&gt; and &lt;strong&gt;DISABLE_NET&lt;/strong&gt; can be used even if &lt;strong&gt;SANDBOX&lt;/strong&gt; is disabled.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Example&lt;/summary&gt;&#xA; &lt;p&gt; Example 1 &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code&gt;$ SANDBOX=1 ./conty.sh firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example 2&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ export SANDBOX=1&#xA;$ export SANDBOX_LEVEL=2&#xA;$ ./conty.sh --bind ~/.steam ~/.steam --bind ~/.local/share/Steam ~/.local/share/Steam steam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example 3:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ mkdir &#34;/home/username/custom_home_dir&#34;&#xA;$ export DISABLE_NET=1&#xA;$ export SANDBOX=1&#xA;$ export HOME_DIR=&#34;/home/username/custom_home_dir&#34;&#xA;$ ./conty.sh lutris&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;These options (and any Conty-related arguments and variables exported in &lt;code&gt;env&lt;/code&gt; at the time) will be exported by &lt;code&gt;conty.sh -d&lt;/code&gt; into part of all exported apps .desktop files in &lt;code&gt;$XDG_DATA_HOME/applications/Conty&lt;/code&gt;. If you want multiple options, you can export it once with a specific config, rename the &lt;code&gt;Conty&lt;/code&gt; folder, and then export a different set of .desktop files.&lt;/p&gt; &#xA;&lt;p&gt;If you just want a sandboxing functionality but don&#39;t need a container with a full-size Linux distro inside (which is what Conty mainly is), i recommend to take a look directly at these projects: &lt;a href=&#34;https://github.com/containers/bubblewrap&#34;&gt;bubblewrap&lt;/a&gt; and &lt;a href=&#34;https://github.com/netblue30/firejail&#34;&gt;firejail&lt;/a&gt;. Sandboxing is a good additional feature of Conty, but is not its main purpose.&lt;/p&gt; &#xA;&lt;h3&gt;About Wine&lt;/h3&gt; &#xA;&lt;p&gt;Conty releases from the releases page include &lt;code&gt;Wine-GE&lt;/code&gt;, and if you build your own Conty you will get &lt;code&gt;Wine-Staging&lt;/code&gt; by default (but you can change that).&lt;/p&gt; &#xA;&lt;p&gt;As for prefix management, it&#39;s the same as with any other Wine build, the container does not affect it. The default prefix is &lt;code&gt;~/.wine&lt;/code&gt;, but you can specify a custom prefix path with the &lt;code&gt;WINEPREFIX&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;DXVK&lt;/code&gt; and &lt;code&gt;vkd3d-proton&lt;/code&gt; are not installed by default (unless they are already in your prefix), but can be easily installed, for example, via &lt;code&gt;winetricks&lt;/code&gt; if you need them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./conty.sh winetricks dxvk vkd3d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As already mentioned in the &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#usage&#34;&gt;Usage&lt;/a&gt; section, Windows applications can be launched like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./conty.sh wine someapplication.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have new enough Linux kernel (5.16 or newer), it&#39;s a good idea to enable &lt;code&gt;FSYNC&lt;/code&gt; to improve Wine performance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ WINEFSYNC=1 ./conty.sh wine someapplication.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Nvidia users with the proprietary driver will experience problems running graphical applications if their Nvidia kernel module version mismatches the version of the Nvidia libraries inside Conty. This applies only to the proprietary driver, Nouveau should work fine without any additional actions (of course, if your GPU is supported by it). AMD and Intel GPUs are not affected by this issue.&lt;/p&gt; &lt;p&gt;For example, if the version of your Nvidia kernel module is 460.56 and the libraries inside the container are from 460.67 version, then you won&#39;t be able to run graphical applications.&lt;/p&gt; &lt;p&gt;There are three solutions to this problem:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The first and the easiest solution is to use the &lt;code&gt;NVIDIA_HANDLER&lt;/code&gt; feature of Conty, it will automatically download and pass the appropriate driver version into the container. In the latest verison of Conty this feature is enabled by default and should fix the problem automatically. It hasn&#39;t been extensively tested yet, so if it does not work for you, i would appreciate it if you could leave a feedback &lt;a href=&#34;https://github.com/Kron4ek/Conty/discussions/74&#34;&gt;here&lt;/a&gt;, mentioning your Linux distro and Nvidia driver version.&lt;/li&gt; &#xA;   &lt;li&gt;The second solution is to install the same driver version as included inside Conty, which is usually the latest non-beta version. You can see the exact driver version in pkg_list.txt attached to each Conty release. Of course if your GPU is not supported by new drivers, this is not an option for you.&lt;/li&gt; &#xA;   &lt;li&gt;The third solution is to (re)build Conty and include the same driver version as installed on your system. Read the &lt;a href=&#34;https://raw.githubusercontent.com/Kron4ek/Conty/master/#how-to-create-your-own-conty-executables&#34;&gt;How to create your own Conty executables&lt;/a&gt; section, you will need to edit the &lt;code&gt;create-arch-bootstrap.sh&lt;/code&gt; script or use the &lt;code&gt;enter-chroot.sh&lt;/code&gt; script to include a different driver version. For instance, if you want to include legacy 470xx or 390xx drivers, edit the &lt;code&gt;create-arch-bootstrap.sh&lt;/code&gt; script and replace &lt;code&gt;nvidia-utils&lt;/code&gt; and &lt;code&gt;lib32-nvidia-utils&lt;/code&gt; with &lt;code&gt;nvidia-470xx-utils&lt;/code&gt; and &lt;code&gt;lib32-nvidia-470xx-utils&lt;/code&gt; (replace 470xx with 390xx if you need 390xx drivers) in the &lt;code&gt;video_pkgs&lt;/code&gt; variable, and then build Conty following the instructions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Some Windows applications running under Wine complain about lack of free disk space. This is because under Conty root partition is seen as full and read-only, so some applications think that there is no free space, even though you might have plenty of space in your HOME. The solution is simple, just run &lt;code&gt;winecfg&lt;/code&gt;, move to &#34;Drives&#34; tab and add your &lt;code&gt;/home&lt;/code&gt; as an additional drive (for example, &lt;code&gt;D:&lt;/code&gt;), and then install applications to that drive. More info &lt;a href=&#34;https://github.com/Kron4ek/Conty/issues/67#issuecomment-1460257910&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AppImages do not work under Conty. This is because bubblewrap, which is used in Conty, does not allow SUID bit (for security reasons), which is needed to mount AppImages. The solution is to extract an AppImage application before running it with Conty. Some AppImages support &lt;code&gt;--appimage-extract-and-run&lt;/code&gt; argument, which you can also use.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Application may show errors (warnings) about locale, like &#34;Unsupported locale setting&#34; or &#34;Locale not supported by C library&#34;. This happens because Conty has a limited set of generated locales inside it, and if your host system uses locale that is not available in Conty, applications may show such warnings. This is usually not a critical problem, most applications will continue to work without issues despite showing the errors. But if you want, you can &lt;a href=&#34;https://github.com/Kron4ek/Conty#how-to-create-your-own-conty-executables&#34;&gt;create&lt;/a&gt; a Conty executable and include any locales you need.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Conty may have problems interfacing with custom url protocols (such as &lt;code&gt;steam://&lt;/code&gt; and &lt;code&gt;sgdb://&lt;/code&gt;), apps that uses Native Host Messengers (such as browser extensions for Plasma Host Integration / KDE Connect, KeePassXC, and download managers), and login token exchange (such as trying to log-in a natively-installed GitHub Desktop app with a browser inside Conty) if there is packages that handle such protocols installed (for example, &lt;code&gt;plasma-browser-integration&lt;/code&gt; for KDE Plasma extension inside browser).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main used projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/bubblewrap&#34;&gt;bubblewrap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vasi/squashfuse&#34;&gt;squashfuse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhx/dwarfs&#34;&gt;dwarfs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rpodgorny/unionfs-fuse&#34;&gt;unionfs-fuse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/zstd&#34;&gt;zstd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://busybox.net/&#34;&gt;busybox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;bash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archlinux.org/&#34;&gt;archlinux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.chaotic.cx/&#34;&gt;chaotic-aur&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>