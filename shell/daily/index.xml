<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-10T01:39:44Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>base/node</title>
    <updated>2025-05-10T01:39:44Z</updated>
    <id>tag:github.com,2025-05-10:/base/node</id>
    <link href="https://github.com/base/node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Everything required to run your own Base node&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/base/node/main/logo.webp&#34; alt=&#34;Base&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Base Node&lt;/h1&gt; &#xA;&lt;p&gt;Base is a secure, low-cost, developer-friendly Ethereum L2 built on Optimism&#39;s &lt;a href=&#34;https://stack.optimism.io/&#34;&gt;OP Stack&lt;/a&gt;. This repository contains Docker builds to run your own node on the Base network.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://base.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/https/base.org.svg?sanitize=true&#34; alt=&#34;Website base.org&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.base.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-up-green&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://base.org/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1067165013397213286?label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/Base&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/Base?style=social&#34; alt=&#34;Twitter Base&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure you have an Ethereum L1 full node RPC available&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose your network:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For mainnet: Use &lt;code&gt;.env.mainnet&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For testnet: Use &lt;code&gt;.env.sepolia&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure your L1 endpoints in the appropriate &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OP_NODE_L1_ETH_RPC=&amp;lt;your-preferred-l1-rpc&amp;gt;&#xA;OP_NODE_L1_BEACON=&amp;lt;your-preferred-l1-beacon&amp;gt;&#xA;OP_NODE_L1_BEACON_ARCHIVER=&amp;lt;your-preferred-l1-beacon-archiver&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the node:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For mainnet (default):&#xA;docker compose up --build&#xA;&#xA;# For testnet:&#xA;NETWORK_ENV=.env.sepolia docker compose up --build&#xA;&#xA;# To use a specific client (optional):&#xA;CLIENT=reth docker compose up --build&#xA;&#xA;# For testnet with a specific client:&#xA;NETWORK_ENV=.env.sepolia CLIENT=reth docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Supported Clients&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;geth&lt;/code&gt; (default)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reth&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nethermind&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Minimum Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modern Multicore CPU&lt;/li&gt; &#xA; &lt;li&gt;32GB RAM (64GB Recommended)&lt;/li&gt; &#xA; &lt;li&gt;NVMe SSD drive&lt;/li&gt; &#xA; &lt;li&gt;Storage: (2 * &lt;a href=&#34;https://base.org/stats&#34;&gt;current chain size&lt;/a&gt; + &lt;a href=&#34;https://basechaindata.vercel.app&#34;&gt;snapshot size&lt;/a&gt; + 20% buffer (to accomodate future growth)&lt;/li&gt; &#xA; &lt;li&gt;Docker and Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Production Hardware Specifications&lt;/h3&gt; &#xA;&lt;p&gt;The following are the hardware specifications we use in production:&lt;/p&gt; &#xA;&lt;h4&gt;Geth Full Node&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instance&lt;/strong&gt;: AWS i4i.12xlarge&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: RAID 0 of all local NVMe drives (&lt;code&gt;/dev/nvme*&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Filesystem&lt;/strong&gt;: ext4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Reth Archive Node&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instance&lt;/strong&gt;: AWS i7ie.6xlarge&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: RAID 0 of all local NVMe drives (&lt;code&gt;/dev/nvme*&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Filesystem&lt;/strong&gt;: ext4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[!NOTE] To run the node using a supported client, you can use the following command: &lt;code&gt;CLIENT=supported_client docker compose up --build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supported clients:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;geth&lt;/li&gt; &#xA; &lt;li&gt;reth (with Flashblocks support option, see &lt;a href=&#34;https://raw.githubusercontent.com/base/node/main/reth/README.md&#34;&gt;Reth Node README&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;nethermind&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Required Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;L1 Configuration: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;OP_NODE_L1_ETH_RPC&lt;/code&gt;: Your Ethereum L1 node RPC endpoint&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;OP_NODE_L1_BEACON&lt;/code&gt;: Your L1 beacon node endpoint&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;OP_NODE_L1_BEACON_ARCHIVER&lt;/code&gt;: Your L1 beacon archiver endpoint&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;OP_NODE_L1_RPC_KIND&lt;/code&gt;: The type of RPC provider being used (default: &#34;debug_geth&#34;). Supported values: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;alchemy&lt;/code&gt;: Alchemy RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;quicknode&lt;/code&gt;: QuickNode RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;infura&lt;/code&gt;: Infura RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;parity&lt;/code&gt;: Parity RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;nethermind&lt;/code&gt;: Nethermind RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;debug_geth&lt;/code&gt;: Debug Geth RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;erigon&lt;/code&gt;: Erigon RPC provider&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;basic&lt;/code&gt;: Basic RPC provider (standard receipt fetching only)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;any&lt;/code&gt;: Any available RPC method&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;standard&lt;/code&gt;: Standard RPC methods including newer optimized methods&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Network Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mainnet: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;RETH_CHAIN=base&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;OP_NODE_NETWORK=base-mainnet&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Sequencer: &lt;code&gt;https://mainnet-sequencer.base.org&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance Settings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cache Settings: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;GETH_CACHE=&#34;20480&#34;&lt;/code&gt; (20GB)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;GETH_CACHE_DATABASE=&#34;20&#34;&lt;/code&gt; (4GB)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;GETH_CACHE_GC=&#34;12&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;GETH_CACHE_SNAPSHOT=&#34;24&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;GETH_CACHE_TRIE=&#34;44&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Optional Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;EthStats Monitoring (uncomment to enable)&lt;/li&gt; &#xA; &lt;li&gt;Trusted RPC Mode (uncomment to enable)&lt;/li&gt; &#xA; &lt;li&gt;Snap Sync (experimental)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For full configuration options, see the &lt;code&gt;.env.mainnet&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Snapshots&lt;/h2&gt; &#xA;&lt;p&gt;Snapshots are available to help you sync your node more quickly. See &lt;a href=&#34;https://docs.base.org/chain/run-a-base-node#snapshots&#34;&gt;docs.base.org&lt;/a&gt; for links and more details on how to restore from a snapshot.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Networks&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Network&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mainnet&lt;/td&gt; &#xA;   &lt;td&gt;âœ…&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Testnet&lt;/td&gt; &#xA;   &lt;td&gt;âœ…&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;For support please join our &lt;a href=&#34;https://discord.gg/buildonbase&#34;&gt;Discord&lt;/a&gt; post in &lt;code&gt;ðŸ› ï½œnode-operators&lt;/code&gt;. You can alternatively open a new GitHub issue.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;THE NODE SOFTWARE IS PROVIDED &#34;AS IS&#34; WITHOUT WARRANTY OF ANY KIND. We make no guarantees about asset protection or security. Usage is subject to applicable laws and regulations.&lt;/p&gt; &#xA;&lt;p&gt;For more information, visit &lt;a href=&#34;https://docs.base.org/&#34;&gt;docs.base.org&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>