<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-18T01:56:27Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DHDAXCW/NanoPi-R4S-R4SE</title>
    <updated>2022-07-18T01:56:27Z</updated>
    <id>tag:github.com,2022-07-18:/DHDAXCW/NanoPi-R4S-R4SE</id>
    <link href="https://github.com/DHDAXCW/NanoPi-R4S-R4SE" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于 Lean&amp;Lienol 源码的 NanoPi R4S 的 OpenWrt 固件。每天自动更新插件和内&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;中文简体 | &lt;a href=&#34;https://github.com/DHDAXCW/NanoPi-R4S-2021/raw/main/EngLish.md&#34;&gt;English&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;NanoPi-R4S-2021 每天自动更新插件和内核版本。&lt;/h1&gt; &#xA;&lt;h1&gt;机场推荐 &lt;a href=&#34;https://www.easy2022.com/#/register?code=Ut7iWMrk&#34;&gt;ENET--IEPL内网专线接入&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;👉使用本固件前，请严格遵守国家互联网使用相关法律规定,不要违反国家法律规定！👈&lt;/h2&gt; &#xA;&lt;h2&gt;强烈推荐三星TF卡\海康TF卡。哪怕是很难刷上的固件，只有三星刷上可以开机。&lt;/h2&gt; &#xA;&lt;h3&gt;固件分类 在&lt;a href=&#34;https://github.com/DHDAXCW/NanoPi-R4S-2021/releases&#34;&gt;releases&lt;/a&gt;有备注关键词&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;正式版（含超频）对折腾的，可以选择，电压一定要考虑。超频都是升压的，会造成不稳定的。比如跑cpu测试容易升压等。&lt;/li&gt; &#xA; &lt;li&gt;Docker版 含Docker插件，会导致udp转发失效 慎用哦，只要别开passwall的udp，啥都不影响使用！&lt;/li&gt; &#xA; &lt;li&gt;稳定版 含有日常使用插件&lt;/li&gt; &#xA; &lt;li&gt;此版本取消了精简版，改为稳定版&lt;/li&gt; &#xA; &lt;li&gt;风扇链接 &lt;a href=&#34;https://s.click.taobao.com/t?e=m%3D2%26s%3Dd8Ack0Lbx8McQipKwQzePOeEDrYVVa64LKpWJ%2Bin0XJRAdhuF14FMXpyNmcFd6mT8sviUM61dt2T0mcOGN1M6FAj1gqltKaEfKzCcEr0EW0YuhTK3FPxiHMT7yc3NZrQKSOkJV8harV3phaPbavinqGCwVfdcN0wcSpj5qSCmbA%3D&#34;&gt;点击进入&lt;/a&gt; 建议用这种风扇&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;注：不要用恢复备份。。不保证某个插件是否正常运行。。。建议重新设置贼好！&lt;/h3&gt; &#xA;&lt;h3&gt;默认编译&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用户名：root 密码：password 管理IP：192.168.11.1&lt;/li&gt; &#xA; &lt;li&gt;下载地址： &lt;a href=&#34;https://github.com/DHDAXCW/NanoPi-R4S-2021/releases&#34;&gt;https://github.com/DHDAXCW/NanoPi-R4S-2021/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;x86_64固件下载 &lt;a href=&#34;https://github.com/DHDAXCW/lede/releases&#34;&gt;https://github.com/DHDAXCW/lede/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;- Docker：正式版带docker，有超频，带有docker插件。（对passwall的udp要求很高，不要刷docker版本）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;电报群：&lt;a href=&#34;https://t.me/DHDAXCW&#34;&gt;https://t.me/DHDAXCW&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;X86固件 ：&lt;a href=&#34;https://github.com/DHDAXCW/lede/releases&#34;&gt;点击链接下载&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;在线升级&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;复制以下代码，在TTYD终端执行，过程中不得离开，否则还得重新下载，请刷ext4格式明天再升级&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;该升级支持4G版，1G版&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多版本在里面，自己选 👇ok&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/lone-wind/scripts/main/onlineupdate.sh &amp;amp;&amp;amp; sh onlineupdate.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;插件展示&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DHDAXCW/NanoPi-R4S-R4SE/main/data/20.jpg?raw=true&#34; alt=&#34;Alt text&#34; title=&#34;Title&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;提示&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我的固件加了动态超频，不管热不热这是取决后台运行程序在跑什么。&lt;/li&gt; &#xA; &lt;li&gt;感觉很热 就加风扇，推荐 风扇6cm×6cm，薄1cm，usb也行 或者端子线zh1.5（风扇脚本目前在建设中）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://afdian.net/@dhdaxcw/plan&#34;&gt;赏个鸡腿吧&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://afdian.net/@dhdaxcw/plan&#34;&gt;https://afdian.net/@dhdaxcw/plan&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;请不要fork我项目，因为yml文件中已托管到我本地服务器，目的是为了加速编译。 如果想fork自己编译，那就请到yml文件中修改下面&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;23行 runs-on: self-hosted 改为 runs-on: ubuntu-20.04&#xA;185行 runs-on: self-hosted 改为 runs-on: ubuntu-20.04&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;另外，如果改上面的，那还要改编译线程，我默认是-j72 改好就可以用github的机器编译了&lt;/p&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;特别感谢以下项目：&lt;/p&gt; &#xA;&lt;p&gt;Openwrt 官方项目：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/openwrt&#34;&gt;https://github.com/openwrt/openwrt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Lean 大的 Openwrt 项目：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;immortalwrt 的 OpenWrt 项目：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/immortalwrt/immortalwrt&#34;&gt;https://github.com/immortalwrt/immortalwrt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;P3TERX 大佬的 Actions-OpenWrt 项目：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/P3TERX/Actions-OpenWrt&#34;&gt;https://github.com/P3TERX/Actions-OpenWrt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SuLingGG 大佬的 Actions 编译框架 项目：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SuLingGG/OpenWrt-Rpi&#34;&gt;https://github.com/SuLingGG/OpenWrt-Rpi&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>termux/termux-packages</title>
    <updated>2022-07-18T01:56:27Z</updated>
    <id>tag:github.com,2022-07-18:/termux/termux-packages</id>
    <link href="https://github.com/termux/termux-packages" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A build system and primary set of packages for Termux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Termux packages&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/termux/termux-packages&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;a href=&#34;https://github.com/termux/termux-packages/actions&#34;&gt;&lt;img src=&#34;https://github.com/termux/termux-packages/workflows/Packages/badge.svg?sanitize=true&#34; alt=&#34;Packages last build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/termux/package-builder&#34;&gt;&lt;img src=&#34;https://github.com/termux/termux-packages/workflows/Docker%20image/badge.svg?sanitize=true&#34; alt=&#34;Docker image status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/repository/termux&#34;&gt;&lt;img src=&#34;https://github.com/termux/repology-metadata/workflows/Repology%20metadata/badge.svg?sanitize=true&#34; alt=&#34;Repology metadata&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/termux/termux&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/termux/termux.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/termux/termux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/HXpF69X&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/641256914684084234.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2&#34; alt=&#34;Join the Termux discord server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/termux/termux-packages/master/.github/static/powered-by-fosshost.png&#34; alt=&#34;Powered by FossHost&#34; width=&#34;128px&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project contains scripts and patches to build packages for the &lt;a href=&#34;https://github.com/termux/termux-app&#34;&gt;Termux&lt;/a&gt; Android application.&lt;/p&gt; &#xA;&lt;p&gt;Quick how-to about Termux package management is available at &lt;a href=&#34;https://github.com/termux/termux-packages/wiki/Package-Management&#34;&gt;Package Management&lt;/a&gt;. It also has info on how to fix &lt;strong&gt;&lt;code&gt;repository is under maintenance or down&lt;/code&gt;&lt;/strong&gt; errors when running &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pkg&lt;/code&gt; commands.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/termux/termux-packages/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&#34;https://github.com/termux/termux-packages/wiki&#34;&gt;Developer&#39;s Wiki&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;General mailing list: &lt;a href=&#34;https://groups.io/g/termux&#34;&gt;https://groups.io/g/termux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Developer mailing list: &lt;a href=&#34;https://groups.io/g/termux-dev&#34;&gt;https://groups.io/g/termux-dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;General chat: &lt;a href=&#34;https://gitter.im/termux/termux&#34;&gt;https://gitter.im/termux/termux&lt;/a&gt; or #termux on IRC/libera.chat.&lt;/p&gt; &#xA;&lt;p&gt;Developer chat: &lt;a href=&#34;https://gitter.im/termux/dev&#34;&gt;https://gitter.im/termux/dev&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>unifi-utilities/unifios-utilities</title>
    <updated>2022-07-18T01:56:27Z</updated>
    <id>tag:github.com,2022-07-18:/unifi-utilities/unifios-utilities</id>
    <link href="https://github.com/unifi-utilities/unifios-utilities" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of enhancements for UnifiOS based devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;unifios-utilities &lt;a href=&#34;https://discord.gg/8zqrQJFghg&#34;&gt;&lt;img src=&#34;https://img.shields.io:/discord/939817841107034172?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34; title=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/unifi-utilities/unifios-utilities/actions/workflows/podman-udmp.yml&#34;&gt;&lt;img src=&#34;https://github.com/unifi-utilities/unifios-utilities/actions/workflows/podman-udmp.yml/badge.svg?sanitize=true&#34; alt=&#34;UDM-Pro Podman&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/unifi-utilities/unifios-utilities/actions/workflows/podman-udmse.yml&#34;&gt;&lt;img src=&#34;https://github.com/unifi-utilities/unifios-utilities/actions/workflows/podman-udmse.yml/badge.svg?branch=main&#34; alt=&#34;UDM-SE Podman&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of things to enhance the capabilities of your Unifi Dream Machine, Dream Machine Pro or UXG-Pro.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Kernel&lt;/h2&gt; &#xA;&lt;p&gt;If you want to do a custom kernel with wireguard support, multicast, multipath routing that is now a possiblity. Please see the repo and please use at your own risk. This a much larger change than anything in this repo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fabianishere/udm-kernel-tools&#34;&gt;udm-kernel-tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Podman Builds for UDM-SE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/unifi-utilities/unifios-utilities/actions&#34;&gt;https://github.com/unifi-utilities/unifios-utilities/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Extract the zip to the root of your device! Look at the assets on the Podman workflow.&lt;/p&gt; &#xA;&lt;h2&gt;General Tools&lt;/h2&gt; &#xA;&lt;h3&gt;on-boot-script&lt;/h3&gt; &#xA;&lt;p&gt;Do this first. Enables &lt;code&gt;init.d&lt;/code&gt; style scripts to run on every boot of your UDM. Includes examples to run &lt;code&gt;wpa-supplicant/eap-proxy&lt;/code&gt; and/or &lt;code&gt;ntop-ng&lt;/code&gt; on startup. Follow this &lt;a href=&#34;https://github.com/unifi-utilities/unifios-utilities/raw/main/on-boot-script/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It enables complete customization of your UDM/P and fills the gap that config.gateway.json left behind.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;podman-update&lt;/h3&gt; &#xA;&lt;p&gt;Updates Podman, conmon, and runc to a recent version. This allows docker-compose usage as well.&lt;/p&gt; &#xA;&lt;h3&gt;container-common&lt;/h3&gt; &#xA;&lt;p&gt;Apply this after on-boot-script. Updates container defaults to maintain &lt;strong&gt;stable disk usage footprint&lt;/strong&gt; of custom containers. &lt;strong&gt;Prevents logs filling up UDM storage full&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;python&lt;/h3&gt; &#xA;&lt;p&gt;If you need python3 on your UDM, generally not recommended, can always use it in unifi-os container.&lt;/p&gt; &#xA;&lt;h3&gt;UDM Persistent SSH Keys Script&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDM-Persistent-SSH-Keys&#34;&gt;https://github.com/fire1ce/UDM-Persistent-SSH-Keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Script to presist ssh keys after reboot or firmware update&lt;/p&gt; &#xA;&lt;h2&gt;VPN Servers / Clients&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wireguard-go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a Wireguard client/server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WireGuard kernel module&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tusc/wireguard-kmod&#34;&gt;https://github.com/tusc/wireguard-kmod&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses a prebuilt linux kernel module, without the need to move to a custom kernel.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenConnect VPN&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/shuguet/openconnect-udm&#34;&gt;https://github.com/shuguet/openconnect-udm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenConnect VPN Client for the UniFi Dream Machine Pro (Unofficial).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;split-vpn&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/peacey/split-vpn&#34;&gt;https://github.com/peacey/split-vpn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A split tunnel VPN script for the UDM with policy based routing. This helper script can be used on your UDM to route select VLANs, clients, or even domains through a VPN connection. It supports OpenVPN, WireGuard, and OpenConnect (Cisco AnyConnect) clients running directly on your UDM, and external VPN clients running on other servers on your network.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;DNS Providers&lt;/h2&gt; &#xA;&lt;p&gt;Install a DNS server that functions as a network-wide ad and tracker blocker, and which can also securely proxy encrypted DNS requests to an upstream DNS provider. Begin by following the instructions to setup &lt;a href=&#34;https://github.com/unifi-utilities/unifios-utilities/tree/main/on-boot-script&#34;&gt;on-boot-script&lt;/a&gt; and &lt;a href=&#34;https://github.com/unifi-utilities/unifios-utilities/tree/main/dns-common/on_boot.d&#34;&gt;dns-common&lt;/a&gt;. Then, follow the guides below to setup either Pi-Hole, NextDNS, or AdGuard Home.&lt;/p&gt; &#xA;&lt;h3&gt;dns-common&lt;/h3&gt; &#xA;&lt;p&gt;Base configuration for DNS server containers, both IPv4 and IPv6. Utilizes MacVLAN CNI plugins to completely isolate the network stack.&lt;/p&gt; &#xA;&lt;h3&gt;nextdns&lt;/h3&gt; &#xA;&lt;p&gt;Run NextDNS on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;run-pihole&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PiHole w/ DoH Image. Run Pi-hole on your UDM with podman. Also contains custom image for Pi-hole with &lt;code&gt;cloudflared&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;PiHole with DoTe&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole-dote.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Designed by: &lt;a href=&#34;https://github.com/chrisstaite/DoTe/&#34;&gt;https://github.com/chrisstaite/DoTe/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternative to mine which uses DoTe&lt;/p&gt; &#xA;&lt;h3&gt;AdguardHome&lt;/h3&gt; &#xA;&lt;p&gt;Run AdguardHome on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;Cloudflare DDNS&lt;/h3&gt; &#xA;&lt;p&gt;Update your cloudflare domains from your UDM with podman.&lt;/p&gt; &#xA;&lt;h2&gt;Cool projects you can use with this&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;multicast-relay&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/multicast-relay&#34;&gt;https://hub.docker.com/r/scyto/multicast-relay&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/alsmith/multicast-relay&#34;&gt;https://github.com/alsmith/multicast-relay&lt;/a&gt; to provide mDNS and SSDP on a unifi dream machine. It will likely work on any multi homed host.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mqtt-mosquitto&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/_/eclipse-mosquitto&#34;&gt;https://hub.docker.com/_/eclipse-mosquitto&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Eclipse Mosquitto is an open source message broker which implements MQTT version 5, 3.1.1 and 3.1.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ntopng&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tusc/ntopng-udm&#34;&gt;https://github.com/tusc/ntopng-udm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Much better network stats for your UDM/P! Install this docker container and create an on_boot script to make sure it&#39;s always running.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LetsEncrypt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kchristensen/udm-le&#34;&gt;https://github.com/kchristensen/udm-le&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision and renew LetsEncrypt SSL certs from your UDM/P.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ubios-cert&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/alxwolf/ubios-cert&#34;&gt;https://github.com/alxwolf/ubios-cert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Similar to &lt;code&gt;udm-le&lt;/code&gt;, adding different providers for SSL/TLS certificates (LE, ZeroSSL, BuyPass) and DNS API (all-inkl.com) currently not supported by &lt;a href=&#34;https://go-acme.github.io/lego/dns/&#34;&gt;LEGO&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Unifi API Browser&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/unifibrowser&#34;&gt;https://hub.docker.com/r/scyto/unifibrowser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/Art-of-WiFi/UniFi-API-browser&#34;&gt;https://github.com/Art-of-WiFi/UniFi-API-browser&lt;/a&gt; to provide a graphical tool to inspect the data structures available via the unifi API.Great if you are using the REST API for your own purposes and want to explore.Works with multiple controller versions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ubnt-auto-fan-speed&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/renedis/ubnt-auto-fan-speed&#34;&gt;https://github.com/renedis/ubnt-auto-fan-speed&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A shell script with the goal to make the UDM-Pro silenced while still having good thermal values.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rclone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rclone.org/&#34;&gt;https://rclone.org/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run rclone container with Web GUI for offsite backups.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;udm-proxy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xpherism/udm-proxy&#34;&gt;https://github.com/xpherism/udm-proxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a reverse proxy (using caddy in vlan) on the udm-pro.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telegram-Notifications On WAN Failover&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/fire1ce/UDM-Failover-Telegram-Notifications&#34;&gt;https://github.com/fire1ce/UDM-Failover-Telegram-Notifications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use telegram bot to be notified of a wan failover with local account&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Unsupported / No longer maintained&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;suricata&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Updates suricata to a recent version. Now in firmware&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jumbo Frames&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kalenarndt/udmp-jumbo-frames&#34;&gt;https://github.com/kalenarndt/udmp-jumbo-frames&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;native jumbo frame support for the UDM and UDM-Pro is added in the 1.12.13 EA firmware, support for the UDM-SE is not yet announced.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>