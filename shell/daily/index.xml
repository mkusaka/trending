<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-29T01:37:01Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wukongdaily/gl-inet-onescript</title>
    <updated>2024-03-29T01:37:01Z</updated>
    <id>tag:github.com,2024-03-29:/wukongdaily/gl-inet-onescript</id>
    <link href="https://github.com/wukongdaily/gl-inet-onescript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;该项目可以让MT2500/MT3000/MT6000路由器在不刷机情况下,一键变成iStoreOS风格。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GL-iNet 系列路由器 一键iStoreOS风格化脚本&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wukongdaily/gl-inet-onescript/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/wukongdaily/gl-inet-onescript.svg?label=LICENSE&amp;amp;logo=github&amp;amp;logoColor=%20&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/wukongdaily/gl-inet-onescript.svg?style=flat&amp;amp;logo=appveyor&amp;amp;label=Stars&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/wukongdaily/gl-inet-onescript.svg?style=flat&amp;amp;logo=appveyor&amp;amp;label=Forks&amp;amp;logo=github&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤔 这是什么？&lt;/h2&gt; &#xA;&lt;p&gt;该项目可以让MT2500/MT3000/MT6000路由器在不刷机情况下,一键变成iStoreOS风格。&lt;br&gt;&lt;br&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/MT6000-0?style=flat-square&amp;amp;logoColor=8A2BE2&amp;amp;label=%E5%9E%8B%E5%8F%B7&amp;amp;labelColor=000000&amp;amp;color=336666&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/MT2500A-0?style=flat-square&amp;amp;logoColor=8A2BE2&amp;amp;label=%E5%9E%8B%E5%8F%B7&amp;amp;labelColor=000000&amp;amp;color=D94600&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/MT3000-0?style=flat-square&amp;amp;logoColor=8A2BE2&amp;amp;label=%E5%9E%8B%E5%8F%B7&amp;amp;labelColor=000000&amp;amp;color=2828FF&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💡 特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;一键安装iStoreOS风格&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;一键安装紫色的Argon主题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;💻 支持&lt;code&gt;一键安装文件管理器&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔑 支持&lt;code&gt;一键设置MT-3000风扇开始工作的温度&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌏 支持&lt;code&gt;一键部署Docker运行环境&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌏 支持&lt;code&gt;一键安装docker-compose&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐋 支持&lt;code&gt;一键安装GL原厂adguardhome&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;📕 支持&lt;code&gt;一键恢复原厂的OPKG软件源&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;💡 使用条件：GL-iNet 原厂固件（非测试版、预览版）&lt;/li&gt; &#xA; &lt;li&gt;GL-inet MT-6000✅&lt;/li&gt; &#xA; &lt;li&gt;GL-inet MT-3000 ✅&lt;/li&gt; &#xA; &lt;li&gt;GL-inet MT-2500 ✅&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 快速上手&lt;/h2&gt; &#xA;&lt;h3&gt;1. SSH连接到路由器,或者在路由器终端执行如下命令&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O gl-inet.sh https://raw.githubusercontent.com/wukongdaily/gl-inet-onescript/master/gl-inet.sh?$(date +%s) &amp;amp;&amp;amp; chmod +x gl-inet.sh &amp;amp;&amp;amp; ./gl-inet.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;或者是备用仓库地址（内地可用）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O gl-inet.sh https://gitee.com/wukongdaily/gl_onescript/raw/master/gl-inet.sh?$(date +%s) &amp;amp;&amp;amp; chmod +x gl-inet.sh &amp;amp;&amp;amp; ./gl-inet.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;下次如何调用,在当前目录下执行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh gl-inet.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.单独安装Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O do_docker.sh https://raw.githubusercontent.com/wukongdaily/gl-inet-onescript/master/docker/do_docker.sh?$(date +%s) &amp;amp;&amp;amp; chmod +x do_docker.sh &amp;amp;&amp;amp; ./do_docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.单独安装iStore商店&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O /tmp/reinstall_istore.sh https://gitee.com/wukongdaily/gl_onescript/raw/master/reinstall_istore.sh &amp;amp;&amp;amp; chmod +x /tmp/reinstall_istore.sh &amp;amp;&amp;amp; /tmp/reinstall_istore.sh&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4.单独安装文件管理器&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O /tmp/reinstall_istore.sh https://gitee.com/wukongdaily/gl_onescript/raw/master/reinstall_istore.sh &amp;amp;&amp;amp; chmod +x /tmp/reinstall_istore.sh &amp;amp;&amp;amp; /tmp/reinstall_istore.sh&#xA;/tmp/is-opkg install app-meta-linkease&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5.新手ssh连接注意事项&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wukongdaily/HowToUseSSH&#34;&gt;https://github.com/wukongdaily/HowToUseSSH&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6.使用独立版docker-compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 注意上述代码中使用的是独立版docker-compose，并非标准安装的docker compose&#xA;# 区别就是中间没有空格是一个独立的可执行文件。当然这个叫做docker-compose的可执行文件，&#xA;# 你可以任意命名，不过就是习惯这样写，还有的人重命名为docker_compose之类的都可以。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;辅助视频教程⬇️&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1YJ4m1L7A3/&#34;&gt;https://www.bilibili.com/video/BV1YJ4m1L7A3/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Docker面板的选择&lt;/h1&gt; &#xA;&lt;h2&gt;🔑 安装1panel 面板 来管理Docker 容器&lt;/h2&gt; &#xA;&lt;h3&gt;可以使用 docker离线包加载&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;国内地址 https://pan.baidu.com/s/1Zh913sP6rZWXmhC_rKjWQA?pwd=1111&#xA;&#xA;备选地址 https://drive.google.com/drive/folders/15HL-lHxW9J74Fwwebrg0lMjRsenScWnO&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;上传到U盘其他空间(这里注意是/mnt/upan_data)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker load &amp;lt; /mnt/upan_data/1panel-arm64.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;    --name 1panel \&#xA;    --restart always \&#xA;    --network host \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    -v /www/data/1panel-data:/opt \&#xA;    -e TZ=Asia/Shanghai \&#xA;    moelin/1panel:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;默认端口：10086&lt;/li&gt; &#xA; &lt;li&gt;默认账户：1panel&lt;/li&gt; &#xA; &lt;li&gt;默认密码：1panel_password&lt;/li&gt; &#xA; &lt;li&gt;默认入口：entrance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;访问地址&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;http://192.168.8.1:10086/entrance&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔑 安装Fast OS面板 来管理Docker 容器&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;--name fastos \&#xA;--restart always \&#xA;-p 8081:8081 \&#xA;-p 8082:8082 \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;-v /etc/docker/:/etc/docker/ \&#xA;-v /root/data:/fast/data \&#xA;-e FAST_STORE=http://dockernb.com:8300 \&#xA;wangbinxingkong/fast:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fast OS 面板离线包&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://pan.baidu.com/s/1S5jxahCzE-HyIa-mUvOcZQ?pwd=1111&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🗂️ 引用项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目的开发参照了以下项目，感谢这些开源项目的作者：&lt;/p&gt; &#xA;&lt;h3&gt;istore&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/linkease/istore&#34;&gt;https://github.com/linkease/istore&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wukongdaily/gl-inet-onescript/assets/143675923/0ff6cb12-0812-4198-b97b-30698da6a8c4&#34; alt=&#34;mt3000&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;其他docker举例 盒子助手docker版&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --restart unless-stopped \&#xA;  --name tvhelper \&#xA;  -p 2299:22 \&#xA;  -p 2288:80 \&#xA;  -v &#34;/mnt/upan_data/tvhelper_data:/tvhelper/shells/data&#34; \&#xA;  -e PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/android-sdk/platform-tools \&#xA;  wukongdaily/box:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;常见问题&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1、如果你发现运行容器后,访问docker容器的web界面之后，路由器的指示灯发生闪烁，不用慌，其实没有断网。 wan口网线拔了再插上就好了。其实不处理也无所谓的。闪烁也不代表没有网络。不准确的。&lt;/li&gt; &#xA; &lt;li&gt;2、如果你发现运行容器后,访问不了docker容器的web界面。一般重启路由器就能解决。&lt;/li&gt; &#xA; &lt;li&gt;3、请注意为了节省路由器空间,平时上传文件 最好是上传到 /mnt/upan_data 这个目录下。因为这是U盘空间，比较大。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>