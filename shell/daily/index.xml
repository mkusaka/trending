<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-05T01:45:36Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nftblackmagic/sdwebui-api-manager</title>
    <updated>2023-07-05T01:45:36Z</updated>
    <id>tag:github.com,2023-07-05:/nftblackmagic/sdwebui-api-manager</id>
    <link href="https://github.com/nftblackmagic/sdwebui-api-manager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Problem of stable diffusion webui&lt;/h2&gt; &#xA;&lt;p&gt;Stable diffusion webui provides a powerful tool for AI image generation. However, the webui api has some limitations:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;a blocking REST api call, which might take more than 30s to return the final value. Most gateways don&#39;t allow such long blocking time on api call.&lt;/li&gt; &#xA; &lt;li&gt;webui api is a single thread process. Once the thread is occupied, other webui api will fail. (Even though there is a multi thread mode in stable diffusion webui)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This repo is aiming to solve the above problems.&lt;/p&gt; &#xA;&lt;h2&gt;Preconditions:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;Stable diffusion Webui&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inspired by the project&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marciovrl/fastapi-example.git&#34;&gt;https://github.com/marciovrl/fastapi-example.git&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run local&lt;/h2&gt; &#xA;&lt;h3&gt;Before run this project, please make sure you launched the stable diffusion webui api.&lt;/h3&gt; &#xA;&lt;h3&gt;Install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;uvicorn app.main:app --reload --port 5001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- ### Run test&#xA;&#xA;```&#xA;pytest app/test.py&#xA;```&#xA;&#xA;## Run with docker&#xA;&#xA;### Run server&#xA;&#xA;```&#xA;docker-compose up -d --build&#xA;```&#xA;&#xA;### Run test&#xA;&#xA;```&#xA;docker-compose exec app pytest test/test.py&#xA;``` --&gt; &#xA;&lt;h2&gt;API documentation (provided by Swagger UI)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://127.0.0.1:8000/docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- ### Run server&#xA;&#xA;```&#xA;docker-compose exec db psql --username=fastapi --dbname=fastapi_dev&#xA;``` --&gt; &#xA;&lt;h2&gt;Model swtich&lt;/h2&gt; &#xA;&lt;p&gt;There is an extra filed in txt2img/img2img api:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;options: Optional[dict]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can swtich stable diffusion by using this options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;options&#34;:&#xA;{&#xA;&#34;sd_model_checkpoint&#34;: &amp;lt;The model you want to use&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>