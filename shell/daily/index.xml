<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-10T01:53:38Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mzet-/linux-exploit-suggester</title>
    <updated>2022-06-10T01:53:38Z</updated>
    <id>tag:github.com,2022-06-10:/mzet-/linux-exploit-suggester</id>
    <link href="https://github.com/mzet-/linux-exploit-suggester" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux privilege escalation auditing tool&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;LES: Linux privilege escalation auditing tool&lt;/h2&gt; &#xA;&lt;p&gt;Quick download:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh -O les.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Details about LES usage and inner workings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://mzet-.github.io/2019/05/10/les-paper.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional resources for the LES:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/mzet-/les-res&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;LES tool is designed to assist in detecting security deficiencies for given Linux kernel/Linux-based machine. It provides following functionality:&lt;/p&gt; &#xA;&lt;h3&gt;Assessing kernel exposure on publicly known exploits&lt;/h3&gt; &#xA;&lt;p&gt;Tool assesses (using heuristics methods discussed in details &lt;a href=&#34;https://mzet-.github.io/2019/05/10/les-paper.html&#34;&gt;here&lt;/a&gt;) exposure of the given kernel on every publicly known Linux kernel exploit. Example of tool output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh&#xA;...&#xA;[+] [CVE-2017-16995] eBPF_verifier&#xA;&#xA;   Details: https://ricklarabee.blogspot.com/2018/07/ebpf-and-analysis-of-get-rekt-linux.html&#xA;   Exposure: highly probable&#xA;   Tags: debian=9.0{kernel:4.9.0-3-amd64},fedora=25|26|27,[ ubuntu=14.04 ]{kernel:4.4.0-89-generic},ubuntu=(16.04|17.04){kernel:4.(8|10).0-(19|28|45)-generic}&#xA;   Download URL: https://www.exploit-db.com/download/45010&#xA;   Comments: CONFIG_BPF_SYSCALL needs to be set &amp;amp;&amp;amp; kernel.unprivileged_bpf_disabled != 1&#xA;&#xA;[+] [CVE-2017-1000112] NETIF_F_UFO&#xA;&#xA;   Details: http://www.openwall.com/lists/oss-security/2017/08/13/1&#xA;   Exposure: probable&#xA;   Tags: [ ubuntu=14.04{kernel:4.4.0-*} ],ubuntu=16.04{kernel:4.8.0-*}&#xA;   Download URL: https://raw.githubusercontent.com/xairy/kernel-exploits/master/CVE-2017-1000112/poc.c&#xA;   ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/cve-2017-1000112/CVE-2017-1000112/poc.c&#xA;   Comments: CAP_NET_ADMIN cap or CONFIG_USER_NS=y needed. SMEP/KASLR bypass included. Modified version at &#39;ext-url&#39; adds support for additional distros/kernels&#xA;&#xA;[+] [CVE-2016-8655] chocobo_root&#xA;&#xA;   Details: http://www.openwall.com/lists/oss-security/2016/12/06/1&#xA;   Exposure: probable&#xA;   Tags: [ ubuntu=(14.04|16.04){kernel:4.4.0-(21|22|24|28|31|34|36|38|42|43|45|47|51)-generic} ]&#xA;   Download URL: https://www.exploit-db.com/download/40871&#xA;   Comments: CAP_NET_RAW capability is needed OR CONFIG_USER_NS=y needs to be enabled&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For each exploit, exposure is calculated. Following &#39;Exposure&#39; states are possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Highly probable&lt;/strong&gt; - assessed kernel is most probably affected and there&#39;s a very good chance that PoC exploit will work out of the box without any major modifications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Probable&lt;/strong&gt; - it&#39;s possible that exploit will work but most likely customization of PoC exploit will be needed to suit your target.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Less probable&lt;/strong&gt; - additional manual analysis is needed to verify if kernel is affected.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unprobable&lt;/strong&gt; - highly unlikely that kernel is affected (exploit is not displayed in the tool&#39;s output)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Verifying state of kernel hardening security measures&lt;/h3&gt; &#xA;&lt;p&gt;LES can check for most of security settings available by your Linux kernel. It verifies not only the kernel compile-time configurations (CONFIGs) but also verifies run-time settings (sysctl) giving more complete picture of security posture for running kernel. This functionality is modern continuation of &lt;code&gt;--kernel&lt;/code&gt; switch from &lt;a href=&#34;http://www.trapkit.de/tools/checksec.html&#34;&gt;checksec.sh&lt;/a&gt; tool by Tobias Klein. Example of tool output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh --checksec&#xA;&#xA;Mainline kernel protection mechanisms:&#xA;&#xA; [ Disabled ] GCC stack protector support (CONFIG_HAVE_STACKPROTECTOR)&#xA;              https://github.com/mzet-/les-res/blob/master/features/stackprotector-regular.md&#xA;&#xA; [ Disabled ] GCC stack protector STRONG support (CONFIG_STACKPROTECTOR_STRONG)&#xA;              https://github.com/mzet-/les-res/blob/master/features/stackprotector-strong.md&#xA;&#xA; [ Enabled  ] Low address space to protect from user allocation (CONFIG_DEFAULT_MMAP_MIN_ADDR)&#xA;              https://github.com/mzet-/les-res/blob/master/features/mmap_min_addr.md&#xA;&#xA; [ Disabled ] Restrict unprivileged access to kernel syslog (CONFIG_SECURITY_DMESG_RESTRICT)&#xA;              https://github.com/mzet-/les-res/blob/master/features/dmesg_restrict.md&#xA;&#xA; [ Enabled  ] Randomize the address of the kernel image (KASLR) (CONFIG_RANDOMIZE_BASE)&#xA;              https://github.com/mzet-/les-res/blob/master/features/kaslr.md&#xA;&#xA; [ Disabled ] Hardened user copy support (CONFIG_HARDENED_USERCOPY)&#xA;              https://github.com/mzet-/les-res/blob/master/features/hardened_usercopy.md&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Assess exposure of the Linux box on publicly known exploits:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Show state of security features on the Linux box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh --checksec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assess exposure of Linux kernel on publicly known exploits based on the provided &#39;uname&#39; string (i.e. output of &lt;code&gt;uname -a&lt;/code&gt; command):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh --uname &amp;lt;uname-string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more usage examples, see &lt;a href=&#34;https://mzet-.github.io/2019/05/10/les-paper.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting involved&lt;/h2&gt; &#xA;&lt;p&gt;You hopefully now know what LES is and what it can do for you. Now see what you can do for LES:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add newly published Linux privilege escalation exploits to it.&lt;/li&gt; &#xA; &lt;li&gt;Test existing exploits on various Linux distributions with multiple kernel versions, then document your findings in a form of &lt;code&gt;Tags&lt;/code&gt; in LES, e.g. of a tag: &lt;code&gt;ubuntu=12.04{kernel:3.(2|5).0-(23|29)-generic}&lt;/code&gt; which states: &lt;em&gt;tagged exploit was verifed to work correctly on Ubuntu 12.04 with kernels: 3.2.0-23-generic, 3.2.0-29-generic, 3.5.0-23-generic and 3.5.0-29-generic;&lt;/em&gt;. With this tag added LES will automatically highlight and bump dynamic &lt;code&gt;Rank&lt;/code&gt; of the exploit when run on Ubuntu 12.04 with one of listed kernel versions. This will help you (and others) during pentests to rapidly identify critically vulnerable Linux machines.&lt;/li&gt; &#xA; &lt;li&gt;Published exploits are often written only for PoC purposes only for one (or couple of) specific Linux distributions and/or kernel version(s). Pick sources of the exploit of choice and customize it to run on different kernel version(s). Then add your customized version of exploit as &lt;code&gt;ext-url&lt;/code&gt; entry to LES and modify &lt;code&gt;Tags&lt;/code&gt; to reflect newly added targets. See &lt;a href=&#34;https://ricklarabee.blogspot.com/2017/12/adapting-poc-for-cve-2017-1000112-to.html&#34;&gt;this&lt;/a&gt; article for an excellent example of adapting specific PoC exploit to different kernel versions.&lt;/li&gt; &#xA; &lt;li&gt;Conduct source code analysis of chosen kernel hardening security measure then add it to the &lt;code&gt;FEATURES&lt;/code&gt; array (if not already there) and publish your analysis at: &lt;code&gt;https://github.com/mzet-/les-res/blob/master/features/&amp;lt;feature-name&amp;gt;.md&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Acknowledgments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bcoles/&#34;&gt;bcoles&lt;/a&gt; for his excellent and frequent contributions to LES.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>drwetter/testssl.sh</title>
    <updated>2022-06-10T01:53:38Z</updated>
    <id>tag:github.com,2022-06-10:/drwetter/testssl.sh</id>
    <link href="https://github.com/drwetter/testssl.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Testing TLS/SSL encryption anywhere on any port&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;!-- [![Travis CI Status](https://img.shields.io/travis/drwetter/testssl.sh)](https://travis-ci.org/drwetter/testssl.sh)  --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/drwetter/testssl.sh/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/drwetter/testssl.sh/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/drwetter/testssl.sh?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/drwetter/testssl.sh/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/drwetter/testssl.sh&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/drwetter/testssl.sh/raw/3.1dev/Dockerfile.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/drwetter/testssl.sh&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;testssl.sh&lt;/code&gt; is a free command line tool which checks a server&#39;s service on any port for the support of TLS/SSL ciphers, protocols as well as some cryptographic flaws.&lt;/p&gt; &#xA;&lt;h3&gt;Key features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clear output: you can tell easily whether anything is good or bad.&lt;/li&gt; &#xA; &lt;li&gt;Machine readable output (CSV, two JSON formats)&lt;/li&gt; &#xA; &lt;li&gt;No need to install or to configure something. No gems, CPAN, pip or the like.&lt;/li&gt; &#xA; &lt;li&gt;Works out of the box: Linux, OSX/Darwin, FreeBSD, NetBSD, MSYS2/Cygwin, WSL (bash on Windows). Only OpenBSD needs bash.&lt;/li&gt; &#xA; &lt;li&gt;A Dockerfile is provided, there&#39;s also an official container build @ dockerhub.&lt;/li&gt; &#xA; &lt;li&gt;Flexibility: You can test any SSL/TLS enabled and STARTTLS service, not only web servers at port 443.&lt;/li&gt; &#xA; &lt;li&gt;Toolbox: Several command line options help you to run &lt;em&gt;your&lt;/em&gt; test and configure &lt;em&gt;your&lt;/em&gt; output.&lt;/li&gt; &#xA; &lt;li&gt;Reliability: features are tested thoroughly.&lt;/li&gt; &#xA; &lt;li&gt;Privacy: It&#39;s only you who sees the result, not a third party.&lt;/li&gt; &#xA; &lt;li&gt;Freedom: It&#39;s 100% open source. You can look at the code, see what&#39;s going on.&lt;/li&gt; &#xA; &lt;li&gt;The development is open (GitHub) and participation is welcome.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;This software is free. You can use it under the terms of GPLv2, see LICENSE.&lt;/p&gt; &#xA;&lt;p&gt;Attribution is important for the future of this project -- also in the internet. Thus if you&#39;re offering a scanner based on testssl.sh as a public and/or paid service in the internet you are strongly encouraged to mention to your audience that you&#39;re using this program and where to get this program from. That helps us to get bugfixes, other feedback and more contributions.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;Testssl.sh is working on every Linux/BSD distribution out of the box. Latest by 2.9dev most of the limitations of disabled features from the openssl client are gone due to bash-socket-based checks. As a result you can also use e.g. LibreSSL or OpenSSL &amp;gt;= 1.1.1 . testssl.sh also works on other unixoid systems out of the box, supposed they have &lt;code&gt;/bin/bash&lt;/code&gt; &amp;gt;= version 3.2 and standard tools like sed and awk installed. An implicit (silent) check for binaries is done when you start testssl.sh . System V needs probably to have GNU grep installed. MacOS X and Windows (using MSYS2, Cygwin or WSL) work too.&lt;/p&gt; &#xA;&lt;p&gt;Update notification here or @ &lt;a href=&#34;https://twitter.com/drwetter&#34;&gt;twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;You can download testssl.sh branch 3.1dev just by cloning this git repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/drwetter/testssl.sh.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Think of 3.1dev like a rolling release, see below. For the stable version help yourself by downloading the &lt;a href=&#34;https://codeload.github.com/drwetter/testssl.sh/zip/3.0.4&#34;&gt;ZIP&lt;/a&gt; or &lt;a href=&#34;https://codeload.github.com/drwetter/testssl.sh/tar.gz/3.0.4&#34;&gt;tar.gz&lt;/a&gt; archive. Just &lt;code&gt;cd&lt;/code&gt; to the directory created (=INSTALLDIR) and run it off there.&lt;/p&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;Testssl.sh has minimal requirements. As stated you don&#39;t have to install or build anything. You can just run it from the pulled/cloned directory. Still if you don&#39;t want to pull the GitHub repo to your directory of choice you can pull a container from dockerhub and run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -ti  drwetter/testssl.sh &amp;lt;your_cmd_line&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if you have cloned this repo you also can just &lt;code&gt;cd&lt;/code&gt; to the INSTALLDIR and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build . -t imagefoo &amp;amp;&amp;amp; docker run --rm -t imagefoo example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more please consult &lt;a href=&#34;https://github.com/drwetter/testssl.sh/raw/3.1dev/Dockerfile.md&#34;&gt;Dockerfile.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Status&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re currently in the development phase, version 3.1dev. 3.1dev will eventually become 3.2. Bigger features are developed in a separate branch before merged into 3.1dev to avoid hiccups or inconsistencies. Albeit we try to keep 3.1dev as solid as possible things will certainly change in 3.1dev. Think of the 3.1dev branch like a rolling release. So if you need stability the 3.0 branch is better for you.&lt;/p&gt; &#xA;&lt;p&gt;Version 3.0.X receives bugfixes, labeled as 3.0.1, 3.0.2 and so on. This will happen until 3.2 is released.&lt;/p&gt; &#xA;&lt;p&gt;Support for 2.9.5 has been dropped. Supported is &amp;gt;= 3.0.x only.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.. it is there for reading. Please do so :-) -- at least before asking questions. See man page in groff, html and markdown format in &lt;code&gt;~/doc/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testssl.sh/&#34;&gt;https://testssl.sh/&lt;/a&gt; will help to get you started.&lt;/li&gt; &#xA; &lt;li&gt;For the (older) version 2.8 will Hunt provides a longer, good &lt;a href=&#34;https://www.4armed.com/blog/doing-your-own-ssl-tls-testing/&#34;&gt;description&lt;/a&gt;, including useful background info.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Contributions are welcome! See &lt;a href=&#34;https://github.com/drwetter/testssl.sh/raw/3.1dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details. Please also have a look at the &lt;a href=&#34;https://github.com/drwetter/testssl.sh/raw/3.1dev/Coding_Convention.md&#34;&gt;Coding Convention&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Bug reports&lt;/h3&gt; &#xA;&lt;p&gt;Bug reports are important. It makes this project more robust.&lt;/p&gt; &#xA;&lt;p&gt;Please file bugs in the issue tracker @ GitHub. Do not forget to provide detailed information, see template for issue, and further details @ &lt;a href=&#34;https://github.com/drwetter/testssl.sh/wiki/Bug-reporting&#34;&gt;https://github.com/drwetter/testssl.sh/wiki/Bug-reporting&lt;/a&gt;. Nobody can read your thoughts -- yet. And only agencies your screen ;-)&lt;/p&gt; &#xA;&lt;p&gt;You can also debug yourself, see &lt;a href=&#34;https://github.com/drwetter/testssl.sh/wiki/Findings-and-HowTo-Fix-them&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;External/related projects&lt;/h3&gt; &#xA;&lt;p&gt;Please address questions not specifically to the code of testssl.sh to the respective projects below.&lt;/p&gt; &#xA;&lt;h4&gt;Web frontend&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johannesschaefer/webnettools&#34;&gt;https://github.com/johannesschaefer/webnettools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TKCERT/testssl.sh-webfrontend&#34;&gt;https://github.com/TKCERT/testssl.sh-webfrontend&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Free to use Web frontend + commercial API&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inspect.rapydblok.com&#34;&gt;https://inspect.rapydblok.com&lt;/a&gt; (see also &lt;a href=&#34;https://inspect.rapydblok.com/about&#34;&gt;https://inspect.rapydblok.com/about&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Mass scanner w parallel scans and elastic searching the results&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TKCERT/testssl.sh-masscan&#34;&gt;https://github.com/TKCERT/testssl.sh-masscan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Another ready-to-go docker image is at:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quay.io/repository/jumanjiman/testssl&#34;&gt;https://quay.io/repository/jumanjiman/testssl&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Privacy checker using testssl.sh&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://privacyscore.org&#34;&gt;https://privacyscore.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Nagios / Icinga Plugins&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dnmvisser/nagios-testssl&#34;&gt;https://github.com/dnmvisser/nagios-testssl&lt;/a&gt; (Python 3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitgud.malvager.net/Wazakindjes/icinga2_plugins/src/master/check_testssl.sh&#34;&gt;https://gitgud.malvager.net/Wazakindjes/icinga2_plugins/src/master/check_testssl.sh&lt;/a&gt; (Shell)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Brew package&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;see &lt;a href=&#34;https://github.com/drwetter/testssl.sh/issues/233&#34;&gt;#233&lt;/a&gt; and &lt;a href=&#34;https://github.com/Homebrew/homebrew&#34;&gt;https://github.com/Homebrew/homebrew&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Daemon for batch execution of testssl.sh command files&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitsofinfo/testssl.sh-processor&#34;&gt;https://github.com/bitsofinfo/testssl.sh-processor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Daemon for batch processing of testssl.sh JSON result files for sending Slack alerts, reactive copying etc&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitsofinfo/testssl.sh-alerts&#34;&gt;https://github.com/bitsofinfo/testssl.sh-alerts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;GitHub Actions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace/actions/testssl-sh-scan&#34;&gt;https://github.com/marketplace/actions/testssl-sh-scan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Security-Onion-Solutions/securityonion</title>
    <updated>2022-06-10T01:53:38Z</updated>
    <id>tag:github.com,2022-06-10:/Security-Onion-Solutions/securityonion</id>
    <link href="https://github.com/Security-Onion-Solutions/securityonion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Security Onion 2 - Linux distro for threat hunting, enterprise security monitoring, and log management&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Security Onion 2.3.130&lt;/h2&gt; &#xA;&lt;p&gt;Security Onion 2.3.130 is here!&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Alerts &lt;img src=&#34;https://raw.githubusercontent.com/Security-Onion-Solutions/securityonion/master/assets/images/screenshots/alerts.png&#34; alt=&#34;Alerts&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dashboards &lt;img src=&#34;https://raw.githubusercontent.com/Security-Onion-Solutions/securityonion/master/assets/images/screenshots/dashboards.png&#34; alt=&#34;Dashboards&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hunt &lt;img src=&#34;https://raw.githubusercontent.com/Security-Onion-Solutions/securityonion/master/assets/images/screenshots/hunt.png&#34; alt=&#34;Hunt&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cases &lt;img src=&#34;https://raw.githubusercontent.com/Security-Onion-Solutions/securityonion/master/assets/images/screenshots/cases-comments.png&#34; alt=&#34;Cases&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Release Notes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.securityonion.net/en/2.3/release-notes.html&#34;&gt;https://docs.securityonion.net/en/2.3/release-notes.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.securityonion.net/en/2.3/hardware.html&#34;&gt;https://docs.securityonion.net/en/2.3/hardware.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.securityonion.net/en/2.3/download.html&#34;&gt;https://docs.securityonion.net/en/2.3/download.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.securityonion.net/en/2.3/installation.html&#34;&gt;https://docs.securityonion.net/en/2.3/installation.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.securityonion.net/en/2.3/faq.html&#34;&gt;https://docs.securityonion.net/en/2.3/faq.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Feedback&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.securityonion.net/en/2.3/community-support.html&#34;&gt;https://docs.securityonion.net/en/2.3/community-support.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>