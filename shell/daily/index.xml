<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-05T01:42:53Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emrekybs/AD-AssessmentKit</title>
    <updated>2024-01-05T01:42:53Z</updated>
    <id>tag:github.com,2024-01-05:/emrekybs/AD-AssessmentKit</id>
    <link href="https://github.com/emrekybs/AD-AssessmentKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Contains a collection of Bash scripts designed for comprehensive security audits and network mapping of Active Directory (AD) environments. The scripts automate various tasks including LDAP querying, Kerberos ticket analysis, SMB enumeration, and exploitation of known vulnerabilities like Zerologon and PetitPotam.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;[&lt;img src=&#34;https://img.shields.io/badge/MadeBy-EmreKybs-greem&#34; alt=&#34;EmreKybs&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AD-AssessmentKit&lt;/h1&gt; &#xA;&lt;p&gt;These tools are ideal for network administrators and cybersecurity professionals seeking to assess and enhance the security posture of AD environments and network infrastructures.&lt;/p&gt; &#xA;&lt;h1&gt;AD-SecurityAudit.sh&lt;/h1&gt; &#xA;&lt;p&gt;Focuses on initial reconnaissance and vulnerability identification in AD domains, requiring only the domain name and Domain Controller IP address.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/emrekybs/AutoMapExec/raw/main/1.png&#34;&gt; &#xA;&lt;h3&gt;Key Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LDAP and Service Account Queries: Conducts LDAP searches targeting service accounts in the AD.&lt;/li&gt; &#xA; &lt;li&gt;Kerberos Ticket Analysis: Uses Impacket&#39;s tools for analyzing Kerberos ticket vulnerabilities and identifying accounts without pre-authentication&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive Kerberos and SMB Enumeration: Employs SilentHound and Enum4linux-ng for Kerberos auditing and detailed SMB, user, and system information scanning.&lt;/li&gt; &#xA; &lt;li&gt;Enumeration Techniques: Implements RID brute-force and NetExec SMB enumeration for discovering user accounts, groups, and security policies.&lt;/li&gt; &#xA; &lt;li&gt;Exploitation of Windows Services: Executes Zerologon and PetitPotam attacks to target known vulnerabilities.&lt;/li&gt; &#xA; &lt;li&gt;Execution Summary and Actionable Guidance: Completes with a success message and provides insights for further actions, such as hash cracking.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;AutoMapExec.sh&lt;/h1&gt; &#xA;&lt;p&gt;Provides in-depth security assessment and penetration testing, requiring domain, Domain Controller IP, and user credentials for a more thorough analysis.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/emrekybs/AutoMapExec/raw/main/2.png&#34;&gt; &#xA;&lt;h3&gt;Key Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Credential-Based Targeting: Uses user-provided credentials for a more thorough analysis.&lt;/li&gt; &#xA; &lt;li&gt;Kerberos Auditing and Extensive SMB Enumeration: Combines SilentHound and multiple NetExec commands for a deeper level of SMB and security analysis.&lt;/li&gt; &#xA; &lt;li&gt;Network and AD Comprehensive Scanning: Utilizes CrackMapExec for an extensive view of the network, including computer listings, local groups, and NTDS extraction.Testing Against Major Vulnerabilities: Incorporates exploitation of significant&lt;/li&gt; &#xA; &lt;li&gt;Testing Against Major Vulnerabilities: Incorporates exploitation of significant vulnerabilities like Zerologon, PetitPotam, and NoPAC.&lt;/li&gt; &#xA; &lt;li&gt;BloodHound Integration and RDP Enablement: Facilitates AD data collection for BloodHound analysis and enables Remote Desktop Protocol.&lt;/li&gt; &#xA; &lt;li&gt;Diverse Command Execution and Data Retrieval: Performs a range of system commands and retrieves the SAM database for in-depth credential analysis.&lt;/li&gt; &#xA; &lt;li&gt;Detailed Execution Overview: Concludes with a summary of successful execution, signifying the completion of a comprehensive scanning and enumeration process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;𝗜𝗡𝗦𝗧𝗔𝗟𝗟𝗔𝗧𝗜𝗢𝗡 𝗜𝗡𝗦𝗧𝗥𝗨𝗖𝗧𝗜𝗢𝗡𝗦&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ git clone https://github.com/emrekybs/AD-AssessmentKit.git&#xA;  $ cd AD-AssessmentKit&#xA;  $  chmod +x * &amp;amp;&amp;amp; bash install.sh&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>syno-community/arpl-i18n</title>
    <updated>2024-01-05T01:42:53Z</updated>
    <id>tag:github.com,2024-01-05:/syno-community/arpl-i18n</id>
    <link href="https://github.com/syno-community/arpl-i18n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated Redpill Loader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Automated Redpill Loader (i18n)&lt;/h1&gt; &#xA;&lt;p&gt;本库为 arpl i18n (多语言优化版):&lt;/p&gt; &#xA;&lt;h3&gt;原版：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/syno-community/arpl&#34;&gt;https://github.com/syno-community/arpl&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syno-community/arpl-i18n/main/arpl-README-En.md&#34;&gt;作者说明(En)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syno-community/arpl-i18n/main/arpl-README-Zh.md&#34;&gt;作者说明(Zh)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;汉化：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wjz304/arpl-zh_CN&#34;&gt;https://github.com/wjz304/arpl-zh_CN&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;仅同步汉化原版, 所以功能与原版保持一致.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;i18n:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/syno-community/arpl-i18n&#34;&gt;https://github.com/syno-community/arpl-i18n&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多语言支持.&lt;/li&gt; &#xA; &lt;li&gt;包含我的修改.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1T84y1P7Kq&#34;&gt;命令输入方法演示&lt;/a&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1T84y1P7Kq&#34;&gt;https://www.bilibili.com/video/BV1T84y1P7Kq&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt;arpl各版本间切换(菜单更新, 增量): &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# shell 下输入以下命令修改更新 repo. &#xA;# 如果要切换原版修改第二条命令中的 syno-community/arpl-i18n 为 fbelavenuto/arpl&#xA;# 如果切换中文版修改第二条命令中的 syno-community/arpl-i18n 为 wjz304/arpl-zh_CN&#xA;CURREPO=`grep &#34;github.com.*update&#34; menu.sh | sed -r &#39;s/.*com\/(.*)\/releases.*/\1/&#39;`&#xA;sed -i &#34;s|${CURREPO}|syno-community/arpl-i18n|g; s|ACTUALVERSION=\&#34;v\${ARPL_VERSION}\&#34;|ACTUALVERSION=\&#34;v0.0\&#34;|g&#34; /opt/arpl/menu.sh&#xA;# 进入设置菜单执行更新arpl操作即可.&#xA;# 更新后请重启.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;arpl各版本间切换(手动方式, 全量): &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# shell 下下载需要的版本或者手动上传到/opt/arpl/下&#xA;curl -kL https://github.com/fbelavenuto/arpl/releases/download/v1.1-beta2a/arpl-1.1-beta2a.img.zip -o /opt/arpl/arpl.zip&#xA;# 解压&#xA;unzip /opt/arpl/arpl.zip&#xA;# 挂载 img&#xA;losetup /dev/loop0 /opt/arpl/arpl.img&#xA;# 复制 p1 p3 分区&#xA;mkdir -p /mnt/loop0p1; mount /dev/loop0p1 /mnt/loop0p1; cp -r /mnt/loop0p1/* /mnt/p1/; umount /mnt/loop0p1&#xA;mkdir -p /mnt/loop0p3; mount /dev/loop0p3 /mnt/loop0p2; cp -r /mnt/loop0p3/* /mnt/p3/; umount /mnt/loop0p3&#xA;# 卸载 img&#xA;losetup -d /dev/loop0&#xA;# 如果安装的版本中无你当前安装的DSM请尽量删除 /mnt/p1/user-config.yml, /mnt/p3/*-dsm, /mnt/p2/*&#xA;rm -rf /mnt/p1/user-config.yml /mnt/p3/*-dsm /mnt/p2/*&#xA;# 重启&#xA;reboot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;翻译&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt install gettext&#xA;git clone https://github.com/syno-community/arpl-i18n.git&#xA;cd arpl-i18n/files/board/arpl/overlayfs/opt/arpl&#xA;xgettext -L Shell --keyword=TEXT *.sh -o lang/arpl.pot&#xA;sed -i &#39;s/charset=CHARSET/charset=UTF-8/&#39; lang/arpl.pot    # The above process has been completed.&#xA;msginit -i lang/arpl.pot -l zh_CN.UTF-8 -o lang/zh_CN.po    # Replace the language you need.&#xA;# translate the lang/zh_CN.po.&#xA;msgfmt lang/zh_CN.po -o lang/zh_CN.mo    # This process will be automatically processed during packaging.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;打赏一下&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/wjz304/wjz304/master/my/20220908134226.jpg&#34; width=&#34;400&#34;&gt;</summary>
  </entry>
</feed>