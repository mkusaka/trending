<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-27T01:44:28Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>binpash/try</title>
    <updated>2023-06-27T01:44:28Z</updated>
    <id>tag:github.com,2023-06-27:/binpash/try</id>
    <link href="https://github.com/binpash/try" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&#34;Do, or do not. There is no try.&#34; We&#39;re setting out to change that: `try cmd` and commit---or not.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;try&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/binpash/try/main/docs/try_logo.png&#34; alt=&#34;try logo&#34; width=&#34;100&#34; height=&#34;130&#34;&gt; &#xA;&lt;p&gt;&#34;Do, or do not. There is no try.&#34;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re setting out to change that.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/binpash/try/actions/workflows/test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/binpash/try/actions/workflows/test.yaml/badge.svg?sanitize=true&#34; alt=&#34;LocalTests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/binpash/try/main/#license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/binpash/try/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/binpash/try&#34; alt=&#34;issues - try&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;try&lt;/code&gt; lets you run a command and inspect its effects before changing your live system. &lt;code&gt;try&lt;/code&gt; uses Linux&#39;s &lt;a href=&#34;https://docs.kernel.org/userspace-api/unshare.html&#34;&gt;namespaces (via &lt;code&gt;unshare&lt;/code&gt;)&lt;/a&gt; and the &lt;a href=&#34;https://docs.kernel.org/filesystems/overlayfs.html&#34;&gt;overlayfs&lt;/a&gt; union filesystem.&lt;/p&gt; &#xA;&lt;p&gt;Please note that &lt;code&gt;try&lt;/code&gt; is a prototype and not a full sandbox, and should not be used to execute commands that you don&#39;t already trust on your system, (i.e. devices in &lt;code&gt;/dev&lt;/code&gt; are mounted in the sandbox, and network calls are all allowed.) Please do not attempt any commands that will remove everything in /dev or write zeros to your disks.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/binpash/try/main/docs/try_pip_install_example.gif&#34; alt=&#34;try gif&#34;&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Has been tested on the following distributions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Ubuntu 20.04 LTS&lt;/code&gt; or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Debian 12&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Centos 9 Stream 5.14.0-325.el9&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Arch 6.1.33-1-lts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alpine 6.1.34-1-lts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Rocky 9 5.14.0-284.11.1.el9_2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SteamOS 3.4.8 5.13.0-valve36-1-neptune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;p&gt;You only need the &lt;a href=&#34;https://raw.githubusercontent.com/binpash/try/main/try&#34;&gt;&lt;code&gt;try&lt;/code&gt; script&lt;/a&gt;, which you can download by cloning this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ git clone https://github.com/binpash/try.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arch Linux&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;Try&lt;/code&gt; is present in &lt;a href=&#34;https://aur.archlinux.org/packages/try&#34;&gt;AUR&lt;/a&gt;, you can install it with your preferred AUR helper:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shellsession&#34;&gt;yay -s try&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shellsession&#34;&gt;git clone https://aur.archlinux.org/try.git&#xA;cd try&#xA;makepkg -sic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;try&lt;/code&gt; is a higher-order command, like &lt;code&gt;xargs&lt;/code&gt;, &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;nohup&lt;/code&gt;, or &lt;code&gt;find&lt;/code&gt;. For example, to install a package via &lt;code&gt;pip3&lt;/code&gt;, you can invoke &lt;code&gt;try&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ try pip3 install libdash&#xA;... # output continued below&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;try&lt;/code&gt; will ask you to commit the changes made at the end of its execution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;...&#xA;Defaulting to user installation because normal site-packages is not writeable&#xA;Collecting libdash&#xA;  Downloading libdash-0.3.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (254 kB)&#xA;     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 254.6/254.6 KB 2.1 MB/s eta 0:00:00&#xA;Installing collected packages: libdash&#xA;Successfully installed libdash-0.3.1&#xA;WARNING: Running pip as the &#39;root&#39; user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv&#xA;&#xA;Changes detected in the following files:&#xA;&#xA;/tmp/tmp.zHCkY9jtIT/upperdir/home/gliargovas/.local/lib/python3.10/site-packages/libdash/ast.py (modified/added)&#xA;/tmp/tmp.zHCkY9jtIT/upperdir/home/gliargovas/.local/lib/python3.10/site-packages/libdash/_dash.py (modified/added)&#xA;/tmp/tmp.zHCkY9jtIT/upperdir/home/gliargovas/.local/lib/python3.10/site-packages/libdash/__init__.py (modified/added)&#xA;/tmp/tmp.zHCkY9jtIT/upperdir/home/gliargovas/.local/lib/python3.10/site-packages/libdash/__pycache__/printer.cpython-310.pyc (modified/added)&#xA;/tmp/tmp.zHCkY9jtIT/upperdir/home/gliargovas/.local/lib/python3.10/site-packages/libdash/__pycache__/ast.cpython-310.pyc (modified/added)&#xA;&amp;lt;snip&amp;gt;&#xA;&#xA;Commit these changes? [y/N] y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes, you might want to pre-execute a command and commit its result at a later time. Running &lt;code&gt;try -n&lt;/code&gt; will print the overlay directory on STDOUT without committing the result.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ try -n &#34;curl https://sh.rustup.rs | sh&#34;&#xA;/tmp/tmp.uCThKq7LBK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can specify your own existing overlay directory using the &lt;code&gt;-D [dir]&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ mkdir rustup-sandbox&#xA;$ try -D rustup-sandbox &#34;curl https://sh.rustup.rs | sh&#34;&#xA;$ ls rustup-sandbox&#xA;temproot  upperdir  workdir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see from the output above, &lt;code&gt;try&lt;/code&gt; has created an overlay environment in the &lt;code&gt;rustup-sandbox&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Manually inspecting upperdir reveals the changes to the files made inside the overlay during the execution of the previous command with &lt;em&gt;try&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;~/try/rustup-sandbox/upperdir$ du -hs .&#xA;1.2G    .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can inspect the changes made inside a given overlay directory using &lt;code&gt;try&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ try summary rustup-sandbox/ | head&#xA;&#xA;Changes detected in the following files:&#xA;&#xA;rustup-sandbox//upperdir/home/ubuntu/.profile (modified/added)&#xA;rustup-sandbox//upperdir/home/ubuntu/.bashrc (modified/added)&#xA;rustup-sandbox//upperdir/home/ubuntu/.rustup/update-hashes/stable-x86_64-unknown-linux-gnu (modified/added)&#xA;rustup-sandbox//upperdir/home/ubuntu/.rustup/settings.toml (modified/added)&#xA;rustup-sandbox//upperdir/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libstd-8389830094602f5a.so (modified/added)&#xA;rustup-sandbox//upperdir/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/etc/lldb_commands (modified/added)&#xA;rustup-sandbox//upperdir/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/etc/gdb_lookup.py (modified/added)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also choose to commit the overlay directory contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;$ try commit rustup-sandbox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Any command that interacts with other users/groups will fail since only the current user&#39;s UID/GID are mapped. However, the &lt;a href=&#34;https://github.com/binpash/try/tree/future&#34;&gt;future branch&lt;/a&gt; has support for uid/mapping; please refer to the that branch&#39;s readme for installation instructions for the uid/gidmapper.&lt;/p&gt; &#xA;&lt;p&gt;Please also report any issue you run into while using the future branch!&lt;/p&gt; &#xA;&lt;h2&gt;Version History&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0.1.0 - 2023-06-25 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Initial release.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see LICENSE for details.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2023 The PaSh Authors.&lt;/p&gt;</summary>
  </entry>
</feed>