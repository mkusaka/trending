<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-14T01:44:39Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sickcodes/osx-optimizer</title>
    <updated>2023-01-14T01:44:39Z</updated>
    <id>tag:github.com,2023-01-14:/sickcodes/osx-optimizer</id>
    <link href="https://github.com/sickcodes/osx-optimizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OSX Optimizer: Optimize MacOS - Shell scripts to speed up your mac boot time, accelerate loading, and prevent unnecessary throttling.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OSX-Optimizer&lt;/h1&gt; &#xA;&lt;p&gt;OSX Optimizer: Optimize MacOS - Shell scripts to speed up your mac boot time, accelerate loading, and prevent unnecessary throttling.&lt;/p&gt; &#xA;&lt;p&gt;macOS can be heavily modified using the &lt;code&gt;defaults&lt;/code&gt; command. In fact, almost every option is accessible via &lt;code&gt;defaults&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A great way to see what ticking and unticking a box in the Settings App is by using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults read &amp;gt; defaults.pre.txt&#xA;&#xA;# *make a change in Settings*&#xA;&#xA;defaults read &amp;gt; defaults.post.txt&#xA;&#xA;diff defaults.pre.txt defaults.post.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;OSX Optimizations&lt;/h1&gt; &#xA;&lt;p&gt;Below you will find extremely good optimizers, particularly for virtual machines.&lt;/p&gt; &#xA;&lt;p&gt;Some of the commands are dangerous from a remote access perspective, but they will greatly optimize your VM.&lt;/p&gt; &#xA;&lt;h2&gt;Skip the GUI login screen (at your own risk!)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults write com.apple.loginwindow autoLoginUser -bool true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;User accounts and root/administrator have different &lt;code&gt;defaults&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disable spotlight indexing on macOS to heavily speed up Virtual Instances.&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# massively increase virtualized macOS by disabling spotlight.&#xA;sudo mdutil -i off -a&#xA;&#xA;# since you can&#39;t use spotlight to find apps, you can renable with&#xA;# sudo mdutil -i on -a&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enable performance mode&lt;/h2&gt; &#xA;&lt;p&gt;Turn on performance mode to dedicate additional system resources for server applications.&lt;/p&gt; &#xA;&lt;p&gt;Details: &lt;a href=&#34;https://support.apple.com/en-us/HT202528&#34;&gt;https://support.apple.com/en-us/HT202528&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# check if enabled (should contain `serverperfmode=1`)&#xA;nvram boot-args&#xA;&#xA;# turn on&#xA;sudo nvram boot-args=&#34;serverperfmode=1 $(nvram boot-args 2&amp;gt;/dev/null | cut -f 2-)&#34;&#xA;&#xA;# turn off&#xA;sudo nvram boot-args=&#34;$(nvram boot-args 2&amp;gt;/dev/null | sed -e $&#39;s/boot-args\t//;s/serverperfmode=1//&#39;)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disable heavy login screen wallpaper&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo defaults write /Library/Preferences/com.apple.loginwindow DesktopPicture &#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reduce Motion &amp;amp; Transparency&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults write com.apple.Accessibility DifferentiateWithoutColor -int 1&#xA;defaults write com.apple.Accessibility ReduceMotionEnabled -int 1&#xA;defaults write com.apple.universalaccess reduceMotion -int 1&#xA;defaults write com.apple.universalaccess reduceTransparency -int 1&#xA;defaults write com.apple.Accessibility ReduceMotionEnabled -int 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enable multi-sessions&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo /usr/bin/defaults write .GlobalPreferences MultipleSessionsEnabled -bool TRUE&#xA;&#xA;defaults write &#34;Apple Global Domain&#34; MultipleSessionsEnabled -bool true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disable updates (at your own risk!)&lt;/h2&gt; &#xA;&lt;p&gt;This will prevent macOS from downloading huge updates, filling up your disk space.&lt;/p&gt; &#xA;&lt;p&gt;Disabling updates heavily speeds up virtualized macOS because the qcow2 image does not grow out of proportion.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# as roots&#xA;sudo su&#xA;defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -bool false&#xA;defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool false&#xA;defaults write com.apple.commerce AutoUpdate -bool false&#xA;defaults write com.apple.commerce AutoUpdateRestartRequired -bool false&#xA;defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 0&#xA;defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 0&#xA;defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 0&#xA;defaults write com.apple.SoftwareUpdate AutomaticDownload -int 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enable &lt;code&gt;osascript&lt;/code&gt; over SSH automatically without &lt;strong&gt;sshd-keygen warning&lt;/strong&gt; and &lt;strong&gt;full disk access&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;defaults write com.apple.universalaccessAuthWarning /System/Applications/Utilities/Terminal.app -bool true&#xA;defaults write com.apple.universalaccessAuthWarning /usr/libexec -bool true&#xA;defaults write com.apple.universalaccessAuthWarning /usr/libexec/sshd-keygen-wrapper -bool true&#xA;defaults write com.apple.universalaccessAuthWarning com.apple.Messages -bool true&#xA;defaults write com.apple.universalaccessAuthWarning com.apple.Terminal -bool true&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disable screen locking&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults write com.apple.loginwindow DisableScreenLock -bool true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Show a lighter username/password prompt instead of a list of all the users&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults write /Library/Preferences/com.apple.loginwindow.plist SHOWFULLNAME -bool true&#xA;defaults write com.apple.loginwindow AllowList -string &#39;*&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disable saving the application state on shutdown&lt;/h2&gt; &#xA;&lt;p&gt;This speeds up boot as the session state (currently opened apps) are not running when you reboot.&lt;/p&gt; &#xA;&lt;p&gt;This may be slower for you depending on what you are doing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;defaults write com.apple.loginwindow TALLogoutSavesState -bool false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enable AnyDesk automatically&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;defaults write com.apple.universalaccessAuthWarning &#34;/Applications/AnyDesk.app&#34; -bool true&#xA;defaults write com.apple.universalaccessAuthWarning &#34;/Applications/AnyDesk.app/Contents/MacOS/AnyDesk&#34; -bool true&#xA;defaults write com.apple.universalaccessAuthWarning &#34;3::/Applications&#34; -bool true&#xA;defaults write com.apple.universalaccessAuthWarning &#34;3::/Applications/AnyDesk.app&#34; -bool true&#xA;defaults write com.apple.universalaccessAuthWarning &#34;com.philandro.anydesk&#34; -bool true&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enable remote access (at your own risk!)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \&#xA;    -activate \&#xA;    -configure \&#xA;    -access \&#xA;    -off \&#xA;    -restart \&#xA;    -agent \&#xA;    -privs \&#xA;    -all \&#xA;    -allowAccessFor -allUsers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;EXTREMELY INSECURE METHODS (at your own risk!)&lt;/h1&gt; &#xA;&lt;p&gt;These macOS optimizations should only be used in CI/CD, behind a VPN, and with no external connectivity.&lt;/p&gt; &#xA;&lt;p&gt;This is not a warning, it is absolutely essential, or anyone can just SSH into the remote mac.&lt;/p&gt; &#xA;&lt;p&gt;If you do any of the below commands on a remote server, you will&lt;/p&gt; &#xA;&lt;h2&gt;Disable passwords globally&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Everyone is now root&lt;/li&gt; &#xA; &lt;li&gt;No need to type passwords&lt;/li&gt; &#xA; &lt;li&gt;SSH login just hit enter for password&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo su&#xA;# nuke pam&#xA;for PAM_FILE in /etc/pam.d/*; do&#xA;    sed -i -e s/required/optional/g &#34;${PAM_FILE}&#34;&#xA;    sed -i -e s/sufficient/optional/g &#34;${PAM_FILE}&#34;&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;sudo killall Finder || true sudo killall Dock || true sudo killall mds&lt;/p&gt; &#xA;&lt;h2&gt;Make everyone a sudoer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /Users&#xA;# add everyone to sudoers and import the control center plist&#xA;for REAL_NAME in *; do&#xA;    echo &#34;${REAL_NAME}&#34;&#xA;    tee &#34;/etc/sudoers.d/${REAL_NAME}&#34; &amp;lt;&amp;lt;&amp;lt; &#34;${REAL_NAME}     ALL=(ALL)       NOPASSWD: ALL&#34;&#xA;    # sudo -u &#34;${REAL_NAME}&#34; defaults write -globalDomain NSUserKeyEquivalents  -dict-add &#34;Save as PDF\\U2026&#34; &#34;@\$p&#34;;&#xA;    sudo -u &#34;${REAL_NAME}&#34; sudo mdutil -i off -a&#xA;    # sudo -u &#34;${REAL_NAME}&#34; defaults import com.apple.controlcenter /tmp/com.apple.controlcenter.plist&#xA;    # sudo -u &#34;${REAL_NAME}&#34; defaults write &#34;/Users/${REAL_NAME}/Library/Preferences/.GlobalPreferences MultipleSessionEnabled&#34; -bool &#39;YES&#39;&#xA;    # sudo -u mdutil -i off -a&#xA;    # sudo dscl . -create &#34;/Users/${REAL_NAME}&#34; UserShell &#34;${USERSHELL}&#34;&#xA;    sudo -u &#34;${REAL_NAME}&#34; &#34;whoami&#34;&#xA;done&#xA;#############################3&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Disable apps from going to sleep at all&lt;/h1&gt; &#xA;&lt;p&gt;This command will prevent applications from sleeping, completely in the background.&lt;/p&gt; &#xA;&lt;p&gt;You can verify this using the &lt;code&gt;top&lt;/code&gt; command and an App should never go into &lt;code&gt;sleeping&lt;/code&gt; state.&lt;/p&gt; &#xA;&lt;p&gt;This increases RAM usage, but means your apps, like Xcode, will spring into action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo -u &#34;${REAL_NAME}&#34; sudo defaults write NSGlobalDomain NSAppSleepDisabled -bool YES&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>luizalabs/dev-guide</title>
    <updated>2023-01-14T01:44:39Z</updated>
    <id>tag:github.com,2023-01-14:/luizalabs/dev-guide</id>
    <link href="https://github.com/luizalabs/dev-guide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Guias e boas práticas de programação para um melhor desenvolvimento de software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;em&gt;Developer guidelines&lt;/em&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Guias e boas práticas de programação para um melhor desenvolvimento de software.&lt;/p&gt; &#xA;&lt;h2&gt;Guias&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luizalabs/dev-guide/master/code-review/README.md&#34;&gt;Revisão de código&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luizalabs/dev-guide/master/code-style/README.md&#34;&gt;Estilo de código&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribuindo&lt;/h2&gt; &#xA;&lt;p&gt;Leia o &lt;a href=&#34;https://raw.githubusercontent.com/luizalabs/dev-guide/master/CONTRIBUTING.md&#34;&gt;guia de contribuição&lt;/a&gt; deste repositório antes de abrir &lt;em&gt;issues&lt;/em&gt; ou &lt;em&gt;pull requests&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licença&lt;/h2&gt; &#xA;&lt;p&gt;Este repositório é licenciado sob a &lt;a href=&#34;https://raw.githubusercontent.com/luizalabs/dev-guide/master/LICENSE&#34;&gt;licença MIT&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>