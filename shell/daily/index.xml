<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-09T01:45:12Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>The-Z-Labs/linux-exploit-suggester</title>
    <updated>2023-02-09T01:45:12Z</updated>
    <id>tag:github.com,2023-02-09:/The-Z-Labs/linux-exploit-suggester</id>
    <link href="https://github.com/The-Z-Labs/linux-exploit-suggester" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux privilege escalation auditing tool&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;LES: Linux privilege escalation auditing tool&lt;/h2&gt; &#xA;&lt;p&gt;Quick download:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh -O les.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Details about LES usage and inner workings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://mzet-.github.io/2019/05/10/les-paper.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional resources for the LES:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/mzet-/les-res&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;LES tool is designed to assist in detecting security deficiencies for given Linux kernel/Linux-based machine. It provides following functionality:&lt;/p&gt; &#xA;&lt;h3&gt;Assessing kernel exposure on publicly known exploits&lt;/h3&gt; &#xA;&lt;p&gt;Tool assesses (using heuristics methods discussed in details &lt;a href=&#34;https://mzet-.github.io/2019/05/10/les-paper.html&#34;&gt;here&lt;/a&gt;) exposure of the given kernel on every publicly known Linux kernel exploit. Example of tool output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh&#xA;...&#xA;[+] [CVE-2017-16995] eBPF_verifier&#xA;&#xA;   Details: https://ricklarabee.blogspot.com/2018/07/ebpf-and-analysis-of-get-rekt-linux.html&#xA;   Exposure: highly probable&#xA;   Tags: debian=9.0{kernel:4.9.0-3-amd64},fedora=25|26|27,[ ubuntu=14.04 ]{kernel:4.4.0-89-generic},ubuntu=(16.04|17.04){kernel:4.(8|10).0-(19|28|45)-generic}&#xA;   Download URL: https://www.exploit-db.com/download/45010&#xA;   Comments: CONFIG_BPF_SYSCALL needs to be set &amp;amp;&amp;amp; kernel.unprivileged_bpf_disabled != 1&#xA;&#xA;[+] [CVE-2017-1000112] NETIF_F_UFO&#xA;&#xA;   Details: http://www.openwall.com/lists/oss-security/2017/08/13/1&#xA;   Exposure: probable&#xA;   Tags: [ ubuntu=14.04{kernel:4.4.0-*} ],ubuntu=16.04{kernel:4.8.0-*}&#xA;   Download URL: https://raw.githubusercontent.com/xairy/kernel-exploits/master/CVE-2017-1000112/poc.c&#xA;   ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/cve-2017-1000112/CVE-2017-1000112/poc.c&#xA;   Comments: CAP_NET_ADMIN cap or CONFIG_USER_NS=y needed. SMEP/KASLR bypass included. Modified version at &#39;ext-url&#39; adds support for additional distros/kernels&#xA;&#xA;[+] [CVE-2016-8655] chocobo_root&#xA;&#xA;   Details: http://www.openwall.com/lists/oss-security/2016/12/06/1&#xA;   Exposure: probable&#xA;   Tags: [ ubuntu=(14.04|16.04){kernel:4.4.0-(21|22|24|28|31|34|36|38|42|43|45|47|51)-generic} ]&#xA;   Download URL: https://www.exploit-db.com/download/40871&#xA;   Comments: CAP_NET_RAW capability is needed OR CONFIG_USER_NS=y needs to be enabled&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For each exploit, exposure is calculated. Following &#39;Exposure&#39; states are possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Highly probable&lt;/strong&gt; - assessed kernel is most probably affected and there&#39;s a very good chance that PoC exploit will work out of the box without any major modifications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Probable&lt;/strong&gt; - it&#39;s possible that exploit will work but most likely customization of PoC exploit will be needed to suit your target.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Less probable&lt;/strong&gt; - additional manual analysis is needed to verify if kernel is affected.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unprobable&lt;/strong&gt; - highly unlikely that kernel is affected (exploit is not displayed in the tool&#39;s output)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Verifying state of kernel hardening security measures&lt;/h3&gt; &#xA;&lt;p&gt;LES can check for most of security settings available by your Linux kernel. It verifies not only the kernel compile-time configurations (CONFIGs) but also verifies run-time settings (sysctl) giving more complete picture of security posture for running kernel. This functionality is modern continuation of &lt;code&gt;--kernel&lt;/code&gt; switch from &lt;a href=&#34;http://www.trapkit.de/tools/checksec.html&#34;&gt;checksec.sh&lt;/a&gt; tool by Tobias Klein. Example of tool output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh --checksec&#xA;&#xA;Mainline kernel protection mechanisms:&#xA;&#xA; [ Disabled ] GCC stack protector support (CONFIG_HAVE_STACKPROTECTOR)&#xA;              https://github.com/mzet-/les-res/blob/master/features/stackprotector-regular.md&#xA;&#xA; [ Disabled ] GCC stack protector STRONG support (CONFIG_STACKPROTECTOR_STRONG)&#xA;              https://github.com/mzet-/les-res/blob/master/features/stackprotector-strong.md&#xA;&#xA; [ Enabled  ] Low address space to protect from user allocation (CONFIG_DEFAULT_MMAP_MIN_ADDR)&#xA;              https://github.com/mzet-/les-res/blob/master/features/mmap_min_addr.md&#xA;&#xA; [ Disabled ] Restrict unprivileged access to kernel syslog (CONFIG_SECURITY_DMESG_RESTRICT)&#xA;              https://github.com/mzet-/les-res/blob/master/features/dmesg_restrict.md&#xA;&#xA; [ Enabled  ] Randomize the address of the kernel image (KASLR) (CONFIG_RANDOMIZE_BASE)&#xA;              https://github.com/mzet-/les-res/blob/master/features/kaslr.md&#xA;&#xA; [ Disabled ] Hardened user copy support (CONFIG_HARDENED_USERCOPY)&#xA;              https://github.com/mzet-/les-res/blob/master/features/hardened_usercopy.md&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Assess exposure of the Linux box on publicly known exploits:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Show state of security features on the Linux box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh --checksec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assess exposure of Linux kernel on publicly known exploits based on the provided &#39;uname&#39; string (i.e. output of &lt;code&gt;uname -a&lt;/code&gt; command):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./linux-exploit-suggester.sh --uname &amp;lt;uname-string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more usage examples, see &lt;a href=&#34;https://mzet-.github.io/2019/05/10/les-paper.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting involved&lt;/h2&gt; &#xA;&lt;p&gt;You hopefully now know what LES is and what it can do for you. Now see what you can do for LES:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add newly published Linux privilege escalation exploits to it.&lt;/li&gt; &#xA; &lt;li&gt;Test existing exploits on various Linux distributions with multiple kernel versions, then document your findings in a form of &lt;code&gt;Tags&lt;/code&gt; in LES, e.g. of a tag: &lt;code&gt;ubuntu=12.04{kernel:3.(2|5).0-(23|29)-generic}&lt;/code&gt; which states: &lt;em&gt;tagged exploit was verifed to work correctly on Ubuntu 12.04 with kernels: 3.2.0-23-generic, 3.2.0-29-generic, 3.5.0-23-generic and 3.5.0-29-generic;&lt;/em&gt;. With this tag added LES will automatically highlight and bump dynamic &lt;code&gt;Rank&lt;/code&gt; of the exploit when run on Ubuntu 12.04 with one of listed kernel versions. This will help you (and others) during pentests to rapidly identify critically vulnerable Linux machines.&lt;/li&gt; &#xA; &lt;li&gt;Published exploits are often written only for PoC purposes only for one (or couple of) specific Linux distributions and/or kernel version(s). Pick sources of the exploit of choice and customize it to run on different kernel version(s). Then add your customized version of exploit as &lt;code&gt;ext-url&lt;/code&gt; entry to LES and modify &lt;code&gt;Tags&lt;/code&gt; to reflect newly added targets. See &lt;a href=&#34;https://ricklarabee.blogspot.com/2017/12/adapting-poc-for-cve-2017-1000112-to.html&#34;&gt;this&lt;/a&gt; article for an excellent example of adapting specific PoC exploit to different kernel versions.&lt;/li&gt; &#xA; &lt;li&gt;Conduct source code analysis of chosen kernel hardening security measure then add it to the &lt;code&gt;FEATURES&lt;/code&gt; array (if not already there) and publish your analysis at: &lt;code&gt;https://github.com/mzet-/les-res/blob/master/features/&amp;lt;feature-name&amp;gt;.md&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Acknowledgments&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bcoles/&#34;&gt;bcoles&lt;/a&gt; for his excellent and frequent contributions to LES.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubernetes/k8s.io</title>
    <updated>2023-02-09T01:45:12Z</updated>
    <id>tag:github.com,2023-02-09:/kubernetes/k8s.io</id>
    <link href="https://github.com/kubernetes/k8s.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code and configuration to manage Kubernetes project infrastructure, including various *.k8s.io sites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;k8s.io&lt;/h1&gt; &#xA;&lt;p&gt;Kubernetes project infrastructure, managed by the kubernetes community via &lt;a href=&#34;https://git.k8s.io/community/sig-k8s-infra&#34;&gt;sig-k8s-infra&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;apps&lt;/code&gt;: community-managed apps that run on the community-managed &lt;code&gt;aaa&lt;/code&gt; cluster &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;codesearch&lt;/code&gt;: instance of &lt;a href=&#34;https://cs-canary.k8s.io&#34;&gt;codesearch&lt;/a&gt; at &lt;a href=&#34;https://cs-canary.k8s.io&#34;&gt;https://cs-canary.k8s.io&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-k8s-infra&#34;&gt;sig-k8s-infra&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;elekto&lt;/code&gt;: instance of &lt;a href=&#34;https://elekto.dev/&#34;&gt;elekto&lt;/a&gt; at &lt;a href=&#34;https://elections.k8s.io&#34;&gt;https://elections.k8s.io&lt;/a&gt; - owned by Elections officers (on behalf of &lt;a href=&#34;https://git.k8s.io/community/sig-contributor-experience&#34;&gt;sig-contributor-experience&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;gcsweb&lt;/code&gt;: instance of &lt;a href=&#34;https://git.k8s.io/test-infra/gcsweb&#34;&gt;gcsweb&lt;/a&gt; at &lt;a href=&#34;https://gcsweb.k8s.io&#34;&gt;https://gcsweb.k8s.io&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-testing&#34;&gt;sig-testing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;k8s.io&lt;/code&gt;: instance of nginx that provides redirects/reverse-proxying for k8s.io and its subdomains - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-contributor-experience&#34;&gt;sig-contributor-experience&lt;/a&gt; and &lt;a href=&#34;https://git.k8s.io/community/sig-testing&#34;&gt;sig-testing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;kubernetes-external-secrets&lt;/code&gt;: instance of &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;kubernetes-external-secrets&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-testing&#34;&gt;sig-testing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;perfdash&lt;/code&gt;: instance of &lt;a href=&#34;https://git.k8s.io/perf-tests/perfdash&#34;&gt;perfdash&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-scalability&#34;&gt;sig-scalability&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;prow&lt;/code&gt;: work-in-progress instance of &lt;a href=&#34;https://git.k8s.io/test-infra/prow&#34;&gt;prow&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-testing&#34;&gt;sig-testing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;publishing-bot&lt;/code&gt;: instance of &lt;a href=&#34;https://git.k8s.io/publishing-bot&#34;&gt;publishing-bot&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-release&#34;&gt;sig-release&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sippy&lt;/code&gt;: instance of &lt;a href=&#34;https://github.com/openshift/sippy&#34;&gt;sippy&lt;/a&gt; at &lt;a href=&#34;https://sippy.k8s.io&#34;&gt;https://sippy.k8s.io&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-architecture&#34;&gt;sig-architecture&lt;/a&gt; (on behalf of &lt;a href=&#34;https://git.k8s.io/community/wg-reliability&#34;&gt;wg-reliability&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;slack-infra&lt;/code&gt;: instance of &lt;a href=&#34;https://sigs.k8s.io/slack-infra&#34;&gt;slack-infra&lt;/a&gt; including &lt;a href=&#34;https://slack.k8s.io&#34;&gt;https://slack.k8s.io&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-contributor-experience&#34;&gt;sig-contributor-experience&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;triageparty-cli&lt;/code&gt;: instance of &lt;a href=&#34;https://github.com/google/triage-party&#34;&gt;triage-party&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-cli&#34;&gt;sig-cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;triageparty-release&lt;/code&gt;: instance of &lt;a href=&#34;https://github.com/google/triage-party&#34;&gt;triage-party&lt;/a&gt; - owned by &lt;a href=&#34;https://git.k8s.io/community/sig-release&#34;&gt;sig-release&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;artifacts&lt;/code&gt;: non-image artifacts published to &lt;code&gt;artifacts.k8s.io&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;audit&lt;/code&gt;: scripts to export all relevant gcp resources, and the most recently-reviewed export&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dns&lt;/code&gt;: DNS for kubernetes.io and k8s.io&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;groups&lt;/code&gt;: google groups on the kubernetes.io domain&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hack&lt;/code&gt;: scripts used for development, testing, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;images&lt;/code&gt;: container images published to &lt;code&gt;gcr.io/k8s-staging-infra-tools&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;infra/gcp&lt;/code&gt;: scripts and data to manage our GCP infrastructure &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bash/namespaces&lt;/code&gt;: scripts and data to manage K8s namespaces and RBAC for &lt;code&gt;aaa&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;bash/prow&lt;/code&gt;: scripts and data used to manage projects used for e2e testing and managed by boskos&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;bash/roles&lt;/code&gt;: scripts and data to manage custom GCP IAM roles&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;terraform/modules&lt;/code&gt;: terraform modules intended for re-use within this repo&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;terraform/projects&lt;/code&gt;: terraform to manage (parts of) GCP projects&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;k8s.gcr.io&lt;/code&gt;: container images published by the project, promoted from &lt;code&gt;gcr.io/k8s-staging-*&lt;/code&gt; repos&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;policy&lt;/code&gt;: &lt;a href=&#34;https://www.openpolicyagent.org&#34;&gt;open policy agent&lt;/a&gt; policies used by &lt;a href=&#34;https://www.conftest.dev&#34;&gt;conftest&lt;/a&gt; to validate resources in this repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.k8s.io&lt;/code&gt;: work-in-progress to support cross-cloud mirroring/hosting of containers and binaries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We provide a &lt;a href=&#34;https://datastudio.google.com/u/0/reporting/14UWSuqD5ef9E4LnsCD9uJWTPv8MHOA3e&#34;&gt;publicly viewable billing report&lt;/a&gt; accessible to members of &lt;a href=&#34;https://groups.google.com/g/kubernetes-sig-k8s-infra&#34;&gt;kubernetes-sig-k8s-infra@googlegroups.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://git.k8s.io/community/sig-k8s-infra&#34;&gt;https://git.k8s.io/community/sig-k8s-infra&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;!-- apps --&gt; &#xA;&lt;!-- misc --&gt; &#xA;&lt;!-- community groups --&gt;</summary>
  </entry>
</feed>