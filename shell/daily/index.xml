<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-19T01:45:27Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stuxnet999/MemLabs</title>
    <updated>2023-05-19T01:45:27Z</updated>
    <id>tag:github.com,2023-05-19:/stuxnet999/MemLabs</id>
    <link href="https://github.com/stuxnet999/MemLabs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Educational, CTF-styled labs for individuals interested in Memory Forensics&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Images/MemLabs.png&#34; alt=&#34;MemLabs&#34; class=&#34;center&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#About-MemLabs-mag&#34;&gt;About MemLabs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#motivation-dart&#34;&gt;Motivation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#structure-of-repository&#34;&gt;Structure of Repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#tools-and-frameworks-hammer_and_wrench&#34;&gt;Tools and Frameworks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#flag-submission-triangular_flag_on_post&#34;&gt;Flag Submission&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#email-format&#34;&gt;Email Format&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#resources-rocket&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#feedback--suggestions&#34;&gt;Feedback &amp;amp; suggestions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stuxnet999/MemLabs#author-bust_in_silhouette&#34;&gt;Author&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;strong&gt;About MemLabs&lt;/strong&gt; &lt;span&gt;üîç&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;MemLabs is an educational, introductory set of CTF-styled challenges which is aimed to encourage students, security researchers and also CTF players to get started with the field of &lt;strong&gt;Memory Forensics&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Motivation&lt;/strong&gt; &lt;span&gt;üéØ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The main goal of creating this repository was to provide a reliable platform where individuals can learn, practice and enhance their skills in the field of memory forensics. As of the CTF-style, well, what better &amp;amp; interesting way to learn security than by playing CTFs?&lt;/p&gt; &#xA;&lt;p&gt;I also believe these labs can be used by anyone to help others become good with the essentials and fundamentals of memory forensics.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Structure of repository&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Directory&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Challenge Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Level Of Difficulty&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%200&#34;&gt;Never Too Late Mister&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Sample challenge&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%201&#34;&gt;Beginner&#39;s Luck&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Easy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%202&#34;&gt;A New World&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Easy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%203&#34;&gt;The Evil&#39;s Den&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Easy - Medium&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%204&#34;&gt;Obsession&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Medium&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%205&#34;&gt;Black Tuesday&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Medium - Hard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lab 6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Lab%206&#34;&gt;The Reckoning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Hard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To aid first-timers to understand how to approach CTF challenges &amp;amp; usage of volatility, please refer &lt;a href=&#34;https://github.com/stuxnet999/MemLabs/tree/master/Lab%200&#34;&gt;Lab 0&lt;/a&gt; which comes with a elaborate walkthrough &amp;amp; I hope it will be a great way to start MemLabs!&lt;/p&gt; &#xA;&lt;p&gt;All the memory dumps are that of a Windows system.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The level of difficulty specified may not be fully accurate as it depends on the individual. I&#39;ve tried my best to categorize them after receiving feedback from beginners to the field.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Tools and frameworks&lt;/strong&gt; &lt;span&gt;üõ†&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d suggest everyone use &lt;a href=&#34;https://github.com/volatilityfoundation/volatility/&#34;&gt;&lt;strong&gt;The Volatility Framework&lt;/strong&gt;&lt;/a&gt; for analysing the memory images.&lt;/p&gt; &#xA;&lt;p&gt;Please execute the &lt;a href=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/setup.sh&#34;&gt;&lt;strong&gt;setup.sh&lt;/strong&gt;&lt;/a&gt; file to install all the required dependencies in your system.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Windows users can download the executable file from &lt;a href=&#34;https://www.volatilityfoundation.org/26&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;As these labs are quite introductory, there is no need for installing more tools. However, if the user wishes, they can install many other forensic tools.&lt;/p&gt; &#xA;&lt;p&gt;The preferred OS would be Linux. However, you can also use Windows (WSL) or macOS.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Flag submission&lt;/strong&gt; &lt;span&gt;üö©&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Please mail the flags of each lab to &lt;a href=&#34;mailto:memlabs.submit@gmail.com&#34;&gt;memlabs.submit@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please have a look at the following example to better understand how to submit the solution.&lt;/p&gt; &#xA;&lt;p&gt;Suppose you find 3 flags in a particular lab,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;flag{stage1_is_n0w_d0n3}&lt;/li&gt; &#xA; &lt;li&gt;flag{stage2_is_n0w_d0n3}&lt;/li&gt; &#xA; &lt;li&gt;flag{stage3_is_n0w_d0n3}&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Concatenate all the flags like this: &lt;strong&gt;flag{stage1_is_n0w_d0n3} flag{stage2_is_n0w_d0n3} flag{stage3_is_n0w_d0n3}&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Place the flags in the right order. The content inside the flags indicates their place. The flags must be space-separated.&lt;/p&gt; &#xA;&lt;p&gt;All the labs will follow the same flag format unless specified otherwise.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Email format&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the following guidelines when sending the solution. Below is a sample:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Email Subject&lt;/strong&gt;: [MemLabs Solution Submission] [Lab-x]&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;x&lt;/strong&gt; indicates the Lab number. Ex: 1,2,3 etc..&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/stuxnet999/MemLabs/master/Images/Submission.png&#34; alt=&#34;Email-Picture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Email your solution to &lt;a href=&#34;mailto:memlabs.submit@gmail.com&#34;&gt;memlabs.submit@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the solution is correct, then the participant will receive a confirmation mail.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Feedback &amp;amp; suggestions&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d love the community&#39;s feedback regarding these labs. Any suggestions or improvements are always welcome. Please email it to me or contact my via Twitter: &lt;a href=&#34;https://www.twitter.com/_abhiramkumar&#34;&gt;@_abhiramkumar&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Resources&lt;/strong&gt; &lt;span&gt;üöÄ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This section contains resources which I&#39;ve composed myself and some others which I have used when I learnt memory forensics. I hope this resources will help everyone in not only solving these labs but also in exploring more areas in memory forensics.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stuxnet999.github.io/volatility/2020/08/18/Basics-of-Memory-Forensics.html&#34;&gt;&lt;strong&gt;Basics of Memory Forensics&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/volatilityfoundation/volatility/wiki/Command-Reference&#34;&gt;&lt;strong&gt;Volatility Windows Command Reference&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf&#34;&gt;&lt;strong&gt;Sans DFIR Memory Forensics cheat sheet&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re interested to play more CTFs or want to try more challenges,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aboutdfir.com/education/challenges-ctfs/&#34;&gt;&lt;strong&gt;AboutDFIR - Challenges &amp;amp; CTFs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ctftime.org/&#34;&gt;&lt;strong&gt;CTFtime.org&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are interested in knowing how to write plugins for Volatility framework,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stuxnet999.github.io/volatility/2020/07/04/Writing-Plugins-Volatility.html&#34;&gt;https://stuxnet999.github.io/volatility/2020/07/04/Writing-Plugins-Volatility.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stuxnet999.github.io/volatility/2020/08/08/Writing-Plugins-Volatility-Part2.html&#34;&gt;https://stuxnet999.github.io/volatility/2020/08/08/Writing-Plugins-Volatility-Part2.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;MemLabs is completely free to anyone to use. If you wish to use MemLabs in your workshops, classes or use the labs anywhere else, it is my humble request to you to use the original links to the labs and please mention my name as well. For any other queries, please contact me.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Author&lt;/strong&gt; &lt;span&gt;üë§&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;P. Abhiram Kumar&lt;/p&gt; &#xA;&lt;p&gt;Digital Forensics, &lt;a href=&#34;https://www.twitter.com/teambi0s&#34;&gt;&lt;strong&gt;Team bi0s&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mail: &lt;strong&gt;&lt;a href=&#34;mailto:abhiram1999@gmail.com&#34;&gt;abhiram1999@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://www.twitter.com/_abhiramkumar&#34;&gt;&lt;strong&gt;@_abhiramkumar&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Personal Blog: &lt;a href=&#34;https://stuxnet999.github.io&#34;&gt;&lt;strong&gt;stuxnet999.github.io&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jenv/jenv</title>
    <updated>2023-05-19T01:45:27Z</updated>
    <id>tag:github.com,2023-05-19:/jenv/jenv</id>
    <link href="https://github.com/jenv/jenv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Manage your Java environment&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Master your Java Environment with jenv&lt;/h1&gt; &#xA;&lt;p&gt;Website : &lt;a href=&#34;http://www.jenv.be&#34;&gt;http://www.jenv.be&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Maintainers :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gcuisinier/&#34;&gt;Gildas Cuisinier&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Future maintainer in discussion:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doctorpangloss&#34;&gt;Benjamin Berman&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As he makes an incredible work by taking time to merge the Pull Request on his fork, I (@gcuisinier) am in discussion with him to take part of jEnv directly if he wants. Whatever his decision, I thank him for his work, and to have convincing me to think about the future of jEnv and accepting a new maintainer for the good of the project.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s jEnv ?&lt;/h2&gt; &#xA;&lt;p&gt;This is an updated fork of &lt;code&gt;jenv&lt;/code&gt;, a beloved Java environment manager adapted from &lt;code&gt;rbenv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;jenv&lt;/code&gt; gives you a few critical affordances for using &lt;code&gt;java&lt;/code&gt; on development machines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It lets you switch between &lt;code&gt;java&lt;/code&gt; versions. This is useful when developing Android applications, which generally require Java 8 for its tools, versus server applications, which use later versions like Java 11.&lt;/li&gt; &#xA; &lt;li&gt;It sets &lt;code&gt;JAVA_HOME&lt;/code&gt; inside your shell, in a way that can be set globally, local to the current working directory or per shell.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;However, this project does &lt;strong&gt;not&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;java&lt;/code&gt; for you. Use your platform appropriate package manager to install &lt;code&gt;java&lt;/code&gt;. On macOS, &lt;code&gt;brew&lt;/code&gt; is recommended.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This document will show you how to install &lt;code&gt;jenv&lt;/code&gt;, review its most common commands, show example workflows and identify known issues.&lt;/p&gt; &#xA;&lt;h3&gt;Contents&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jenv/jenv/master/#1-getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jenv/jenv/master/#2-common-workflows&#34;&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jenv/jenv/master/#3-known-issues&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;1. Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;Follow the steps below to get a working &lt;code&gt;jenv&lt;/code&gt; installation with knowledge of your &lt;code&gt;java&lt;/code&gt; environment. Read all the code you execute carefully: a &lt;code&gt;$&lt;/code&gt; symbol at the beginning of a line should be omitted, since it&#39;s meant to show you entering a command into your terminal and observing the response after the command.&lt;/p&gt; &#xA;&lt;h4&gt;1.1 Installing &lt;code&gt;jenv&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;On OSX, the simpler way to install jEnv is using &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install jenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, and on Linux, you can install it from source :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/jenv/jenv.git ~/.jenv&#xA;# Shell: bash&#xA;echo &#39;export PATH=&#34;$HOME/.jenv/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bash_profile&#xA;echo &#39;eval &#34;$(jenv init -)&#34;&#39; &amp;gt;&amp;gt; ~/.bash_profile&#xA;# Shell: zsh&#xA;echo &#39;export PATH=&#34;$HOME/.jenv/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;echo &#39;eval &#34;$(jenv init -)&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart your shell by closing and reopening your terminal window or running &lt;code&gt;exec $SHELL -l&lt;/code&gt; in the current session for the changes to take effect.&lt;/p&gt; &#xA;&lt;p&gt;To verify &lt;code&gt;jenv&lt;/code&gt; was installed, run &lt;code&gt;jenv doctor&lt;/code&gt;. On a macOS machine, you&#39;ll observe the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ jenv doctor&#xA;[OK]&#x9;No JAVA_HOME set&#xA;[ERROR]&#x9;Java binary in path is not in the jenv shims.&#xA;[ERROR]&#x9;Please check your path, or try using /path/to/java/home is not a valid path to java installation.&#xA;&#x9;PATH : /Users/user/.jenv/libexec:/Users/user/.jenv/shims:/Users/user/.jenv/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&#xA;[OK]&#x9;Jenv is correctly loaded&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Observe that &lt;code&gt;jenv&lt;/code&gt; is correctly loaded but Java is not yet installed.&lt;/p&gt; &#xA;&lt;p&gt;To make sure &lt;code&gt;JAVA_HOME&lt;/code&gt; is set, make sure to enable the &lt;code&gt;export&lt;/code&gt; plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jenv enable-plugin export&#xA;exec $SHELL -l&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Problem? Please visit the &lt;a href=&#34;https://github.com/jenv/jenv/wiki/Trouble-Shooting&#34;&gt;Trouble Shooting&lt;/a&gt; Wiki page.&lt;/p&gt; &#xA;&lt;p&gt;Continue to the next section to install java.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Untested&lt;/strong&gt;: While this fork has improved &lt;code&gt;fish&lt;/code&gt; shell support, it has not been tested by this maintainer. To install &lt;code&gt;jenv&lt;/code&gt; for Fish according to the contributor&#39;s instructions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo &#39;set PATH $HOME/.jenv/bin $PATH&#39; &amp;gt;&amp;gt; ~/.config/fish/config.fish&#xA;echo &#39;status --is-interactive; and jenv init - | source&#39; &amp;gt;&amp;gt; ~/.config/fish/config.fish&#xA;cp ~/.jenv/fish/jenv.fish ~/.config/fish/functions/jenv.fish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;1.2 Adding Your Java Environment&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;jenv add&lt;/code&gt; to inform &lt;code&gt;jenv&lt;/code&gt; where your Java environment is located. &lt;code&gt;jenv&lt;/code&gt; does not, by itself, install Java.&lt;/p&gt; &#xA;&lt;p&gt;For example, on macOS, use &lt;code&gt;brew&lt;/code&gt; to install the latest Java (OpenJDK 11) followed by the appropriate &lt;code&gt;jenv add PATH_TO_JVM_HOME&lt;/code&gt; command to recognize it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install --cask java&#xA;jenv add &#34;$(/usr/libexec/java_home)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With macOS OpenJDK 11.0.2 installed, for example, either of these commands will add &lt;code&gt;/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home&lt;/code&gt; as a valid JVM. Your JVM directory may vary!&lt;/p&gt; &#xA;&lt;p&gt;Observe now that this version of Java is added to your &lt;code&gt;java versions&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ jenv versions&#xA;* system (set by /Users/user/.jenv/version)&#xA;  11.0&#xA;  11.0.2&#xA;  openjdk64-11.0.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the latest version of Java is your &lt;code&gt;system&lt;/code&gt; Java on macOS.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll now set a &lt;code&gt;jenv local VERSION&lt;/code&gt; local Java version for the current working directory. This will create a &lt;code&gt;.java-version&lt;/code&gt; file we can check into Git for our projects, and &lt;code&gt;jenv&lt;/code&gt; will load it correctly &lt;strong&gt;when a shell is started from this directory&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ jenv local 11.0.2&#xA;$ exec $SHELL -l&#xA;$ cat .java-version&#xA;11.0.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Is &lt;code&gt;JAVA_HOME&lt;/code&gt; set?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ echo ${JAVA_HOME}&#xA;/Users/bberman/.jenv/versions/11.0.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Yes! Observe that &lt;code&gt;JAVA_HOME&lt;/code&gt; is set to a valid shim directory. Unlike the main repository&#39;s documentation we helpfully installed the &lt;code&gt;export&lt;/code&gt; plugin, and we now have the most important &lt;code&gt;jenv&lt;/code&gt; features covered.&lt;/p&gt; &#xA;&lt;p&gt;If you executed this commands inside your &lt;code&gt;$HOME&lt;/code&gt; directory, you can now delete &lt;code&gt;.java-version&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm .java-version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;1.3 Setting a Global Java Version&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;jenv global VERSION&lt;/code&gt; to set a global Java version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jenv global 11.0.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you next open a shell or terminal window, this version of Java will be the default.&lt;/p&gt; &#xA;&lt;p&gt;On macOS, this sets &lt;code&gt;JAVA_HOME&lt;/code&gt; for GUI applications on macOS using &lt;code&gt;jenv macos-javahome&lt;/code&gt;. Integrates &lt;a href=&#34;https://www.ibm.com/support/knowledgecenter/en/SSPJLC_7.6.2/com.ibm.si.mpl.doc/tshoot/ts_java_home.html&#34;&gt;this tutorial&lt;/a&gt; to create a file that does &lt;strong&gt;not update dynamically&lt;/strong&gt; depending on what local or shell version of Java is set, only global.&lt;/p&gt; &#xA;&lt;h4&gt;1.4 Setting a Shell Java Version&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;jenv shell VERSION&lt;/code&gt; to set the Java used in this particular shell session:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jenv shell 11.0.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2 Common Workflows&lt;/h3&gt; &#xA;&lt;p&gt;These common workflows demonstrate how to use &lt;code&gt;jenv&lt;/code&gt; to solve common problems.&lt;/p&gt; &#xA;&lt;h4&gt;2.1 Using Two JVMs on macOS&lt;/h4&gt; &#xA;&lt;p&gt;Our goal is to have both the latest version of Java and JDK 8 installed at the same time. This is helpful for developing Android applications, whose build tools are sensitive to using an exact Java version.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll resume where we left off with Java 11.0.2 installed. Let&#39;s &lt;a href=&#34;https://stackoverflow.com/questions/24342886/how-to-install-java-8-on-mac&#34;&gt;install Java 8&lt;/a&gt; now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install --cask adoptopenjdk8&#xA;brew install --cask homebrew/cask-versions/adoptopenjdk8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install the latest version of Java 8 to a special directory in macOS. Let&#39;s see which directory that is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -1 /Library/Java/JavaVirtualMachines &#xA;adoptopenjdk-8.jdk&#xA;openjdk-11.0.2.jdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Observe the &lt;code&gt;adoptopenjdk-8.jdk&lt;/code&gt; directory. &lt;strong&gt;Your exact version may vary&lt;/strong&gt;. We cannot retrieve this using &lt;code&gt;/usr/libexec/java_home&lt;/code&gt;, unfortunately. We&#39;ll add the Java home directory using &lt;code&gt;jenv&lt;/code&gt; so that it shows up in our &lt;code&gt;jenv versions&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ jenv add /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/&#xA;openjdk64-1.8.0.222 added&#xA;1.8.0.222 added&#xA;1.8 added&#xA;$ jenv versions&#xA;* system&#xA;  1.8&#xA;  1.8.0.222&#xA;  openjdk64-1.8.0.222&#xA;  11.0&#xA;  11.0.2&#xA;  openjdk64-11.0.2&#xA;  oracle64-1.8.0.202-ea&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2.2 Other Workflows&lt;/h4&gt; &#xA;&lt;p&gt;Please contribute your own using a pull request!&lt;/p&gt; &#xA;&lt;h3&gt;3 Known Issues&lt;/h3&gt; &#xA;&lt;p&gt;Users seem to have issues using &lt;code&gt;jenv&lt;/code&gt; with Fish. Please report any here.&lt;/p&gt;</summary>
  </entry>
</feed>