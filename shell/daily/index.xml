<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-23T01:32:50Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MODDEDWARFARE/PPPwn_WRT</title>
    <updated>2024-05-23T01:32:50Z</updated>
    <id>tag:github.com,2024-05-23:/MODDEDWARFARE/PPPwn_WRT</id>
    <link href="https://github.com/MODDEDWARFARE/PPPwn_WRT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A method of running PPPwn on OpenWRT&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PPPwn on OpenWRT&lt;/h1&gt; &#xA;&lt;p&gt;A method of running PPPwn on an OpenWRT-based router.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Routers&lt;/h2&gt; &#xA;&lt;p&gt;You can check to see if your router is supported &lt;a href=&#34;https://openwrt.org/toh/start&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Once OpenWRT is installed, you will need to temporarily connect the router to the internet. You can do this in the LuCI web interface by following these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Wireless&lt;/strong&gt; settings and select the &lt;strong&gt;Scan&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select your network and join it as a client.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Ensure your &lt;code&gt;br-lan&lt;/code&gt; interface does not use the same subnet as your home network before joining as a client. Otherwise they will conflict.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Remote into your router through SSH&lt;/p&gt; &#xA;&lt;p&gt;Download the project to your router:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;opkg update&#xA;opkg install unzip&#xA;wget -O main.zip https://github.com/MODDEDWARFARE/PPPwn_WRT/archive/refs/heads/main.zip&#xA;unzip main.zip&#xA;cd PPPwn_WRT-main&#xA;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select your interface most common is &lt;code&gt;br-lan&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Select your firmware 11.00 or 9.00.&lt;/p&gt; &#xA;&lt;p&gt;You will be asked if you want to load the script on startup. If you select &lt;code&gt;Y&lt;/code&gt; for Yes you can edit this in future by editing the file: &lt;code&gt;/etc/rc.local&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can now run the script from the terminal by entering &lt;code&gt;./run.sh&lt;/code&gt; or run it from the LuCI web interface by going to &lt;strong&gt;System &amp;gt; Custom Commands &amp;gt; PPPwn PS4 &amp;gt; Run&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using a Button to Trigger the Exploit&lt;/h2&gt; &#xA;&lt;p&gt;This method is a bit more involved than the previous one.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;SSH into the router and navigate to &lt;code&gt;cd /etc/rc.button&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &lt;code&gt;ls&lt;/code&gt; to list available buttons. &lt;img src=&#34;https://i.imgur.com/kb0hZrT.png&#34; alt=&#34;Available Buttons&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Find a button you want to replace, e.g., &lt;code&gt;wps&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the button script with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nano wps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Look for the &lt;code&gt;wps&lt;/code&gt; button &#34;released&#34; code. It should look something like: &lt;img src=&#34;https://i.imgur.com/ej8kr91.png&#34; alt=&#34;WPS Button Code&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete everything inside the &lt;code&gt;if&lt;/code&gt; statement and replace it with the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd /root/PPPwn_WRT-main &amp;amp;&amp;amp; ./run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Example: &lt;img src=&#34;https://i.imgur.com/IMSN7Np.png&#34; alt=&#34;Button Script&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now, when you press the &lt;code&gt;wps&lt;/code&gt; button, it will run the script.&lt;/p&gt; &#xA;&lt;h2&gt;LED Support&lt;/h2&gt; &#xA;&lt;p&gt;If your router has LED indicators for &lt;code&gt;wps&lt;/code&gt;, &lt;code&gt;power&lt;/code&gt;, &lt;code&gt;wlan&lt;/code&gt;, etc., you can use them to indicate when the script is running.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &lt;code&gt;ls /sys/class/leds/&lt;/code&gt; to list available LEDs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose an LED, e.g., &lt;code&gt;red:info&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the script to change the LED behavior:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nano /root/PPPwn_WRT-main/run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace &lt;code&gt;green:wps&lt;/code&gt; with &lt;code&gt;red:info&lt;/code&gt; in:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo &#34;heartbeat&#34; &amp;gt; /sys/class/leds/green:wps/trigger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also change the LED behavior from &lt;code&gt;heartbeat&lt;/code&gt; to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;none&lt;/code&gt; = off&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;default-on&lt;/code&gt; = always on&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;heartbeat&lt;/code&gt; = blinking&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timer&lt;/code&gt; = time delay&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>amalmurali47/hook</title>
    <updated>2024-05-23T01:32:50Z</updated>
    <id>tag:github.com,2024-05-23:/amalmurali47/hook</id>
    <link href="https://github.com/amalmurali47/hook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hook for the PoC for exploiting CVE-2024-32002&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;amalmurali47/hook&lt;/h1&gt; &#xA;&lt;p&gt;This repository is part of the PoC for exploiting &lt;a href=&#34;https://github.com/git/git/security/advisories/GHSA-8h77-4q3w-gfgv&#34;&gt;CVE-2024-32002&lt;/a&gt;, a vulnerability in Git that allows RCE during a &lt;code&gt;git clone&lt;/code&gt; operation. This repository contains the malicious hook used in the exploit.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;For detailed instructions and an explanation of how the exploit works, refer to the &lt;a href=&#34;https://github.com/amalmurali47/git_rce&#34;&gt;git_rce repository&lt;/a&gt; or the blog post: &lt;a href=&#34;https://amalmurali.me/posts/git-rce&#34;&gt;https://amalmurali.me/posts/git-rce&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This repository is for educational purposes only. The information provided here is intended to help developers understand the vulnerability and protect their systems. Do not use this exploit maliciously or without permission. Use of this repository is at your own risk. The author is not responsible for any damages or legal issues that may arise from the use of this information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>safebuffer/CVE-2024-32002</title>
    <updated>2024-05-23T01:32:50Z</updated>
    <id>tag:github.com,2024-05-23:/safebuffer/CVE-2024-32002</id>
    <link href="https://github.com/safebuffer/CVE-2024-32002" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2024-32002 RCE PoC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2024-32002 RCE PoC&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains a Proof of Concept (PoC) for CVE-2024-32002, a Remote Code Execution (RCE) vulnerability in Git submodules. The exploit demonstrates how a malicious payload can be triggered via a recursive clone of a Git repository.&lt;/p&gt; &#xA;&lt;h2&gt;Repository Setup&lt;/h2&gt; &#xA;&lt;p&gt;Before running the PoC, create the following repositories on your remote Git server or feel free to change the names as needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;hulk.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;submod.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;smash.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Update the repository paths in the PoC script accordingly if you change the names.&lt;/p&gt; &#xA;&lt;h2&gt;Exploit Details&lt;/h2&gt; &#xA;&lt;p&gt;The exploit leverages Git submodules to execute a payload on the target system when the repository is cloned recursively. This PoC is tested on macOS.&lt;/p&gt; &#xA;&lt;h3&gt;Define Repository Paths&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;HULK_REPO=&#34;git@github.com:safebuffer/hulk.git&#34;&#xA;pullme_REPO=&#34;git@github.com:safebuffer/submod.git&#34;&#xA;&#xA;# Final Exploit Repo&#xA;SMASH_REPO=&#34;git@github.com:safebuffer/smash.git&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Triggering the Exploit&lt;/h3&gt; &#xA;&lt;p&gt;To trigger the exploit, run the poc.sh script and then execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --recursive $SMASH_REPO&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Payload&lt;/h3&gt; &#xA;&lt;p&gt;The default payload in this PoC opens the Calculator application on macOS. You can change this to any payload of your choice.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;/System/Applications/Calculator.app/Contents/MacOS/Calculator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;p&gt;This PoC is for educational purposes only. Use it responsibly and only on systems where you have explicit permission to test. Misuse of this PoC can result in severe consequences.&lt;/p&gt;</summary>
  </entry>
</feed>