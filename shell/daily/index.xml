<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-30T01:45:54Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yuriolisa/pes-2023-opentelemetry</title>
    <updated>2023-04-30T01:45:54Z</updated>
    <id>tag:github.com,2023-04-30:/yuriolisa/pes-2023-opentelemetry</id>
    <link href="https://github.com/yuriolisa/pes-2023-opentelemetry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Opentelemetry Tutorial PES&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Platform Engineer Summit - LinuxTips - 2023&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploy das Ferramentos de Observabilidade:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grafana&lt;/li&gt; &#xA; &lt;li&gt;Loki&lt;/li&gt; &#xA; &lt;li&gt;Mimir&lt;/li&gt; &#xA; &lt;li&gt;Tempo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f 01-backend.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Você pode verificar se o serviços estão rodando através do comando &lt;code&gt;kubectl get pods -n observability-backend&lt;/code&gt; e o resultado deve ser esse:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NAME                              READY   STATUS    RESTARTS   AGE&#xA;grafana-5bcfcc785d-lw8b5          1/1     Running   0          5h38m&#xA;loki-0                            1/1     Running   0          5h38m&#xA;mimir-0                           1/1     Running   0          5h38m&#xA;tempo-7cd894b88f-tkk8j            1/1     Running   0          5h38m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Abra uma conexão com o serviço do Grafana em uma outra sessão do terminal:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl port-forward -n observability-backend svc/grafana 3000:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instalação Opentelemetry Operator&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instalação do CertManager como dependência do operator:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Instalação OpenTelemetry Operator:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f https://github.com/open-telemetry/opentelemetry-operator/releases/download/v0.74.0/opentelemetry-operator.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Para verificar se a instalação do Operator ocorreu bem basta executar o seguinte comando substituindo o nome do pod &lt;code&gt;kubectl logs -n opentelemetry-operator-system opentelemetry-operator-controller-manager-7487c6674d-shpbl&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Defaulted container &#34;manager&#34; out of: manager, kube-rbac-proxy&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.807422088Z&#34;,&#34;msg&#34;:&#34;Starting the OpenTelemetry Operator&#34;,&#34;opentelemetry-operator&#34;:&#34;0.74.0&#34;,&#34;opentelemetry-collector&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector:0.74.0&#34;,&#34;opentelemetry-targetallocator&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:0.74.0&#34;,&#34;operator-opamp-bridge&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-operator/operator-opamp-bridge:0.74.0&#34;,&#34;auto-instrumentation-java&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:1.23.0&#34;,&#34;auto-instrumentation-nodejs&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-nodejs:0.34.0&#34;,&#34;auto-instrumentation-python&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python:0.36b0&#34;,&#34;auto-instrumentation-dotnet&#34;:&#34;ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-dotnet:0.6.0&#34;,&#34;build-date&#34;:&#34;2023-03-29T11:22:05Z&#34;,&#34;go-version&#34;:&#34;go1.20.2&#34;,&#34;go-arch&#34;:&#34;arm64&#34;,&#34;go-os&#34;:&#34;linux&#34;,&#34;labels-filter&#34;:[]}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.807667255Z&#34;,&#34;logger&#34;:&#34;setup&#34;,&#34;msg&#34;:&#34;the env var WATCH_NAMESPACE isn&#39;t set, watching all namespaces&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.832493297Z&#34;,&#34;logger&#34;:&#34;controller-runtime.metrics&#34;,&#34;msg&#34;:&#34;Metrics server is starting to listen&#34;,&#34;addr&#34;:&#34;127.0.0.1:8080&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.838661213Z&#34;,&#34;logger&#34;:&#34;controller-runtime.builder&#34;,&#34;msg&#34;:&#34;Registering a mutating webhook&#34;,&#34;GVK&#34;:&#34;opentelemetry.io/v1alpha1, Kind=OpenTelemetryCollector&#34;,&#34;path&#34;:&#34;/mutate-opentelemetry-io-v1alpha1-opentelemetrycollector&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.838714338Z&#34;,&#34;logger&#34;:&#34;controller-runtime.webhook&#34;,&#34;msg&#34;:&#34;Registering webhook&#34;,&#34;path&#34;:&#34;/mutate-opentelemetry-io-v1alpha1-opentelemetrycollector&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.838741547Z&#34;,&#34;logger&#34;:&#34;controller-runtime.builder&#34;,&#34;msg&#34;:&#34;Registering a validating webhook&#34;,&#34;GVK&#34;:&#34;opentelemetry.io/v1alpha1, Kind=OpenTelemetryCollector&#34;,&#34;path&#34;:&#34;/validate-opentelemetry-io-v1alpha1-opentelemetrycollector&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.83878788Z&#34;,&#34;logger&#34;:&#34;controller-runtime.webhook&#34;,&#34;msg&#34;:&#34;Registering webhook&#34;,&#34;path&#34;:&#34;/validate-opentelemetry-io-v1alpha1-opentelemetrycollector&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.838815422Z&#34;,&#34;logger&#34;:&#34;controller-runtime.builder&#34;,&#34;msg&#34;:&#34;Registering a mutating webhook&#34;,&#34;GVK&#34;:&#34;opentelemetry.io/v1alpha1, Kind=Instrumentation&#34;,&#34;path&#34;:&#34;/mutate-opentelemetry-io-v1alpha1-instrumentation&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.83883838Z&#34;,&#34;logger&#34;:&#34;controller-runtime.webhook&#34;,&#34;msg&#34;:&#34;Registering webhook&#34;,&#34;path&#34;:&#34;/mutate-opentelemetry-io-v1alpha1-instrumentation&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.838853838Z&#34;,&#34;logger&#34;:&#34;controller-runtime.builder&#34;,&#34;msg&#34;:&#34;Registering a validating webhook&#34;,&#34;GVK&#34;:&#34;opentelemetry.io/v1alpha1, Kind=Instrumentation&#34;,&#34;path&#34;:&#34;/validate-opentelemetry-io-v1alpha1-instrumentation&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.838866088Z&#34;,&#34;logger&#34;:&#34;controller-runtime.webhook&#34;,&#34;msg&#34;:&#34;Registering webhook&#34;,&#34;path&#34;:&#34;/validate-opentelemetry-io-v1alpha1-instrumentation&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.83896938Z&#34;,&#34;logger&#34;:&#34;controller-runtime.webhook&#34;,&#34;msg&#34;:&#34;Registering webhook&#34;,&#34;path&#34;:&#34;/mutate-v1-pod&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.839004005Z&#34;,&#34;logger&#34;:&#34;setup&#34;,&#34;msg&#34;:&#34;starting manager&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.839308422Z&#34;,&#34;msg&#34;:&#34;Starting server&#34;,&#34;path&#34;:&#34;/metrics&#34;,&#34;kind&#34;:&#34;metrics&#34;,&#34;addr&#34;:&#34;127.0.0.1:8080&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.83936588Z&#34;,&#34;msg&#34;:&#34;Starting server&#34;,&#34;kind&#34;:&#34;health probe&#34;,&#34;addr&#34;:&#34;[::]:8081&#34;}&#xA;{&#34;level&#34;:&#34;info&#34;,&#34;ts&#34;:&#34;2023-04-27T11:28:16.839088963Z&#34;,&#34;logger&#34;:&#34;controller-runtime.webhook.webhooks&#34;,&#34;msg&#34;:&#34;Starting webhook server&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy da instância do Collector&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Para fazer o deploy da instância do OpenTelemetry Collector basta executar o seguinte comando:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f 02-otel-collector.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Verifique se a instalação ocorreu sem erros:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl get pods -n observability-backend&#xA;NAME                              READY   STATUS    RESTARTS   AGE&#xA;grafana-5bcfcc785d-lw8b5          1/1     Running   0          5h46m&#xA;loki-0                            1/1     Running   0          5h46m&#xA;mimir-0                           1/1     Running   0          5h46m&#xA;otel-collector-569977b889-ggcj4   1/1     Running   0          8m10s&#xA;tempo-7cd894b88f-tkk8j            1/1     Running   0          5h46m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy da Aplicação&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frontend - NodeJS&lt;/li&gt; &#xA; &lt;li&gt;Backend - Python&lt;/li&gt; &#xA; &lt;li&gt;Backend - Java&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f 03-application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:3000/grafana/explore?orgId=1&amp;amp;left=%7B%22datasource%22:%22tempo%22,%22queries%22:%5B%7B%22refId%22:%22A%22,%22datasource%22:%7B%22type%22:%22tempo%22,%22uid%22:%22tempo%22%7D,%22queryType%22:%22nativeSearch%22,%22serviceName%22:%22backend2-deployment%22%7D,%7B%22refId%22:%22B%22,%22datasource%22:%7B%22type%22:%22tempo%22,%22uid%22:%22tempo%22%7D,%22queryType%22:%22traceId%22%7D%5D,%22range%22:%7B%22from%22:%22now-1h%22,%22to%22:%22now%22%7D%7D&#34;&gt;Veja que os traces ainda não estão chegando no Grafana Tempo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Aplicar o CR de Instrumentation:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl apply -f 04-instrumentation.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Verifique se o CR foi criado com sucesso &lt;code&gt;kubectl get otelinst -n tutorial-application&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NAME                 AGE     ENDPOINT                                                             SAMPLER                    SAMPLER ARG&#xA;my-instrumentation   5h38m   http://otel-collector.observability-backend.svc.cluster.local:4317   parentbased_traceidratio   1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Patch do Frontend:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Para finalizar a auto-instrumentação precisamos fazer o patch do frontend:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;kubectl patch deployment frontend-deployment -n tutorial-application -p &#39;{&#34;spec&#34;: {&#34;template&#34;:{&#34;metadata&#34;:{&#34;annotations&#34;:{&#34;instrumentation.opentelemetry.io/inject-sdk&#34;:&#34;true&#34;}}}} }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Após o Patch realizado vamos fazer o rollout das apps:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl rollout restart deployment -n tutorial-application -l app=backend1&#xA;kubectl rollout restart deployment -n tutorial-application -l app=backend2&#xA;kubectl rollout restart deployment -n tutorial-application -l app=frontend&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:3000/grafana/explore?orgId=1&amp;amp;left=%7B%22datasource%22:%22tempo%22,%22queries%22:%5B%7B%22refId%22:%22A%22,%22datasource%22:%7B%22type%22:%22tempo%22,%22uid%22:%22tempo%22%7D,%22queryType%22:%22nativeSearch%22,%22serviceName%22:%22backend2-deployment%22%7D,%7B%22refId%22:%22B%22,%22datasource%22:%7B%22type%22:%22tempo%22,%22uid%22:%22tempo%22%7D,%22queryType%22:%22traceId%22%7D%5D,%22range%22:%7B%22from%22:%22now-1h%22,%22to%22:%22now%22%7D%7D&#34;&gt;Veja que os traces AGORA estão chegando no Grafana Tempo&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ethiack/CVE-2023-29007</title>
    <updated>2023-04-30T01:45:54Z</updated>
    <id>tag:github.com,2023-04-30:/ethiack/CVE-2023-29007</id>
    <link href="https://github.com/ethiack/CVE-2023-29007" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PoC repository for CVE-2023-29007&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2023-29007&lt;/h1&gt; &#xA;&lt;p&gt;PoC repository for &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29007&#34;&gt;CVE-2023-29007&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More information available at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.ethiack.com/en/blog/git-arbitrary-configuration-injection-cve-2023-29007&#34;&gt;https://blog.ethiack.com/en/blog/git-arbitrary-configuration-injection-cve-2023-29007&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.blog/2023-04-25-git-security-vulnerabilities-announced-4/&#34;&gt;https://github.blog/2023-04-25-git-security-vulnerabilities-announced-4/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/git/git/security/advisories/GHSA-v48j-4xgg-4844&#34;&gt;https://github.com/git/git/security/advisories/GHSA-v48j-4xgg-4844&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>go-outside-labs/mev-toolkit</title>
    <updated>2023-04-30T01:45:54Z</updated>
    <id>tag:github.com,2023-04-30:/go-outside-labs/mev-toolkit</id>
    <link href="https://github.com/go-outside-labs/mev-toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⛓🕹 (𝗼𝗻 𝘁𝗵𝗲 𝗵𝗼𝗽𝗲 𝗼𝗳 𝗻𝗼𝗻-𝗽𝗿𝗲𝗱𝗮𝘁𝗼𝗿𝘆) 𝗳𝗿𝗲𝗲 𝗺𝗮𝗿𝗸𝗲𝘁𝘀 𝗶𝗻 𝘁𝗵𝗲 𝗺𝗲𝘁𝗮𝘄𝗲𝗯&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⛓🕹 mev for everybody&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1130416/210285135-2d0c3965-a3cd-44f7-a167-3ec14a9ad695.png&#34; width=&#34;40%&#34; align=&#34;center&#34; style=&#34;padding:1px;border:1px solid black;&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;tl; dr:&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h5&gt;👾 maximal extractable value encompasses the profits generated by participant parties in the block production supply chain. for searchers, this revenue can be generated from arbitrage when reducing the price spread between markets, slippage loss of swap users, frontrunning users&#39; transactions, among other &lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies&#34;&gt;strategies&lt;/a&gt;.&lt;/h5&gt; &#xA;&lt;h5&gt;💙 mev extraction can be a force of good in a non-predatory and &lt;a href=&#34;https://twitter.com/bertcmiller/status/1456346690164768770&#34;&gt;fair&lt;/a&gt; blockspace free-market as an incentive for economic security. every actor in the supply chain is relevant. order flow toxicity is a trader&#39;s exposure to counter-parties that possess private informational advantages. as everything in life, &lt;em&gt;&lt;a href=&#34;https://frontier.tech/a-new-game-in-town&#34;&gt;the most valuable commodity is information&lt;/a&gt;&lt;/em&gt;.&lt;/h5&gt; &#xA;&lt;h5&gt;🏴‍☠️ this repository is an &lt;em&gt;on-going&lt;/em&gt; catalog from my own research and development. if you are passionate about self-sovereignty and love solving complex problems, don&#39;t be intimidated: do your homework and join us (we need you).&lt;/h5&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;I. learn (toxic and non-toxic) extraction strategies&lt;/h3&gt; &#xA;&lt;h5&gt;atomic (tx ordering)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/sniping&#34;&gt;sniping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/longtails&#34;&gt;longtails&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/atomic_arb&#34;&gt;atomic arbs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/sandwich&#34;&gt;sandwiches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/flashloans&#34;&gt;flashloans&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_and_trading/protocols/uniswap/uniswap-v3/just-in-time.md&#34;&gt;jit liquidity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/liquidations&#34;&gt;liquidations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/frontrunning&#34;&gt;frontrunning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/backrunning&#34;&gt;backrunning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;statistical (informed signal)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/order_flows&#34;&gt;order flows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/stat_arbs&#34;&gt;statistical arbs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_and_trading&#34;&gt;defi and trading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/cross_domain_mev&#34;&gt;cross-domain mev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_strategies/oracles&#34;&gt;oracles and twamm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;II. code up your (learning and experimental) bots&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers&#34;&gt;build your mev bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/mempool_monitoring&#34;&gt;mempools monitoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/latency&#34;&gt;latency optimization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/tx_and_signature_explorers&#34;&gt;tx and signature explorers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;III. understand the chains and how mev differs on each of them&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Solana&#34;&gt;mev on solana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Cosmos&#34;&gt;mev on cosmos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Polygon&#34;&gt;mev on polygon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Arbitrum&#34;&gt;mev on arbitrum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Ethereum&#34;&gt;mev on ethereum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Optimism&#34;&gt;mev on optimism&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_BSC&#34;&gt;mev on bsc chain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_by_chains/MEV_on_Avalanche&#34;&gt;mev on avalanche&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IV. understand (and join) the space&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_projects&#34;&gt;mev-related protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/data_and_analytics&#34;&gt;mev data and analytics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_searchers/order_flows&#34;&gt;research on order flows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/go-outside-labs/mev-toolkit/main/MEV_projects/history.md&#34;&gt;canonical papers from the past&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>