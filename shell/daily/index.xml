<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-06T01:53:19Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Fmstrat/winapps</title>
    <updated>2022-07-06T01:53:19Z</updated>
    <id>tag:github.com,2022-07-06:/Fmstrat/winapps</id>
    <link href="https://github.com/Fmstrat/winapps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WinApps for Linux&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Looking for maintainers, see: &lt;a href=&#34;https://github.com/Fmstrat/winapps/issues/269&#34;&gt;https://github.com/Fmstrat/winapps/issues/269&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration for right clicking on files of specific mime types to open them.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/demo/demo.gif&#34; width=&#34;1000&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Proud to have made the top spot on &lt;a href=&#34;https://www.reddit.com/r/linux&#34;&gt;r/linux&lt;/a&gt; on launch day.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;WinApps was created as an easy, one command way to include apps running inside a VM (or on any RDP server) directly into GNOME as if they were native applications. WinApps works by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running a Windows RDP server in a background VM container&lt;/li&gt; &#xA; &lt;li&gt;Checking the RDP server for installed applications such as Microsoft Office&lt;/li&gt; &#xA; &lt;li&gt;If those programs are installed, it creates shortcuts leveraging FreeRDP for both the CLI and the GNOME tray&lt;/li&gt; &#xA; &lt;li&gt;Files in your home directory are accessible via the &lt;code&gt;\\tsclient\home&lt;/code&gt; mount inside the VM&lt;/li&gt; &#xA; &lt;li&gt;You can right click on any files in your home directory to open with an application, too&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Currently supported applications&lt;/h2&gt; &#xA;&lt;h3&gt;WinApps supports &lt;em&gt;&lt;strong&gt;ANY&lt;/strong&gt;&lt;/em&gt; installed application on your system.&lt;/h3&gt; &#xA;&lt;p&gt;It does this by:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Scanning your system for offically configured applications (below)&lt;/li&gt; &#xA; &lt;li&gt;Scanning your system for any other EXE files with install records in the Windows Registry&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Any officially configured applications will have support for high-resolution icons and mime types for automatically detecting what files can be opened by each application. Any other detected executable files will leverage the icons pulled from the EXE.&lt;/p&gt; &#xA;&lt;p&gt;Note: The officially configured application list below is fueled by the community, and therefore some apps may be untested by the WinApps team.&lt;/p&gt; &#xA;&lt;table cellpadding=&#34;10&#34; cellspacing=&#34;0&#34; border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/acrobat-x-pro/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Acrobat Pro&lt;br&gt;(X)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/acrobat-reader-dc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Acrobat Reader&lt;br&gt;(DC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/aftereffects-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe After Effects&lt;br&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/audition-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Audition&lt;br&gt;(CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/bridge-cs6/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Bridge&lt;br&gt;(CS6, CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/adobe-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Creative Cloud&lt;br&gt;(CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/illustrator-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Illustrator&lt;br&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/indesign-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe InDesign&lt;br&gt;(CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/lightroom-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Lightroom&lt;br&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/photoshop-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Photoshop&lt;br&gt;(CS6, CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/premiere-pro-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Premiere Pro&lt;br&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/cmd/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Command Prompt&lt;br&gt;(cmd.exe)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/explorer/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Explorer&lt;br&gt;(File Manager)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/iexplorer/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Internet Explorer&lt;br&gt;(11)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/access/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Access&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/excel/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Excel&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/word/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Word&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/onenote/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft OneNote&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/outlook/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Outlook&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/powerpoint/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft PowerPoint&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/project/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Project&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/publisher/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Publisher&lt;br&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/powershell/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Powershell&lt;br&gt;(Standard, Core)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/vs-enterprise-2019/icon.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Visual Studio&lt;br&gt;(2019 - Ent|Pro|Com)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/icons/windows.svg?sanitize=true&#34; width=&#34;100&#34;&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Windows&lt;br&gt;(Full RDP session)&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp;&lt;/td&gt;&#xA;   &lt;td&gt;&amp;nbsp;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1: Set up a Windows Virtual Machine&lt;/h3&gt; &#xA;&lt;p&gt;The best solution for running a VM as a subsystem for WinApps would be KVM. KVM is a CPU and memory-efficient virtualization engine bundled with most major Linux distributions. To set up the VM for WinApps, follow this guide:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/docs/KVM.md&#34;&gt;Creating a Virtual Machine in KVM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you already have a Virtual Machine or server you wish to use with WinApps, you will need to merge &lt;code&gt;kvm/RDPApps.reg&lt;/code&gt; into the VM&#39;s Windows Registry. If this VM is in KVM and you want to use auto-IP detection, you will need to name the machine &lt;code&gt;RDPWindows&lt;/code&gt;. Directions for both of these can be found in the guide linked above.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Download the repo and prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;To get things going, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y freerdp2-x11&#xA;git clone https://github.com/Fmstrat/winapps.git&#xA;cd winapps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3: Creating your WinApps configuration file&lt;/h3&gt; &#xA;&lt;p&gt;You will need to create a &lt;code&gt;~/.config/winapps/winapps.conf&lt;/code&gt; configuration file with the following information in it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RDP_USER=&#34;MyWindowsUser&#34;&#xA;RDP_PASS=&#34;MyWindowsPassword&#34;&#xA;#RDP_DOMAIN=&#34;MYDOMAIN&#34;&#xA;#RDP_IP=&#34;192.168.123.111&#34;&#xA;#RDP_SCALE=100&#xA;#RDP_FLAGS=&#34;&#34;&#xA;#MULTIMON=&#34;true&#34;&#xA;#DEBUG=&#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The username and password should be a full user account and password, such as the one created when setting up Windows or a domain user. It cannot be a user/PIN combination as those are not valid for RDP access.&lt;/p&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using a pre-existing non-KVM RDP server, you can use the &lt;code&gt;RDP_IP&lt;/code&gt; to specify it&#39;s location&lt;/li&gt; &#xA; &lt;li&gt;If you are running a VM in KVM with NAT enabled, leave &lt;code&gt;RDP_IP&lt;/code&gt; commented out and WinApps will auto-detect the right local IP&lt;/li&gt; &#xA; &lt;li&gt;For domain users, you can uncomment and change &lt;code&gt;RDP_DOMAIN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On high-resolution (UHD) displays, you can set &lt;code&gt;RDP_SCALE&lt;/code&gt; to the scale you would like [100|140|160|180]&lt;/li&gt; &#xA; &lt;li&gt;To add flags to the FreeRDP call, such as &lt;code&gt;/audio-mode:1&lt;/code&gt; to pass in a mic, use the &lt;code&gt;RDP_FLAGS&lt;/code&gt; configuration option&lt;/li&gt; &#xA; &lt;li&gt;For multi-monitor setups, you can try enabling &lt;code&gt;MULTIMON&lt;/code&gt;, however if you get a black screen (FreeRDP bug) you will need to revert back&lt;/li&gt; &#xA; &lt;li&gt;If you enable &lt;code&gt;DEBUG&lt;/code&gt;, a log will be created on each application start in &lt;code&gt;~/.local/share/winapps/winapps.log&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 4: Run the WinApps installer&lt;/h3&gt; &#xA;&lt;p&gt;Lastly, check that FreeRDP can connect with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bin/winapps check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see output from FreeRDP, as well as potentially have to accept the initial certificate. After that, a Windows Explorer window should pop up. You can close this window and press &lt;code&gt;Ctrl-C&lt;/code&gt; to cancel out of FreeRDP.&lt;/p&gt; &#xA;&lt;p&gt;If this step fails, try restarting the VM, or your problem could be related to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to accept the security cert the first time you connect (with &#39;check&#39;)&lt;/li&gt; &#xA; &lt;li&gt;Not enabling RDP in the Windows VM&lt;/li&gt; &#xA; &lt;li&gt;Not being able to connect to the IP of the VM&lt;/li&gt; &#xA; &lt;li&gt;Incorrect user credentials in &lt;code&gt;~/.config/winapps/winapps.conf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Not merging &lt;code&gt;install/RDPApps.reg&lt;/code&gt; into the VM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then the final step is to run the installer which will prompt you for a system or user install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./installer.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will take you through the following process:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/demo/installer.gif&#34; width=&#34;1000&#34;&gt; &#xA;&lt;h2&gt;Adding pre-defined applications&lt;/h2&gt; &#xA;&lt;p&gt;Adding applications with custom icons and mime types to the installer is easy. Simply copy one of the application configurations in the &lt;code&gt;apps&lt;/code&gt; folder, and:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit the variables for the application&lt;/li&gt; &#xA; &lt;li&gt;Replace the &lt;code&gt;icon.svg&lt;/code&gt; with an SVG for the application (appropriately licensed)&lt;/li&gt; &#xA; &lt;li&gt;Re-run the installer&lt;/li&gt; &#xA; &lt;li&gt;Submit a Pull Request to add it to WinApps officially&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When running the installer, it will check for if any configured apps are installed, and if they are it will create the appropriate shortcuts on the host OS.&lt;/p&gt; &#xA;&lt;h2&gt;Running applications manually&lt;/h2&gt; &#xA;&lt;p&gt;WinApps offers a manual mode for running applications that are not configured. This is completed with the &lt;code&gt;manual&lt;/code&gt; flag. Executables that are in the path do not require full path definition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./bin/winapps manual &#34;C:\my\directory\executableNotInPath.exe&#34;&#xA;./bin/winapps manual executableInPath.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checking for new application support&lt;/h2&gt; &#xA;&lt;p&gt;The installer can be run multiple times, so simply run the below again and it will remove any current installations and update for the latest applications.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./installer.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Optional installer command line arguments&lt;/h2&gt; &#xA;&lt;p&gt;The following optional commands can be used to manage your application configurations without prompts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./installer.sh --user                # Configure applications for the current user&#xA;./installer.sh --system              # Configure applications for the entire system&#xA;./installer.sh --user --uninstall    # Remove all configured applications for the current user&#xA;./installer.sh --system --uninstall  # Remove all configured applications for the entire system&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Common issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Black window&lt;/strong&gt;: This is a FreeRDP bug that sometimes comes up. Try restarting the application or rerunning the command. If that doesn&#39;t work, ensure you have &lt;code&gt;MULTIMON&lt;/code&gt; disabled.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shout outs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some icons pulled from &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fluent UI React - Icons under &lt;a href=&#34;https://github.com/Fmstrat/fluent-ui-react/raw/master/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Fluent UI - Icons under &lt;a href=&#34;https://github.com/Fmstrat/fluentui/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt; with &lt;a href=&#34;https://static2.sharepointonline.com/files/fabric/assets/microsoft_fabric_assets_license_agreement_nov_2019.pdf&#34;&gt;restricted use&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;PKief&#39;s VSCode Material Icon Theme - Icons under &lt;a href=&#34;https://github.com/Fmstrat/vscode-material-icon-theme/raw/master/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;DiemenDesign&#39;s LibreICONS - Icons under &lt;a href=&#34;https://github.com/Fmstrat/LibreICONS/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>m3n0sd0n4ld/GooFuzz</title>
    <updated>2022-07-06T01:53:19Z</updated>
    <id>tag:github.com,2022-07-06:/m3n0sd0n4ld/GooFuzz</id>
    <link href="https://github.com/m3n0sd0n4ld/GooFuzz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GooFuzz is a tool to perform fuzzing with an OSINT approach, managing to enumerate directories, files, subdomains or parameters without leaving evidence on the target&#39;s server and by means of advanced Google searches (Google Dorking).&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;460&#34; height=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/goofuzz.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/m3n0sd0n4ld/GooFuzz/releases/tag/1.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/m3n0sd0n4ld/GooFuzz?include_prereleases&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/m3n0sd0n4ld/GooFuzz?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m3n0sd0n4ld/GooFuzz/issues?q=is%3Aissue+is%3Aopen&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/m3n0sd0n4ld/GooFuzz?style=flat-square&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://github.com/m3n0sd0n4ld/GooFuzz/commits/master&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/m3n0sd0n4ld/GooFuzz?style=flat-square&#34;&gt; &lt;/a&gt;&lt;a href=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/David_Uton?style=flat-square&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;GooFuzz - The Power of Google Dorks&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h6&gt;Author: M3n0sD0n4ld&lt;/h6&gt; &#xA;&lt;h6&gt;Twitter: &lt;a href=&#34;https://twitter.com/David_Uton&#34;&gt;@David_Uton&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h1&gt;Description:&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;GooFuzz&lt;/strong&gt; is a script written in &lt;em&gt;Bash Scripting&lt;/em&gt; that uses advanced Google search techniques to obtain sensitive information in files or directories without making requests to the web server.&lt;/p&gt; &#xA;&lt;h1&gt;Download and install:&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/m3n0sd0n4ld/GooFuzz.git&#xA;$ cd GooFuzz&#xA;$ chmod +x GooFuzz&#xA;$ ./GooFuzz -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Use:&lt;/h1&gt; &#xA;&lt;h2&gt;Menu&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/1.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lists files by extensions separated by commas.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/2.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lists files by extensions contained in a txt file.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/3.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lists files by extension, either subdomain or domain and showing the first Google result.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/4.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;List files, directories and even parameters by means of a wordlist (it is recommended to use only very small files).&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/5.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lists directories and files by specifying paths, words or file names.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/7.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Exclusion of subdomains in your searches (separated by commas or by a list)&lt;/h2&gt; &#xA;&lt;h3&gt;Example 1:&lt;/h3&gt; &#xA;&lt;p&gt;In this example we remove the subdomain &#34;&lt;em&gt;mars.nasa.gov&lt;/em&gt;&#34; from the search.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/8.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example 2:&lt;/h3&gt; &#xA;&lt;p&gt;We perform a normal file search by three extensions and locate subdomains that we want to exclude.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/9.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We create a file called &#34;&lt;em&gt;exclusion_list.txt&lt;/em&gt;&#34; and insert the three subdomains to exclude, we perform the same search again, but passing the list of excluded targets.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/10.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I am not responsible for the misuse of the tool.&lt;/li&gt; &#xA; &lt;li&gt;Google Search has mechanisms to prevent abusive use or detection of suspicious activity. If at any time the tool does not show results, Google has temporarily blocked you (e.g. Captcha).&lt;/li&gt; &#xA; &lt;li&gt;All the information obtained is public and through Google results.&lt;/li&gt; &#xA; &lt;li&gt;Logically, the searches are in Google, so it leaves no evidence in the logs of the target&#39;s server.&lt;/li&gt; &#xA; &lt;li&gt;And very important, if you see a file, directory, subdomain, etc... Indexed in Google, does not mean that it still exists on the server (or it does ;)).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Useful?&lt;/h1&gt; &#xA;&lt;p&gt;If you like the tool, find it useful in your work, Bug Bounty or as a hobby, you could help me like this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tell your friends and co-workers about it.&lt;/li&gt; &#xA; &lt;li&gt;Contribute new ideas or help me to improve it by correcting bugs from &lt;a href=&#34;https://github.com/m3n0sd0n4ld/GooFuzz/issues&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;How? Do you want to buy me a coffee? Thank you very much!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://www.paypal.com/paypalme/elmalodebatman&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/m3n0sd0n4ld/GooFuzz/main/images/paypal.png&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>titzer/virgil</title>
    <updated>2022-07-06T01:53:19Z</updated>
    <id>tag:github.com,2022-07-06:/titzer/virgil</id>
    <link href="https://github.com/titzer/virgil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast and lightweight native programming language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;virgil: A Fast and Lightweight Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;Virgil is a programming language designed for fast, dependency-free programs. Its design blends functional and object-oriented programming paradigms for expressiveness and performance. Virgil&#39;s compiler produces optimized, standalone native executables, WebAssembly modules, or JARs for the JVM. For quick turnaround in testing and debugging, programs can also be run directly on a built-in interpreter. It is well-suited to writing small and fast programs, which makes it ideal for building certain kinds of programs like compilers and virtual machines. It is currently being used for virtual machine and programming language research, in particular the development of a next-generation WebAssembly virtual machine, &lt;a href=&#34;https://github.com/titzer/wizard-engine&#34;&gt;Wizard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository includes the entire compiler, runtime system, some libraries, tests, documentation and supporting code for Virgil&#39;s various compilation targets.&lt;/p&gt; &#xA;&lt;h2&gt;Language Design&lt;/h2&gt; &#xA;&lt;p&gt;Virgil focuses on balancing these main features in a statically-typed language:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Classes - for basic object-oriented programming&lt;/li&gt; &#xA; &lt;li&gt;Functions - for small-scale reuse of functionality&lt;/li&gt; &#xA; &lt;li&gt;Tuples - for efficient aggregation and uniform treatment of multi-argument functions&lt;/li&gt; &#xA; &lt;li&gt;Type parameters - for powerful and clean abstraction over types&lt;/li&gt; &#xA; &lt;li&gt;Algebraic data types - for easy building and matching of data structures&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://raw.githubusercontent.com/titzer/virgil/master/doc/tutorial/Overview.md&#34;&gt;tutorial&lt;/a&gt;. Or read up on &lt;a href=&#34;https://raw.githubusercontent.com/titzer/virgil/master/doc/tutorial/LibUtil.md&#34;&gt;libraries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Targets&lt;/h2&gt; &#xA;&lt;p&gt;Virgil can compile to native binaries for Linux or Darwin, to jar files for the JVM, or to WebAssembly modules. Linux binaries can run successfully under Windows using Window&#39;s Linux system call layer. The compiler is naturally a cross-compiler, able to compile from any supported platform to any other supported platform, so you need only be able to run on one of these platforms in order to target any of the others.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;x86-darwin : 32-bit Darwin kernels (MacOS)&lt;/li&gt; &#xA; &lt;li&gt;x86-64-darwin : 64-bit Darwin kernels (MacOS)&lt;/li&gt; &#xA; &lt;li&gt;x86-linux : 32-bit Linux kernels&lt;/li&gt; &#xA; &lt;li&gt;x86-64-linux : 64-bit Linux kernels&lt;/li&gt; &#xA; &lt;li&gt;jar : JAR files for the Java Virtual Machine&lt;/li&gt; &#xA; &lt;li&gt;wasm : WebAssembly module for any Wasm engine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Implementation&lt;/h2&gt; &#xA;&lt;p&gt;Virgil is fully self-hosted: its entire compiler and runtime system is implemented in Virgil. It was originally designed as a language for embedded systems, particularly microcontrollers, but now supports more mainstream targets. The compiler includes sophisticated whole-program optimizations that achieve great performance and small binaries. Native binaries compiled from your programs can be as small as a few hundred bytes in size and consume just kilobytes of memory at runtime.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The most up-to-date documentation is, as always, this repository! Learn how to &lt;a href=&#34;https://raw.githubusercontent.com/titzer/virgil/master/start/README.md&#34;&gt;get started&lt;/a&gt; using Virgil and browse the &lt;a href=&#34;https://raw.githubusercontent.com/titzer/virgil/master/doc/tutorial/Overview.md&#34;&gt;tutorial&lt;/a&gt;, where many &lt;a href=&#34;https://raw.githubusercontent.com/titzer/virgil/master/doc/tutorial/examples&#34;&gt;example&lt;/a&gt; programs exist.&lt;/p&gt; &#xA;&lt;h3&gt;Research Papers&lt;/h3&gt; &#xA;&lt;p&gt;Five research papers have been published on Virgil.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ben L. Titzer. &lt;a href=&#34;https://dl.acm.org/doi/10.1145/2491956.2491962&#34;&gt;Harmonizing Classes, Functions, Tuples and Type Parameters in Virgil III&lt;/a&gt;. In Proceedings of the ACM Conference on Programming Language Design and Implementation (PLDI &#39;13). San Diego, CA. June 2013.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Stephen Kou and Jens Palsberg. &lt;a href=&#34;https://dl.acm.org/doi/10.1145/1869459.1869470&#34;&gt;From OO to FPGA: Fitting round objects into square hardware&lt;/a&gt;? In Proceedings of the ACM Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA &#39;10). Reno, Nevada, 2010.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ben L. Titzer and Jens Palsberg. Vertical Object Layout and Compression for Fixed Heaps. In Semantics and Algebra Specification. Pp. 376-408. 2009.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ben L. Titzer and Jens Palsberg. &lt;a href=&#34;https://dl.acm.org/doi/10.1145/1289881.1289914&#34;&gt;Vertical Object Layout and Compression for Fixed Heaps&lt;/a&gt;. In Proceedings of the International Conference on Compilers, Architecture, and Synthesis for Embedded Systems (CASES ’07). Salzburg, Austria. October 2007.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ben L. Titzer. &lt;a href=&#34;https://dl.acm.org/doi/10.1145/1167473.1167489&#34;&gt;Virgil: Objects on the Head of a Pin&lt;/a&gt;. In Proceedings of the 21 st Annual Conference on Object-Oriented Systems, Languages, and Applications (OOPSLA &#39;06). October 2006.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0. (&lt;a href=&#34;https://raw.githubusercontent.com/titzer/virgil/master/rt/LICENSE&#34;&gt;rt/LICENSE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>