<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-30T01:38:42Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lee1080/CloudflareSpeedTestDDNS</title>
    <updated>2023-09-30T01:38:42Z</updated>
    <id>tag:github.com,2023-09-30:/lee1080/CloudflareSpeedTestDDNS</id>
    <link href="https://github.com/lee1080/CloudflareSpeedTestDDNS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;使用CloudflareSpeedTest工具优选IP后自动DDNS到Cloudflare&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CloudflareSpeedTestDDNS&lt;/h1&gt; &#xA;&lt;p&gt;使用CloudflareSpeedTest工具优选IP后自动DDNS到Cloudflare&lt;/p&gt; &#xA;&lt;h3&gt;简易教程&lt;/h3&gt; &#xA;&lt;h4&gt;1.下载并解压脚本（载体可以是openwrt，或其他linux）&lt;/h4&gt; &#xA;&lt;h4&gt;2.填写&lt;code&gt;config.conf&lt;/code&gt;配置文件&lt;/h4&gt; &#xA;&lt;h4&gt;3.运行脚本&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;del&gt;&lt;a href=&#34;https://blog.vbar.fun/archives/openwrt-ding-shi-you-xuan-cloudflareip-bing-geng-xin-dao-cloudflare&#34;&gt;教程过旧，待更新&lt;/a&gt;&lt;/del&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;del&gt;详细使用教程请参考&lt;a href=&#34;https://blog.vbar.fun/archives/openwrt-ding-shi-you-xuan-cloudflareip-bing-geng-xin-dao-cloudflare&#34;&gt;详细教程&lt;/a&gt;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker运行&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/lee1080/cfstddns&#34;&gt;https://hub.docker.com/r/lee1080/cfstddns&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;h3&gt;V2.3&lt;/h3&gt; &#xA;&lt;h4&gt;适配XIU2/CloudflareSpeedTest:v2.2.4 | 新增自定义测速地址端口支持&lt;/h4&gt; &#xA;&lt;h4&gt;新增PushPlus推送。&lt;/h4&gt; &#xA;&lt;h4&gt;优化更新规则，测速为0则跳过域名更新。&lt;/h4&gt; &#xA;&lt;h3&gt;v2.2&lt;/h3&gt; &#xA;&lt;h4&gt;更改文件结构。&lt;/h4&gt; &#xA;&lt;h4&gt;新增了dnspod DNS服务商支持。&lt;/h4&gt; &#xA;&lt;h4&gt;新增了docker版。docker版不能自动停止路由器的科学插件，请将docker配置到没有科学环境的设备使用。&lt;/h4&gt; &#xA;&lt;h4&gt;增加了pushdeer推送、企业微信推送、Server酱、Synology Chat。&lt;/h4&gt; &#xA;&lt;h4&gt;增加了更新到hosts模式&lt;/h4&gt; &#xA;&lt;h3&gt;v2.1.1&lt;/h3&gt; &#xA;&lt;h4&gt;新功能，支持更新优选完毕后推送至TG，再也不怕脚本没有成功运行了。&lt;/h4&gt; &#xA;&lt;h4&gt;新增openwrt专用&lt;code&gt;cf_RE.sh&lt;/code&gt;文件，运行&lt;code&gt;cf_RE.sh&lt;/code&gt;即可在openwrt安装&lt;code&gt;jq&lt;/code&gt;和&lt;code&gt;timeout&lt;/code&gt;两个扩展。&lt;/h4&gt; &#xA;&lt;h3&gt;v2.1&lt;/h3&gt; &#xA;&lt;h4&gt;适配XIU2/CloudflareSpeedTest &lt;a href=&#34;https://github.com/XIU2/CloudflareSpeedTest/releases/tag/v2.1.0&#34;&gt;v2.1.0&lt;/a&gt; 修改ipv6测速策略&lt;/h4&gt; &#xA;&lt;h3&gt;v2.0&lt;/h3&gt; &#xA;&lt;h4&gt;添加了多域名支持&lt;/h4&gt; &#xA;&lt;p&gt;可以在hostname中填入多个域名。使用&lt;a href=&#34;https://github.com/XIU2/CloudflareSpeedTest&#34;&gt;CloudflareSpeedTest&lt;/a&gt;工具得出优选IP列表后，脚本支持依次从速度最快的ip开始DDNS，域名数量可更具自己需求填写。&lt;/p&gt; &#xA;&lt;h4&gt;优化科学上网插件重启时机&lt;/h4&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;使用Cloudflare的API，将CloudflareSpeedTest工具优选到的最快IP，自动更新到指定域名上。&lt;/p&gt; &#xA;&lt;h2&gt;存在问题&lt;/h2&gt; &#xA;&lt;p&gt;.tk .ml .ga .cf .gq这几个域名可能存在无法调用CloudflareAPI。&lt;/p&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢&lt;a href=&#34;https://github.com/XIU2&#34;&gt;XIU2&lt;/a&gt;给大家提供了&lt;a href=&#34;https://github.com/XIU2/CloudflareSpeedTest&#34;&gt;CloudflareSpeedTest&lt;/a&gt;这么方便的优选IP的工具。 &lt;a href=&#34;https://github.com/XIU2/CloudflareSpeedTest&#34;&gt;https://github.com/XIU2/CloudflareSpeedTest&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ONLYOFFICE/Docker-DocumentServer</title>
    <updated>2023-09-30T01:38:42Z</updated>
    <id>tag:github.com,2023-09-30:/ONLYOFFICE/Docker-DocumentServer</id>
    <link href="https://github.com/ONLYOFFICE/Docker-DocumentServer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#functionality&#34;&gt;Functionality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#recommended-system-requirements&#34;&gt;Recommended System Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#running-docker-image&#34;&gt;Running Docker Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#configuring-docker-image&#34;&gt;Configuring Docker Image&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#storing-data&#34;&gt;Storing Data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#running-onlyoffice-document-server-on-different-port&#34;&gt;Running ONLYOFFICE Document Server on Different Port&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#running-onlyoffice-document-server-using-https&#34;&gt;Running ONLYOFFICE Document Server using HTTPS&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#generation-of-self-signed-certificates&#34;&gt;Generation of Self Signed Certificates&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#strengthening-the-server-security&#34;&gt;Strengthening the Server Security&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#installation-of-the-ssl-certificates&#34;&gt;Installation of the SSL Certificates&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#available-configuration-parameters&#34;&gt;Available Configuration Parameters&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#installing-onlyoffice-document-server-integrated-with-community-and-mail-servers&#34;&gt;Installing ONLYOFFICE Document Server integrated with Community and Mail Servers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#issues&#34;&gt;Issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#docker-issues&#34;&gt;Docker Issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#document-server-usage-issues&#34;&gt;Document Server usage Issues&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#project-information&#34;&gt;Project Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#user-feedback-and-support&#34;&gt;User Feedback and Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;ONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.&lt;/p&gt; &#xA;&lt;p&gt;Starting from version 6.0, Document Server is distributed as ONLYOFFICE Docs. It has &lt;a href=&#34;https://github.com/ONLYOFFICE/DocumentServer#onlyoffice-document-server-editions&#34;&gt;three editions&lt;/a&gt;. With this image, you will install the free Community version.&lt;/p&gt; &#xA;&lt;p&gt;ONLYOFFICE Docs can be used as a part of ONLYOFFICE Workspace or with third-party sync&amp;amp;share solutions (e.g. Nextcloud, ownCloud, Seafile) to enable collaborative editing within their interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/em&gt; Please update &lt;code&gt;docker-enginge&lt;/code&gt; to latest version (&lt;code&gt;20.10.21&lt;/code&gt; as of writing this doc) before using it. We use &lt;code&gt;ubuntu:22.04&lt;/code&gt; as base image and it older versions of docker have compatibility problems with it&lt;/p&gt; &#xA;&lt;h2&gt;Functionality&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ONLYOFFICE Document Editor&lt;/li&gt; &#xA; &lt;li&gt;ONLYOFFICE Spreadsheet Editor&lt;/li&gt; &#xA; &lt;li&gt;ONLYOFFICE Presentation Editor&lt;/li&gt; &#xA; &lt;li&gt;ONLYOFFICE Documents application for iOS&lt;/li&gt; &#xA; &lt;li&gt;Collaborative editing&lt;/li&gt; &#xA; &lt;li&gt;Hieroglyph support&lt;/li&gt; &#xA; &lt;li&gt;Support for all the popular formats: DOC, DOCX, TXT, ODT, RTF, ODP, EPUB, ODS, XLS, XLSX, CSV, PPTX, HTML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Integrating it with ONLYOFFICE Community Server you will be able to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;view and edit files stored on Drive, Box, Dropbox, OneDrive, OwnCloud connected to ONLYOFFICE;&lt;/li&gt; &#xA; &lt;li&gt;share files;&lt;/li&gt; &#xA; &lt;li&gt;embed documents on a website;&lt;/li&gt; &#xA; &lt;li&gt;manage access rights to documents.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended System Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: 4 GB or more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: dual-core 2 GHz or higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swap&lt;/strong&gt;: at least 2 GB&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HDD&lt;/strong&gt;: at least 2 GB of free space&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Distribution&lt;/strong&gt;: 64-bit Red Hat, CentOS or other compatible distributive with kernel version 3.8 or later, 64-bit Debian, Ubuntu or other compatible distributive with kernel version 3.8 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: version 1.9.0 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Docker Image&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker run -i -t -d -p 80:80 onlyoffice/documentserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use this command if you wish to install ONLYOFFICE Document Server separately. To install ONLYOFFICE Document Server integrated with Community and Mail Servers, refer to the corresponding instructions below.&lt;/p&gt; &#xA;&lt;h2&gt;Configuring Docker Image&lt;/h2&gt; &#xA;&lt;h3&gt;Storing Data&lt;/h3&gt; &#xA;&lt;p&gt;All the data are stored in the specially-designated directories, &lt;strong&gt;data volumes&lt;/strong&gt;, at the following location:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;/var/log/onlyoffice&lt;/strong&gt; for ONLYOFFICE Document Server logs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/var/www/onlyoffice/Data&lt;/strong&gt; for certificates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/var/lib/onlyoffice&lt;/strong&gt; for file cache&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;/var/lib/postgresql&lt;/strong&gt; for database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To get access to your data from outside the container, you need to mount the volumes. It can be done by specifying the &#39;-v&#39; option in the docker run command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker run -i -t -d -p 80:80 \&#xA;    -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \&#xA;    -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  \&#xA;    -v /app/onlyoffice/DocumentServer/lib:/var/lib/onlyoffice \&#xA;    -v /app/onlyoffice/DocumentServer/rabbitmq:/var/lib/rabbitmq \&#xA;    -v /app/onlyoffice/DocumentServer/redis:/var/lib/redis \&#xA;    -v /app/onlyoffice/DocumentServer/db:/var/lib/postgresql  onlyoffice/documentserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Normally, you do not need to store container data because the container&#39;s operation does not depend on its state. Saving data will be useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For easy access to container data, such as logs&lt;/li&gt; &#xA; &lt;li&gt;To remove the limit on the size of the data inside the container&lt;/li&gt; &#xA; &lt;li&gt;When using services launched outside the container such as PostgreSQL, Redis, RabbitMQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running ONLYOFFICE Document Server on Different Port&lt;/h3&gt; &#xA;&lt;p&gt;To change the port, use the -p command. E.g.: to make your portal accessible via port 8080 execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker run -i -t -d -p 8080:80 onlyoffice/documentserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running ONLYOFFICE Document Server using HTTPS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    sudo docker run -i -t -d -p 443:443 \&#xA;    -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  onlyoffice/documentserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Access to the onlyoffice application can be secured using SSL so as to prevent unauthorized access. While a CA certified SSL certificate allows for verification of trust via the CA, a self signed certificates can also provide an equal level of trust verification as long as each client takes some additional steps to verify the identity of your website. Below the instructions on achieving this are provided.&lt;/p&gt; &#xA;&lt;p&gt;To secure the application via SSL basically two things are needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Private key (.key)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL certificate (.crt)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So you need to create and install the following files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    /app/onlyoffice/DocumentServer/data/certs/tls.key&#xA;    /app/onlyoffice/DocumentServer/data/certs/tls.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When using CA certified certificates (e.g &lt;a href=&#34;https://letsencrypt.org&#34;&gt;Let&#39;s encrypt&lt;/a&gt;), these files are provided to you by the CA. If you are using self-signed certificates you need to generate these files &lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#generation-of-self-signed-certificates&#34;&gt;yourself&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Using the automatically generated Let&#39;s Encrypt SSL Certificates&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;    sudo docker run -i -t -d -p 80:80 -p 443:443 \&#xA;    -e LETS_ENCRYPT_DOMAIN=your_domain -e LETS_ENCRYPT_MAIL=your_mail  onlyoffice/documentserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to get and extend Let&#39;s Encrypt SSL Certificates automatically just set LETS_ENCRYPT_DOMAIN and LETS_ENCRYPT_MAIL variables.&lt;/p&gt; &#xA;&lt;h4&gt;Generation of Self Signed Certificates&lt;/h4&gt; &#xA;&lt;p&gt;Generation of self-signed SSL certificates involves a simple 3 step procedure.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 1&lt;/strong&gt;: Create the server private key&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl genrsa -out tls.key 2048&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 2&lt;/strong&gt;: Create the certificate signing request (CSR)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl req -new -key tls.key -out tls.csr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 3&lt;/strong&gt;: Sign the certificate using the private key and CSR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl x509 -req -days 365 -in tls.csr -signkey tls.key -out tls.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You have now generated an SSL certificate that&#39;s valid for 365 days.&lt;/p&gt; &#xA;&lt;h4&gt;Strengthening the server security&lt;/h4&gt; &#xA;&lt;p&gt;This section provides you with instructions to &lt;a href=&#34;https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html&#34;&gt;strengthen your server security&lt;/a&gt;. To achieve this you need to generate stronger DHE parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl dhparam -out dhparam.pem 2048&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installation of the SSL Certificates&lt;/h4&gt; &#xA;&lt;p&gt;Out of the four files generated above, you need to install the &lt;code&gt;tls.key&lt;/code&gt;, &lt;code&gt;tls.crt&lt;/code&gt; and &lt;code&gt;dhparam.pem&lt;/code&gt; files at the onlyoffice server. The CSR file is not needed, but do make sure you safely backup the file (in case you ever need it again).&lt;/p&gt; &#xA;&lt;p&gt;The default path that the onlyoffice application is configured to look for the SSL certificates is at &lt;code&gt;/var/www/onlyoffice/Data/certs&lt;/code&gt;, this can however be changed using the &lt;code&gt;SSL_KEY_PATH&lt;/code&gt;, &lt;code&gt;SSL_CERTIFICATE_PATH&lt;/code&gt; and &lt;code&gt;SSL_DHPARAM_PATH&lt;/code&gt; configuration options.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;/var/www/onlyoffice/Data/&lt;/code&gt; path is the path of the data store, which means that you have to create a folder named certs inside &lt;code&gt;/app/onlyoffice/DocumentServer/data/&lt;/code&gt; and copy the files into it and as a measure of security you will update the permission on the &lt;code&gt;tls.key&lt;/code&gt; file to only be readable by the owner.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /app/onlyoffice/DocumentServer/data/certs&#xA;cp tls.key /app/onlyoffice/DocumentServer/data/certs/&#xA;cp tls.crt /app/onlyoffice/DocumentServer/data/certs/&#xA;cp dhparam.pem /app/onlyoffice/DocumentServer/data/certs/&#xA;chmod 400 /app/onlyoffice/DocumentServer/data/certs/tls.key&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You are now just one step away from having our application secured.&lt;/p&gt; &#xA;&lt;h4&gt;Available Configuration Parameters&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Please refer the docker run command options for the &lt;code&gt;--env-file&lt;/code&gt; flag where you can specify all required environment variables in a single file. This will save you from writing a potentially long docker run command.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Below is the complete list of parameters that can be set using environment variables.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ONLYOFFICE_HTTPS_HSTS_ENABLED&lt;/strong&gt;: Advanced configuration option for turning off the HSTS configuration. Applicable only when SSL is in use. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ONLYOFFICE_HTTPS_HSTS_MAXAGE&lt;/strong&gt;: Advanced configuration option for setting the HSTS max-age in the onlyoffice nginx vHost configuration. Applicable only when SSL is in use. Defaults to &lt;code&gt;31536000&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL_CERTIFICATE_PATH&lt;/strong&gt;: The path to the SSL certificate to use. Defaults to &lt;code&gt;/var/www/onlyoffice/Data/certs/tls.crt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL_KEY_PATH&lt;/strong&gt;: The path to the SSL certificate&#39;s private key. Defaults to &lt;code&gt;/var/www/onlyoffice/Data/certs/tls.key&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL_DHPARAM_PATH&lt;/strong&gt;: The path to the Diffie-Hellman parameter. Defaults to &lt;code&gt;/var/www/onlyoffice/Data/certs/dhparam.pem&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL_VERIFY_CLIENT&lt;/strong&gt;: Enable verification of client certificates using the &lt;code&gt;CA_CERTIFICATES_PATH&lt;/code&gt; file. Defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DB_TYPE&lt;/strong&gt;: The database type. Supported values are &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;mariadb&lt;/code&gt; or &lt;code&gt;mysql&lt;/code&gt;. Defaults to &lt;code&gt;postgres&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DB_HOST&lt;/strong&gt;: The IP address or the name of the host where the database server is running.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DB_PORT&lt;/strong&gt;: The database server port number.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DB_NAME&lt;/strong&gt;: The name of a database to use. Should be existing on container startup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DB_USER&lt;/strong&gt;: The new user name with superuser permissions for the database account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DB_PWD&lt;/strong&gt;: The password set for the database account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AMQP_URI&lt;/strong&gt;: The &lt;a href=&#34;https://www.rabbitmq.com/uri-spec.html&#34; title=&#34;RabbitMQ URI Specification&#34;&gt;AMQP URI&lt;/a&gt; to connect to message broker server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AMQP_TYPE&lt;/strong&gt;: The message broker type. Supported values are &lt;code&gt;rabbitmq&lt;/code&gt; or &lt;code&gt;activemq&lt;/code&gt;. Defaults to &lt;code&gt;rabbitmq&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REDIS_SERVER_HOST&lt;/strong&gt;: The IP address or the name of the host where the Redis server is running.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REDIS_SERVER_PORT&lt;/strong&gt;: The Redis server port number.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REDIS_SERVER_PASS&lt;/strong&gt;: The Redis server password. The password is not set by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NGINX_WORKER_PROCESSES&lt;/strong&gt;: Defines the number of nginx worker processes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NGINX_WORKER_CONNECTIONS&lt;/strong&gt;: Sets the maximum number of simultaneous connections that can be opened by a nginx worker process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SECURE_LINK_SECRET&lt;/strong&gt;: Defines secret for the nginx config directive &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5&#34;&gt;secure_link_md5&lt;/a&gt;. Defaults to &lt;code&gt;random string&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JWT_ENABLED&lt;/strong&gt;: Specifies the enabling the JSON Web Token validation by the ONLYOFFICE Document Server. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JWT_SECRET&lt;/strong&gt;: Defines the secret key to validate the JSON Web Token in the request to the ONLYOFFICE Document Server. Defaults to random value.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JWT_HEADER&lt;/strong&gt;: Defines the http header that will be used to send the JSON Web Token. Defaults to &lt;code&gt;Authorization&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JWT_IN_BODY&lt;/strong&gt;: Specifies the enabling the token validation in the request body to the ONLYOFFICE Document Server. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WOPI_ENABLED&lt;/strong&gt;: Specifies the enabling the wopi handlers. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ALLOW_META_IP_ADDRESS&lt;/strong&gt;: Defines if it is allowed to connect meta IP address or not. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ALLOW_PRIVATE_IP_ADDRESS&lt;/strong&gt;: Defines if it is allowed to connect private IP address or not. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;USE_UNAUTHORIZED_STORAGE&lt;/strong&gt;: Set to &lt;code&gt;true&lt;/code&gt;if using selfsigned certificates for your storage server e.g. Nextcloud. Defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GENERATE_FONTS&lt;/strong&gt;: When &#39;true&#39; regenerates fonts list and the fonts thumbnails etc. at each start. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;METRICS_ENABLED&lt;/strong&gt;: Specifies the enabling StatsD for ONLYOFFICE Document Server. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;METRICS_HOST&lt;/strong&gt;: Defines StatsD listening host. Defaults to &lt;code&gt;localhost&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;METRICS_PORT&lt;/strong&gt;: Defines StatsD listening port. Defaults to &lt;code&gt;8125&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;METRICS_PREFIX&lt;/strong&gt;: Defines StatsD metrics prefix for backend services. Defaults to &lt;code&gt;ds.&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LETS_ENCRYPT_DOMAIN&lt;/strong&gt;: Defines the domain for Let&#39;s Encrypt certificate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LETS_ENCRYPT_MAIL&lt;/strong&gt;: Defines the domain administator mail address for Let&#39;s Encrypt certificate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing ONLYOFFICE Document Server integrated with Community and Mail Servers&lt;/h2&gt; &#xA;&lt;p&gt;ONLYOFFICE Document Server is a part of ONLYOFFICE Community Edition that comprises also Community Server and Mail Server. To install them, follow these easy steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 1&lt;/strong&gt;: Create the &lt;code&gt;onlyoffice&lt;/code&gt; network.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create --driver bridge onlyoffice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then launch containers on it using the &#39;docker run --net onlyoffice&#39; option:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 2&lt;/strong&gt;: Install MySQL.&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/ONLYOFFICE/Docker-DocumentServer/master/#installing-mysql&#34;&gt;these steps&lt;/a&gt; to install MySQL server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 3&lt;/strong&gt;: Generate JWT Secret&lt;/p&gt; &#xA;&lt;p&gt;JWT secret defines the secret key to validate the JSON Web Token in the request to the &lt;strong&gt;ONLYOFFICE Document Server&lt;/strong&gt;. You can specify it yourself or easily get it using the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JWT_SECRET=$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 12);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 4&lt;/strong&gt;: Install ONLYOFFICE Document Server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run --net onlyoffice -i -t -d --restart=always --name onlyoffice-document-server \&#xA; -e JWT_ENABLED=true \&#xA; -e JWT_SECRET=${JWT_SECRET} \&#xA; -e JWT_HEADER=AuthorizationJwt \&#xA; -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \&#xA; -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  \&#xA; -v /app/onlyoffice/DocumentServer/lib:/var/lib/onlyoffice \&#xA; -v /app/onlyoffice/DocumentServer/db:/var/lib/postgresql \&#xA; onlyoffice/documentserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 5&lt;/strong&gt;: Install ONLYOFFICE Mail Server.&lt;/p&gt; &#xA;&lt;p&gt;For the mail server correct work you need to specify its hostname &#39;yourdomain.com&#39;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run --init --net onlyoffice --privileged -i -t -d --restart=always --name onlyoffice-mail-server -p 25:25 -p 143:143 -p 587:587 \&#xA; -e MYSQL_SERVER=onlyoffice-mysql-server \&#xA; -e MYSQL_SERVER_PORT=3306 \&#xA; -e MYSQL_ROOT_USER=root \&#xA; -e MYSQL_ROOT_PASSWD=my-secret-pw \&#xA; -e MYSQL_SERVER_DB_NAME=onlyoffice_mailserver \&#xA; -v /app/onlyoffice/MailServer/data:/var/vmail \&#xA; -v /app/onlyoffice/MailServer/data/certs:/etc/pki/tls/mailserver \&#xA; -v /app/onlyoffice/MailServer/logs:/var/log \&#xA; -h yourdomain.com \&#xA; onlyoffice/mailserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The additional parameters for mail server are available &lt;a href=&#34;https://github.com/ONLYOFFICE/Docker-CommunityServer/raw/master/docker-compose.workspace_enterprise.yml#L87&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To learn more, refer to the &lt;a href=&#34;https://github.com/ONLYOFFICE/Docker-MailServer&#34; title=&#34;ONLYOFFICE Mail Server documentation&#34;&gt;ONLYOFFICE Mail Server documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 6&lt;/strong&gt;: Install ONLYOFFICE Community Server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run --net onlyoffice -i -t -d --privileged --restart=always --name onlyoffice-community-server -p 80:80 -p 443:443 -p 5222:5222 --cgroupns=host \&#xA; -e MYSQL_SERVER_ROOT_PASSWORD=my-secret-pw \&#xA; -e MYSQL_SERVER_DB_NAME=onlyoffice \&#xA; -e MYSQL_SERVER_HOST=onlyoffice-mysql-server \&#xA; -e MYSQL_SERVER_USER=onlyoffice_user \&#xA; -e MYSQL_SERVER_PASS=onlyoffice_pass \&#xA; &#xA; -e DOCUMENT_SERVER_PORT_80_TCP_ADDR=onlyoffice-document-server \&#xA; -e DOCUMENT_SERVER_JWT_ENABLED=true \&#xA; -e DOCUMENT_SERVER_JWT_SECRET=${JWT_SECRET} \&#xA; -e DOCUMENT_SERVER_JWT_HEADER=AuthorizationJwt \&#xA; &#xA; -e MAIL_SERVER_API_HOST=${MAIL_SERVER_IP} \&#xA; -e MAIL_SERVER_DB_HOST=onlyoffice-mysql-server \&#xA; -e MAIL_SERVER_DB_NAME=onlyoffice_mailserver \&#xA; -e MAIL_SERVER_DB_PORT=3306 \&#xA; -e MAIL_SERVER_DB_USER=root \&#xA; -e MAIL_SERVER_DB_PASS=my-secret-pw \&#xA; &#xA; -v /app/onlyoffice/CommunityServer/data:/var/www/onlyoffice/Data \&#xA; -v /app/onlyoffice/CommunityServer/logs:/var/log/onlyoffice \&#xA; -v /app/onlyoffice/CommunityServer/letsencrypt:/etc/letsencrypt \&#xA; -v /sys/fs/cgroup:/sys/fs/cgroup:rw \&#xA; onlyoffice/communityserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;${MAIL_SERVER_IP}&lt;/code&gt; is the IP address for &lt;strong&gt;ONLYOFFICE Mail Server&lt;/strong&gt;. You can easily get it using the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MAIL_SERVER_IP=$(docker inspect -f &#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39; onlyoffice-mail-server)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use an automatic installation script to install the whole ONLYOFFICE Community Edition at once. For the mail server correct work you need to specify its hostname &#39;yourdomain.com&#39;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 1&lt;/strong&gt;: Download the Community Edition Docker script file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://download.onlyoffice.com/install/opensource-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;STEP 2&lt;/strong&gt;: Install ONLYOFFICE Community Edition executing the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash opensource-install.sh -md yourdomain.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, use &lt;a href=&#34;https://docs.docker.com/compose/install&#34; title=&#34;docker-compose&#34;&gt;docker-compose&lt;/a&gt;. For the mail server correct work you need to specify its hostname &#39;yourdomain.com&#39;. Assuming you have docker-compose installed, execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/ONLYOFFICE/Docker-CommunityServer/master/docker-compose.groups.yml&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;h3&gt;Docker Issues&lt;/h3&gt; &#xA;&lt;p&gt;As a relatively new project Docker is being worked on and actively developed by its community. So it&#39;s recommended to use the latest version of Docker, because the issues that you encounter might have already been fixed with a newer Docker release.&lt;/p&gt; &#xA;&lt;p&gt;The known Docker issue with ONLYOFFICE Document Server with rpm-based distributives is that sometimes the processes fail to start inside Docker container. Fedora and RHEL/CentOS users should try disabling selinux with setenforce 0. If it fixes the issue then you can either stick with SELinux disabled which is not recommended by RedHat, or switch to using Ubuntu.&lt;/p&gt; &#xA;&lt;h3&gt;Document Server usage issues&lt;/h3&gt; &#xA;&lt;p&gt;Due to the operational characteristic, &lt;strong&gt;Document Server&lt;/strong&gt; saves a document only after the document has been closed by all the users who edited it. To avoid data loss, you must forcefully disconnect the &lt;strong&gt;Document Server&lt;/strong&gt; users when you need to stop &lt;strong&gt;Document Server&lt;/strong&gt; in cases of the application update, server reboot etc. To do that, execute the following script on the server where &lt;strong&gt;Document Server&lt;/strong&gt; is installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker exec &amp;lt;CONTAINER&amp;gt; documentserver-prepare4shutdown.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note, that both executing the script and disconnecting users may take a long time (up to 5 minutes).&lt;/p&gt; &#xA;&lt;h2&gt;Project Information&lt;/h2&gt; &#xA;&lt;p&gt;Official website: &lt;a href=&#34;https://www.onlyoffice.com/?utm_source=github&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=GitHubDockerDS&#34;&gt;https://www.onlyoffice.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Code repository: &lt;a href=&#34;https://github.com/ONLYOFFICE/DocumentServer&#34; title=&#34;https://github.com/ONLYOFFICE/DocumentServer&#34;&gt;https://github.com/ONLYOFFICE/DocumentServer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docker Image: &lt;a href=&#34;https://github.com/ONLYOFFICE/Docker-DocumentServer&#34; title=&#34;https://github.com/ONLYOFFICE/Docker-DocumentServer&#34;&gt;https://github.com/ONLYOFFICE/Docker-DocumentServer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;License: &lt;a href=&#34;https://help.onlyoffice.com/products/files/doceditor.aspx?fileid=4358397&amp;amp;doc=K0ZUdlVuQzQ0RFhhMzhZRVN4ZFIvaHlhUjN2eS9XMXpKR1M5WEppUk1Gcz0_IjQzNTgzOTci0&#34; title=&#34;GNU AGPL v3.0&#34;&gt;GNU AGPL v3.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Free version vs commercial builds comparison: &lt;a href=&#34;https://github.com/ONLYOFFICE/DocumentServer#onlyoffice-document-server-editions&#34;&gt;https://github.com/ONLYOFFICE/DocumentServer#onlyoffice-document-server-editions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SaaS version: &lt;a href=&#34;https://www.onlyoffice.com/cloud-office.aspx?utm_source=github&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=GitHubDockerDS&#34;&gt;https://www.onlyoffice.com/cloud-office.aspx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;User Feedback and Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problems with or questions about this image, please visit our official forum to find answers to your questions: &lt;a href=&#34;https://forum.onlyoffice.com&#34;&gt;forum.onlyoffice.com&lt;/a&gt; or you can ask and answer ONLYOFFICE development questions on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/onlyoffice&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>santiment/sanr-pos-network</title>
    <updated>2023-09-30T01:38:42Z</updated>
    <id>tag:github.com,2023-09-30:/santiment/sanr-pos-network</id>
    <link href="https://github.com/santiment/sanr-pos-network" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Running SANR Network node in readonly mode&lt;/h1&gt; &#xA;&lt;h2&gt;Minimum technical requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU 8 CORE&lt;/li&gt; &#xA; &lt;li&gt;MEMORY 16 GB&lt;/li&gt; &#xA; &lt;li&gt;HDD 300 GB SSD&lt;/li&gt; &#xA; &lt;li&gt;Static IP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended technical requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU 16 CORE&lt;/li&gt; &#xA; &lt;li&gt;MEMORY 32 GB&lt;/li&gt; &#xA; &lt;li&gt;HDD 300 GB SSD&lt;/li&gt; &#xA; &lt;li&gt;Static IP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Software&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS &lt;a href=&#34;https://ubuntu.com/server&#34;&gt;Ubuntu latest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1. Environment setup&lt;/h2&gt; &#xA;&lt;h3&gt;1.1 Create a directory and Navigate to it&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir -p /opt/sanchain/readonly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /opt/sanchain/readonly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;1.2 Clone the Project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/santiment/sanr-pos-network.git .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;1.3 Configuration and settings edit&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mv env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nano .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EXTERNAL_IP&lt;/code&gt;=Server external address&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.4 Configure the Node Type&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ln -s docker-compose-readonly.yml docker-compose.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;1.5 Launch the Project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>