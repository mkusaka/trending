<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-29T01:40:10Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>latte-soft/0x1D</title>
    <updated>2022-10-29T01:40:10Z</updated>
    <id>tag:github.com,2022-10-29:/latte-soft/0x1D</id>
    <link href="https://github.com/latte-soft/0x1D" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Roblox Studio Remote Code Execution (RCE) Vulnerability&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://latte.to/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;100&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/latte-banner/latte-banner-dark-theme.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://latte.to/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;100&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/latte-banner/latte-banner-light-theme.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &#xA;  &lt;!-- DARK MODE --&gt; &lt;a href=&#34;https://latte.to/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/dark-mode/website-icon-white.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://latte.to/invite/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/dark-mode/discord-clyde-icon-white.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/lattesoftworks/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/dark-mode/twitter-icon-white.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/latte-soft/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/dark-mode/github-icon-white.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.roblox.com/groups/10685936/Latte-Softworks#!/about/#gh-dark-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/dark-mode/roblox-icon-white.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;mailto:support@latte.to&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/dark-mode/email-icon-white.svg#gh-dark-mode-only&#34;&gt; &lt;/a&gt; &#xA;  &lt;!-- LIGHT MODE --&gt; &lt;a href=&#34;https://latte.to/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/light-mode/website-icon-black.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://latte.to/invite/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/light-mode/discord-clyde-icon-black.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/lattesoftworks/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/light-mode/twitter-icon-black.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/latte-soft/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/light-mode/github-icon-black.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.roblox.com/groups/10685936/Latte-Softworks#!/about/#gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/light-mode/roblox-icon-black.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;a href=&#34;mailto:support@latte.to%23gh-light-mode-only&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;24&#34; src=&#34;https://github.com/latte-soft/.github/raw/master/assets/icons/light-mode/email-icon-black.svg#gh-light-mode-only&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;0x1D&lt;/h1&gt; &#xA;&lt;p&gt;Roblox Studio Remote Code Execution (RCE) Vulnerability | By &lt;a href=&#34;https://latte.to&#34;&gt;Latte Softworks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;General TLDR&lt;/h2&gt; &#xA;&lt;p&gt;This vulnerability allows the ability for any Roblox Studio plugin (Locally or on the marketplace) to gain direct machine access and achieve &#34;RCE&#34;, where one can get a reverse shell or execute a Remote Access Trojan (RAT) program on your machine. &lt;a href=&#34;https://latte.to/invite&#34;&gt;latte.to/invite &amp;lt;3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;i&gt;Documents &amp;amp; code snippets are licensed under the MIT License, see LICENSE.txt for more information.&lt;/i&gt; &lt;br&gt; Written by &lt;a href=&#34;https://github.com/regginator&#34;&gt;Reggie&lt;/a&gt; for &lt;a href=&#34;https://latte.to&#34;&gt;Latte Softworks&lt;/a&gt; &lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hey, folks! In late August this year, I discovered something fairly &lt;em&gt;peculiar&lt;/em&gt; about the Roblox Binary Model Format (&lt;code&gt;rbxm&lt;/code&gt;/&lt;code&gt;rbxl&lt;/code&gt;) and a certain jump in &lt;code&gt;TypeId&lt;/code&gt;s. (Each TypeId denotes a type of property in the binary format; e.g. &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;UDim&lt;/code&gt;, &lt;code&gt;Vector3&lt;/code&gt;, etc.. We&#39;ll learn more about this later.) &lt;br&gt; We are leaking this RCE due to the fact that Roblox has put out a change in &lt;code&gt;sitetest2.robloxlabs&lt;/code&gt;/&lt;code&gt;zintegration&lt;/code&gt; that could prevent direct bytecode execution through this method in the future. We&#39;ll talk about this part later.. ;) &lt;br&gt; &lt;br&gt; I&#39;ll continue to refer to this binary format as the &#34;&lt;code&gt;rbxm&lt;/code&gt;&#34; format, but I&#39;ts the exact same as &lt;code&gt;rbxl&lt;/code&gt;. &lt;br&gt; &lt;br&gt; For me to be able to properly explain all of this, you will need to take in and understand a few key aspects of the format relevant to this &#34;vulnarability&#34;: &lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;There are a couple of fairly well-made documents containing decent previous community findings and documentation on the rbxm format, the best probably being in &lt;a href=&#34;https://dom.rojo.space/binary&#34;&gt;the docs for rbx-dom&lt;/a&gt;. (Yes, the same team that made &lt;a href=&#34;https://rojo.space&#34;&gt;Rojo&lt;/a&gt;) There are some minor issues with this doc such as the header signature being &#34;&lt;code&gt;89 FF 0A 1A 0A&lt;/code&gt;&#34; (Hex), when it&#39;s actually &lt;code&gt;89 FF 0D 0A 1A 0A&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Each rbxm file contains first a &lt;a href=&#34;https://dom.rojo.space/binary#file-header&#34;&gt;file header&lt;/a&gt;, and then a proceeding list of &#34;&lt;a href=&#34;https://dom.rojo.space/binary#chunks&#34;&gt;chunks&lt;/a&gt;&#34;. We&#39;re personally interested in the &lt;a href=&#34;https://dom.rojo.space/binary#prop-chunk&#34;&gt;&lt;code&gt;PROP&lt;/code&gt;&lt;/a&gt; and (more recently, undocumented) &lt;code&gt;SIGN&lt;/code&gt; chunk.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Chunks themselves &lt;em&gt;can&lt;/em&gt; be compressed using either the &lt;a href=&#34;https://en.wikipedia.org/wiki/LZ4_(compression_algorithm)&#34;&gt;LZ4&lt;/a&gt; compression algorithm, or, (just this week, also undocumented) the &lt;a href=&#34;https://github.com/facebook/zstd&#34;&gt;&#34;zstd&#34;&lt;/a&gt; compression algorithm.&lt;br&gt;You can see more about how chunks with compression work &lt;a href=&#34;https://dom.rojo.space/binary#chunks&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All &lt;a href=&#34;https://dom.rojo.space/binary#prop-chunk&#34;&gt;&lt;code&gt;PROP&lt;/code&gt;&lt;/a&gt; chunks contain the Roblox property info itself, as-well as an enumerated 1-byte integer value we call the &#34;&lt;code&gt;TypeId&lt;/code&gt;&#34;. This TypeId references a very specific type of property in the format specifically so the serailizer can encode/decode each property. For example, &lt;code&gt;BaseScript.Source&lt;/code&gt; is usually represented under the type id 1/0x01 (&lt;code&gt;String&lt;/code&gt;). The first 4 bytes contain the specific length of bytes to read, the rest is the string itself. You can look at more examples &lt;a href=&#34;https://dom.rojo.space/binary#data-types&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;SIGN&lt;/code&gt; chunk that was just recently added to Studio contains a &#34;key&#34;/hash of the file itself, used internally for loading &#34;optimized&#34; &lt;code&gt;CoreScriptPackage&lt;/code&gt;s or &lt;code&gt;BuiltInPlugins&lt;/code&gt;. As of now, we don&#39;t really have a clear workaround for this chunk. (It&#39;s REQUIRED for loading bytecode directly under TypeId 0x1D, which we&#39;ll talk about in just a moment)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Theres FAR MORE to the format to this in general, but this is really all you need to know for this situation. This vast information is also why we&#39;ll be working on our own official documentation of the modern rbxm format in the future, so stay tuned into our &lt;a href=&#34;https://latte.to/invite&#34;&gt;Discord Server&lt;/a&gt; for more!&lt;/p&gt; &#xA;&lt;h2&gt;TypeId &#34;&lt;code&gt;0x1D&lt;/code&gt;&#34;&lt;/h2&gt; &#xA;&lt;p&gt;We managed to discover this unique TypeId due to some official model files Roblox put out for their &#34;&lt;code&gt;BuiltInPlugins&lt;/code&gt;&#34;. It&#39;s read almost equivalent to the &lt;code&gt;String&lt;/code&gt; property-type, except for the fact that it&#39;s binary data and not UTF-8. In the disassembled source, it is officially denoted as &#34;&lt;code&gt;Bytecode&lt;/code&gt;&#34;, so we&#39;re calling it &lt;code&gt;BytecodeString&lt;/code&gt; in our pseudo reference! &lt;br&gt; In our &lt;em&gt;very&lt;/em&gt; extensive testing, (so much we almost decided to jump off of a bridge) we figured out that bytecode wouldn&#39;t directly load in the Player, or RCC (Server), and would return a bad/corrupted file error or similar. This is ultimately due to the &lt;code&gt;SIGN&lt;/code&gt; chunk Roblox uses internally in the rbxm format. &lt;br&gt; I&#39;m only here talking about this in the first place because Roblox Studio doesn&#39;t actually totally respect this chunk for the type; right now, that is.. You can directly load Luau VM bytecode in studio under a developer plugin or model, no-matter if it&#39;s a local plugin or on the marketplace. :) &lt;br&gt; &lt;br&gt; With that knowledge, you can directly load and run any Luau VM bytecode instantly under anyone&#39;s environment! In-case you didn&#39;t know, &lt;a href=&#34;https://v3rmillion.net/showthread.php?tid=1149589&#34;&gt;that&#39;s almost like giving full machine-instruction access&lt;/a&gt; lol.&lt;/p&gt; &#xA;&lt;h2&gt;Luau Bytecode &amp;amp; RCE From the VM&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m not &lt;em&gt;the best&lt;/em&gt; when it comes to exploiting the Lua/Luau VM at runtime (modifying instructions directly), but you can use any number of these resources to achieve direct RCE in the Luau Virtual Machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ulidtko/51b8671260db79da64d193e41d7e7d16&#34;&gt;Exploiting Lua 5.1 on x86_64&lt;/a&gt; (Still works the same way in &lt;a href=&#34;https://github.com/Roblox/luau/raw/master/VM/src/lvmexecute.cpp#L394&#34;&gt;Luau&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v3rmillion.net/showthread.php?pid=8114661#pid8114661&#34;&gt;Reply From Defcon42 on a Previous Exploit ACE Vulnarability&lt;/a&gt; (Still can reference here)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.luac.nl/&#34;&gt;Lua Bytecode Explorer&lt;/a&gt; (Similar to godbolt, but for Lua. Again, you can use these same concepts with the Luau VM)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Proof of Concept&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve provided a basic proof-of-concept for this in the &lt;a href=&#34;https://raw.githubusercontent.com/latte-soft/0x1D/master/src/build&#34;&gt;src/build&lt;/a&gt; directory, which when placed in your Studio &lt;code&gt;Plugins&lt;/code&gt; folder and a game is loaded, will run directly under the Luau Bytecode Format V3. (Currently in Studio at the time of writing) &lt;br&gt; &lt;br&gt; Since I&#39;m LAZY (lol) I used &lt;a href=&#34;https://rojo.space&#34;&gt;Rojo&lt;/a&gt; to generate an RBXM with a script containing Luau bytecode, then editing the file in a hex editor afterward and changing the &lt;code&gt;TypeId&lt;/code&gt; for &lt;code&gt;Script.Source&lt;/code&gt; from 0x01 to 0x1D. Again, It&#39;s just meant to be a very basic proof of concept showing the direct loading of Luau bytecode from an rbxm.&lt;/p&gt; &#xA;&lt;h2&gt;Conclusion&lt;/h2&gt; &#xA;&lt;p&gt;After gatekeeping this for a little over 2 months successfully without anyone else directly figuring out about this issue, we&#39;ve decided to release a basic form of the method after Roblox has decided to add a change to how they handle this. &lt;br&gt; &lt;br&gt; We will be releasing our own RBXM format implementation w/ DOM, which will also include further documentation on the format in the near future. Make sure to join &lt;a href=&#34;https://latte.to&#34;&gt;our Discord Server&lt;/a&gt; to stay tuned!&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reggie - &lt;a href=&#34;https://github.com/regginator&#34;&gt;GitHub&lt;/a&gt; | &lt;a href=&#34;https://v3rmillion.net/member.php?action=profile&amp;amp;uid=1763716&#34;&gt;V3rm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LuaPhysics - &lt;a href=&#34;https://github.com/LuaPhysics&#34;&gt;GitHub&lt;/a&gt; | &lt;a href=&#34;https://v3rmillion.net/member.php?action=profile&amp;amp;uid=1149709&#34;&gt;V3rm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Defcon42 (HUGE help) - &lt;a href=&#34;https://v3rmillion.net/member.php?action=profile&amp;amp;uid=783958&#34;&gt;V3rm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>