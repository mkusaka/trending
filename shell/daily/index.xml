<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-16T01:38:43Z</updated>
  <subtitle>Daily Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>XargonWan/RetroDECK</title>
    <updated>2022-10-16T01:38:43Z</updated>
    <id>tag:github.com,2022-10-16:/XargonWan/RetroDECK</id>
    <link href="https://github.com/XargonWan/RetroDECK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy and fancy enviornment for managing and launching your retro games on Steam Deck without relying on a custom firmware.&lt;/p&gt;&lt;hr&gt;&lt;p float=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/XargonWan/RetroDECK/raw/main/res/logo.png?raw=true&#34; alt=&#34;RetroDECK logo&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/XargonWan/RetroDECK/total?label=downloads&#34; alt=&#34;GitHub all releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/951662718102962256?label=discord&#34; alt=&#34;Discord&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/XargonWan/RetroDECK&#34; alt=&#34;GitHub&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;RetroDECK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;RetroDECK&lt;/strong&gt; brings an environment to catalog and play your retro games directly from SteamOS and it&#39;s tailored specifically for the &lt;strong&gt;Steam Deck&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s inspired by embedded emulation systems like AmberELEC, EmuELEC, CoreELEC, Lakka, and Batocera.&lt;/p&gt; &#xA;&lt;p&gt;Powered by &lt;a href=&#34;https://es-de.org&#34;&gt;EmulationStation Desktop Edition&lt;/a&gt;, which uses RetroArch and other standalone emulators to allow you to import and play your favorite retro (and even not-so-retro) games in a tidy environment without flooding your Steam library.&lt;/p&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://retrodeck.net&#34;&gt;website&lt;/a&gt; and Join our &lt;a href=&#34;https://discord.gg/Dz3szYsP8g&#34;&gt;Discord&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p float=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/XargonWan/RetroDECK/raw/main/res/screenshots/screen03.jpeg?raw=true&#34; alt=&#34;screenshot&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://github.com/XargonWan/RetroDECK/raw/main/res/screenshots/screen04.jpeg?raw=true&#34; alt=&#34;screenshot&#34; width=&#34;300&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/XargonWan/RetroDECK/raw/main/res/screenshots/screen05.jpeg?raw=true&#34; alt=&#34;screenshot&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://github.com/XargonWan/RetroDECK/raw/main/res/screenshots/screen06.jpeg?raw=true&#34; alt=&#34;screenshot&#34; width=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;What does it mean to be &#34;tailored for the Steam Deck&#34;?&lt;/h2&gt; &#xA;&lt;p&gt;It means that all the configurations are ready to go and tweaked to get the best graphics and performance on the Deck without having the hassle of choosing, installing and configuring tons of emulators: just put your games in the roms folder, provide your own bioses and start your games.&lt;/p&gt; &#xA;&lt;h2&gt;Do I have to partition my disk to install it?&lt;/h2&gt; &#xA;&lt;p&gt;No partitioning or formatting is required. RetroDECK (differently from AmberELEC, Batocera and others) comes as a flatpak: just install it as any other application and launch it from your desktop or Steam library. You still retain the ability to return to SteamOS by pressing the Steam button or opening the Quick Access menu while using RetroDECK.&lt;/p&gt; &#xA;&lt;h2&gt;Is it available on Windows?&lt;/h2&gt; &#xA;&lt;p&gt;No, RetroDECK doesn&#39;t support Windows, but the project is fully open source so you can port it if you wish. As an alternative, &lt;a href=&#34;http://www.retrobat.ovh/&#34;&gt;Retrobat&lt;/a&gt; offers similar functionality (but may not be compatible with RetroDECK&#39;s rom paths).&lt;/p&gt; &#xA;&lt;h2&gt;How can I install it?&lt;/h2&gt; &#xA;&lt;p&gt;Just install it from Discover store.&lt;br&gt; However if you want to test the cooker version you can follow the &lt;a href=&#34;https://github.com/XargonWan/RetroDECK/wiki/How-to:-Getting-started&#34;&gt;Installation instructions&lt;/a&gt; on the Wiki&lt;/p&gt; &#xA;&lt;h2&gt;Can I help?&lt;/h2&gt; &#xA;&lt;p&gt;Of course, any help is appreciated, and not only by programming, just check out our &lt;a href=&#34;https://discord.gg/Dz3szYsP8g&#34;&gt;Discord&lt;/a&gt;! &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h6&gt;&lt;em&gt;The Steam Deck logo is a registered trademark of Valve Corporation. This project is in no way officially affiliated with Valve.&lt;br&gt;All trademarks, logos and brand names are the property of their respective owners. All company, product and service names used in this project are for identification purposes only. Use of these names, trademarks and brands does not imply endorsement.&lt;/em&gt;&lt;/h6&gt;</summary>
  </entry>
  <entry>
    <title>tmux-plugins/tmux-resurrect</title>
    <updated>2022-10-16T01:38:43Z</updated>
    <id>tag:github.com,2022-10-16:/tmux-plugins/tmux-resurrect</id>
    <link href="https://github.com/tmux-plugins/tmux-resurrect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Persists tmux environment across system restarts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tmux Resurrect&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/tmux-plugins/tmux-resurrect&#34;&gt;&lt;img src=&#34;https://travis-ci.org/tmux-plugins/tmux-resurrect.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Restore &lt;code&gt;tmux&lt;/code&gt; environment after system restart.&lt;/p&gt; &#xA;&lt;p&gt;Tmux is great, except when you have to restart the computer. You lose all the running programs, working directories, pane layouts etc. There are helpful management tools out there, but they require initial configuration and continuous updates as your workflow evolves or you start new projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tmux-resurrect&lt;/code&gt; saves all the little details from your tmux environment so it can be completely restored after a system restart (or when you feel like it). No configuration is required. You should feel like you never quit tmux.&lt;/p&gt; &#xA;&lt;p&gt;It even (optionally) &lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_vim_and_neovim_sessions.md&#34;&gt;restores vim and neovim sessions&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Automatic restoring and continuous saving of tmux env is also possible with &lt;a href=&#34;https://github.com/tmux-plugins/tmux-continuum&#34;&gt;tmux-continuum&lt;/a&gt; plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Screencast&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vimeo.com/104763018&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/video/screencast_img.png&#34; alt=&#34;screencast screenshot&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Key bindings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;prefix + Ctrl-s&lt;/code&gt; - save&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prefix + Ctrl-r&lt;/code&gt; - restore&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;About&lt;/h3&gt; &#xA;&lt;p&gt;This plugin goes to great lengths to save and restore all the details from your &lt;code&gt;tmux&lt;/code&gt; environment. Here&#39;s what&#39;s been taken care of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;all sessions, windows, panes and their order&lt;/li&gt; &#xA; &lt;li&gt;current working directory for each pane&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;exact pane layouts&lt;/strong&gt; within windows (even when zoomed)&lt;/li&gt; &#xA; &lt;li&gt;active and alternative session&lt;/li&gt; &#xA; &lt;li&gt;active and alternative window for each session&lt;/li&gt; &#xA; &lt;li&gt;windows with focus&lt;/li&gt; &#xA; &lt;li&gt;active pane for each window&lt;/li&gt; &#xA; &lt;li&gt;&#34;grouped sessions&#34; (useful feature when using tmux with multiple monitors)&lt;/li&gt; &#xA; &lt;li&gt;programs running within a pane! More details in the &lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_programs.md&#34;&gt;restoring programs doc&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_vim_and_neovim_sessions.md&#34;&gt;restoring vim and neovim sessions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_pane_contents.md&#34;&gt;restoring pane contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_previously_saved_environment.md&#34;&gt;restoring a previously saved environment&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Requirements / dependencies: &lt;code&gt;tmux 1.9&lt;/code&gt; or higher, &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tested and working on Linux, OSX and Cygwin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tmux-resurrect&lt;/code&gt; is idempotent! It will not try to restore panes or windows that already exist.&lt;br&gt; The single exception to this is when tmux is started with only 1 pane in order to restore previous tmux env. Only in this case will this single pane be overwritten.&lt;/p&gt; &#xA;&lt;h3&gt;Installation with &lt;a href=&#34;https://github.com/tmux-plugins/tpm&#34;&gt;Tmux Plugin Manager&lt;/a&gt; (recommended)&lt;/h3&gt; &#xA;&lt;p&gt;Add plugin to the list of TPM plugins in &lt;code&gt;.tmux.conf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;set -g @plugin &#39;tmux-plugins/tmux-resurrect&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hit &lt;code&gt;prefix + I&lt;/code&gt; to fetch the plugin and source it. You should now be able to use the plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/tmux-plugins/tmux-resurrect ~/clone/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add this line to the bottom of &lt;code&gt;.tmux.conf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;run-shell ~/clone/path/resurrect.tmux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reload TMUX environment with: &lt;code&gt;$ tmux source-file ~/.tmux.conf&lt;/code&gt;. You should now be able to use the plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Docs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/migrating_from_tmuxinator.md&#34;&gt;Guide for migrating from tmuxinator&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configuration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/custom_key_bindings.md&#34;&gt;Changing the default key bindings&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/hooks.md&#34;&gt;Setting up hooks on save &amp;amp; restore&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Only a conservative list of programs is restored by default:&lt;br&gt; &lt;code&gt;vi vim nvim emacs man less more tail top htop irssi weechat mutt&lt;/code&gt;.&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_programs.md&#34;&gt;Restoring programs doc&lt;/a&gt; explains how to restore additional programs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/save_dir.md&#34;&gt;Change a directory&lt;/a&gt; where &lt;code&gt;tmux-resurrect&lt;/code&gt; saves tmux environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Optional features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_vim_and_neovim_sessions.md&#34;&gt;Restoring vim and neovim sessions&lt;/a&gt; is nice if you&#39;re a vim/neovim user.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/docs/restoring_pane_contents.md&#34;&gt;Restoring pane contents&lt;/a&gt; feature.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other goodies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-copycat&#34;&gt;tmux-copycat&lt;/a&gt; - a plugin for regex searches in tmux and fast match selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-yank&#34;&gt;tmux-yank&lt;/a&gt; - enables copying highlighted text to system clipboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-open&#34;&gt;tmux-open&lt;/a&gt; - a plugin for quickly opening highlighted file or a url&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tmux-continuum&#34;&gt;tmux-continuum&lt;/a&gt; - automatic restoring and continuous saving of tmux env&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting bugs and contributing&lt;/h3&gt; &#xA;&lt;p&gt;Both contributing and bug reports are welcome. Please check out &lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mislav&#34;&gt;Mislav Marohnić&lt;/a&gt; - the idea for the plugin came from his &lt;a href=&#34;https://github.com/mislav/dotfiles/raw/2036b5e03fb430bbcbc340689d63328abaa28876/bin/tmux-session&#34;&gt;tmux-session script&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tmux-plugins/tmux-resurrect/master/LICENSE.md&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>