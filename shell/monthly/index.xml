<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-01T01:56:01Z</updated>
  <subtitle>Monthly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mbadolato/iTerm2-Color-Schemes</title>
    <updated>2025-01-01T01:56:01Z</updated>
    <id>tag:github.com,2025-01-01:/mbadolato/iTerm2-Color-Schemes</id>
    <link href="https://github.com/mbadolato/iTerm2-Color-Schemes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Over 370 terminal color schemes/themes for iTerm/iTerm2. Includes ports to Terminal, Konsole, PuTTY, Xresources, XRDB, Remmina, Termite, XFCE, Tilda, FreeBSD VT, Terminator, Kitty, MobaXterm, LXTerminal, Microsoft&#39;s Windows Terminal, Visual Studio, Alacritty, and many more&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iTerm Color Schemes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#installation-instructions&#34;&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#extra&#34;&gt;Extra&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#x11-installation&#34;&gt;X11 Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#konsole-color-schemes&#34;&gt;Konsole color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#terminator-color-schemes&#34;&gt;Terminator color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#terminal-color-schemes&#34;&gt;Mac OS Terminal color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#putty-color-schemes&#34;&gt;PuTTY color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#xfce-terminal-color-schemes&#34;&gt;Xfce Terminal color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#freebsd-vt-color-schemes&#34;&gt;FreeBSD vt(4) color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#previewing-color-schemes&#34;&gt;Previewing color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#mobaxterm-color-schemes&#34;&gt;MobaXterm color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#lxterminal-color-schemes&#34;&gt;LXTerminal color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#visual-studio-code-color-schemes&#34;&gt;Visual Studio Code color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#windows-terminal-color-schemes&#34;&gt;Windows Terminal color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#alacritty-color-schemes&#34;&gt;Alacritty color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#ghostty-color-schemes&#34;&gt;Ghostty color schemes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#termux-color-schemes&#34;&gt;Termux color schemes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;This is a set of color schemes for iTerm (aka iTerm2). It also includes ports to Terminal, Konsole, PuTTY, Xresources, XRDB, Remmina, Termite, XFCE, Tilda, FreeBSD VT, Terminator, Kitty, Ghostty, MobaXterm, LXTerminal, Microsoft&#39;s Windows Terminal, Visual Studio, Alacritty&lt;/p&gt; &#xA;&lt;p&gt;Screenshots below and in the &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/&#34;&gt;screenshots&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Installation Instructions&lt;/h2&gt; &#xA;&lt;p&gt;There are 3 ways to install an iTerm theme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Direct way via keyboard shortcut:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Launch iTerm 2. Get the latest version at &lt;a href=&#34;http://www.iterm2.com&#34;&gt;iterm2.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Type CMD+i (⌘+i)&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to &lt;strong&gt;Colors&lt;/strong&gt; tab&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Color Presets&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Import&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click on the &lt;strong&gt;schemes&lt;/strong&gt; folder&lt;/li&gt; &#xA;   &lt;li&gt;Select the &lt;strong&gt;.itermcolors&lt;/strong&gt; profiles you would like to import&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Color Presets&lt;/strong&gt; and choose a color scheme&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via iTerm preferences (go to the same configuration location as above):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Launch iTerm 2. Get the latest version at &lt;a href=&#34;http://www.iterm2.com&#34;&gt;iterm2.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;iTerm2&lt;/strong&gt; menu title&lt;/li&gt; &#xA;   &lt;li&gt;Select &lt;strong&gt;Preferences...&lt;/strong&gt; option&lt;/li&gt; &#xA;   &lt;li&gt;Select &lt;strong&gt;Profiles&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to &lt;strong&gt;Colors&lt;/strong&gt; tab&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Color Presets&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Import&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Select the .itermcolors file(s) of the &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/schemes/&#34;&gt;schemes&lt;/a&gt; you&#39;d like to use * Click on &lt;strong&gt;Color Presets&lt;/strong&gt; and choose a color scheme&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Via Bash script&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Launch iTerm 2. Get the latest version at &lt;a href=&#34;http://www.iterm2.com&#34;&gt;iterm2.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run the following command:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Import all color schemes&#xA;tools/import-scheme.sh schemes/*&#xA;&#xA;# Import all color schemes (verbose mode)&#xA;tools/import-scheme.sh -v schemes/*&#xA;&#xA;# Import specific color schemes (quotations are needed for schemes with spaces in name)&#xA;tools/import-scheme.sh &#39;schemes/SpaceGray Eighties.itermcolors&#39; # by file path&#xA;tools/import-scheme.sh &#39;SpaceGray Eighties&#39;       # by scheme name&#xA;tools/import-scheme.sh Molokai &#39;SpaceGray Eighties&#39;     # import multiple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Restart iTerm 2. (Need to quit iTerm 2 to reload the configuration file.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For convenient work with generation scripts, it is recommended to install &lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;pyenv&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pyenv install&lt;/code&gt; inside project folder to install python version from &lt;code&gt;.python-version&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; to install the project dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How to add new theme&lt;/h3&gt; &#xA;&lt;p&gt;Have a great iTerm theme? Send it to me via a Pull Request!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get your theme&#39;s&lt;code&gt;.itermcolors&lt;/code&gt; file. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Launch iTerm 2&lt;/li&gt; &#xA;   &lt;li&gt;Type CMD+i (⌘+i)&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to &lt;strong&gt;Colors&lt;/strong&gt; tab&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Color Presets&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;strong&gt;Export&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Save the .itermcolors file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Put your theme file into &lt;code&gt;/schemes/&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;mv &amp;lt;your-itermcolors-file&amp;gt; schemes/&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Generate other formats for your theme using the &lt;code&gt;gen.py&lt;/code&gt; script. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd tools/ &amp;amp;&amp;amp; python3 gen.py&lt;/code&gt; OR&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd tools/ &amp;amp;&amp;amp; ./gen.py&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you only want to generate files for your theme, you can specify this with the &lt;code&gt;-s&lt;/code&gt; flag. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;./gen.py -s Dracula&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Generate a screenshot of your theme using the &lt;code&gt;screenshot_gen&lt;/code&gt; tool. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd tools/ &amp;amp;&amp;amp; python -m screenshot_gen&lt;/code&gt;. This will generate new screenshots where they are missing.&lt;/li&gt; &#xA;   &lt;li&gt;If you have &lt;code&gt;oxipng&lt;/code&gt; or &lt;code&gt;zopflipng&lt;/code&gt; installed, the screenshot will be optimized for you.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;generate_screenshots_readme.py&lt;/code&gt; to include your theme&#39;s screenshot in the &lt;code&gt;screenshots/README.md&lt;/code&gt; file: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd tools/ &amp;amp;&amp;amp; python generate_screenshots_readme.py&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Update &lt;code&gt;README.md&lt;/code&gt; to include your theme and screenshot. Also update &lt;code&gt;CREDITS.md&lt;/code&gt; to credit yourself for your contribution.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How to add new template&lt;/h3&gt; &#xA;&lt;p&gt;Do you want to convert existing iTerm themes to themes for your favorite terminal/editor/etc?&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get config file from your terminal/editor/etc.&lt;/li&gt; &#xA; &lt;li&gt;Change actual colors in config to template placeholders from the list below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;  {{ Background_Color }}&#xA;  {{ Bold_Color }}&#xA;  {{ Cursor_Color }}&#xA;  {{ Cursor_Text_Color }}&#xA;  {{ Foreground_Color }}&#xA;  {{ Selected_Text_Color }}&#xA;  {{ Selection_Color }}&#xA;  {{ Ansi_0_Color }} // black&#xA;  {{ Ansi_1_Color }} // red&#xA;  {{ Ansi_2_Color }} // green&#xA;  {{ Ansi_3_Color }} // yellow&#xA;  {{ Ansi_4_Color }} // blue&#xA;  {{ Ansi_5_Color }} // magenta&#xA;  {{ Ansi_6_Color }} // cyan&#xA;  {{ Ansi_7_Color }} // white&#xA;  {{ Ansi_8_Color }} // bright black&#xA;  {{ Ansi_9_Color }} // bright red&#xA;  {{ Ansi_10_Color }} // bright green&#xA;  {{ Ansi_11_Color }} // bright yellow&#xA;  {{ Ansi_12_Color }} // bright blue&#xA;  {{ Ansi_13_Color }} // bright magenta&#xA;  {{ Ansi_14_Color }} // bright cyan&#xA;  {{ Ansi_15_Color }} // bright white&#xA;&#xA;  Each color has these fields:&#xA; - {{ Background_Color.hex }} for hex representation&#xA; - {{ Background_Color.rgb }} for rgb representation as a &#34;(r, g, b)&#34; string&#xA; - {{ Backgroun_Color.guint16 }} for guint16 representation&#xA;&#xA;  Also you have access to this metadata fields:&#xA; - {{ Guint16_Palette }} with a string containing all ansi colors as guint16 values&#xA; - {{ Dark_Theme }} which contains a sign that the theme is dark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;If you need a new value type for color, add it too &lt;code&gt;tools/converter.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Put your template file into &lt;code&gt;tool/templates&lt;/code&gt;. A folder with schemas will be created based on the filename. And the file extension will remain with all generated ones. Example: &lt;code&gt;editor.ext&lt;/code&gt; file will generate schemas as &lt;code&gt;editor/scheme_name.ext&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate all existing themes for all templates &lt;code&gt;cd tools/ &amp;amp;&amp;amp; ./gen.py&lt;/code&gt;. Or, if you only want to generate schemas for your template, you can use the &lt;code&gt;-t&lt;/code&gt; flag.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./gen.py -t kitty&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;If in the process you had to add new dependencies or update the version of python, do not forget to indicate this in &lt;code&gt;requirements.txt&lt;/code&gt; or &lt;code&gt;.python-version&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;0x96f&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/0x96f.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3024 Day&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/3024_day.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3024 Night&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/3024_night.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Aardvark Blue&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/aardvark_blue.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Abernathy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/abernathy.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Adventure&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/adventure.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AdventureTime&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/adventure_time.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Adwaita Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/adwaita_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Adwaita&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/adwaita.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Afterglow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/afterglow.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alabaster&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/alabaster.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AlienBlood&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/alien_blood.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Andromeda&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/andromeda.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Apple Classic&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/apple-classic.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Apple System Colors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/apple-system-colors.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Arcoiris&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/arcoiris.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Argonaut&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/argonaut.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Arthur&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/arthur.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AtelierSulphurpool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/atelier-sulphurpool_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Atom&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/atom.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Atom One Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/atom_one_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ayu&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ayu.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ayu Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ayu_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ayu Mirage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ayu_mirage.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Aura&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/aura.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Aurora&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/aurora.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Banana Blueberry&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/banana_blueberry.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Batman&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/batman.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Belafonte Day&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/belafonte_day.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Belafonte Night&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/belafonte_night.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BirdsOfParadise&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/birds_of_paradise.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Blazer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/blazer.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BlueBerry Pie&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/blueberry_pie.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;BlueDolphin&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/BlueDolphin.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Blue Matrix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/blue_matrix.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bluloco Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/bluloco_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bluloco Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/bluloco_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Borland&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/borland.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Breeze&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/breeze.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Bright Lights&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/bright_lights.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Broadcast&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/broadcast.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Brogrammer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/brogrammer.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;C64&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/c64.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Calamity&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/calamity.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Catppuccin Frappé&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/catppuccin-frappe.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Catppuccin Latte&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/catppuccin-latte.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Catppuccin Macchiato&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/catppuccin-macchiato.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Catppuccin Mocha&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/catppuccin-mocha.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CGA&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/CGA.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chalk&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/chalk.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chalkboard&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/chalkboard.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ChallengerDeep&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/challenger_deep.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chester&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/chester.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ciapre&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ciapre.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CLRS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/clrs.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cobalt Neon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/cobalt_neon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cobalt2&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/cobalt2.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Coffee&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Coffee.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CrayonPonyFish&lt;/h3&gt; &#xA;&lt;h3&gt;CutiePro&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/CutiePro.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/crayon_pony_fish.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cyberdyne&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/cyberdyne.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cyberpunk&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/cyberpunk.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cyberpunk Scarlet Protocol&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/cyberpunk_scarlet_protocol.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dark Modern&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dark_modern.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dark Pastel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dark_pastel.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dark+&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dark_plus.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Darkside&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/darkside.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dayfox&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dayfox.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deep&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/deep.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Desert&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/desert.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Detuned&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/detuned.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dimidium&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dimidium.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DimmedMonokai&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dimmed_monokai.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Django&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Django.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DjangoRebornAgain&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/DjangoRebornAgain.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DjangoSmoothy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/DjangoSmoothy.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Doom One&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/doom_one.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Doom Peacock&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/doom_peacock.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DotGov&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dot_gov.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dracula&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/dracula.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dracula+&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Dracula+.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Duckbones&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/duckbones.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Duotone Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/duotone_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Earthsong&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/earthsong.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Electron Highlighter&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/electron-highlighter.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Elemental&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/elemental.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Elementary&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/elementary.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Embers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/embers.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ENCOM&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/encom.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Espresso&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/espresso.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Espresso Libre&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/espresso_libre.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Everblush&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/everblush.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Everforest Dark - Hard&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/everforest_dark_hard.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fairyfloss&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/fairyfloss.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fahrenheit&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/fahrenheit.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Farmhouse Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/farmhouse-dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Farmhouse Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/farmhouse-light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Fideloper&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/fideloper.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Firefly Traditional&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/firefly-traditional.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FirefoxDev&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/firefox_dev.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Firewatch&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/firewatch.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FishTank&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/fish_tank.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Flat&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/flat.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Flatland&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/flatland.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Flexoki Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/flexoki-dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Flexoki Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/flexoki-light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Floraverse&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/floraverse.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Forest Blue&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/forest_blue.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Framer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/framer.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FrontEndDelight&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/front_end_delight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FunForrest&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/fun_forrest.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Galaxy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/galaxy.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Galizur&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/galizur.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Github&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/github.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/GitHub_Dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Glacier&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/glacier.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Grape&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/grape.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Grass&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/grass.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Grey-green&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Grey-green.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gruber Darker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/gruber-darker.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gruvbox Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/gruvbox_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gruvbox Dark Hard&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/gruvbox_dark_hard.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gruvbox Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/gruvbox_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gruvbox Light Hard&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/gruvbox_light_hard.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;gruvbox_material&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/gruvbox_material.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Guezwhoz&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Guezwhoz.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hacktober&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hacktober.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hardcore&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hardcore.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Harper&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/harper.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Havn Daggry&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/havn_daggry.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Havn Skumring&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/havn_skumring.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;HaX0R_R3D&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/HaX0R_R3D.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;HaX0R_GR33N&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/HaX0R_GR33N.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;HaX0R_BLUE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/HaX0R_BLUE.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;heeler&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/heeler.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Highway&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/highway.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hipster Green&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hipster_green.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hivacruz&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hivacruz.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/homebrew.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hopscotch&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hopscotch.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hopscotch 256&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hopscotch_256.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Horizon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/horizon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hurtado&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hurtado.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hybrid&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/hybrid.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;IC_Green_PPL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ic_green_ppl.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;IC_Orange_PPL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ic_orange_ppl.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iceberg&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iceberg.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;IDEA Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/idea.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;idleToes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/idleToes.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;IR_Black&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ir_black.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Default&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-default.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Dark Background&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-dark-background.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Light Background&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-light-background.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Pastel (Dark Background)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-pastel-dark-background.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Smoooooth&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-smoooooth.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Solarized Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-solarized-dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Solarized Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-solarized-light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Tango Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-tango-dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;iTerm2 Tango Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/iterm2-tango-light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Jackie Brown&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/jackie_brown.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Japanesque&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/japanesque.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Jellybeans&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/jellybeans.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;JetBrains Darcula&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/jetbrains_darcula.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Jubi&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/jubi.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kanagawa Dragon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/kanagawa-dragon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kanagawa Wave&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/kanagawa-wave.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kanagawabones&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/kanagawabones.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kibble&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/kibble.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kolorit&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/kolorit.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Konsolas&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/konsolas.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Kurokula&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/kurokula.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lab Fox&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/lab_fox.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Laser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/laser.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Later This Evening&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/later_this_evening.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lavandula&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/lavandula.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LiquidCarbon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/liquid_carbon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LiquidCarbonTransparent&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/liquid_carbon_transparent.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LiquidCarbonTransparentInverse&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/liquid_carbon_transparent_inverse.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;LoveLace&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/LoveLace.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Man Page&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/man_page.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mariana&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/mariana.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Material&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/material.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MaterialDark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/material_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MaterialDarker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/material_darker.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MaterialDesignColors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/material_design_colors.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MaterialOcean&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/material_ocean.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mathias&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/mathias.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Matrix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/matrix.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dark Matrix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/darkmatrix.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Darker Matrix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/darkermatrix.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Melange Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/melange_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Melange Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/melange_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Medallion&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/medallion.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mellifluous&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/mellifluous.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mellow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/mellow.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Miasma&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/miasma.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Midnight In Mojave&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/midnight_in_mojave.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mirage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/mirage.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Misterioso&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/misterioso.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Molokai&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/molokai.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MonaLisa&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/mona_lisa.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Classic&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-classic.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro Octagon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro-octagon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro Machine&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro-machine.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro Ristretto&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro-ristretto.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro Spectrum&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro-spectrum.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro-light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Pro Light Sun&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai-pro-light-sun.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Remastered&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai_remastered.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Soda&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai_soda.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monokai Vivid&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/monokai_vivid.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;N0tch2k&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/n0tch2k.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Neobones Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/neobones_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Neobones Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/neobones_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Neon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/neon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Neopolitan&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/neopolitan.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Neutron&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/neutron.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nightfox&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/nightfox.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;NightLion v1&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/nightlion_v1.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;NightLion v2&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/nightlion_v2.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Night Owlish Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/night_owlish_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Niji&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/niji.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Novel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/novel.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nocturnal Winter&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/nocturnal_winter.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nord&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/nord.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nord-light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/nord_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;NvimDark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/NvimDark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;NvimLight&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/NvimLight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Obsidian&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/obsidian.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ocean&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ocean.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;OceanicMaterial&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/oceanic_material.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Oceanic Next&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/oceanic_next.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ollie&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ollie.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;One Half Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/onehalfdark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;One Half Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/onehalflight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Operator Mono Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/operator_mono_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Overnight Slumber&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/overnight_slumber.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Oxocarbon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/oxocarbon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Palenight High Contrast&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/PaleNightHC.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pandora&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/pandora.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Paraiso Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/paraiso_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PaulMillr&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/paul_millr.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pencil Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/pencil_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pencil Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/pencil_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Peppermint&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Peppermint.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Piatto Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/piatto_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pnevma&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/pnevma.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Popping and Locking&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Popping_and_Locking.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Primary&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/primary.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pro&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/pro.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pro Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/pro_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Purple Peter&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/purplepeter.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Purple Rain&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/purple_rain.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rapture&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rapture.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Raycast Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/raycast_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Raycast Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/raycast_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rebecca&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rebecca.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Red Alert&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/red_alert.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Red Planet&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/red_planet.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Red Sands&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/red_sands.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Relaxed&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/relaxed.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Retro&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Retro.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RetroLegends&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/RetroLegends.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rippedcasts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rippedcasts.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rosé Pine&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rose-pine.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rosé Pine Dawn&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rose-pine-dawn.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rosé Pine Moon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rose-pine-moon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rouge 2&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/rouge_2.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Royal&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/royal.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ryuuko&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ryuuko.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sakura&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/sakura.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Scarlet Protocol&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/scarlet_protocol.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Seafoam Pastel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/seafoam_pastel.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SeaShells&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/sea_shells.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Seoulbones Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/seoulbones_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Seoulbones Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/seoulbones_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Seti&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/seti.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Shaman&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/shaman.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Shades-Of-Purple&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ShadesOfPurple.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Slate&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/slate.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SleepyHollow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/SleepyHollow.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Smyck&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/smyck.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Snazzy Soft&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/snazzy_soft.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Snazzy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/snazzy.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SoftServer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/soft_server.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Solarized Darcula (With background image)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/solarized_darcula_with_background.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Solarized Darcula (Without background image)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/solarized_darcula.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Solarized Dark - Patched&lt;/h3&gt; &#xA;&lt;p&gt;Some applications assume the ANSI color code 8 is a gray color. Solarized treats this code as equal to the background. This theme is for people who prefer the former. See issues &lt;a href=&#34;https://github.com/mbadolato/iTerm2-Color-Schemes/issues/59&#34;&gt;#59&lt;/a&gt;, &lt;a href=&#34;https://github.com/mbadolato/iTerm2-Color-Schemes/issues/62&#34;&gt;#62&lt;/a&gt;, and &lt;a href=&#34;https://github.com/mbadolato/iTerm2-Color-Schemes/pull/63&#34;&gt;#63&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/solarized_dark_patched.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Solarized Dark Higher Contrast&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/solarized_dark_higher_contrast.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SpaceGray&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/space_gray.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SpaceGray Bright&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/spacegray_bright.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SpaceGray Eighties&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/spacegray_eighties.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;SpaceGray Eighties Dull&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/spacegray_eighties_dull.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Spacedust&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/spacedust.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Spiderman&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/spiderman.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Spring&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/spring.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Square&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/square.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Starlight&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/starlight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sublette&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/sublette.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Subliminal&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/subliminal.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sugarplum&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/Sugarplum.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sundried&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/sundried.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Symfonic&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/symfonic.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;synthwave&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/synthwave.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Synthwave Alpha&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/synthwave_alpha.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Synthwave Everything&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/synthwave-everything.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tango Adapted&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tango_adapted.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tango Half Adapted&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tango_half_adapted.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Teerb&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/teerb.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Terafox&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/terafox.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Terminal Basic&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/terminal_basic.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Thayer Bright&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/thayer_bright.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Hulk&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/the_hulk.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tinacious Design (Dark)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tinacious_design_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tinacious Design (Light)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tinacious_design_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TokyoNight&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tokyonight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TokyoNight Storm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tokyonight-storm.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TokyoNight Moon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tokyonight-moon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TokyoNight Day&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tokyonight-day.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TokyoNight Night&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tokyonight-night.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tomorrow&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tomorrow.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tomorrow Night&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tomorrow_night.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tomorrow Night Blue&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tomorrow_night_blue.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tomorrow Night Bright&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tomorrow_night_bright.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tomorrow Night Eighties&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tomorrow_night_eighties.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tomorrow Night Burns&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/tomorrow_night_burns.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ToyChest&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/toy_chest.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Treehouse&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/treehouse.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Twilight&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/twilight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ubuntu.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;UltraViolent&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ultra_violent.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;UltraDark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/ultradark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Under The Sea&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/under_the_sea.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Unikitty&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/unikitty.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Urple&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/urple.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Vaughn&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/vaughn.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Vesper&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/vesper.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VibrantInk&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/vibrant_ink.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Vimbones&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/vimbones.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Violet Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/violet_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Violet Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/violet_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WarmNeon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/warm_neon.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Wez&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/wez.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Whimsy&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/whimsy.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WildCherry&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/wild_cherry.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Wilmersdorf&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/wilmersdorf.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Wombat&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/wombat.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Wryan&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/wryan.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Xcode dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/xcodedark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Xcode dark (High Contrast)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/xcodedarkhc.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Xcode light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/xcodelight.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Xcode light (High Contrast)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/xcodelighthc.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Xcode WWDC&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/xcodewwdc.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenbones&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenbones.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenbones Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenbones_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenbones Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenbones_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenburn&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenburn.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenburned&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenburned.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenwritten Dark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenwritten_dark.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zenwritten Light&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/screenshots/zenwritten_light.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The schemes &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#novel&#34;&gt;&lt;em&gt;Novel&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#espresso&#34;&gt;&lt;em&gt;Espresso&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#grass&#34;&gt;&lt;em&gt;Grass&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#homebrew&#34;&gt;&lt;em&gt;Homebrew&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#ocean&#34;&gt;&lt;em&gt;Ocean&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#pro&#34;&gt;&lt;em&gt;Pro&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#man-page&#34;&gt;&lt;em&gt;Man Page&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#red-sands&#34;&gt;&lt;em&gt;Red Sands&lt;/em&gt;&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#terminal-basic&#34;&gt;&lt;em&gt;Terminal Basic&lt;/em&gt;&lt;/a&gt; are ports of the schemes of the same name included with the Mac Terminal application. All of Terminal&#39;s schemes have now been ported, with the exception of &lt;em&gt;Solid Colors&lt;/em&gt; (random backgrounds, which iTerm doesn&#39;t support) and &lt;em&gt;Aerogel&lt;/em&gt; (which is hideous).&lt;/li&gt; &#xA; &lt;li&gt;The schemes &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-default&#34;&gt;&lt;em&gt;iTerm2 Default&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-dark-background&#34;&gt;&lt;em&gt;iTerm2 Dark Background&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-light-background&#34;&gt;&lt;em&gt;iTerm2 Light Background&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-pastel-dark-background&#34;&gt;&lt;em&gt;iTerm2 Pastel (Dark Background)&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-smoooooth&#34;&gt;&lt;em&gt;iTerm2 Smoooooth&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-solarized-dark&#34;&gt;&lt;em&gt;iTerm2 Solarized Dark&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-solarized-light&#34;&gt;&lt;em&gt;iTerm2 Solarized Light&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-tango-dark&#34;&gt;&lt;em&gt;iTerm2 Tango Dark&lt;/em&gt;&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/#iterm2-tango-light&#34;&gt;&lt;em&gt;iTerm2 Tango Light&lt;/em&gt;&lt;/a&gt; are ports from the built-in color schemes of iTerm2 (current source is iTerm2 v3.4.19).&lt;/li&gt; &#xA; &lt;li&gt;Credits for all other themes are listed in &lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/CREDITS.md&#34;&gt;CREDITS.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If there are other color schemes you&#39;d like to see included, drop me a line!&lt;/p&gt; &#xA;&lt;h2&gt;Extra&lt;/h2&gt; &#xA;&lt;h3&gt;X11 Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install under the &lt;a href=&#34;https://www.x.org/&#34;&gt;X Window System&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Import the .xrdb file of the scheme you&#39;d like to use:&lt;/p&gt; &lt;p&gt;#include &#34;/home/mbadolato/iTerm2-Color-Schemes/xrdb/Blazer.xrdb&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;#define&lt;/code&gt;s provided by the imported .xrdb file:&lt;/p&gt; &lt;p&gt;Rxvt&lt;em&gt;color0: Ansi_0_Color Rxvt&lt;/em&gt;color1: Ansi_1_Color Rxvt&lt;em&gt;color2: Ansi_2_Color Rxvt&lt;/em&gt;color3: Ansi_3_Color Rxvt&lt;em&gt;color4: Ansi_4_Color Rxvt&lt;/em&gt;color5: Ansi_5_Color Rxvt&lt;em&gt;color6: Ansi_6_Color Rxvt&lt;/em&gt;color7: Ansi_7_Color Rxvt&lt;em&gt;color8: Ansi_8_Color Rxvt&lt;/em&gt;color9: Ansi_9_Color Rxvt&lt;em&gt;color10: Ansi_10_Color Rxvt&lt;/em&gt;color11: Ansi_11_Color Rxvt&lt;em&gt;color12: Ansi_12_Color Rxvt&lt;/em&gt;color13: Ansi_13_Color Rxvt&lt;em&gt;color14: Ansi_14_Color Rxvt&lt;/em&gt;color15: Ansi_15_Color Rxvt&lt;em&gt;colorBD: Bold_Color Rxvt&lt;/em&gt;colorIT: Italic_Color Rxvt&lt;em&gt;colorUL: Underline_Color Rxvt&lt;/em&gt;foreground: Foreground_Color Rxvt&lt;em&gt;background: Background_Color Rxvt&lt;/em&gt;cursorColor: Cursor_Color&lt;/p&gt; &lt;p&gt;XTerm&lt;em&gt;color0: Ansi_0_Color XTerm&lt;/em&gt;color1: Ansi_1_Color XTerm&lt;em&gt;color2: Ansi_2_Color XTerm&lt;/em&gt;color3: Ansi_3_Color XTerm&lt;em&gt;color4: Ansi_4_Color XTerm&lt;/em&gt;color5: Ansi_5_Color XTerm&lt;em&gt;color6: Ansi_6_Color XTerm&lt;/em&gt;color7: Ansi_7_Color XTerm&lt;em&gt;color8: Ansi_8_Color XTerm&lt;/em&gt;color9: Ansi_9_Color XTerm&lt;em&gt;color10: Ansi_10_Color XTerm&lt;/em&gt;color11: Ansi_11_Color XTerm&lt;em&gt;color12: Ansi_12_Color XTerm&lt;/em&gt;color13: Ansi_13_Color XTerm&lt;em&gt;color14: Ansi_14_Color XTerm&lt;/em&gt;color15: Ansi_15_Color XTerm&lt;em&gt;colorBD: Bold_Color XTerm&lt;/em&gt;colorIT: Italic_Color XTerm&lt;em&gt;colorUL: Underline_Color XTerm&lt;/em&gt;foreground: Foreground_Color XTerm&lt;em&gt;background: Background_Color XTerm&lt;/em&gt;cursorColor: Cursor_Color&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Store the above snippets in a file and pass it in:&lt;/p&gt; &lt;p&gt;xrdb -merge YOUR_FILE_CONTAINING_ABOVE_SNIPPETS&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open new XTerm or Rxvt windows to see the changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adapt this procedure to other terminals as needed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Terminator color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Edit your Terminator configuration file (located in: &lt;code&gt;$HOME/.config/terminator/config&lt;/code&gt;) and add the configurations for the theme(s) you&#39;d like to use the &lt;code&gt;[profiles]&lt;/code&gt; section. The &lt;code&gt;terminator/&lt;/code&gt; directory contains the config snippets you&#39;ll need. Just paste the configurations into the &lt;code&gt;[profiles]&lt;/code&gt; sections, and you&#39;re good to go!&lt;/p&gt; &#xA;&lt;p&gt;At a minimum, this is all you need. You can customize the fonts and other aspects as well, if you wish. See the Terminator documentation for more details.&lt;/p&gt; &#xA;&lt;p&gt;An example config file that includes the code snippet for the Symfonic theme would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[global_config]&#xA; [keybindings]&#xA; [profiles]&#xA;   [[default]]&#xA;  palette = &#34;#1a1a1a:#f4005f:#98e024:#fa8419:#9d65ff:#f4005f:#58d1eb:#c4c5b5:#625e4c:#f4005f:#98e024:#e0d561:#9d65ff:#f4005f:#58d1eb:#f6f6ef&#34;&#xA;  background_image = None&#xA;  use_system_font = False&#xA;  cursor_color = &#34;#f6f7ec&#34;&#xA;  foreground_color = &#34;#c4c5b5&#34;&#xA;  font = Source Code Pro Light 11&#xA;  background_color = &#34;#1a1a1a&#34;&#xA;   [[Symfonic]]&#xA;  palette = &#34;#000000:#dc322f:#56db3a:#ff8400:#0084d4:#b729d9:#ccccff:#ffffff:#1b1d21:#dc322f:#56db3a:#ff8400:#0084d4:#b729d9:#ccccff:#ffffff&#34;&#xA;  background_color = &#34;#000000&#34;&#xA;  cursor_color = &#34;#dc322f&#34;&#xA;  foreground_color = &#34;#ffffff&#34;&#xA;  background_image = None&#xA; [layouts]&#xA;   [[default]]&#xA;  [[[child1]]]&#xA;    type = Terminal&#xA;    parent = window0&#xA;  [[[window0]]]&#xA;    type = Window&#xA;    parent = &#34;&#34;&#xA; [plugins]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Konsole color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the themes from the &lt;code&gt;konsole&lt;/code&gt; directory to &lt;code&gt;$HOME/.config/konsole&lt;/code&gt; (in some versions of KDE, the theme directory may be located at &lt;code&gt;$HOME/.local/share/konsole&lt;/code&gt;), restart Konsole and choose your new theme from the profile preferences window.&lt;/p&gt; &#xA;&lt;p&gt;If you want to make the themes available to all users, copy the .colorscheme files to &lt;code&gt;/usr/share/konsole&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Terminal color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Just double click on selected theme in &lt;code&gt;terminal&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;h3&gt;PuTTY color schemes&lt;/h3&gt; &#xA;&lt;h4&gt;New Session Method&lt;/h4&gt; &#xA;&lt;p&gt;This method creates a new blank session with JUST colors set properly.&lt;/p&gt; &#xA;&lt;p&gt;Download the appropriate &lt;code&gt;colorscheme.reg&lt;/code&gt; file and import the registry changes by right-clicking and choosing Merge. Choose &#34;Yes&#34; when prompted if you&#39;re sure. Color scheme will show up as a new PuTTY session with all defaults except entries at &lt;code&gt;Window &amp;gt; Colours &amp;gt; Adjust the precise colours PuTTY displays&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Modify Session Method&lt;/h4&gt; &#xA;&lt;p&gt;This method modifies an existing session and changes JUST the color settings.&lt;/p&gt; &#xA;&lt;p&gt;Download the appropriate &lt;code&gt;colorscheme.reg&lt;/code&gt; file. Open the file with a text editor and change the color scheme portion (&lt;code&gt;Molokai&lt;/code&gt; below) to match the session you want to modify:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\Molokai]&#xA;- CHANGE TO (EXAMPLE) -&#xA;[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\root@localhost]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Some special characters will need to be changed to their Percent-encoded representation (IE, Space as &lt;code&gt;%20&lt;/code&gt;). To quickly find the right session name view the top-level entries at &lt;code&gt;HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\&lt;/code&gt; with &lt;code&gt;regedit.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Other PuTTY Recommendations&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;Window &amp;gt; Appearance&#xA; Font: Consolas, bold, 14-point&#xA; Font quality:&#xA;  ( ) Antialiased   ( ) Non-Antialiased&#xA;  (O) ClearType    ( ) Default&#xA;Window &amp;gt; Colours&#xA; [X] Allow terminal to specify ANSI colours&#xA; [X] Allow terminal to use xterm 256-colour mode&#xA; Indicate bolded text by changing:&#xA;  ( ) The font  (O) The colour   ( ) Both&#xA; [ ] Attempt to use logical palettes&#xA; [ ] Use system colours&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Xfce Terminal color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;colorschemes&lt;/code&gt; folder to &lt;code&gt;~/.local/share/xfce4/terminal/&lt;/code&gt; and restart Terminal.&lt;/p&gt; &#xA;&lt;h3&gt;FreeBSD vt color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Append your favourite theme from &lt;code&gt;freebsd_vt/&lt;/code&gt; to &lt;code&gt;/boot/loader.conf&lt;/code&gt; or &lt;code&gt;/boot/loader.conf.local&lt;/code&gt; and reboot.&lt;/p&gt; &#xA;&lt;h3&gt;MobaXterm color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;mobaxterm/&lt;/code&gt; and paste the content to your &lt;code&gt;MobaXterm.ini&lt;/code&gt; in the corresponding place (&lt;code&gt;[Colors]&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;LXTerminal color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;lxterminal/&lt;/code&gt; and paste the content to your &lt;code&gt;lxterminal&lt;/code&gt; in the corresponding place (&lt;code&gt;[general]&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Visual Studio Code color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;vscode/&lt;/code&gt; and paste the content to your &lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/settings&#34;&gt;UserSettings.json&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Terminal color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;windowsterminal/&lt;/code&gt; and paste the content to your &lt;code&gt;profiles.json&lt;/code&gt; in the corresponding place (&lt;code&gt;&#34;schemes&#34;&lt;/code&gt;). Then specify the name of your theme by &lt;code&gt;&#34;colorScheme&#34;&lt;/code&gt; in &lt;code&gt;&#34;profiles&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Alacritty color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;alacritty/&lt;/code&gt; and paste the content to your alacritty config file, at &lt;code&gt;~/.config/alacritty/alacritty.toml&lt;/code&gt;. You can also set your theme by adding the following line at your config&#39;s 1st line &lt;code&gt;import = [&#34;~/.config/alacritty/themes/mytheme.toml&#34;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you still need a color scheme with .yml, you can get it &lt;a href=&#34;https://github.com/mbadolato/iTerm2-Color-Schemes/tree/56d74c3e29040e44ff7e379a84e0fa3a57b3e903/alacritty&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ghostty color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;ghostty/&lt;/code&gt; and paste the content in your Ghostty config file, at &lt;code&gt;~/.config/ghostty/config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Rio color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme file from &lt;code&gt;rio/&lt;/code&gt; and paste to your rio theme config directory (typically &lt;code&gt;~/.config/rio/themes/&lt;/code&gt;). Then specify the name of your theme in the &lt;code&gt;theme&lt;/code&gt; field in the &lt;a href=&#34;https://raphamorim.io/rio/docs/#configuration-file&#34;&gt;config file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Termux color schemes&lt;/h3&gt; &#xA;&lt;p&gt;Copy the theme content from &lt;code&gt;termux/&lt;/code&gt; and paste the content to &lt;code&gt;~/.termux&lt;/code&gt; directory as &lt;code&gt;~/.termux/colors.properties&lt;/code&gt; file and run &lt;code&gt;termux-reload-settings&lt;/code&gt; to apply the theme.&lt;/p&gt; &#xA;&lt;h3&gt;Previewing color schemes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mbadolato/iTerm2-Color-Schemes/master/tools/preview.rb&#34;&gt;preview.rb&lt;/a&gt; is a simple script that allows you to preview the color schemes without having to import them. It parses .itermcolors files and applies the colors to the current session using &lt;a href=&#34;https://iterm2.com/documentation-escape-codes.html&#34;&gt;iTerm&#39;s proprietary escape codes&lt;/a&gt;. As noted in the linked page, it doesn&#39;t run on tmux or screen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Apply AdventureTime scheme to the current session&#xA;tools/preview.rb schemes/AdventureTime.itermcolors&#xA;&#xA;# Apply the schemes in turn.&#xA;# - Press (almost) any key to advance; hit CTRL-C or ESC to stop&#xA;# - Press the delete key to go back&#xA;tools/preview.rb schemes/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;iTerm Color Schemes | iTerm2 Color Schemes | iTerm 2 Color Schemes | iTerm Themes | iTerm2 Themes | iTerm 2 Themes&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/igrigorik/ga-beacon&#34;&gt;&lt;img src=&#34;https://ga-beacon.appspot.com/UA-30661340-2/mbadolato/iTerm2-Color-Schemes?pixel&#34; alt=&#34;Analytics&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>monlor/docker-xiaoya</title>
    <updated>2025-01-01T01:56:01Z</updated>
    <id>tag:github.com,2025-01-01:/monlor/docker-xiaoya</id>
    <link href="https://github.com/monlor/docker-xiaoya" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💡 Use Docker Compose to deploy Xiaoya services in a more elegant way, supports one-click deployment of Alist + Emby + Jellyfin, full-platform support, Linux/Windows/Mac/Synology, X86/Arm architecture&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://socialify.git.ci/monlor/docker-xiaoya/image?description=0&amp;amp;font=Rokkitt&amp;amp;forks=1&amp;amp;issues=1&amp;amp;language=1&amp;amp;logo=https%3A%2F%2Fcdn.monlor.com%2F2024%2F6%2F4%2F2024-06-04%252017.30.47.jpeg&amp;amp;name=1&amp;amp;owner=1&amp;amp;pattern=Circuit%20Board&amp;amp;pulls=1&amp;amp;stargazers=1&amp;amp;theme=Auto&#34; alt=&#34;docker-xiaoya&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt;小雅全家桶部署&lt;/h2&gt; &#xA; &lt;p&gt;&lt;em&gt;使用 Docker Compose 一键部署 Alist + Emby + Jellyfin&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/monlor/docker-xiaoya/actions/workflows/docker-build.yml&#34;&gt;&lt;img src=&#34;https://github.com/monlor/docker-xiaoya/actions/workflows/docker-build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/monlor/docker-xiaoya.svg?style=flat&#34; alt=&#34;repo size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/monlor/docker-xiaoya/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/monlor/docker-xiaoya&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/monlor/docker-xiaoya/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributors-6-orange.svg?sanitize=true&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buymeacoffee.com/monlor&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee&#34; alt=&#34;buymeacoffee&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;功能特性&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.monlor.com/2024/6/4/SCR-20240603-kpvb.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;🚀 使用 Docker Compose 一键部署服务，兼容群晖，Linux，Windows，Mac，包含所有X86和Arm架构&lt;/p&gt; &#xA;&lt;p&gt;✨ 部署alist+下载元数据+部署emby/jellyfin服务全流程自动，无需人工干预&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;所有脚本集成到 Docker 镜像，避免污染系统环境&lt;/li&gt; &#xA; &lt;li&gt;合并jellyfin和emby的x86和arm镜像，部署时无需区分镜像名&lt;/li&gt; &#xA; &lt;li&gt;自动清理阿里云盘，默认每10分钟一次&lt;/li&gt; &#xA; &lt;li&gt;自动更新小雅alist中的云盘数据，默认每天一次&lt;/li&gt; &#xA; &lt;li&gt;自动更新emby服务配置，默认每周一次&lt;/li&gt; &#xA; &lt;li&gt;自动更新emby媒体数据，默认每天一次&lt;/li&gt; &#xA; &lt;li&gt;支持小雅夸克网盘资源，挂载自定义夸克网盘资源&lt;/li&gt; &#xA; &lt;li&gt;支持小雅PikPak网盘资源，挂载自定义PikPak资源&lt;/li&gt; &#xA; &lt;li&gt;支持小雅阿里云盘资源，挂载自定义阿里云盘资源&lt;/li&gt; &#xA; &lt;li&gt;支持WebDav，TvBox服务&lt;/li&gt; &#xA; &lt;li&gt;[Beta]适配Armv7设备，包括alist, emby和jellyfin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;提问规则&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;提BUG和需求，在 &lt;a href=&#34;https://github.com/monlor/docker-xiaoya/issues&#34;&gt;Issues&lt;/a&gt; 里提&lt;/li&gt; &#xA; &lt;li&gt;相关问题讨论或其他内容，在 &lt;a href=&#34;https://github.com/monlor/docker-xiaoya/discussions&#34;&gt;Discussions&lt;/a&gt; 里提&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;一键部署&lt;/h2&gt; &#xA;&lt;h3&gt;部署或更新脚本&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;脚本支持重复执行，每天自动同步最新镜像（不需要同步请选择下面的稳定版本）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export VERSION=main &amp;amp;&amp;amp; bash -c &#34;$(curl -fsSL ${GH_PROXY}https://raw.githubusercontent.com/monlor/docker-xiaoya/${VERSION:-main}/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用加速源&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export VERSION=main GH_PROXY=https://gh.monlor.com/ IMAGE_PROXY=ghcr.monlor.com &amp;amp;&amp;amp; bash -c &#34;$(curl -fsSL ${GH_PROXY}https://raw.githubusercontent.com/monlor/docker-xiaoya/${VERSION:-main}/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;环境信息&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;地址&lt;/th&gt; &#xA;   &lt;th&gt;默认用户密码&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;alist&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ip:5678&#34;&gt;http://ip:5678&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;webdav&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ip:5678/dav&#34;&gt;http://ip:5678/dav&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;guest/guest_Api789&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tvbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ip:5678/tvbox/my_ext.json&#34;&gt;http://ip:5678/tvbox/my_ext.json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;emby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ip:2345&#34;&gt;http://ip:2345&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;xiaoya/1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jellyfin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ip:2346&#34;&gt;http://ip:2346&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ailg/5678&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;卸载脚本&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/monlor/docker-xiaoya/main/uninstall.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用加速源&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GH_PROXY=https://gh.monlor.com/ IMAGE_PROXY=ghcr.monlor.com &amp;amp;&amp;amp; bash -c &#34;$(curl -fsSL ${GH_PROXY}https://raw.githubusercontent.com/monlor/docker-xiaoya/main/uninstall.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;自定义配置&lt;/h3&gt; &#xA;&lt;p&gt;【&lt;strong&gt;非必须，小白跳过这一步&lt;/strong&gt;】脚本没有计划支持硬解，在我看来这个功能没有必要。如果你需要修改硬解，端口，数据目录，环境变量，请自行修改docker-compose.yml和env文件，修改完成后执行下面的命令，使配置生效。&lt;strong&gt;修改后注意&lt;/strong&gt;：执行更新脚本会覆盖docker-compose.yml，不会覆盖env文件。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 你的安装目录&#xA;docker-compose up --remove-orphans -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;稳定版&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;release 版本&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/monlor/docker-xiaoya/main/install.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;部署配置推荐&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;部署方案&lt;/th&gt; &#xA;   &lt;th&gt;CPU&lt;/th&gt; &#xA;   &lt;th&gt;内存&lt;/th&gt; &#xA;   &lt;th&gt;硬盘&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alist + Emby&lt;/td&gt; &#xA;   &lt;td&gt;2核&lt;/td&gt; &#xA;   &lt;td&gt;4G&lt;/td&gt; &#xA;   &lt;td&gt;140G&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;仅部署 Alist&lt;/td&gt; &#xA;   &lt;td&gt;1核&lt;/td&gt; &#xA;   &lt;td&gt;512M&lt;/td&gt; &#xA;   &lt;td&gt;512M&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alist + Emby + Jellyfin&lt;/td&gt; &#xA;   &lt;td&gt;4核&lt;/td&gt; &#xA;   &lt;td&gt;8G&lt;/td&gt; &#xA;   &lt;td&gt;300G&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alist + Jellyfin&lt;/td&gt; &#xA;   &lt;td&gt;4核&lt;/td&gt; &#xA;   &lt;td&gt;8G&lt;/td&gt; &#xA;   &lt;td&gt;155G&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;配置示例&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/docker-compose-alist.yml&#34;&gt;只部署小雅alist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/docker-compose.yml&#34;&gt;部署小雅alist+emby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/docker-compose-jellyfin.yml&#34;&gt;部署小雅alist+jellyfin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/docker-compose-all.yml&#34;&gt;部署小雅alist+emby+jellyfin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;服务组件介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/alist&#34;&gt;Alist&lt;/a&gt;: 提供资源在线播放，WebDav服务&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/metadata&#34;&gt;Metadata&lt;/a&gt;: Emby和Jellyfin的元数据管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/emby&#34;&gt;Emby&lt;/a&gt;: 用家庭影视库的方式，可视化展示Alist中的资源&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/jellyfin&#34;&gt;Jellyfin&lt;/a&gt;: Emby的开源版本，功能是一样的&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;手动部署&lt;/h2&gt; &#xA;&lt;p&gt;仅展示小雅alist+emby的部署方式&lt;/p&gt; &#xA;&lt;h3&gt;使用Docker Compose&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;创建compose文件夹&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /opt/xiaoya&#xA;cd /opt/xiaoya&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;下载配置&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -#LO https://raw.githubusercontent.com/monlor/docker-xiaoya/main/docker-compose.yml&#xA;curl -#LO https://raw.githubusercontent.com/monlor/docker-xiaoya/main/env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;修改配置env里面的阿里云盘相关变量，启动服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;查看日志&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;部署在 Kubernetes&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装helm&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;安装helmfile&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ver=0.161.0&#xA;curl -LO https://github.com/helmfile/helmfile/releases/download/v${ver}/helmfile_${ver}_linux_arm64.tar.gz&#xA;tar zxvf helmfile_${ver}_linux_arm64.tar.gz -C helmfile&#xA;mv helmfile/helmfile /usr/local/bin&#xA;rm -rf helmfile helmfile_${ver}_linux_arm64.tar.gz&#xA;helm plugin install https://github.com/databus23/helm-diff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;下载helmfile配置&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -#LO https://raw.githubusercontent.com/monlor/docker-xiaoya/main/helmfile.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;修改helmfile的环境变量，环境变量含义看这里&lt;a href=&#34;https://raw.githubusercontent.com/monlor/docker-xiaoya/main/alist&#34;&gt;alist&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;env:&#xA;    ...&#xA;    WEBDAV_PASSWORD: &#xA;    ALIYUN_TOKEN: &#xA;    ALIYUN_OPEN_TOKEN: &#xA;    ALIYUN_FOLDER_ID: &#xA;    QUARK_COOKIE:&#xA;    PAN115_COOKIE:&#xA;    PIKPAK_USER:&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;部署helm服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;helmfile sync -f helmfile.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;使用docker部署【不推荐】&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;创建volume&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker volume create xiaoya&#xA;docker volume create media&#xA;docker volume create config&#xA;docker volume create meta&#xA;docker volume create cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;创建网络&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create xiaoya&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;启动小雅alist，修改下面的阿里云盘配置，再执行命令&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name alist \&#xA;    -v xiaoya:/data \&#xA;    -p 5678:5678 -p 2345:2345 -p 2346:2346 \&#xA;    -e TZ=Asia/Shanghai \&#xA;    -e ALIYUN_TOKEN=阿里云盘TOKEN \&#xA;    -e ALIYUN_OPEN_TOKEN=阿里云盘Open Token \&#xA;    -e ALIYUN_FOLDER_ID=阿里云盘文件夹ID \&#xA;    -e QUARK_COOKIE=夸克网盘cookie \&#xA;    -e AUTO_UPDATE_ENABLED=true \&#xA;    -e AUTO_CLEAR_ENABLED=true \&#xA;    --network=xiaoya \&#xA;    ghcr.io/monlor/xiaoya-alist &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;启动metadata用于元数据同步&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name metadata \&#xA;    -e LANG=C.UTF-8 \&#xA;    -e EMBY_ENABLED=true \&#xA;    -e JELLYFIN_ENABLED=false \&#xA;    -e AUTO_UPDATE_EMBY_CONFIG_ENABLED=true \&#xA;    -v xiaoya:/etc/xiaoya \&#xA;    -v media:/media/xiaoya \&#xA;    -v config:/media/config \&#xA;    -v cache:/media/config/cache \&#xA;    -v meta:/media/temp \&#xA;    --network=xiaoya \&#xA;    ghcr.io/monlor/xiaoya-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;启动emby服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name emby&#xA;    -e TZ=Asia/Shanghai \&#xA;    -e GIDLIST=0 \&#xA;    -e ALIST_ADDR=http://alist:5678 \&#xA;    -v media:/media \&#xA;    -v config:/config \&#xA;    -v cache:/cache \&#xA;    -p 6908:6908 \&#xA;    --network=xiaoya \&#xA;    ghcr.io/monlor/xiaoya-embyserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;查看日志&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker logs alist&#xA;docker logs metadata&#xA;docker logs emby&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;安全建议&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;开启alist的登陆，alist服务设置webdav的密码&lt;code&gt;WEBDAV_PASSWORD&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;在emby控制台修改ApiKey，这个key需要配置到metadata和alist服务，变量名：&lt;code&gt;EMBY_APIKEY&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/monlor&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;参考&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DDS-Derek/xiaoya-alist&#34;&gt;https://github.com/DDS-Derek/xiaoya-alist&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.kdocs.cn/l/cvEe3cv6dGkH&#34;&gt;https://www.kdocs.cn/l/cvEe3cv6dGkH&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://xiaoyaliu.notion.site/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f&#34;&gt;https://xiaoyaliu.notion.site/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SeleniumHQ/docker-selenium</title>
    <updated>2025-01-01T01:56:01Z</updated>
    <id>tag:github.com,2025-01-01:/SeleniumHQ/docker-selenium</id>
    <link href="https://github.com/SeleniumHQ/docker-selenium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provides a simple way to run Selenium Grid with Chrome, Firefox, and Edge using Docker, making it easier to perform browser automation&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/build-test.yml&#34;&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/build-test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build &amp;amp; test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/deploy.yml&#34;&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/deploy.yml/badge.svg?sanitize=true&#34; alt=&#34;Deploys&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/helm-chart-release.yml&#34;&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/helm-chart-release.yml/badge.svg?sanitize=true&#34; alt=&#34;Release Charts&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Nightly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/update-dev-beta-browser-images.yml&#34;&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/actions/workflows/update-dev-beta-browser-images.yml/badge.svg?sanitize=true&#34; alt=&#34;Update Dev/Beta Browser Images&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/seleniumhq/docker-selenium/total.svg?sanitize=true&#34; alt=&#34;Releases downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Docker images for the Selenium Grid Server&lt;/h1&gt; &#xA;&lt;p&gt;The project is made possible by volunteer contributors who have put in thousands of hours of their own time, and made the source code freely available under the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/LICENSE.md&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These Docker images come with a handful of tags to simplify its usage, have a look at them in one of our &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/releases/tag/4.27.0-20241225&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get notifications of new releases, add yourself as a &#34;Releases only&#34; watcher.&lt;/p&gt; &#xA;&lt;p&gt;These images are published to the Docker Hub registry at &lt;a href=&#34;https://hub.docker.com/u/selenium&#34;&gt;Selenium Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Do you need help to use these Docker images? Talk to us at &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;https://www.selenium.dev/support/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#contents&#34;&gt;Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#quick-start&#34;&gt;Quick start&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#try-them-out-in-a-ready-to-use-gitpod-environment&#34;&gt;Try them out in a ready-to-use GitPod environment!&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#experimental-multi-arch-amd64aarch64armhf-images&#34;&gt;Experimental Multi-Arch amd64/aarch64/armhf Images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#nightly-images&#34;&gt;Nightly Images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dev-and-beta-channel-browser-images&#34;&gt;Dev and Beta Channel Browser Images&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dev-and-beta-standalone-mode&#34;&gt;Dev and Beta Standalone Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dev-and-beta-on-the-grid&#34;&gt;Dev and Beta on the Grid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-modes&#34;&gt;Execution modes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#standalone&#34;&gt;Standalone&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#hub-and-nodes&#34;&gt;Hub and Nodes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#fully-distributed-mode---router-queue-distributor-eventbus-sessionmap-and-nodes&#34;&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording&#34;&gt;Video recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording-with-dynamic-file-name-based-on-metadata-in-tests&#34;&gt;Video recording with dynamic file name based on metadata in tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording-and-uploading&#34;&gt;Video recording and uploading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dynamic-grid&#34;&gt;Dynamic Grid&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuration-example&#34;&gt;Configuration example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#share-volumes-config-of-dynamic-grid-container-to-node-browser-containers&#34;&gt;Share volumes config of Dynamic Grid container to node browser containers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-hub--node-roles&#34;&gt;Execution with Hub &amp;amp; Node roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-standalone-roles&#34;&gt;Execution with Standalone roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-dynamic-grid-in-different-machinesvms&#34;&gt;Using Dynamic Grid in different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-docker-compose&#34;&gt;Execution with Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuring-the-child-containers&#34;&gt;Configuring the child containers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording-screen-resolution-and-time-zones-in-a-dynamic-grid&#34;&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#time-zone-configuration-via-env-variable&#34;&gt;Time zone configuration via env variable&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#deploying-to-kubernetes&#34;&gt;Deploying to Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuring-the-containers&#34;&gt;Configuring the containers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_opts-selenium-configuration-options&#34;&gt;SE_OPTS Selenium Configuration Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_java_opts-java-environment-options&#34;&gt;SE_JAVA_OPTS Java Environment Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_browser_args_-add-arguments-for-launching-browser&#34;&gt;SE_BROWSER_ARGS_* Add arguments for launching browser&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#node-configuration-options&#34;&gt;Node configuration options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#node-configuration-relay-commands&#34;&gt;Node configuration relay commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#setting-sub-path&#34;&gt;Setting Sub Path&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#setting-screen-resolution&#34;&gt;Setting Screen Resolution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#grid-url-and-session-timeout&#34;&gt;Grid Url and Session Timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#session-request-timeout&#34;&gt;Session request timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#increasing-session-concurrency-per-container&#34;&gt;Increasing session concurrency per container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#running-in-headless-mode&#34;&gt;Running in Headless mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#stopping-the-nodestandalone-after-n-sessions-have-been-executed&#34;&gt;Stopping the Node/Standalone after N sessions have been executed&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#automatic-browser-leftovers-cleanup&#34;&gt;Automatic browser leftovers cleanup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#mask-sensitive-information-in-console-logs&#34;&gt;Mask sensitive information in console logs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#secure-connection&#34;&gt;Secure Connection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#browser-language-and-locale&#34;&gt;Browser language and locale&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#managing-processes-in-container&#34;&gt;Managing processes in container&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#building-the-images&#34;&gt;Building the images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#build-the-images-with-specific-versions&#34;&gt;Build the images with specific versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#upgrade-browser-version-in-the-images&#34;&gt;Upgrade browser version in the images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#waiting-for-the-grid-to-be-ready&#34;&gt;Waiting for the Grid to be ready&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#adding-a-healthcheck-to-the-grid&#34;&gt;Adding a HEALTHCHECK to the Grid&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-a-bash-script-to-wait-for-the-grid&#34;&gt;Using a bash script to wait for the Grid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#install-certificates-for-chromium-based-browsers&#34;&gt;Install certificates for Chromium-based browsers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#alternative-method-add-certificates-to-existing-selenium-based-images-for-browsers&#34;&gt;Alternative method: Add certificates to existing Selenium based images for browsers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-a-vnc-client&#34;&gt;Using a VNC client&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-your-browser-no-vnc-client-is-needed&#34;&gt;Using your browser (no VNC client is needed)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#disabling-vnc&#34;&gt;Disabling VNC&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#tracing-in-grid&#34;&gt;Tracing in Grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#--shm-size2g&#34;&gt;&lt;code&gt;--shm-size=&#34;2g&#34;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#headless&#34;&gt;Headless&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#mounting-volumes-to-retrieve-downloaded-files&#34;&gt;Mounting volumes to retrieve downloaded files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#mounting-volumes-to-retrieve-video-files&#34;&gt;Mounting volumes to retrieve video files&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#stargazers-over-time&#34;&gt;Stargazers over time&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start a Docker container with Firefox&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Point your WebDriver tests to &lt;a href=&#34;http://localhost:4444&#34;&gt;http://localhost:4444&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;That&#39;s it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) To see what is happening inside the container, head to &lt;a href=&#34;http://localhost:7900/?autoconnect=1&amp;amp;resize=scale&amp;amp;password=secret&#34;&gt;http://localhost:7900/?autoconnect=1&amp;amp;resize=scale&amp;amp;password=secret&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more details about visualising the container activity, check the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; When executing &lt;code&gt;docker run&lt;/code&gt; for an image that contains a browser please use the flag &lt;code&gt;--shm-size=2g&lt;/code&gt; to use the host&#39;s shared memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; Always use a Docker image with a full tag to pin a specific browser and Grid version. See &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/wiki/Tagging-Convention&#34;&gt;Tagging Conventions&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Try them out in a ready-to-use GitPod environment!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/SeleniumHQ/docker-selenium&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Experimental Multi-Arch amd64/aarch64/armhf Images&lt;/h2&gt; &#xA;&lt;p&gt;From image tag based &lt;code&gt;4.21.0&lt;/code&gt; onwards, the architectures supported by this project are as below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64 (aka amd64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;aarch64 (aka arm64/armv8)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf (aka arm32/armv7l)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Browser images in multi-arch&lt;/h3&gt; &#xA;&lt;p&gt;The following browsers are available in multi-arch images:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chrome&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chromium&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Firefox&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Edge&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64 (aka amd64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;aarch64 (aka arm64/armv8)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf (aka arm32/armv7l)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Google does not build Chrome (&lt;code&gt;google-chrome&lt;/code&gt;) for Linux/ARM platforms. Hence, the Chrome (node and standalone) images are only available for AMD64. Similarly, Microsoft does not build Edge (&lt;code&gt;microsoft-edge&lt;/code&gt;) for Linux/ARM platforms.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Running an AMD64 image under emulation on an ARM64 platform is not recommended due to performance and &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/2298&#34;&gt;stability issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Linux/ARM use the open source Chromium browser. The Chromium (node and standalone) images are available in multi-arch.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 5900:5900 -p 7900:7900 --shm-size 2g selenium/standalone-chromium:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mozilla Firefox now is available for Linux/ARM64 via &lt;a href=&#34;https://blog.nightly.mozilla.org/2024/04/19/firefox-nightly-now-available-for-linux-on-arm64/&#34;&gt;Nightly channel&lt;/a&gt;. The Firefox version in ARM64 will be different with the AMD64 until the stable release is available (Noted: we had workaround by pinning the versions getting from &lt;a href=&#34;https://download-installer.cdn.mozilla.net/pub/firefox/nightly/&#34;&gt;Firefox download installer&lt;/a&gt;. The Firefox (node and standalone) images are available in multi-arch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Multi-arch images are tested on CircleCI with resource class Linux/ARM64. See the status below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dl.circleci.com/status-badge/redirect/gh/SeleniumHQ/docker-selenium/tree/trunk&#34;&gt;&lt;img src=&#34;https://dl.circleci.com/status-badge/img/gh/SeleniumHQ/docker-selenium/tree/trunk.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;History of the multi-arch images&lt;/h3&gt; &#xA;&lt;p&gt;For experimental docker container images, which run on platforms such as the Apple M-series or Raspberry Pi, the repository at &lt;a href=&#34;https://github.com/seleniumhq-community/docker-seleniarm&#34;&gt;seleniumhq-community/docker-seleniarm&lt;/a&gt; provided images which are published on the &lt;a href=&#34;https://hub.docker.com/u/seleniarm&#34;&gt;Seleniarm Docker Hub&lt;/a&gt; registry.&lt;/p&gt; &#xA;&lt;p&gt;See issue &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1076&#34;&gt;#1076&lt;/a&gt; for more information on these images.&lt;/p&gt; &#xA;&lt;p&gt;Now, the fork &lt;a href=&#34;https://github.com/seleniumhq-community/docker-seleniarm&#34;&gt;seleniumhq-community/docker-seleniarm&lt;/a&gt; was merged.&lt;/p&gt; &#xA;&lt;h3&gt;Build the multi-arch images locally&lt;/h3&gt; &#xA;&lt;p&gt;We recommend to enable the experimental feature &lt;a href=&#34;https://docs.docker.com/storage/containerd/&#34;&gt;containerd image store&lt;/a&gt; in Docker Engine. &lt;code&gt;containerd&lt;/code&gt; understands multiplatform images, where a single image tag can refer to different variants covering a range of OS and hardware architectures. It simplifies the process of building, storing, and distributing images across different platforms.&lt;/p&gt; &#xA;&lt;p&gt;A single command to enable that feature in Docker Engine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make set_containerd_image_store&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build all the images for multiplatform, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PLATFORMS=linux/amd64,linux/arm64 make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build the images for a specific platform, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PLATFORMS=linux/arm64 make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, without specifying the &lt;code&gt;PLATFORMS&lt;/code&gt; variable, the images are built for the &lt;code&gt;linux/amd64&lt;/code&gt; platform.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Nightly Images&lt;/h2&gt; &#xA;&lt;p&gt;Nightly images are built on top of the &lt;a href=&#34;https://github.com/SeleniumHQ/selenium/releases/tag/nightly&#34;&gt;Nightly&lt;/a&gt; build on the upstream project &lt;a href=&#34;https://github.com/SeleniumHQ/selenium&#34;&gt;Selenium&lt;/a&gt; with the latest changes on main branch in this repository. The image tag is &lt;code&gt;nightly&lt;/code&gt;. This is not recommended to use images in production. It is only for testing purpose.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out the docker compose to get started with Nightly images &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid-nightly.yml&#34;&gt;docker-compose-v3-full-grid-nightly.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dev and Beta Channel Browser Images&lt;/h2&gt; &#xA;&lt;p&gt;To run tests or otherwise work with pre-release browsers, Google, Mozilla, and Microsoft maintain a Dev and Beta release channel for those who need to see what&#39;s soon to be released to the general population.&lt;/p&gt; &#xA;&lt;h3&gt;Dev and Beta Standalone Mode&lt;/h3&gt; &#xA;&lt;p&gt;Here are the instructions to run them in Standalone mode:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chrome Beta:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-chrome:beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chrome Dev:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-chrome:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Firefox Beta:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-firefox:beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Firefox Dev:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-firefox:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Edge Beta:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-edge:beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Edge Dev:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-edge:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dev and Beta on the Grid&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;docker-compose-v3-beta-channel.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# To execute this docker compose yml file use `docker compose -f docker-compose-v3-beta-channel.yml up`&#xA;# Add the `-d` flag at the end for detached execution&#xA;# To stop the execution, hit Ctrl+C, and then `docker compose -f docker-compose-v3-beta-channel.yml down`&#xA;version: &#34;3&#34;&#xA;services:&#xA;  chrome:&#xA;    image: selenium/node-chrome:beta&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  edge:&#xA;    image: selenium/node-edge:beta&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  firefox:&#xA;    image: selenium/node-firefox:beta&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  selenium-hub:&#xA;    image: selenium/hub:latest&#xA;    container_name: selenium-hub&#xA;    ports:&#xA;      - &#34;4442:4442&#34;&#xA;      - &#34;4443:4443&#34;&#xA;      - &#34;4444:4444&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;docker-compose-v3-dev-channel.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# To execute this docker compose yml file use `docker compose -f docker-compose-v3-dev-channel.yml up`&#xA;# Add the `-d` flag at the end for detached execution&#xA;# To stop the execution, hit Ctrl+C, and then `docker compose -f docker-compose-v3-dev-channel.yml down`&#xA;version: &#34;3&#34;&#xA;services:&#xA;  chrome:&#xA;    image: selenium/node-chrome:dev&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  edge:&#xA;    image: selenium/node-edge:dev&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  firefox:&#xA;    image: selenium/node-firefox:dev&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  selenium-hub:&#xA;    image: selenium/hub:latest&#xA;    container_name: selenium-hub&#xA;    ports:&#xA;      - &#34;4442:4442&#34;&#xA;      - &#34;4443:4443&#34;&#xA;      - &#34;4444:4444&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on the Dev and Beta channel container images, see the blog post on &lt;a href=&#34;https://www.selenium.dev/blog/2022/dev-and-beta-channel-browsers-via-docker-selenium/&#34;&gt;Dev and Beta Channel Browsers via Docker Selenium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Execution modes&lt;/h2&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_24x24.png&#34; alt=&#34;Firefox&#34;&gt; Firefox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_24x24.png&#34; alt=&#34;Chrome&#34;&gt; Chrome&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_24x24.png&#34; alt=&#34;Edge&#34;&gt; Edge&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Only one Standalone container can run on port&lt;/em&gt; &lt;code&gt;4444&lt;/code&gt; &lt;em&gt;at the same time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Hub and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;There are different ways to run the images and create a Grid with a Hub and Nodes, check the following options.&lt;/p&gt; &#xA;&lt;h4&gt;Docker networking&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created in the same network and they will recognize each other by their container name. A Docker &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_create/&#34;&gt;network&lt;/a&gt; needs to be created as a first step.&lt;/p&gt; &#xA;&lt;h5&gt;macOS/Linux&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows PowerShell&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-edge:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using different machines/VMs&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created on different machines/VMs, they need to know each other&#39;s IPs to communicate properly. If more than one node will be running on the same Machine/VM, they must be configured to expose different ports.&lt;/p&gt; &#xA;&lt;h5&gt;Hub - Machine/VM 1&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 2&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; \&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; `&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Edge - Machine/VM 3&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; \&#xA;    selenium/node-edge:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; `&#xA;    selenium/node-edge:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Firefox - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    selenium/node-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    selenium/node-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5556:5556 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    -e SE_NODE_PORT=5556 \&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5556:5556 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    -e SE_NODE_PORT=5556 `&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Compose&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; is the simplest way to start a Grid. Use the linked resources below, save them locally and check the execution instructions on top of each file.&lt;/p&gt; &#xA;&lt;h5&gt;Version 2&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v2.yml&#34;&gt;&lt;code&gt;docker-compose-v2.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Version 3&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3.yml&#34;&gt;&lt;code&gt;docker-compose-v3.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To stop the Grid and cleanup the created containers, run &lt;code&gt;docker compose down&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Version 3 with Swarm support&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-swarm.yml&#34;&gt;&lt;code&gt;docker-compose-v3-swarm.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to start a Selenium Grid with all its components apart. For simplicity, only an example with docker compose will be provided. Save the file locally, and check the execution instructions on top of it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-full-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Distributor configuration&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_REJECT_UNSUPPORTED_CAPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;--reject-unsupported-caps&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allow the Distributor to reject a request immediately if the Grid does not support the requested capability.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_HEALTHCHECK_INTERVAL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;--healthcheck-interval&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;int&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;120&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This ensures the server can ping all the Nodes successfully after an interval.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Video recording&lt;/h2&gt; &#xA;&lt;p&gt;Tests execution can be recorded by using the &lt;code&gt;selenium/video:ffmpeg-7.1-20241225&lt;/code&gt; Docker image. One container is needed per each container where a browser is running. This means if you are running 5 Nodes/Standalone containers, you will need 5 video containers, the mapping is 1-1.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the only way to do this mapping is manually (either starting the containers manually or through &lt;code&gt;docker compose&lt;/code&gt;). We are iterating on this process and probably this setup will be more simple in the future.&lt;/p&gt; &#xA;&lt;p&gt;The video Docker image we provide is based on the ffmpeg Ubuntu image provided by the &lt;a href=&#34;https://github.com/jrottenberg/ffmpeg&#34;&gt;jrottenberg/ffmpeg&lt;/a&gt; project, thank you for providing this image and simplifying our work &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;From image tag based &lt;code&gt;4.20.0&lt;/code&gt; onwards, the video Docker image is based on the FFmpeg Ubuntu image provided by &lt;a href=&#34;https://github.com/linuxserver/docker-ffmpeg&#34;&gt;linuxserver/docker-ffmpeg&lt;/a&gt; project since the image is available for multi-platform. Thank you for simplifying our project and helping us move forward with multiple architecture support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have questions or feedback, please use the community contact points shown &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please report any bugs through GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/new/choose&#34;&gt;issues&lt;/a&gt;, and provide all the information requested on the template.&lt;/li&gt; &#xA; &lt;li&gt;Video recording for headless browsers is not supported.&lt;/li&gt; &#xA; &lt;li&gt;Video recording tends to use considerable amounts of CPU. Normally you should estimate 1CPU per video container, and 1 CPU per browser container.&lt;/li&gt; &#xA; &lt;li&gt;Videos are stored in the &lt;code&gt;/videos&lt;/code&gt; directory inside the video container. Map a local directory to get the videos.&lt;/li&gt; &#xA; &lt;li&gt;If you are running more than one video container, be sure to overwrite the video file name through the &lt;code&gt;FILE_NAME&lt;/code&gt; environment variable to avoid unexpected results.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This example shows how to start the containers manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4444:4444 -p 6900:5900 --net grid --name selenium --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.27.0-20241225&#xA;$ docker run -d --net grid --name video -v /tmp/videos:/videos selenium/video:ffmpeg-7.1-20241225&#xA;# Run your tests&#xA;$ docker stop video &amp;amp;&amp;amp; docker rm video&#xA;$ docker stop selenium &amp;amp;&amp;amp; docker rm selenium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the containers are stopped and removed, you should see a video file on your machine&#39;s &lt;code&gt;/tmp/videos&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a few Nodes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video.yml&#34;&gt;&lt;code&gt;docker-compose-v3-video.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Video recording with dynamic file name based on metadata in tests&lt;/h2&gt; &#xA;&lt;p&gt;Based on the support of &lt;a href=&#34;https://www.selenium.dev/documentation/grid/getting_started/#metadata-in-tests&#34;&gt;Metadata in tests&lt;/a&gt;. When the video recorder is sidecar deployed with the browser node with enabling &lt;code&gt;SE_VIDEO_FILE_NAME=auto&lt;/code&gt; and adding metadata to your tests, video file name will extract value of capability &lt;code&gt;se:name&lt;/code&gt; and use it as the video file name.&lt;/p&gt; &#xA;&lt;p&gt;For example in Python binding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from selenium.webdriver.chrome.options import Options as ChromeOptions&#xA;from selenium import webdriver&#xA;&#xA;options = ChromeOptions()&#xA;options.set_capability(&#39;se:name&#39;, &#39;test_visit_basic_auth_secured_page (ChromeTests)&#39;)&#xA;driver = webdriver.Remote(options=options, command_executor=&#34;http://localhost:4444&#34;)&#xA;driver.get(&#34;https://selenium.dev&#34;)&#xA;driver.quit()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output video file name will be &lt;code&gt;test_visit_basic_auth_secured_page_ChromeTests_&amp;lt;sessionId&amp;gt;.mp4&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your test name is handled by the test framework, and it is unique for sure, you also can disable the session id appends to the video file name by setting &lt;code&gt;SE_VIDEO_FILE_NAME_SUFFIX=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;File name will be trimmed to 255 characters to avoid long file names. Moreover, &lt;code&gt;space&lt;/code&gt; character will be replaced by &lt;code&gt;_&lt;/code&gt; and only characters alphabets, numbers, &lt;code&gt;-&lt;/code&gt; (hyphen), &lt;code&gt;_&lt;/code&gt; (underscore) are retained in the file name.&lt;/p&gt; &#xA;&lt;p&gt;The trim regex is able to be customized by setting &lt;code&gt;SE_VIDEO_FILE_NAME_TRIM_REGEX&lt;/code&gt; environment variable. The default value is &lt;code&gt;[:alnum:]-_&lt;/code&gt;. The regex should be compatible with the &lt;code&gt;tr&lt;/code&gt; command in bash.&lt;/p&gt; &#xA;&lt;p&gt;At deployment level, the recorder container is up always. In addition, you can disable video recording process via session capability &lt;code&gt;se:recordVideo&lt;/code&gt;. For example in Python binding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;options.set_capability(&#39;se:recordVideo&#39;, False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In recorder container will perform query GraphQL in Hub based on Node SessionId and extract the value of &lt;code&gt;se:recordVideo&lt;/code&gt; in capabilities before deciding to start video recording process or not.&lt;/p&gt; &#xA;&lt;p&gt;Notes: To reach the GraphQL endpoint, the recorder container needs to know the Hub URL. The Hub URL can be passed via environment variable &lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt;. For example &lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt; is &lt;code&gt;http://selenium-hub:4444&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Video recording and uploading&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rclone.org/&#34;&gt;RCLONE&lt;/a&gt; is installed in the video recorder image. You can use it to upload the videos to a cloud storage service. Besides the video recording mentioned above, you can enable the upload functionality by setting the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  chrome_video:&#xA;    image: selenium/video:ffmpeg-7.1-20241225&#xA;    depends_on:&#xA;      - chrome&#xA;    environment:&#xA;      - DISPLAY_CONTAINER_NAME=chrome&#xA;      - SE_VIDEO_FILE_NAME=auto&#xA;      - SE_VIDEO_UPLOAD_ENABLED=true&#xA;      - SE_UPLOAD_DESTINATION_PREFIX=s3://mybucket/path&#xA;      - RCLONE_CONFIG_S3_TYPE=s3&#xA;      - RCLONE_CONFIG_S3_PROVIDER=GCS&#xA;      - RCLONE_CONFIG_S3_ENV_AUTH=true&#xA;      - RCLONE_CONFIG_S3_REGION=asia-southeast1&#xA;      - RCLONE_CONFIG_S3_LOCATION_CONSTRAINT=asia-southeast1&#xA;      - RCLONE_CONFIG_S3_ACL=private&#xA;      - RCLONE_CONFIG_S3_ACCESS_KEY_ID=xxx&#xA;      - RCLONE_CONFIG_S3_SECRET_ACCESS_KEY=xxx&#xA;      - RCLONE_CONFIG_S3_ENDPOINT=https://storage.googleapis.com&#xA;      - RCLONE_CONFIG_S3_NO_CHECK_BUCKET=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;SE_VIDEO_FILE_NAME=auto&lt;/code&gt; will use the session id as the video file name. This ensures that the video file name is unique to upload. Video file name construction automatically works based on Node endpoint &lt;code&gt;/status&lt;/code&gt; (and optional GraphQL endpoint) to get session ID, capabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SE_VIDEO_UPLOAD_ENABLED=true&lt;/code&gt; will enable the video upload feature. In the background, it will create a pipefile with file and destination for uploader to consume and proceed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SE_VIDEO_INTERNAL_UPLOAD=true&lt;/code&gt; will use RCLONE installed in the container for upload. If you want to use another sidecar container for upload, set it to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ENV variables per mode&lt;/th&gt; &#xA;   &lt;th&gt;Hub/Nodes&lt;/th&gt; &#xA;   &lt;th&gt;Standalone roles&lt;/th&gt; &#xA;   &lt;th&gt;Dynamic Grid&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_VIDEO_RECORD_STANDALONE&lt;/code&gt; (mandatory)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DISPLAY_CONTAINER_NAME&lt;/code&gt; (mandatory)&lt;/td&gt; &#xA;   &lt;td&gt;user input&lt;/td&gt; &#xA;   &lt;td&gt;user input&lt;/td&gt; &#xA;   &lt;td&gt;(not required)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_NODE_PORT&lt;/code&gt; (optional)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5555&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;4444&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(not required)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt; (optional)&lt;/td&gt; &#xA;   &lt;td&gt;user input&lt;/td&gt; &#xA;   &lt;td&gt;(not required)&lt;/td&gt; &#xA;   &lt;td&gt;(not required)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For environment variables with prefix &lt;code&gt;RCLONE_&lt;/code&gt; is used to pass remote configuration to RCLONE. You can find more information about RCLONE configuration &lt;a href=&#34;https://rclone.org/docs/&#34;&gt;here&lt;/a&gt;. When using in Dynamic Grid, those variables should be combined with the prefix &lt;code&gt;SE_&lt;/code&gt;, for example &lt;code&gt;SE_RCLONE_&lt;/code&gt;. See below reference for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Reference&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure video recording and uploading for Hub and Nodes: &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video-upload.yml&#34;&gt;docker-compose-v3-video-upload.yml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure video recording and uploading for Standalone roles: &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video-upload-standalone.yml&#34;&gt;docker-compose-v3-video-upload-standalone.yml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure video recording and uploading for Dynamic Grid (node-docker): &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video-upload-dynamic-grid.yml&#34;&gt;docker-compose-v3-video-upload-dynamic-grid.yml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure video recording and uploading for Dynamic Grid standalone (standalone-docker): &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/docker-compose-v3-test-standalone-docker.yaml&#34;&gt;tests/docker-compose-v3-test-standalone-docker.yaml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment variables and default values for upload feature&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_UPLOAD_RETAIN_LOCAL_FILE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Keep local file after uploading successfully&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_UPLOAD_COMMAND&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;RCLONE command is used to transfer file. Enforce &lt;code&gt;move&lt;/code&gt; when retain local file is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_UPLOAD_OPTS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-P --cutoff-mode SOFT --metadata --inplace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Other options belong to RCLONE command can be set.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_UPLOAD_CONFIG_FILE_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;upload.conf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Config file for remote host instead of set via env variable prefix SE_RCLONE_*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SE_UPLOAD_CONFIG_DIRECTORY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/opt/bin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directory of config file (change it when conf file in another directory is mounted)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dynamic Grid&lt;/h2&gt; &#xA;&lt;p&gt;Grid 4 has the ability to start Docker containers on demand, this means that it starts a Docker container in the background for each new session request, the test gets executed there, and when the test completes, the container gets thrown away.&lt;/p&gt; &#xA;&lt;p&gt;This execution mode can be used either in the Standalone or Node roles. The &#34;dynamic&#34; execution mode needs to be told what Docker images to use when the containers get started. Additionally, the Grid needs to know the URI of the Docker daemon. This configuration can be placed in a local &lt;code&gt;toml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration example&lt;/h3&gt; &#xA;&lt;p&gt;You can save this file locally and name it, for example, &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.27.0-20241225&#34;, &#39;{&#34;browserName&#34;: &#34;firefox&#34;}&#39;,&#xA;    &#34;selenium/standalone-chrome:4.27.0-20241225&#34;, &#39;{&#34;browserName&#34;: &#34;chrome&#34;}&#39;,&#xA;    &#34;selenium/standalone-edge:4.27.0-20241225&#34;, &#39;{&#34;browserName&#34;: &#34;MicrosoftEdge&#34;}&#39;&#xA;]&#xA;&#xA;host-config-keys = [&#34;Dns&#34;, &#34;DnsOptions&#34;, &#34;DnsSearch&#34;, &#34;ExtraHosts&#34;, &#34;Binds&#34;]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because internally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-7.1-20241225&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;#[server]&#xA;#host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;#port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the optional config key &lt;code&gt;host-config-keys&lt;/code&gt; under section [docker] in a config.toml file (or CLI option --docker-host-config-keys). Users can specify a list of docker host configuration keys that should be passed to browser containers.&lt;/p&gt; &#xA;&lt;p&gt;Valid key names for Docker host config can be found in the Docker API &lt;a href=&#34;https://docs.docker.com/engine/api/latest/#tag/Container/operation/ContainerCreate&#34;&gt;documentation&lt;/a&gt; or via the command &lt;code&gt;docker inspect&lt;/code&gt; the node-docker container.&lt;/p&gt; &#xA;&lt;h3&gt;Share volumes config of Dynamic Grid container to node browser containers&lt;/h3&gt; &#xA;&lt;p&gt;In case you want to access download directory in node browser containers (e.g &lt;code&gt;/home/seluser/Downloads&lt;/code&gt;) via volumes config of Dynamic Grid container, you can add the following config to the &lt;code&gt;config.toml&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;host-config-keys = [&#34;Binds&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Volumes config in docker compose file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  node-docker:&#xA;    image: selenium/node-docker:latest&#xA;    volumes:&#xA;      - ./assets:/opt/selenium/assets&#xA;      - ./config.toml:/opt/selenium/docker.toml&#xA;      - ./downloads:/home/seluser/Downloads&#xA;      - /var/run/docker.sock:/var/run/docker.sock&#xA;    environment:&#xA;      - SE_NODE_DOCKER_CONFIG_FILENAME=docker.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;/opt/selenium/config.toml&lt;/code&gt; is the default path for the config file in all images. Once volumes config is shared to node browser containers, its &lt;code&gt;config.toml&lt;/code&gt; could be overwritten by node-docker container config file.&lt;/p&gt; &#xA;&lt;p&gt;In this case, mount your &lt;code&gt;config.toml&lt;/code&gt; file to &lt;code&gt;/opt/selenium/docker.toml&lt;/code&gt; in node-docker container. And set the environment variable &lt;code&gt;SE_NODE_DOCKER_CONFIG_FILENAME=docker.toml&lt;/code&gt; to specify that config file name for the startup script.&lt;/p&gt; &#xA;&lt;p&gt;Refer to example &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/docker-compose-v3-test-node-docker.yaml&#34;&gt;docker-compose-v3-test-node-docker.yaml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Execution with Hub &amp;amp; Node roles&lt;/h3&gt; &#xA;&lt;p&gt;This can be expanded to a full Grid deployment, all components deployed individually. The overall idea is to have the Hub in one virtual machine, and each of the Nodes in separate and more powerful virtual machines.&lt;/p&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Standalone roles&lt;/h3&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 \&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/standalone-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 `&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/standalone-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Dynamic Grid in different machines/VMs&lt;/h3&gt; &#xA;&lt;h4&gt;Hub - Machine/VM 1&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Node Chrome - Machine/VM 2&lt;/h4&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Complete the &lt;code&gt;[server]&lt;/code&gt; section in the &lt;code&gt;config.toml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.27.0-20241225&#34;, &#34;{\&#34;browserName\&#34;: \&#34;firefox\&#34;}&#34;,&#xA;    &#34;selenium/standalone-chrome:4.27.0-20241225&#34;, &#34;{\&#34;browserName\&#34;: \&#34;chrome\&#34;}&#34;,&#xA;    &#34;selenium/standalone-edge:4.27.0-20241225&#34;, &#34;{\&#34;browserName\&#34;: \&#34;MicrosoftEdge\&#34;}&#34;&#xA;    ]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-7.1-20241225&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;[server]&#xA;host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Execution with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a Node:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-dynamic-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-dynamic-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuring the child containers&lt;/h3&gt; &#xA;&lt;p&gt;Containers can be further configured through environment variables, such as &lt;code&gt;SE_NODE_SESSION_TIMEOUT&lt;/code&gt; and &lt;code&gt;SE_OPTS&lt;/code&gt;. When a child container is created, all environment variables prefixed with &lt;code&gt;SE_&lt;/code&gt; will be forwared and set in the container. You can set the desired environment variables in the &lt;code&gt;standalone-docker&lt;/code&gt; or &lt;code&gt;node-docker&lt;/code&gt; containers. The following example sets the session timeout to 700 seconds for all sessions:&lt;/p&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 \&#xA;    -e SE_NODE_SESSION_TIMEOUT=700 \&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/standalone-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 `&#xA;    -e SE_NODE_SESSION_TIMEOUT=700 `&#xA;    -v ${PWD}/config.toml:/opt/selenium/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/standalone-docker:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/h3&gt; &#xA;&lt;p&gt;To record your WebDriver session, you need to add a &lt;code&gt;se:recordVideo&lt;/code&gt; field set to &lt;code&gt;true&lt;/code&gt;. You can also set a time zone and a screen resolution, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;browserName&#34;: &#34;firefox&#34;,&#xA;  &#34;platformName&#34;: &#34;linux&#34;,&#xA;  &#34;se:recordVideo&#34;: &#34;true&#34;,&#xA;  &#34;se:timeZone&#34;: &#34;US/Pacific&#34;,&#xA;  &#34;se:screenResolution&#34;: &#34;1920x1080&#34;  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running a test, check the path you mounted to the Docker container, (&lt;code&gt;${PWD}/assets&lt;/code&gt;), and you should see videos and session information.&lt;/p&gt; &#xA;&lt;p&gt;From language bindings, you can set the &lt;code&gt;se:name&lt;/code&gt; capability to change output video file name dynamically. For example, in Python binding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from selenium.webdriver.chrome.options import Options as ChromeOptions&#xA;from selenium import webdriver&#xA;&#xA;options = ChromeOptions()&#xA;options.set_capability(&#39;se:recordVideo&#39;, True)&#xA;options.set_capability(&#39;se:screenResolution&#39;, &#39;1920x1080&#39;)&#xA;options.set_capability(&#39;se:name&#39;, &#39;test_visit_basic_auth_secured_page (ChromeTests)&#39;)&#xA;driver = webdriver.Remote(options=options, command_executor=&#34;http://localhost:4444&#34;)&#xA;driver.get(&#34;https://selenium.dev&#34;)&#xA;driver.quit()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After test executed, under (&lt;code&gt;${PWD}/assets&lt;/code&gt;) you can see the video file name in path &lt;code&gt;/&amp;lt;sessionId&amp;gt;/test_visit_basic_auth_secured_page_ChromeTests.mp4&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The file name will be trimmed to 255 characters to avoid long file names. Moreover, the &lt;code&gt;space&lt;/code&gt; character will be replaced by &lt;code&gt;_&lt;/code&gt;, and only the characters alphabets, numbers, &lt;code&gt;-&lt;/code&gt; (hyphen), and &lt;code&gt;_&lt;/code&gt; (underscore) are retained in the file name. (This feat is available once this &lt;a href=&#34;https://github.com/SeleniumHQ/selenium/pull/13907&#34;&gt;PR&lt;/a&gt; merged)&lt;/p&gt; &#xA;&lt;h3&gt;Time zone configuration via env variable&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;tzdata&lt;/code&gt; is installed in based images, and you can set the time zone in container by using the env variable &lt;code&gt;TZ&lt;/code&gt;. By default, the time zone is set to &lt;code&gt;UTC&lt;/code&gt;. List of supported time zones can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&#34;&gt;here&lt;/a&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm --entrypoint=&#34;&#34; -e TZ=Asia/Ho_Chi_Minh selenium/node-chromium:latest date +%FT%T%Z&#xA;2024-08-28T18:19:26+07&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploying to Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;We offer a Helm chart to deploy these Docker images to Kubernetes. Read more details at the Helm &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/charts/selenium-grid/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Configuring the containers&lt;/h2&gt; &#xA;&lt;h3&gt;SE_OPTS Selenium Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;SE_OPTS&lt;/code&gt; variable with additional command line parameters for starting a hub or a node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_OPTS=&#34;--log-level FINE&#34; --name selenium-hub selenium/hub:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SE_JAVA_OPTS Java Environment Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;SE_JAVA_OPTS&lt;/code&gt; environment variable to the Java process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_JAVA_OPTS=-Xmx512m --name selenium-hub selenium/hub:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SE_BROWSER_ARGS_* Add arguments for launching browser&lt;/h3&gt; &#xA;&lt;p&gt;Instead of adding arguments via the browser options from language bindings, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;options = ChromeOptions()&#xA;options.add_argument(&#39;--incognito&#39;)&#xA;options.add_argument(&#39;--disable-dev-shm-usage&#39;)&#xA;driver = webdriver.Remote(options=options, command_executor=&#34;http://localhost:4444/wd/hub&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You also can proactive to force applying arguments directly from (node, standalone or node-docker) container environment variables. Define the environment variable with name starts with &lt;code&gt;SE_BROWSER_ARGS_&lt;/code&gt; and following by config key is up to you (ensure those are unique when you define multiple arguments). For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 \&#xA;  -e SE_BROWSER_ARGS_INCOGNITO=--incognito \&#xA;  -e SE_BROWSER_ARGS_DISABLE_DSHM=--disable-dev-shm-usage \&#xA;  selenium/standalone-chrome:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://peter.sh/experiments/chromium-command-line-switches/&#34;&gt;List chromium command-line arguments&lt;/a&gt; for your reference.&lt;/p&gt; &#xA;&lt;p&gt;Note: Currently, this is applicable for node browsers Chrome/Chromium, Edge.&lt;/p&gt; &#xA;&lt;h3&gt;Node configuration options&lt;/h3&gt; &#xA;&lt;p&gt;The Nodes register themselves through the Event Bus. When the Grid is started in its typical Hub/Node setup, the Hub will be the one acting as the Event Bus, and when the Grid is started with all its five elements apart, the Event Bus will be running on its own.&lt;/p&gt; &#xA;&lt;p&gt;In both cases, it is necessary to tell the Node where the Event Bus is, so it can register itself. That is the purpose of the &lt;code&gt;SE_EVENT_BUS_HOST&lt;/code&gt;, &lt;code&gt;SE_EVENT_BUS_PUBLISH_PORT&lt;/code&gt; and &lt;code&gt;SE_EVENT_BUS_SUBSCRIBE_PORT&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, for example, if you want to tag a node, it might be necessary to supply a custom stereotype to the node config. The environment variable &lt;code&gt;SE_NODE_STEREOTYPE&lt;/code&gt; sets the stereotype entry in the node&#39;s &lt;code&gt;config.toml&lt;/code&gt;. An example config.toml file can be found here: &lt;a href=&#34;https://www.selenium.dev/documentation/grid/configuration/toml_options/#setting-custom-capabilities-for-matching-specific-nodes&#34;&gt;Setting custom capabilities for matching specific Nodes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the default values of these environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d \&#xA;  -e SE_EVENT_BUS_HOST=&amp;lt;event_bus_ip|event_bus_name&amp;gt; \&#xA;  -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 -e SE_NODE_STEREOTYPE=&#34;{\&#34;browserName\&#34;:\&#34;${SE_NODE_BROWSER_NAME}\&#34;,\&#34;browserVersion\&#34;:\&#34;${SE_NODE_BROWSER_VERSION}\&#34;,\&#34;platformName\&#34;: \&#34;Linux\&#34;}&#34; \&#xA;  --shm-size=&#34;2g&#34; selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Node configuration relay commands&lt;/h3&gt; &#xA;&lt;p&gt;Relaying commands to a service endpoint that supports WebDriver. It is useful to connect an external service that supports WebDriver to Selenium Grid. An example of such service could be a cloud provider or an Appium server. In this way, Grid can enable more coverage to platforms and versions not present locally.&lt;/p&gt; &#xA;&lt;p&gt;The following is an en example of configuration relay commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/docker-compose-v3-test-node-relay.yml&#34;&gt;docker-compose-v3-test-node-relay.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to relay commands only, &lt;code&gt;selenium/node-base&lt;/code&gt; is suitable and lightweight for this purpose. In case you want to configure node with both browsers and relay commands, respective node images can be used.&lt;/p&gt; &#xA;&lt;p&gt;To use environment variables for generate relay configs, set &lt;code&gt;SE_NODE_RELAY_URL&lt;/code&gt; and other variables as below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[relay]&#xA;url = &#34;${SE_NODE_RELAY_URL}&#34;&#xA;status-endpoint = &#34;${SE_NODE_RELAY_STATUS_ENDPOINT}&#34;&#xA;protocol-version = &#34;${SE_NODE_RELAY_PROTOCOL_VERSION}&#34;&#xA;configs = [ &#39;${SE_NODE_RELAY_MAX_SESSIONS}&#39;, &#39;{&#34;browserName&#34;: &#34;${SE_NODE_RELAY_BROWSER_NAME}&#34;, &#34;platformName&#34;: &#34;${SE_NODE_RELAY_PLATFORM_NAME}&#34;, &#34;appium:platformVersion&#34;: &#34;${SE_NODE_RELAY_PLATFORM_VERSION}&#34;}&#39; ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a sample test with the relayed node, you can clone the project and try below command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test_node_relay&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Sub Path&lt;/h3&gt; &#xA;&lt;p&gt;By default, Selenium is reachable at &lt;code&gt;http://127.0.0.1:4444/&lt;/code&gt;. Selenium can be configured to use a custom subpath by specifying the &lt;code&gt;SE_SUB_PATH&lt;/code&gt; environmental variable. In the example below Selenium is reachable at &lt;code&gt;http://127.0.0.1:4444/selenium-grid/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_SUB_PATH=/selenium-grid/ --name selenium-hub selenium/hub:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Screen Resolution&lt;/h3&gt; &#xA;&lt;p&gt;By default, nodes start with a screen resolution of 1920 x 1080 with a color depth of 24 bits and a dpi of 96. These settings can be adjusted by specifying &lt;code&gt;SE_SCREEN_WIDTH&lt;/code&gt;, &lt;code&gt;SE_SCREEN_HEIGHT&lt;/code&gt;, &lt;code&gt;SE_SCREEN_DEPTH&lt;/code&gt;, and/or &lt;code&gt;SE_SCREEN_DPI&lt;/code&gt; environmental variables when starting the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -e SE_SCREEN_WIDTH=1366 -e SE_SCREEN_HEIGHT=768 -e SE_SCREEN_DEPTH=24 -e SE_SCREEN_DPI=74 selenium/standalone-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Grid Url and Session Timeout&lt;/h3&gt; &#xA;&lt;p&gt;In some use cases, you might need to set the Grid URL to the Node, for example, if you&#39;d like to access the BiDi/CDP endpoint. This is also needed when you want to use the new &lt;code&gt;RemoteWebDriver.builder()&lt;/code&gt; or &lt;code&gt;Augmenter()&lt;/code&gt; present in Selenium 4 (since they setup the BiDi/CDP connection implicitly). You can do that through the &lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt; environment variable, eg &lt;code&gt;-e SE_NODE_GRID_URL=http://&amp;lt;hostMachine&amp;gt;:4444&lt;/code&gt;. Setting this env var is needed if you want to see the live view while sessions are executing.&lt;/p&gt; &#xA;&lt;p&gt;Grid has a default session timeout of 300 seconds, where the session can be in a stale state until it is killed. You can use &lt;code&gt;SE_NODE_SESSION_TIMEOUT&lt;/code&gt; to overwrite that value in seconds.&lt;/p&gt; &#xA;&lt;h3&gt;Session request timeout&lt;/h3&gt; &#xA;&lt;p&gt;A new session request is placed in the Session Queue before it is processed, and the request sits in the queue until a matching slot is found across the registered Nodes. However, the new session request might timeout if no slot was found. By default, a request will stay in the queue for up to 300 seconds before it a timeout is reached. In addition, an attempt to process the request is done every 5 seconds (by default).&lt;/p&gt; &#xA;&lt;p&gt;It is possible to override those values through environment variables in the Hub and the SessionQueue (&lt;code&gt;SE_SESSION_REQUEST_TIMEOUT&lt;/code&gt; and &lt;code&gt;SE_SESSION_RETRY_INTERVAL&lt;/code&gt;). For example, a timeout of 500 seconds would be &lt;code&gt;SE_SESSION_REQUEST_TIMEOUT=500&lt;/code&gt; and a retry interval of 2 seconds would be &lt;code&gt;SE_SESSION_RETRY_INTERVAL=2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Increasing session concurrency per container&lt;/h3&gt; &#xA;&lt;p&gt;By default, only one session is configured to run per container through the &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; environment variable. It is possible to increase that number up to the maximum available processors, this is because more stability is achieved when one container/browser has 1 CPU to run.&lt;/p&gt; &#xA;&lt;p&gt;However, if you have measured performance and based on that, you think more sessions can be executed in each container, you can override the maximum limit by setting both &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; to a desired number and &lt;code&gt;SE_NODE_OVERRIDE_MAX_SESSIONS&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Nevertheless, running more browser sessions than the available processors is not recommended since you will be overloading the resources.&lt;/p&gt; &#xA;&lt;p&gt;Overriding this setting has an undesired side effect when video recording is enabled since more than one browser session might be captured in the same video.&lt;/p&gt; &#xA;&lt;h3&gt;Running in Headless mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://developer.chrome.com/docs/chromium/headless&#34;&gt;Chrome&lt;/a&gt;, When using headless mode, there&#39;s no need for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Xvfb&#34;&gt;Xvfb&lt;/a&gt; server to be started.&lt;/p&gt; &#xA;&lt;p&gt;To avoid starting the server you can set the &lt;code&gt;SE_START_XVFB&lt;/code&gt; environment variable to &lt;code&gt;false&lt;/code&gt; (or any other value than &lt;code&gt;true&lt;/code&gt;), for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 -e SE_START_XVFB=false --shm-size=&#34;2g&#34; selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see this GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/567&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Noted:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In new Chrome/Chromium versions (v127+), &lt;code&gt;SE_START_XVFB&lt;/code&gt; is required to be set to &lt;code&gt;true&lt;/code&gt; to run in &lt;code&gt;--headless=new&lt;/code&gt; mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stopping the Node/Standalone after N sessions have been executed&lt;/h3&gt; &#xA;&lt;p&gt;In some environments, like Docker Swarm or Kubernetes, it is useful to shut down the Node or Standalone container after N tests have been executed. For example, this can be used in Kubernetes to terminate the pod and then scale a new one after N sessions. Set the environment variable &lt;code&gt;SE_DRAIN_AFTER_SESSION_COUNT&lt;/code&gt; to a value higher than zero to enable this behaviour.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -e SE_DRAIN_AFTER_SESSION_COUNT=5 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the previous command, the Standalone container will shut down after 5 sessions have been executed.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic browser leftovers cleanup&lt;/h3&gt; &#xA;&lt;p&gt;In long-running containers, it can happen that browsers leave some leftovers. These can be stuck browser processes of jobs that have already finished but failed to fully stop the browser, or temporary files written to the &lt;code&gt;/tmp&lt;/code&gt; file system (notably on Chrome-based browsers). To avoid these filling up resources like process IDs and file system usage in the container, there is an automatic cleanup script running every hour in the node containers. This will clean up old processes and old temporary files. By default, this is disabled. When enabled, this will clean up browsers running for longer than 2 hours, and files older than 1 day. These can be enabled and tweaked with the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SE_ENABLE_BROWSER_LEFTOVERS_CLEANUP&lt;/code&gt;: default value &lt;code&gt;false&lt;/code&gt;, set to &lt;code&gt;true&lt;/code&gt; to enable the cleanup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SE_BROWSER_LEFTOVERS_INTERVAL_SECS&lt;/code&gt;: default value &lt;code&gt;3600&lt;/code&gt; (1 hour), cleanup interval in seconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SE_BROWSER_LEFTOVERS_PROCESSES_SECS&lt;/code&gt;: default value &lt;code&gt;7200&lt;/code&gt; (2 hours), browsers running for longer than this time will be killed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SE_BROWSER_LEFTOVERS_TEMPFILES_DAYS&lt;/code&gt;: default value &lt;code&gt;1&lt;/code&gt; (1 day), files generated by Chrome-based browsers in &lt;code&gt;/tmp&lt;/code&gt; will be removed after these number of days (ignored when using Firefox).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you use Selenium for long-running sessions and expect browsers to be running for longer than 2 hours, either do not set &lt;code&gt;SE_ENABLE_BROWSER_LEFTOVERS_CLEANUP&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; (leave the default value of &lt;code&gt;false&lt;/code&gt;), or tweak &lt;code&gt;SE_BROWSER_LEFTOVERS_PROCESSES_SECS&lt;/code&gt; to set a value higher than your expected long-running browser processes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -e SE_ENABLE_BROWSER_LEFTOVERS_CLEANUP=true --shm-size=&#34;2g&#34; selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the previous command, the cleanup will be enabled with the default timings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -e SE_ENABLE_BROWSER_LEFTOVERS_CLEANUP=true \&#xA;-e SE_BROWSER_LEFTOVERS_INTERVAL_SECS=7200 \&#xA;-e SE_BROWSER_LEFTOVERS_PROCESSES_SECS=3600 \&#xA;-e SE_BROWSER_LEFTOVERS_TEMPFILES_DAYS=2 \&#xA;--shm-size=&#34;2g&#34; selenium/node-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the previous command, the cleanup will be enabled, but will run every 2 hours (instead of 1), will kill browsers running longer than 1 hour (instead of 2 hours), and will remove temp files older than 2 days (instead of 1).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Mask sensitive information in console logs&lt;/h2&gt; &#xA;&lt;p&gt;Few variables output like password, secret, etc. are masked in console logs. For debugging purposes, you can disable it by setting &lt;code&gt;SE_MASK_SECRETS&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;While creating bash script, your can mask the output by using syntax &lt;code&gt;echo &#34;Current value is $(mask ${YOUR_VARIABLE})&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SE_MASK_SECRETS_MIN_LENGTH&lt;/code&gt; default is &lt;code&gt;3&lt;/code&gt;. It means a long string will be masked to &lt;code&gt;***&lt;/code&gt; to avoid exposing length for brute force attack.&lt;/p&gt; &#xA;&lt;h2&gt;Secure connection&lt;/h2&gt; &#xA;&lt;p&gt;By default, there are default self-signed certificates available in the image in location &lt;code&gt;/opt/selenium/secrets&lt;/code&gt; includes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;server.jks&lt;/code&gt;: truststore file to configure for JVM via system property &lt;code&gt;javax.net.ssl.trustStore&lt;/code&gt; when start the server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server.pass&lt;/code&gt;: file contains the truststore password for JVM via system property &lt;code&gt;javax.net.ssl.trustStorePassword&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tls.crt&lt;/code&gt;: Server certificate for https connection is set to Selenium option &lt;code&gt;--https-certificate&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tls.key&lt;/code&gt;: Server private key (in PKCS8 format) for https connection is set to Selenium option &lt;code&gt;--https-private-key&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are environment variables to configure the secure connection:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variables&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Option of&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_ENABLE_TLS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable secure connection with default configs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_JAVA_SSL_TRUST_STORE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/opt/selenium/secrets/server.jks&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JVM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_JAVA_SSL_TRUST_STORE_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/opt/selenium/secrets/server.pass&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JVM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_JAVA_DISABLE_HOSTNAME_VERIFICATION&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JVM&lt;/td&gt; &#xA;   &lt;td&gt;Disable host checks for components internally&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_HTTPS_CERTIFICATE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/opt/selenium/secrets/tls.crt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Selenium&lt;/td&gt; &#xA;   &lt;td&gt;Set to CLI option &lt;code&gt;--https-certificate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_HTTPS_PRIVATE_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/opt/selenium/secrets/tls.key&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Selenium&lt;/td&gt; &#xA;   &lt;td&gt;Set to CLI option &lt;code&gt;--https-private-key&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Via volume mount, you can replace the default certificates with your own certificates.&lt;/p&gt; &#xA;&lt;p&gt;The self-signed certificate also needs to be trusted by the client (add to system widely bundle trusted CA) to avoid error message relates to SSL handshake when creating RemoteWebDriver.&lt;/p&gt; &#xA;&lt;p&gt;Refer to sample: &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid-secure.yml&#34;&gt;&lt;code&gt;docker-compose-v3-full-grid-secure.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Browser language and locale&lt;/h2&gt; &#xA;&lt;p&gt;Different browsers have different ways to set the language and locale from binding.&lt;/p&gt; &#xA;&lt;h3&gt;Firefox&lt;/h3&gt; &#xA;&lt;p&gt;Firefox can be configured to use a specific language and locale by setting the profile preference when create WebDriver from binding. In addition, language pack need to be installed as add-on for browser UI language to take effect. For example, to set the browser language and locale to &lt;code&gt;vi-VN&lt;/code&gt;, you can use the following steps:&lt;/p&gt; &#xA;&lt;p&gt;Get the latest Firefox language pack for the desired language e.g. &lt;a href=&#34;https://download.mozilla.org/?product=firefox-langpack-latest-SSL&amp;amp;lang=vi&#34;&gt;https://download.mozilla.org/?product=firefox-langpack-latest-SSL&amp;amp;lang=vi&lt;/a&gt;. Then, you can install the language pack as an add-on when creating the RemoteWebDriver instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;profile = webdriver.FirefoxProfile()&#xA;profile.set_preference(&#39;intl.accept_languages&#39;, &#39;vi-VN,vi&#39;)&#xA;profile.set_preference(&#39;intl.locale.requested&#39;, &#39;vi-VN,vi&#39;)&#xA;options = FirefoxOptions()&#xA;options.profile = profile&#xA;driver = webdriver.Remote(options=options, command_executor=&#34;http://selenium-hub:4444/wd/hub&#34;)&#xA;webdriver.Firefox.install_addon(driver, &#34;/local/path/to/vi.xpi&#34;)&#xA;driver.get(&#39;https://google.com&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/NodeFirefox/get_lang_package.sh&#34;&gt;script&lt;/a&gt; to get all available language packs for a given Firefox version. You can run the script to get the language packs to your source. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;FIREFOX_VERSION=$(docker run --rm --entrypoint=&#34;&#34; selenium/node-firefox:latest firefox --version | awk &#39;{print $3}&#39;) \&#xA;&amp;amp;&amp;amp; ./NodeFirefox/get_lang_package.sh ${FIREFOX_VERSION} /local/path/to/download&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can mount the container directory &lt;code&gt;$(readlink -f $(which firefox)))/distribution/extensions&lt;/code&gt; to host directory to access packs were pre-built in the container for using in your test script.&lt;/p&gt; &#xA;&lt;h2&gt;Managing processes in container&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://supervisord.org/configuration.html&#34;&gt;Supervisor&lt;/a&gt; is used to manage processes and logs in the container. Few configuration for &lt;code&gt;supervisord&lt;/code&gt; can be set via environment variables as below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variables&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;supervisord&lt;/code&gt; config&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_SUPERVISORD_LOG_LEVEL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;supervisord.loglevel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_SUPERVISORD_CHILD_LOG_DIR&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/tmp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;supervisord.childlogdir&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_SUPERVISORD_LOG_FILE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/tmp/supervisord.log&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;supervisord.logfile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SE_SUPERVISORD_PID_FILE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/tmp/supervisord.pid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;supervisord.pidfile&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Building the images&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo and from the project directory root you can build everything by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=local make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to configure environment variables in order to build the image (http proxy for instance), simply set an environment variable &lt;code&gt;BUILD_ARGS&lt;/code&gt; that contains the additional variables to pass to the docker context (this will only work with docker &amp;gt;= 1.9)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ BUILD_ARGS=&#34;--build-arg http_proxy=http://acme:3128 --build-arg https_proxy=http://acme:3128&#34; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Omitting&lt;/em&gt; &lt;code&gt;VERSION=local&lt;/code&gt; &lt;em&gt;will build the images with the released version but replacing the date for the current one.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to build the image with the host UID/GID, simply set an environment variable &lt;code&gt;BUILD_ARGS&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ BUILD_ARGS=&#34;--build-arg UID=$(id -u) --build-arg GID=$(id -g)&#34; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to build the image with different default user/password, simply set an environment variable &lt;code&gt;BUILD_ARGS&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ BUILD_ARGS=&#34;--build-arg SEL_USER=yourseluser --build-arg SEL_PASSWD=welcome&#34; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Build the images with specific versions&lt;/h1&gt; &#xA;&lt;p&gt;Based on the latest Dockerfile (by cloning the repo and from the project directory root), you can build the images with a specific combination of Selenium Grid, and browser versions.&lt;/p&gt; &#xA;&lt;p&gt;For example, you would like to build &lt;code&gt;node-chrome&lt;/code&gt; and &lt;code&gt;standalone-chrome&lt;/code&gt; images with the Grid based version &lt;code&gt;4.17.0&lt;/code&gt;, Chrome browser versions &lt;code&gt;119&lt;/code&gt;, &lt;code&gt;120&lt;/code&gt;, &lt;code&gt;123&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./tests/build-backward-compatible/bootstrap.sh 4.17.0 119,120,123 chrome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In generic, the script takes the following arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$1&lt;/code&gt; (mandatory): Selenium Grid version. Details are fetching from matrix &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/build-backward-compatible/selenium-matrix.yml&#34;&gt;file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$2&lt;/code&gt; (mandatory): Browser major version, multiple values separated by comma. Details are fetching from matrix &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/build-backward-compatible/cdp-matrix.yml&#34;&gt;file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$3&lt;/code&gt; (optional): browser name. If not provided, it will iterate over all the browsers (&lt;code&gt;chrome&lt;/code&gt;, &lt;code&gt;edge&lt;/code&gt;, &lt;code&gt;firefox&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$4&lt;/code&gt; (optional): Push image to registry. By default, it is &lt;code&gt;false&lt;/code&gt;. If you want to push the image to the registry, set it to &lt;code&gt;true&lt;/code&gt; (required Docker login to your namespace done before running the script).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To set your namespace for the images, you can set the environment variable &lt;code&gt;NAME&lt;/code&gt; before running the script. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ export NAME=artifactory.yourcompany.com/selenium&#xA;$ ./tests/build-backward-compatible/bootstrap.sh 4.17.0 119,120,123 chrome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running the script, you will see list images with a full tag to pin specific Grid and browser version following &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/wiki/Tagging-Convention&#34;&gt;Tagging Conventions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Upgrade browser version in the images&lt;/h2&gt; &#xA;&lt;p&gt;Selenium server, browser and driver are pre-installed in the image. In case you would like to remain on the same Selenium version and just upgrade the browser and its driver to the latest. You can follow below steps&lt;/p&gt; &#xA;&lt;p&gt;Clone the repo and from the project directory root you can upgrade by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=$EXPECTED_SELENIUM_VERSION make chrome_upgrade_version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example: &lt;code&gt;VERSION=4.16.1 make chrome_upgrade_version&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The new image has tag &lt;code&gt;$VERSION_YYYYMMDD&lt;/code&gt; where &lt;code&gt;YYYYMMDD&lt;/code&gt; is the current date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=$SELENIUM_VERSION make firefox_upgrade_version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=$SELENIUM_VERSION make edge_upgrade_version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can refer to detail commands in the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/Makefile&#34;&gt;Makefile&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Waiting for the Grid to be ready&lt;/h2&gt; &#xA;&lt;p&gt;It is a good practice to check first if the Grid is up and ready to receive requests, this can be done by checking the &lt;code&gt;/wd/hub/status&lt;/code&gt; endpoint.&lt;/p&gt; &#xA;&lt;p&gt;A Grid that is ready, composed of a hub and two nodes, could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;value&#34;: {&#xA;    &#34;ready&#34;: true,&#xA;    &#34;message&#34;: &#34;Selenium Grid ready.&#34;,&#xA;    &#34;nodes&#34;: [&#xA;      {&#xA;        &#34;id&#34;: &#34;6c0a2c59-7e99-469d-bbfc-313dc638797c&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.3:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;firefox&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      },&#xA;      {&#xA;        &#34;id&#34;: &#34;26af3363-a0d8-4bd6-a854-2c7497ed64a4&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.4:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;chrome&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;&#34;ready&#34;: true&lt;/code&gt; value indicates that the Grid is ready to receive requests. This status can be polled through a script before running any test, or it can be added as a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; when the docker container is started.&lt;/p&gt; &#xA;&lt;h3&gt;Adding a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; to the Grid&lt;/h3&gt; &#xA;&lt;p&gt;The script &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/Base/check-grid.sh&#34;&gt;check-grid.sh&lt;/a&gt;, which is included in the images, can be used to poll the Grid status.&lt;/p&gt; &#xA;&lt;p&gt;This example checks the status of the Grid every 15 seconds, it has a timeout of 30 seconds when the check is done, and it retries up to 5 times until the container is marked as unhealthy. Please use adjusted values to fit your needs, (if needed) replace the &lt;code&gt;--host&lt;/code&gt; and &lt;code&gt;--port&lt;/code&gt; parameters for the ones used in your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub \&#xA;  --health-cmd=&#39;/opt/bin/check-grid.sh --host 0.0.0.0 --port 4444&#39; \&#xA;  --health-interval=15s --health-timeout=30s --health-retries=5 \&#xA;  selenium/hub:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.27.0-20241225&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.27.0-20241225&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;\&lt;/code&gt; line delimiter won&#39;t work on Windows-based terminals, try either &lt;code&gt;^&lt;/code&gt; or a backtick.&lt;/p&gt; &#xA;&lt;p&gt;The container health status can be checked by doing &lt;code&gt;docker ps&lt;/code&gt; and verifying the &lt;code&gt;(healthy)|(unhealthy)&lt;/code&gt; status or by inspecting it in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker inspect --format=&#39;{{json .State.Health.Status}}&#39; selenium-hub&#xA;&#34;healthy&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a bash script to wait for the Grid&lt;/h3&gt; &#xA;&lt;p&gt;A common problem known in docker is that a running container does not always mean that the application inside it is ready. A simple way to tackle this is by using a &#34;wait-for-it&#34; script, more information can be seen &lt;a href=&#34;https://docs.docker.com/compose/startup-order/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following script is an example of how this can be done using bash, but the same principle applies if you want to do this with the programming language used to write the tests. In the example below, the script will poll the status endpoint every second. If the grid does not become ready within 30 seconds, the script will exit with an error code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;# wait-for-grid.sh&#xA;&#xA;set -e&#xA;url=&#34;http://localhost:4444/wd/hub/status&#34;&#xA;wait_interval_in_seconds=1&#xA;max_wait_time_in_seconds=30&#xA;end_time=$((SECONDS + max_wait_time_in_seconds))&#xA;time_left=$max_wait_time_in_seconds&#xA;&#xA;while [ $SECONDS -lt $end_time ]; do&#xA;    response=$(curl -sL &#34;$url&#34; | jq -r &#39;.value.ready&#39;)&#xA;    if [ -n &#34;$response&#34;  ]  &amp;amp;&amp;amp; [ &#34;$response&#34; ]; then&#xA;        echo &#34;Selenium Grid is up - executing tests&#34;&#xA;        break&#xA;    else&#xA;        echo &#34;Waiting for the Grid. Sleeping for $wait_interval_in_seconds second(s). $time_left seconds left until timeout.&#34;&#xA;        sleep $wait_interval_in_seconds&#xA;        time_left=$((time_left - wait_interval_in_seconds))&#xA;    fi&#xA;done&#xA;&#xA;if [ $SECONDS -ge $end_time ]; then&#xA;    echo &#34;Timeout: The Grid was not started within $max_wait_time_in_seconds seconds.&#34;&#xA;    exit 1&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Will require &lt;code&gt;jq&lt;/code&gt; installed via &lt;code&gt;apt-get&lt;/code&gt;, else the script will keep printing &lt;code&gt;Waiting&lt;/code&gt; without completing the execution.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If needed, replace &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;4444&lt;/code&gt; for the correct values in your environment. Also, this script is polling indefinitely, you might want to tweak it and establish a timeout.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say that the normal command to execute your tests is &lt;code&gt;mvn clean test&lt;/code&gt;. Here is a way to use the above script and execute your tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./wait-for-grid.sh &amp;amp;&amp;amp; mvn clean test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like this, the script will poll until the Grid is ready, and then your tests will start.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Install certificates for Chromium-based browsers&lt;/h2&gt; &#xA;&lt;p&gt;By default, the based image is installed &lt;code&gt;libnss3-tools&lt;/code&gt; and initializes &lt;code&gt;/home/seluser/.pki/nssdb&lt;/code&gt;, so you are able to add your certs with rootless. If you need to install custom certificates, CA, intermediate CA, or client certificates (for example, enterprise internal CA) you can create your own docker image from selenium node image. The Chromium-based browser uses &lt;code&gt;nssdb&lt;/code&gt; as a certificate store. You can then install all required internal certificates in your Dockerfile like this:&lt;/p&gt; &#xA;&lt;p&gt;There is a utility script packaged in the image that can be used to add your certificates to the &lt;code&gt;nssdb&lt;/code&gt; store and the bundle CA. The script is &lt;code&gt;/opt/bin/add-cert-helper.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a Dockerfile that uses the selenium node image as a base and copies the script to the container, and executes it. For example, &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/customCACert/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have to create a set of different certificates and node images. You can create a bootstrap script to do that in one-shot. For example, &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/tests/customCACert/bootstrap.sh&#34;&gt;bootstrap.sh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The above example can be tested with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test_custom_ca_cert&#xA;# ./tests/customCACert/bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find more information &lt;a href=&#34;https://chromium.googlesource.com/chromium/src/+/master/docs/linux/cert_management.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This way the certificates will be installed and the node will start automatically as before.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Alternative method: Add certificates to existing Selenium based images for browsers&lt;/h2&gt; &#xA;&lt;p&gt;As an alternative, you can add your certificate files to existing Selenium images. This practical example assumes you have a known image to use as a build image and have a way to publish new images to your local docker registry.&lt;/p&gt; &#xA;&lt;p&gt;This example uses a RedHat-based distro as a build image (Rocky Linux) but it can be &lt;em&gt;any&lt;/em&gt; Linux image of your choice. Please note that build instruction will vary between distributions. You can check the instructions for Ubuntu in the previous example.&lt;/p&gt; &#xA;&lt;p&gt;The example also assumes your internal CA is already in &lt;em&gt;/etc/pki/ca-trust/source/anchors/YOUR_CA.pem&lt;/em&gt;, the default location for Rocky Linux. Alternatively, you can also provide these files from your host and copy them into the build image.&lt;/p&gt; &#xA;&lt;p&gt;For Chrome and Edge browsers, the recipe is the same, just adapt the image name (node-chrome or node-edge):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Get a standard image for creating nssdb file&#xA;FROM rockylinux:8.6 as build&#xA;RUN yum install -y nss-tools&#xA;RUN mkdir -p -m755 /seluser/.pki/nssdb \&#xA;    &amp;amp;&amp;amp; certutil -d sql:/seluser/.pki/nssdb -N --empty-password \&#xA;    &amp;amp;&amp;amp; certutil -d sql:/seluser/.pki/nssdb -A -t &#34;C,,&#34; -n YOUR_CA -i /etc/pki/ca-trust/source/anchors/YOUR_CA.pem \&#xA;    &amp;amp;&amp;amp; chown -R 1200:1201 /seluser&#xA;&#xA;# Start from Selenium image and add relevant files from build image&#xA;FROM selenium/node-chrome:4.27.0-20241225&#xA;USER root&#xA;COPY --from=build /seluser/ /home/seluser/&#xA;USER seluser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example for Firefox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Get a standard image for working on&#xA;FROM rockylinux:8.6 as build&#xA;RUN mkdir -p &#34;/distribution&#34; &#34;/certs&#34; &amp;amp;&amp;amp; \&#xA;    cp /etc/pki/ca-trust/source/anchors/YOUR_CA*.pem /certs/ &amp;amp;&amp;amp; \&#xA;    echo &#39;{ &#34;policies&#34;: { &#34;Certificates&#34;: { &#34;Install&#34;: [&#34;/opt/firefox-latest/YOUR_CA.pem&#34;] }} }&#39; &amp;gt;&#34;/distribution/policies.json&#34;&#xA;&#xA;# Start from Selenium image and add relevant files from build image&#xA;FROM selenium/node-firefox:4.27.0-20241225&#xA;USER root&#xA;COPY --from=build /certs /opt/firefox-latest&#xA;COPY --from=build /distribution /opt/firefox-latest/distribution&#xA;USER seluser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/LibVNC/x11vnc&#34;&gt;x11vnc&lt;/a&gt; as a VNC server to allow users to inspect what is happening inside the container. Users can connect to this server in two ways:&lt;/p&gt; &#xA;&lt;h3&gt;Using a VNC client&lt;/h3&gt; &#xA;&lt;p&gt;The VNC server is listening to port 5900, you can use a VNC client and connect to it. Feel free to map port 5900 to any free external port that you wish.&lt;/p&gt; &#xA;&lt;p&gt;The internal 5900 port remains the same because that is the configured port for the VNC server running inside the container. You can override it with the &lt;code&gt;SE_VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 5900:5900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.27.0-20241225&#xA;$ docker run -d -p 4445:4444 -p 5901:5900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.27.0-20241225&#xA;$ docker run -d -p 4446:4444 -p 5902:5900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your VNC client:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Port 5900 to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;Port 5901 to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;Port 5902 to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;. If you wish to change this, you can set the environment variable &lt;code&gt;SE_VNC_PASSWORD&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run VNC without password authentication you can set the environment variable &lt;code&gt;SE_VNC_NO_PASSWORD=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run VNC in view-only mode you can set the environment variable &lt;code&gt;SE_VNC_VIEW_ONLY=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to modify the open file descriptor limit for the VNC server process you can set the environment variable &lt;code&gt;SE_VNC_ULIMIT=4096&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using your browser (no VNC client is needed)&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/novnc/noVNC&#34;&gt;noVNC&lt;/a&gt; to allow users to inspect visually container activity with their browser. This might come in handy if you cannot install a VNC client on your machine. Port 7900 is used to start noVNC, so you will need to connect to that port with your browser.&lt;/p&gt; &#xA;&lt;p&gt;Similarly to the previous section, feel free to map port 7900 to any free external port that you wish. You can also override it with the &lt;code&gt;SE_NO_VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.27.0-20241225&#xA;$ docker run -d -p 4445:4444 -p 7901:7900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.27.0-20241225&#xA;$ docker run -d -p 4446:4444 -p 7902:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your browser:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7900/&#34;&gt;http://localhost:7900/&lt;/a&gt; to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7901/&#34;&gt;http://localhost:7901/&lt;/a&gt; to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7902/&#34;&gt;http://localhost:7902/&lt;/a&gt; to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Disabling VNC&lt;/h3&gt; &#xA;&lt;p&gt;If You are running low on resources, or simply don&#39;t need to inspect running sessions, it is possible to not run VNC at all. Just set &lt;code&gt;SE_START_VNC=false&lt;/code&gt; environment variable on the grid startup.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Tracing in Grid&lt;/h2&gt; &#xA;&lt;p&gt;In order to enable tracing in the Selenium Grid container, the following commands can be executed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create grid&#xA;docker run -d -p 16686:16686 -p 4317:4317 --net grid --name jaeger jaegertracing/all-in-one:1.54&#xA;docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.27.0-20241225&#xA;docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;&#x9;-e SE_ENABLE_TRACING=true \&#xA;&#x9;-e SE_OTEL_TRACES_EXPORTER=otlp \&#xA;&#x9;-e SE_OTEL_EXPORTER_ENDPOINT=http://jaeger:4317 \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.27.0-20241225&#xA;docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;&#x9;-e SE_ENABLE_TRACING=true \&#xA;&#x9;-e SE_OTEL_TRACES_EXPORTER=otlp \&#xA;&#x9;-e SE_OTEL_EXPORTER_ENDPOINT=http://jaeger:4317 \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.27.0-20241225&#xA;docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;&#x9;-e SE_ENABLE_TRACING=true \&#xA;&#x9;-e SE_OTEL_TRACES_EXPORTER=otlp \&#xA;&#x9;-e SE_OTEL_EXPORTER_ENDPOINT=http://jaeger:4317 \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also refer to the below docker compose yaml files to be able to start a simple grid (or) a dynamic grid.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Grid &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-tracing.yml&#34;&gt;v3 yaml file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simple Grid &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v2-tracing.yml&#34;&gt;v2 yaml file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Grid &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid-tracing.yml&#34;&gt;v3 yaml file&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can view the &lt;a href=&#34;http://localhost:16686/&#34;&gt;Jaeger UI&lt;/a&gt; and trace your request.&lt;/p&gt; &#xA;&lt;p&gt;By default, the tracing is enabled in Grid components. Without trace exporter endpoint, it will look up a local instance e.g. &lt;code&gt;localhost/[0:0:0:0:0:0:0:1]:4117&lt;/code&gt;. In container logs you can see few lines like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR (ThrottlingLogger.dolog) Failed to export spans.&#xA;  The request could not be executed. Error message: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:4117&#xA;  java.net.ConnectException: Failed to connect to localhost/[0:0:0:0:0:0:0:1]:4317 &#xA;at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:297)&#xA;at okhttp3.internal.connection. ExchangeFinder.findConnection (Exchangefinder.kt: 226)&#xA;at okhttp3.internal.connection.okhttps.internal.connection.RealConnection.connect(RealConnection.kt:207)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, just simply set &lt;code&gt;SE_ENABLE_TRACING=false&lt;/code&gt; to all components container to disable tracing (each component exports its own traces).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;All output gets sent to stdout, so it can be inspected by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker logs -f &amp;lt;container-id|container-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can increase the log output by passing environment variable to the containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SE_OPTS=&#34;--log-level FINE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;--shm-size=&#34;2g&#34;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Why is &lt;code&gt;--shm-size 2g&lt;/code&gt; necessary?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a known workaround to avoid the browser crashing inside a docker container, here are the documented issues for &lt;a href=&#34;https://code.google.com/p/chromium/issues/detail?id=519952&#34;&gt;Chrome&lt;/a&gt; and &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1338771#c10&#34;&gt;Firefox&lt;/a&gt;. The shm size of 2gb is arbitrary but known to work well, your specific use case might need a different value, it is recommended to tune this value according to your needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Headless&lt;/h3&gt; &#xA;&lt;p&gt;If you see the following selenium exceptions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: invalid argument: can&#39;t kill an exited process&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: unknown error: Chrome failed to start: exited abnormally&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt; [DriverServiceSessionFactory.apply] - Error while creating session with the driver service. Stopping driver service: java.util.concurrent.TimeoutException&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The reason &lt;em&gt;might&lt;/em&gt; be that you&#39;ve set the &lt;code&gt;SE_START_XVFB&lt;/code&gt; environment variable to &lt;code&gt;false&lt;/code&gt;, but forgot to actually run Firefox, Chrome or Edge in headless mode.&lt;/p&gt; &#xA;&lt;h3&gt;Mounting volumes to retrieve downloaded files&lt;/h3&gt; &#xA;&lt;p&gt;A common scenario is mounting a volume to the browser container in order to retrieve downloaded files. This works well in Windows and macOS but not without workarounds in Linux. For more details, check this well-documented &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1095&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, while using Linux, you might be starting a container in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; \&#xA;  -v /home/ubuntu/files:/home/seluser/Downloads \&#xA;  selenium/standalone-chrome:4.27.0-20241225&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will mount the host &lt;code&gt;/home/ubuntu/files&lt;/code&gt; directory to the &lt;code&gt;/home/seluser/Downloads&lt;/code&gt; inside the container (default browser&#39;s downloads directory). The problem happens because the volume will be mounted as &lt;code&gt;root&lt;/code&gt;; therefore, the browser cannot write a file to that directory because it is running under the user &lt;code&gt;seluser&lt;/code&gt;. This happens because that is how Docker mounts volumes in Linux, more details in this &lt;a href=&#34;https://github.com/moby/moby/issues/2259&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A workaround for this is to create a directory on the host and change its permissions &lt;strong&gt;before mounting the volume&lt;/strong&gt;. Depending on your user permissions, you might need to use &lt;code&gt;sudo&lt;/code&gt; for some of these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /home/ubuntu/files&#xA;chown 1200:1201 /home/ubuntu/files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After doing this, you should be able to download files to the mounted directory. If you have a better workaround, please send us a pull request!&lt;/p&gt; &#xA;&lt;h3&gt;Mounting volumes to retrieve video files&lt;/h3&gt; &#xA;&lt;p&gt;Similar to mount volumes to retrieve downloaded files. For video files, you might need to do the same&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /tmp/videos&#xA;chown 1200:1201 /tmp/videos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/SeleniumHQ/docker-selenium&#34;&gt;&lt;img src=&#34;https://starchart.cc/SeleniumHQ/docker-selenium.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>