<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-01T02:17:56Z</updated>
  <subtitle>Monthly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>acmesh-official/acme.sh</title>
    <updated>2024-01-01T02:17:56Z</updated>
    <id>tag:github.com,2024-01-01:/acmesh-official/acme.sh</id>
    <link href="https://github.com/acmesh-official/acme.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A pure Unix shell script implementing ACME client protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An ACME Shell script: acme.sh&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;OpenBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;NetBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&#34; alt=&#34;Solaris&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;DragonFlyBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&#34; alt=&#34;Omnios&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/Shellcheck/badge.svg?sanitize=true&#34; alt=&#34;Shellcheck&#34;&gt; &lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/PebbleStrict/badge.svg?sanitize=true&#34; alt=&#34;PebbleStrict&#34;&gt; &lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/Build%20DockerHub/badge.svg?sanitize=true&#34; alt=&#34;DockerHub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh&#34; alt=&#34;Financial Contributors on Open Collective&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/all/badge.svg?label=financial+contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/acme-sh/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/acme-sh/Lobby.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/acme-sh/Lobby&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neilpang/acme.sh&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/neilpang/acme.sh.svg?sanitize=true&#34; alt=&#34;Docker stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neilpang/acme.sh&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/neilpang/acme.sh.svg?sanitize=true&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An ACME protocol client written purely in Shell (Unix shell) language.&lt;/li&gt; &#xA; &lt;li&gt;Full ACME protocol implementation.&lt;/li&gt; &#xA; &lt;li&gt;Support ECDSA certs&lt;/li&gt; &#xA; &lt;li&gt;Support SAN and wildcard certs&lt;/li&gt; &#xA; &lt;li&gt;Simple, powerful and very easy to use. You only need 3 minutes to learn it.&lt;/li&gt; &#xA; &lt;li&gt;Bash, dash and sh compatible.&lt;/li&gt; &#xA; &lt;li&gt;Purely written in Shell with no dependencies on python.&lt;/li&gt; &#xA; &lt;li&gt;Just one script to issue, renew and install your certificates automatically.&lt;/li&gt; &#xA; &lt;li&gt;DOES NOT require &lt;code&gt;root/sudoer&lt;/code&gt; access.&lt;/li&gt; &#xA; &lt;li&gt;Docker ready&lt;/li&gt; &#xA; &lt;li&gt;IPv6 ready&lt;/li&gt; &#xA; &lt;li&gt;Cron job notifications for renewal or error etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s probably the &lt;code&gt;easiest &amp;amp; smartest&lt;/code&gt; shell script to automatically issue &amp;amp; renew the free certificates.&lt;/p&gt; &#xA;&lt;p&gt;Wiki: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Docker Fans: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker&#34;&gt;acme.sh &lt;span&gt;💕&lt;/span&gt; Docker &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/neilpangxa&#34;&gt;@neilpangxa&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&#34;&gt;中文说明&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Who:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.crashed.org/letsencrypt-in-freebsd-org/&#34;&gt;FreeBSD.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ruby-china.org/topics/31983&#34;&gt;ruby-china.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pve.proxmox.com/wiki/Certificate_Management&#34;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfsense/FreeBSD-ports/pull/89&#34;&gt;pfsense&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.loadbalancer.org/blog/loadbalancer-org-with-lets-encrypt-quick-and-dirty&#34;&gt;Loadbalancer.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meta.discourse.org/t/setting-up-lets-encrypt/40709&#34;&gt;discourse.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://centminmod.com/letsencrypt-acmetool-https.html&#34;&gt;Centminmod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.splynx.com/t/free-ssl-cert-for-splynx-lets-encrypt/297&#34;&gt;splynx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opnsense/plugins/tree/master/security/acme-client/src/opnsense/scripts/OPNsense/AcmeClient&#34;&gt;opnsense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://control-webpanel.com&#34;&gt;CentOS Web Panel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lnmp.org/&#34;&gt;lnmp.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Blogs-and-tutorials&#34;&gt;more...&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tested OS&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;NO&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mac OSX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows (cygwin with curl, openssl and crontab included)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&#34; alt=&#34;Solaris&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;NA&lt;/td&gt; &#xA;   &lt;td&gt;pfsense&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;OpenBSD&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;NetBSD&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NetBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;DragonFlyBSD&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DragonFlyBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&#34; alt=&#34;Omnios&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Omnios&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CentOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alpine Linux (with curl)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Archlinux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kali Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Oracle Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mageia&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Gentoo Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ClearLinux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;-----&lt;/td&gt; &#xA;   &lt;td&gt;Cloud Linux &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/issues/111&#34;&gt;https://github.com/acmesh-official/acme.sh/issues/111&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;-----&lt;/td&gt; &#xA;   &lt;td&gt;OpenWRT: Tested and working. See &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-run-on-OpenWRT&#34;&gt;wiki page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/letest#here-are-the-latest-status&#34;&gt;&lt;img src=&#34;https://acmesh-official.github.io/acmetest/status/proxmox.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proxmox: See Proxmox VE Wiki. Version &lt;a href=&#34;https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Let.27s_Encrypt_using_acme.sh&#34;&gt;4.x, 5.0, 5.1&lt;/a&gt;, version &lt;a href=&#34;https://pve.proxmox.com/wiki/Certificate_Management&#34;&gt;5.2 and up&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://github.com/acmesh-official/acmetest&#34;&gt;testing project&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acmetest&#34;&gt;https://github.com/acmesh-official/acmetest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported CA&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA&#34;&gt;ZeroSSL.com CA&lt;/a&gt;(default)&lt;/li&gt; &#xA; &lt;li&gt;Letsencrypt.org CA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/BuyPass.com-CA&#34;&gt;BuyPass.com CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/SSL.com-CA&#34;&gt;SSL.com CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Google-Public-CA&#34;&gt;Google.com Public CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsencrypt/pebble&#34;&gt;Pebble strict Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any other &lt;a href=&#34;https://tools.ietf.org/html/rfc8555&#34;&gt;RFC8555&lt;/a&gt;-compliant CA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported modes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Webroot mode&lt;/li&gt; &#xA; &lt;li&gt;Standalone mode&lt;/li&gt; &#xA; &lt;li&gt;Standalone tls-alpn mode&lt;/li&gt; &#xA; &lt;li&gt;Apache mode&lt;/li&gt; &#xA; &lt;li&gt;Nginx mode&lt;/li&gt; &#xA; &lt;li&gt;DNS mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode&#34;&gt;DNS alias mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Stateless-Mode&#34;&gt;Stateless mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;1. How to install&lt;/h1&gt; &#xA;&lt;h3&gt;1. Install online&lt;/h3&gt; &#xA;&lt;p&gt;Check this project: &lt;a href=&#34;https://github.com/acmesh-official/get.acme.sh&#34;&gt;https://github.com/acmesh-official/get.acme.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://get.acme.sh | sh -s email=my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O -  https://get.acme.sh | sh -s email=my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Or, Install from git&lt;/h3&gt; &#xA;&lt;p&gt;Clone this project and launch installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/acmesh-official/acme.sh.git&#xA;cd ./acme.sh&#xA;./acme.sh --install -m my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;code&gt;don&#39;t have to be root&lt;/code&gt; then, although &lt;code&gt;it is recommended&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Advanced Installation: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The installer will perform 3 actions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and copy &lt;code&gt;acme.sh&lt;/code&gt; to your home dir (&lt;code&gt;$HOME&lt;/code&gt;): &lt;code&gt;~/.acme.sh/&lt;/code&gt;. All certs will be placed in this folder too.&lt;/li&gt; &#xA; &lt;li&gt;Create alias for: &lt;code&gt;acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create daily cron job to check and renew the certs if needed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Cron entry example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;0 0 * * * &#34;/home/user/.acme.sh&#34;/acme.sh --cron --home &#34;/home/user/.acme.sh&#34; &amp;gt; /dev/null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the installation, you must close the current terminal and reopen it to make the alias take effect.&lt;/p&gt; &#xA;&lt;p&gt;Ok, you are ready to issue certs now.&lt;/p&gt; &#xA;&lt;p&gt;Show help message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;root@v1:~# acme.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;2. Just issue a cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Single domain.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /home/wwwroot/example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /home/username/public_html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /var/www/html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; Multiple domains in the same cert.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parameter &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt; or &lt;code&gt;/home/username/public_html&lt;/code&gt; or &lt;code&gt;/var/www/html&lt;/code&gt; is the web root folder where you host your website files. You &lt;strong&gt;MUST&lt;/strong&gt; have &lt;code&gt;write access&lt;/code&gt; to this folder.&lt;/p&gt; &#xA;&lt;p&gt;Second argument &lt;strong&gt;&#34;example.com&#34;&lt;/strong&gt; is the main domain you want to issue the cert for. You must have at least one domain there.&lt;/p&gt; &#xA;&lt;p&gt;You must point and bind all the domains to the same webroot dir: &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The certs will be placed in &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. Install the cert to Apache/Nginx etc.&lt;/h1&gt; &#xA;&lt;p&gt;After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. You &lt;strong&gt;MUST&lt;/strong&gt; use this command to copy the certs to the target files, &lt;strong&gt;DO NOT&lt;/strong&gt; use the certs files in &lt;strong&gt;~/.acme.sh/&lt;/strong&gt; folder, they are for internal use only, the folder structure may change in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --install-cert -d example.com \&#xA;--cert-file      /path/to/certfile/in/apache/cert.pem  \&#xA;--key-file       /path/to/keyfile/in/apache/key.pem  \&#xA;--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \&#xA;--reloadcmd     &#34;service apache2 force-reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --install-cert -d example.com \&#xA;--key-file       /path/to/keyfile/in/nginx/key.pem  \&#xA;--fullchain-file /path/to/fullchain/nginx/cert.pem \&#xA;--reloadcmd     &#34;service nginx force-reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only the domain is required, all the other parameters are optional.&lt;/p&gt; &#xA;&lt;p&gt;The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.&lt;/p&gt; &#xA;&lt;p&gt;Install/copy the cert/key to the production Apache or Nginx path.&lt;/p&gt; &#xA;&lt;p&gt;The cert will be renewed every &lt;strong&gt;60&lt;/strong&gt; days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: &lt;code&gt;service apache2 force-reload&lt;/code&gt; or &lt;code&gt;service nginx force-reload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please take care: The reloadcmd is very important. The cert can be automatically renewed, but, without a correct &#39;reloadcmd&#39; the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;4. Use Standalone server to issue cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 80 (TCP))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port &lt;code&gt;80&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;5. Use Standalone ssl server to issue cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 443 (TCP))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port &lt;code&gt;443&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;6. Use Apache mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Apache server)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; &#xA;&lt;p&gt;Just set string &#34;apache&#34; as the second argument and it will force use of apache plugin automatically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This apache mode is only to issue the cert, it will not change your apache config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your apache server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;7. Use Nginx mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Nginx server)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; &#xA;&lt;p&gt;Just set string &#34;nginx&#34; as the second argument.&lt;/p&gt; &#xA;&lt;p&gt;It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.&lt;/p&gt; &#xA;&lt;p&gt;So, the config is not changed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This nginx mode is only to issue the cert, it will not change your nginx config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your nginx server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;8. Automatic DNS API integration&lt;/h1&gt; &#xA;&lt;p&gt;If your DNS provider supports API access, we can use that API to automatically issue the certs.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to do anything manually!&lt;/p&gt; &#xA;&lt;h3&gt;Currently acme.sh supports most of the dns providers:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;9. Use DNS manual mode:&lt;/h1&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;If your dns provider doesn&#39;t support any api access, you can add the txt record by hand.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should get an output like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Add the following txt record:&#xA;Domain:_acme-challenge.example.com&#xA;Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c&#xA;&#xA;Add the following txt record:&#xA;Domain:_acme-challenge.www.example.com&#xA;Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#xA;&#xA;Please add those txt records to the domains. Waiting for the dns to take effect.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just rerun with &lt;code&gt;renew&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --renew -d example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ok, it&#39;s done.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please use dns api mode instead.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;10. Issue ECC certificates&lt;/h1&gt; &#xA;&lt;p&gt;Just set the &lt;code&gt;keylength&lt;/code&gt; parameter with a prefix &lt;code&gt;ec-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;h3&gt;Single domain ECC certificate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SAN multi domain ECC certificate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please look at the &lt;code&gt;keylength&lt;/code&gt; parameter above.&lt;/p&gt; &#xA;&lt;p&gt;Valid values are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-256 (prime256v1, &#34;ECDSA P-256&#34;, which is the default key type)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-384 (secp384r1, &#34;ECDSA P-384&#34;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-521 (secp521r1, &#34;ECDSA P-521&#34;, which is not supported by Let&#39;s Encrypt yet.)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2048 (RSA2048)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;3072 (RSA3072)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;4096 (RSA4096)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;11. Issue Wildcard certificates&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s simple, just give a wildcard domain as the &lt;code&gt;-d&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh  --issue -d example.com  -d &#39;*.example.com&#39;  --dns dns_cf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;12. How to renew the certs&lt;/h1&gt; &#xA;&lt;p&gt;No, you don&#39;t need to renew the certs manually. All the certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; &#xA;&lt;p&gt;However, you can also force to renew a cert:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --renew -d example.com --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, for ECC cert:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --renew -d example.com --force --ecc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;13. How to stop cert renewal&lt;/h1&gt; &#xA;&lt;p&gt;To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --remove -d example.com [--ecc]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The cert/key file is not removed from the disk.&lt;/p&gt; &#xA;&lt;p&gt;You can remove the respective directory (e.g. &lt;code&gt;~/.acme.sh/example.com&lt;/code&gt;) by yourself.&lt;/p&gt; &#xA;&lt;h1&gt;14. How to upgrade &lt;code&gt;acme.sh&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;acme.sh is in constant development, so it&#39;s strongly recommended to use the latest code.&lt;/p&gt; &#xA;&lt;p&gt;You can update acme.sh to the latest code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also enable auto upgrade:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade --auto-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;strong&gt;acme.sh&lt;/strong&gt; will be kept up to date automatically.&lt;/p&gt; &#xA;&lt;p&gt;Disable auto upgrade:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade --auto-upgrade 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;15. Issue a cert from an existing CSR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;16. Send notifications in cronjob&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/notify&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/notify&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;17. Under the Hood&lt;/h1&gt; &#xA;&lt;p&gt;Speak ACME language using shell, directly to &#34;Let&#39;s Encrypt&#34;.&lt;/p&gt; &#xA;&lt;p&gt;TODO:&lt;/p&gt; &#xA;&lt;h1&gt;18. Acknowledgments&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Acme-tiny: &lt;a href=&#34;https://github.com/diafygi/acme-tiny&#34;&gt;https://github.com/diafygi/acme-tiny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ACME protocol: &lt;a href=&#34;https://github.com/ietf-wg-acme/acme&#34;&gt;https://github.com/ietf-wg-acme/acme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/acmesh/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/acmesh/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;19. License &amp;amp; Others&lt;/h1&gt; &#xA;&lt;p&gt;License is GPLv3&lt;/p&gt; &#xA;&lt;p&gt;Please Star and Fork me.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/pulls&#34;&gt;pull requests&lt;/a&gt; are welcome.&lt;/p&gt; &#xA;&lt;h1&gt;20. Donate&lt;/h1&gt; &#xA;&lt;p&gt;Your donation makes &lt;strong&gt;acme.sh&lt;/strong&gt; better:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PayPal/Alipay(支付宝)/Wechat(微信): &lt;a href=&#34;https://donate.acme.sh/&#34;&gt;https://donate.acme.sh/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Donate-list&#34;&gt;Donate List&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Nyr/openvpn-install</title>
    <updated>2024-01-01T02:17:56Z</updated>
    <id>tag:github.com,2024-01-01:/Nyr/openvpn-install</id>
    <link href="https://github.com/Nyr/openvpn-install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenVPN road warrior installer for Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS and Fedora&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;New: &lt;a href=&#34;https://github.com/Nyr/wireguard-install&#34;&gt;wireguard-install&lt;/a&gt; is also available.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;openvpn-install&lt;/h2&gt; &#xA;&lt;p&gt;OpenVPN &lt;a href=&#34;http://en.wikipedia.org/wiki/Road_warrior_%28computing%29&#34;&gt;road warrior&lt;/a&gt; installer for Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS and Fedora.&lt;/p&gt; &#xA;&lt;p&gt;This script will let you set up your own VPN server in no more than a minute, even if you haven&#39;t used OpenVPN before. It has been designed to be as unobtrusive and universal as possible.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Run the script and follow the assistant:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;wget https://git.io/vpn -O openvpn-install.sh &amp;amp;&amp;amp; bash openvpn-install.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once it ends, you can run it again to add more users, remove some of them or even completely uninstall OpenVPN.&lt;/p&gt; &#xA;&lt;h3&gt;I want to run my own VPN but don&#39;t have a server for that&lt;/h3&gt; &#xA;&lt;p&gt;You can get a VPS from just 2€/month at &lt;a href=&#34;https://alphavps.com/clients/aff.php?aff=474&amp;amp;pid=422&#34;&gt;AlphaVPS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Donations&lt;/h3&gt; &#xA;&lt;p&gt;If you want to show your appreciation, you can donate via &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=VBAYDL34Z7J6L&#34;&gt;PayPal&lt;/a&gt; or &lt;a href=&#34;https://pastebin.com/raw/M2JJpQpC&#34;&gt;cryptocurrency&lt;/a&gt;. Thanks!&lt;/p&gt; &#xA;&lt;h3&gt;Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;This project is proudly sponsored by our friends at &lt;a href=&#34;https://froge.host/?utm_source=nyr&#34;&gt;FrogeHost&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>armbian/build</title>
    <updated>2024-01-01T02:17:56Z</updated>
    <id>tag:github.com,2024-01-01:/armbian/build</id>
    <link href="https://github.com/armbian/build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Armbian Linux Build Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#build-framework&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/armbian/build/main/.github/armbian-logo.png&#34; alt=&#34;Armbian logo&#34; width=&#34;144&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;strong&gt;Armbian Linux Build Framework&lt;/strong&gt;&lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/armbian/build/graphs/contributors&#34;&gt;&lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors-anon/armbian/build?logo=stackexchange&amp;amp;label=Contributors&amp;amp;style=for-the-badge&amp;amp;branch=main&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/armbian/os&#34;&gt;&lt;img alt=&#34;Artifacts generation&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/armbian/os/complete-artifact-matrix-all.yml?logo=dependabot&amp;amp;label=CI%20Build&amp;amp;style=for-the-badge&amp;amp;branch=main&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/armbian/build/commits/main&#34;&gt;&lt;img alt=&#34;GitHub last commit (branch)&#34; src=&#34;https://img.shields.io/github/last-commit/armbian/build/main?logo=github&amp;amp;label=Last%20commit&amp;amp;style=for-the-badge&amp;amp;branch=main&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;What does this project do?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Builds custom &lt;strong&gt;kernel&lt;/strong&gt;, &lt;strong&gt;image&lt;/strong&gt; or a &lt;strong&gt;distribution&lt;/strong&gt; optimized for low-resource hardware,&lt;/li&gt; &#xA; &lt;li&gt;Include filesystem generation, low-level control software, kernel image and &lt;strong&gt;bootloader&lt;/strong&gt; compilation,&lt;/li&gt; &#xA; &lt;li&gt;Provides a &lt;strong&gt;consistent user experience&lt;/strong&gt; by keeping system standards across different platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements for self hosted&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;x86_64 / aarch64 machine&lt;/li&gt; &#xA; &lt;li&gt;at least 2GB of memory and ~35GB of disk space for VM, container or bare metal installation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/sdk&#34;&gt;Armbian / Ubuntu Jammy 22.04.x&lt;/a&gt; for native building or any Docker capable Linux for containerised&lt;/li&gt; &#xA; &lt;li&gt;Windows 10/11 with WSL2 subsystem running Ubuntu Jammy 22.04.x&lt;/li&gt; &#xA; &lt;li&gt;Superuser rights (configured sudo or root access).&lt;/li&gt; &#xA; &lt;li&gt;Make sure your system is up-to-date! Outdated Docker binaries, for example, can cause trouble.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For stable branch use &lt;code&gt;--branch=v23.11&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get -y install git&#xA;git clone --depth=1 --branch=main https://github.com/armbian/build&#xA;cd build&#xA;./compile.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#how-to-build-an-image-or-a-kernel&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/armbian/build/main/.github/README.gif&#34; alt=&#34;Armbian logo&#34; width=&#34;100%&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Interactive graphical interface.&lt;/li&gt; &#xA; &lt;li&gt;Prepares the workspace by installing the necessary dependencies and sources.&lt;/li&gt; &#xA; &lt;li&gt;It guides the entire process and creates a kernel package or a ready-to-use SD card image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build parameter examples&lt;/h3&gt; &#xA;&lt;p&gt;Show work-in-progress areas in interactive mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./compile.sh EXPERT=&#34;yes&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build minimal CLI Armbian Jammy for Bananapi M5 with LTS kernel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./compile.sh \&#xA;BOARD=bananapim5 \&#xA;BRANCH=current \&#xA;RELEASE=jammy \&#xA;BUILD_MINIMAL=yes \&#xA;BUILD_DESKTOP=no \&#xA;KERNEL_CONFIGURE=no&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build with GitHub actions: (&lt;a href=&#34;https://github.com/armbian/os/raw/main/.github/workflows/complete-artifact-one-by-one.yml&#34;&gt;advanced version&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;name: &#34;Build Armbian&#34;&#xA;on:&#xA;  workflow_dispatch:&#xA;jobs:&#xA;  build-armbian:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: armbian/build@main&#xA;        with:&#xA;          armbian_token:     &#34;${{ secrets.GITHUB_TOKEN }}&#34;  # GitHub token&#xA;          armbian_release:   &#34;jammy&#34;                        # userspace&#xA;          armbian_target:    &#34;build&#34;                        # build=image, kernel=kernel&#xA;          armbian_board:     &#34;bananapim5&#34;                   # build target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated image will be uploaded to your repository release. Note: GitHub upload file limit is 2Gb.&lt;/p&gt; &#xA;&lt;h2&gt;More information:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Developer-Guide_Build-Preparation/&#34;&gt;Building Armbian&lt;/a&gt; (how to start, how to automate)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Developer-Guide_Build-Options/&#34;&gt;Build options&lt;/a&gt; (all build options)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Developer-Guide_User-Configurations/&#34;&gt;User configuration&lt;/a&gt; (how to add packages, patches, and override sources config)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download prebuilt images releases&lt;/h2&gt; &#xA;&lt;h3&gt;Point&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.armbian.com/download/?device_support=Standard%20support&#34;&gt;manually released &lt;strong&gt;standard supported&lt;/strong&gt; builds&lt;/a&gt; (quarterly)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Rolling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/os/releases/latest&#34;&gt;automatically released &lt;strong&gt;staging and standard supported&lt;/strong&gt; builds&lt;/a&gt; (daily)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/community/releases/latest&#34;&gt;automatically released &lt;strong&gt;community maintained&lt;/strong&gt; builds&lt;/a&gt; (weekly)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compared with industry standards&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand&lt;/summary&gt; Check similarities, advantages and disadvantages compared with leading industry standard build software. &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Armbian&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Yocto&lt;/th&gt; &#xA;    &lt;th align=&#34;left&#34;&gt;Buildroot&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Target&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;general purpose&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;embedded&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;embedded / IOT&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;U-boot and kernel&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;compiled from sources&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;compiled from sources&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;compiled from sources&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Board support maintenance &amp;nbsp;&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;complete&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;outside&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;outside&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Root file system&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Debian or Ubuntu based&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;custom&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;custom&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Package manager&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;APT&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;none&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Configurability&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;limited&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;large&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;large&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Initramfs support&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Getting started&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;quick&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;very slow&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;slow&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;Cross compilation&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;    &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;├── cache                                Work / cache directory&#xA;│&amp;nbsp;&amp;nbsp; ├── aptcache                         Packages&#xA;│&amp;nbsp;&amp;nbsp; ├── ccache                           C/C++ compiler&#xA;│&amp;nbsp;&amp;nbsp; ├── docker                           Docker last pull&#xA;│&amp;nbsp;&amp;nbsp; ├── git-bare                         Minimal Git&#xA;│&amp;nbsp;&amp;nbsp; ├── git-bundles                      Full Git&#xA;│&amp;nbsp;&amp;nbsp; ├── initrd                           Ram disk&#xA;│&amp;nbsp;&amp;nbsp; ├── memoize                          Git status&#xA;│&amp;nbsp;&amp;nbsp; ├── patch                            Kernel drivers patch&#xA;│&amp;nbsp;&amp;nbsp; ├── pip                              Python&#xA;│&amp;nbsp;&amp;nbsp; ├── rootfs                           Compressed userspaces&#xA;│&amp;nbsp;&amp;nbsp; ├── sources                          Kernel, u-boot and other sources&#xA;│&amp;nbsp;&amp;nbsp; ├── tools                            Additional tools like ORAS&#xA;│&amp;nbsp;&amp;nbsp; └── utility&#xA;├── config                               Packages repository configurations&#xA;│&amp;nbsp;&amp;nbsp; ├── targets.conf                     Board build target configuration&#xA;│&amp;nbsp;&amp;nbsp; ├── boards                           Board configurations&#xA;│&amp;nbsp;&amp;nbsp; ├── bootenv                          Initial boot loaders environments per family&#xA;│&amp;nbsp;&amp;nbsp; ├── bootscripts                      Initial Boot loaders scripts per family&#xA;│&amp;nbsp;&amp;nbsp; ├── cli                              CLI packages configurations per distribution&#xA;│&amp;nbsp;&amp;nbsp; ├── desktop                          Desktop packages configurations per distribution&#xA;│&amp;nbsp;&amp;nbsp; ├── distributions                    Distributions settings&#xA;│&amp;nbsp;&amp;nbsp; ├── kernel                           Kernel build configurations per family&#xA;│&amp;nbsp;&amp;nbsp; ├── sources                          Kernel and u-boot sources locations and scripts&#xA;│&amp;nbsp;&amp;nbsp; ├── templates                        User configuration templates which populate userpatches&#xA;│&amp;nbsp;&amp;nbsp; └── torrents                         External compiler and rootfs cache torrents&#xA;├── extensions                           Extend build system with specific functionality&#xA;├── lib                                  Main build framework libraries&#xA;│&amp;nbsp;&amp;nbsp; ├── functions&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── artifacts&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── bsp&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── cli&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── compilation&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── configuration&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── general&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── host&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── image&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── logging&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── main&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── rootfs&#xA;│&amp;nbsp;&amp;nbsp; └── tools&#xA;├── output                               Build artifact&#xA;│&amp;nbsp;&amp;nbsp; └── deb                              Deb packages&#xA;│&amp;nbsp;&amp;nbsp; └── images                           Bootable images - RAW or compressed&#xA;│&amp;nbsp;&amp;nbsp; └── debug                            Patch and build logs&#xA;│&amp;nbsp;&amp;nbsp; └── config                           Kernel configuration export location&#xA;│&amp;nbsp;&amp;nbsp; └── patch                            Created patches location&#xA;├── packages                             Support scripts, binary blobs, packages&#xA;│&amp;nbsp;&amp;nbsp; ├── blobs                            Wallpapers, various configs, closed source bootloaders&#xA;│&amp;nbsp;&amp;nbsp; ├── bsp-cli                          Automatically added to armbian-bsp-cli package&#xA;│&amp;nbsp;&amp;nbsp; ├── bsp-desktop                      Automatically added to armbian-bsp-desktopo package&#xA;│&amp;nbsp;&amp;nbsp; ├── bsp                              Scripts and configs overlay for rootfs&#xA;│&amp;nbsp;&amp;nbsp; └── extras-buildpkgs                 Optional compilation and packaging engine&#xA;├── patch                                Collection of patches&#xA;│&amp;nbsp;&amp;nbsp; ├── atf                              ARM trusted firmware&#xA;│&amp;nbsp;&amp;nbsp; ├── kernel                           Linux kernel patches&#xA;|   |&amp;nbsp;&amp;nbsp; └── family-branch                Per kernel family and branch&#xA;│&amp;nbsp;&amp;nbsp; ├── misc                             Linux kernel packaging patches&#xA;│&amp;nbsp;&amp;nbsp; └── u-boot                           Universal boot loader patches&#xA;|       ├── u-boot-board                 For specific board&#xA;|    &amp;nbsp;&amp;nbsp; └── u-boot-family                For entire kernel family&#xA;├── tools                                Tools for dealing with kernel patches and configs&#xA;└── userpatches                          User: configuration patching area&#xA;    ├── lib.config                       User: framework common config/override file&#xA;    ├── config-default.conf              User: default user config file&#xA;    ├── customize-image.sh               User: script will execute just before closing the image&#xA; &amp;nbsp;&amp;nbsp; ├── atf                              User: ARM trusted firmware&#xA; &amp;nbsp;&amp;nbsp; ├── kernel                           User: Linux kernel per kernel family&#xA; &amp;nbsp;&amp;nbsp; ├── misc                             User: various&#xA; &amp;nbsp;&amp;nbsp; └── u-boot                           User: universal boot loader patches&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;h3&gt;Want to help?&lt;/h3&gt; &#xA;&lt;p&gt;We always need those volunteering positions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/staffapplications/application/23-code-reviewer/&#34;&gt;Code reviewer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/staffapplications/application/9-build-framework-maintainer/&#34;&gt;Build framework maintainer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/staffapplications/application/19-test-automation-engineer/&#34;&gt;Test Automation Engineer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Just apply and follow!&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For commercial or prioritized assistance:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Book an hour of &lt;a href=&#34;https://calendly.com/armbian/consultation&#34;&gt;professional consultation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Consider becoming a &lt;a href=&#34;https://forum.armbian.com/subscriptions/&#34;&gt;project partner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://armbian.com/contact&#34;&gt;Contact us&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Free support:&lt;/p&gt; &#xA;&lt;p&gt;Find free support via &lt;a href=&#34;https://www.armbian.com/search&#34;&gt;general project search engine&lt;/a&gt;, &lt;a href=&#34;https://docs.armbian.com&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://forum.armbian.com/&#34;&gt;community forums&lt;/a&gt; or &lt;a href=&#34;https://docs.armbian.com/Community_IRC/&#34;&gt;IRC/Discord&lt;/a&gt;. Remember that our awesome community members mainly provide this in a &lt;strong&gt;best-effort&lt;/strong&gt; manner, so there are no guaranteed solutions.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com&#34;&gt;Forums&lt;/a&gt; for Participate in Armbian&lt;/li&gt; &#xA; &lt;li&gt;IRC: &lt;code&gt;#armbian&lt;/code&gt; on Libera.chat / oftc.net&lt;/li&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://discord.gg/armbian&#34;&gt;https://discord.gg/armbian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://twitter.com/armbian&#34;&gt;@armbian&lt;/a&gt; on 𝕏 (formerly known as Twitter), &lt;a href=&#34;https://fosstodon.org/@armbian&#34;&gt;Fosstodon&lt;/a&gt; or &lt;a href=&#34;https://www.linkedin.com/company/armbian&#34;&gt;LinkedIn&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bugs: &lt;a href=&#34;https://github.com/armbian/build/issues&#34;&gt;issues&lt;/a&gt; / &lt;a href=&#34;https://armbian.atlassian.net/jira/dashboards/10000&#34;&gt;JIRA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Office hours: &lt;a href=&#34;https://calendly.com/armbian/office-hours&#34;&gt;Wednesday, 12 midday, 18 afternoon, CET&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed to Armbian!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/armbian/build/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=armbian/build&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Also&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/build/graphs/contributors&#34;&gt;Current and past contributors&lt;/a&gt;, our families and friends.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/members/2-moderators/&#34;&gt;Support staff&lt;/a&gt; that keeps forums usable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://armbian.com/authors&#34;&gt;Friends and individuals&lt;/a&gt; who support us with resources and their time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/&#34;&gt;The Armbian Community&lt;/a&gt; helps with their ideas, reports and &lt;a href=&#34;https://www.armbian.com/donate&#34;&gt;donations&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Armbian Partners&lt;/h2&gt; &#xA;&lt;p&gt;Armbian&#39;s partnership program helps to support Armbian and the Armbian community! Please take a moment to familiarize yourself with our Partners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://armbian.com/partners&#34;&gt;Click here to visit our Partners page!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/subscriptions&#34;&gt;How can I become a Partner?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#armbian/build&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=armbian/build&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is published under the GPL-2.0 License license.&lt;/p&gt;</summary>
  </entry>
</feed>