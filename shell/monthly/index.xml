<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-01T01:54:01Z</updated>
  <subtitle>Monthly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WhatsApp/proxy</title>
    <updated>2024-11-01T01:54:01Z</updated>
    <id>tag:github.com,2024-11-01:/WhatsApp/proxy</id>
    <link href="https://github.com/WhatsApp/proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains the WhatsApp proxy implementation for users to host their own proxy infrastructure to connect to WhatsApp for chat (VoIP is not currently supported)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WhatsApp Chat Proxy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WhatsApp/proxy&#34;&gt;&lt;img alt=&#34;github&#34; src=&#34;https://img.shields.io/badge/github-WhatsApp/proxy-8da0cb?style=for-the-badge&amp;amp;labelColor=555555&amp;amp;logo=github&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WhatsApp/proxy/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/WhatsApp/proxy/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are unable to connect directly to WhatsApp, a proxy can be used as a gateway between you and our servers. To help yourself or others re-establish connection to WhatsApp, you can set up a proxy server.&lt;/p&gt; &#xA;&lt;p&gt;If you already have a proxy to use, you can connect it to WhatsApp by following the steps in this &lt;a href=&#34;https://faq.whatsapp.com/520504143274092&#34;&gt;article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently asked questions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;PLEASE READ THIS BEFORE OPENING AN ISSUE&lt;/strong&gt; We have an FAQ, which you can find here: &lt;a href=&#34;https://github.com/whatsapp/proxy/raw/main/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What you&#39;ll need&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt; (enable Docker on startup if your host system allows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker compose&lt;/a&gt; (optional)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Setting up your proxy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; There is now a pre-built image hosted in Meta&#39;s DockerHub repository. You no longer need to build the default image (if you don&#39;t want to customize it of course).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull facebook/whatsapp_proxy:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then skip down to &lt;strong&gt;Running the proxy&lt;/strong&gt; and substitute any tag of &lt;code&gt;whatsapp_proxy:1.0&lt;/code&gt; with &lt;code&gt;facebook/whatsapp_proxy:latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1. Clone the repository to your local machine&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/WhatsApp/proxy.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see a folder called &lt;code&gt;proxy&lt;/code&gt; created in the current directory.&lt;/p&gt; &#xA;&lt;h3&gt;2. &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Install Docker&lt;/a&gt; for your system&lt;/h3&gt; &#xA;&lt;p&gt;To confirm Docker is successfully installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;should display a line similar to &lt;code&gt;Docker version 20.10.21, build baeda1f&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2. (Optional) Install Docker compose&lt;/h3&gt; &#xA;&lt;p&gt;For Linux users, if your &lt;a href=&#34;https://docs.docker.com/desktop/install/linux-install/&#34;&gt;version of Docker&lt;/a&gt; doesn&#39;t come pre-installed with Docker compose, you can install a one-off version (For Linux).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download the pkg&#xA;sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/bin/docker-compose&#xA;# Enable execution of the script&#xA;sudo chmod +x /usr/bin/docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Build the proxy host container&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to the repo directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build the proxy host container with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build proxy/ -t whatsapp_proxy:1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see a message similar to &lt;code&gt;[+] Building 6.6s (18/18) FINISHED&lt;/code&gt;. The container will be compiled and tagged as &lt;code&gt;whatsapp_proxy:1.0&lt;/code&gt; for easy reference.&lt;/p&gt; &#xA;&lt;h2&gt;Running the proxy&lt;/h2&gt; &#xA;&lt;h3&gt;Manually execute the container&lt;/h3&gt; &#xA;&lt;p&gt;You can manually execute the Docker container with the following &lt;code&gt;docker&lt;/code&gt; command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it -p 80:80 -p 443:443 -p 5222:5222 -p 8080:8080 -p 8443:8443 -p 8222:8222 -p 8199:8199 -p 587:587 -p 7777:7777 whatsapp_proxy:1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see lines ending with &lt;code&gt;Certificate generation completed.&lt;/code&gt;. The HAProxy is running in the background and will continue to do so until you close this process.&lt;/p&gt; &#xA;&lt;h3&gt;Check your connection&lt;/h3&gt; &#xA;&lt;p&gt;To confirm HAProxy is running, visit &lt;code&gt;http://&amp;lt;host-ip&amp;gt;:8199&lt;/code&gt; where &lt;code&gt;&amp;lt;host-ip&amp;gt;&lt;/code&gt; is your &lt;strong&gt;public&lt;/strong&gt; IP address. You can also use this link to monitor proxy statistics.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If your public IP address is not accessible, you will need to enable port forwarding (for the ports above) for the router/gateway you are using. Since this operation is device-specific, we are not going to go into it in details in this doc.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you prefer OpenMetrics output you can use &lt;code&gt;http://&amp;lt;host-ip&amp;gt;:8199/metrics&lt;/code&gt; for monitoring HAProxy metrics.&lt;/p&gt; &#xA;&lt;h1&gt;Miscellanous&lt;/h1&gt; &#xA;&lt;h2&gt;An Overview of the WhatsApp Proxy Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Depending on the scenario in which you utilize your proxy, the proxy container exposes multiple ports. The basic ports may include:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;80: Standard web traffic (HTTP)&lt;/li&gt; &#xA; &lt;li&gt;443: Standard web traffic, encrypted (HTTPS)&lt;/li&gt; &#xA; &lt;li&gt;5222: Jabber protocol traffic (WhatsApp default)&lt;/li&gt; &#xA; &lt;li&gt;587 or 7777: *.whatsapp.net traffic including media (HTTPS)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;There are also ports configured which accept incoming &lt;a href=&#34;https://www.haproxy.com/blog/use-the-proxy-protocol-to-preserve-a-clients-ip-address/&#34;&gt;proxy headers&lt;/a&gt; (version 1 or 2) on connections. If you have a network load balancer you can preserve the client IP address if you want.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;8080: Standard web traffic (HTTP) with PROXY protocol expected&lt;/li&gt; &#xA; &lt;li&gt;8443: Standard web traffic, encrypted (HTTPS) with PROXY protocol expected&lt;/li&gt; &#xA; &lt;li&gt;8222: Jabber protocol traffic (WhatsApp default) with PROXY protocol expected&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Certificate generation for SSL encrypted ports&lt;/h2&gt; &#xA;&lt;p&gt;Ports 443 and 8443 are protected by a self-signed encryption certificate generated at container start time. There are some custom options should you wish to tweak the settings of the generated certificates&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SSL_DNS&lt;/code&gt; comma separate list of alternative hostnames, no default&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SSL_IP&lt;/code&gt; comma separate list of alternative IPs, no default&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;They can be set with commands like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build . --build-arg SSL_DNS=test.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;h3&gt;Automate the container lifecycle with Docker compose&lt;/h3&gt; &#xA;&lt;p&gt;Docker Compose is an automated tool to run multi-container deployments, but it also helps automate the command-line arguments necessary to run a single container. It is a YAML definition file that denotes all the settings to start up and run the container. It also has restart strategies in the event the container crashes or self-restarts. Docker Compose helps manage your container setup and necessary port forwards without user interaction. We recommend utilizing Docker Compose because you usually donâ€™t want to manually run the container outside of testing scenarios.&lt;/p&gt; &#xA;&lt;p&gt;We provide a sample &lt;a href=&#34;https://raw.githubusercontent.com/WhatsApp/proxy/main/proxy/ops/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file for you which defines a standard deployment of the proxy container.&lt;/p&gt; &#xA;&lt;p&gt;Once Docker compose is installed, you can test your specific configuration by running Docker compose interactively with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose -f /path/to/this/repo/docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will allow you to see the output from the build + container hosting process and check that everything is set up correctly.&lt;/p&gt; &#xA;&lt;p&gt;When you are ready to run the container as a service, do*:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose -f /path/to/this/repo/docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;*Note the &lt;code&gt;-d&lt;/code&gt; flag which means &#34;daemonize&#34; and run as a service.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To stop the container you can similarly do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Automate host reboots with Docker compose&lt;/h3&gt; &#xA;&lt;p&gt;Once you have Docker compose set up, you can also automate the deployment for host reboots by utilizing a &lt;code&gt;systemd&lt;/code&gt; service (if your hosting environment supports it).&lt;/p&gt; &#xA;&lt;p&gt;We provide a sample &lt;a href=&#34;https://raw.githubusercontent.com/WhatsApp/proxy/main/proxy/ops/docker_boot.service&#34;&gt;&lt;code&gt;docker_boot.service&lt;/code&gt;&lt;/a&gt; service definition for you which you should customize to your own environment.&lt;/p&gt; &#xA;&lt;p&gt;To install and setup the &lt;code&gt;systemd&lt;/code&gt; service*:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Copy the service definition to systemd folder&#xA;cp -v docker_boot.service /etc/systemd/system/&#xA;# Enable starting the service on startup&#xA;systemctl enable docker_boot.service&#xA;# Start the service (will docker compose up the container)&#xA;systemctl start docker_boot.service&#xA;# Check container status with&#xA;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;*Make sure to update the path to your specific &lt;code&gt;docker-compose.yml&lt;/code&gt; file in the service definition &lt;code&gt;docker_boot.service&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Kubernetes deployment&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to configure your proxy using Kubernetes, or run the Docker runtime through Kubernetes, please see our &lt;a href=&#34;https://raw.githubusercontent.com/WhatsApp/proxy/main/charts/README.md&#34;&gt;Helm chart README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read more about other type of deployments &lt;a href=&#34;https://raw.githubusercontent.com/WhatsApp/proxy/main/docs/deployments.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The authors of this code are Sean Lawlor (&lt;a href=&#34;https://github.com/slawlor&#34;&gt;@slawlor&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To learn more about contributing to this project, &lt;a href=&#34;https://github.com/whatsapp/proxy/raw/main/CONTRIBUTING.md&#34;&gt;see this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This project is licensed under &lt;a href=&#34;https://github.com/novifinancial/akd/raw/main/LICENSE-MIT&#34;&gt;MIT&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>d3/d3</title>
    <updated>2024-11-01T01:54:01Z</updated>
    <id>tag:github.com,2024-11-01:/d3/d3</id>
    <link href="https://github.com/d3/d3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bring data to life with SVG, Canvas and HTML. ðŸ“ŠðŸ“ˆðŸŽ‰&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://d3js.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/d3/d3/main/docs/public/logo.svg?sanitize=true&#34; width=&#34;256&#34; height=&#34;256&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a free, open-source JavaScript library for visualizing data. Its low-level approach built on web standards offers unparalleled flexibility in authoring dynamic, data-driven graphics. For more than a decade D3 has powered groundbreaking and award-winning visualizations, become a foundational building block of higher-level chart libraries, and fostered a vibrant community of data practitioners around the world.&lt;/p&gt; &#xA;&lt;a href=&#34;https://observablehq.observablehq.cloud/oss-analytics/@d3/d3&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads-dark.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Daily downloads of Observable Framework&#34; src=&#34;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;sub&gt;Daily downloads of D3 Â· &lt;a href=&#34;https://observablehq.observablehq.cloud/oss-analytics/&#34;&gt;oss-analytics&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://d3js.org&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://observablehq.com/@d3/gallery&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d3/d3/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://d3js.org/community&#34;&gt;Getting help&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mylinuxforwork/dotfiles</title>
    <updated>2024-11-01T01:54:01Z</updated>
    <id>tag:github.com,2024-11-01:/mylinuxforwork/dotfiles</id>
    <link href="https://github.com/mylinuxforwork/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The ML4W Dotfiles for Hyprland - An advanced and full-featured configuration for the dynamic tiling window manager Hyprland including an easy to use installation script for Arch based Linux distributions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ML4W Dotfiles for Hyprland&lt;/h1&gt; &#xA;&lt;p&gt;An advanced configuration of Hyprland for Arch Linux based distributions. This package includes an installation script to install and setup the required components.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/f1f6d331-c4b9-49c1-a69a-0ee01d5d8508&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;YouTube Video &lt;a href=&#34;https://youtu.be/6B4Kf30CWLg&#34;&gt;https://youtu.be/6B4Kf30CWLg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The installation should work on all Arch Linux based distributions. &lt;a href=&#34;hhttps://github.com/mylinuxforwork/dotfiles/wiki&#34;&gt;You can find more information here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PLEASE NOTE: Every Linux distribution, setup and personal configuration can be different. Therefore, I cannot guarantee that the ML4W Dotfiles will work everywhere. Installation at your own risk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Arco Linux users&lt;/strong&gt;: Please install hyprutils first with &lt;code&gt;yay -S extra/hyprutils&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please make sure that your system is up-to-date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -Syu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Main Release&lt;/h3&gt; &#xA;&lt;p&gt;You can use your preferred AUR helper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yay -S ml4w-hyprland&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the installation, you can start the setup with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ml4w-hyprland-setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rolling Release (Latest commits)&lt;/h3&gt; &#xA;&lt;p&gt;You can use your preferred AUR helper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yay -S ml4w-hyprland-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the installation, you can start the setup with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ml4w-hyprland-setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation (Wiki)&lt;/h2&gt; &#xA;&lt;p&gt;You can find the complete documentation of the ML4W Dotfiles in the Wiki. &lt;b&gt;&lt;a href=&#34;https://github.com/mylinuxforwork/dotfiles/wiki&#34;&gt;Open the Wiki here&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for using the ML4W Dotfiles on your system. If you find a problem or a bug, please &lt;a href=&#34;https://github.com/mylinuxforwork/dotfiles/issues&#34;&gt;report your issue on this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also visit the &lt;a href=&#34;https://discord.gg/c4fJK7Za3g&#34;&gt;ML4W Discord Server&lt;/a&gt; to start a discussion with other users.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/041375a8-8698-455d-865e-f818d5b69af8&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wallpaper repository&lt;/h2&gt; &#xA;&lt;p&gt;You can find my wallpaper collection in the repository &lt;a href=&#34;https://github.com/mylinuxforwork/wallpaper&#34;&gt;https://github.com/mylinuxforwork/wallpaper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;THANK YOU very much for all your support, contributions and ideas:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Diana Ward: &lt;a href=&#34;https://github.com/dianaw353&#34;&gt;https://github.com/dianaw353&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Don Williams: &lt;a href=&#34;https://github.com/dwilliam62&#34;&gt;https://github.com/dwilliam62&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Leo: &lt;a href=&#34;https://github.com/eljejer&#34;&gt;https://github.com/eljejer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Guido De Gobbis&lt;/li&gt; &#xA; &lt;li&gt;Teodor Orzechowski: &lt;a href=&#34;https://gitlab.com/sq6gtt&#34;&gt;https://gitlab.com/sq6gtt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jamie Deppeler: &lt;a href=&#34;https://gitlab.com/bknight2k&#34;&gt;https://gitlab.com/bknight2k&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Yingjie Wang: &lt;a href=&#34;https://gitlab.com/GaugeAndGravity&#34;&gt;https://gitlab.com/GaugeAndGravity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Daniel Gerber: &lt;a href=&#34;https://gitlab.com/dan.john.gerber&#34;&gt;https://gitlab.com/dan.john.gerber&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sarthak Siddhpura: &lt;a href=&#34;https://gitlab.com/Codesmith28&#34;&gt;https://gitlab.com/Codesmith28&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/muee&#34;&gt;https://gitlab.com/muee&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and many more...&lt;/p&gt; &#xA;&lt;p&gt;Thanks to all YouTube subscribers for all your great feedback.&lt;/p&gt; &#xA;&lt;h2&gt;Inspirations&lt;/h2&gt; &#xA;&lt;p&gt;The following projects have inspired me:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prasanthrangan/hyprdots&#34;&gt;https://github.com/prasanthrangan/hyprdots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sudo-harun/dotfiles&#34;&gt;https://github.com/sudo-harun/dotfiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dianaw353/hyprland-configuration-rootfs&#34;&gt;https://github.com/dianaw353/hyprland-configuration-rootfs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and many more...&lt;/p&gt;</summary>
  </entry>
</feed>