<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-01T02:11:57Z</updated>
  <subtitle>Monthly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dockur/windows</title>
    <updated>2024-03-01T02:11:57Z</updated>
    <id>tag:github.com,2024-03-01:/dockur/windows</id>
    <link href="https://github.com/dockur/windows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows in a Docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Windows&lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/dockur/windows&#34;&gt;&lt;img src=&#34;https://github.com/dockur/windows/raw/master/.github/logo.png&#34; title=&#34;Logo&#34; style=&#34;max-width:100%;&#34; width=&#34;128&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://github.com/dockur/windows/&#34;&gt;&lt;img src=&#34;https://github.com/dockur/windows/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/dockurr/windows/latest?arch=amd64&amp;amp;sort=semver&amp;amp;color=066da5&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/dockurr/windows/latest?color=066da5&amp;amp;label=size&#34; alt=&#34;Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dockurr/windows.svg?style=flat&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Windows in a Docker container.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ISO downloader&lt;/li&gt; &#xA; &lt;li&gt;KVM acceleration&lt;/li&gt; &#xA; &lt;li&gt;Web-based viewer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  windows:&#xA;    image: dockurr/windows&#xA;    container_name: windows&#xA;    devices:&#xA;      - /dev/kvm&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    ports:&#xA;      - 8006:8006&#xA;      - 3389:3389/tcp&#xA;      - 3389:3389/udp&#xA;    stop_grace_period: 2m&#xA;    restart: on-failure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm --name windows -p 8006:8006 --device=/dev/kvm --cap-add NET_ADMIN --stop-timeout 120 dockurr/windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I use it?&lt;/h3&gt; &lt;p&gt;Very simple! These are the steps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the container and connect to &lt;a href=&#34;http://localhost:8006&#34;&gt;port 8006&lt;/a&gt; using your web browser.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Sit back and relax while the magic happens, the whole installation will be performed fully automatic.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once you see the desktop, your Windows installation is ready for use.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Enjoy your brand new machine, and don&#39;t forget to star this repo!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I select the Windows version?&lt;/h3&gt; &lt;p&gt;By default, Windows 11 will be installed. But you can add the &lt;code&gt;VERSION&lt;/code&gt; environment variable to your compose file, in order to specify an alternative Windows version to be downloaded:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  VERSION: &#34;win11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Select from the values below:&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Value&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Transfer&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Size&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;win11&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 11 Pro&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;6.4 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;win10&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 10 Pro&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;5.8 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;ltsc10&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 10 LTSC&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;4.6 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;win81&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 8.1 Pro&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;4.2 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;win7&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 7 SP1&lt;/td&gt; &#xA;     &lt;td&gt;Bob Pony&lt;/td&gt; &#xA;     &lt;td&gt;Medium&lt;/td&gt; &#xA;     &lt;td&gt;3.0 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;vista&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows Vista SP2&lt;/td&gt; &#xA;     &lt;td&gt;Bob Pony&lt;/td&gt; &#xA;     &lt;td&gt;Medium&lt;/td&gt; &#xA;     &lt;td&gt;3.6 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;winxp&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows XP SP3&lt;/td&gt; &#xA;     &lt;td&gt;Bob Pony&lt;/td&gt; &#xA;     &lt;td&gt;Medium&lt;/td&gt; &#xA;     &lt;td&gt;0.6 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;2022&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows Server 2022&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;4.7 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;2019&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows Server 2019&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;5.3 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;2016&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows Server 2016&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;6.5 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;2012&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows Server 2012 R2&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;4.3 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;2008&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows Server 2008 R2&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;Fast&lt;/td&gt; &#xA;     &lt;td&gt;3.0 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;core11&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Tiny 11 Core&lt;/td&gt; &#xA;     &lt;td&gt;Archive.org&lt;/td&gt; &#xA;     &lt;td&gt;Slow&lt;/td&gt; &#xA;     &lt;td&gt;2.1 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;tiny11&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Tiny 11&lt;/td&gt; &#xA;     &lt;td&gt;Archive.org&lt;/td&gt; &#xA;     &lt;td&gt;Slow&lt;/td&gt; &#xA;     &lt;td&gt;3.8 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;tiny10&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Tiny 10&lt;/td&gt; &#xA;     &lt;td&gt;Archive.org&lt;/td&gt; &#xA;     &lt;td&gt;Slow&lt;/td&gt; &#xA;     &lt;td&gt;3.6 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;p&gt;To install ARM64 versions of Windows use &lt;a href=&#34;https://github.com/dockur/windows-arm/&#34;&gt;dockur/windows-arm&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I connect using RDP?&lt;/h3&gt; &lt;p&gt;The web-viewer is mainly ment to be used during installation, as its picture quality is low, and it has no audio or clipboard for example.&lt;/p&gt; &lt;p&gt;So for a better experience you can connect using any Microsoft Remote Desktop client to the IP of the container, using the username &lt;code&gt;docker&lt;/code&gt; and by leaving the password empty.&lt;/p&gt; &lt;p&gt;There is a good RDP client for &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.microsoft.rdc.androidx&#34;&gt;Android&lt;/a&gt; available from the Play Store. One for &lt;a href=&#34;https://apps.apple.com/nl/app/microsoft-remote-desktop/id714464092?l=en-GB&#34;&gt;iOS&lt;/a&gt; is in the Apple Store. For Linux you can use &lt;a href=&#34;http://www.rdesktop.org/&#34;&gt;rdesktop&lt;/a&gt; and for Windows you don&#39;t need to install anything as it is already ships as part of the operating system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I increase the amount of CPU or RAM?&lt;/h3&gt; &lt;p&gt;By default, 2 CPU cores and 4 GB of RAM are allocated to the container, as those are the minimum requirements of Windows 11.&lt;/p&gt; &lt;p&gt;To increase this, add the following environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  RAM_SIZE: &#34;8G&#34;&#xA;  CPU_CORES: &#34;4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the size of the disk?&lt;/h3&gt; &lt;p&gt;To expand the default size of 64 GB, add the &lt;code&gt;DISK_SIZE&lt;/code&gt; setting to your compose file and set it to your preferred capacity:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DISK_SIZE: &#34;256G&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can also be used to resize the existing disk to a larger capacity without any data loss.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the storage location?&lt;/h3&gt; &lt;p&gt;To change the storage location, include the following bind mount in your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;volumes:&#xA;  - /var/win:/storage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Replace the example path &lt;code&gt;/var/win&lt;/code&gt; with the desired storage folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I share files with the host?&lt;/h3&gt; &lt;p&gt;Open File Explorer and click on the Network section, you will see a computer called &lt;code&gt;host.lan&lt;/code&gt;, double-click it and it will show a folder called &lt;code&gt;Data&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Inside this folder you can access any files that are placed in &lt;code&gt;/storage/shared&lt;/code&gt; (see above) on the host.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I install a custom image?&lt;/h3&gt; &lt;p&gt;In order to download a custom ISO image, start a clean container with the URL of the ISO specified in the &lt;code&gt;VERSION&lt;/code&gt; environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  VERSION: &#34;https://example.com/win.iso&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Alternatively, you can also rename a local file to &lt;code&gt;custom.iso&lt;/code&gt; and place it in an empty &lt;code&gt;/storage&lt;/code&gt; folder to skip the download.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I perform a manual installation?&lt;/h3&gt; &lt;p&gt;It&#39;s best to use the automatic installation, as it optimizes various settings for use with this container.&lt;/p&gt; &lt;p&gt;However, if you insist on performing the installation manually, start a clean container with the following environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  MANUAL: &#34;Y&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then follow these steps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the container and connect to &lt;a href=&#34;http://localhost:8006&#34;&gt;port 8006&lt;/a&gt; of the container in your web browser. After the download is finished, you will see the Windows installation screen.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the installation by clicking &lt;code&gt;Install now&lt;/code&gt;. On the next screen, press &#39;OK&#39; when prompted to &lt;code&gt;Load driver&lt;/code&gt; and select the &lt;code&gt;VirtIO SCSI&lt;/code&gt; driver from the list that matches your Windows version. So for Windows 11, select &lt;code&gt;D:\amd64\w11\vioscsi.inf&lt;/code&gt; and click &#39;Next&#39;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Accept the license agreement and select your preferred Windows edition, like Home or Pro.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Choose &lt;code&gt;Custom: Install Windows only (advanced)&lt;/code&gt;, and click &lt;code&gt;Load driver&lt;/code&gt; on the next screen. Select &#39;Browse&#39; and navigate to the &lt;code&gt;D:\NetKVM\w11\amd64&lt;/code&gt; folder, and click &#39;OK&#39;. Select the &lt;code&gt;VirtIO Ethernet Adapter&lt;/code&gt; from the list and click &#39;Next&#39;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Select &lt;code&gt;Drive 0&lt;/code&gt; and click &#39;Next&#39;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Wait until Windows finishes copying files and completes the installation.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once you see the desktop, open File Explorer and navigate to the CD-ROM drive (E:). Double-click on &lt;code&gt;virtio-win-gt-x64.msi&lt;/code&gt; and proceed to install the VirtIO drivers.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Enjoy your brand new machine, and don&#39;t forget to star this repo!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I assign an individual IP address to the container?&lt;/h3&gt; &lt;p&gt;By default, the container uses bridge networking, which shares the IP address with the host.&lt;/p&gt; &lt;p&gt;If you want to assign an individual IP address to the container, you can create a macvlan network as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create -d macvlan \&#xA;    --subnet=192.168.0.0/24 \&#xA;    --gateway=192.168.0.1 \&#xA;    --ip-range=192.168.0.100/28 \&#xA;    -o parent=eth0 vlan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Be sure to modify these values to match your local subnet.&lt;/p&gt; &lt;p&gt;Once you have created the network, change your compose file to look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  windows:&#xA;    container_name: windows&#xA;    ..&amp;lt;snip&amp;gt;..&#xA;    networks:&#xA;      vlan:&#xA;        ipv4_address: 192.168.0.100&#xA;&#xA;networks:&#xA;  vlan:&#xA;    external: true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;An added benefit of this approach is that you won&#39;t have to perform any port mapping anymore, since all ports will be exposed by default.&lt;/p&gt; &lt;p&gt;Please note that this IP address won&#39;t be accessible from the Docker host due to the design of macvlan, which doesn&#39;t permit communication between the two. If this is a concern, you need to create a &lt;a href=&#34;https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/#host-access&#34;&gt;second macvlan&lt;/a&gt; as a workaround.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How can Windows acquire an IP address from my router?&lt;/h3&gt; &lt;p&gt;After configuring the container for macvlan (see above), it is possible for Windows to become part of your home network by requesting an IP from your router, just like a real PC.&lt;/p&gt; &lt;p&gt;To enable this mode, add the following lines to your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DHCP: &#34;Y&#34;&#xA;device_cgroup_rules:&#xA;  - &#39;c *:* rwm&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Please note that in this mode, the container and Windows will each have their own separate IPs. The container will keep the macvlan IP, and Windows will use the DHCP IP.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I pass-through a disk?&lt;/h3&gt; &lt;p&gt;It is possible to pass-through disk devices directly by adding them to your compose file in this way:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DEVICE: &#34;/dev/sda&#34;&#xA;  DEVICE2: &#34;/dev/sdb&#34;&#xA;devices:&#xA;  - /dev/sda&#xA;  - /dev/sdb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Use &lt;code&gt;DEVICE&lt;/code&gt; if you want it to become your main drive, and use &lt;code&gt;DEVICE2&lt;/code&gt; and higher to add them as secondary drives.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I pass-through a USB device?&lt;/h3&gt; &lt;p&gt;To pass-through a USB device, first lookup its vendor and product id via the &lt;code&gt;lsusb&lt;/code&gt; command, then add them to your compose file like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  ARGUMENTS: &#34;-device usb-host,vendorid=0x1234,productid=0x1234&#34;&#xA;devices:&#xA;  - /dev/bus/usb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I verify if my system supports KVM?&lt;/h3&gt; &lt;p&gt;To verify if your system supports KVM, run the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cpu-checker&#xA;sudo kvm-ok&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you receive an error from &lt;code&gt;kvm-ok&lt;/code&gt; indicating that KVM acceleration can&#39;t be used, check the virtualization settings in the BIOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is this project legal?&lt;/h3&gt; &lt;p&gt;Yes, this project contains only open-source code and does not distribute any copyrighted material. Any product keys found in the code are just generic placeholders provided by Microsoft for trial purposes. So under all applicable laws, this project would be considered legal.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stars&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/dockur/windows&#34;&gt;&lt;img src=&#34;https://starchart.cc/dockur/windows.svg?variant=adaptive&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The product names, logos, brands, and other trademarks referred to within this project are the property of their respective trademark holders. This project is not affiliated, sponsored, or endorsed by Microsoft Corporation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pystardust/ani-cli</title>
    <updated>2024-03-01T02:11:57Z</updated>
    <id>tag:github.com,2024-03-01:/pystardust/ani-cli</id>
    <link href="https://github.com/pystardust/ani-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cli tool to browse and play anime&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Linux&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-linux-brightgreen&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#MacOS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-mac-brightgreen&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Android&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-android-brightgreen&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Windows&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-windows-yellowgreen&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#iOS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-ios-yellow&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Steam-deck&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-steamdeck-yellow&#34;&gt; &lt;br&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Steam-deck&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://discord.gg/aqu7GpqVmR&#34;&gt;&lt;img src=&#34;https://invidget.switchblade.xyz/aqu7GpqVmR&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/matrix.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/.assets/matrix-logo.svg?sanitize=true&#34; height=&#34;110&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/port19x&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lead-port19x-lightblue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CoolnsX&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintainer-CoolnsX-blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/justchokingaround&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintainer-justchokingaround-blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Derisis13&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintainer-Derisis13-blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/71zenith&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintainer-71zenith-blue&#34;&gt;&lt;/a&gt; &lt;p&gt;&lt;/p&gt; &lt;/h1&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt; A cli to browse and watch anime (alone AND with friends). This tool scrapes the site &lt;a href=&#34;https://allanime.to/&#34;&gt;allanime.&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Showcase &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/44473782/224679247-0856e652-f187-4865-bbcf-5a8e5cf830da.webm&#34;&gt;ani-cli-demo.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#fixing-errors&#34;&gt;Fixing errors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#install&#34;&gt;Install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#tier-1-support-linux-mac-android&#34;&gt;Tier 1: Linux, Mac, Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#tier-2-support-windows-ios-steam-deck&#34;&gt;Tier 2: Windows, iOS, Steam Deck&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#installing-from-source&#34;&gt;From Source&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#uninstall&#34;&gt;Uninstall&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#dependencies-1&#34;&gt;Dependencies&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#ani-skip&#34;&gt;Ani-Skip&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#homies&#34;&gt;Homies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/disclaimer.md&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fixing errors&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter &lt;code&gt;No results found&lt;/code&gt; (and are sure the prompt was correct) or any breaking issue, then make sure you are on &lt;strong&gt;latest version&lt;/strong&gt; by typing &lt;code&gt;sudo ani-cli -U&lt;/code&gt; to update on Linux, Mac and Android. On Windows, run windows terminal preview and there type &lt;code&gt;ani-cli -U&lt;/code&gt;. If after this the issue persists then open an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/ani-cli/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/ani-cli.svg?minversion=4.0&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tier 1 Support: Linux, Mac, Android&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;These Platforms have rock solid support and are used by maintainers and large parts of the userbase.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;h4&gt;Native Packages&lt;/h4&gt; &#xA; &lt;p&gt;&lt;em&gt;Native packages have a more robust update cycle, but sometimes they are slow to upgrade. &lt;br&gt; If the one for your platform is up-to-date we suggest going with it.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;details&gt;&#xA;  &lt;summary&gt;Debian 13/unstable&lt;/summary&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt;&#xA;  &lt;summary&gt;Fedora&lt;/summary&gt; &#xA;  &lt;p&gt;To install mpv (and vlc) you need &lt;em&gt;RPM Fusion free&lt;/em&gt; enabled. Simply follow the instructions here: &lt;a href=&#34;https://rpmfusion.org/Configuration&#34;&gt;https://rpmfusion.org/Configuration&lt;/a&gt; To be able to install syncplay, you&#39;ll need to enable this copr repo (instructions included): &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/batmanfeynman/syncplay/&#34;&gt;https://copr.fedorainfracloud.org/coprs/batmanfeynman/syncplay/&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;p&gt;To install ani-cli:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf copr enable derisis13/ani-cli&#xA;sudo dnf install ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;&lt;em&gt;If for your distro uses rpm and you would like to see a native package, open an issue.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;/details&gt;&#xA; &lt;details&gt;&#xA;  &lt;summary&gt;Arch&lt;/summary&gt; &#xA;  &lt;p&gt;Build and install from the AUR:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yay -S ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;Also consider &lt;code&gt;ani-cli-git&lt;/code&gt;&lt;/p&gt; &#xA; &lt;/details&gt;&#xA; &lt;details&gt;&#xA;  &lt;summary&gt;Gentoo&lt;/summary&gt; &#xA;  &lt;p&gt;Build and install from the GURU:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo eselect repository enable guru&#xA;sudo emaint sync -r guru&#xA;sudo emerge -a ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;Consider using the 9999 ebuild.&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo emerge -a =app-misc/ani-cli-9999&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt;&#xA; &lt;details&gt;&#xA;  &lt;summary&gt;OpenSuse&lt;/summary&gt; &#xA;  &lt;p&gt;On Suse the provided MPV and VLC packages are missing features that are used by ani-cli. The only required is the &#34;Only Essentials&#34; repository which has versions for each Suse release. You can find instructions on this &lt;a href=&#34;https://en.opensuse.org/Additional_package_repositories#Packman&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;p&gt;To add the ani-cli copr repo, update then install ani-cli run (on both versions):&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zypper addrepo https://download.copr.fedorainfracloud.org/results/derisis13/ani-cli/opensuse-tumbleweed-x86_64/ ani-cli&#xA;zypper dup&#xA;zypper install ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;You&#39;ll get a warning about &lt;code&gt;Signature verification failed [4-Signatures public key is not available]&lt;/code&gt; but this can be ignored from the prompt.&lt;/p&gt; &#xA;  &lt;p&gt;&lt;em&gt;Note: package is noarch, so any architecture should work, even though the repo is labelled x86-64&lt;/em&gt;&lt;/p&gt; &#xA; &lt;/details&gt;&#xA;&lt;/details&gt;&#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Install dependencies &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#dependencies-1&#34;&gt;(See below)&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Install &lt;a href=&#34;https://docs.brew.sh/Installation&#34;&gt;HomeBrew&lt;/a&gt; if not installed.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone &#34;https://github.com/pystardust/ani-cli.git&#34; &amp;amp;&amp;amp; cd ./ani-cli&#xA;cp ./ani-cli &#34;$(brew --prefix)&#34;/bin&#xA;cd .. &amp;amp;&amp;amp; rm -rf ./ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;em&gt;To install (with Homebrew) the dependencies required on Mac OS, you can run:&lt;/em&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install curl grep aria2 ffmpeg git fzf yt-dlp &amp;amp;&amp;amp; \&#xA;brew install --cask iina&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;em&gt;Why iina and not mpv? Drop-in replacement for mpv for MacOS. Integrates well with OSX UI. Excellent support for M1. Open Source.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/details&gt;&#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Android&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Install termux &lt;a href=&#34;https://termux.com/&#34;&gt;(Guide)&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;Termux package&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg up -y&#xA;pkg install ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you&#39;re using Android 14 make sure to run this due to &lt;a href=&#34;https://github.com/pystardust/ani-cli/issues/1206&#34;&gt;#1206&lt;/a&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg install termux-am&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For players you can use the apk (playstore/fdroid) versions of mpv and vlc. Note that these cannot be checked from termux so a warning is generated when checking dependencies.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Tier 2 Support: Windows, iOS, Steam Deck&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;While officially supported, installation is more involved on these platforms and sometimes issues arise. &lt;br&gt; Reach out if you need help.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;First, you&#39;ll need windows terminal preview. &lt;a href=&#34;https://apps.microsoft.com/store/detail/windows-terminal-preview/9N8G5RFZ9XK3?hl=en-us&amp;amp;gl=US&#34;&gt;(Install)&lt;/a&gt; It comes preinstalled with Windows 11&lt;/p&gt; &#xA; &lt;p&gt;Then, install scoop. You will use this to install and update ani-cli from time to time. &lt;a href=&#34;https://scoop.sh/&#34;&gt;(Install)&lt;/a&gt; Follow &lt;strong&gt;quickstart&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scoop bucket add extras&#xA;scoop install ani-cli fzf mpv git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Consider also installing &lt;code&gt;yt-dlp&lt;/code&gt; and &lt;code&gt;aria2&lt;/code&gt; for downloading to work&lt;/p&gt; &#xA; &lt;h4&gt;Dependencies&lt;/h4&gt; &#xA; &lt;p&gt;All dependencies can be installed with scoop (from the extras bucket), however some users experienced that installed programs aren&#39;t always added to the path. If this happens installing from winget instead usually works.&lt;/p&gt; &#xA; &lt;p&gt;Note that curl can cause issues. ani-cli has been tested unsuccessfully with curl &lt;code&gt;7.83.1&lt;/code&gt; and successfully with &lt;code&gt;7.86.0&lt;/code&gt;. If you run into issues, try the scoop install or grab the newest curl you can find.&lt;/p&gt; &#xA;&lt;/details&gt;&#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Install iSH and VLC from the app store.&lt;/p&gt; &#xA; &lt;p&gt;Make sure apk is updated using &lt;code&gt;apk update; apk upgrade&lt;/code&gt; then run this:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apk add grep sed curl fzf git aria2 ncurses&#xA;apk add ffmpeg&#xA;git clone https://github.com/pystardust/ani-cli ~/.ani-cli&#xA;cp ~/.ani-cli/ani-cli /usr/local/bin/ani-cli&#xA;chmod +x /usr/local/bin/ani-cli&#xA;rm -rf ~/.ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;note that downloading is going to be very slow. This is an iSH issue, not an ani-cli issue.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Steam Deck&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;h4&gt;Copypaste script:&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Switch to Desktop mode (&lt;code&gt;STEAM&lt;/code&gt; Button &amp;gt; Power &amp;gt; Switch to Desktop)&lt;/li&gt; &#xA;  &lt;li&gt;Open &lt;code&gt;Konsole&lt;/code&gt; (Steam Deck Icon in bottom left corner &amp;gt; System &amp;gt; Konsole)&lt;/li&gt; &#xA;  &lt;li&gt;Copy the script, paste it in the CLI and press Enter(&#34;A&#34; button on Steam Deck)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[ ! -d ~/.local/bin ] &amp;amp;&amp;amp; mkdir ~/.local/bin &amp;amp;&amp;amp; echo &#34;export PATH=$HOME/.local/bin:\$PATH&#34; &amp;gt;&amp;gt; &#34;.$(echo $SHELL | sed -nE &#34;s|.*/(.*)\$|\1|p&#34;)rc&#34;&#xA;&#xA;git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf&#xA;~/.fzf/install&#xA;&#xA;mkdir ~/.aria2c&#xA;curl -o ~/.aria2c/aria2-1.36.0.tar.bz2 https://github.com/q3aql/aria2-static-builds/releases/download/v1.36.0/aria2-1.36.0-linux-gnu-64bit-build1.tar.bz2&#xA;tar xvf ~/.aria2c/aria2-1.36.0.tar.bz2 -C ~/.aria2c/&#xA;cp ~/.aria2c/aria2-1.36.0-linux-gnu-64bit-build1/aria2c ~/.local/bin/&#xA;chmod +x ~/.local/bin/aria2c&#xA;&#xA;curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp&#xA;chmod +x ~/.local/bin/yt-dlp&#xA;&#xA;mkdir ~/.patch&#xA;curl -o ~/.patch/patch.tar.zst https://mirror.sunred.org/archlinux/core/os/x86_64/patch-2.7.6-10-x86_64.pkg.tar.zst&#xA;tar xvf ~/.patch/patch.tar.zst -C ~/.patch/&#xA;cp ~/.patch/usr/bin/patch ~/.local/bin/&#xA;&#xA;git clone https://github.com/pystardust/ani-cli.git ~/.ani-cli&#xA;cp ~/.ani-cli/ani-cli ~/.local/bin/&#xA;&#xA;flatpak install io.mpv.Mpv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;press enter(&#34;A&#34; button on Steam Deck) on questions&lt;/p&gt; &#xA; &lt;h4&gt;Installation in steps:&lt;/h4&gt; &#xA; &lt;h5&gt;Install mpv (Flatpak version):&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flatpak install io.mpv.Mpv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;press enter(&#34;A&#34; button on Steam Deck) on questions&lt;/p&gt; &#xA; &lt;h5&gt;Install &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;:&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf&#xA;~/.fzf/install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;press enter(&#34;A&#34; button on Steam Deck) on questions&lt;/p&gt; &#xA; &lt;h5&gt;Make a ~/.local/bin folder if doesn&#39;t exist and add it to $PATH&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[ ! -d ~/.local/bin ] &amp;amp;&amp;amp; mkdir ~/.local/bin &amp;amp;&amp;amp; echo &#34;export PATH=$HOME/.local/bin:\$PATH&#34; &amp;gt;&amp;gt; &#34;.$(echo $SHELL | sed -nE &#34;s|.*/(.*)\$|\1|p&#34;)rc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;Install &lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt; (needed for download feature only):&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir ~/.aria2c&#xA;curl -o ~/.aria2c/aria2-1.36.0.tar.bz2 https://github.com/q3aql/aria2-static-builds/releases/download/v1.36.0/aria2-1.36.0-linux-gnu-64bit-build1.tar.bz2&#xA;tar xvf ~/.aria2c/aria2-1.36.0.tar.bz2 -C ~/.aria2c/&#xA;cp ~/.aria2c/aria2-1.36.0-linux-gnu-64bit-build1/aria2c ~/.local/bin/&#xA;chmod +x ~/.local/bin/aria2c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;Install &lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt; (needed for download feature only):&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp&#xA;chmod +x ~/.local/bin/yt-dlp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;Install &lt;a href=&#34;https://savannah.gnu.org/projects/patch/&#34;&gt;patch&lt;/a&gt; (needed for self-update feature [ -U ] ):&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir ~/.patch&#xA;curl -o ~/.patch/patch.tar.zst https://mirror.sunred.org/archlinux/core/os/x86_64/patch-2.7.6-10-x86_64.pkg.tar.zst&#xA;tar xvf ~/.patch/patch.tar.zst -C ~/.patch/&#xA;cp ~/.patch/usr/bin/patch ~/.local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;Install ani-cli:&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/pystardust/ani-cli.git ~/.ani-cli&#xA;cp ~/.ani-cli/ani-cli ~/.local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h5&gt;Optional: add desktop entry:&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;echo &#39;[Desktop Entry]&#xA;Encoding=UTF-8&#xA;Type=Application&#xA;Exec=bash -c &#34;source $HOME/.&#39;$(echo $SHELL | sed -nE &#34;s|.*/(.*)\$|\1|p&#34;)&#39;rc &amp;amp;&amp;amp; konsole --fullscreen -e ani-cli&#34;&#xA;Name=ani-cli&#39; &amp;gt; $HOME/.local/share/applications/ani-cli.desktop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The .desktop entry will allow to start ani-cli in Konsole directly from &#34;Gaming Mode&#34; In Steam Desktop app: &lt;code&gt;Add game&lt;/code&gt; &amp;gt; &lt;code&gt;Add a non-steam game&lt;/code&gt; &amp;gt; tick a box for &lt;code&gt;ani-cli&lt;/code&gt; &amp;gt; &lt;code&gt;Add selected programs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Installing from source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;This method works for any unix-like operating system and is a baseline for porting efforts.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install dependencies &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ani-cli/master/#dependencies-1&#34;&gt;(See below)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone &#34;https://github.com/pystardust/ani-cli.git&#34;&#xA;sudo cp ani-cli/ani-cli /usr/local/bin&#xA;rm -rf ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uninstall&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;apt:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt remove ani-cli&#xA;# to remove the repository from apt&#xA;sudo rm -f /etc/apt/trusted.gpg.d/ani-cli.asc /etc/apt/sources.list.d/ani-cli-debian.list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;dnf:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf remove ani-cli      # for ani-cli&#xA;# disable the repo in dnf&#xA;dnf copr disable derisis13/ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You might want to uninstall RPM fusion if you don&#39;t use it otherwise&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;zypper:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zypper remove ani-cli&#xA;zypper removerepo ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You might want to remove &lt;code&gt;packman-essentials&lt;/code&gt; if you don&#39;t need it otherwise&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;AUR:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yay -R ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Scoop:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scoop uninstall ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Linux:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo rm &#34;/usr/local/bin/ani-cli&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Mac:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm &#34;$(brew --prefix)/bin/ani-cli&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Windows: In &lt;strong&gt;Git Bash&lt;/strong&gt; run (as administrator):&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm &#34;/usr/bin/ani-cli&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Termux package&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg remove ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Android:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm &#34;$PREFIX/bin/ani-cli&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Steam Deck&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm &#34;~/.local/bin/ani-cli&#34;&#xA;rm -rf ~/.ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;optionally: remove dependencies:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm ~/.local/bin/aria2c&#xA;rm ~/.local/bin/yt-dlp&#xA;rm -rf &#34;~/.aria2&#34;&#xA;rm -rf &#34;~/.fzf&#34;&#xA;flatpak uninstall io.mpv.Mpv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code&gt;rm -rf /usr/local/bin/ani-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To uninstall other dependencies:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;apk del grep sed curl fzf git aria2 ffmpeg ncurses&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;grep&lt;/li&gt; &#xA; &lt;li&gt;sed&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;mpv - Video Player&lt;/li&gt; &#xA; &lt;li&gt;iina - mpv replacement for MacOS&lt;/li&gt; &#xA; &lt;li&gt;aria2c - Download manager&lt;/li&gt; &#xA; &lt;li&gt;yt-dlp - m3u8 Downloader&lt;/li&gt; &#xA; &lt;li&gt;ffmpeg - m3u8 Downloader (fallback)&lt;/li&gt; &#xA; &lt;li&gt;fzf - User interface&lt;/li&gt; &#xA; &lt;li&gt;ani-skip (optional)&lt;/li&gt; &#xA; &lt;li&gt;patch - Self updating&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ani-Skip&lt;/h3&gt; &#xA;&lt;p&gt;Ani-skip is a script to automatically skip anime opening sequences, making it easier to watch your favorite shows without having to manually skip the intros each time (from the original &lt;a href=&#34;https://github.com/synacktraa/ani-skip/tree/master#a-script-to-automatically-skip-anime-opening-sequences-making-it-easier-to-watch-your-favorite-shows-without-having-to-manually-skip-the-intros-each-time&#34;&gt;README&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;For install instructions visit &lt;a href=&#34;https://github.com/synacktraa/ani-skip&#34;&gt;ani-skip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ani-skip uses the external lua script function of mpv and as such – for now – only works with mpv.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; For now, ani-skip does &lt;strong&gt;not&lt;/strong&gt; seem to work under Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It may be, that ani-skip won&#39;t know the anime you&#39;re trying to watch. Try using the &lt;code&gt;--skip-title &amp;lt;title&amp;gt;&lt;/code&gt; command line argument. (It uses the &lt;a href=&#34;https://github.com/lexesjan/typescript-aniskip-extension/tree/main/src/api/aniskip-http-client&#34;&gt;aniskip API&lt;/a&gt; and you can contribute missing anime or ask for including it in the database on their &lt;a href=&#34;https://discord.com/invite/UqT55CbrbE&#34;&gt;discord server&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Homies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/justfoolingaround/animdl&#34;&gt;animdl&lt;/a&gt;: Ridiculously efficient, fast and light-weight (supports most sources: allanime, zoro ... (Python)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/justchokingaround/jerry&#34;&gt;jerry&lt;/a&gt;: stream anime with anilist tracking and syncing, with discord presence (Shell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sdaqo/anipy-cli&#34;&gt;anipy-cli&lt;/a&gt;: ani-cli rewritten in python (Python)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rebelonion/Dantotsu&#34;&gt;Dantotsu&lt;/a&gt;: Rebirth of Saikou, Best android app for anime/manga/LN with anilist integration (Kotlin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/metafates/mangal&#34;&gt;mangal&lt;/a&gt;: Download &amp;amp; read manga from any source with anilist sync (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/justchokingaround/lobster&#34;&gt;lobster&lt;/a&gt;: Watch movies and series from the terminal (Shell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mov-cli/mov-cli&#34;&gt;mov-cli&lt;/a&gt;: Watch movies/shows in the cli (Python/Shell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoolnsX/dra-cla&#34;&gt;dra-cla&lt;/a&gt;: ani-cli equivalent for korean dramas (Shell)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/port19x/redqu&#34;&gt;redqu&lt;/a&gt;: A media centric reddit client (Clojure)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TowarzyszFatCat/doccli&#34;&gt;doccli&lt;/a&gt;: A cli to watch anime with POLISH subtitles (Python)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>antonbabenko/pre-commit-terraform</title>
    <updated>2024-03-01T02:11:57Z</updated>
    <id>tag:github.com,2024-03-01:/antonbabenko/pre-commit-terraform</id>
    <link href="https://github.com/antonbabenko/pre-commit-terraform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pre-commit git hooks to take care of Terraform configurations 🇺🇦&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Collection of git hooks for Terraform to be used with &lt;a href=&#34;http://pre-commit.com/&#34;&gt;pre-commit framework&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/antonbabenko/pre-commit-terraform.svg?sanitize=true&#34; alt=&#34;Github tag&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/maintenance/yes/2024.svg?sanitize=true&#34; alt=&#34;maintenance status&#34;&gt; &lt;a href=&#34;https://www.codetriage.com/antonbabenko/pre-commit-terraform&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/antonbabenko/pre-commit-terraform/badges/users.svg?sanitize=true&#34; alt=&#34;Help Contribute to Open Source&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vshymanskyy/StandWithUkraine/raw/main/docs/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg?sanitize=true&#34; alt=&#34;SWUbanner&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute? Check &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues?q=label%3A%22good+first+issue%22+is%3Aopen+sort%3Aupdated-desc&#34;&gt;open issues&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/.github/CONTRIBUTING.md&#34;&gt;contributing notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.env0.com/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/env0.png&#34; alt=&#34;env0&#34; width=&#34;180&#34; height=&#34;44&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.env0.com/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;Automated provisioning of Terraform workflows and Infrastructure as Code.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.infracost.io/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/infracost.png&#34; alt=&#34;infracost&#34; width=&#34;200&#34; height=&#34;38&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.infracost.io/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;Cloud cost estimates for Terraform.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;pre-commit-terraform&lt;/code&gt; already or want to support its development and &lt;a href=&#34;https://github.com/antonbabenko/terraform-aws-devops&#34;&gt;many other open-source projects&lt;/a&gt;, please become a &lt;a href=&#34;https://github.com/sponsors/antonbabenko&#34;&gt;GitHub Sponsor&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#table-of-content&#34;&gt;Table of content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#how-to-install&#34;&gt;How to install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&#34;&gt;1. Install dependencies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#2-install-the-pre-commit-hook-globally&#34;&gt;2. Install the pre-commit hook globally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#3-add-configs-and-hooks&#34;&gt;3. Add configs and hooks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&#34;&gt;4. Run&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#available-hooks&#34;&gt;Available Hooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#hooks-usage-notes-and-examples&#34;&gt;Hooks usage notes and examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#known-limitations&#34;&gt;Known limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-usage-of-environment-variables-in---args&#34;&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-set-env-vars-inside-hook-at-runtime&#34;&gt;All hooks: Set env vars inside hook at runtime&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-disable-color-output&#34;&gt;All hooks: Disable color output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#many-hooks-parallelism&#34;&gt;Many hooks: Parallelism&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&#34;&gt;checkov (deprecated) and terraform_checkov&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&#34;&gt;infracost_breakdown&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;terraform_docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&#34;&gt;terraform_docs_replace (deprecated)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&#34;&gt;terraform_fmt&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;terraform_providers_lock&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&#34;&gt;terraform_tflint&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec-deprecated&#34;&gt;terraform_tfsec (deprecated)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&#34;&gt;terraform_trivy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&#34;&gt;terraform_wrapper_module_for_each&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&#34;&gt;terrascan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&#34;&gt;tfupdate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terragrunt_providers_lock&#34;&gt;terragrunt_providers_lock&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#docker-usage&#34;&gt;Docker Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#file-permissions&#34;&gt;File Permissions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#download-terraform-modules-from-private-github-repositories&#34;&gt;Download Terraform modules from private GitHub repositories&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#license&#34;&gt;License&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#additional-information-for-users-from-russia-and-belarus&#34;&gt;Additional information for users from Russia and Belarus&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;&lt;code&gt;pre-commit&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;&lt;code&gt;terraform&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;POSIX compatible shell, &lt;sub&gt;&lt;sup&gt;Internet connection (on first run), &lt;sub&gt;&lt;sup&gt;x86_64 or arm64 compatible operation system, &lt;sub&gt;&lt;sup&gt;Some hardware where this OS will run, &lt;sub&gt;&lt;sup&gt;Electricity for hardware and internet connection, &lt;sub&gt;&lt;sup&gt;Some basic physical laws, &lt;sub&gt;&lt;sup&gt;Hope that it all will work. &lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_checkov&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terraform-docs/terraform-docs&#34;&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_docs&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs/getting-started/install/&#34;&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terragrunt_validate&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tenable/terrascan&#34;&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terrascan&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;&lt;code&gt;TFLint&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tflint&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liamg/tfsec&#34;&gt;&lt;code&gt;TFSec&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tfsec&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;&lt;code&gt;Trivy&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_trivy&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/infracost/infracost&#34;&gt;&lt;code&gt;infracost&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_validate&lt;/code&gt; with &lt;code&gt;--retry-once-with-cleanup&lt;/code&gt; flag, and for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minamijoyo/tfupdate&#34;&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;tfupdate&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minamijoyo/hcledit&#34;&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;strong&gt;Pull docker image with all hooks&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker pull ghcr.io/antonbabenko/pre-commit-terraform:$TAG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;All available tags &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Build from scratch&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!IMPORTANT] To build image you need to have &lt;a href=&#34;https://docs.docker.com/build/install-buildx/&#34;&gt;&lt;code&gt;docker buildx&lt;/code&gt;&lt;/a&gt; enabled as default builder.&lt;br&gt; Otherwise - provide &lt;code&gt;TARGETOS&lt;/code&gt; and &lt;code&gt;TARGETARCH&lt;/code&gt; as additional &lt;code&gt;--build-arg&lt;/code&gt;&#39;s to &lt;code&gt;docker build&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;When hooks-related &lt;code&gt;--build-arg&lt;/code&gt;s are not specified, only the latest version of &lt;code&gt;pre-commit&lt;/code&gt; and &lt;code&gt;terraform&lt;/code&gt; will be installed.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:antonbabenko/pre-commit-terraform.git&#xA;cd pre-commit-terraform&#xA;# Install the latest versions of all the tools&#xA;docker build -t pre-commit-terraform --build-arg INSTALL_ALL=true .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To install a specific version of individual tools, define it using &lt;code&gt;--build-arg&lt;/code&gt; arguments or set it to &lt;code&gt;latest&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t pre-commit-terraform \&#xA;    --build-arg PRE_COMMIT_VERSION=latest \&#xA;    --build-arg TERRAFORM_VERSION=latest \&#xA;    --build-arg CHECKOV_VERSION=2.0.405 \&#xA;    --build-arg INFRACOST_VERSION=latest \&#xA;    --build-arg TERRAFORM_DOCS_VERSION=0.15.0 \&#xA;    --build-arg TERRAGRUNT_VERSION=latest \&#xA;    --build-arg TERRASCAN_VERSION=1.10.0 \&#xA;    --build-arg TFLINT_VERSION=0.31.0 \&#xA;    --build-arg TFSEC_VERSION=latest \&#xA;    --build-arg TRIVY_VERSION=latest \&#xA;    --build-arg TFUPDATE_VERSION=latest \&#xA;    --build-arg HCLEDIT_VERSION=latest \&#xA;    .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Set &lt;code&gt;-e PRE_COMMIT_COLOR=never&lt;/code&gt; to disable the color output in &lt;code&gt;pre-commit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install pre-commit terraform-docs tflint tfsec trivy checkov terrascan infracost tfupdate minamijoyo/hcledit/hcledit jq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Ubuntu 18.04&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install -y unzip software-properties-common&#xA;sudo add-apt-repository ppa:deadsnakes/ppa&#xA;sudo apt install -y python3.7 python3-pip&#xA;python3 -m pip install --upgrade pip&#xA;pip3 install --no-cache-dir pre-commit&#xA;python3.7 -m pip install -U checkov&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.zip&#34;)&#34; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &#34;https://.+?tfsec-linux-amd64&#34;)&#34; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 &#34;https://.+?/trivy_.+?_Linux-64bit.tar.gz&#34;)&#34; &amp;gt; trivy.tar.gz &amp;amp;&amp;amp; tar -xzf trivy.tar.gz trivy &amp;amp;&amp;amp; rm trivy.tar.gz &amp;amp;&amp;amp; sudo mv trivy /usr/bin&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &#34;https://.+?_Linux_x86_64.tar.gz&#34;)&#34; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init&#xA;sudo apt install -y jq &amp;amp;&amp;amp; \&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost auth login&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Ubuntu 20.04+&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install -y unzip software-properties-common python3 python3-pip python-is-python3&#xA;python3 -m pip install --upgrade pip&#xA;pip3 install --no-cache-dir pre-commit&#xA;pip3 install --no-cache-dir checkov&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz terraform-docs &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &#34;https://.+?_Linux_x86_64.tar.gz&#34;)&#34; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.zip&#34;)&#34; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &#34;https://.+?tfsec-linux-amd64&#34;)&#34; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 &#34;https://.+?/trivy_.+?_Linux-64bit.tar.gz&#34;)&#34; &amp;gt; trivy.tar.gz &amp;amp;&amp;amp; tar -xzf trivy.tar.gz trivy &amp;amp;&amp;amp; rm trivy.tar.gz &amp;amp;&amp;amp; sudo mv trivy /usr/bin&#xA;sudo apt install -y jq &amp;amp;&amp;amp; \&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost auth login&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Windows 10/11&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;We highly recommend using &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL/WSL2&lt;/a&gt; with Ubuntu and following the Ubuntu installation guide. Or use Docker.&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!IMPORTANT] We won&#39;t be able to help with issues that can&#39;t be reproduced in Linux/Mac. So, try to find a working solution and send PR before open an issue.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;Otherwise, you can follow &lt;a href=&#34;https://gist.github.com/etiennejeanneaurevolve/1ed387dc73c5d4cb53ab313049587d09&#34;&gt;this gist&lt;/a&gt;:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;&lt;code&gt;gitbash&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Install all prerequisites needed (see above)&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Ensure your PATH environment variable looks for &lt;code&gt;bash.exe&lt;/code&gt; in &lt;code&gt;C:\Program Files\Git\bin&lt;/code&gt; (the one present in &lt;code&gt;C:\Windows\System32\bash.exe&lt;/code&gt; does not work with &lt;code&gt;pre-commit.exe&lt;/code&gt;)&lt;/p&gt; &#xA; &lt;p&gt;For &lt;code&gt;checkov&lt;/code&gt;, you may need to also set your &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable with the path to your Python modules.&lt;br&gt; E.g. &lt;code&gt;C:\Users\USERNAME\AppData\Local\Programs\Python\Python39\Lib\site-packages&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;2. Install the pre-commit hook globally&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Not needed if you use the Docker image&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;DIR=~/.git-template&#xA;git config --global init.templateDir ${DIR}&#xA;pre-commit init-templatedir -t pre-commit ${DIR}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Add configs and hooks&lt;/h3&gt; &#xA;&lt;p&gt;Step into the repository you want to have the pre-commit hooks installed and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init&#xA;cat &amp;lt;&amp;lt;EOF &amp;gt; .pre-commit-config.yaml&#xA;repos:&#xA;- repo: https://github.com/antonbabenko/pre-commit-terraform&#xA;  rev: &amp;lt;VERSION&amp;gt; # Get the latest from: https://github.com/antonbabenko/pre-commit-terraform/releases&#xA;  hooks:&#xA;    - id: terraform_fmt&#xA;    - id: terraform_docs&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Run&lt;/h3&gt; &#xA;&lt;p&gt;Execute this command to run &lt;code&gt;pre-commit&lt;/code&gt; on all files in the repository (not only changed files):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, using Docker (&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&#34;&gt;available tags&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] This command uses your user id and group id for the docker container to use to access the local files. If the files are owned by another user, update the &lt;code&gt;USERID&lt;/code&gt; environment variable. See &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#file-permissions&#34;&gt;File Permissions section&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run -e &#34;USERID=$(id -u):$(id -g)&#34; -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute this command to list the versions of the tools in Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run --rm --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Hooks&lt;/h2&gt; &#xA;&lt;p&gt;There are several &lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt; hooks to keep Terraform configurations (both &lt;code&gt;*.tf&lt;/code&gt; and &lt;code&gt;*.tfvars&lt;/code&gt;) and Terragrunt configurations (&lt;code&gt;*.hcl&lt;/code&gt;) in a good shape:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hook name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Dependencies&lt;br&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&#34;&gt;Install instructions here&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt; and &lt;code&gt;terraform_checkov&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;checkov&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;br&gt;Ubuntu deps: &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;python3-pip&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check how much your infra costs with &lt;a href=&#34;https://github.com/infracost/infracost&#34;&gt;infracost&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;infracost&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;, &lt;a href=&#34;https://www.infracost.io/docs/#2-get-api-key&#34;&gt;Infracost API key&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt;. Recommended. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;code&gt;terraform-docs&lt;/code&gt; and pipes the output directly to README.md. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, see &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/248&#34;&gt;#248&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs_without_&lt;/code&gt;&lt;br&gt;&lt;code&gt;aggregate_type_defaults&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt; without aggregate type defaults. Hook notes same as for &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;terraform_docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reformat all Terraform configuration files to a canonical format. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Updates provider signatures in &lt;a href=&#34;https://www.terraform.io/docs/cli/commands/providers/lock.html&#34;&gt;dependency lock files&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_tflint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all Terraform configuration files with &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;TFLint&lt;/a&gt;. &lt;a href=&#34;https://github.com/terraform-linters/tflint/tree/master/docs/rules#rules&#34;&gt;Available TFLint rules&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&#34;&gt;Hook notes&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tflint&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aquasecurity/tfsec&#34;&gt;TFSec&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, use &lt;code&gt;terraform_trivy&lt;/code&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec-deprecated&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfsec&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_trivy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;Trivy&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;trivy&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all Terraform configuration files. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jq&lt;/code&gt;, only for &lt;code&gt;--retry-once-with-cleanup&lt;/code&gt; flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reformat all &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;) to a canonical format.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_validate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_providers_lock&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generates &lt;code&gt;.terraform.lock.hcl&lt;/code&gt; files using &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generates Terraform wrappers with &lt;code&gt;for_each&lt;/code&gt; in module. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tenable/terrascan&#34;&gt;terrascan&lt;/a&gt; Detect compliance and security violations. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/minamijoyo/tfupdate&#34;&gt;tfupdate&lt;/a&gt; Update version constraints of Terraform core, providers, and modules. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/raw/master/.pre-commit-hooks.yaml&#34;&gt;source file&lt;/a&gt; to know arguments used for each hook.&lt;/p&gt; &#xA;&lt;h2&gt;Hooks usage notes and examples&lt;/h2&gt; &#xA;&lt;h3&gt;Known limitations&lt;/h3&gt; &#xA;&lt;p&gt;Terraform operates on a per-dir basis, while &lt;code&gt;pre-commit&lt;/code&gt; framework only supports files and files that exist. This means if you only remove the TF-related file without any other changes in the same dir, checks will be skipped. Example and details &lt;a href=&#34;https://github.com/pre-commit/pre-commit/issues/3048&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can use environment variables for the &lt;code&gt;--args&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] You &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;${ENV_VAR}&lt;/code&gt; definition, &lt;code&gt;$ENV_VAR&lt;/code&gt; will not expand.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Config example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;  - --args=--config=${CONFIG_NAME}.${CONFIG_EXT}&#xA;  - --args=--module&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If for config above set up &lt;code&gt;export CONFIG_NAME=.tflint; export CONFIG_EXT=hcl&lt;/code&gt; before &lt;code&gt;pre-commit run&lt;/code&gt;, args will be expanded to &lt;code&gt;--config=.tflint.hcl --module&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;All hooks: Set env vars inside hook at runtime&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can specify environment variables that will be passed to the hook at runtime.&lt;/p&gt; &#xA;&lt;p&gt;Config example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --env-vars=AWS_DEFAULT_REGION=&#34;us-west-2&#34;&#xA;    - --env-vars=AWS_ACCESS_KEY_ID=&#34;anaccesskey&#34;&#xA;    - --env-vars=AWS_SECRET_ACCESS_KEY=&#34;asecretkey&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;All hooks: Disable color output&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To disable color output for all hooks, set &lt;code&gt;PRE_COMMIT_COLOR=never&lt;/code&gt; var. Eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PRE_COMMIT_COLOR=never pre-commit run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Many hooks: Parallelism&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt; and hooks which can&#39;t be paralleled this way: &lt;code&gt;infracost_breakdown&lt;/code&gt;, &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt;.&lt;br&gt; Also, there&#39;s a chance that parallelism have no effect on &lt;code&gt;terragrunt_fmt&lt;/code&gt; and &lt;code&gt;terragrunt_validate&lt;/code&gt; hooks&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;By default, parallelism is set to &lt;code&gt;number of logical CPUs - 1&lt;/code&gt;.&lt;br&gt; If you&#39;d like to disable parallelism, set it to &lt;code&gt;1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terragrunt_validate&#xA;  args:&#xA;    - --hook-config=--parallelism-limit=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the same way you can set it to any positive integer.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to set parallelism value relative to number of CPU logical cores - provide valid Bash arithmetic expression and use &lt;code&gt;CPU&lt;/code&gt; as a reference to the number of CPU logical cores&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_providers_lock&#xA;  args:&#xA;    - --hook-config=--parallelism-limit=CPU*4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;details&gt;&#xA;  &lt;summary&gt;Info useful for parallelism fine-tunning&lt;/summary&gt; &#xA;  &lt;br&gt; Tests below were run on repo with 45 Terraform dirs on laptop with 16 CPUs, SSD and 1Gbit/s network. Laptop was slightly used in the process. &#xA;  &lt;p&gt;Observed results may vary greatly depending on your repo structure, machine characteristics and their usage.&lt;/p&gt; &#xA;  &lt;p&gt;If during fine-tuning you&#39;ll find that your results are very different from provided below and you think that this data could help someone else - feel free to send PR.&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Hook&lt;/th&gt; &#xA;     &lt;th&gt;Most used resource&lt;/th&gt; &#xA;     &lt;th&gt;Comparison of optimization results / Notes&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_checkov&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_fmt&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_providers_lock (3 platforms,&lt;br&gt;&lt;code&gt;--mode=always-regenerate-lockfile&lt;/code&gt;)&lt;/td&gt; &#xA;     &lt;td&gt;Network &amp;amp; Disk heavy&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 3m 39s; &lt;code&gt;CPU*2&lt;/code&gt; - 3m 19s; &lt;code&gt;CPU*4&lt;/code&gt; - 2m 56s&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_tflint&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_tfsec&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_trivy&lt;/td&gt; &#xA;     &lt;td&gt;CPU moderate&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 32s; &lt;code&gt;CPU*2&lt;/code&gt; - 30s; &lt;code&gt;CPU*4&lt;/code&gt; - 31s&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_validate (t validate only)&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;-&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terraform_validate (t init + t validate)&lt;/td&gt; &#xA;     &lt;td&gt;Network &amp;amp; Disk heavy, CPU moderate&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 1m 30s; &lt;code&gt;CPU*2&lt;/code&gt; - 1m 25s; &lt;code&gt;CPU*4&lt;/code&gt; - 1m 41s&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terragrunt_fmt&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;N/A? need more info from TG users&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terragrunt_validate&lt;/td&gt; &#xA;     &lt;td&gt;CPU heavy&lt;/td&gt; &#xA;     &lt;td&gt;N/A? need more info from TG users&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;terrascan&lt;/td&gt; &#xA;     &lt;td&gt;CPU moderate-heavy&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;defaults (CPU-1)&lt;/code&gt; - 8s; &lt;code&gt;CPU*2&lt;/code&gt; - 6s&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;tfupdate&lt;/td&gt; &#xA;     &lt;td&gt;Disk/Network?&lt;/td&gt; &#xA;     &lt;td&gt;too quick in any settings. More info needed&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;args:&#xA;  - --hook-config=--parallelism-ci-cpu-cores=N&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t see code above in your &lt;code&gt;pre-commit-config.yaml&lt;/code&gt; or logs - you don&#39;t need it.&lt;br&gt; &lt;code&gt;--parallelism-ci-cpu-cores&lt;/code&gt; used only in edge cases and is ignored in other situations. Check out its usage in &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/hooks/_common.sh&#34;&gt;hooks/_common.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;checkov (deprecated) and terraform_checkov&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;checkov&lt;/code&gt; hook is deprecated, please use &lt;code&gt;terraform_checkov&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;terraform_checkov&lt;/code&gt; runs recursively during &lt;code&gt;-d .&lt;/code&gt; usage. That means, for example, if you change &lt;code&gt;.tf&lt;/code&gt; file in repo root, all existing &lt;code&gt;.tf&lt;/code&gt; files in the repo will be checked.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You can specify custom arguments. E.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_checkov&#xA;  args:&#xA;    - --args=--quiet&#xA;    - --args=--skip-check CKV2_AWS_8&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Check all available arguments &lt;a href=&#34;https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For deprecated hook you need to specify each argument separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: checkov&#xA;  args: [&#xA;    &#34;-d&#34;, &#34;.&#34;,&#xA;    &#34;--skip-check&#34;, &#34;CKV2_AWS_8&#34;,&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;terraform_checkov&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_checkov&lt;/code&gt; hooks with the Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_checkov&#xA;  args:&#xA;    - --args=--config-file __GIT_WORKING_DIR__/.checkov.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;infracost_breakdown&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; executes &lt;code&gt;infracost breakdown&lt;/code&gt; command and compare the estimated costs with those specified in the hook-config. &lt;code&gt;infracost breakdown&lt;/code&gt; parses Terraform HCL code, and calls Infracost Cloud Pricing API (remote version or &lt;a href=&#34;https://www.infracost.io/docs/cloud_pricing_api/self_hosted&#34;&gt;self-hosted version&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Unlike most other hooks, this hook triggers once if there are any changed files in the repository.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; supports all &lt;code&gt;infracost breakdown&lt;/code&gt; arguments (run &lt;code&gt;infracost breakdown --help&lt;/code&gt; to see them). The following example only shows costs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;  verbose: true # Always show costs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Output&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Running in &#34;env/dev&#34;&#xA;&#xA;Summary: {&#xA;&#34;unsupportedResourceCounts&#34;: {&#xA;    &#34;aws_sns_topic_subscription&#34;: 1&#xA;  }&#xA;}&#xA;&#xA;Total Monthly Cost:        86.83 USD&#xA;Total Monthly Cost (diff): 86.83 USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note that spaces are not allowed in &lt;code&gt;--args&lt;/code&gt;, so you need to split it, like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;    - --args=--terraform-var-file=&#34;terraform.tfvars&#34;&#xA;    - --args=--terraform-var-file=&#34;../terraform.tfvars&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optionally) Define &lt;code&gt;cost constraints&lt;/code&gt; the hook should evaluate successfully in order to pass:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 0.1&#39;&#xA;    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 1&#39;&#xA;    - --hook-config=&#39;.projects[].diff.totalMonthlyCost|tonumber != 10000&#39;&#xA;    - --hook-config=&#39;.currency == &#34;USD&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Output&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Running in &#34;env/dev&#34;&#xA;Passed: .totalHourlyCost|tonumber &amp;gt; 0.1         0.11894520547945205 &amp;gt;  0.1&#xA;Failed: .totalHourlyCost|tonumber &amp;gt; 1           0.11894520547945205 &amp;gt;  1&#xA;Passed: .projects[].diff.totalMonthlyCost|tonumber !=10000              86.83 != 10000&#xA;Passed: .currency == &#34;USD&#34;              &#34;USD&#34; == &#34;USD&#34;&#xA;&#xA;Summary: {&#xA;&#34;unsupportedResourceCounts&#34;: {&#xA;    &#34;aws_sns_topic_subscription&#34;: 1&#xA;  }&#xA;}&#xA;&#xA;Total Monthly Cost:        86.83 USD&#xA;Total Monthly Cost (diff): 86.83 USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only one path per one hook (&lt;code&gt;- id: infracost_breakdown&lt;/code&gt;) is allowed.&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;verbose: true&lt;/code&gt; to see cost even when the checks are passed.&lt;/li&gt; &#xA;   &lt;li&gt;Hook uses &lt;code&gt;jq&lt;/code&gt; to process the cost estimation report returned by &lt;code&gt;infracost breakdown&lt;/code&gt; command&lt;/li&gt; &#xA;   &lt;li&gt;Expressions defined as &lt;code&gt;--hook-config&lt;/code&gt; argument should be in a jq-compatible format (e.g. &lt;code&gt;.totalHourlyCost&lt;/code&gt;, &lt;code&gt;.totalMonthlyCost&lt;/code&gt;) To study json output produced by &lt;code&gt;infracost&lt;/code&gt;, run the command &lt;code&gt;infracost breakdown -p PATH_TO_TF_DIR --format json&lt;/code&gt;, and explore it on &lt;a href=&#34;https://jqplay.org/&#34;&gt;jqplay.org&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Supported comparison operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Most useful paths and checks: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;.totalHourlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalHourlyCost&lt;/code&gt;) - show total hourly infra cost&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.totalMonthlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalMonthlyCost&lt;/code&gt;) - show total monthly infra cost&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.projects[].diff.totalHourlyCost&lt;/code&gt; - show the difference in hourly cost for the existing infra and tf plan&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.projects[].diff.totalMonthlyCost&lt;/code&gt; - show the difference in monthly cost for the existing infra and tf plan&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.diffTotalHourlyCost&lt;/code&gt; (for Infracost version 0.9.12 or newer) or &lt;code&gt;[.projects[].diff.totalMonthlyCost | select (.!=null) | tonumber] | add&lt;/code&gt; (for Infracost older than 0.9.12)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker usage&lt;/strong&gt;. In &lt;code&gt;docker build&lt;/code&gt; or &lt;code&gt;docker run&lt;/code&gt; command:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You need to provide &lt;a href=&#34;https://www.infracost.io/docs/integrations/environment_variables/#infracost_api_key&#34;&gt;Infracost API key&lt;/a&gt; via &lt;code&gt;-e INFRACOST_API_KEY=&amp;lt;your token&amp;gt;&lt;/code&gt;. By default, it is saved in &lt;code&gt;~/.config/infracost/credentials.yml&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;-e INFRACOST_SKIP_UPDATE_CHECK=true&lt;/code&gt; to &lt;a href=&#34;https://www.infracost.io/docs/integrations/environment_variables/#infracost_skip_update_check&#34;&gt;skip the Infracost update check&lt;/a&gt; if you use this hook as part of your CI/CD pipeline.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_docs&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt; will insert/update documentation generated by &lt;a href=&#34;https://github.com/terraform-docs/terraform-docs&#34;&gt;terraform-docs&lt;/a&gt; framed by markers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;&amp;lt;!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --&amp;gt;&#xA;&#xA;&amp;lt;!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if they are present in &lt;code&gt;README.md&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is possible to pass additional arguments to shell scripts when using &lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is possible to automatically:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;create a documentation file&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;extend existing documentation file by appending markers to the end of the file (see item 1 above)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;use different filename for the documentation (default is &lt;code&gt;README.md&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;use the same insertion markers as &lt;code&gt;terraform-docs&lt;/code&gt; by default. It will be default in &lt;code&gt;v2.0&lt;/code&gt;.&lt;br&gt; To migrate to &lt;code&gt;terraform-docs&lt;/code&gt; insertion markers, run in repo root:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;grep -rl &#39;BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK&#39; . | xargs sed -i &#39;s/BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK/BEGIN_TF_DOCS/g&#39;&#xA;grep -rl &#39;END OF PRE-COMMIT-TERRAFORM DOCS HOOK&#39; . | xargs sed -i &#39;s/END OF PRE-COMMIT-TERRAFORM DOCS HOOK/END_TF_DOCS/g&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - --hook-config=--path-to-file=README.md        # Valid UNIX path. I.e. ../TFDOC.md or docs/README.md etc.&#xA;    - --hook-config=--add-to-existing-file=true     # Boolean. true or false&#xA;    - --hook-config=--create-file-if-not-exist=true # Boolean. true or false&#xA;    - --hook-config=--use-standard-markers=true     # Boolean. Defaults in v1.x to false. Set to true for compatibility with terraform-docs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can provide &lt;a href=&#34;https://terraform-docs.io/user-guide/configuration/&#34;&gt;any configuration available in &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; as an argument to &lt;code&gt;terraform_doc&lt;/code&gt; hook, for example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - --args=--config=.terraform-docs.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; Avoid use &lt;code&gt;recursive.enabled: true&lt;/code&gt; in config file, that can cause unexpected behavior.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you need some exotic settings, it can be done too. I.e. this one generates HCL files:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - tfvars hcl --output-file terraform.tfvars.model .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_docs_replace (deprecated)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. Will be merged in &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt; replaces the entire &lt;code&gt;README.md&lt;/code&gt; rather than doing string replacement between markers. Put your additional documentation at the top of your &lt;code&gt;main.tf&lt;/code&gt; for it to be pulled in.&lt;/p&gt; &#xA;&lt;p&gt;To replicate functionality in &lt;code&gt;terraform_docs&lt;/code&gt; hook:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.terraform-docs.yml&lt;/code&gt; in the repo root with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;formatter: &#34;markdown&#34;&#xA;&#xA;output:&#xA;file: &#34;README.md&#34;&#xA;mode: replace&#xA;template: |-&#xA;    {{/** End of file fixer */}}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace &lt;code&gt;terraform_docs_replace&lt;/code&gt; hook config in &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;args:&#xA;    - --args=--config=.terraform-docs.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_fmt&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_fmt&lt;/code&gt; supports custom arguments so you can pass &lt;a href=&#34;https://www.terraform.io/docs/cli/commands/fmt.html#usage&#34;&gt;supported flags&lt;/a&gt;. Eg:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_fmt&#xA;   args:&#xA;     - --args=-no-color&#xA;     - --args=-diff&#xA;     - --args=-write=false&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_providers_lock&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The hook requires Terraform 0.14 or later.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The hook can invoke &lt;code&gt;terraform providers lock&lt;/code&gt; that can be really slow and requires fetching metadata from remote Terraform registries - not all of that metadata is currently being cached by Terraform.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;details&gt;&#xA;  &lt;summary&gt;Read this if you used this hook before v1.80.0 | Planned breaking changes in v2.0&lt;/summary&gt; &#xA;  &lt;br&gt; We introduced `--mode` flag for this hook. If you&#39;d like to continue using this hook as before, please: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Specify &lt;code&gt;--hook-config=--mode=always-regenerate-lockfile&lt;/code&gt; in &lt;code&gt;args:&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Before &lt;code&gt;terraform_providers_lock&lt;/code&gt;, add &lt;code&gt;terraform_validate&lt;/code&gt; hook with &lt;code&gt;--hook-config=--retry-once-with-cleanup=true&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move &lt;code&gt;--tf-init-args=&lt;/code&gt; to &lt;code&gt;terraform_validate&lt;/code&gt; hook&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;p&gt;In the end, you should get config like this:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true&#xA;    # - --tf-init-args=-upgrade&#xA;&#xA;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=always-regenerate-lockfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;Why? When v2.x will be introduced - the default mode will be changed, probably, to &lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;p&gt;You can check available modes for hook below.&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The hook can work in a few different modes: &lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; with and without &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate hook&lt;/a&gt; and &lt;code&gt;always-regenerate-lockfile&lt;/code&gt; - only with terraform_validate hook.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; without terraform_validate - only checks that lockfile has all required SHAs for all providers already added to lockfile.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=only-check-is-current-lockfile-cross-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; with &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate hook&lt;/a&gt; - make up-to-date lockfile by adding/removing providers and only then check that lockfile has all required SHAs.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;br&gt; Next &lt;code&gt;terraform_validate&lt;/code&gt; flag requires additional dependency to be installed: &lt;code&gt;jq&lt;/code&gt;. Also, it could run another slow and time consuming command - &lt;code&gt;terraform init&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code&gt; ```yaml&#xA; - id: terraform_validate&#xA;   args:&#xA;     - --hook-config=--retry-once-with-cleanup=true&#xA;&#xA; - id: terraform_providers_lock&#xA;   args:&#xA;   - --hook-config=--mode=only-check-is-current-lockfile-cross-platform&#xA; ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;always-regenerate-lockfile&lt;/code&gt; only with &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate hook&lt;/a&gt; - regenerate lockfile from scratch. Can be useful for upgrading providers in lockfile to latest versions&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true&#xA;    - --tf-init-args=-upgrade&#xA;&#xA;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=always-regenerate-lockfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; supports custom arguments:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_providers_lock&#xA;   args:&#xA;      - --args=-platform=windows_amd64&#xA;      - --args=-platform=darwin_amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&#xA;function rm_terraform {&#xA;    find . \( -iname &#34;.terraform*&#34; ! -iname &#34;.terraform-docs*&#34; \) -print0 | xargs -0 rm -r&#xA;}&#xA;&#34; &amp;gt;&amp;gt;~/.bashrc&#xA;&#xA;# Reload shell and use `rm_terraform` command in the repo root&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; hook will try to reinitialize directories before running the &lt;code&gt;terraform providers lock&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; support passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; DEPRECATION NOTICE: This is available only in &lt;code&gt;no-mode&lt;/code&gt; mode, which will be removed in v2.0. Please provide this keys to &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/a&gt; hook, which, to take effect, should be called before &lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_providers_lock&#xA;  args:&#xA;    - --tf-init-args=-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_tflint&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tflint&lt;/code&gt; supports custom arguments so you can enable module inspection, enable / disable rules, etc.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;    - --args=--module&#xA;    - --args=--enable-rule=terraform_documented_variables&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tflint&lt;/code&gt; in all of them and share a single config file, it is impractical to hard-code the path to the &lt;code&gt;.tflint.hcl&lt;/code&gt; file. The solution is to use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder which will be replaced by &lt;code&gt;terraform_tflint&lt;/code&gt; hooks with the Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;    - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;By default, pre-commit-terraform performs directory switching into the terraform modules for you. If you want to delgate the directory changing to the binary - this will allow tflint to determine the full paths for error/warning messages, rather than just module relative paths. &lt;em&gt;Note: this requires &lt;code&gt;tflint&amp;gt;=0.44.0&lt;/code&gt;.&lt;/em&gt; For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;      args:&#xA;        - --hook-config=--delegate-chdir&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_tfsec (deprecated)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. &lt;a href=&#34;https://github.com/aquasecurity/tfsec/discussions/1994&#34;&gt;tfsec was replaced by trivy&lt;/a&gt;, so please use &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&#34;&gt;&lt;code&gt;terraform_trivy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&#34;https://pre-commit.com/#config-files&#34;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  files: ^prd-infra/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;tfsec&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&#34;https://github.com/aquasecurity/tfsec#ignoring-warnings&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;resource &#34;aws_security_group_rule&#34; &#34;my-rule&#34; {&#xA;    type = &#34;ingress&#34;&#xA;    cidr_blocks = [&#34;0.0.0.0/0&#34;] #tfsec:ignore:AWS006&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--no-color&lt;/code&gt; or &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;-e&lt;/code&gt; (exclude checks) flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_tfsec&#xA;   args:&#xA;     - &amp;gt;&#xA;       --args=--format json&#xA;       --no-color&#xA;       -e aws-s3-enable-bucket-logging,aws-s3-specify-public-access-block&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tfsec&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_tfsec&lt;/code&gt; hooks with Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  args:&#xA;    - --args=--config-file=__GIT_WORKING_DIR__/.tfsec.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Otherwise, will be used files that located in sub-folders:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  args:&#xA;    - --args=--config-file=.tfsec.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_trivy&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_trivy&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&#34;https://pre-commit.com/#config-files&#34;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_trivy&#xA;  files: ^prd-infra/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;trivy&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&#34;https://aquasecurity.github.io/trivy/latest/docs/configuration/filtering/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;#trivy:ignore:AVD-AWS-0107&#xA;#trivy:ignore:AVD-AWS-0124&#xA;resource &#34;aws_security_group_rule&#34; &#34;my-rule&#34; {&#xA;    type = &#34;ingress&#34;&#xA;    cidr_blocks = [&#34;0.0.0.0/0&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_trivy&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;--skip-dirs&lt;/code&gt; (exclude directories) and other flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_trivy&#xA;    args:&#xA;      - --args=--format=json&#xA;      - --args=--skip-dirs=&#34;**/.terraform&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_validate&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; supports custom arguments so you can pass supported &lt;code&gt;-no-color&lt;/code&gt; or &lt;code&gt;-json&lt;/code&gt; flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_validate&#xA;   args:&#xA;     - --args=-json&#xA;     - --args=-no-color&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; also supports passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --tf-init-args=-upgrade&#xA;    - --tf-init-args=-lockfile=readonly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can delete broken &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true     # Boolean. true or false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;br&gt; The flag requires additional dependency to be installed: &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt; Reinit can be very slow and require downloading data from remote Terraform registries, and not all of that downloaded data or meta-data is currently being cached by Terraform.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;When &lt;code&gt;--retry-once-with-cleanup=true&lt;/code&gt;, in each failed directory the cached modules and providers from the &lt;code&gt;.terraform&lt;/code&gt; directory will be deleted, before retrying once more. To avoid unnecessary deletion of this directory, the cleanup and retry will only happen if Terraform produces any of the following error messages:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#34;Missing or corrupted provider plugins&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Module source has changed&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Module version requirements have changed&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Module not installed&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Could not load plugin&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br&gt; When using &lt;code&gt;--retry-once-with-cleanup=true&lt;/code&gt;, problematic &lt;code&gt;.terraform/modules/&lt;/code&gt; and &lt;code&gt;.terraform/providers/&lt;/code&gt; directories will be recursively deleted without prompting for consent. Other files and directories will not be affected, such as the &lt;code&gt;.terraform/environment&lt;/code&gt; file.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;An alternative solution is to find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&#xA;function rm_terraform {&#xA;    find . \( -iname &#34;.terraform*&#34; ! -iname &#34;.terraform-docs*&#34; \) -print0 | xargs -0 rm -r&#xA;}&#xA;&#34; &amp;gt;&amp;gt;~/.bashrc&#xA;&#xA;# Reload shell and use `rm_terraform` command in the repo root&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; hook will try to reinitialize them before running the &lt;code&gt;terraform validate&lt;/code&gt; command.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;&lt;br&gt; If you use Terraform workspaces, DO NOT use this option (&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/203#issuecomment-918791847&#34;&gt;details&lt;/a&gt;). Consider the first option, or wait for &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/224&#34;&gt;&lt;code&gt;force-init&lt;/code&gt;&lt;/a&gt; option implementation.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; in a repo with Terraform module, written using Terraform 0.15+ and which uses provider &lt;code&gt;configuration_aliases&lt;/code&gt; (&lt;a href=&#34;https://www.terraform.io/language/modules/develop/providers#provider-aliases-within-modules&#34;&gt;Provider Aliases Within Modules&lt;/a&gt;), errors out.&lt;/p&gt; &lt;p&gt;When running the hook against Terraform code where you have provider &lt;code&gt;configuration_aliases&lt;/code&gt; defined in a &lt;code&gt;required_providers&lt;/code&gt; configuration block, terraform will throw an error like:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Error: Provider configuration not present To work with &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; its original provider configuration at provider &lt;code&gt;[&#34;registry.terraform.io/hashicorp/aws&#34;].&amp;lt;provider_alias&amp;gt;&lt;/code&gt; is required, but it has been removed. This occurs when a provider configuration is removed while objects created by that provider still exist in the state. Re-add the provider configuration to destroy &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt;, after which you can remove the provider configuration again.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;This is a &lt;a href=&#34;https://github.com/hashicorp/terraform/issues/28490&#34;&gt;known issue&lt;/a&gt; with Terraform and how providers are initialized in Terraform 0.15 and later. To work around this you can add an &lt;code&gt;exclude&lt;/code&gt; parameter to the configuration of &lt;code&gt;terraform_validate&lt;/code&gt; hook like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  exclude: &#39;^[^/]+$&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will exclude the root directory from being processed by this hook. Then add a subdirectory like &#34;examples&#34; or &#34;tests&#34; and put an example implementation in place that defines the providers with the proper aliases, and this will give you validation of your module through the example. If instead you are using this with multiple modules in one repository you&#39;ll want to set the path prefix in the regular expression, such as &lt;code&gt;exclude: modules/offendingmodule/[^/]+$&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Alternately, you can use &lt;a href=&#34;https://github.com/hashicorp/terraform-config-inspect&#34;&gt;terraform-config-inspect&lt;/a&gt; and use a variant of &lt;a href=&#34;https://github.com/bendrucker/terraform-configuration-aliases-action/raw/main/providers.sh&#34;&gt;this script&lt;/a&gt; to generate a providers file at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terraform-config-inspect --json . | jq -r &#39;&#xA;  [.required_providers[].aliases]&#xA;  | flatten&#xA;  | del(.[] | select(. == null))&#xA;  | reduce .[] as $entry (&#xA;    {};&#xA;    .provider[$entry.name] //= [] | .provider[$entry.name] += [{&#34;alias&#34;: $entry.alias}]&#xA;  )&#xA;&#39; | tee aliased-providers.tf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Save it as &lt;code&gt;.generate-providers.sh&lt;/code&gt; in the root of your repository and add a &lt;code&gt;pre-commit&lt;/code&gt; hook to run it before all other hooks, like so:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- repos:&#xA;  - repo: local&#xA;    hooks:&#xA;      - id: generate-terraform-providers&#xA;         name: generate-terraform-providers&#xA;         require_serial: true&#xA;         entry: .generate-providers.sh&#xA;         language: script&#xA;         files: \.tf(vars)?$&#xA;         pass_filenames: false&#xA;&#xA;  - repo: https://github.com/pre-commit/pre-commit-hooks&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;br&gt; The latter method will leave an &#34;aliased-providers.tf.json&#34; file in your repo. You will either want to automate a way to clean this up or add it to your &lt;code&gt;.gitignore&lt;/code&gt; or both.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_wrapper_module_for_each&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; generates module wrappers for Terraform modules (useful for Terragrunt where &lt;code&gt;for_each&lt;/code&gt; is not supported). When using this hook without arguments it will create wrappers for the root module and all modules available in &#34;modules&#34; directory.&lt;/p&gt; &#xA;&lt;p&gt;You may want to customize some of the options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-dir=...&lt;/code&gt; - Specify a single directory to process. Values: &#34;.&#34; (means just root module), &#34;modules/iam-user&#34; (a single module), or empty (means include all submodules found in &#34;modules/*&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-org=...&lt;/code&gt; - Module repository organization (e.g. &#34;terraform-aws-modules&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-shortname=...&lt;/code&gt; - Short name of the repository (e.g. &#34;s3-bucket&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-provider=...&lt;/code&gt; - Name of the repository provider (e.g. &#34;aws&#34; or &#34;google&#34;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Sample configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_wrapper_module_for_each&#xA;  args:&#xA;    - --args=--module-dir=.   # Process only root module&#xA;    - --args=--dry-run        # No files will be created/updated&#xA;    - --args=--verbose        # Verbose output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you use hook inside Docker:&lt;/strong&gt;&lt;br&gt; The &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook attempts to determine the module&#39;s short name to be inserted into the generated &lt;code&gt;README.md&lt;/code&gt; files for the &lt;code&gt;source&lt;/code&gt; URLs. Since the container uses a bind mount at a static location, it can cause this short name to be incorrect.&lt;br&gt; If the generated name is incorrect, set them by providing the &lt;code&gt;module-repo-shortname&lt;/code&gt; option to the hook:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_wrapper_module_for_each&#xA;  args:&#xA;    - &#39;--args=--module-repo-shortname=ec2-instance&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;terrascan&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terrascan&lt;/code&gt; supports custom arguments so you can pass supported flags like &lt;code&gt;--non-recursive&lt;/code&gt; and &lt;code&gt;--policy-type&lt;/code&gt; to disable recursive inspection and set the policy type respectively:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terrascan&#xA;  args:&#xA;    - --args=--non-recursive # avoids scan errors on subdirectories without Terraform config files&#xA;    - --args=--policy-type=azure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See the &lt;code&gt;terrascan run -h&lt;/code&gt; command line help for available options.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;--args=--verbose&lt;/code&gt; parameter to see the rule ID in the scanning output. Useful to skip validations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;--skip-rules=&#34;ruleID1,ruleID2&#34;&lt;/code&gt; parameter to skip one or more rules globally while scanning (e.g.: &lt;code&gt;--args=--skip-rules=&#34;ruleID1,ruleID2&#34;&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the syntax &lt;code&gt;#ts:skip=RuleID optional_comment&lt;/code&gt; inside a resource to skip the rule for that resource.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;tfupdate&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Out of the box &lt;code&gt;tfupdate&lt;/code&gt; will pin the terraform version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: tfupdate&#xA;  name: Autoupdate Terraform versions&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;d like to pin providers, etc., use custom arguments, i.e &lt;code&gt;provider=PROVIDER_NAME&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: tfupdate&#xA;  name: Autoupdate AWS provider versions&#xA;  args:&#xA;    - --args=provider aws # Will be pined to latest version&#xA;&#xA;- id: tfupdate&#xA;  name: Autoupdate Helm provider versions&#xA;  args:&#xA;    - --args=provider helm&#xA;    - --args=--version 2.5.0 # Will be pined to specified version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/minamijoyo/tfupdate#usage&#34;&gt;&lt;code&gt;tfupdate&lt;/code&gt; usage instructions&lt;/a&gt; for other available options and usage examples.&lt;br&gt; No need to pass &lt;code&gt;--recursive .&lt;/code&gt; as it is added automatically.&lt;/p&gt; &#xA;&lt;h3&gt;terragrunt_providers_lock&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Use this hook only in infrastructure repos managed solely by &lt;code&gt;terragrunt&lt;/code&gt; and do not mix with &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/a&gt; to avoid conflicts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Hook &lt;em&gt;may&lt;/em&gt; be very slow, because terragrunt invokes &lt;code&gt;t init&lt;/code&gt; under the hood.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Hook produces same results as &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/a&gt;, but for terragrunt root modules.&lt;/p&gt; &#xA;&lt;p&gt;It invokes &lt;code&gt;terragrunt providers lock&lt;/code&gt; under the hood and terragrunt &lt;a href=&#34;https://terragrunt.gruntwork.io/docs/features/lock-file-handling/&#34;&gt;does its&#39; own magic&lt;/a&gt; for handling lock files.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terragrunt_providers_lock&#xA;  name: Terragrunt providers lock&#xA;  args:&#xA;    - --args=-platform=darwin_arm64&#xA;    - --args=-platform=darwin_amd64&#xA;    - --args=-platform=linux_amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Usage&lt;/h2&gt; &#xA;&lt;h3&gt;File Permissions&lt;/h3&gt; &#xA;&lt;p&gt;A mismatch between the Docker container&#39;s user and the local repository file ownership can cause permission issues in the repository where &lt;code&gt;pre-commit&lt;/code&gt; is run. The container runs as the &lt;code&gt;root&lt;/code&gt; user by default, and uses a &lt;code&gt;tools/entrypoint.sh&lt;/code&gt; script to assume a user ID and group ID if specified by the environment variable &lt;code&gt;USERID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&#34;&gt;recommended command&lt;/a&gt; to run the Docker container is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run -e &#34;USERID=$(id -u):$(id -g)&#34; -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which uses your current session&#39;s user ID and group ID to set the variable in the run command. Without this setting, you may find files and directories owned by &lt;code&gt;root&lt;/code&gt; in your local repository.&lt;/p&gt; &#xA;&lt;p&gt;If the local repository is using a different user or group for permissions, you can modify the &lt;code&gt;USERID&lt;/code&gt; to the user ID and group ID needed. &lt;strong&gt;Do not use the username or groupname in the environment variable, as it has no meaning in the container.&lt;/strong&gt; You can get the current directory&#39;s owner user ID and group ID from the 3rd (user) and 4th (group) columns in &lt;code&gt;ls&lt;/code&gt; output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -aldn .&#xA;drwxr-xr-x 9 1000 1000 4096 Sep  1 16:23 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download Terraform modules from private GitHub repositories&lt;/h3&gt; &#xA;&lt;p&gt;If you use a private Git repository as your Terraform module source, you are required to authenticate to GitHub using a &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;Personal Access Token&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When running pre-commit on Docker, both locally or on CI, you need to configure the &lt;a href=&#34;https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html&#34;&gt;~/.netrc&lt;/a&gt; file, which contains login and initialization information used by the auto-login process.&lt;/p&gt; &#xA;&lt;p&gt;This can be achieved by firstly creating the &lt;code&gt;~/.netrc&lt;/code&gt; file including your &lt;code&gt;GITHUB_PAT&lt;/code&gt; and &lt;code&gt;GITHUB_SERVER_HOSTNAME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set GH values (replace with your own values)&#xA;GITHUB_PAT=ghp_bl481aBlabl481aBla&#xA;GITHUB_SERVER_HOSTNAME=github.com&#xA;&#xA;# create .netrc file&#xA;echo -e &#34;machine $GITHUB_SERVER_HOSTNAME\n\tlogin $GITHUB_PAT&#34; &amp;gt;&amp;gt; ~/.netrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;~/.netrc&lt;/code&gt; file will look similar to the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine github.com&#xA;  login ghp_bl481aBlabl481aBla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] The value of &lt;code&gt;GITHUB_SERVER_HOSTNAME&lt;/code&gt; can also refer to a GitHub Enterprise server (i.e. &lt;code&gt;github.my-enterprise.com&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Finally, you can execute &lt;code&gt;docker run&lt;/code&gt; with an additional volume mount so that the &lt;code&gt;~/.netrc&lt;/code&gt; is accessible within the container&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run pre-commit-terraform with docker&#xA;# adding volume for .netrc file&#xA;# .netrc needs to be in /root/ dir&#xA;docker run --rm -e &#34;USERID=$(id -u):$(id -g)&#34; -v ~/.netrc:/root/.netrc -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:latest run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;This repository is managed by &lt;a href=&#34;https://github.com/antonbabenko&#34;&gt;Anton Babenko&lt;/a&gt; with help from these awesome contributors:&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=antonbabenko/pre-commit-terraform&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://star-history.com/#antonbabenko/pre-commit-terraform&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT licensed. See &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;h3&gt;Additional information for users from Russia and Belarus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Russia has &lt;a href=&#34;https://en.wikipedia.org/wiki/Annexation_of_Crimea_by_the_Russian_Federation&#34;&gt;illegally annexed Crimea in 2014&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/War_in_Donbas&#34;&gt;brought the war in Donbas&lt;/a&gt; followed by &lt;a href=&#34;https://en.wikipedia.org/wiki/2022_Russian_invasion_of_Ukraine&#34;&gt;full-scale invasion of Ukraine in 2022&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Russia has brought sorrow and devastations to millions of Ukrainians, killed hundreds of innocent people, damaged thousands of buildings, and forced several million people to flee.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Putin_khuylo!&#34;&gt;Putin khuylo!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>