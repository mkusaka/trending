<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T02:25:06Z</updated>
  <subtitle>Monthly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fscarmen/warp</title>
    <updated>2023-05-01T02:25:06Z</updated>
    <id>tag:github.com,2023-05-01:/fscarmen/warp</id>
    <link href="https://github.com/fscarmen/warp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WARP one-click script. Add an IPv4, IPv6 or dual-stack CloudFlare WARP network interface and Socks5 proxy for VPS. 一键脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;【WGCF】连接CF WARP为服务器添加IPv4/IPv6网络&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E6%9B%B4%E6%96%B0%E4%BF%A1%E6%81%AF&#34;&gt;更新信息&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E8%84%9A%E6%9C%AC%E7%89%B9%E7%82%B9&#34;&gt;脚本特点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#WARP%E5%A5%BD%E5%A4%84&#34;&gt;WARP好处&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#warp-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC&#34;&gt;warp 运行脚本&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#warp-go-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC&#34;&gt;warp-go 运行脚本&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E9%80%9A%E8%BF%87-warp-%E8%A7%A3%E9%94%81-chatgpt-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;通过 warp 解锁 chatGPT 的方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E5%88%B7-Netflix-%E8%A7%A3%E9%94%81-WARP-IP-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;刷 Netflix 解锁 WARP IP 的方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#Netflix-%E5%88%86%E6%B5%81%E5%88%B0-WARP-Client-ProxyWireProxy-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;Netflix 分流到 WARP Client Proxy、WireProxy 的方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#netflixgoogle-%E5%88%86%E6%B5%81%E5%88%B0-client-warp-%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;Netflix,Google 分流到 Client WARP 网络接口的方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#warp-license-%E5%8F%8A-id-%E8%8E%B7%E5%8F%96&#34;&gt;WARP+ License 及 ID 获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#WARP-Teams-%E8%8E%B7%E5%8F%96%E5%B9%B6%E7%94%A8%E4%BA%8E-Linux-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;WARP Teams 获取并用于 Linux 的方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#warp-%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E4%B8%B4%E6%97%B6%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%AD%E5%92%8C%E5%BC%80%E5%90%AF&#34;&gt;WARP 网络接口数据，临时、永久关闭和开启&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#WARP%E5%8E%9F%E7%90%86&#34;&gt;WARP原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E9%B8%A3%E8%B0%A2%E4%B8%8B%E5%88%97%E4%BD%9C%E8%80%85%E7%9A%84%E6%96%87%E7%AB%A0%E5%92%8C%E9%A1%B9%E7%9B%AE&#34;&gt;鸣谢 WARP 贡献者和 CloudFlare WARP 全球站点服务状态列表&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;更新信息&lt;/h2&gt; &#xA;&lt;p&gt;2023.3.26 warp-go V1.1.3 / menu.sh 2.49 1. Change the best Warp endpoint to standard ports [500,1701,2408,4500]; 2. Upgrade the Netflix unlocking section; 1. warp endpoint 优选改为标准端口 [500,1701,2408,4500]; 2. 升级奈飞解锁部分&lt;/p&gt; &#xA;&lt;p&gt;2023.3.14 warp-go V1.1.2 / menu.sh 2.48 To speed up WARP, automatically find the most suitable endpoint for local use and apply it to wgcf, warp-go and client. Thanks to an anonymous and enthusiastic user for the tool; 为了提速 WARP，自动寻找最适合本机使用的 endpoint，应用在 wgcf, warp-go 和 client，感谢匿名的热心网友提供的工具&lt;/p&gt; &#xA;&lt;p&gt;2023.3.2 warp-go V1.1.1 1. warp-go v1.0.8 is supported. Allowing custom MTU values in the configuration file /opt/warp-go/warp.conf; 2. Singbox configuration exports reseved using 3-numeric-array instead of a string; 1. 支持 warp-go v1.0.8 , 允许在配置文件 /opt/warp-go/warp.conf 自定义 MTU 值; 2. Singbox配置导出 reseved 使用三个数字的数组代替字符串&lt;/p&gt; &#xA;&lt;p&gt;2023.2.22 &lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E9%80%9A%E8%BF%87-warp-%E8%A7%A3%E9%94%81-chatgpt-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;Unlock chatGPT without installing warp; 不安装 warp 就能解锁 chatGPT 的方法&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;2023.2.7 menu.sh V2.47 Iptables + dnsmasq + ipset solution supports chatGPT. Install via the 12 option in the menu or &lt;code&gt;bash menu.sh e&lt;/code&gt;; Iptables + dnsmasq + ipset 方案支持 chatGPT. 安装方式: 菜单 12 选项或者 &lt;code&gt;bash menu.sh e&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;2022.12.17 warp-go V1.1.0 Support OpenWrt system; 支持 OpenWrt 系统&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;历史更新 history（点击即可展开或收起）&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;2022.12.10 warp-go V1.0.9 1.Export wireguard and sing-box config file with [warp-go e]; 2.Teams token website change to &lt;a href=&#34;https://web--public--warp-team-api--coia-mfs4.code.run&#34;&gt;https://web--public--warp-team-api--coia-mfs4.code.run&lt;/a&gt; 1. 使用 [warp-go e] 导出 wireguard 和 sing-box 配置文件; 2.获取 teams token 网站更换为: &lt;a href=&#34;https://web--public--warp-team-api--coia-mfs4.code.run&#34;&gt;https://web--public--warp-team-api--coia-mfs4.code.run&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.10.19 menu V2.46 / warp-go V1.0.8 Switch the IPv4 / IPv6 priority by [warp s 4/6/d] or [warp-go s 4/6/d]; 通过 [warp s 4/6/d] 或者 [warp-go 4/6/d]来切换 IPv4 / IPv6 的优先级别&lt;/p&gt; &#xA;  &lt;p&gt;2022.10.7 warp-go V1.0.7 1. Further improve the conversion function between accounts. You can even switch from one WARP+ to another; 2. Formatting code； 1. 进一步完善账户间转换功能，你甚至可以从一个 WARP+ 换到另一个; 2. 优化代码&lt;/p&gt; &#xA;  &lt;p&gt;2022.10.6 menu V2.45 1. Further improve the conversion function between accounts. You can even switch from one WARP+ to another; 2. Rebuild the account registration module; 1. 进一步完善账户间转换功能，你甚至可以从一个 WARP+ 换到另一个; 2. 重构账户注册模块&lt;/p&gt; &#xA;  &lt;p&gt;2022.9.10 Over 2,000 users star. Thank you to every solution creator. I&#39;m just passing these on more widely to serve more players. Thank you to each user for your continued support. I wish you all good health and Happy Mid-Autumn Festival!&lt;br&gt; 项目 star 达 2000。感谢每位解决方案创造者。我只是把这些作更广泛的传递，服务更多玩家。感谢各用户一如既往的支持。祝大家身体健康，中秋节快乐！&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.29 warp-go V1.0.6 1.Fixed the bug that routing rules failed after restart in non-global mode; 2.Fixed the bug of not changing IP; 1.解决了非全局模式重启后，路由规则失效的bug; 2.解决了更换不了IP的bug&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.27 menu V2.44 Refactoring the uninstallation logic. Dependency uninstallation requires confirmation; 重构卸载逻辑，依赖卸载需要确认&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.23 menu V2.43 warp-go V1.0.5 Support NAT VPS. Such as Woiden; 支持 NAT 服务器，例如 Woiden.&lt;/p&gt; &#xA;  &lt;p&gt;&lt;del&gt;2022.8.21 After testing, wgcf warp service is back to normal in Hong Kong and Toronto, etc. 经测试，香港和多伦多等地区 wgcf warp 服务恢复正常&lt;/del&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.21 menu V2.42 1.Add shortcut hints in the menu; 2.Remove the shortcut of S. Single and dual stacks swithing can directly use [warp 4/6/d]; 1.在菜单中增加快捷方式的提示; 2.移除快捷方式 s，单双栈相互切换可以直接 [warp 4/6/d]&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.20 warp-go V1.0.4 Chinese and English language support. Hello World; 中英双语支持，与世界接轨&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.20 warp-go V1.0.3 New feat: Menu + shortcuts for various usage scenarios; 菜单 + 快捷方式，适合各种使用场景&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.17 warp-go v1.0.2 1. Add WARP IPv4 non-global and global switch echo other. To use the v2ray/xray configuration file for triage, refer to the template for Client WARP mode on the project homepage; 2. Output wgcf configuration file (warp-go e); 1.在原来全局的基础上，新增 WARP IPv4 非全局方案，配合 v2ray/xray 配置文件来分流，参考项目主页的 Client WARP 模式的模版; 2.输出 wgcf 配置文件(warp-go e)&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.13 warp-go v1.0.1 1.New feat: Support WARP+ (warp-go a &#xA;   &lt;license&gt;&#xA;    ); 2.Support Teams (warp-go a token). You can easily get the token through &#xA;    &lt;a href=&#34;https://warp-team-api.herokuapp.com/&#34;&gt;https://warp-team-api.herokuapp.com/&lt;/a&gt; ; 3.Brush unlock Netflix IP (warp-go i); 4.Support AMD v2 v3 v4 instruction set; 1.新增 WARP+ 升级功能(warp-go a &#xA;    &lt;license&gt;&#xA;     ); 2.新增 Teams 升级功能(warp-go a token),通过 &#xA;     &lt;a href=&#34;https://warp-team-api.herokuapp.com/&#34;&gt;https://warp-team-api.herokuapp.com/&lt;/a&gt; 你能轻松获取 token; 3.新增刷解锁奈飞IP功能(warp-go i); 4.支持 GOAMD64v4 等指令集，提升功能&#xA;    &lt;/license&gt;&#xA;   &lt;/license&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.8.13 First on the whole web, proudly presents @CoiaPrant&#39;s warp-go one-click script. Using various interfaces of CloudFlare-WARP and integrating wireguard-go, it can completely replace WGCF. Save Hong Kong, Toronto, etc., and let VPS without official WARP also get WARP IP. Thanks @CoiaPrant and his team again. Project official address: &lt;a href=&#34;https://gitlab.com/ProjectWARP/warp-go/-/tree/master/&#34;&gt;https://gitlab.com/ProjectWARP/warp-go/-/tree/master/&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;全网首发，隆重推出 @CoiaPrant 的 warp-go 一键脚本。使用 CloudFlare-WARP 的各类接口，集成 wireguard-go，可以完全替代 WGCF。 救活了香港、多伦多等，让没有官方 WARP 的 VPS 也可以获取 WARP IP。再次感谢 @CoiaPrant 及其团队。项目地址: &lt;a href=&#34;https://gitlab.com/ProjectWARP/warp-go/-/tree/master/&#34;&gt;https://gitlab.com/ProjectWARP/warp-go/-/tree/master/&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code&gt;wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh &amp;amp;&amp;amp; bash warp-go.sh [option] [lisence]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;2022.8.5 2.41 1.Get the traffic quota of WARP+ via API. Thanks to Oreo for technical support; 1.通过 API 获取 WARP+ 剩余流量, 感谢猫佬的技术支持。&lt;/p&gt; &#xA;  &lt;p&gt;2022.6.27 香港 IPv6 only 安装 Client 的方式，转自 LOC jhsyue 的技术贴:&lt;a href=&#34;https://hostloc.com/thread-1036792-1-1.html&#34;&gt;wiki-hk-61.8 开启warp教程&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.6.11 2.40 1.Support VPS-free LXC VPS; 1.支持 VPS-free LXC VPS&lt;/p&gt; &#xA;  &lt;p&gt;2022.5.25 2.39 1.Automatically sync the latest official versions of wgcf, CloudFlare client, wireguard-go and wireproxy every day, allowing users to have &amp;gt;the best performance with every installation; 2.Change the installation method of CloudFlare client, from APT/YUM repository to Package repository &amp;gt;repository; 1.每天自动同步官方版本最新版本的 wgcf、 CloudFlare client、wireguard-go 和 wireproxy，让用户每次安装都能获得最佳性能; 2.更换 CloudFlare client 的安装方式，从 &amp;gt;APT/YUM库 改到 Package 库&lt;/p&gt; &#xA;  &lt;p&gt;2022.5.18 2.38 1. Fully support Ubuntu 22.04 and CentOS Streams 9 LTS; 2. Optimize Debian to speed up installation; 1. 全面支持 Ubuntu 22.04 和 CentOS &amp;gt;Streams 9 LTS; 2. 优化 Debian 以提升安装速度&lt;/p&gt; &#xA;  &lt;p&gt;2022.4.21 WARP one-click script on macOS. A VPN that fast,modern,secure by WireGuard tunnel and WARP service 全网首发: macOS 一键脚本， 一个为免费、快速、安全的&amp;gt;基于 WireGuard 隧道，WARP 服务的 VPN。你可以理解为白嫖 CloudFlare 的科学服务了，也不需要服务器。&lt;/p&gt; &#xA;  &lt;p&gt;项目地址: &lt;a href=&#34;https://github.com/fscarmen/warp/tree/main/pc&#34;&gt;https://github.com/fscarmen/warp/tree/main/pc&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.4.8 2.37 1. First publication on a global scale: After WirePorxy, another major technological breakthrough -- WARP-Cli&#39;s WARP mode solution. Thanks &amp;gt;to the original creator -- Teacher LUBAN. It solves two major pain points: 1) The instability of the traditional proxy model; 2) Currently HK does not &amp;gt;have a WARP service; 1. 全网首发: 继 WirePorxy 之后，又一重大技术突破，WARP-Cli 的 WARP 模式方案，感谢原创者 LUBAN 老师，引用大神的思路，解决两大通点: 1) 传统 proxy 模式的&amp;gt;断流和慢; 2) 解决 HK 没有 WARP 服务&lt;/p&gt; &#xA;  &lt;p&gt;2022.3.27 2.36 1. First publication on a global scale. By WireProxy, Wireguard client that exposes itself as a socks5 proxy; Ths Fangliding for the &amp;gt;information:&lt;a href=&#34;https://github.com/fscarmen/warp/issues/113&#34;&gt;#113&lt;/a&gt;; 2. WARP+ and Teams can be used in WireProxy; 3. Systemd and change Netflix IP for &amp;gt;WireProxy. 1. 全网首发: 通过 wireproxy，让 WARP 在本地建议一个 socks5 代理。感谢风扇滑翔翼 提供的资讯:&lt;a href=&#34;https://github.com/fscarmen/warp/issues/113&#34;&gt;#113&lt;/a&gt;; 2. WARP+ &amp;gt;和 Teams 账户可用于 WireProxy 安装或者升级; 3. WireProxy systemd 进程守护，同时支持更换 Netflix IP&lt;/p&gt; &#xA;  &lt;p&gt;2022.3.23 2.35 1.Support WARP on Debian9; 1.支持 Debian 9 上安装 WARP&lt;/p&gt; &#xA;  &lt;p&gt;Over 1,000 users star. Thank you for your support. 项目 star 破千，感谢各用户的大力支持。&lt;/p&gt; &#xA;  &lt;p&gt;2022.3.19 2.34: 1.Support Arch Linux. Ths @SE_dong; 1.应呜呜冬 @SE_dong 的要求，新增 Arch Linux 的支持.&lt;/p&gt; &#xA;  &lt;p&gt;2022.3.11 2.33: 1.First publication on a global scale. WARP Client support Ubuntu 18.04 and CentOS 7; 2. Open TUN for OVZ. You needn&#39;t setting it in the &amp;gt;control panel. Thx @Q_lilll; 1. 全网首发， WARP Client 支持 Ubuntu 18.04 and CentOS 7; 2. 感谢 @Q_lilll 提供方案，为 OVZ VPS 在线打开 TUN,不需要到面板处理&lt;/p&gt; &#xA;  &lt;p&gt;2022.2.25 2.32: 1.Change the WARP endpoint; 2. Sync the Netflix title with lmc999; 1.更换 WARP 的 endpoint; 2. 同步 lmc999 的 Netflix 检测 title&lt;/p&gt; &#xA;  &lt;p&gt;2022.2.15 Happy Lantern Festival. Bring you a new experience of docker unlock, another way to unlock Netflix. Project based on alpine, content wgcf and &amp;gt;unblocking Netflix scripts. Change unlock warp ip automatically. 元宵节快乐。为大家带来个 docker 解锁的全新体验，换个姿势解锁 Netflix。项目以 alpine 为基础系统，内含 &amp;gt;wgcf 和解锁 Netflix 脚本，自动切换解锁 WARP IP&lt;br&gt; &lt;a href=&#34;https://github.com/fscarmen/warp_unlock&#34;&gt;https://github.com/fscarmen/warp_unlock&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.2.11 2.31: 1.iptables + dnsmasq + ipset to unlock stream media. (Not available for IPv6 only VPS). It is better than setting the outbound in &amp;gt;xray/v2ray. 1.iptables + dnsmasq + ipset 最小化解锁流媒体，warp 只接管流媒体流量 (不适合 IPv6 only VPS)，比在 xray/v2ray 设置分流的方案要更好&lt;/p&gt; &#xA;  &lt;p&gt;2022.1.25 Media unlock daemon. Check it every 5 minutes. If unlocked, the scheduled task exits immediately. If it is not unlocked, it will be swiped &amp;gt;successfully in the background. Advantages: Minimized use of system resources. Please support professional unlock one-click script: &amp;gt;&lt;a href=&#34;https://github.com/fscarmen/warp_unlock&#34;&gt;https://github.com/fscarmen/warp_unlock&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;流媒体解锁守护进程,定时5分钟检查一次,遇到不解锁时更换 WARP IP，直至刷成功。请大家支持一下兄弟项目: &lt;a href=&#34;https://github.com/fscarmen/warp_unlock&#34;&gt;https://github.com/fscarmen/warp_unlock&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://raw.githubusercontent.com/fscarmen/warp_unlock/main/unlock.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;2022.1.21 2.30: 1.All support WARP single-stack and dual-stack solutions. Switch to each other easily and quickly. Such as [warp s 4],[warp s 6],[warp s &amp;gt;d]; 2.Brush Netflix Unlock IP with the expect area. Such as [warp i hk]. You can use it with crontab,screen,nohup &amp;amp; etc. &lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E5%88%B7-Netflix-%E8%A7%A3%3E%E9%94%81-WARP-IP-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;Detail&lt;/a&gt;; 3.Fixed stuck when brushing Netflix IP 1.全面支持WARP单栈与双栈方案，简单并快速切换，如[warp s 4],[warp s 6],[warp s d]; 2.在刷解锁 Netflix WARP &amp;gt;IP 时可以带上期望的地区,如 [warp i hk]。你可以结合 crontab,screen,nohup &amp;amp; 等方式使用,&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen/warp/main/README.md#%E5%88%B7-Netflix-%E8%A7%A3%E9%94%81-WARP-IP-%E7%9A%84%E6%96%B9%E6%B3%95&#34;&gt;详细方法&lt;/a&gt;; 3.修正刷 Netflix IP 时可能发&amp;gt;生的卡死不动的bug&lt;/p&gt; &#xA;  &lt;p&gt;&lt;del&gt;To be updated: huanx and malikshi &lt;a href=&#34;https://github.com/fscarmen/warp/issues/63&#34;&gt;#63&lt;/a&gt; needs, hope like [P3terx]&amp;gt;(&lt;a href=&#34;https://github.com/P3TERX/warp.sh/raw/main/warp.sh&#34;&gt;https://github.com/P3TERX/warp.sh/blob/main/warp.sh&lt;/a&gt;) scripts, all support WARP single-stack and dual-stack solutions. Plan to rebuild menu modules and &amp;gt;pass parameters with arrays.(DONE)&lt;/del&gt;&lt;/p&gt; &#xA;  &lt;p&gt;&lt;del&gt;待更新：唤醒大神和 malikshi &lt;a href=&#34;https://github.com/fscarmen/warp/issues/63&#34;&gt;#63&lt;/a&gt; 的需求，希望像 &lt;a href=&#34;https://github.com/P3TERX/warp.sh/raw/main/warp.sh&#34;&gt;P3terx&lt;/a&gt; 脚本&amp;gt;一样，全面支持 WARP 单栈和双栈方案。计划花点时间用数组重构菜单模块和传参。（已完成）&lt;/del&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.1.11 2.26: 1.Asking the unlock Netflix region where you expect before brushing WARP IP; 2.Single and Dual stack switch to each other quickly. 1.在刷&amp;gt;解锁 Netflix WARP IP 之前，让用户输入想要的区域的简写; 2.单栈与双栈快速切换;&lt;/p&gt; &#xA;  &lt;p&gt;WARP docker solution support ARM64,AMD64 and s390x; WARP docker 方案支持 ARM64,AMD64 和 s390x CPU 架构 Dualstack on IPv4 only ,IPv6 only and native dualstack VPS is coming; 双栈 WARP docker 已经有方案，即将推出。(现 IPv6 only 和原生双栈的都能 WARP 双栈，差 IPv4 Only &amp;gt;了)&lt;/p&gt; &#xA;  &lt;p&gt;2022.1.6 重大技术突破，绝对原创，绝对原创，绝对原创。成功把 WGCF 配置文件与环境依赖分离。本着万物皆可 Docker 的思路，以超轻量级的 Alpine 为底包（底包5M+依赖22M=27MB），配置放在&amp;gt;映射目录处，解决某些旧系统不能使用 WARP 服务的问题。&lt;del&gt;docker 安装依赖方案只能是单栈，并不能双栈。该技术已经是 WGCF 和 wireguard 的天花板，不服来辩。&lt;/del&gt;&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code&gt;wget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/docker.sh &amp;amp;&amp;amp; bash docker.sh [option] [lisence] ## 安装 docker、拉镜像和安装容器&#xA;&#xA;docker exec -it wgcf sh #部分系统在容器外 docker exec -it wgcf wg-quick up wgcf 不行，一定要分开执行的。进入容器&#xA;&#xA;wg-quick up wgcf; exit #运行 WGCF 并退出容器。&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/62703343/148343358-67d0089a-591e-4af2-915c-e725422a5b0e.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2022.1.1 1.Happy new year bros. I wish everyone good health and lots of money. Thanks for your support to this project. This project belongs to bros, I &amp;gt;just summarized your fragmented information; 2.Add timestamp and running time while brushing Netflix IP. 1.元旦快乐，祝各位身体健康，赚钱多多。本项目是属于网友们的，我只是把大家碎片化的信息汇总而已; 2.新年第一更刷奈飞IP时加入时间戳和运行时长&lt;/p&gt; &#xA;  &lt;p&gt;2021.12 29 大家可以试试另两位 WARP 作者脚本:&lt;br&gt; 1.甬哥 &lt;code&gt;wget -N https://cdn.jsdelivr.net/gh/kkkyg/CFwarp/CFwarp.sh &amp;amp;&amp;amp; bash CFwarp.sh&lt;/code&gt;&lt;br&gt; 2.P3terx &lt;code&gt;bash &amp;lt;(curl -fsSL git.io/warp.sh) menu&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2021.12.28 2.25: IMPORTANT: 1.First publication on a global scale. Support architecture s390x for IBM Linux One(Choose WARP ipv6 single stack),thx Brother Big B and Misaka; 2.Support Alpine Linux, thx Dong gua; 3.add whitelist. support Debian bookworm; 重要更新: 1. 全网首发，支持 IBM Linux One 的 s390x 架构 CPU (请选用 WARP ipv6单栈)，感谢Misaka和大B哥借机器测试 2.支持 Alpine Linux 系统，感谢 Dong gua 借机器测试 3.支持 Debian bookworm系统，增加白名单，遇到没有大版本号的系统可以往里面放&lt;/p&gt; &#xA;  &lt;p&gt;2021.12.24 2.24: 1.The default language will set to the one selected during installation. &lt;code&gt;echo &#39;E&#39; &amp;gt;/etc/wireguard/language; warp v&lt;/code&gt;; 2.Support HAX LXC VPS. It needs run &lt;code&gt;until curl -s4m8 ip.gs; do warp n; done&lt;/code&gt; to brush the warp network; 1.默认语言设置为安装时候选择的,&lt;code&gt;中文 echo &#39;C&#39; &amp;gt;/etc/wireguard/language; warp v&lt;/code&gt;; 2.支持 HAX LXC VPSlxc 机器母鸡资源不够，warp 需要不停的刷才能获取到 &lt;code&gt;until curl -s4m8 ip.gs; do warp n; done&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2021.12.17 2.23: Support change the Netflix IP not only WGCF but also Socks5 Client. Both will keep the Plus status. Recommand runs under [screen]; 2.Support update to TEAM account online. &lt;a href=&#34;https://gist.githubusercontent.com/fscarmen/56aaf02d743551737c9973b8be7a3496/raw/16cf34edf5fb28be00f53bb1c510e95a35491032/com.cloudflare.onedotonedotonedotone_preferences.xml&#34;&gt;URL for you&lt;/a&gt; 1.支持 WARP Interface 和 Socks5 Client 自动更换支持奈飞的IP，两者都会保留 Plus 的状态，建议在 screen 下在后台运行,如果是中文，需要 screen -U 解决乱码问题; 2.支持在线升级为 TEAM 账户。 &lt;a href=&#34;https://gist.githubusercontent.com/fscarmen/56aaf02d743551737c9973b8be7a3496/raw/16cf34edf5fb28be00f53bb1c510e95a35491032/com.cloudflare.onedotonedotonedotone_preferences.xml&#34;&gt;这此获取 URL&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2021.12.14 2.22: 1.First in the whole network. Use WARP Team account instead of Plus. No need to brush Plus traffic any more. 50 user limited. return to version 2.21; 1.全网首创，使用脚本提供 TEAM 账户替代 Plus，免刷流量。&lt;del&gt;翻车了，官方说了免费team有50个账户的限制，我心存侥幸，想着1个账户多人用，现在看来是行不通了，暂先回退到2.21版本&lt;/del&gt;&lt;/p&gt; &#xA;  &lt;p&gt;2021.12.11 2.21: 1.BoringTUN removed because of unstable; 2.Change the DNS to Google first. 3.Count the number of runs1.BoringTUN 因不稳定而移除 2.域名解析服务器首先谷歌 3.统计运行次数&lt;/p&gt; &#xA;  &lt;p&gt;2021.12.04 2.20: IMPORTANT: First publication on a global scale. Reduce installation time by more than 50% through multi-threading. No need to wait for WGCF registering and MTU value searching time; 2.Recode EN/CH traslation through associative array. Smarter and more efficient. Thx Oreo. 重大更新：1.全网首创，通过多线程，安装 WARP 时间缩短一半以上，不用长时间等待 WGCF 注册和寻找 MTU 值时间了; 2.中英双语部分关联数组重构了，更聪明高效，感谢猫大&lt;/p&gt; &#xA;  &lt;p&gt;2021.11.30 2.11: 感谢luoxue-bot原创，唤醒大神告知。 1.Changing Netflix IP is adapted from other authors [luoxue-bot]; 1.更换支持 Netflix IP 改编自 [luoxue-bot] 的成熟作品&lt;/p&gt; &#xA;  &lt;p&gt;2021.11.11 2.10: 1.Customize the priority of IPv4 / IPv6; 2.Customize the port of Client Socks5(default is 40000); 1.自定义 IPv4 / IPv6 优先组别; 2.自定义 Client Socks5 代理端&amp;gt;&amp;gt;口，默认40000&lt;/p&gt; &#xA;  &lt;p&gt;2021.11.06 2.09: 1.WARP Linux Client supported.Socks5 proxy listening on: 127.0.0.1:40000. Register and connnect need non-WARP IPv4 interface. Native IPv4 + WARP IPv6 is ok; &amp;gt;2.WARP+ license on Client supported; 3.Customize the WARP+ device name. 1.支持 WARP Linux Client，Socks5 代理监听:127.0.0.1:40000,注册和连接需要非 WARP 的原生 IPv4，可以是：原生&amp;gt;IPv4+ WARP IPv6; 2.Client 支持 WARP+ 账户升级和安装; 3.自定义 WARP+ 设备名&lt;/p&gt; &#xA;  &lt;p&gt;2021.11.01 2.08: 1.Serching the best MTU value for WARP interface automatically; 2.asn organisation for the VPS; 1.自动设置最优 MTU; 2.显示asn组织(线路提供商)&lt;/p&gt; &#xA;  &lt;p&gt;2021.10.29 2.07: 1.Support Chinese and English; 2.Optimize running speed; 3.fix startup at reboot bug; 1.支持中英文，用户可自行选择; 2.大幅优化速度; 3.修复重启后启动WARP的bug&lt;/p&gt; &#xA;  &lt;p&gt;2021.10.23 2.06: 1.添加自动检查是否开启 Tun 模块； 2.提高脚本适配性; 3.新增 hax、Amazon Linux 2 和 Oracle Linux 支持&lt;/p&gt; &#xA;  &lt;p&gt;2021.10.15 2.05: 1.WGCF自动同步最新的2.2.9； 2.升级了重启后运行 Warp 的处理方法，不再依赖另外的文件; 3.修复 KVM 由免费账户升级为 Warp+ 账户的bug&lt;/p&gt; &#xA;  &lt;p&gt;2021.10.14 2.04: 1.LXC 用户自主选择 BoringTun 还是 Wireguard-go (BoringTun用Rust语言，性能接近内核模块性能 ，稳定性与VPS有关；WireGuard-GO用Go语言，性能比前者差点，稳定性高); 2.增加限&amp;gt;制：原生双栈VPS只能用Warp双栈，bash menu.sh 1 会建议改为Warp双栈或退出; 3.Warp断网后，运行warp会自动关闭通道和杀掉进程; 4.脚本中止后，用 echo $? 显示 1,即代表不成功 (原来为代表运行成功的0)&lt;/p&gt; &#xA;  &lt;p&gt;2021.10.12 2.03: 1.对刷网络作了优化，加快了两次尝试之间的间隔时间，不会出现死循环，因为已经限制次数为10次，有明确的提示 2.用Rust语言的 BoringTun 替代Go语言的 WireGuard-GO&lt;/p&gt; &#xA;  &lt;p&gt;2021.10.10 2.02: 上游 ip.gs 用 wget 不稳定导致获取不了 IP 而一直在死刷，弃坑用 curl 替换，脚本检查到没有的话自动安装&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;脚本特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 WARP+ 账户，附带第三方刷 WARP+ 流量和升级内核 BBR 脚本&lt;/li&gt; &#xA; &lt;li&gt;普通用户友好的菜单，进阶者通过后缀选项快速搭建&lt;/li&gt; &#xA; &lt;li&gt;智能判断vps操作系统：Ubuntu 16.04、18.04、20.04; Debian 9、10、11，CentOS 7、8; Alpine 和 Arch Linux，请务必选择 LTS 系统&lt;br&gt; 智能判断硬件结构类型：AMD、ARM 和 s390x&lt;/li&gt; &#xA; &lt;li&gt;结合 Linux 版本和虚拟化方式，自动优选三个 WireGuard 方案。&lt;br&gt; 网络性能方面：内核集成 WireGuard＞安装内核模块＞BoringTun＞wireguard-go&lt;/li&gt; &#xA; &lt;li&gt;智能判断 WGCF 作者 github库的最新版本 （Latest release）&lt;/li&gt; &#xA; &lt;li&gt;智能分析内网和公网IP生成 WGCF 配置文件&lt;/li&gt; &#xA; &lt;li&gt;输出结果，提示是否使用 WARP IP ，IP 归属地&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WARP好处&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 chatGPT，解锁奈飞流媒体&lt;/li&gt; &#xA; &lt;li&gt;避免 Google 验证码或是使用 Google 学术搜索&lt;/li&gt; &#xA; &lt;li&gt;可调用 IPv4 接口，使青龙和V2P等项目能正常运行&lt;/li&gt; &#xA; &lt;li&gt;由于可以双向转输数据，能做对方VPS的跳板和探针，替代 HE tunnelbroker&lt;/li&gt; &#xA; &lt;li&gt;能让 IPv6 only VPS 上做的节点支持 Telegram&lt;/li&gt; &#xA; &lt;li&gt;IPv6 建的节点能在只支持 IPv4 的 PassWall、ShadowSocksR Plus+ 上使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/62703343/144635014-4c027645-0e09-4b84-8b78-88b41f950627.png&#34; width=&#34;80%&#34;&gt; &#xA;&lt;h2&gt;warp 运行脚本&lt;/h2&gt; &#xA;&lt;p&gt;首次运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;amp;&amp;amp; bash menu.sh [option] [lisence]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;再次运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;warp [option] [lisence]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;[option] 变量1 变量2&lt;/th&gt; &#xA;   &lt;th&gt;具体动作说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;h&lt;/td&gt; &#xA;   &lt;td&gt;帮助&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;原无论任何状态 -&amp;gt; WARP IPv4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4 lisence name&lt;/td&gt; &#xA;   &lt;td&gt;把 WARP+ Lisence 和设备名添加进去，如 &lt;code&gt;bash menu.sh 4 N5670ljg-sS9jD334-6o6g4M9F Goodluck&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;原无论任何状态 -&amp;gt; WARP IPv6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;d&lt;/td&gt; &#xA;   &lt;td&gt;原无论任何状态 -&amp;gt; WARP 双栈&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;o&lt;/td&gt; &#xA;   &lt;td&gt;WARP 开关，脚本主动判断当前状态，自动开或关&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;u&lt;/td&gt; &#xA;   &lt;td&gt;卸载 WARP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;n&lt;/td&gt; &#xA;   &lt;td&gt;断网时，用于刷WARP网络 (WARP bug)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;b&lt;/td&gt; &#xA;   &lt;td&gt;升级内核、开启BBR及DD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a&lt;/td&gt; &#xA;   &lt;td&gt;免费 WARP 账户升级 WARP+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a lisence&lt;/td&gt; &#xA;   &lt;td&gt;在上面基础上把 WARP+ Lisence 添加进去，如 &lt;code&gt;bash menu.sh a N5670ljg-sS9jD334-6o6g4M9F&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;p&lt;/td&gt; &#xA;   &lt;td&gt;刷 Warp+ 流量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;c&lt;/td&gt; &#xA;   &lt;td&gt;安装 WARP Linux Client，开启 Socks5 代理模式&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;l&lt;/td&gt; &#xA;   &lt;td&gt;安装 WARP Linux Client，开启 WARP 模式&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;c lisence&lt;/td&gt; &#xA;   &lt;td&gt;在上面基础上把 WARP+ Lisence 添加进去，如 &lt;code&gt;bash menu.sh c N5670ljg-sS9jD334-6o6g4M9F&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;r&lt;/td&gt; &#xA;   &lt;td&gt;WARP Linux Client 开关&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v&lt;/td&gt; &#xA;   &lt;td&gt;同步脚本至最新版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;i&lt;/td&gt; &#xA;   &lt;td&gt;更换 WARP IP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;e&lt;/td&gt; &#xA;   &lt;td&gt;安装 iptables + dnsmasq + ipset 分流流媒体方案&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;w&lt;/td&gt; &#xA;   &lt;td&gt;安装 WireProxy 解决方案&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;WireProxy 开关&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;其他或空值&lt;/td&gt; &#xA;   &lt;td&gt;菜单界面&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;举例：想为 IPv4 的甲骨文添加 Warp 双栈，首次运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;amp;&amp;amp; bash menu.sh d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;刷日本 Netflix 运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;warp i jp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;通过 warp 解锁 chatGPT 的方法&lt;/h2&gt; &#xA;&lt;p&gt;方法原创，转引用请标明本项目出处。&lt;br&gt; 适合范围: 除大陆、香港和美国 LA 外的所有 VPS，因为这些地方没有 wgcf 的 warp 服务&lt;br&gt; 思路是使用已经注册的 warp 做链式代理的设置，此解决方法是最轻便的，用户只要有 xray 即可。具体做法是修改 xray 配置文件的 outbound 和 routing，模板如下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;outbounds&#34;:[&#xA;        {&#xA;            &#34;protocol&#34;:&#34;freedom&#34;&#xA;        },&#xA;        {&#xA;            &#34;tag&#34;:&#34;WARP&#34;,&#xA;            &#34;protocol&#34;:&#34;wireguard&#34;,&#xA;            &#34;settings&#34;:{&#xA;                &#34;secretKey&#34;:&#34;cKE7LmCF61IhqqABGhvJ44jWXp8fKymcMAEVAzbDF2k=&#34;,&#xA;                &#34;address&#34;:[&#xA;                    &#34;172.16.0.2/32&#34;,&#xA;                    &#34;fd01:5ca1:ab1e:823e:e094:eb1c:ff87:1fab/128&#34;&#xA;                ],&#xA;                &#34;peers&#34;:[&#xA;                    {&#xA;                        &#34;publicKey&#34;:&#34;bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=&#34;,&#xA;                        &#34;endpoint&#34;:&#34;engage.cloudflareclient.com:2408&#34;&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    ],&#xA;    &#34;routing&#34;:{&#xA;        &#34;domainStrategy&#34;:&#34;AsIs&#34;,&#xA;        &#34;rules&#34;:[&#xA;            {&#xA;                &#34;type&#34;:&#34;field&#34;,&#xA;                &#34;domain&#34;:[&#xA;                    &#34;domain:openai.com&#34;,&#xA;                    &#34;domain:ai.com&#34;&#xA;                ],&#xA;                &#34;outboundTag&#34;:&#34;WARP&#34;&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;刷 Netflix 解锁 WARP IP 的方法&lt;/h2&gt; &#xA;&lt;p&gt;也可以用另一个通过 WARP 解锁流媒体的一键脚本: &lt;a href=&#34;https://github.com/fscarmen/warp_unlock&#34;&gt;【刷 WARP IP】 - 为 WARP 解锁流媒体而生&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;以刷 香港 hk 为例&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;crontab 计划任务方式，流媒体解锁守护进程&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sSL https://raw.githubusercontent.com/fscarmen/tools/main/warp_crontab.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;screen 多会话方式运行，会话任务名为 n&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -USdm n warp i hk  ##创建名为 n 的会话&#xA;screen -Udr n  ##进入会话 n 看运行情况&#xA;## 按 Ctrl+a 再按 d 退出话 n，返回主界面&#xA;screen -ls  ##查看会话窗口列表&#xA;screen -SX n quit  ##关闭会议 n，结束运行&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nohup &amp;amp; 后台运行方式，把结果输出到 log 文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;nohup warp i hk &amp;gt; logs 2&amp;gt;&amp;amp;1 &amp;amp;   ##放进后台运行&#xA;jobs -l | grep warp  ##看后台任务&#xA;cat logs  ##查看运行日志文件&#xA;kill -9 $(jobs -l | grep warp | awk &#39;{print $2}&#39;)  ##结束进程&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;crobtab 计划任务&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;@reboot root warp i hk&#39; &amp;gt;&amp;gt;/etc/crobtab   ##在计划任务里加入一条新任务&#xA;sed -i &#39;/warp i/d&#39; /etc/crontab   ##删掉计划任务&#xA;kill -9 $(pgrep -f warp)   ##杀掉正在运行的进程&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;另外遇到问题仍然需要用户有一定的处理能力，如结束时没有网络，可以用 &lt;code&gt;warp o&lt;/code&gt; 开关来获取，因此并没有写死在脚本里了。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果长时间仍然未刷出解锁IP，可以查查 CloudFlare 当地是否在维护调路由：&lt;a href=&#34;https://www.cloudflarestatus.com/&#34;&gt;https://www.cloudflarestatus.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Netflix 分流到 WARP Client Proxy、WireProxy 的方法&lt;/h2&gt; &#xA;&lt;p&gt;感谢 vpsxb admin 原创教程: &lt;a href=&#34;https://vpsxb.net/1069/&#34;&gt;继续解锁奈飞（七）-WARP socks5 client分流&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;先安装 WARP Client，假设使用默认的 40000 端口 并安装 &lt;a href=&#34;https://github.com/mack-a/v2ray-agent&#34;&gt;mack-a 八合一脚本&lt;/a&gt; 为例。编辑 &lt;code&gt;/etc/v2ray-agent/xray/conf/10_ipv4_outbounds.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;outbounds&#34;: [&#xA;        {&#xA;            &#34;protocol&#34;: &#34;freedom&#34;&#xA;        },&#xA;        {&#xA;            &#34;tag&#34;: &#34;media-unlock&#34;,&#xA;            &#34;protocol&#34;: &#34;socks&#34;,&#xA;            &#34;settings&#34;: {&#xA;                &#34;servers&#34;: [&#xA;                    {&#xA;                        &#34;address&#34;: &#34;127.0.0.1&#34;,&#xA;                        &#34;port&#34;: 40000,&#xA;                        &#34;users&#34;: []&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    ],&#xA;    &#34;routing&#34;: {&#xA;        &#34;domainStrategy&#34;: &#34;AsIs&#34;,&#xA;        &#34;rules&#34;: [&#xA;            {&#xA;                &#34;type&#34;: &#34;field&#34;,&#xA;                &#34;domain&#34;: [&#xA;                    &#34;geosite:netflix&#34;,&#xA;                    &#34;domain:ip.gs&#34;&#xA;                ],&#xA;                &#34;outboundTag&#34;: &#34;media-unlock&#34;&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Netflix,Google 分流到 Client WARP 网络接口的方法&lt;/h2&gt; &#xA;&lt;p&gt;感谢 LUDAN 老师提供的网络接口分流配置模板，注意：172.16.0.2 为 CloudFlareWARP 网络接口的 IP&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;outbounds&#34;:[&#xA;        {&#xA;            &#34;tag&#34;:&#34;INTERNET_OUT&#34;,&#xA;            &#34;protocol&#34;:&#34;freedom&#34;,&#xA;            &#34;settings&#34;:{&#xA;                &#34;domainStrategy&#34;:&#34;UseIP&#34;&#xA;            }&#xA;        },&#xA;        {&#xA;            &#34;tag&#34;:&#34;CLI_OUT&#34;,&#xA;            &#34;protocol&#34;:&#34;freedom&#34;,&#xA;            &#34;settings&#34;:{&#xA;                &#34;domainStrategy&#34;:&#34;UseIPv4&#34;&#xA;            },&#xA;            &#34;sendThrough&#34;:&#34;172.16.0.2&#34;&#xA;        }&#xA;    ],&#xA;    &#34;routing&#34;:{&#xA;        &#34;rules&#34;:[&#xA;            {&#xA;                &#34;type&#34;:&#34;field&#34;,&#xA;                &#34;outboundTag&#34;:&#34;CLI_OUT&#34;,&#xA;                &#34;domain&#34;:[&#xA;                    &#34;geosite:google&#34;,&#xA;                    &#34;geosite:netflix&#34;,&#xA;                    &#34;domain:ip.gs&#34;&#xA;                ]&#xA;            },&#xA;            {&#xA;                &#34;type&#34;:&#34;field&#34;,&#xA;                &#34;outboundTag&#34;:&#34;INTERNET_OUT&#34;,&#xA;                &#34;network&#34;:&#34;udp,tcp&#34;&#xA;            }&#xA;        ]&#xA;    },&#xA;    &#34;dns&#34;:{&#xA;        &#34;servers&#34;:[&#xA;            &#34;1.1.1.1&#34;,&#xA;            &#34;1.0.0.1&#34;&#xA;        ]&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;warp-go 运行脚本&lt;/h2&gt; &#xA;&lt;p&gt;首次运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh &amp;amp;&amp;amp; bash warp-go.sh [option] [lisence]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;再次运行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;warp-go [option] [lisence]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;[option] 变量1 变量2&lt;/th&gt; &#xA;   &lt;th&gt;具体动作说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;h&lt;/td&gt; &#xA;   &lt;td&gt;帮助&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;原无论任何状态 -&amp;gt; WARP IPv4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4 lisence name&lt;/td&gt; &#xA;   &lt;td&gt;把 WARP+ Lisence 和设备名添加进去，如 &lt;code&gt;bash wire-go 4 N5670ljg-sS9jD334-6o6g4M9F Goodluck&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;原无论任何状态 -&amp;gt; WARP IPv6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;d&lt;/td&gt; &#xA;   &lt;td&gt;原无论任何状态 -&amp;gt; WARP 双栈&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;o&lt;/td&gt; &#xA;   &lt;td&gt;warp-go 开关，脚本主动判断当前状态，自动开或关&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;u&lt;/td&gt; &#xA;   &lt;td&gt;卸载 warp-go&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a&lt;/td&gt; &#xA;   &lt;td&gt;免费 WARP 账户升级 WARP+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a lisence name&lt;/td&gt; &#xA;   &lt;td&gt;在上面基础上把 WARP+ Lisence 和设备名添加进去，如 &lt;code&gt;bash menu.sh a N5670ljg-sS9jD334-6o6g4M9F Goodluck&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v&lt;/td&gt; &#xA;   &lt;td&gt;同步脚本至最新版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;其他或空值&lt;/td&gt; &#xA;   &lt;td&gt;菜单界面&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;WARP+ License 及 ID 获取&lt;/h2&gt; &#xA;&lt;p&gt;以下是使用WARP和Team后 Argo 2.0 的官方介绍:&lt;a href=&#34;https://blog.cloudflare.com/argo-v2/&#34;&gt;Argo 2.0: Smart Routing Learns New Tricks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;引用Luminous大神原话：实际测试WARP+在访问非CF的网站速度上和免费版没有差异，只有在访问CloudFlare的站点时付费版会通过Argo类似的技术通过与目标较近的数据中心前往源站，而免费版是仅限于连接地前往源站，仅此而已。&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/62703343/136070323-47f2600a-13e4-4eb0-a64d-d7eb805c28e2.png&#34; width=&#34;70%&#34;&gt; &#xA;&lt;h2&gt;WARP 网络接口数据，临时、永久关闭和开启&lt;/h2&gt; &#xA;&lt;p&gt;WireGuard 网络接口数据，查看 &lt;code&gt;wg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;临时关闭和开启 WARP（reboot重启后恢复开启） &lt;code&gt;warp o&lt;/code&gt; 官方原始指令 &lt;code&gt;wg-quick down wgcf&lt;/code&gt; ，恢复启动 &lt;code&gt;wg-quick up wgcf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;禁止开机启动 &lt;code&gt;systemctl disable --now wg-quick@wgcf&lt;/code&gt;,恢复开机启动 &lt;code&gt;systemctl enable --now wg-quick@wgcf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WARP Teams 获取并用于 Linux 的方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;感谢 TonyLCH 提供的资讯 &lt;a href=&#34;https://github.com/fscarmen/warp/issues/26&#34;&gt;#26&lt;/a&gt; ，由于Team是无限制的，省去了刷 WARP+ 流量。方法大体： 1.安装通安卓模拟器，并在上面安装 1.1.1.1 apk连上 2.连上 teams 后抓包，把获取到的信息替换到wgcf.conf配置文件里&lt;/p&gt; &lt;p&gt;具体原创文章:&lt;a href=&#34;https://parkercs.tech/cloudflare-for-teams-wireguard-config/&#34;&gt;Cloudflare for Teams Wireguard Config&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download 下载:&lt;br&gt; 1、 Android Studio: &lt;a href=&#34;https://redirector.gvt1.com/edgedl/android/studio/install/2020.3.1.26/android-studio-2020.3.1.26-mac.dmg&#34;&gt;MAC&lt;/a&gt; &lt;a href=&#34;https://redirector.gvt1.com/edgedl/android/studio/install/2020.3.1.26/android-studio-2020.3.1.26-windows.exe&#34;&gt;WIN&lt;/a&gt;&lt;br&gt; 2、 Android platform-tools: &lt;a href=&#34;https://dl.google.com/android/repository/platform-tools-latest-darwin.zip&#34;&gt;MAC&lt;/a&gt; &lt;a href=&#34;https://dl.google.com/android/repository/platform-tools-latest-windows.zip&#34;&gt;WIN&lt;/a&gt;&lt;br&gt; 3、 1.1.1.1: Faster &amp;amp; Safer Internet V6.10: &lt;a href=&#34;https://apkpure.com/cn/1-1-1-1-faster-safer-internet/com.cloudflare.onedotonedotonedotone/download/2158-APK-d58edfa7c40ff1891244c556b872f18d?from=versions%2Fversion&#34;&gt;Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WARP原理&lt;/h2&gt; &#xA;&lt;p&gt;WARP是CloudFlare提供的一项基于WireGuard的网络流量安全及加速服务，能够让你通过连接到CloudFlare的边缘节点实现隐私保护及链路优化。&lt;/p&gt; &#xA;&lt;p&gt;其连接入口为双栈（IPv4/IPv6均可），且连接后能够获取到由CF提供基于NAT的IPv4和IPv6地址，因此我们的单栈服务器可以尝试连接到WARP来获取额外的网络连通性支持。这样我们就可以让仅具有IPv6的服务器访问IPv4，也能让仅具有IPv4的服务器获得IPv6的访问能力。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;为仅IPv6服务器添加IPv4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;原理如图，IPv4的流量均被WARP网卡接管，实现了让IPv4的流量通过WARP访问外部网络。 &lt;img src=&#34;https://user-images.githubusercontent.com/62703343/135735404-1389d022-e5c5-4eb8-9655-f9f065e3c92e.png&#34; width=&#34;70%&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;为仅IPv4服务器添加IPv6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;原理如图，IPv6的流量均被WARP网卡接管，实现了让IPv6的流量通过WARP访问外部网络。 &lt;img src=&#34;https://user-images.githubusercontent.com/62703343/135735414-01321b0b-887e-43d6-ad68-a74db20cfe84.png&#34; width=&#34;70%&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;双栈服务器置换网络&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;有时我们的服务器本身就是双栈的，但是由于种种原因我们可能并不想使用其中的某一种网络，这时也可以通过WARP接管其中的一部分网络连接隐藏自己的IP地址。至于这样做的目的，最大的意义是减少一些滥用严重机房出现验证码的概率；同时部分内容提供商将WARP的落地IP视为真实用户的原生IP对待，能够解除一些基于IP识别的封锁。 &lt;img src=&#34;https://user-images.githubusercontent.com/62703343/135735419-50805ed6-20ea-4440-93b4-5bcc6f2aca9b.png&#34; width=&#34;70%&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;网络性能方面：内核集成＞内核模块＞wireguard-go&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Linux 5.6 及以上内核则已经集成了 WireGuard ，可以用 &lt;code&gt;hostnamectl&lt;/code&gt;或&lt;code&gt;uname -r&lt;/code&gt;查看版本。&lt;/p&gt; &#xA;&lt;p&gt;甲骨文是 KVM 完整虚拟化的 VPS 主机，而官方系统由于版本较低，在不更换内核的前提下选择 &#34;内核模块&#34; 方案。如已升级内核在5.6及以上，将会自动选择 “内核集成” 方案。&lt;/p&gt; &#xA;&lt;p&gt;EUserv是 LXC 非完整虚拟化 VPS 主机，共享宿主机内核，不能更换内核，只能选择 &#34;wireguard-go&#34; 方案。&lt;/p&gt; &#xA;&lt;h2&gt;鸣谢下列作者的文章和项目&lt;/h2&gt; &#xA;&lt;p&gt;互联网永远不会忘记，但人们会。&lt;/p&gt; &#xA;&lt;p&gt;技术文章或相关项目（排名不分先后）:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;P3terx: &lt;a href=&#34;https://p3terx.com/archives/use-cloudflare-warp-to-add-extra-ipv4-or-ipv6-network-support-to-vps-servers-for-free.html&#34;&gt;https://p3terx.com/archives/use-cloudflare-warp-to-add-extra-ipv4-or-ipv6-network-support-to-vps-servers-for-free.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;P3terx: &lt;a href=&#34;https://github.com/P3TERX/warp.sh/raw/main/warp.sh&#34;&gt;https://github.com/P3TERX/warp.sh/blob/main/warp.sh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;猫大: &lt;a href=&#34;https://github.com/Oreomeow&#34;&gt;https://github.com/Oreomeow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Luminous: &lt;a href=&#34;https://luotianyi.vc/5252.html&#34;&gt;https://luotianyi.vc/5252.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hiram: &lt;a href=&#34;https://hiram.wang/cloudflare-wrap-vps&#34;&gt;https://hiram.wang/cloudflare-wrap-vps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cloudflare: &lt;a href=&#34;https://developers.cloudflare.com/warp-client/setting-up/linux&#34;&gt;https://developers.cloudflare.com/warp-client/setting-up/linux&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://blog.cloudflare.com/announcing-warp-for-linux-and-proxy-mode/&#34;&gt;https://blog.cloudflare.com/announcing-warp-for-linux-and-proxy-mode/&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://blog.cloudflare.com/argo-v2/&#34;&gt;https://blog.cloudflare.com/argo-v2/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WireGuard: &lt;a href=&#34;https://lists.zx2c4.com/pipermail/wireguard/2017-December/002201.html&#34;&gt;https://lists.zx2c4.com/pipermail/wireguard/2017-December/002201.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parker C. Stephens: &lt;a href=&#34;https://parkercs.tech/cloudflare-for-teams-wireguard-config/&#34;&gt;https://parkercs.tech/cloudflare-for-teams-wireguard-config/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Anemone: &lt;a href=&#34;https://cutenico.best/posts/blogs/cloudflare-warp-fixed-youtube-location/&#34;&gt;https://cutenico.best/posts/blogs/cloudflare-warp-fixed-youtube-location/&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/acacia233/Project-WARP-Unlock&#34;&gt;https://github.com/acacia233/Project-WARP-Unlock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;wangying202: &lt;a href=&#34;https://blog.csdn.net/wangying202/article/details/113178159&#34;&gt;https://blog.csdn.net/wangying202/article/details/113178159&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LUBAN: &lt;a href=&#34;https://github.com/HXHGTS/Cloudflare_WARP_Connect&#34;&gt;https://github.com/HXHGTS/Cloudflare_WARP_Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;valetzx: &lt;a href=&#34;https://gitlab.com/valetzx/pubfile&#34;&gt;https://gitlab.com/valetzx/pubfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;所有的热心网友们&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;服务提供（排名不分先后）:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CloudFlare Warp(+): &lt;a href=&#34;https://1.1.1.1/&#34;&gt;https://1.1.1.1/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WGCF 项目原作者: &lt;a href=&#34;https://github.com/ViRb3/wgcf/&#34;&gt;https://github.com/ViRb3/wgcf/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Coia 和 warp-go 团队: &lt;a href=&#34;https://gitlab.com/ProjectWARP/warp-go&#34;&gt;https://gitlab.com/ProjectWARP/warp-go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WireGuard-GO 官方: &lt;a href=&#34;https://git.zx2c4.com/wireguard-go/&#34;&gt;https://git.zx2c4.com/wireguard-go/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ylx2016 的成熟作品: &lt;a href=&#34;https://github.com/ylx2016/Linux-NetSpeed&#34;&gt;https://github.com/ylx2016/Linux-NetSpeed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ALIILAPRO 的成熟作品: &lt;a href=&#34;https://github.com/ALIILAPRO/warp-plus-cloudflare&#34;&gt;https://github.com/ALIILAPRO/warp-plus-cloudflare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;mixool 的成熟作品: &lt;a href=&#34;https://github.com/azples/across/tree/main/wireguard&#34;&gt;https://github.com/azples/across/tree/main/wireguard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;luoxue-bot 的成熟作品:&lt;a href=&#34;https://github.com/luoxue-bot/warp_auto_change_ip&#34;&gt;https://github.com/luoxue-bot/warp_auto_change_ip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;lmc999 的成熟作品: &lt;a href=&#34;https://github.com/lmc999/RegionRestrictionCheck&#34;&gt;https://github.com/lmc999/RegionRestrictionCheck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WireProxy 作者: &lt;a href=&#34;https://github.com/octeep/wireproxy&#34;&gt;https://github.com/octeep/wireproxy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;获取公网 IP 及归属地查询: &lt;a href=&#34;https://ifconfig.co/&#34;&gt;https://ifconfig.co/&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ip.gs/&#34;&gt;https://ip.gs/&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://ip.sb/&#34;&gt;https://ip.sb/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;统计PV网:&lt;a href=&#34;https://hits.seeyoufarm.com/&#34;&gt;https://hits.seeyoufarm.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Coia 的网页版提出 Teams Token: &lt;a href=&#34;https://warp-team-api.herokuapp.com/&#34;&gt;https://warp-team-api.herokuapp.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CloudFlare WARP 全球站点和服务状态:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Operational = 正常。Re-routed = 检修状态: &lt;a href=&#34;https://www.cloudflarestatus.com/&#34;&gt;https://www.cloudflarestatus.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>wmnnd/nginx-certbot</title>
    <updated>2023-05-01T02:25:06Z</updated>
    <id>tag:github.com,2023-05-01:/wmnnd/nginx-certbot</id>
    <link href="https://github.com/wmnnd/nginx-certbot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Boilerplate configuration for nginx and certbot with docker-compose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Boilerplate for nginx with Let’s Encrypt on docker-compose&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This repository is accompanied by a &lt;a href=&#34;https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71&#34;&gt;step-by-step guide on how to set up nginx and Let’s Encrypt with Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;init-letsencrypt.sh&lt;/code&gt; fetches and ensures the renewal of a Let’s Encrypt certificate for one or multiple domains in a docker-compose setup with nginx. This is useful when you need to set up nginx as a reverse proxy for an application.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/#install-compose&#34;&gt;Install docker-compose&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository: &lt;code&gt;git clone https://github.com/wmnnd/nginx-certbot.git .&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify configuration:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add domains and email addresses to init-letsencrypt.sh&lt;/li&gt; &#xA; &lt;li&gt;Replace all occurrences of example.org with primary domain (the first one you added to init-letsencrypt.sh) in data/nginx/app.conf&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the init script:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; ./init-letsencrypt.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the server:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Got questions?&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to post questions in the comment section of the &lt;a href=&#34;https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71&#34;&gt;accompanying guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All code in this repository is licensed under the terms of the &lt;code&gt;MIT License&lt;/code&gt;. For further information please refer to the &lt;code&gt;LICENSE&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vcheckzen/KeepAliveE5</title>
    <updated>2023-05-01T02:25:06Z</updated>
    <id>tag:github.com,2023-05-01:/vcheckzen/KeepAliveE5</id>
    <link href="https://github.com/vcheckzen/KeepAliveE5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Set the following repo secrets, disable the security defaults of your E5 admin accounts, then trigger &lt;code&gt;Register APP&lt;/code&gt; workflow manually. Read &lt;a href=&#34;https://logi.im/script/permanently-keeping-an-office-e5-account.html&#34;&gt;The Intro&lt;/a&gt; for step by step instructions.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PAT&lt;/td&gt; &#xA;   &lt;td&gt;Github personal access token with &lt;code&gt;workflow&lt;/code&gt; permission&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;USER&lt;/td&gt; &#xA;   &lt;td&gt;E5 admin emails line separated, no leading and trailing spaces&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PASSWD&lt;/td&gt; &#xA;   &lt;td&gt;E5 admin passwords line separated, no leading and trailing spaces&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;code&gt;version@202304291518&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>