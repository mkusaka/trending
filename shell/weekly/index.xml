<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-25T02:05:41Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aleskxyz/reality-ezpz</title>
    <updated>2023-06-25T02:05:41Z</updated>
    <id>tag:github.com,2023-06-25:/aleskxyz/reality-ezpz</id>
    <link href="https://github.com/aleskxyz/reality-ezpz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Install sing-box/xray and configure vless for reality or tls (letsencrypt) over different transport protocols (tcp, http, grpc and websocket) with user management capability in CLI and TUI by a single command in docker compose!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;reality-ezpz&lt;/h1&gt; &#xA;&lt;p&gt;Install and configure vless with reality or TLS on your linux server by executing a single command!&lt;/p&gt; &#xA;&lt;p&gt;This script:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installs docker with compose plugin in your server&lt;/li&gt; &#xA; &lt;li&gt;Generates docker-compose.yml and sing-box/xray configuration for vless protocol for reality and tls&lt;/li&gt; &#xA; &lt;li&gt;Create Cloudflare warp account and configure warp as outbound&lt;/li&gt; &#xA; &lt;li&gt;Generates client configuration string and QRcode&lt;/li&gt; &#xA; &lt;li&gt;Gets and renews valid certificate from Letsencrypt for TLS encryption&lt;/li&gt; &#xA; &lt;li&gt;Fine-tunes kernel tunables&lt;/li&gt; &#xA; &lt;li&gt;Is designed by taking security considerations into account to make the server undetectable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generates client configuration string&lt;/li&gt; &#xA; &lt;li&gt;Generates client configuration QRcode&lt;/li&gt; &#xA; &lt;li&gt;You can choose between xray or sing-box core&lt;/li&gt; &#xA; &lt;li&gt;You can choose between reality or TLS security protocol&lt;/li&gt; &#xA; &lt;li&gt;You can use a Text-based user interface (TUI)&lt;/li&gt; &#xA; &lt;li&gt;You can create multiple user accounts&lt;/li&gt; &#xA; &lt;li&gt;You can regenerate configuration and keys&lt;/li&gt; &#xA; &lt;li&gt;You can change SNI domain&lt;/li&gt; &#xA; &lt;li&gt;You can change transport protocol (tcp, http, grpc, ws)&lt;/li&gt; &#xA; &lt;li&gt;You can get valid TLS certificate with Letsencrypt&lt;/li&gt; &#xA; &lt;li&gt;You can block malware and adult contents&lt;/li&gt; &#xA; &lt;li&gt;Supports natvps.net servers&lt;/li&gt; &#xA; &lt;li&gt;Use Cloudflare WARP to hide your outbound traffic&lt;/li&gt; &#xA; &lt;li&gt;Supports Cloudflare warp+&lt;/li&gt; &#xA; &lt;li&gt;Install with a single command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported OS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 22.04&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 18.04&lt;/li&gt; &#xA; &lt;li&gt;Debian 11&lt;/li&gt; &#xA; &lt;li&gt;Debian 10&lt;/li&gt; &#xA; &lt;li&gt;CentOS Stream 9&lt;/li&gt; &#xA; &lt;li&gt;CentOS Stream 8&lt;/li&gt; &#xA; &lt;li&gt;CentOS 7&lt;/li&gt; &#xA; &lt;li&gt;Fedora 37&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;You can start using this script with default configuration by copy and paste the line below in terminal.&lt;/p&gt; &#xA;&lt;p&gt;This command will configure &lt;code&gt;sing-box&lt;/code&gt; with &lt;code&gt;reality&lt;/code&gt; security protocol over &lt;code&gt;tcp&lt;/code&gt; transport protocol on port &lt;code&gt;443&lt;/code&gt; for &lt;code&gt;www.google.com&lt;/code&gt; SNI domain by default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or (if the above command dosen&#39;t work):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://raw.githubusercontent.com/aleskxyz/reality-ezpz/master/reality-ezpz.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After a while you will get configuration string and QR code: &lt;img src=&#34;https://user-images.githubusercontent.com/39186039/232563871-0140e10a-22b4-4653-9bc9-cdba519a8b41.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can run TUI with &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--menu&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then you will see management menu in your terminal: &lt;img src=&#34;https://github.com/aleskxyz/reality-ezpz/assets/39186039/a727148c-1a11-4702-80f3-ab8b46d916af&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: reality-ezpz.sh [-t|--transport=tcp|http|grpc|ws] [-d|--domain=&amp;lt;domain&amp;gt;] [--server=&amp;lt;server&amp;gt;] [--regenerate] [--default]&#xA;  [-r|--restart] [-p|--path=&amp;lt;path&amp;gt;] [--enable-safenet=true|false] [--port=&amp;lt;port&amp;gt;] [--enable-natvps=true|false] [-c|--core=xray|sing-box]&#xA;  [--enable-warp=true|false] [--warp-license=&amp;lt;license&amp;gt;] [--security=reality|tls-valid|tls-invalid] [-m|--menu] [--show-server-config] &#xA;  [--add-user=&amp;lt;username&amp;gt;] [--lists-users] [--show-user=&amp;lt;username&amp;gt;] [--delete-user=&amp;lt;username&amp;gt;] [-u|--uninstall]&#xA;&#xA;  -t, --transport &amp;lt;tcp|http|grpc|ws&amp;gt; Transport protocol (http, grpc, tcp default: tcp)&#xA;  -d, --domain &amp;lt;domain&amp;gt;     Domain to use as SNI (default: www.google.com)&#xA;      --server &amp;lt;server&amp;gt;     IP address or domain name of server (Must be a valid domain if using ws)&#xA;      --regenerate          Regenerate public and private keys&#xA;      --default             Restore default configuration&#xA;  -r  --restart             Restart services&#xA;  -u, --uninstall           Uninstall reality&#xA;  -p, --path &amp;lt;path&amp;gt;         Absolute path to configuration directory (default: /root/reality)&#xA;      --enable-safenet &amp;lt;true|false&amp;gt; Enable or disable safenet (blocking malware and adult content)&#xA;      --port &amp;lt;port&amp;gt;         Server port (default: 443)&#xA;      --enable-natvps &amp;lt;true|false&amp;gt; Enable or disable natvps.net support&#xA;      --enable-warp &amp;lt;true|false&amp;gt; Enable or disable Cloudflare warp&#xA;      --warp-license &amp;lt;warp-license&amp;gt; Add Cloudflare warp+ license&#xA;  -c  --core &amp;lt;sing-box|xray&amp;gt; Select core (xray, sing-box, default: sing-box)&#xA;      --security &amp;lt;reality|tls-valid|tls-invalid&amp;gt; Select type of TLS encryption (reality, tls-valid, tls-invalid, default: reality)&#xA;  -m  --menu                Show menu&#xA;      --show-server-config  Print server configuration&#xA;      --add-user &amp;lt;username&amp;gt; Add new user&#xA;      --list-users          List all users&#xA;      --show-user &amp;lt;username&amp;gt; Shows the config and QR code of the user&#xA;      --delete-user &amp;lt;username&amp;gt; Delete the user&#xA;  -h, --help                Display this help message&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Clients&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/2dust/v2rayNg/releases&#34;&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/MatsuriDayo/NekoBoxForAndroid/releases&#34;&gt;NekoBox&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;iOS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/wings-x-client/id6446119727&#34;&gt;Wings X&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/shadowrocket/id932747118&#34;&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/app/stash/id1596063349&#34;&gt;Stash&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/2dust/v2rayN/releases&#34;&gt;v2rayN&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security Options&lt;/h2&gt; &#xA;&lt;p&gt;This script can configure the service with 3 types of security options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;reality&lt;/li&gt; &#xA; &lt;li&gt;tls-valid&lt;/li&gt; &#xA; &lt;li&gt;tls-invalid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default &lt;code&gt;reality&lt;/code&gt; is configured but you can change the security protocol with &lt;code&gt;--security&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;tls-valid&lt;/code&gt; option will use Letsencrypt to get a valid certificate for you server. So you have to assign a valid domain or subdomain to your server with &lt;code&gt;--server &amp;lt;domain&amp;gt;&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;tls-invalid&lt;/code&gt; option is same as &lt;code&gt;tls-valid&lt;/code&gt; but the certificates are self-signed and you don&#39;t need to assign a domain or subdomain to your server.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility and recommendation&lt;/h2&gt; &#xA;&lt;p&gt;CDN compatibility table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Cloudflare&lt;/th&gt; &#xA;   &lt;th&gt;ArvanCloud&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reality&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-invalid&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tls-valid&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tcp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;http&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;grpc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ws&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to enable &lt;code&gt;grpc&lt;/code&gt; or &lt;code&gt;websocket&lt;/code&gt; in Cloudflare if you want to use the corresponding transport protocols.&lt;/li&gt; &#xA; &lt;li&gt;You have to configure CDN provider to use HTTPS for connecting to your server.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;ws&lt;/code&gt; transport protocol is not compatible with &lt;code&gt;reality&lt;/code&gt; security option.&lt;/li&gt; &#xA; &lt;li&gt;Avoid using &lt;code&gt;tcp&lt;/code&gt; transport protocol with &lt;code&gt;tls-valid&lt;/code&gt; or &lt;code&gt;tls-invalid&lt;/code&gt; security options.&lt;/li&gt; &#xA; &lt;li&gt;Avoid using &lt;code&gt;tls-invalid&lt;/code&gt; security option. Get a domain and use &lt;code&gt;tls-valid&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Do not change the port to something other than &lt;code&gt;443&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;sing-box&lt;/code&gt; core has better performance.&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/MatsuriDayo/NekoBoxForAndroid/releases&#34;&gt;NekoBox&lt;/a&gt; for Android is recommended.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;User Management&lt;/h2&gt; &#xA;&lt;p&gt;You can add, view and delete multiple user account with this script easily!&lt;/p&gt; &#xA;&lt;h3&gt;Add User&lt;/h3&gt; &#xA;&lt;p&gt;You can add additional user by using &lt;code&gt;--add-user&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --add-user user1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will create &lt;code&gt;test1&lt;/code&gt; as a new user.&lt;/p&gt; &#xA;&lt;p&gt;Notice: Username can only contains A-Z, a-z and 0-9&lt;/p&gt; &#xA;&lt;h3&gt;List Users&lt;/h3&gt; &#xA;&lt;p&gt;You can view a list of all users by using &lt;code&gt;--list-users&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --list-users&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show User Configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can get config string and QR code of the user for importing by using &lt;code&gt;--show-user&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --show-user user1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will print config string and QR code of &lt;code&gt;user1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Delete User&lt;/h3&gt; &#xA;&lt;p&gt;You can delete a user by using &lt;code&gt;--delete-user&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --delete-user user1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will delete &lt;code&gt;user1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You can change script defaults by using different arguments.&lt;/p&gt; &#xA;&lt;p&gt;Your configuration will be saved and restored in each execution. So You can run the script multiple time with out any problem.&lt;/p&gt; &#xA;&lt;h3&gt;Change SNI domain&lt;/h3&gt; &#xA;&lt;p&gt;Reality protocol will use the public certificate of SNI domain.&lt;/p&gt; &#xA;&lt;p&gt;Default SNI domain is &lt;code&gt;www.google.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can change it by using &lt;code&gt;--domain&lt;/code&gt; or &lt;code&gt;-d&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -d yahoo.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change transport protocol&lt;/h3&gt; &#xA;&lt;p&gt;Default transport protocol is &lt;code&gt;tcp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can change it by using &lt;code&gt;--transport&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -t http&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Valid options are &lt;code&gt;tcp&lt;/code&gt;,&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;grpc&lt;/code&gt; and &lt;code&gt;ws&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ws&lt;/code&gt; is not compatible with reality protocol. You have to use &lt;code&gt;tls-valid&lt;/code&gt; or &lt;code&gt;tls-invalid&lt;/code&gt; with it.&lt;/p&gt; &#xA;&lt;h3&gt;Block malware and adult contents&lt;/h3&gt; &#xA;&lt;p&gt;You can block malware and adult contents by using &lt;code&gt;--enable-safenet&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --enable-safenet true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can disable this feature with &lt;code&gt;--enable-safenet false&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h3&gt;Installing on natvps.net servers&lt;/h3&gt; &#xA;&lt;p&gt;By using &lt;code&gt;--enable-natvps&lt;/code&gt; option you can use this script on natvps.net servers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --enable-natvps true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will find first available port automatically so you don&#39;t need to use &lt;code&gt;--port&lt;/code&gt; option while using it.&lt;/p&gt; &#xA;&lt;p&gt;You can disable feature with &lt;code&gt;--enable-natvps false&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;It seems that natvps.net servers have some dns configuration problems and the &lt;code&gt;curl&lt;/code&gt; package is not installed in them by default.&lt;/p&gt; &#xA;&lt;p&gt;You can solve these problems by running this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;grep -q &#34;^DNS=1.1.1.1$&#34; /etc/systemd/resolved.conf || echo &#34;DNS=1.1.1.1&#34; &amp;gt;&amp;gt; /etc/systemd/resolved.conf &amp;amp;&amp;amp; systemctl restart systemd-resolved &amp;amp;&amp;amp; apt update &amp;amp;&amp;amp; apt install curl -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get runnig configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can get the running configuration with &lt;code&gt;--show-server-config&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --show-server-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Regenerate configuration keys&lt;/h3&gt; &#xA;&lt;p&gt;You can regenerate keys by using &lt;code&gt;--regenerate&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --regenerate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All other configuration will be same as before.&lt;/p&gt; &#xA;&lt;h3&gt;Restart services&lt;/h3&gt; &#xA;&lt;p&gt;You can restart the service by using &lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--restart&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Restore default configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can restore default configuration by using &lt;code&gt;--default&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;User account will not change with this option.&lt;/p&gt; &#xA;&lt;h3&gt;Uninstall&lt;/h3&gt; &#xA;&lt;p&gt;You can delete configuration and services by using &lt;code&gt;--uninstall&lt;/code&gt; or &lt;code&gt;-u&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -u&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change configuration path&lt;/h3&gt; &#xA;&lt;p&gt;Default configuration path is &lt;code&gt;$HOME/reality&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can change it by using &lt;code&gt;--path&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -p /opt/reality&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The path should be absolute path.&lt;/p&gt; &#xA;&lt;h3&gt;Change port&lt;/h3&gt; &#xA;&lt;p&gt;Notice: Do not change default port. This may block your IP!&lt;/p&gt; &#xA;&lt;p&gt;Default port is &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In case of using &lt;code&gt;tls-valid&lt;/code&gt; security option, port &lt;code&gt;80&lt;/code&gt; has to be available for Letsencrypt challenge.&lt;/p&gt; &#xA;&lt;p&gt;You can change it by using &lt;code&gt;--port&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --port 8443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Change engine core&lt;/h3&gt; &#xA;&lt;p&gt;Default engine core is sing-box but you can also switch to xray by using &lt;code&gt;--core&lt;/code&gt; or &lt;code&gt;-c&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -c xray&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Valid options are &lt;code&gt;xray&lt;/code&gt; and &lt;code&gt;sing-box&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Text-based user interface (TUI)&lt;/h3&gt; &#xA;&lt;p&gt;You can also use the TUI for changing the configuration of the service.&lt;/p&gt; &#xA;&lt;p&gt;To access to TUI you can use &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--menu&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) -m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cloudflare WARP&lt;/h2&gt; &#xA;&lt;p&gt;This script uses official Cloudflare WARP client for connecting to Cloudflare network and send all outbound traffic to Cloudflare server. So your servers address will be masked by Cloudflare IPs. This gives you a better web surffing experience due to less captcha challenges and also resolves some websites limitations on your servers IP.&lt;/p&gt; &#xA;&lt;p&gt;You can enable Cloudflare WARP by using &lt;code&gt;--enable-warp true&lt;/code&gt; option. This script will create and register a free WAPR account and use it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --enable-warp true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Free account has traffic limitation and lower performance in comparison with WARP+ account which needs license.&lt;/p&gt; &#xA;&lt;p&gt;You can either buy an WARP+ Unlimited license or get a free WARP+ license from this telegram bot: &lt;a href=&#34;https://t.me/generatewarpplusbot&#34;&gt;https://t.me/generatewarpplusbot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After getting a license from that telegram bot, you can use the license for your server with &lt;code&gt;--warp-license&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --warp-license aaaaaaaa-bbbbbbbb-cccccccc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use each warp+ license on 4 devices only.&lt;/p&gt; &#xA;&lt;p&gt;You can disable Cloudflare WARP with &lt;code&gt;--enable-warp false&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --enable-warp false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;You can combine different options together.&lt;/p&gt; &#xA;&lt;p&gt;We want to setup a server with these configurations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;grpc&lt;/code&gt; transport protocol&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;www.wikipedia.org&lt;/code&gt; as SNI domain&lt;/li&gt; &#xA; &lt;li&gt;Block adult contents&lt;/li&gt; &#xA; &lt;li&gt;Enable Cloudflare WARP&lt;/li&gt; &#xA; &lt;li&gt;Set Cloudflare WARP+ license&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So we need to execute this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -sL https://bit.ly/realityez) --transport grpc --domain www.wikipedia.com --enable-safenet true -enable-warp true --warp-license d34tgvde-gf73xvsj-23acfbg7&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>0xKayala/NucleiFuzzer</title>
    <updated>2023-06-25T02:05:41Z</updated>
    <id>tag:github.com,2023-06-25:/0xKayala/NucleiFuzzer</id>
    <link href="https://github.com/0xKayala/NucleiFuzzer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NucleiFuzzer is a powerful automation tool for detecting xss,sqli,ssrf,open-redirect..etc vulnerabilities in web applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NucleiFuzzer = Nuclei + Paramspider&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;NucleiFuzzer&lt;/code&gt; is an automation tool that combines &lt;code&gt;ParamSpider&lt;/code&gt; and &lt;code&gt;Nuclei&lt;/code&gt; to enhance web application security testing. It uses &lt;code&gt;ParamSpider&lt;/code&gt; to identify potential entry points and &lt;code&gt;Nuclei&#39;s&lt;/code&gt; templates to scan for vulnerabilities. &lt;code&gt;NucleiFuzzer&lt;/code&gt; streamlines the process, making it easier for security professionals and web developers to detect and address security risks efficiently. Download &lt;code&gt;NucleiFuzzer&lt;/code&gt; to protect your web applications from vulnerabilities and attacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;Nuclei&lt;/code&gt; + &lt;code&gt;Paramspider&lt;/code&gt; = &lt;code&gt;NucleiFuzzer&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tools included:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/devanshbatham/ParamSpider&#34;&gt;ParamSpider&lt;/a&gt; &lt;code&gt;git clone https://github.com/devanshbatham/ParamSpider.git&lt;/code&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;Nuclei&lt;/a&gt; &lt;code&gt;git clone https://github.com/projectdiscovery/nuclei.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Templates:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/projectdiscovery/fuzzing-templates&#34;&gt;Fuzzing Templates&lt;/a&gt; &lt;code&gt;git clone https://github.com/projectdiscovery/fuzzing-templates.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Screenshot&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/0xKayala/NucleiFuzzer/assets/16838353/4ca86392-684b-4224-8138-148d5c629642&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Output&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/0xKayala/NucleiFuzzer/assets/16838353/4bc2998b-b48d-4705-8ba7-16ff4c0aace7&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/0xKayala/NucleiFuzzer/assets/16838353/bf911936-1eed-42bc-b81f-35d71a8ebf49&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./NucleiFuzzer -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will display help for the tool. Here are the options it supports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;NucleiFuzzer is a powerful automation tool for detecting xss,sqli,ssrf,open-redirect..etc vulnerabilities in web applications&#xA;&#xA;Usage: ./NucleiFuzzer.sh [options]&#xA;&#xA;Options:&#xA;  -h, --help              Display help information&#xA;  -d, --domain &amp;lt;domain&amp;gt;   Domain to scan for xss,sqli,ssrf,open-redirect..etc vulnerabilities&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Steps to Install:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;git clone &lt;a href=&#34;https://github.com/0xKayala/NucleiFuzzer.git&#34;&gt;https://github.com/0xKayala/NucleiFuzzer.git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cd NucleiFuzzer&lt;/li&gt; &#xA; &lt;li&gt;sudo chmod +x NucleiFuzzer.sh&lt;/li&gt; &#xA; &lt;li&gt;./NucleiFuzzer.sh &lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Made by &lt;code&gt;Satya Prakash&lt;/code&gt; | &lt;code&gt;0xKayala&lt;/code&gt; &lt;br&gt; A &lt;code&gt;Security Researcher&lt;/code&gt; and &lt;code&gt;Bug Hunter&lt;/code&gt; &lt;br&gt; About me on &lt;code&gt;about.me/satyakayala&lt;/code&gt; Subscribe me on &lt;code&gt;Youtube.com/@0xKayala&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>codeedu/wsl2-docker-quickstart</title>
    <updated>2023-06-25T02:05:41Z</updated>
    <id>tag:github.com,2023-06-25:/codeedu/wsl2-docker-quickstart</id>
    <link href="https://github.com/codeedu/wsl2-docker-quickstart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Guia rápido do WSL2 + Docker&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://fullcycle.com.br/&#34; target=&#34;blank&#34;&gt;&lt;img src=&#34;https://fullcycle.com.br/wp-content/themes/fullcycle/assets/images/fullcycle-logo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Guia rápido do WSL2 + Docker&lt;/h1&gt; &#xA;&lt;p&gt;*Read this in other language: &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/README.en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sumário&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#o-que-%C3%A9-o-wsl2&#34;&gt;O que é o WSL2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#requisitos-m%C3%ADnimos&#34;&gt;Requisitos mínimos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instala%C3%A7%C3%A3o-do-wsl-2&#34;&gt;Instalação do WSL 2&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#windows-update&#34;&gt;Windows Update&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#atualizar-o-wsl&#34;&gt;Atualizar o WSL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#atribuir-a-vers%C3%A3o-default-do-wsl-para-a-vers%C3%A3o-2&#34;&gt;Atribuir a versão default do WSL para a versão 2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instale-o-ubuntu&#34;&gt;Instale o Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#opcional-alterar-a-vers%C3%A3o-de-uma-distribui%C3%A7%C3%A3o-do-linux-de-wsl-1-para-wsl-2&#34;&gt;(Opcional) Alterar a versão de uma distribuição do Linux de WSL 1 para WSL 2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instala%C3%A7%C3%A3o-do-wsl-2-via-windows-store&#34;&gt;Instalação do WSL 2 via Windows Store&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#opcionalmas-recomendado-usar-windows-terminal-como-terminal-padr%C3%A3o-de-desenvolvimento-para-windows&#34;&gt;(Opcional/Mas Recomendado) Usar Windows Terminal como terminal padrão de desenvolvimento para Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#o-que-o-wsl-2-pode-usar-de-recursos-da-sua-m%C3%A1quina&#34;&gt;O que o WSL 2 pode usar de recursos da minha máquina?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#o-que-%C3%A9-docker&#34;&gt;O que é o Docker&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#porque-usar-wsl-2--docker-para-desenvolvimento&#34;&gt;Porque usar WSL 2 + Docker para desenvolvimento&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#modos-de-usar-docker-no-windows&#34;&gt;Modo de usar Docker no Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#obsoleto-docker-toolbox&#34;&gt;(Obsoleto) Docker Toolbox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#obsoleto-docker-desktop-com-hyper-v&#34;&gt;(Obsoleto) Docker Desktop com Hyper-V&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-desktop-com-wsl2&#34;&gt;Docker Desktop com WSL 2&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-desktop-vantagens&#34;&gt;Vantagens&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-desktop-desvantagens&#34;&gt;Desvantagens&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-engine-docker-nativo-diretamente-instalado-no-wsl2&#34;&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-engine-vantagens&#34;&gt;Vantagens&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-engine-desvantagens&#34;&gt;Desvantagens&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#integrar-docker-com-wsl-2&#34;&gt;Integrar Docker com WSL 2&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#1---instalar-o-docker-com-docker-engine-docker-nativo&#34;&gt;1 - Instalar o Docker com Docker Engine (Docker Nativo)&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#erro-ao-iniciar-o-docker-no-ubuntu-2204&#34;&gt;Erro ao iniciar o Docker no Ubuntu 22.04&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#2---instalar-o-docker-com-docker-desktop&#34;&gt;2 - Instalar o Docker com Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#dicas-e-truques-b%C3%A1sicos-com-wsl-2&#34;&gt;Dicas e truques básicos com WSL 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#d%C3%BAvidas&#34;&gt;Dúvidas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#quer-dicas-como-ser-mais-produtivo-no-windows&#34;&gt;Quer dicas como ser mais produtivo no Windows?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;O que é o WSL2&lt;/h2&gt; &#xA;&lt;p&gt;Em 2016, a Microsoft anunciou a possibilidade de rodar o Linux dentro do Windows 10 como um subsistema e o nome a isto foi dado de &lt;strong&gt;WSL&lt;/strong&gt; ou &lt;strong&gt;Windows Subsystem for Linux&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;O acesso ao sistema de arquivos no Windows 10 pelo Linux era simples e rápido, porém não tínhamos uma execução completa do kernel do Linux, além de outros artefatos nativos e isto impossibilitava a execução de várias tarefas no Linux, uma delas é o Docker.&lt;/p&gt; &#xA;&lt;p&gt;Em 2019, a Microsoft anunciou o &lt;strong&gt;WSL 2&lt;/strong&gt;, com uma dinâmica aprimorada em relação a 1ª versão:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execução do kernel completo do Linux.&lt;/li&gt; &#xA; &lt;li&gt;Melhor desempenho para acesso aos arquivos dentro do Linux.&lt;/li&gt; &#xA; &lt;li&gt;Compatibilidade completa de chamada do sistema.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;O WSL 2 foi lançado oficialmente no dia &lt;strong&gt;28 de maio de 2020&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Com WSL 2 é possível executar Docker e outras ferramentas que dependem do Kernel do Linux usando o Windows 10/11.&lt;/p&gt; &#xA;&lt;p&gt;Compare as versões do WSL: &lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/wsl/compare-versions&#34;&gt;https://docs.microsoft.com/pt-br/windows/wsl/compare-versions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requisitos mínimos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows 10 Home ou Professional&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Versão 2004 ou superior (Build 19041 ou superior).&lt;/li&gt; &#xA;   &lt;li&gt;Versões mais antigas requerem a instalação manual do WSL 2. Ver tutorial &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install-manual&#34;&gt;https://learn.microsoft.com/en-us/windows/wsl/install-manual&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows 11 Home ou Professional&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Versão 22000 ou superior (qualquer Windows 11).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Uma máquina compatível com virtualização (verifique a disponibilidade de acordo com a marca do seu processador. Se sua máquina for mais antiga pode ser necessária habilita-la na BIOS).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pelo menos 4GB de memória RAM (Recomendado 8GB).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Provavelmente seu Windows já está na versão suportada, mas verifique isto acessando o &lt;code&gt;menu de notificações perto do relógio &amp;gt; Todas as configurações &amp;gt; Sistema &amp;gt; Sobre&lt;/code&gt;. Caso não esteja, use o Assistente do Windows Update para atualizar a sua versão do Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;É essencial manter o Windows atualizado, pois o WSL 2 depende de uma versão atualizada do Hyper-V. Verifique o Windows Update.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instalação do WSL 2&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;Windows 10/11&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Windows Update&lt;/h3&gt; &#xA;&lt;p&gt;Verifique se seu Windows está atualizado, pois o WSL 2 depende de uma versão atualizada do Hyper-V. Verifique o Windows Update.&lt;/p&gt; &#xA;&lt;h3&gt;Atualizar o WSL&lt;/h3&gt; &#xA;&lt;p&gt;Com a versão 2004 do Windows 10 ou Windows 11, o WSL já está presente em sua máquina, execute o comando para pegar a versão mais recente do WSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;E pegue a versão mais recente do WSL.&lt;/p&gt; &#xA;&lt;h3&gt;Atribuir a versão default do WSL para a versão 2&lt;/h3&gt; &#xA;&lt;p&gt;A versão 1 do WSL pode ser a padrão em sua máquina, execute o comando abaixo para definir como padrão a versão 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --set-default-version 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Instale o Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;Execute o comando:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Este comando irá instalar o &lt;code&gt;Ubuntu&lt;/code&gt; como o Linux padrão.&lt;/p&gt; &#xA;&lt;p&gt;Se você quiser instalar uma versão diferente do Ubuntu, execute o comando &lt;code&gt;wsl -l -o&lt;/code&gt;. Será listado todas as versões de Linux disponíveis. Instale a versão escolhida com o comando &lt;code&gt;wsl --install -d nome-da-distribuicao&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sugerimos o Ubuntu (sem versão) por ser uma distribuição popular e que já vem com várias ferramentas úteis para desenvolvimento instaladas por padrão.&lt;/p&gt; &#xA;&lt;p&gt;Após o término do comando, você deverá criar um &lt;strong&gt;nome de usuário&lt;/strong&gt; que poderá ser o mesmo da sua máquina e uma &lt;strong&gt;senha&lt;/strong&gt;, este será o usuário &lt;strong&gt;root da sua instância WSL&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Para abrir uma nova janela do Ubuntu, basta digitar &lt;code&gt;Ubuntu&lt;/code&gt; no menu iniciar e clicar no ícone do Ubuntu.&lt;/p&gt; &#xA;&lt;p&gt;Recomendamos o uso do &lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/terminal/get-started&#34;&gt;Windows Terminal&lt;/a&gt; como terminal padrão para desenvolvimento no Windows. Ele agregará o shell do Ubuntu, assim como o PowerShell e o CMD em uma única janela.&lt;/p&gt; &#xA;&lt;h3&gt;(Opcional) Alterar a versão de uma distribuição do Linux de WSL 1 para WSL 2&lt;/h3&gt; &#xA;&lt;p&gt;Se a distribuição Linux que você instalou estiver na versão 1, você pode alterar para a versão 2 com o seguinte comando:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --set-version &amp;lt;distribution name&amp;gt; 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parabéns, seu WSL2 já está funcionando:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/wsl2_funcionando.png&#34; alt=&#34;Exemplo de WSL2 funcionando&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Instalação do WSL 2 via Windows Store&lt;/h3&gt; &#xA;&lt;p&gt;Também é possível instalar distribuições Linux pelo Windows Store. Escolha sua distribuição Linux preferida no aplicativo Windows Store, sugerimos o Ubuntu (sem versão) por ser uma distribuição popular e que já vem com várias ferramentas úteis para desenvolvimento instaladas por padrão.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/distribuicoes_linux.png&#34; alt=&#34;Distribuições Linux no Windows Store&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;(Opcional/Mas Recomendado) Usar Windows Terminal como terminal padrão de desenvolvimento para Windows&lt;/h2&gt; &#xA;&lt;p&gt;Uma deficiência que o Windows sempre teve era prover um terminal adequado para desenvolvimento. Agora temos o &lt;strong&gt;Windows Terminal&lt;/strong&gt; construído pela própria Microsoft que permite rodar terminais em abas, alterar cores e temas, configurar atalhos e muito mais.&lt;/p&gt; &#xA;&lt;p&gt;Instale-o pelo Windows Store e use estas &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/windows-terminal-settings.json&#34;&gt;configurações padrões&lt;/a&gt; para habilitar WSL 2, Git Bash e o tema drácula e alguns atalhos.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/pt-br/windows/terminal/get-started&#34;&gt;Link do Windows Terminal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Para sobrescrever as configurações &lt;strong&gt;acesse o menu configurações e clique no botão &#34;abrir arquivo JSON configurações&lt;/strong&gt;, abrirá as configurações do Windows Terminal no VSCode, apenas cole o conteúdo do arquivo JSON e salve, após isso clique em &lt;code&gt;Ubuntu&lt;/code&gt; na seção &lt;code&gt;Perfis&lt;/code&gt;, clique sobre &lt;code&gt;Diretório inicial&lt;/code&gt; e altere o caminho para: &lt;code&gt;(\\wsl$\Ubuntu\home\SEU_USUÁRIO_UBUNTU)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;O que o WSL 2 pode usar de recursos da sua máquina&lt;/h2&gt; &#xA;&lt;p&gt;Podemos dizer que o WSL 2 tem acesso quase que total ao recursos de sua máquina. Ele tem acesso por padrão:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A todo disco rígido.&lt;/li&gt; &#xA; &lt;li&gt;A usar completamente os recursos de processamento.&lt;/li&gt; &#xA; &lt;li&gt;A usar 80% da memória RAM disponível.&lt;/li&gt; &#xA; &lt;li&gt;A usar 25% da memória disponível para SWAP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Isto pode não ser interessante, uma vez que o WSL 2 pode usar praticamente todos os recursos de sua máquina, mas podemos configurar limites.&lt;/p&gt; &#xA;&lt;p&gt;Crie um arquivo chamado &lt;code&gt;.wslconfig&lt;/code&gt; na raiz da sua pasta de usuário &lt;code&gt;(C:\Users\&amp;lt;seu_usuario&amp;gt;)&lt;/code&gt; e defina estas configurações:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;[wsl2]&#xA;memory=8GB&#xA;processors=4&#xA;swap=2GB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Estes são limites de exemplo e as configurações mais básicas a serem utilizadas, configure-os às suas disponibilidades. Para mais detalhes veja esta documentação da Microsoft: &lt;a href=&#34;https://learn.microsoft.com/pt-br/windows/wsl/wsl-config#configuration-setting-for-wslconfig&#34;&gt;https://learn.microsoft.com/pt-br/windows/wsl/wsl-config#configuration-setting-for-wslconfig&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Para aplicar estas configurações é necessário reiniciar as distribuições Linux. Execute o comando: &lt;code&gt;wsl --shutdown&lt;/code&gt; (Este comando vai desligar todas as instâncias WSL 2 ativas, basta abrir o terminal novamente para usa-las já com as novas configurações).&lt;/p&gt; &#xA;&lt;h2&gt;O que é Docker&lt;/h2&gt; &#xA;&lt;p&gt;Docker é uma plataforma open source que possibilita o empacotamento de uma aplicação dentro de um container. Uma aplicação consegue se adequar e rodar em qualquer máquina que tenha essa tecnologia instalada.&lt;/p&gt; &#xA;&lt;h3&gt;Porque usar WSL 2 + Docker para desenvolvimento&lt;/h3&gt; &#xA;&lt;p&gt;Configurar ambientes de desenvolvimento no Windows sempre foi burocrático e complexo, além do desempenho de algumas ferramentas não serem totalmente satisfatórias.&lt;/p&gt; &#xA;&lt;p&gt;Com o nascimento do Docker este cenário melhorou bastante, pois podemos montar nosso ambiente de desenvolvimento baseado em Unix, de forma independente e rápida, e ainda unificada com outros sistemas operacionais.&lt;/p&gt; &#xA;&lt;p&gt;Veja nossa &lt;strong&gt;live sobre WSL 2 + Docker no canal Full Cycle&lt;/strong&gt;: &lt;a href=&#34;https://www.youtube.com/watch?v=On_nwfkiSAE&#34;&gt;https://www.youtube.com/watch?v=On_nwfkiSAE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Modos de usar Docker no Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Obsoleto) &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#obsoleto-docker-toolbox&#34;&gt;Docker Toolbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Obsoleto) &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#obsoleto-docker-desktop-com-hyper-v&#34;&gt;Docker Desktop com Hyper-V&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-desktop-com-wsl2&#34;&gt;Docker Desktop com WSL2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#docker-engine-docker-nativo-diretamente-instalado-no-wsl2&#34;&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;(Obsoleto) Docker Toolbox&lt;/h3&gt; &#xA;&lt;p&gt;Roda em cima do programa de virtualização de sistemas da Oracle, chamado de &lt;strong&gt;VirtualBox&lt;/strong&gt;. O desempenho do Docker Toolbox pode ser muito ruim, inviabilizando seu uso.&lt;/p&gt; &#xA;&lt;p&gt;Pode ainda ser usado em Windows mais antigos, como XP, Vista, 7, 8 e 8.1.&lt;/p&gt; &#xA;&lt;h3&gt;(Obsoleto) Docker Desktop com Hyper-V&lt;/h3&gt; &#xA;&lt;p&gt;Roda em cima do &lt;strong&gt;Hyper-V&lt;/strong&gt; da Microsoft em vez de usar o VirtualBox usando pelo Docker Toolbox. O Docker Desktop com Hyper-V necessita da versão &lt;strong&gt;PRO&lt;/strong&gt; do Windows 10/11, portanto é necessário compra-la se você não a tem.&lt;/p&gt; &#xA;&lt;p&gt;O Hyper-V costuma requerer muitos recursos da máquina e apesar do desempenho ser melhor que o Docker Toolbox, a máquina pode ficar lenta para se utilizar outras coisas no Windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A Docker já removeu o suporte ao Hyper-V.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker Desktop com WSL2&lt;/h3&gt; &#xA;&lt;p&gt;Roda em cima do &lt;strong&gt;Virtual Machine Platform&lt;/strong&gt; que é um componente do Hyper-V.&lt;/p&gt; &#xA;&lt;p&gt;Se integra com o WSL2 permitindo rodar o Docker dentro do ambiente do Linux.&lt;/p&gt; &#xA;&lt;p&gt;Não é necessário adquirir licença PRO do Windows 10/11. T&lt;/p&gt; &#xA;&lt;p&gt;Tem um grande desempenho e consome menos recursos quando comparado ao Docker Toolbox ou Docker Desktop com Hyper-V.&lt;/p&gt; &#xA;&lt;p&gt;Tem-se a grande vantagem de se trabalhar totalmente dentro do Linux para desenvolvimento, portanto, usar WSL2 + Docker é a melhor maneira de se desenvolver aplicações no Windows.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a id=&#34;docker-desktop-vantagens&#34;&gt;&lt;/a&gt; Vantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simplifica a configuração do Docker tanto no Windows quanto no WSL 2.&lt;/li&gt; &#xA; &lt;li&gt;Permite rodar o Docker fora do WSL 2, sendo possível usar qualquer shell como PowerShell ou DOS.&lt;/li&gt; &#xA; &lt;li&gt;Suporta containers em modo Windows (Imagens que contém Windows por debaixo dos panos ao invés de Linux).&lt;/li&gt; &#xA; &lt;li&gt;Cria um ambiente centralizado para armazenamento de imagens, volumes e outras configurações Docker. Pode-se ter várias distribuições do WSL 2 rodando a mesma instância do Docker.&lt;/li&gt; &#xA; &lt;li&gt;Interface visual para administrar o Docker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;a id=&#34;docker-desktop-desvantagens&#34;&gt;&lt;/a&gt; Desvantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uso de memória inicial sem rodar nenhum container Docker pode chegar a 3GB.&lt;/li&gt; &#xA; &lt;li&gt;Adiciona infraestrutura complexa para executar Docker, quando se necessita apenas de rodar os containers Docker dentro de um WSL apenas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2&lt;/h3&gt; &#xA;&lt;p&gt;O Docker Engine é o Docker nativo que roda no ambiente Linux e completamente suportado para WSL 2. Sua instalação é idêntica a descrita para as próprias distribuições Linux disponibilizadas no site do &lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a id=&#34;docker-engine-vantagens&#34;&gt;&lt;/a&gt; Vantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consume o mínimo de memória necessário para rodar o Docker Daemon (servidor do Docker).&lt;/li&gt; &#xA; &lt;li&gt;É mais rápido ainda que com Docker Desktop, porque roda diretamente dentro da própria instância do WSL2 e não em uma instância separada de Linux.&lt;/li&gt; &#xA; &lt;li&gt;Temos a melhor experiência de desenvolvimento, pois podemos usar o Docker diretamente dentro do WSL 2, sem precisar de uma instância separada do Docker Desktop.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;a id=&#34;docker-engine-desvantagens&#34;&gt;&lt;/a&gt; Desvantagens&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Necessário executar o comando &lt;code&gt;sudo service docker start&lt;/code&gt; sempre que o WSL 2 foi reiniciado (Somente para usuários do Windows 10). Isto não é necessariamente uma desvantagem, mas é bom pontuar. Isto é um pequeno detalhe, mas no Windows 11 já é possível iniciar o servidor do Docker automaticamente pelo /etc/wsl.conf (Ver detalhes mais abaixo).&lt;/li&gt; &#xA; &lt;li&gt;Se necessitar executar o Docker em outra instância do WSL 2, é necessário instalar novamente o Docker nesta instância ou configurar o acesso ao socket do Docker desejado para compartilhar o Docker entre as instâncias.&lt;/li&gt; &#xA; &lt;li&gt;Não suporta containers no modo Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integrar Docker com WSL 2&lt;/h3&gt; &#xA;&lt;p&gt;No início deste tutorial vimos &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#modos-de-usar-docker-no-windows&#34;&gt;4 modos de usar Docker no Windows&lt;/a&gt;, mas somente 2 que recomendamos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instalar-o-docker-com-docker-engine-docker-nativo&#34;&gt;Docker Engine (Docker Nativo) diretamente instalado no WSL2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#instalar-o-docker-com-docker-desktop&#34;&gt;Docker Desktop com WSL2&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recomendamos que escolha a 1ª opção pelos seus benefícios, já que a maioria das pessoas poderão usar o WSL 2 como ferramenta central para desenvolvimento, mas, neste tutorial vamos mostrar as duas formas de instalação.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;instalar-o-docker-com-docker-engine-docker-nativo&#34;&gt;&lt;/a&gt;1 - Instalar o Docker com Docker Engine (Docker Nativo)&lt;/h3&gt; &#xA;&lt;p&gt;A instalação do Docker no WSL 2 é idêntica a instalação do Docker em sua própria distribuição Linux, portanto se você tem o Ubuntu é igual ao Ubuntu, se é Fedora é igual ao Fedora. A documentação de instalação do Docker no Linux por distribuição está &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;aqui&lt;/a&gt;, mas vamos ver como instalar no Ubuntu.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Quem está migrando de Docker Desktop para Docker Engine, temos duas opções&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Desinstalar o Docker Desktop.&lt;/li&gt; &#xA;  &lt;li&gt;Desativar o Docker Desktop Service nos serviços do Windows. Esta opção permite que você utilize o Docker Desktop, se necessário, para a maioria dos usuários a desinstalação do Docker Desktop é a mais recomendada. Se você escolheu a 2º opção, precisará excluir o arquivo ~/.docker/config.json e realizar a autenticação com Docker novamente através do comando &#34;docker login&#34;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Se necessitar integrar o Docker com outras IDEs que não sejam o VSCode&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;O VSCode já se integra com o Docker no WSL desta forma através da extensão Remote WSL ou Remote Container.&lt;/p&gt; &#xA; &lt;p&gt;É necessário habilitar a conexão ao servidor do Docker via TCP. Vamos aos passos:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Crie o arquivo /etc/docker/daemon.json: &lt;code&gt;sudo echo &#39;{&#34;hosts&#34;: [&#34;tcp://0.0.0.0:2375&#34;, &#34;unix:///var/run/docker.sock&#34;]}&#39; &amp;gt; /etc/docker/daemon.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Reinicie o Docker: &lt;code&gt;sudo service docker restart&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Após este procedimento, vá na sua IDE e para conectar ao Docker escolha a opção TCP Socket e coloque a URL &lt;code&gt;http://IP-DO-WSL:2375&lt;/code&gt;. Seu IP do WSL pode ser encontrado com o comando &lt;code&gt;cat /etc/resolv.conf&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Se caso não funcionar, reinicie o WSL com o comando &lt;code&gt;wsl --shutdown&lt;/code&gt; e inicie o serviço do Docker novamente.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Instale os pré-requisitos:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&#xA;sudo apt remove docker docker-engine docker.io containerd runc&#xA;sudo apt-get install \&#xA;    apt-transport-https \&#xA;    ca-certificates \&#xA;    curl \&#xA;    gnupg \&#xA;    lsb-release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adicione o repositório do Docker na lista de sources do Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg&#xA;echo \&#xA;  &#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \&#xA;  $(lsb_release -cs) stable&#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instale o Docker Engine&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dê permissão para rodar o Docker com seu usuário corrente:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inicie o serviço do Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo service docker start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Este comando acima terá que ser executado toda vez que o Linux for reiniciado. Se caso o serviço do Docker não estiver executando, mostrará esta mensagem de erro ao rodar comando &lt;code&gt;docker&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;O Docker Compose instalado agora estará na versão 2, para executa-lo em vez de &lt;code&gt;docker-compose&lt;/code&gt; use &lt;code&gt;docker compose&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Erro ao iniciar o Docker no Ubuntu 22.04&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Se mesmo ao iniciar o serviço do Docker acontecer o seguinte erro ou similar:&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?&lt;/code&gt; Rode o comando &lt;code&gt;sudo update-alternatives --config iptables&lt;/code&gt; e escolha a opção 1 &lt;code&gt;iptables-legacy&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Rode novamente o &lt;code&gt;sudo service docker start&lt;/code&gt;. Rode algum comando Docker como &lt;code&gt;docker ps&lt;/code&gt; para verificar se está funcionando corretamente. Se não mostrar o erro acima, está ok.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Iniciar o Docker automaticamente no WSL (apenas para Windows 11)&lt;/h4&gt; &#xA;&lt;p&gt;No Windows 11 é possível especificar um comando padrão para ser executados sempre que o WSL for iniciado, isto permite que já coloquemos o serviço do docker para iniciar automaticamente. Edite o arquivo &lt;code&gt;/etc/wsl.conf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Rode o comando para editar:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo vim /etc/wsl.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Aperte a letra &lt;code&gt;i&lt;/code&gt; (para entrar no modo de inserção de conteúdo) e cole o conteúdo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[boot]&#xA;command=&#34;service docker start&#34; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Quando terminar a edição, pressione &lt;code&gt;Esc&lt;/code&gt;, em seguida tecle &lt;code&gt;:&lt;/code&gt; para entrar com o comando &lt;code&gt;wq&lt;/code&gt; (salvar e sair) e pressione &lt;code&gt;enter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pronto, basta reiniciar o WSL com o comando &lt;code&gt;wsl --shutdown&lt;/code&gt; no DOS ou PowerShell para testar. Após abrir o WSL novamente, digite o comando &lt;code&gt;docker ps&lt;/code&gt; para avaliar se o comando não retorna a mensagem acima: &lt;code&gt;Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;instalar-o-docker-com-docker-desktop&#34;&gt;&lt;/a&gt;2 - Instalar o Docker com Docker Desktop&lt;/h3&gt; &#xA;&lt;p&gt;Baixe neste link: &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;https://www.docker.com/products/docker-desktop/&lt;/a&gt; e instale o Docker Desktop.&lt;/p&gt; &#xA;&lt;p&gt;Clique no &lt;code&gt;ícone do Docker perto do relógio -&amp;gt; Settings -&amp;gt; Settings no topo -&amp;gt; Resources -&amp;gt; WSL Integration&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Habilite &lt;code&gt;Enable integration with my default WSL distro&lt;/code&gt; e habilite sua versão Linux.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/docker_funcionando_dentro_do_wsl2.png&#34; alt=&#34;Docker funcionando dentro do WSL 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dicas e truques básicos com WSL 2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A performance do WSL 2 está em se executar tudo dentro do Linux, por isso evite executar seus projetos com ou sem Docker do caminho &lt;code&gt;/mnt/c&lt;/code&gt;, pois você perderá performance.&lt;/li&gt; &#xA; &lt;li&gt;Para abrir o terminal do WSL basta digitar o nome da distribuição no menu Iniciar ou executar &lt;code&gt;C:\Windows\System32\wsl.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;O sistema de arquivos do Windows 10/11 é acessível em &lt;code&gt;/mnt/c&lt;/code&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/mount_no_wsl2.png&#34; alt=&#34;Mount no WSL2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;É possível acessar o sistema de arquivos do Linux pela rede do Windows, digite &lt;code&gt;\\wsl$&lt;/code&gt; no Windows Explorer. &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/acessando_wsl2_no_explorer.png&#34; alt=&#34;Acessando WSL2 no Windows Explorer&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;É possível acessar uma pasta no Windows Explorer digitando o comando &lt;code&gt;explorer.exe .&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;É possível abrir uma pasta ou arquivo com o Visual Studio Code digitando o comando &lt;code&gt;code . ou code meu_arquivo.ext&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Incrivelmente é possível acessar executáveis do Windows no terminal do Linux executando-os com .exe no final (não significa que funcionarão corretamente). &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/executaveis_do_windows_no_wsl2.png&#34; alt=&#34;Executando executáveis do Windows no WSL2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;É possível executar algumas aplicações gráficas do Linux com WSL 2. Leia este tutorial: &lt;a href=&#34;https://medium.com/@dianaarnos/aplica%C3%A7%C3%B5es-gr%C3%A1ficas-no-wsl2-e0a481e9768c&#34;&gt;https://medium.com/@dianaarnos/aplica%C3%A7%C3%B5es-gr%C3%A1ficas-no-wsl2-e0a481e9768c&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Execute o comando &lt;code&gt;wsl -l -v&lt;/code&gt; com o PowerShell para ver as versões de Linux instaladas e seu status atual(parado ou rodando). &lt;img src=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/img/verificando_distribuicoes_instaladas_do_linux_no_wsl2.png&#34; alt=&#34;Verificando distribuições instaladas do Linux no WSL 2&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute o comando &lt;code&gt;wsl --shutdown&lt;/code&gt; com o PowerShell para desligar todas as distribuições Linux que estão rodando no momento (ao executar o comando, as distribuições do Docker também serão desligadas e o Docker Desktop mostrará uma notificação ao lado do relógio perguntando se você quer iniciar as distribuições dele novamente, se você não aceitar terá que iniciar o Docker novamente com o ícone perto do relógio do Windows).&lt;/li&gt; &#xA; &lt;li&gt;Execute com o PowerShell o comando &lt;code&gt;wsl --t &amp;lt;distribution name&amp;gt;&lt;/code&gt; para desligar somente uma distribuição Linux específica.&lt;/li&gt; &#xA; &lt;li&gt;Se verificar que o WSL 2 está consumindo muitos recursos da máquina, execute os seguintes comandos dentro do terminal WSL 2 para liberar memória RAM:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo 1 | sudo tee /proc/sys/vm/drop_caches&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Acrescente &lt;code&gt;export DOCKER_BUILDKIT=1&lt;/code&gt; no final do arquivo .profile do seu usuário do Linux para ganhar mais performance ao realizar builds com Docker. Execute o comando &lt;code&gt;source ~/.profile&lt;/code&gt; para carregar esta variável de ambiente no ambiente do seu WSL 2.&lt;/li&gt; &#xA; &lt;li&gt;No Windows 11 é possível iniciar o Docker automaticamente, veja a seção: &lt;a href=&#34;https://raw.githubusercontent.com/codeedu/wsl2-docker-quickstart/main/#dica-para-windows-11&#34;&gt;Dica para Windows 11&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dúvidas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;O WSL 2 funciona junto com outras máquinas virtuais como &lt;strong&gt;VirtualBox&lt;/strong&gt; ou &lt;strong&gt;VMWare&lt;/strong&gt;? Siga a &lt;a href=&#34;https://learn.microsoft.com/pt-br/windows/wsl/faq#poderei-executar-o-wsl-2-e-outras-ferramentas-de-virtualiza--o-de-terceiros--como-vmware-ou-virtualbox-&#34;&gt;referência&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quer dicas como ser mais produtivo no Windows?&lt;/h2&gt; &#xA;&lt;p&gt;Acesse os tutorias abaixo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuração de ambiente de desenvolvimento produtivo: &lt;a href=&#34;https://github.com/argentinaluiz/ambiente-dev-produtivo&#34;&gt;https://github.com/argentinaluiz/ambiente-dev-produtivo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Como montar um ambiente produtivo no VSCode: &lt;a href=&#34;https://github.com/argentinaluiz/my-vscode-settings&#34;&gt;https://github.com/argentinaluiz/my-vscode-settings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>