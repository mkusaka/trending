<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-28T02:09:24Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ilya114/Box64Droid</title>
    <updated>2023-05-28T02:09:24Z</updated>
    <id>tag:github.com,2023-05-28:/Ilya114/Box64Droid</id>
    <link href="https://github.com/Ilya114/Box64Droid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Box64Droid&lt;/h1&gt; &#xA;&lt;h1&gt;WARNING!!! Still in early stage, therefore there may be problems and shortcomings&lt;/h1&gt; &#xA;&lt;p&gt;Box64Droid is a script that automates the installation of a preconfigured rootfs with &lt;a href=&#34;https://github.com/ptitSeb/box86&#34;&gt;Box86&lt;/a&gt;, &lt;a href=&#34;https://github.com/ptitSeb/box64&#34;&gt;Box64&lt;/a&gt;, &lt;a href=&#34;https://github.com/ValveSoftware/Proton&#34;&gt;Proton 8.0-2&lt;/a&gt;, &lt;a href=&#34;https://github.com/doitsujin/dxvk&#34;&gt;DXVK&lt;/a&gt; and &lt;a href=&#34;https://github.com/HansKristian-Work/vkd3d-proton&#34;&gt;vkd3d-proton&lt;/a&gt; installed. Project based on Box4Droid, original author is &lt;a href=&#34;https://github.com/Herick75&#34;&gt;Herick75&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Project chat &lt;a href=&#34;https://t.me/box64droidchat&#34;&gt;available&lt;/a&gt; in Telegram, also there is a &lt;a href=&#34;https://Ilya114.github.io/Box64Droid/&#34;&gt;site&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Do I need root?&lt;/h2&gt; &#xA;&lt;p&gt;Box64Droid using proot to run rootfs, so no, root is not required, chroot also can use.&lt;/p&gt; &#xA;&lt;h2&gt;How to install?&lt;/h2&gt; &#xA;&lt;p&gt;First you need to install &lt;a href=&#34;https://github.com/termux/termux-app/releases/download/v0.118.0/termux-app_v0.118.0+github-debug_arm64-v8a.apk&#34;&gt;Termux&lt;/a&gt; and &lt;a href=&#34;https://github.com/Ilya114/Box64Droid/releases/download/beta/termux-x11.apk&#34;&gt;Termux-x11&lt;/a&gt;. After installing them, just copy and paste in Termux this command then when Box64Droid install: &lt;code&gt;curl -o install https://raw.githubusercontent.com/Ilya114/Box64Droid/main/scripts/install &amp;amp;&amp;amp; chmod +x install &amp;amp;&amp;amp; ./install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have Mali, PowerVR or Adreno below 616 you can use rootfs with VirGL (Not stable and much games maybe not working): &lt;code&gt;curl -o install-virgl https://raw.githubusercontent.com/Ilya114/Box64Droid/main/scripts/install-virgl &amp;amp;&amp;amp; chmod +x install-virgl &amp;amp;&amp;amp; ./install-virgl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have root, you can use chroot version instead of proot: &lt;code&gt;curl -o install-root https://raw.githubusercontent.com/Ilya114/Box64Droid/main/scripts/install-root &amp;amp;&amp;amp; chmod +x install-root &amp;amp;&amp;amp; ./install-root&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to start Box + Wine?&lt;/h2&gt; &#xA;&lt;p&gt;After the installation is completed, type &lt;code&gt;start-box&lt;/code&gt;, starting script will start Termux-X11 and show start menu.&lt;/p&gt; &#xA;&lt;p&gt;You can also use Input Bridge, install 0.1.9 apk then just run app in Android and in Wine from start menu,&lt;/p&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adreno 616+ recommend (Another GPU&#39;s supporting but less games work)&lt;/li&gt; &#xA; &lt;li&gt;Android 12+ (proot version), Android 10+ (chroot version)&lt;/li&gt; &#xA; &lt;li&gt;64-bit Android&lt;/li&gt; &#xA; &lt;li&gt;You also need at ~5,0 GB (or ~3,3 for VirGL version) free for the installation to go without problems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to configure?&lt;/h2&gt; &#xA;&lt;p&gt;You can choose to use environment variables, there are 3 files, &lt;code&gt;dxvk.conf&lt;/code&gt;, &lt;code&gt;Box8664.conf&lt;/code&gt; and &lt;code&gt;DXVK_env.conf&lt;/code&gt;. These files are created and found in the internal storage inside the Box64Droid folder right after the first run of Box86 or Box64.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Box8664.conf&lt;/code&gt; file is for you to use the Box86 and Box64 environment variables, see all of them &lt;a href=&#34;https://github.com/ptitSeb/box86/raw/master/docs/USAGE.md#&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/ptitSeb/box64/raw/main/docs/USAGE.md&#34;&gt;here&lt;/a&gt;. You can add as many variables as you like.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;DXVK_env.conf&lt;/code&gt; file is for you to use the environment variables referring to &lt;a href=&#34;https://github.com/doitsujin/dxvk#hud&#34;&gt;DXVK_HUD&lt;/a&gt;, in addition to other settings.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;dxvk.conf&lt;/code&gt; file is for you to use the environment variables referring to &lt;a href=&#34;https://github.com/doitsujin/dxvk/raw/master/dxvk.conf&#34;&gt;dxvk&lt;/a&gt;(To use it, it is necessary to uncomment the line that exports your directory, this variable is found in &lt;code&gt;DXVK_env.conf&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Error when updating Termux packages. Clear Termux data will help.&lt;/li&gt; &#xA; &lt;li&gt;Android 12+ can kill Termux, you may get &lt;code&gt;[Process completed (signal 9) - press Enter]&lt;/code&gt;, to fix run this command in adb shell: &lt;code&gt;adb shell &#34;/system/bin/device_config put activity_manager max_phantom_processes 2147483647&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&#34;Control&#34; menu in Wine (in Proton 8.0-2 working fine) shows nothing. You can just open &lt;code&gt;control&lt;/code&gt; using &#34;Run&#34;&lt;/li&gt; &#xA; &lt;li&gt;Box64Droid can exit after start. This is a TFM issue, no have idea why and how to fix.&lt;/li&gt; &#xA; &lt;li&gt;Winetricks runs a long of time when Proton installed (proot)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And there are probably other issues, so feel free to open an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Instructionsl how to mount SD-card external HDD/SSD (chroot version)&lt;/h2&gt; &#xA;&lt;p&gt;If you want mount sdcard or external HDD (SSD), you need to add mountpoint. For sdcard go to /storage and see folder example &lt;code&gt;8D3E-2B7K&lt;/code&gt;. For external drivers go to /mnt/media_rw and see folder like &lt;code&gt;C3G3H6B8A56212H7&lt;/code&gt;. Type &lt;code&gt;nano $PREFIX/bin/start-box-root&lt;/code&gt; and add mount command before &lt;code&gt;sudo chroot login ...&lt;/code&gt; line: &lt;code&gt;sudo mount --bind /mnt/media_rw/drivename (or /storage/sdcardname) $ROOTFSPATH/needfolder&lt;/code&gt;. You need to create &lt;code&gt;needfolder&lt;/code&gt; yourself in ~/ubuntu folder by using &lt;code&gt;sudo mkdir foldername&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Things to note&lt;/h2&gt; &#xA;&lt;p&gt;Some issues/instabilities can happen when using Box86 and Box64 in proot environment, so it&#39;s not recommended to use Box86 and Box64 in proot as debug/testing environment, there are better options for that.&lt;/p&gt; &#xA;&lt;h2&gt;Third party applications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/termux/termux-app&#34;&gt;Termux-app&lt;/a&gt; GPLv3 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ptitSeb/box64&#34;&gt;Box64 by ptitseb&lt;/a&gt; MIT license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ptitSeb/box86&#34;&gt;Box86 by ptitseb&lt;/a&gt; MIT license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/termux/proot-distro&#34;&gt;Proot-distro&lt;/a&gt; GPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.winehq.org/Licensing&#34;&gt;Wine Stable, Staging and Staging-tkg GPL-2.1 license&lt;/a&gt; (builded by &lt;a href=&#34;https://github.com/Kron4ek&#34;&gt;Kron4ek&lt;/a&gt; by MIT License), &lt;a href=&#34;https://github.com/ValveSoftware/Proton&#34;&gt;Wine Proton by Valve&lt;/a&gt; (own license), &lt;a href=&#34;https://github.com/GloriousEggroll/wine-ge-custom&#34;&gt;Wine GE&lt;/a&gt; (using in Lutris)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/termux/termux-x11&#34;&gt;Termux-x11&lt;/a&gt; GPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doitsujin/dxvk&#34;&gt;DXVK&lt;/a&gt; Zlib license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.winehq.org/Winetricks&#34;&gt;Winetricks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HansKristian-Work/vkd3d-proton&#34;&gt;Vkd3d-proton&lt;/a&gt; GPL-2.1 license&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks to:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Herick75&#34;&gt;Herick75&lt;/a&gt; - for Mesa Turnip patches which make possible compile it&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/inguna87&#34;&gt;Inguna87&lt;/a&gt; - for start chroot fix for MIUI and probably Oxygen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alfhashut&#34;&gt;Alfhashut&lt;/a&gt; - inspired me to try VirGL again and trying help me with him&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Joshua-Riek/ubuntu-rockchip</title>
    <updated>2023-05-28T02:09:24Z</updated>
    <id>tag:github.com,2023-05-28:/Joshua-Riek/ubuntu-rockchip</id>
    <link href="https://github.com/Joshua-Riek/ubuntu-rockchip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ubuntu 22.04 for Rockchip RK3588 devices&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This project aims to provide a default Ubuntu 22.04 experience for Rockchip RK3588 devices. Get started today with an Ubuntu Server or Desktop image for a familiar environment. For additional information about this project or a specific device, please take a look at the documentation available on the &lt;a href=&#34;https://github.com/Joshua-Riek/ubuntu-rockchip/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The supported devices are undergoing continuous development. As a result, you may encounter bugs or missing features. I&#39;ll do my best to update this project with the most recent changes and fixes. If you find problems, please report them in the issues or discussions section.&lt;/p&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Package management via apt using the official Ubuntu repositories&lt;/li&gt; &#xA; &lt;li&gt;Receive kernel, firmware, and bootloader updates through apt&lt;/li&gt; &#xA; &lt;li&gt;Desktop first-run wizard for user setup and configuration&lt;/li&gt; &#xA; &lt;li&gt;3D video hardware acceleration support via panfork&lt;/li&gt; &#xA; &lt;li&gt;Fully working GNOME desktop using wayland&lt;/li&gt; &#xA; &lt;li&gt;Chromium browser with smooth 4k youtube video playback&lt;/li&gt; &#xA; &lt;li&gt;MPV video player capable of smooth 4k video playback&lt;/li&gt; &#xA; &lt;li&gt;Gstreamer can be used as an alternative 4k video player from the command line&lt;/li&gt; &#xA; &lt;li&gt;5.10.160 Linux kernel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Boards&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Orange Pi 5&lt;/li&gt; &#xA; &lt;li&gt;Orange Pi 5B&lt;/li&gt; &#xA; &lt;li&gt;Orange Pi 5 Plus (WIP hardware required)&lt;/li&gt; &#xA; &lt;li&gt;NanoPi R6S&lt;/li&gt; &#xA; &lt;li&gt;NanoPi R6C&lt;/li&gt; &#xA; &lt;li&gt;NanoPC-T6 (WIP hardware required)&lt;/li&gt; &#xA; &lt;li&gt;Rock 5B&lt;/li&gt; &#xA; &lt;li&gt;Rock 5A&lt;/li&gt; &#xA; &lt;li&gt;Indiedroid Nova&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you use a good, reliable, and fast SD card. For example, suppose you encounter boot or stability troubles. Most of the time, this is due to either an insufficient power supply or related to your SD card (bad card, bad card reader, something went wrong when burning the image, or the card is too slow).&lt;/p&gt; &#xA;&lt;p&gt;Download the Ubuntu image for your specific board from the latest &lt;a href=&#34;https://github.com/Joshua-Riek/ubuntu-rockchip/releases&#34;&gt;release&lt;/a&gt; on GitHub. Then write the xz compressed image to your SD card using &lt;a href=&#34;https://www.balena.io/etcher&#34;&gt;balenaEtcher&lt;/a&gt; since, unlike other tools, it can validate burning results, saving you from corrupted SD card contents.&lt;/p&gt; &#xA;&lt;h2&gt;Boot the System&lt;/h2&gt; &#xA;&lt;p&gt;Insert your SD card into the slot on the board and power on the device. The first boot may take up to two minutes, so please be patient.&lt;/p&gt; &#xA;&lt;h2&gt;Login Information&lt;/h2&gt; &#xA;&lt;p&gt;For the server image you will be able to login through HDMI or a serial console connection. The predefined user is &lt;code&gt;ubuntu&lt;/code&gt; and the password is &lt;code&gt;ubuntu&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the desktop image you must connect through HDMI and follow the setup-wizard.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openshift/release</title>
    <updated>2023-05-28T02:09:24Z</updated>
    <id>tag:github.com,2023-05-28:/openshift/release</id>
    <link href="https://github.com/openshift/release" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Release tooling for OpenShift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenShift Release Tooling&lt;/h1&gt; &#xA;&lt;p&gt;This repository holds OpenShift cluster manifests, component build manifests and CI workflow configuration for OpenShift component repositories for both OKD and OCP.&lt;/p&gt; &#xA;&lt;h2&gt;CI Workflow Configuration&lt;/h2&gt; &#xA;&lt;p&gt;To setup a CI workflow for a new repository, use &lt;code&gt;make new-repo&lt;/code&gt;. See the &lt;a href=&#34;https://docs.ci.openshift.org/docs/how-tos/contributing-openshift-release/&#34;&gt;Contributing CI Configuration to the openshift/release Repository&lt;/a&gt; document for detailed information about how to contribute to this repository.&lt;/p&gt; &#xA;&lt;p&gt;Configuration files for CI workflows live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/&#34;&gt;&lt;code&gt;ci-operator/&lt;/code&gt;&lt;/a&gt; and are split into the following categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/config/&#34;&gt;&lt;code&gt;ci-operator/config&lt;/code&gt;&lt;/a&gt; contains configuration for the &lt;code&gt;ci-operator&lt;/code&gt;, detailing builds and tests for component repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/jobs/&#34;&gt;&lt;code&gt;ci-operator/jobs&lt;/code&gt;&lt;/a&gt; contains configuration for &lt;code&gt;prow&lt;/code&gt;, detailing job triggers. In almost all cases, this configuration is generated automatically from the &lt;code&gt;ci-operator&lt;/code&gt; config. For manual edits, see &lt;a href=&#34;https://docs.ci.openshift.org/docs/how-tos/contributing-openshift-release/#component-ci-configuration&#34;&gt;this section&lt;/a&gt; of the contribution document and the &lt;a href=&#34;https://github.com/kubernetes/test-infra/raw/master/prow/README.md#how-to-add-new-jobs&#34;&gt;upstream configuration document&lt;/a&gt;. Prefer the &lt;code&gt;ci-operator&lt;/code&gt; config whenever possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/step-registry/&#34;&gt;&lt;code&gt;ci-operator/step-registry&lt;/code&gt;&lt;/a&gt; contains the registry of reusable test steps and workflows. See the documentation for this content &lt;a href=&#34;https://docs.ci.openshift.org/docs/architecture/step-registry/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[LEGACY]&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator/templates/&#34;&gt;&lt;code&gt;ci-operator/templates&lt;/code&gt;&lt;/a&gt; contains black-box test workflows for use by the &lt;code&gt;ci-operator&lt;/code&gt;. The parent directory&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/ci-operator#end-to-end-tests&#34;&gt;README&lt;/a&gt; documents how to use them. See the &lt;a href=&#34;https://github.com/openshift/ci-tools/raw/2c9c111a2350ef92a366e6d86e66b82d13d7e704/TEMPLATES.md&#34;&gt;template document&lt;/a&gt; for general information on template tests. Templates are legacy and new ones should not be added. Multi-stage tests using steps from the shared registry should be used instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cluster and Service Configuration Manifests&lt;/h2&gt; &#xA;&lt;h3&gt;Core Services and Configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Only &lt;code&gt;core-services/secrets&lt;/code&gt; folder is applied to the cluster api.ci.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Except &lt;a href=&#34;https://docs.ci.openshift.org/docs/how-tos/adding-a-new-secret-to-ci/&#34;&gt;user secret management&lt;/a&gt;, no services are running on &lt;code&gt;api.ci&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Additional Services and Configuration (legacy)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;This folder is no longer applied to the cluster api.ci which is going to be offline soon.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cluster Configuration Manifests (legacy)&lt;/h3&gt; &#xA;&lt;p&gt;Manifests for cluster provisioning and installation live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/&#34;&gt;&lt;code&gt;cluster/&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&#34;https://api.ci.openshift.org/&#34;&gt;OpenShift CI cluster&lt;/a&gt; is configured with the manifests under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/ci/&#34;&gt;&lt;code&gt;cluster/ci/&lt;/code&gt;&lt;/a&gt;. (&lt;strong&gt;legacy&lt;/strong&gt;: do not add new services here. Use &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/core-services&#34;&gt;&lt;code&gt;core-services&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/services&#34;&gt;&lt;code&gt;services&lt;/code&gt;&lt;/a&gt; instead.)&lt;/p&gt; &#xA;&lt;p&gt;Clusters that are created by the testing infrastructure for validating OpenShift are configured with the profiles under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/test-deploy/&#34;&gt;&lt;code&gt;cluster/test-deploy/&lt;/code&gt;&lt;/a&gt;. For directions on how to set up clusters for development, see the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/cluster/test-deploy/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Legacy Service Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Manifests for services that are in development, experimental, legacy or not critical in some other way are present in the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/projects&#34;&gt;&lt;code&gt;projects&lt;/code&gt;&lt;/a&gt; directory. Compared to the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/#core-services-and-configuration&#34;&gt;core services&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/#additional-services-and-configuration&#34;&gt;services&lt;/a&gt; configuration, these projects do not need to follow any common structure or conventions other than clear ownership. They must not interfere with the core services in any way.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, manifests for building container images for component repositories live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/projects/&#34;&gt;&lt;code&gt;projects/&lt;/code&gt;&lt;/a&gt;. This purpose is deprecated; authors of components built by manifests in this directory should remove them and ensure that their component is appropriately built by the &lt;code&gt;ci-operator&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;Tooling Build Manifests&lt;/h2&gt; &#xA;&lt;p&gt;Manifests for building container images for tools live under &lt;a href=&#34;https://raw.githubusercontent.com/openshift/release/master/tools/&#34;&gt;&lt;code&gt;tools/&lt;/code&gt;&lt;/a&gt;. These tools are either useful in managing this repository or are otherwise useful commonly across component repositories.&lt;/p&gt;</summary>
  </entry>
</feed>