<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:43:45Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wurstmeister/kafka-docker</title>
    <updated>2024-05-12T01:43:45Z</updated>
    <id>tag:github.com,2024-05-12:/wurstmeister/kafka-docker</id>
    <link href="https://github.com/wurstmeister/kafka-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerfile for Apache Kafka&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/wurstmeister/kafka&#34; title=&#34;Get your own version badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/version/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/wurstmeister/kafka&#34; title=&#34;Get your own image badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/wurstmeister/kafka-docker&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/wurstmeister/kafka-docker.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;kafka-docker&lt;/h1&gt; &#xA;&lt;p&gt;Dockerfile for &lt;a href=&#34;http://kafka.apache.org/&#34;&gt;Apache Kafka&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The image is available directly from &lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tags and releases&lt;/h2&gt; &#xA;&lt;p&gt;All versions of the image are built from the same set of scripts with only minor variations (i.e. certain features are not supported on older versions). The version format mirrors the Kafka format, &lt;code&gt;&amp;lt;scala version&amp;gt;-&amp;lt;kafka version&amp;gt;&lt;/code&gt;. Initially, all images are built with the recommended version of scala documented on &lt;a href=&#34;http://kafka.apache.org/downloads&#34;&gt;http://kafka.apache.org/downloads&lt;/a&gt;. To list all available tags:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -s https://registry.hub.docker.com/v2/repositories/wurstmeister/kafka/tags\?page_size\=1024 | jq -r &#39;.results[].name&#39; | sort -u | egrep &#39;\d.\d{2}-.*&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everytime the image is updated, all tags will be pushed with the latest updates. This should allow for greater consistency across tags, as well as any security updates that have been made to the base image.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Announcements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;04-Jun-2019&lt;/strong&gt; - Update base image to openjdk 212 (&lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/8u212-relnotes-5292913.html&#34;&gt;Release notes&lt;/a&gt;. Please force pull to get these latest updates - including security patches etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Pre-Requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install docker-compose &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;modify the &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/wurstmeister/kafka-docker/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; to match your docker host IP (Note: Do not use localhost or 127.0.0.1 as the host ip if you want to run multiple brokers.)&lt;/li&gt; &#xA; &lt;li&gt;if you want to customize any Kafka parameters, simply add them as environment variables in &lt;code&gt;docker-compose.yml&lt;/code&gt;, e.g. in order to increase the &lt;code&gt;message.max.bytes&lt;/code&gt; parameter set the environment to &lt;code&gt;KAFKA_MESSAGE_MAX_BYTES: 2000000&lt;/code&gt;. To turn off automatic topic creation set &lt;code&gt;KAFKA_AUTO_CREATE_TOPICS_ENABLE: &#39;false&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kafka&#39;s log4j usage can be customized by adding environment variables prefixed with &lt;code&gt;LOG4J_&lt;/code&gt;. These will be mapped to &lt;code&gt;log4j.properties&lt;/code&gt;. For example: &lt;code&gt;LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER=DEBUG, authorizerAppender&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; There are several &#39;gotchas&#39; with configuring networking. If you are not sure about what the requirements are, please check out the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki/Connectivity&#34;&gt;Connectivity Guide&lt;/a&gt; in the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Start a cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose up -d &lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add more brokers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose scale kafka=3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Destroy a cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose stop&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;The default &lt;code&gt;docker-compose.yml&lt;/code&gt; should be seen as a starting point. By default each broker will get a new port number and broker id on restart. Depending on your use case this might not be desirable. If you need to use specific ports and broker ids, modify the docker-compose configuration accordingly, e.g. &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/raw/master/docker-compose-single-broker.yml&#34;&gt;docker-compose-single-broker.yml&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose -f docker-compose-single-broker.yml up&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broker IDs&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the broker id in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_BROKER_ID&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;BROKER_ID_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;BROKER_ID_COMMAND: &#34;hostname | awk -F&#39;-&#39; &#39;{print $$2}&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you don&#39;t specify a broker id in your docker-compose file, it will automatically be generated (see &lt;a href=&#34;https://issues.apache.org/jira/browse/KAFKA-1070&#34;&gt;https://issues.apache.org/jira/browse/KAFKA-1070&lt;/a&gt;. This allows scaling up and down. In this case it is recommended to use the &lt;code&gt;--no-recreate&lt;/code&gt; option of docker-compose to ensure that containers are not re-created and thus keep their names and ids.&lt;/p&gt; &#xA;&lt;h2&gt;Automatically create topics&lt;/h2&gt; &#xA;&lt;p&gt;If you want to have kafka-docker automatically create topics in Kafka during creation, a &lt;code&gt;KAFKA_CREATE_TOPICS&lt;/code&gt; environment variable can be added in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example snippet from &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    environment:&#xA;      KAFKA_CREATE_TOPICS: &#34;Topic1:1:3,Topic2:1:1:compact&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Topic 1&lt;/code&gt; will have 1 partition and 3 replicas, &lt;code&gt;Topic 2&lt;/code&gt; will have 1 partition, 1 replica and a &lt;code&gt;cleanup.policy&lt;/code&gt; set to &lt;code&gt;compact&lt;/code&gt;. Also, see FAQ: &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki#topic-compaction-does-not-work&#34;&gt;Topic compaction does not work&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use multi-line YAML or some other delimiter between your topic definitions, override the default &lt;code&gt;,&lt;/code&gt; separator by specifying the &lt;code&gt;KAFKA_CREATE_TOPICS_SEPARATOR&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;KAFKA_CREATE_TOPICS_SEPARATOR: &#34;$$&#39;\n&#39;&#34;&lt;/code&gt; would use a newline to split the topic definitions. Syntax has to follow docker-compose escaping rules, and &lt;a href=&#34;https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html&#34;&gt;ANSI-C&lt;/a&gt; quoting.&lt;/p&gt; &#xA;&lt;h2&gt;Advertised hostname&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the advertised hostname in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;HOSTNAME_COMMAND: &#34;route -n | awk &#39;/UG[ \t]/{print $$2}&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When using commands, make sure you review the &#34;Variable Substitution&#34; section in &lt;a href=&#34;https://docs.docker.com/compose/compose-file/#variable-substitution&#34;&gt;https://docs.docker.com/compose/compose-file/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt; is specified, it takes precedence over &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For AWS deployment, you can use the Metadata service to get the container host&#39;s IP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HOSTNAME_COMMAND=wget -t3 -T2 -qO-  http://169.254.169.254/latest/meta-data/local-ipv4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reference: &lt;a href=&#34;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&#34;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Injecting HOSTNAME_COMMAND into configuration&lt;/h3&gt; &#xA;&lt;p&gt;If you require the value of &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt; in any of your other &lt;code&gt;KAFKA_XXX&lt;/code&gt; variables, use the &lt;code&gt;_{HOSTNAME_COMMAND}&lt;/code&gt; string in your variable value, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS=SSL://_{HOSTNAME_COMMAND}:9093,PLAINTEXT://9092&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advertised port&lt;/h2&gt; &#xA;&lt;p&gt;If the required advertised port is not static, it may be necessary to determine this programatically. This can be done with the &lt;code&gt;PORT_COMMAND&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PORT_COMMAND: &#34;docker port $$(hostname) 9092/tcp | cut -d: -f2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be then interpolated in any other &lt;code&gt;KAFKA_XXX&lt;/code&gt; config using the &lt;code&gt;_{PORT_COMMAND}&lt;/code&gt; string, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://1.2.3.4:_{PORT_COMMAND}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Listener Configuration&lt;/h2&gt; &#xA;&lt;p&gt;It may be useful to have the &lt;a href=&#34;https://kafka.apache.org/documentation/&#34;&gt;Kafka Documentation&lt;/a&gt; open, to understand the various broker listener configuration options.&lt;/p&gt; &#xA;&lt;p&gt;Since 0.9.0, Kafka has supported &lt;a href=&#34;https://issues.apache.org/jira/browse/KAFKA-1809&#34;&gt;multiple listener configurations&lt;/a&gt; for brokers to help support different protocols and discriminate between internal and external traffic. Later versions of Kafka have deprecated &lt;code&gt;advertised.host.name&lt;/code&gt; and &lt;code&gt;advertised.port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;advertised.host.name&lt;/code&gt; and &lt;code&gt;advertised.port&lt;/code&gt; still work as expected, but should not be used if configuring the listeners.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;The example environment below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HOSTNAME_COMMAND: curl http://169.254.169.254/latest/meta-data/public-hostname&#xA;KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094&#xA;KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094&#xA;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT&#xA;KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will result in the following broker config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;advertised.listeners = OUTSIDE://ec2-xx-xx-xxx-xx.us-west-2.compute.amazonaws.com:9094,INSIDE://:9092&#xA;listeners = OUTSIDE://:9094,INSIDE://:9092&#xA;inter.broker.listener.name = INSIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No listeners may share a port number.&lt;/li&gt; &#xA; &lt;li&gt;An advertised.listener must be present by protocol name and port number in the list of listeners.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broker Rack&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the broker rack affinity in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_BROKER_RACK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;RACK_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;RACK_COMMAND: &#34;curl http://169.254.169.254/latest/meta-data/placement/availability-zone&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In the above example the AWS metadata service is used to put the instance&#39;s availability zone in the &lt;code&gt;broker.rack&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;h2&gt;JMX&lt;/h2&gt; &#xA;&lt;p&gt;For monitoring purposes you may wish to configure JMX. Additional to the standard JMX parameters, problems could arise from the underlying RMI protocol used to connect&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;java.rmi.server.hostname - interface to bind listening port&lt;/li&gt; &#xA; &lt;li&gt;com.sun.management.jmxremote.rmi.port - The port to service RMI requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to connect to a kafka running locally (assumes exposing port 1099)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  KAFKA_JMX_OPTS: &#34;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099&#34;&#xA;  JMX_PORT: 1099&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Jconsole can now connect at &lt;code&gt;jconsole 192.168.99.100:1099&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker Swarm Mode&lt;/h2&gt; &#xA;&lt;p&gt;The listener configuration above is necessary when deploying Kafka in a Docker Swarm using an overlay network. By separating OUTSIDE and INSIDE listeners, a host can communicate with clients outside the overlay network while still benefiting from it from within the swarm.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the multiple-listener configuration, additional best practices for operating Kafka in a Docker Swarm include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &#34;deploy: global&#34; in a compose file to launch one and only one Kafka broker per swarm node.&lt;/li&gt; &#xA; &lt;li&gt;Use compose file version &#39;3.2&#39; (minimum Docker version 16.04) and the &#34;long&#34; port definition with the port in &#34;host&#34; mode instead of the default &#34;ingress&#34; load-balanced port binding. This ensures that outside requests are always routed to the correct broker. For example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ports:&#xA;   - target: 9094&#xA;     published: 9094&#xA;     protocol: tcp&#xA;     mode: host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Older compose files using the short-version of port mapping may encounter Kafka client issues if their connection to individual brokers cannot be guaranteed.&lt;/p&gt; &#xA;&lt;p&gt;See the included sample compose file &lt;code&gt;docker-compose-swarm.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release process&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki/ReleaseProcess&#34;&gt;wiki&lt;/a&gt; for information on adding or updating versions to release to Dockerhub.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://wurstmeister.github.io/kafka-docker/&#34;&gt;http://wurstmeister.github.io/kafka-docker/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JaKooLit/Hyprland-Dots</title>
    <updated>2024-05-12T01:43:45Z</updated>
    <id>tag:github.com,2024-05-12:/JaKooLit/Hyprland-Dots</id>
    <link href="https://github.com/JaKooLit/Hyprland-Dots" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hyprland dots, used as main repo for all my Hyprland Install Scripts.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt;💌 ** JaKooLit Hyprland Dot Files ** 💌&lt;/h2&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/JaKooLit/Hyprland-Dots?style=for-the-badge&amp;amp;color=cba6f7&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/JaKooLit/Hyprland-Dots?style=for-the-badge&amp;amp;color=b4befe&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/JaKooLit/Hyprland-Dots?style=for-the-badge&amp;amp;color=cba6f7&#34; alt=&#34;GitHub repo size&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;SHOW CASE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/assets/85185940/50d53755-0f11-45d6-9913-76039e84a2cd&#34;&gt;https://github.com/JaKooLit/Hyprland-Dots/assets/85185940/50d53755-0f11-45d6-9913-76039e84a2cd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;📹 A video walkthroughs&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;YT Videos&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/fO-RBHvVEcc&#34;&gt;Walkthough&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/upDl1ns05eg&#34;&gt;V1-Changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/yaVurRoXc-s&#34;&gt;v2-Changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;📽️ A video coverage by other users. Pls watch and subscribe to their channel&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/Videos_and_Reviews&#34;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;👁️‍🗨️ My Hyprland install Scripts 👁️‍🗨️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can install Hyprland using Scripts below:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaKooLit/Fedora-Hyprland&#34;&gt;Fedora-Linux&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaKooLit/Debian-Hyprland&#34;&gt;Debian/Ubuntu-Linux&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaKooLit/Arch-Hyprland&#34;&gt;Arch-Linux&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaKooLit/OpenSuse-Hyprland&#34;&gt;OpenSUSE(Tumbleweed)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;refer to install scripts what packages needed to install... but atleast, Hyprland packages is needed 😏😏😏 duh!!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;👀 Screenshots 👀&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All screenshots are collected here &lt;a href=&#34;https://github.com/JaKooLit/screenshots/tree/main/Hyprland-ScreenShots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;📦 Whats new?&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To easily track changes, I will be updating the changelogs. &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/Changelogs&#34;&gt;CHANGELOGS&lt;/a&gt; Screenshots will be included if worth it!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;💥 Copying / Installation / Update instructions 💥&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/Install_&amp;amp;_Update&#34;&gt;&lt;code&gt;MORE INFO HERE&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] The auto copy script will create backups of intended folders to be copied. However, still a good idea to manually backup just incase script failed to backup!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;~/.config (btop cava hypr kitty rofi swappy swaync waybar wlogout) - These are folders to be copied.&lt;/li&gt; &#xA; &lt;li&gt;~/Pictures/wallpapers - Will be backed up&lt;/li&gt; &#xA; &lt;li&gt;clone this repo by using git. Change directory, make executable and run the script&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth=1 https://github.com/JaKooLit/Hyprland-Dots.git&#xA;cd Hyprland-Dots&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;to copy/install from upstream (possible bugs)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x copy.sh&#xA;./copy.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;to copy/install from releases (more &#34;stable&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x release.sh&#xA;./release.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UPGRADE.sh (Experimental)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] You should atleast v2.2.3 in your hyprland dots (ls ~/.config/hypr) to check version You need rsync for it to work&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] you should have already up and running Hyprland before using this function&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x upgrade.sh&#xA;./upgrade.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;🛎️ a small note on wallpapers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;by default, only few wallpapers will be copied (1 each dark and light plus 2 more). You will be offered to download more wallpapers. You can preview/check the additional wallpapers on &lt;a href=&#34;https://github.com/JaKooLit/Wallpaper-Bank/tree/main/wallpapers&#34;&gt;&lt;code&gt;THIS&lt;/code&gt;&lt;/a&gt; Link&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;⚠️⚠️⚠️ A MUST! after copying / Installing these dots&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;By default I have not set a wallpaper. Press SUPER W and set a wallpaper. This is also to initiate pywal for waybar, kitty (tty) and rofi themes. If you use the copy.sh script, you wont need to do this.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nvidia Owners. Make sure to edit your &lt;code&gt;~/.config/hypr/UserConfigs/ENVariables.conf&lt;/code&gt; (recommended). Below env&#39;s will be activated if automatic copy is used&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WLR_NO_CURSORS,1 , LIBVA_DRIVER_NAME,nvidia , __GLX_VENDOR_LIBRARY_NAME,nvidia&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NVIDIA users / owners, after installation, check &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/Notes_to_remember#--for-nvidia-gpu-users&#34;&gt;&lt;code&gt;THIS&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have already set your own keybinds, monitors, etc.... Just copy over from backup created before log-out or reboot. (recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;📖 Known issues and possible solutions&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;check out this page &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; and &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/Known_Issues&#34;&gt;UNSOLVED ISSUES&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;🙋 QUESTIONS ?!?! ⁉️&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FAQ! Yes you can use these dotfiles to other distro! Just ensure to install proper packages first! If it makes you feel better, I use same config on my Gentoo and NixOS :)&lt;/li&gt; &#xA; &lt;li&gt;QUICK HINT! Click the HINT! Waybar module (note only available in Waybar default and Simple-L [TOP] layout). Can be launched by Keybind SUPER H&lt;/li&gt; &#xA; &lt;li&gt;More question? click here &lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots/wiki/&#34;&gt;WIKI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;🙏 Special request&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have improvements on the dotfiles or configuration, feel free to submit a PR for improvement. I always welcome improvements as I am also just learning just like you guys!&lt;/li&gt; &#xA; &lt;li&gt;Waybar styles (all those new panel styles require some tweaking) - I kindly request assistance 🙏&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;🤷‍♂️ TO DO!&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Tweak dots - 🚧 in constant progress&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;[ ] Quite possibly switch to starship? Although starship has limited themes compared to oh-my-zsh.&lt;/del&gt; no plans for now&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;🔮 Discord Server&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kindly join my &lt;a href=&#34;https://discord.gg/V2SJ92vbEN&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;💖 Support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;a Star on my Github repos would be nice 🌟&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Subscribe to my Youtube Channel &lt;a href=&#34;https://www.youtube.com/@Ja.KooLit&#34;&gt;YouTube&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also buy me Coffee Through ko-fi.com or Coffee.com 🤩&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/jakoolit&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;35&#34; style=&#34;border:0px;height:46px;&#34; src=&#34;https://az743702.vo.msecnd.net/cdn/kofi3.png?v=0&#34; border=&#34;0&#34; alt=&#34;Buy Me a Coffee at ko-fi.com&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://ko-fi.com/jakoolit&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/jakoolit&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://www.buymeacoffee.com/JaKooLit&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🥰🥰 💖💖 👍👍👍&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/JaKooLit/Hyprland-Dots&#34;&gt;&lt;img src=&#34;https://starchart.cc/JaKooLit/Hyprland-Dots.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Frogging-Family/linux-tkg</title>
    <updated>2024-05-12T01:43:45Z</updated>
    <id>tag:github.com,2024-05-12:/Frogging-Family/linux-tkg</id>
    <link href="https://github.com/Frogging-Family/linux-tkg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;linux-tkg custom kernels&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;linux-tkg&lt;/h2&gt; &#xA;&lt;p&gt;This repository provides scripts to automatically download, patch and compile the Linux Kernel from &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git&#34;&gt;the official Linux git repository&lt;/a&gt;, with a selection of patches aiming for better desktop/gaming experience. The provided patches can be enabled/disabled by editing the &lt;code&gt;customization.cfg&lt;/code&gt; file and/or by following the interactive install script. You can use an external config file (default is &lt;code&gt;$HOME/.config/frogminer/linux-tkg.cfg&lt;/code&gt;, tweakable with the &lt;code&gt;_EXT_CONFIG_PATH&lt;/code&gt; variable in &lt;code&gt;customization.cfg&lt;/code&gt;). You can also use your own patches (more information in &lt;code&gt;customization.cfg&lt;/code&gt; file).&lt;/p&gt; &#xA;&lt;h3&gt;Important information&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Non-pacman distros support can be considered experimental. You&#39;re invited to report issues you might encounter with it.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;If your distro isn&#39;t using systemd, please set _configfile=&#34;running-kernel&#34; in customization.cfg or you might end up with a non-bootable kernel&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Keep in mind building recent linux kernels with GCC will require ~20-25GB of disk space. Using llvm/clang, LTO, ccache and/or enabling more drivers in the defconfig will push that requirement higher, so make sure you have enough free space on the volume you&#39;re using to build.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;intel_pstate&lt;/code&gt; driver, frequency scaling aggressiveness has been changed with kernel 5.5 which results in stutters and poor performance in low/medium load scenarios (for higher power savings). As a workaround for our gaming needs, we are setting it to passive mode to make use of the &lt;code&gt;acpi_cpufreq&lt;/code&gt; governor passthrough, keeping full support for turbo frequencies. It&#39;s combined with our aggressive ondemand governor by default for good performance on most CPUs while keeping frequency scaling for power savings. In a typical low/medium load scenario (Core i7 9700k, playing Mario Galaxy on Dolphin emulator) intel_pstate in performance mode gives a stuttery 45-50 fps experience, while passive mode + aggressive ondemand offers a locked 60 fps.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nvidia&#39;s proprietary drivers might need to be patched if they don&#39;t support your chosen kernel OOTB: &lt;a href=&#34;https://github.com/Frogging-Family/nvidia-all&#34;&gt;Frogging-Family nvidia-all&lt;/a&gt; can do that automatically for you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note regarding kernels older than 5.9 on Arch Linux: since the switch to &lt;code&gt;zstd&lt;/code&gt; compressed &lt;code&gt;initramfs&lt;/code&gt; by default, you will face an &lt;code&gt;invalid magic at start of compress&lt;/code&gt; error by default. You can workaround the issue by editing &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt; to uncomment the &lt;code&gt;COMPRESSION=&#34;lz4&#34;&lt;/code&gt; (for example, since that&#39;s the best option after zstd) line and regenerating &lt;code&gt;initramfs&lt;/code&gt; for all kernels with &lt;code&gt;sudo mkinitpcio -P&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Customization options&lt;/h3&gt; &#xA;&lt;h4&gt;Alternative CPU schedulers&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Completely_Fair_Scheduler&#34;&gt;CFS&lt;/a&gt; is the only CPU scheduler available in the &#34;vanilla&#34; kernel sources ≤ 6.5. &lt;a href=&#34;https://lwn.net/Articles/925371/&#34;&gt;EEVDF&lt;/a&gt; is the only CPU scheduler available in the &#34;vanilla&#34; kernel sources ≥ 6.6.&lt;/p&gt; &#xA;&lt;p&gt;Its current implementation doesn&#39;t allow for injecting additional schedulers at kernel level, and requires replacing it. Only one scheduler can be patched in at a time. However, using &lt;a href=&#34;https://github.com/sched-ext/scx&#34;&gt;Sched-ext&lt;/a&gt;, it&#39;s possible to inject CPU schedulers at runtime. We offer support for it on ≥ 6.8 by default. Arch users can find scx schedulers on the &lt;a href=&#34;https://aur.archlinux.org/packages/scx-scheds&#34;&gt;AUR&lt;/a&gt; thanks to @sirlucjan (for persistence, set scheduler in &#34;/etc/default/scx&#34; and enable the &lt;code&gt;scx&lt;/code&gt; service).&lt;/p&gt; &#xA;&lt;p&gt;Alternative schedulers are available to you in linux-tkg:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project C / PDS &amp;amp; BMQ by Alfred Chen: &lt;a href=&#34;http://cchalpha.blogspot.com/&#34;&gt;blog&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/alfredchen/projectc&#34;&gt;code repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MuQSS by Con Kolivas : &lt;a href=&#34;http://ck-hack.blogspot.com/&#34;&gt;blog&lt;/a&gt;, &lt;a href=&#34;https://github.com/ckolivas/linux&#34;&gt;code repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CacULE by Hamad Marri - CFS based : &lt;a href=&#34;https://github.com/hamadmarri/cacule-cpu-scheduler&#34;&gt;code repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Task Type (TT) by Hamad Marri - CFS based : &lt;a href=&#34;https://github.com/hamadmarri/TT-CPU-Scheduler&#34;&gt;code repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BORE (Burst-Oriented Response Enhancer) by Masahito Suzuki - CFS/EEVDF based : &lt;a href=&#34;https://github.com/firelzrd/bore-scheduler&#34;&gt;code repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Undead PDS : TkG&#39;s port of the pre-Project C &#34;PDS-mq&#34; scheduler by Alfred Chen. While PDS-mq got dropped with kernel 5.1 in favor of its BMQ evolution/rework, it wasn&#39;t on par with PDS-mq in gaming. &#34;U&#34; PDS still performed better in some cases than other schedulers, so it&#39;s been kept undead for a while.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These alternative schedulers can offer a better performance/latency ratio for gaming and desktop use. The availability of each scheduler depends on the chosen Kernel version: the script will display what&#39;s available on a per-version basis.&lt;/p&gt; &#xA;&lt;h4&gt;Default tweaks&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Memory management and swapping tweaks&lt;/li&gt; &#xA; &lt;li&gt;Scheduling tweaks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CFS/EEVDF&lt;/code&gt; tweaks&lt;/li&gt; &#xA; &lt;li&gt;Using the &lt;a href=&#34;https://www.bufferbloat.net/projects/codel/wiki/CakeTechnical/&#34;&gt;&#34;Cake&#34;&lt;/a&gt; network queue management system&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;code&gt;vm.max_map_count=16777216&lt;/code&gt; by default&lt;/li&gt; &#xA; &lt;li&gt;Cherry-picked patches from &lt;a href=&#34;https://github.com/clearlinux-pkgs/linux&#34;&gt;Clear Linux&#39;s patchset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Optional tweaks&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;customization.cfg&lt;/code&gt; file offers many toggles for extra tweaks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo.or.cz/linux/zf.git/shortlog/refs/heads/ntsync5&#34;&gt;NTsync&lt;/a&gt;, &lt;code&gt;Fsync&lt;/code&gt; and &lt;code&gt;Futex2&lt;/code&gt;(deprecated) support: can improve the performance in games, needs a patched wine like &lt;a href=&#34;https://github.com/Frogging-Family/wine-tkg-git&#34;&gt;wine-tkg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/graysky2/kernel_compiler_patch&#34;&gt;Graysky&#39;s per-CPU-arch native optimizations&lt;/a&gt;: tunes the compiled code to to a specified CPU&lt;/li&gt; &#xA; &lt;li&gt;Compile with GCC or Clang with optional &lt;code&gt;O2&lt;/code&gt;/&lt;code&gt;O3&lt;/code&gt; and &lt;code&gt;LTO&lt;/code&gt; (Clang only) optimizations. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Warning regarding DKMS modules prior to v3.0.2 (2021-11-21) and Clang:&lt;/strong&gt; &lt;code&gt;DKMS&lt;/code&gt; version v3.0.1 and earlier will default to using GCC, which will fail to build modules against a Clang-built kernel. This will - for example - break Nvidia drivers. Forcing older &lt;code&gt;DKMS&lt;/code&gt; to use Clang can be done but isn&#39;t recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/graysky2/modprobed-db&#34;&gt;Modprobed-db&lt;/a&gt;&#39;s database can reduce the compilation time and produce a smaller kernel which will only contain the modules listed in it. &lt;strong&gt;NOT recommended&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Warning&lt;/strong&gt;: make sure to read &lt;a href=&#34;https://wiki.archlinux.org/index.php/Modprobed-db&#34;&gt;thoroughly about it first&lt;/a&gt; since it comes with caveats that can lead to an unbootable kernel.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&#34;Zenify&#34; patchset using core blk, mm and scheduler tweaks from Zen&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZFS&lt;/code&gt; FPU symbols (&amp;lt;5.9)&lt;/li&gt; &#xA; &lt;li&gt;Overrides for missing ACS capabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Waydroid&#34;&gt;Waydroid&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/CalcProgrammer1/OpenRGB&#34;&gt;OpenRGB&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Provide own kernel &lt;code&gt;.config&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;User patches&lt;/h4&gt; &#xA;&lt;p&gt;To apply your own patch files using the provided scripts, you will need to put them in a &lt;code&gt;linux&amp;lt;VERSION&amp;gt;&amp;lt;PATCHLEVEL&amp;gt;-tkg-userpatches&lt;/code&gt; folder -- where &lt;em&gt;VERSION&lt;/em&gt; and &lt;em&gt;PATCHLEVEL&lt;/em&gt; are the kernel version and patch level, as specified in &lt;a href=&#34;https://github.com/torvalds/linux/raw/master/Makefile&#34;&gt;linux Makefile&lt;/a&gt;, the patch works on, &lt;em&gt;e.g&lt;/em&gt; &lt;code&gt;linux65-tkg-userpatches&lt;/code&gt; -- at the same level as the &lt;code&gt;PKGBUILD&lt;/code&gt; file, with the &lt;code&gt;.mypatch&lt;/code&gt; extension. The script will by default ask if you want to apply them, one by one. The option &lt;code&gt;_user_patches&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;customization.cfg&lt;/code&gt; file for this to work.&lt;/p&gt; &#xA;&lt;h3&gt;Install procedure&lt;/h3&gt; &#xA;&lt;p&gt;For all the supported linux distributions, &lt;code&gt;linux-tkg&lt;/code&gt; has to be cloned with &lt;code&gt;git&lt;/code&gt;. Since it keeps a clone of the kernel&#39;s sources within (&lt;code&gt;linux-src-git&lt;/code&gt;, created during the first build after a fresh clone), it is recommended to keep the cloned &lt;code&gt;linux-tkg&lt;/code&gt; folder and simply update it with &lt;code&gt;git pull&lt;/code&gt;, the install script does the necessary cleanup at every run.&lt;/p&gt; &#xA;&lt;h4&gt;Arch &amp;amp; derivatives&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Frogging-Family/linux-tkg.git&#xA;cd linux-tkg&#xA;# Optional: edit the &#34;customization.cfg&#34; file&#xA;makepkg -si&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will use a slightly modified Arch config from the &lt;code&gt;linux-tkg-config&lt;/code&gt; folder, it can be changed through the &lt;code&gt;_configfile&lt;/code&gt; variable in &lt;code&gt;customization.cfg&lt;/code&gt;. The options selected at build-time are installed to &lt;code&gt;/usr/share/doc/$pkgbase/customization.cfg&lt;/code&gt;, where &lt;code&gt;$pkgbase&lt;/code&gt; is the package name.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the &lt;code&gt;base-devel&lt;/code&gt; package group is expected to be installed, see &lt;a href=&#34;https://wiki.archlinux.org/title/Makepkg&#34;&gt;here&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h4&gt;DEB (Debian, Ubuntu and derivatives) and RPM (Fedora, SUSE and derivatives) based distributions&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important notes:&lt;/strong&gt; An issue has been reported for Ubuntu where the stock kernel cannot boot properly any longer, the whereabouts are not entirely clear (only a single user reported that, see &lt;a href=&#34;https://github.com/Frogging-Family/linux-tkg/issues/436&#34;&gt;https://github.com/Frogging-Family/linux-tkg/issues/436&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The interactive &lt;code&gt;install.sh&lt;/code&gt; script will create, depending on the selected distro, &lt;code&gt;.deb&lt;/code&gt; or &lt;code&gt;.rpm&lt;/code&gt; packages, move them in the the subfolder &lt;code&gt;DEBS&lt;/code&gt; or &lt;code&gt;RPMS&lt;/code&gt; then prompts to install them with the distro&#39;s package manager.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Frogging-Family/linux-tkg.git&#xA;cd linux-tkg&#xA;# Optional: edit the &#34;customization.cfg&#34; file&#xA;./install.sh install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Uninstalling custom kernels installed through the script has to be done manually. &lt;code&gt;install.sh&lt;/code&gt; can can help out with some useful information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd path/to/linux-tkg&#xA;./install.sh uninstall-help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will use a slightly modified Arch config from the &lt;code&gt;linux-tkg-config&lt;/code&gt; folder, it can be changed through the &lt;code&gt;_configfile&lt;/code&gt; variable in &lt;code&gt;customization.cfg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Generic install&lt;/h4&gt; &#xA;&lt;p&gt;The interactive &lt;code&gt;install.sh&lt;/code&gt; script can be used to perform a &#34;Generic&#34; install by choosing &lt;code&gt;Generic&lt;/code&gt; when prompted. It git clones the kernel tree in the &lt;code&gt;linux-src-git&lt;/code&gt; folder, patches the code and edits a &lt;code&gt;.config&lt;/code&gt; file in it. The commands to do are the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Frogging-Family/linux-tkg.git&#xA;cd linux-tkg&#xA;# Optional: edit the &#34;customization.cfg&#34; file&#xA;./install.sh install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will compile the kernel then prompt before doing the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo cp -R . /usr/src/linux-tkg-${kernel_flavor}&#xA;cd /usr/src/linux-tkg-${kernel_flavor}&#xA;sudo make modules_install&#xA;sudo make install&#xA;sudo dracut --force --hostonly --kver $_kernelname $_dracut_options&#xA;sudo grub-mkconfig -o /boot/grub/grub.cfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All the needed dependencies to patch, configure, compile or install the kernel are expected to be installed by the user beforehand.&lt;/li&gt; &#xA; &lt;li&gt;If you only want the script to patch the sources in &lt;code&gt;linux-src-git&lt;/code&gt;, you can use &lt;code&gt;./install.sh config&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;${kernel_flavor}&lt;/code&gt; is a default naming scheme but can be customized with the variable &lt;code&gt;_kernel_localversion&lt;/code&gt; in &lt;code&gt;customization.cfg&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_dracut_options&lt;/code&gt; is a variable that can be changed in &lt;code&gt;customization.cfg&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_libunwind_replace&lt;/code&gt; is a variable that can be changed in &lt;code&gt;customization.cfg&lt;/code&gt; for replacing &lt;code&gt;libunwind&lt;/code&gt; with &lt;code&gt;llvm-libunwind&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The script uses Arch&#39;s &lt;code&gt;.config&lt;/code&gt; file as a base. A custom one can be provided through &lt;code&gt;_configfile&lt;/code&gt; in &lt;code&gt;customization.cfg&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The installed files will not be tracked by your package manager and uninstalling requires manual intervention. &lt;code&gt;./install.sh uninstall-help&lt;/code&gt; can help with useful information if your install procedure follows the &lt;code&gt;Generic&lt;/code&gt; approach.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Gentoo&lt;/h4&gt; &#xA;&lt;p&gt;The interactive &lt;code&gt;install.sh&lt;/code&gt; script supports Gentoo by following the same procedure as &lt;code&gt;Generic&lt;/code&gt;, symlinks the sources folder in &lt;code&gt;/usr/src/&lt;/code&gt; to &lt;code&gt;/usr/src/linux&lt;/code&gt;, then offers to do an &lt;code&gt;emerge @module-rebuild&lt;/code&gt; for convenience&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Frogging-Family/linux-tkg.git&#xA;cd linux-tkg&#xA;# Optional: edit the &#34;customization.cfg&#34; file&#xA;./install.sh install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re running openrc, you&#39;ll want to set &lt;code&gt;_configfile=&#34;running-kernel&#34;&lt;/code&gt; to use your current kernel&#39;s defconfig instead of Arch&#39;s. Else the resulting kernel won&#39;t boot.&lt;/p&gt;</summary>
  </entry>
</feed>