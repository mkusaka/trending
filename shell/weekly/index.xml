<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-14T01:41:17Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ryanrudolfoba/SteamOS-Waydroid-Installer</title>
    <updated>2024-07-14T01:41:17Z</updated>
    <id>tag:github.com,2024-07-14:/ryanrudolfoba/SteamOS-Waydroid-Installer</id>
    <link href="https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script to easily install / uninstall Android via Waydroid on the Steam Deck running on SteamOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SteamOS Android Waydroid Installer&lt;/h1&gt; &#xA;&lt;p&gt;A collection of tools that is packaged into an easy to use script that is streamlined and tested to work with the Steam Deck running on SteamOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The main program that does all the heavy lifting is &lt;a href=&#34;https://github.com/waydroid/waydroid&#34;&gt;Waydroid - a container-based approach to boot a full Android system on a regular GNU/Linux system.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Waydroid Toolbox to easily toggle some configuration settings for Waydroid.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/casualsnek/waydroid_script&#34;&gt;waydroid_script&lt;/a&gt; to easily add the libndk ARM translation layer and widevine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Slappy826/libndk-fixer&#34;&gt;libndk-fixer&lt;/a&gt; is a fixed / improved libndk translation layer specific for Roblox &lt;a href=&#34;https://youtu.be/-czisFuKoTM?si=8EPXyzasi3no70Tl&#34;&gt;(demo guide here)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;br&gt; If you are going to use this script for a video tutorial, PLEASE reference on your video where you got the script! This will make the support process easier! And don&#39;t forget to give a shoutout to &lt;a href=&#34;https://www.youtube.com/@10MinuteSteamDeckGamer/&#34;&gt;@10MinuteSteamDeckGamer&lt;/a&gt; / ryanrudolf from the Philippines!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;b&gt; If you like my work please show support by subscribing to my &lt;a href=&#34;https://www.youtube.com/@10MinuteSteamDeckGamer/&#34;&gt;YouTube channel @10MinuteSteamDeckGamer.&lt;/a&gt; &lt;/b&gt; &lt;br&gt; &lt;b&gt; I&#39;m just passionate about Linux, Windows, how stuff works, and playing retro and modern video games on my Steam Deck! &lt;/b&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.youtube.com/@10MinuteSteamDeckGamer/&#34;&gt; &lt;img src=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/raw/main/10minute.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Monetary donations are also encouraged if you find this project helpful. Your donation inspires me to continue research on the Steam Deck! Clover script, 70Hz mod, SteamOS microSD, Secure Boot, etc.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Scan the QR code or click the image below to visit my donation page.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.paypal.com/donate/?business=VSMP49KYGADT4&amp;amp;no_recurring=0&amp;amp;item_name=Your+donation+inspires+me+to+continue+research+on+the+Steam+Deck%21%0AClover+script%2C+70Hz+mod%2C+SteamOS+microSD%2C+Secure+Boot%2C+etc.%0A%0A&amp;amp;currency_code=CAD&#34;&gt; &lt;img src=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/raw/main/QRCode.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Do this at your own risk!&lt;/li&gt; &#xA; &lt;li&gt;This is for educational and research purposes only!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://youtu.be/8S1RNSqFDu4?si=oCfwYNbs8u9sMKGr&#34;&gt;Video Tutorial - SteamOS Android Waydroid Installer&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/06T-h-jPVx8?si=pTWAlmcYyk9fHa38&#34;&gt;Click the image below for a video tutorial and to see the functionalities of the script!&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://youtu.be/06T-h-jPVx8?si=pTWAlmcYyk9fHa38&#34;&gt; &lt;img src=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/raw/main/android.webp&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;What&#39;s New (as of May 28 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fix for scoped storage permission issue. Apps can now write to data / obb folder. &lt;a href=&#34;https://youtu.be/_10oQK-ionY?si=bfIBvHPv_spyLPCy&#34;&gt;FIFA 14 now works because of this!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What&#39;s New (as of May 05 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Minor fix - make minigbm_gbm_mesa as default. This should make &lt;a href=&#34;https://youtu.be/-czisFuKoTM?si=8EPXyzasi3no70Tl&#34;&gt;Roblox performance better.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Waydroid Toolbox - added option to toggle between gbm or minigbm_gbm_mesa.&lt;/li&gt; &#xA; &lt;li&gt;Added verbose error message when Waydroid initialization fails during install.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Updated Waydroid Toolbox to easily configure some aspects of Waydroid&lt;/strong&gt; &lt;img src=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/assets/98122529/3973f218-25a4-4e4b-aba6-b96c45f9a4ef&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What&#39;s New (as of May 01 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Roblox now works thanks to slappy826! &lt;a href=&#34;https://youtu.be/-czisFuKoTM?si=8EPXyzasi3no70Tl&#34;&gt;demo guide here how to configure Roblox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Updated the Waydroid Toolbox script&lt;/li&gt; &#xA; &lt;li&gt;code cleanup / additional logic&lt;/li&gt; &#xA; &lt;li&gt;switch from gbm to minigm_gbm_mesa&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What&#39;s New (as of April 25 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;This works with latest stable SteamOS 3.5.19. There is no kernel change for SteamOS - it still uses 6.1.52-valve16-1 so this works right away no need for new kernel modules.&lt;br&gt; SteamOS has been stuck on 6.1.52-valve16-1 for several releases now so I think this will stay and next major bump will be on SteamOS 3.6.x.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What&#39;s New (as of March 09 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Updated launcher to easily run APKs in Game Mode. &lt;a href=&#34;https://youtu.be/pkRtPHfa_EM?si=broimKF1menbRxGg&#34;&gt;demo guide here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fix minor typo in uninstall - this now removes the Waydroid application entries in the KDE menu.&lt;/li&gt; &#xA; &lt;li&gt;Added Waydroid Toolbox to easily configure some aspects of Waydroid. &lt;img src=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/assets/98122529/058c1321-4636-44d7-8b7d-1569f478894b&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What&#39;s New (as of February 11 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Added support for latest SteamOS Preview 3.5.15 - kernel 6.1.52-valve16-1-neptune-61&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What&#39;s New (as of February 10 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/issues/22&#34;&gt;lower audio latency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;added more sanity checks&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What&#39;s New (as of February 07 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;removed weston. been testing cage for several weeks now and this is way better than weston.&lt;/li&gt; &#xA; &lt;li&gt;added custom hosts file to block ads&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/raw/main/CHANGELOG.md&#34;&gt;Click here to view previous CHANGELOGS&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;Install Steps&lt;/h1&gt; &#xA;&lt;p&gt;Read the sections below carefully!&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites for SteamOS&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;sudo password should already be set by the end user. If sudo password is not yet set, the script will ask to set it up.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;NOTE IF YOU ARE USING AN OLDER VERSION OF MY SCRIPT FROM 2023!&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/tree/main#i-dont-want-this-anymore-i-want-to-uninstall&#34;&gt;Uninstall first if you are using an older version from 2023.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are using my script from 2024 onwards no need to uninstall - just clone the repo to get the latest version and install it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go into Desktop Mode and open a konsole terminal.&lt;/li&gt; &#xA; &lt;li&gt;Clone the github repo. &lt;br&gt; cd ~/ &lt;br&gt; git clone &lt;a href=&#34;https://github.com/ryanrudolfoba/steamos-waydroid-installer&#34;&gt;https://github.com/ryanrudolfoba/steamos-waydroid-installer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute the script! &lt;br&gt; cd ~/steamos-waydroid-installer &lt;br&gt; chmod +x steamos-waydroid-installer.sh &lt;br&gt; ./steamos-waydroid-installer.sh&lt;/li&gt; &#xA; &lt;li&gt;Script will automatically install Waydroid together with the custom config. Install will roughly take around 5mins depending on the internet connection speed.&lt;/li&gt; &#xA; &lt;li&gt;Once done exit the script and go back to Game Mode.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Launching Waydroid&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to Game Mode.&lt;/li&gt; &#xA; &lt;li&gt;Run the Android_Waydroid_Cage launcher.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;I dont want this anymore! I want to uninstall!&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to Desktop Mode.&lt;/li&gt; &#xA; &lt;li&gt;There will be an icon called Waydroid Toolbox on the desktop.&lt;/li&gt; &#xA; &lt;li&gt;Launch that icon and select UNINSTALL. &lt;img src=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/assets/98122529/afdf9e95-7ccf-4bc8-9400-4b8332c5afe9&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Troubleshooting / Filing Bug Reports&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you encounter an issue with the script, try to &lt;a href=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/tree/main#i-dont-want-this-anymore-i-want-to-uninstall&#34;&gt;uninstall&lt;/a&gt;, clone the repo again and perform an install.&lt;br&gt; Reason for that - you might be using an older version of my script and a new version might have already fixed your issue.&lt;/li&gt; &#xA; &lt;li&gt;If uninstall / reinstall didn&#39;t help, open an issue and please be descriptive as possible. &lt;br&gt; At the minimum include this when filing an issue - &lt;br&gt; SteamOS version - &lt;br&gt; Error message encountered - &lt;br&gt; Screenshot of error - &lt;br&gt; Do you have any scripts / tweaks that might be causing issues?&lt;/li&gt; &#xA; &lt;li&gt;Downloads are slow when acquiring the waydroid image. This is similar to this &lt;a href=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/issues/26&#34;&gt;issue&lt;/a&gt;. &lt;br&gt; Answer - You might have connected to a slow sourceforge mirror. Press CTRL-C to cancel the download and re-run the script again.&lt;/li&gt; &#xA; &lt;li&gt;No shortcuts in Game Mode after running the script / Unsupported File Type when adding shortcuts. This is similar to this &lt;a href=&#34;https://github.com/ryanrudolfoba/SteamOS-Waydroid-Installer/issues/25&#34;&gt;issue&lt;/a&gt;. &lt;br&gt; Answer - This issue happens if Steam client cant be run because the script was called from an ssh or virtual tty session. Make sure to run the script on Desktop Mode via konsole.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;A Note on SteamOS Updates&lt;/h1&gt; &#xA;&lt;p&gt;When there is a SteamOS update the waydroid will be wiped. This is normal behavior due to how SteamOS applies updates. &lt;br&gt; Re-run the script again but if the SteamOS update contains a new kernel version the script will exit immediately. &lt;br&gt; Please file an issue report when this happens so I can compile a binder kernel module to match the SteamOS update.&lt;/p&gt; &#xA;&lt;h1&gt;Geekbench Benchmark Result Between OLED and LCD on SteamOS Android Waydroid&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/56YGZsU5j74&#34;&gt;Geekbench Result&lt;/a&gt; - Feb 11 2024&lt;/p&gt; &#xA;&lt;h1&gt;List of Games Tested Working with Demo Gameplay&lt;/h1&gt; &#xA;&lt;p&gt;This is a Work in Progress - list will be updated accordingly. &lt;br&gt; If you wish to contribute, please check the &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1pyqQw2XKJZBtGYBV0i7C510dyjVSU2YndhaTOEDavdU/edit?usp=sharing&#34;&gt;google sheets&lt;/a&gt; and include the game name, how it runs etc etc.&lt;/p&gt; &#xA;&lt;h2&gt;Games Tested By Me on Android Waydroid Steam Deck&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/rnb0z1LtDN8&#34;&gt;Plants vs Zombies&lt;/a&gt; - Feb 04 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/M1Y9DMG9rbM&#34;&gt;Honkai Star Rail&lt;/a&gt; - Feb 06 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/OCaatZdZR1I&#34;&gt;Asphalt 8 Airborne&lt;/a&gt; - Feb 08 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/6YdNOJ0u2KM&#34;&gt;Honkai Impact 3rd&lt;/a&gt; - Feb 10 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/PlPRNn92NDI&#34;&gt;Mobile Legends&lt;/a&gt; - Feb 13 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/wq87nd3MCrQ?si=h4A7NEwEFGujF7hH&#34;&gt;T3 Arena&lt;/a&gt; - Feb 16 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/rnb0z1LtDN8&#34;&gt;Warcraft Rumble&lt;/a&gt; - Feb 19 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/4lJOnGnEJjw&#34;&gt;Diablo Immortal&lt;/a&gt; - Feb 21 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/vKPJZeyw0DI&#34;&gt;Oceanhorn&lt;/a&gt; - Feb 23 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/XEcIYBDoOZk&#34;&gt;Candy Crush Saga&lt;/a&gt; - Mar 11 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/vatf5uY_Eak&#34;&gt;BombSquad&lt;/a&gt; - Mar 16 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/pRwvZBMDpY0&#34;&gt;Project BloodStrike&lt;/a&gt; - Mar 18 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/LLw4GnWL58I&#34;&gt;NBA Infinite&lt;/a&gt; - Mar 23 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/-czisFuKoTM?si=8EPXyzasi3no70Tl&#34;&gt;Roblox&lt;/a&gt; - May 01 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/RurH-XTTSDQ&#34;&gt;Plants vs Zombies 2 - Reflourished&lt;/a&gt; - May 17 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/KfQVCTtpiNI&#34;&gt;Wuthering Waves&lt;/a&gt; - May 23 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/_10oQK-ionY?si=bfIBvHPv_spyLPCy&#34;&gt;FIFA 14&lt;/a&gt; - May 28 2024 &lt;br&gt; &lt;a href=&#34;https://youtu.be/XlIB9MwyQdw?si=zLa5AAPyrAXiKct8&#34;&gt;KOF Arena / King of Fighters Arena&lt;/a&gt; - June 18 2024&lt;/p&gt; &#xA;&lt;h2&gt;Games Tested by Other Users&lt;/h2&gt; &#xA;&lt;p&gt;Please check this &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1pyqQw2XKJZBtGYBV0i7C510dyjVSU2YndhaTOEDavdU/edit?usp=sharing&#34;&gt;google sheets&lt;/a&gt; for games tested by other users. &lt;br&gt; Please feel free to add your game testing in there too! Thank you!&lt;/p&gt; &#xA;&lt;h1&gt;Mini-guides for Steam Deck Android Waydroid&lt;/h1&gt; &#xA;&lt;p&gt;This mini guides are tailor-fitted for the Steam Deck that uses the script provided in this repo. &lt;br&gt; &lt;a href=&#34;https://youtu.be/LglEbSdRc0M&#34;&gt;How to Sideload APKs&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/lfwoZZxXh7I&#34;&gt;How to Upgrade the Android Image&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/LtMGmSSB52g&#34;&gt;How to Configure Fake Wi-Fi&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/Xt2ceq8ZUJ8&#34;&gt;How to Configure Fake Touchscreen / Configure Mouse Clicks as Touchscreen Input&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/pkRtPHfa_EM?si=broimKF1menbRxGg&#34;&gt;How to Launch APKs Directly in Game Mode&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/D9ODCpjDK30&#34;&gt;Configure for 1080p When in Docked Mode&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/Q4QzzjkfZeI&#34;&gt;Configure sdcard as Main Storage for Waydroid&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/icVOh7IIfE0&#34;&gt;Activate and Configure Mantis Gamepad Pro&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/-czisFuKoTM?si=8EPXyzasi3no70Tl&#34;&gt;How to Configure Roblox&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://youtu.be/RurH-XTTSDQ&#34;&gt;How to Access the OBB Folder / How to Root&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RPi-Distro/pi-gen</title>
    <updated>2024-07-14T01:41:17Z</updated>
    <id>tag:github.com,2024-07-14:/RPi-Distro/pi-gen</id>
    <link href="https://github.com/RPi-Distro/pi-gen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tool used to create the official Raspberry Pi OS images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pi-gen&lt;/h1&gt; &#xA;&lt;p&gt;Tool used to create Raspberry Pi OS images, and custom images based on Raspberry Pi OS, which was in turn derived from the Raspbian project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Raspberry Pi OS 32 bit images are based primarily on Raspbian, while Raspberry Pi OS 64 bit images are based primarily on Debian.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;pi-gen runs on Debian-based operating systems released after 2017, and we always advise you use the latest OS for security reasons.&lt;/p&gt; &#xA;&lt;p&gt;On other Linux distributions it may be possible to use the Docker build described below.&lt;/p&gt; &#xA;&lt;p&gt;To install the required dependencies for &lt;code&gt;pi-gen&lt;/code&gt; you should run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install coreutils quilt parted qemu-user-static debootstrap zerofree zip \&#xA;dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc \&#xA;gpg pigz xxd arch-test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The file &lt;code&gt;depends&lt;/code&gt; contains a list of tools needed. The format of this package is &lt;code&gt;&amp;lt;tool&amp;gt;[:&amp;lt;debian-package&amp;gt;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started with building your images&lt;/h2&gt; &#xA;&lt;p&gt;Getting started is as simple as cloning this repository on your build machine. You can do so with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/RPI-Distro/pi-gen.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--depth 1&lt;/code&gt; can be added afer &lt;code&gt;git clone&lt;/code&gt; to create a shallow clone, only containing the latest revision of the repository. Do not do this on your development machine.&lt;/p&gt; &#xA;&lt;p&gt;Also, be careful to clone the repository to a base path &lt;strong&gt;NOT&lt;/strong&gt; containing spaces. This configuration is not supported by debootstrap and will lead to &lt;code&gt;pi-gen&lt;/code&gt; not running.&lt;/p&gt; &#xA;&lt;p&gt;After cloning the repository, you can move to the next step and start configuring your build.&lt;/p&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;p&gt;Upon execution, &lt;code&gt;build.sh&lt;/code&gt; will source the file &lt;code&gt;config&lt;/code&gt; in the current working directory. This bash shell fragment is intended to set needed environment variables.&lt;/p&gt; &#xA;&lt;p&gt;The following environment variables are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;IMG_NAME&lt;/code&gt; (Default: &lt;code&gt;raspios-$RELEASE-$ARCH&lt;/code&gt;, for example: &lt;code&gt;raspios-bookworm-armhf&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;The name of the image to build with the current stage directories. Use this variable to set the root name of your OS, eg &lt;code&gt;IMG_NAME=Frobulator&lt;/code&gt;. Export files in stages may add suffixes to &lt;code&gt;IMG_NAME&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;PI_GEN_RELEASE&lt;/code&gt; (Default: &lt;code&gt;Raspberry Pi reference&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;The release name to use in &lt;code&gt;/etc/issue.txt&lt;/code&gt;. The default should only be used for official Raspberry Pi builds.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RELEASE&lt;/code&gt; (Default: &lt;code&gt;bookworm&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;The release version to build images against. Valid values are any supported Debian release. However, since different releases will have different sets of packages available, you&#39;ll need to either modify your stages accordingly, or checkout the appropriate branch. For example, if you&#39;d like to build a &lt;code&gt;bullseye&lt;/code&gt; image, you should do so from the &lt;code&gt;bullseye&lt;/code&gt; branch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;APT_PROXY&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;p&gt;If you require the use of an apt proxy, set it here. This proxy setting will not be included in the image, making it safe to use an &lt;code&gt;apt-cacher&lt;/code&gt; or similar package for development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BASE_DIR&lt;/code&gt; (Default: location of &lt;code&gt;build.sh&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: Currently, changing this value will probably break build.sh&lt;/p&gt; &lt;p&gt;Top-level directory for &lt;code&gt;pi-gen&lt;/code&gt;. Contains stage directories, build scripts, and by default both work and deployment directories.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;WORK_DIR&lt;/code&gt; (Default: &lt;code&gt;$BASE_DIR/work&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Directory in which &lt;code&gt;pi-gen&lt;/code&gt; builds the target system. This value can be changed if you have a suitably large, fast storage location for stages to be built and cached. Note, &lt;code&gt;WORK_DIR&lt;/code&gt; stores a complete copy of the target system for each build stage, amounting to tens of gigabytes in the case of Raspbian.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: If your working directory is on an NTFS partition you probably won&#39;t be able to build: make sure this is a proper Linux filesystem.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;DEPLOY_DIR&lt;/code&gt; (Default: &lt;code&gt;$BASE_DIR/deploy&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Output directory for target system images and NOOBS bundles.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;DEPLOY_COMPRESSION&lt;/code&gt; (Default: &lt;code&gt;zip&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Set to:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;none&lt;/code&gt; to deploy the actual image (&lt;code&gt;.img&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;zip&lt;/code&gt; to deploy a zipped image (&lt;code&gt;.zip&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;gz&lt;/code&gt; to deploy a gzipped image (&lt;code&gt;.img.gz&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;xz&lt;/code&gt; to deploy a xzipped image (&lt;code&gt;.img.xz&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;DEPLOY_ZIP&lt;/code&gt; (Deprecated)&lt;/p&gt; &lt;p&gt;This option has been deprecated in favor of &lt;code&gt;DEPLOY_COMPRESSION&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If &lt;code&gt;DEPLOY_ZIP=0&lt;/code&gt; is still present in your config file, the behavior is the same as with &lt;code&gt;DEPLOY_COMPRESSION=none&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;COMPRESSION_LEVEL&lt;/code&gt; (Default: &lt;code&gt;6&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Compression level to be used when using &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;gz&lt;/code&gt; or &lt;code&gt;xz&lt;/code&gt; for &lt;code&gt;DEPLOY_COMPRESSION&lt;/code&gt;. From 0 to 9 (refer to the tool man page for more information on this. Usually 0 is no compression but very fast, up to 9 with the best compression but very slow ).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;USE_QEMU&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Setting to &#39;1&#39; enables the QEMU mode - creating an image that can be mounted via QEMU for an emulated environment. These images include &#34;-qemu&#34; in the image file name.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;LOCALE_DEFAULT&lt;/code&gt; (Default: &#39;en_GB.UTF-8&#39; )&lt;/p&gt; &lt;p&gt;Default system locale.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;TARGET_HOSTNAME&lt;/code&gt; (Default: &#39;raspberrypi&#39; )&lt;/p&gt; &lt;p&gt;Setting the hostname to the specified value.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;KEYBOARD_KEYMAP&lt;/code&gt; (Default: &#39;gb&#39; )&lt;/p&gt; &lt;p&gt;Default keyboard keymap.&lt;/p&gt; &lt;p&gt;To get the current value from a running system, run &lt;code&gt;debconf-show keyboard-configuration&lt;/code&gt; and look at the &lt;code&gt;keyboard-configuration/xkb-keymap&lt;/code&gt; value.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;KEYBOARD_LAYOUT&lt;/code&gt; (Default: &#39;English (UK)&#39; )&lt;/p&gt; &lt;p&gt;Default keyboard layout.&lt;/p&gt; &lt;p&gt;To get the current value from a running system, run &lt;code&gt;debconf-show keyboard-configuration&lt;/code&gt; and look at the &lt;code&gt;keyboard-configuration/variant&lt;/code&gt; value.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;TIMEZONE_DEFAULT&lt;/code&gt; (Default: &#39;Europe/London&#39; )&lt;/p&gt; &lt;p&gt;Default keyboard layout.&lt;/p&gt; &lt;p&gt;To get the current value from a running system, look in &lt;code&gt;/etc/timezone&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;FIRST_USER_NAME&lt;/code&gt; (Default: &lt;code&gt;pi&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Username for the first user. This user only exists during the image creation process. Unless &lt;code&gt;DISABLE_FIRST_BOOT_USER_RENAME&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;, this user will be renamed on the first boot with a name chosen by the final user. This security feature is designed to prevent shipping images with a default username and help prevent malicious actors from taking over your devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;FIRST_USER_PASS&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;p&gt;Password for the first user. If unset, the account is locked.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;DISABLE_FIRST_BOOT_USER_RENAME&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Disable the renaming of the first user during the first boot. This make it so &lt;code&gt;FIRST_USER_NAME&lt;/code&gt; stays activated. &lt;code&gt;FIRST_USER_PASS&lt;/code&gt; must be set for this to work. Please be aware of the implied security risk of defining a default username and password for your devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;WPA_COUNTRY&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;p&gt;Sets the default WLAN regulatory domain and unblocks WLAN interfaces. This should be a 2-letter ISO/IEC 3166 country Code, i.e. &lt;code&gt;GB&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ENABLE_SSH&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Setting to &lt;code&gt;1&lt;/code&gt; will enable ssh server for remote log in. Note that if you are using a common password such as the defaults there is a high risk of attackers taking over you Raspberry Pi.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;PUBKEY_SSH_FIRST_USER&lt;/code&gt; (Default: unset)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Setting this to a value will make that value the contents of the FIRST_USER_NAME&#39;s ~/.ssh/authorized_keys. Obviously the value should therefore be a valid authorized_keys file. Note that this does not automatically enable SSH.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;PUBKEY_ONLY_SSH&lt;/code&gt; (Default: &lt;code&gt;0&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting to &lt;code&gt;1&lt;/code&gt; will disable password authentication for SSH and enable public key authentication. Note that if SSH is not enabled this will take effect when SSH becomes enabled.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;SETFCAP&lt;/code&gt; (Default: unset)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Setting to &lt;code&gt;1&lt;/code&gt; will prevent pi-gen from dropping the &#34;capabilities&#34; feature. Generating the root filesystem with capabilities enabled and running it from a filesystem that does not support capabilities (like NFS) can cause issues. Only enable this if you understand what it is.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;STAGE_LIST&lt;/code&gt; (Default: &lt;code&gt;stage*&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;If set, then instead of working through the numeric stages in order, this list will be followed. For example setting to &lt;code&gt;&#34;stage0 stage1 mystage stage2&#34;&lt;/code&gt; will run the contents of &lt;code&gt;mystage&lt;/code&gt; before stage2. Note that quotes are needed around the list. An absolute or relative path can be given for stages outside the pi-gen directory.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A simple example for building Raspberry Pi OS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;IMG_NAME=&#39;raspios&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The config file can also be specified on the command line as an argument the &lt;code&gt;build.sh&lt;/code&gt; or &lt;code&gt;build-docker.sh&lt;/code&gt; scripts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.sh -c myconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is parsed after &lt;code&gt;config&lt;/code&gt; so can be used to override values set there.&lt;/p&gt; &#xA;&lt;h2&gt;How the build process works&lt;/h2&gt; &#xA;&lt;p&gt;The following process is followed to build images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Interate through all of the stage directories in alphanumeric order&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bypass a stage directory if it contains a file called &#34;SKIP&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the script &lt;code&gt;prerun.sh&lt;/code&gt; which is generally just used to copy the build directory between stages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In each stage directory iterate through each subdirectory and then run each of the install scripts it contains, again in alphanumeric order. &lt;strong&gt;These need to be named with a two digit padded number at the beginning.&lt;/strong&gt; There are a number of different files and directories which can be used to control different parts of the build process:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-run.sh&lt;/strong&gt; - A unix shell script. Needs to be made executable for it to run.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-run-chroot.sh&lt;/strong&gt; - A unix shell script which will be run in the chroot of the image build directory. Needs to be made executable for it to run.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-debconf&lt;/strong&gt; - Contents of this file are passed to debconf-set-selections to configure things like locale, etc.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-packages&lt;/strong&gt; - A list of packages to install. Can have more than one, space separated, per line.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-packages-nr&lt;/strong&gt; - As 00-packages, except these will be installed using the &lt;code&gt;--no-install-recommends -y&lt;/code&gt; parameters to apt-get.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;00-patches&lt;/strong&gt; - A directory containing patch files to be applied, using quilt. If a file named &#39;EDIT&#39; is present in the directory, the build process will be interrupted with a bash session, allowing an opportunity to create/revise the patches.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the stage directory contains files called &#34;EXPORT_NOOBS&#34; or &#34;EXPORT_IMAGE&#34; then add this stage to a list of images to generate&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate the images for any stages that have specified them&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is recommended to examine build.sh for finer details.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Build&lt;/h2&gt; &#xA;&lt;p&gt;Docker can be used to perform the build inside a container. This partially isolates the build from the host system, and allows using the script on non-debian based systems (e.g. Fedora Linux). The isolation is not complete due to the need to use some kernel level services for arm emulation (binfmt) and loop devices (losetup).&lt;/p&gt; &#xA;&lt;p&gt;To build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vi config         # Edit your config file. See above.&#xA;./build-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything goes well, your finished image will be in the &lt;code&gt;deploy/&lt;/code&gt; folder. You can then remove the build container with &lt;code&gt;docker rm -v pigen_work&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you encounter errors during the build, you can edit the corresponding scripts, and continue:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CONTINUE=1 ./build-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To examine the container after a failure you can enter a shell within it using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker run -it --privileged --volumes-from=pigen_work pi-gen /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After successful build, the build container is by default removed. This may be undesired when making incremental changes to a customized build. To prevent the build script from remove the container add&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PRESERVE_CONTAINER=1 ./build-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a possibility that even when running from a docker container, the installation of &lt;code&gt;qemu-user-static&lt;/code&gt; will silently fail when building the image because &lt;code&gt;binfmt-support&lt;/code&gt; &lt;em&gt;must be enabled on the underlying kernel&lt;/em&gt;. An easy fix is to ensure &lt;code&gt;binfmt-support&lt;/code&gt; is installed on the host machine before starting the &lt;code&gt;./build-docker.sh&lt;/code&gt; script (or using your own docker build solution).&lt;/p&gt; &#xA;&lt;h3&gt;Passing arguments to Docker&lt;/h3&gt; &#xA;&lt;p&gt;When the docker image is run various required command line arguments are provided. For example the system mounts the &lt;code&gt;/dev&lt;/code&gt; directory to the &lt;code&gt;/dev&lt;/code&gt; directory within the docker container. If other arguments are required they may be specified in the PIGEN_DOCKER_OPTS environment variable. For example setting &lt;code&gt;PIGEN_DOCKER_OPTS=&#34;--add-host foo:192.168.0.23&#34;&lt;/code&gt; will add &#39;192.168.0.23 foo&#39; to the &lt;code&gt;/etc/hosts&lt;/code&gt; file in the container. The &lt;code&gt;--name&lt;/code&gt; and &lt;code&gt;--privileged&lt;/code&gt; options are already set by the script and should not be redefined.&lt;/p&gt; &#xA;&lt;h2&gt;Stage Anatomy&lt;/h2&gt; &#xA;&lt;h3&gt;Raspbian Stage Overview&lt;/h3&gt; &#xA;&lt;p&gt;The build of Raspbian is divided up into several stages for logical clarity and modularity. This causes some initial complexity, but it simplifies maintenance and allows for more easy customization.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 0&lt;/strong&gt; - bootstrap. The primary purpose of this stage is to create a usable filesystem. This is accomplished largely through the use of &lt;code&gt;debootstrap&lt;/code&gt;, which creates a minimal filesystem suitable for use as a base.tgz on Debian systems. This stage also configures apt settings and installs &lt;code&gt;raspberrypi-bootloader&lt;/code&gt; which is missed by debootstrap. The minimal core is installed but not configured. As a result, this stage will not boot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 1&lt;/strong&gt; - truly minimal system. This stage makes the system bootable by installing system files like &lt;code&gt;/etc/fstab&lt;/code&gt;, configures the bootloader, makes the network operable, and installs packages like raspi-config. At this stage the system should boot to a local console from which you have the means to perform basic tasks needed to configure and install the system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 2&lt;/strong&gt; - lite system. This stage produces the Raspberry Pi OS Lite image. Stage 2 installs some optimized memory functions, sets timezone and charmap defaults, installs fake-hwclock and ntp, wireless LAN and bluetooth support, dphys-swapfile, and other basics for managing the hardware. It also creates necessary groups and gives the pi user access to sudo and the standard console hardware permission groups.&lt;/p&gt; &lt;p&gt;Note: Raspberry Pi OS Lite contains a number of tools for development, including &lt;code&gt;Python&lt;/code&gt;, &lt;code&gt;Lua&lt;/code&gt; and the &lt;code&gt;build-essential&lt;/code&gt; package. If you are creating an image to deploy in products, be sure to remove extraneous development tools before deployment.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 3&lt;/strong&gt; - desktop system. Here&#39;s where you get the full desktop system with X11 and LXDE, web browsers, git for development, Raspberry Pi OS custom UI enhancements, etc. This is a base desktop system, with some development tools installed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 4&lt;/strong&gt; - Normal Raspberry Pi OS image. System meant to fit on a 4GB card. This is the stage that installs most things that make Raspberry Pi OS friendly to new users - e.g. system documentation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stage 5&lt;/strong&gt; - The Raspberry Pi OS Full image. More development tools, an email client, learning tools like Scratch, specialized packages like sonic-pi, office productivity, etc.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stage specification&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to build up to a specified stage (such as building up to stage 2 for a lite system), place an empty file named &lt;code&gt;SKIP&lt;/code&gt; in each of the &lt;code&gt;./stage&lt;/code&gt; directories you wish not to include.&lt;/p&gt; &#xA;&lt;p&gt;Then add an empty file named &lt;code&gt;SKIP_IMAGES&lt;/code&gt; to &lt;code&gt;./stage4&lt;/code&gt; and &lt;code&gt;./stage5&lt;/code&gt; (if building up to stage 2) or to &lt;code&gt;./stage2&lt;/code&gt; (if building a minimal system).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Example for building a lite system&#xA;echo &#34;IMG_NAME=&#39;raspios&#39;&#34; &amp;gt; config&#xA;touch ./stage3/SKIP ./stage4/SKIP ./stage5/SKIP&#xA;touch ./stage4/SKIP_IMAGES ./stage5/SKIP_IMAGES&#xA;sudo ./build.sh  # or ./build-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to build further configurations upon (for example) the lite system, you can also delete the contents of &lt;code&gt;./stage3&lt;/code&gt; and &lt;code&gt;./stage4&lt;/code&gt; and replace with your own contents in the same format.&lt;/p&gt; &#xA;&lt;h2&gt;Skipping stages to speed up development&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re working on a specific stage the recommended development process is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a file called SKIP_IMAGES into the directories containing EXPORT_* files (currently stage2, stage4 and stage5)&lt;/li&gt; &#xA; &lt;li&gt;Add SKIP files to the stages you don&#39;t want to build. For example, if you&#39;re basing your image on the lite image you would add these to stages 3, 4 and 5.&lt;/li&gt; &#xA; &lt;li&gt;Run build.sh to build all stages&lt;/li&gt; &#xA; &lt;li&gt;Add SKIP files to the earlier successfully built stages&lt;/li&gt; &#xA; &lt;li&gt;Modify the last stage&lt;/li&gt; &#xA; &lt;li&gt;Rebuild just the last stage using &lt;code&gt;sudo CLEAN=1 ./build.sh&lt;/code&gt; (or, for docker builds &lt;code&gt;PRESERVE_CONTAINER=1 CONTINUE=1 CLEAN=1 ./build-docker.sh&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Once you&#39;re happy with the image you can remove the SKIP_IMAGES files and export your image to test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;code&gt;64 Bit Systems&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Please note there is currently an issue when compiling with a 64 Bit OS. See &lt;a href=&#34;https://github.com/RPi-Distro/pi-gen/issues/271&#34;&gt;https://github.com/RPi-Distro/pi-gen/issues/271&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A 64 bit image can be generated from the &lt;code&gt;arm64&lt;/code&gt; branch in this repository. Just replace the command from &lt;a href=&#34;https://raw.githubusercontent.com/RPi-Distro/pi-gen/master/#getting-started-with-building-your-images&#34;&gt;this section&lt;/a&gt; by the one below, and follow the rest of the documentation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --branch arm64 https://github.com/RPI-Distro/pi-gen.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to generate a 64 bits image from a Raspberry Pi running a 32 bits version, you need to add &lt;code&gt;arm_64bit=1&lt;/code&gt; to your &lt;code&gt;config.txt&lt;/code&gt; file and reboot your machine. This will restart your machine with a 64 bits kernel. This will only work from a Raspberry Pi with a 64-bit capable processor (i.e. Raspberry Pi Zero 2, Raspberry Pi 3 or Raspberry Pi 4).&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;binfmt_misc&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Linux is able execute binaries from other architectures, meaning that it should be possible to make use of &lt;code&gt;pi-gen&lt;/code&gt; on an x86_64 system, even though it will be running ARM binaries. This requires support from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Binfmt_misc&#34;&gt;&lt;code&gt;binfmt_misc&lt;/code&gt;&lt;/a&gt; kernel module.&lt;/p&gt; &#xA;&lt;p&gt;You may see one of the following errors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;update-binfmts: warning: Couldn&#39;t load the binfmt_misc module.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;W: Failure trying to run: chroot &#34;/pi-gen/work/test/stage0/rootfs&#34; /bin/true&#xA;and/or&#xA;chroot: failed to run command &#39;/bin/true&#39;: Exec format error&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To resolve this, ensure that the following files are available (install them if necessary):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/lib/modules/$(uname -r)/kernel/fs/binfmt_misc.ko&#xA;/usr/bin/qemu-arm-static&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need to load the module by hand - run &lt;code&gt;modprobe binfmt_misc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using WSL to build you may have to enable the service &lt;code&gt;sudo update-binfmts --enable&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>datawhalechina/learn-nlp-with-transformers</title>
    <updated>2024-07-14T01:41:17Z</updated>
    <id>tag:github.com,2024-07-14:/datawhalechina/learn-nlp-with-transformers</id>
    <link href="https://github.com/datawhalechina/learn-nlp-with-transformers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;we want to create a repo to illustrate usage of transformers in chinese&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;基于transformers的自然语言处理(NLP)入门&lt;/h1&gt; &#xA;&lt;p&gt;Natural Language Processing with transformers. 本项目面向的对象是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NLP初学者、transformer初学者&lt;/li&gt; &#xA; &lt;li&gt;有一定的python、pytorch编程基础&lt;/li&gt; &#xA; &lt;li&gt;对前沿的transformer模型感兴趣&lt;/li&gt; &#xA; &lt;li&gt;了解和知道简单的深度学习模型&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本项目的愿景是：&lt;/p&gt; &#xA;&lt;p&gt;希望结合形象生动的原理讲解和多个动手实践项目，帮助初学者快速入门深度学习时代的NLP。&lt;/p&gt; &#xA;&lt;p&gt;本项目的主要参考资料是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Huggingface/Transformers代码库&lt;/li&gt; &#xA; &lt;li&gt;多个优秀的Transformer讲解和分享&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;项目成员：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;erenup(&lt;a href=&#34;https://www.zhihu.com/people/nai-ping-46-76&#34;&gt;多多笔记&lt;/a&gt;)，北京大学，负责人&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhangfanTJU&#34;&gt;张帆&lt;/a&gt;，Datawhale，天津大学，篇章4&lt;/li&gt; &#xA; &lt;li&gt;张贤，哈尔滨工业大学，篇章2&lt;/li&gt; &#xA; &lt;li&gt;李泺秋，浙江大学，篇章3&lt;/li&gt; &#xA; &lt;li&gt;蔡杰，北京大学，篇章4&lt;/li&gt; &#xA; &lt;li&gt;hlzhang，麦吉尔大学，篇章4&lt;/li&gt; &#xA; &lt;li&gt;台运鹏 篇章2&lt;/li&gt; &#xA; &lt;li&gt;张红旭 篇章2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本项目总结和学习了多篇优秀文档和分享，在各个章节均有标注来源，如有侵权，请及时联系项目成员，谢谢。去&lt;a href=&#34;https://github.com/datawhalechina/learn-nlp-with-transformers&#34;&gt;Github点完Star&lt;/a&gt;再学习事半功倍哦😄，谢谢。&lt;/p&gt; &#xA;&lt;h1&gt;项目内容&lt;/h1&gt; &#xA;&lt;h2&gt;篇章1-前言&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A01-%E5%89%8D%E8%A8%80/1.0-%E6%9C%AC%E5%9C%B0%E9%98%85%E8%AF%BB%E5%92%8C%E4%BB%A3%E7%A0%81%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.md&#34;&gt;1.0-本地阅读和代码运行环境配置.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A01-%E5%89%8D%E8%A8%80/1.1-Transformers%E5%9C%A8NLP%E4%B8%AD%E7%9A%84%E5%85%B4%E8%B5%B7.md&#34;&gt;1.1-Transformers在NLP中的兴起&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;篇章2-Transformer相关原理&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.1-%E5%9B%BE%E8%A7%A3attention.md&#34;&gt;2.1-图解attention&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.2-%E5%9B%BE%E8%A7%A3transformer.md&#34;&gt;2.2-图解transformer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.2.1-Pytorch%E7%BC%96%E5%86%99Transformer.md&#34;&gt;2.2.1-Pytorch编写Transformer.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.2.1-Pytorch%E7%BC%96%E5%86%99Transformer-%E9%80%89%E8%AF%BB.md&#34;&gt;2.2.2-Pytorch编写Transformer-选读.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.3-%E5%9B%BE%E8%A7%A3BERT.md&#34;&gt;2.3-图解BERT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.4-%E5%9B%BE%E8%A7%A3GPT.md&#34;&gt;2.4-图解GPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A02-Transformer%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/2.5-%E7%AF%87%E7%AB%A0%E5%B0%8F%E6%B5%8B.md&#34;&gt;2.5-篇章小测&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;篇章3-编写一个Transformer模型：BERT&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A03-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AATransformer%E6%A8%A1%E5%9E%8B%EF%BC%9ABERT/3.1-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AABERT.md&#34;&gt;3.1-如何实现一个BERT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A03-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AATransformer%E6%A8%A1%E5%9E%8B%EF%BC%9ABERT/3.2-%E5%A6%82%E4%BD%95%E5%BA%94%E7%94%A8%E4%B8%80%E4%B8%AABERT.md&#34;&gt;3.2-如何应用一个BERT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A03-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AATransformer%E6%A8%A1%E5%9E%8B%EF%BC%9ABERT/3.3-%E7%AF%87%E7%AB%A0%E5%B0%8F%E6%B5%8B.md&#34;&gt;3.3-篇章小测&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;篇章4-使用Transformers解决NLP任务&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.0-%E5%89%8D%E8%A8%80.md&#34;&gt;4.0-前言&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.1-%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB.md&#34;&gt;4.1-文本分类&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.2-%E5%BA%8F%E5%88%97%E6%A0%87%E6%B3%A8.md&#34;&gt;4.2-序列标注&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.3-%E9%97%AE%E7%AD%94%E4%BB%BB%E5%8A%A1-%E6%8A%BD%E5%8F%96%E5%BC%8F%E9%97%AE%E7%AD%94.md&#34;&gt;4.3-问答任务-抽取式问答&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.4-%E9%97%AE%E7%AD%94%E4%BB%BB%E5%8A%A1-%E5%A4%9A%E9%80%89%E9%97%AE%E7%AD%94.md&#34;&gt;4.4-问答任务-多选问答&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.5-%E7%94%9F%E6%88%90%E4%BB%BB%E5%8A%A1-%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.md&#34;&gt;4.5-生成任务-语言模型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.6-%E7%94%9F%E6%88%90%E4%BB%BB%E5%8A%A1-%E6%9C%BA%E5%99%A8%E7%BF%BB%E8%AF%91.md&#34;&gt;4.6-生成任务-机器翻译&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.7-%E7%94%9F%E6%88%90%E4%BB%BB%E5%8A%A1-%E6%91%98%E8%A6%81%E7%94%9F%E6%88%90.md&#34;&gt;4.7-生成任务-摘要生成&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/datawhalechina/learn-nlp-with-transformers/main/%E7%AF%87%E7%AB%A04-%E4%BD%BF%E7%94%A8Transformers%E8%A7%A3%E5%86%B3NLP%E4%BB%BB%E5%8A%A1/4.8-%E7%AF%87%E7%AB%A0%E5%B0%8F%E6%B5%8B.md&#34;&gt;4.8-篇章小测&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>