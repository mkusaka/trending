<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-24T01:52:24Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Fmstrat/winapps</title>
    <updated>2025-08-24T01:52:24Z</updated>
    <id>tag:github.com,2025-08-24:/Fmstrat/winapps</id>
    <link href="https://github.com/Fmstrat/winapps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WinApps for Linux&lt;/h1&gt; &#xA;&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration for right clicking on files of specific mime types to open them.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/demo/demo.gif&#34; width=&#34;1000&#34; /&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Proud to have made the top spot on &lt;a href=&#34;https://www.reddit.com/r/linux&#34;&gt;r/linux&lt;/a&gt; on launch day.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;WinApps was created as an easy, one command way to include apps running inside a VM (or on any RDP server) directly into GNOME as if they were native applications. WinApps works by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running a Windows RDP server in a background VM container&lt;/li&gt; &#xA; &lt;li&gt;Checking the RDP server for installed applications such as Microsoft Office&lt;/li&gt; &#xA; &lt;li&gt;If those programs are installed, it creates shortcuts leveraging FreeRDP for both the CLI and the GNOME tray&lt;/li&gt; &#xA; &lt;li&gt;Files in your home directory are accessible via the &lt;code&gt;\\tsclient\home&lt;/code&gt; mount inside the VM&lt;/li&gt; &#xA; &lt;li&gt;You can right click on any files in your home directory to open with an application, too&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Currently supported applications&lt;/h2&gt; &#xA;&lt;h3&gt;WinApps supports &lt;em&gt;&lt;strong&gt;ANY&lt;/strong&gt;&lt;/em&gt; installed application on your system.&lt;/h3&gt; &#xA;&lt;p&gt;It does this by:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Scanning your system for offically configured applications (below)&lt;/li&gt; &#xA; &lt;li&gt;Scanning your system for any other EXE files with install records in the Windows Registry&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Any officially configured applications will have support for high-resolution icons and mime types for automatically detecting what files can be opened by each application. Any other detected executable files will leverage the icons pulled from the EXE.&lt;/p&gt; &#xA;&lt;p&gt;Note: The officially configured application list below is fueled by the community, and therefore some apps may be untested by the WinApps team.&lt;/p&gt; &#xA;&lt;table cellpadding=&#34;10&#34; cellspacing=&#34;0&#34; border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/acrobat-x-pro/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Acrobat Pro&lt;br /&gt;(X)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/acrobat-reader-dc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Acrobat Reader&lt;br /&gt;(DC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/aftereffects-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe After Effects&lt;br /&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/audition-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Audition&lt;br /&gt;(CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/bridge-cs6/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Bridge&lt;br /&gt;(CS6, CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/adobe-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Creative Cloud&lt;br /&gt;(CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/illustrator-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Illustrator&lt;br /&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/indesign-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe InDesign&lt;br /&gt;(CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/lightroom-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Lightroom&lt;br /&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/photoshop-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Photoshop&lt;br /&gt;(CS6, CC)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/premiere-pro-cc/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Adobe Premiere Pro&lt;br /&gt;(CC)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/cmd/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Command Prompt&lt;br /&gt;(cmd.exe)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/explorer/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Explorer&lt;br /&gt;(File Manager)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/iexplorer/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Internet Explorer&lt;br /&gt;(11)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/access/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Access&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/excel/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Excel&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/word/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Word&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/onenote/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft OneNote&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/outlook/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Outlook&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/powerpoint/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft PowerPoint&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/project/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Project&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/publisher/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Microsoft Publisher&lt;br /&gt;(2016, 2019, o365)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/powershell/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Powershell&lt;br /&gt;(Standard, Core)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/apps/vs-enterprise-2019/icon.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Visual Studio&lt;br /&gt;(2019 - Ent|Pro|Com)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Fmstrat/winapps/main/icons/windows.svg?sanitize=true&#34; width=&#34;100&#34; /&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Windows&lt;br /&gt;(Full RDP session)&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp;&lt;/td&gt;&#xA;   &lt;td&gt;&amp;nbsp;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Latest documentation available at: &lt;a href=&#34;https://nowsci.com/winapps/&#34;&gt;https://nowsci.com/winapps/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aaddrick/claude-desktop-debian</title>
    <updated>2025-08-24T01:52:24Z</updated>
    <id>tag:github.com,2025-08-24:/aaddrick/claude-desktop-debian</id>
    <link href="https://github.com/aaddrick/claude-desktop-debian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Claude Desktop for Debian-based Linux distributions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Desktop for Linux&lt;/h1&gt; &#xA;&lt;p&gt;This project provides build scripts to run Claude Desktop natively on Linux systems. It repackages the official Windows application for Debian-based distributions, producing either &lt;code&gt;.deb&lt;/code&gt; packages or AppImages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is an unofficial build script. For official support, please visit &lt;a href=&#34;https://www.anthropic.com&#34;&gt;Anthropic&#39;s website&lt;/a&gt;. For issues with the build script or Linux implementation, please &lt;a href=&#34;https://github.com/aaddrick/claude-desktop-debian/issues&#34;&gt;open an issue&lt;/a&gt; in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native Linux Support&lt;/strong&gt;: Run Claude Desktop without virtualization or Wine&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP Support&lt;/strong&gt;: Full Model Context Protocol integration&lt;br /&gt; Configuration file location: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;System Integration&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;X11 Global hotkey support (Ctrl+Alt+Space)&lt;/li&gt; &#xA;   &lt;li&gt;System tray integration&lt;/li&gt; &#xA;   &lt;li&gt;Desktop environment integration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/93080028-6f71-48bd-8e59-5149d148cd45&#34; alt=&#34;Claude Desktop running on Linux&#34; /&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/1deb4604-4c06-4e4b-b63f-7f6ef9ef28c1&#34; alt=&#34;Global hotkey popup&#34; /&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/ba209824-8afb-437c-a944-b53fd9ecd559&#34; alt=&#34;System tray menu on KDE&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using Pre-built Releases&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest &lt;code&gt;.deb&lt;/code&gt; or &lt;code&gt;.AppImage&lt;/code&gt; from the &lt;a href=&#34;https://github.com/aaddrick/claude-desktop-debian/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building from Source&lt;/h3&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian-based Linux distribution (Debian, Ubuntu, Linux Mint, MX Linux, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA; &lt;li&gt;Basic build tools (automatically installed by the script)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Build Instructions&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;git clone https://github.com/aaddrick/claude-desktop-debian.git&#xA;cd claude-desktop-debian&#xA;&#xA;# Build a .deb package (default)&#xA;./build.sh&#xA;&#xA;# Build an AppImage&#xA;./build.sh --build appimage&#xA;&#xA;# Build with custom options&#xA;./build.sh --build deb --clean no  # Keep intermediate files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing the Built Package&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;For .deb packages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg -i ./claude-desktop_VERSION_ARCHITECTURE.deb&#xA;&#xA;# If you encounter dependency issues:&#xA;sudo apt --fix-broken install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For AppImages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Make executable&#xA;chmod +x ./claude-desktop-*.AppImage&#xA;&#xA;# Run directly&#xA;./claude-desktop-*.AppImage&#xA;&#xA;# Or integrate with your system using Gear Lever&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; AppImage login requires proper desktop integration. Use &lt;a href=&#34;https://flathub.org/apps/it.mijorus.gearlever&#34;&gt;Gear Lever&lt;/a&gt; or manually install the provided &lt;code&gt;.desktop&lt;/code&gt; file to &lt;code&gt;~/.local/share/applications/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatic Updates:&lt;/strong&gt; AppImages downloaded from GitHub releases include embedded update information and work seamlessly with Gear Lever for automatic updates. Locally-built AppImages can be manually configured for updates in Gear Lever.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;MCP Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Model Context Protocol settings are stored in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;~/.config/Claude/claude_desktop_config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Application Logs&lt;/h3&gt; &#xA;&lt;p&gt;Runtime logs are available at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/claude-desktop-launcher.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uninstallation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;For .deb packages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Remove package&#xA;sudo dpkg -r claude-desktop&#xA;&#xA;# Remove package and configuration&#xA;sudo dpkg -P claude-desktop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;For AppImages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Delete the &lt;code&gt;.AppImage&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;Remove the &lt;code&gt;.desktop&lt;/code&gt; file from &lt;code&gt;~/.local/share/applications/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If using Gear Lever, use its uninstall option&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remove user configuration (both formats):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf ~/.config/Claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Window Scaling Issues&lt;/h3&gt; &#xA;&lt;p&gt;If the window doesn&#39;t scale correctly on first launch:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Right-click the Claude Desktop tray icon&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Quit&#34; (do not force quit)&lt;/li&gt; &#xA; &lt;li&gt;Restart the application&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This allows the application to save display settings properly.&lt;/p&gt; &#xA;&lt;h3&gt;AppImage Sandbox Warning&lt;/h3&gt; &#xA;&lt;p&gt;AppImages run with &lt;code&gt;--no-sandbox&lt;/code&gt; due to electron&#39;s chrome-sandbox requiring root privileges for unprivileged namespace creation. This is a known limitation of AppImage format with Electron applications.&lt;/p&gt; &#xA;&lt;p&gt;For enhanced security, consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using the .deb package instead&lt;/li&gt; &#xA; &lt;li&gt;Running the AppImage within a separate sandbox (e.g., bubblewrap)&lt;/li&gt; &#xA; &lt;li&gt;Using Gear Lever&#39;s integrated AppImage management for better isolation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technical Details&lt;/h2&gt; &#xA;&lt;h3&gt;How It Works&lt;/h3&gt; &#xA;&lt;p&gt;Claude Desktop is an Electron application distributed for Windows. This project:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Downloads the official Windows installer&lt;/li&gt; &#xA; &lt;li&gt;Extracts application resources&lt;/li&gt; &#xA; &lt;li&gt;Replaces Windows-specific native modules with Linux-compatible implementations&lt;/li&gt; &#xA; &lt;li&gt;Repackages as either: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Debian package&lt;/strong&gt;: Standard system package with full integration&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;AppImage&lt;/strong&gt;: Portable, self-contained executable&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Build Process&lt;/h3&gt; &#xA;&lt;p&gt;The build script (&lt;code&gt;build.sh&lt;/code&gt;) handles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependency checking and installation&lt;/li&gt; &#xA; &lt;li&gt;Resource extraction from Windows installer&lt;/li&gt; &#xA; &lt;li&gt;Icon processing for Linux desktop standards&lt;/li&gt; &#xA; &lt;li&gt;Native module replacement&lt;/li&gt; &#xA; &lt;li&gt;Package generation based on selected format&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Updating for New Releases&lt;/h3&gt; &#xA;&lt;p&gt;The script automatically detects system architecture and downloads the appropriate version. If Claude Desktop&#39;s download URLs change, update the &lt;code&gt;CLAUDE_DOWNLOAD_URL&lt;/code&gt; variables in &lt;code&gt;build.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;This project was inspired by &lt;a href=&#34;https://github.com/k3d3/claude-desktop-linux-flake&#34;&gt;k3d3&#39;s claude-desktop-linux-flake&lt;/a&gt; and their &lt;a href=&#34;https://www.reddit.com/r/ClaudeAI/comments/1hgsmpq/i_successfully_ran_claude_desktop_natively_on/&#34;&gt;Reddit post&lt;/a&gt; about running Claude Desktop natively on Linux.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;k3d3&lt;/strong&gt; for the original NixOS implementation and native bindings insights&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/emsi/claude-desktop&#34;&gt;emsi&lt;/a&gt;&lt;/strong&gt; for the title bar fix and alternative implementation approach&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For NixOS users, please refer to &lt;a href=&#34;https://github.com/k3d3/claude-desktop-linux-flake&#34;&gt;k3d3&#39;s repository&lt;/a&gt; for a Nix-specific implementation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The build scripts in this repository are dual-licensed under:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MIT License (see &lt;a href=&#34;https://raw.githubusercontent.com/aaddrick/claude-desktop-debian/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Apache License 2.0 (see &lt;a href=&#34;https://raw.githubusercontent.com/aaddrick/claude-desktop-debian/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Claude Desktop application itself is subject to &lt;a href=&#34;https://www.anthropic.com/legal/consumer-terms&#34;&gt;Anthropic&#39;s Consumer Terms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! By submitting a contribution, you agree to license it under the same dual-license terms as this project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>psygreg/linuxtoys</title>
    <updated>2025-08-24T01:52:24Z</updated>
    <id>tag:github.com,2025-08-24:/psygreg/linuxtoys</id>
    <link href="https://github.com/psygreg/linuxtoys" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of tools for Linux in a user-friendly way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LinuxToys&lt;/h1&gt; &#xA;&lt;p&gt;A collection of tools for Linux in a user-friendly way. To check all its features, pay the &lt;a href=&#34;https://github.com/psygreg/linuxtoys/wiki&#34;&gt;Wiki&lt;/a&gt; a visit!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/psygreg/linuxtoys/raw/66c0e9c3f99bcd7108a76407da84b8cba79f5387/src/screenshot.png&#34; alt=&#34;LinuxToys&#34; /&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;As long as you&#39;re running their up-to-date stable versions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt; and derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian&lt;/strong&gt; and derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt; and derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora&lt;/strong&gt; and derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenSUSE&lt;/strong&gt; and derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Atomic Fedora&lt;/strong&gt; and derivatives&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Universal Blue&lt;/strong&gt; images like &lt;strong&gt;Bazzite&lt;/strong&gt;, &lt;strong&gt;Bluefin&lt;/strong&gt; and &lt;strong&gt;Aurora&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Limitations &amp;amp; Warnings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shader Booster&lt;/strong&gt; only works in systems using the &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;zsh&lt;/code&gt; or &lt;code&gt;fish&lt;/code&gt; shells as default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GRUB-btrfs&lt;/strong&gt;, besides its obvious requirements, depends on &lt;code&gt;systemd-init&lt;/code&gt; to enable boot snapshots and cleanup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LACT&lt;/strong&gt; is an overclocking tool. Use with caution.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PyEnv&lt;/strong&gt; only supports running in &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; shells.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Godot 4 .NET&lt;/strong&gt; a.k.a. &lt;em&gt;GodotSharp&lt;/em&gt; is not compatible with Arch-based operating systems, as there isn&#39;t a .NET SDK available from Microsoft officially for those. The same is applicable to &lt;strong&gt;Unity Hub&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;Use the &lt;code&gt;install.sh&lt;/code&gt; script available in the latest of &lt;a href=&#34;https://github.com/psygreg/linuxtoys/releases&#34;&gt;Releases&lt;/a&gt;.&lt;/h4&gt; &#xA;&lt;p&gt;Give it permission to run as a program through whichever file manager you choose, or with &lt;code&gt;chmod +x install.sh&lt;/code&gt; through terminal, then run it and it will figure out the installation procedure for your operating system.&lt;/p&gt; &#xA;&lt;h4&gt;Download and install the &lt;strong&gt;package for your distribution&lt;/strong&gt; from &lt;a href=&#34;https://github.com/psygreg/linuxtoys/releases&#34;&gt;Releases&lt;/a&gt;:&lt;/h4&gt; &#xA;&lt;p&gt;For Arch Linux and derivatives, the terminal is required for this: &lt;code&gt;sudo pacman -U linuxtoys-&amp;lt;version&amp;gt;-1-x86_64.pacman&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;code&gt;rpm-ostree&lt;/code&gt;-based systems, it will also be needed: &lt;code&gt;rpm-ostree install linuxtoys-&amp;lt;version&amp;gt;-1.x86_64.rpm&lt;/code&gt;. You may need to run &lt;code&gt;rpm-ostree remove linuxtoys&lt;/code&gt; before using the install command to update the app due to limitations on how locally layered packages work - so it&#39;s recommended to use the COPR repository on those systems for your convenience.&lt;/p&gt; &#xA;&lt;h4&gt;Alternatively, run it directly from the method below.&lt;/h4&gt; &#xA;&lt;h3&gt;Git cloning&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure you have all necessary dependencies. Most of those should be already present in your system.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian/Ubuntu&lt;/strong&gt;: &lt;code&gt;bash git curl wget zenity python3 python3-gi libgtk-3-0 gir1.2-gtk-3.0 jq&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora/RHEL&lt;/strong&gt;: &lt;code&gt;bash git curl wget zenity python3 python3-gobject gtk3 jq&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;: &lt;code&gt;bash git curl wget zenity python python-gobject gtk3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenSUSE&lt;/strong&gt;: &lt;code&gt;bash git curl wget zenity python3 python3-gobject gtk3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, clone the repository with &lt;code&gt;git clone https://github.com/psygreg/linuxtoys.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run the app, give &lt;code&gt;p3/run.py&lt;/code&gt; execution permissions with &lt;code&gt;chmod +x p3/run.py&lt;/code&gt; from the cloned folder, then run it with &lt;code&gt;./p3/run.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Updating the app through this method is a simple &lt;code&gt;git pull&lt;/code&gt; away.&lt;/p&gt; &#xA;&lt;h2&gt;CLI Mode&lt;/h2&gt; &#xA;&lt;p&gt;LinuxToys has a CLI mode option for sysadmins and the like, which need something that can be automated quickly. To operate in this mode, all you have to do is getting the application through git cloning as mentioned above, then alter the &lt;code&gt;manifest.txt&lt;/code&gt; file with the names of the scripts you wish to execute. After that, run LinuxToys with the CLI mode flag, like this: &lt;code&gt;LT_MANIFEST=1 ./p3/run.py&lt;/code&gt; and it will pick up and execute the scripts of your choice.&lt;/p&gt; &#xA;&lt;p&gt;You may want to save your modified &lt;code&gt;manifest.txt&lt;/code&gt; file separately for later use.&lt;/p&gt; &#xA;&lt;h2&gt;Official Repositories&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://launchpad.net/~psygreg/+archive/ubuntu/linuxtoys&#34;&gt;Ubuntu Launchpad&lt;/a&gt; (PPA)&lt;/h3&gt; &#xA;&lt;p&gt;Can be added with:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo add-apt-repository ppa:psygreg/linuxtoys &amp;amp;&amp;amp; sudo apt update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/psygreg/linuxtoys/&#34;&gt;Fedora COPR&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Available packages: &lt;strong&gt;AlmaLinux 10&lt;/strong&gt;, &lt;strong&gt;Fedora 41&lt;/strong&gt; and &lt;strong&gt;42&lt;/strong&gt;, &lt;strong&gt;OpenSUSE Leap&lt;/strong&gt; and &lt;strong&gt;Tumbleweed&lt;/strong&gt;, &lt;strong&gt;RHEL 9&lt;/strong&gt; and &lt;strong&gt;10&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;For non-immutable systems:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;dnf copr enable psygreg/linuxtoys&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;For Fedora atomic, three commands are required to install the repository:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wget https://copr.fedorainfracloud.org/coprs/psygreg/linuxtoys/repo/fedora-$(rpm -E %fedora)/psygreg-linuxtoys-fedora-$(rpm -E %fedora).repo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo install -o 0 -g 0 psygreg-linuxtoys-fedora-$(rpm -E %fedora).repo /etc/yum.repos.d/psygreg-linuxtoys-fedora-$(rpm -E %fedora).repo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rpm-ostree refresh-md&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/linuxtoys-bin&#34;&gt;Arch User Repository - AUR&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You may use the AUR helper of your choice to install it, with the package name &lt;code&gt;linuxtoys-bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/psygreg/linuxtoys/wiki/Developer-Handbook&#34;&gt;Developer Handbook&lt;/a&gt; for the complete documentation on LinuxToys&#39; libraries.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All Pull Requests will be manually checked before approval.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/psygreg/linuxtoys/wiki/Credits&#34;&gt;Credits&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
</feed>