<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:24:02Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tteck/Proxmox</title>
    <updated>2022-07-17T02:24:02Z</updated>
    <id>tag:github.com,2022-07-17:/tteck/Proxmox</id>
    <link href="https://github.com/tteck/Proxmox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proxmox Helper Scripts‚Ñ¢&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Select a Proxmox Helper &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;sub&gt; Always remember to use due diligence when sourcing scripts and automation tasks from third-party sites. &lt;/sub&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tteck/Proxmox/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/tteck/Proxmox&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tteck.github.io/Proxmox/&#34;&gt;&lt;img src=&#34;https://badgen.net/github/checks/tteck/Proxmox/main/&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tteck/Proxmox/discussions&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/discussions.png?raw=true&#34; height=&#34;21&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tteck/Proxmox/raw/main/CHANGELOG.MD&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/change.png?raw=true&#34; height=&#34;21&#34;&gt;&lt;/a&gt;üî∏&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Proxmox VE 7 Post Install&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/proxmoxve/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Proxmox VE 7 Post Install &lt;/h1&gt; &#xA; &lt;p&gt;The script will give options to Disable the Enterprise Repo, Add/Correct PVE7 Sources, Enable the No-Subscription Repo, Add Test Repo, Disable Subscription Nag and Update Proxmox VE.&lt;/p&gt; &#xA; &lt;p&gt;Run the following in the Proxmox Shell. ‚ö†Ô∏è &lt;strong&gt;PVE7 ONLY&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/post-install-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;It&#39;s recommended to answer &lt;code&gt;y&lt;/code&gt; to all options.&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Proxmox Kernel Clean&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/proxmoxve/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt;Proxmox Kernel Clean &lt;/h1&gt; &#xA; &lt;p&gt;Cleaning unused kernel images is not only good because of a reduced grub menu, but also gains some disk space.&lt;/p&gt; &#xA; &lt;p&gt;Run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/kernel-clean-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; üî∏Proxmox Edge Kernel Tool&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/proxmoxve/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt;Proxmox Edge Kernel Tool &lt;/h1&gt; &#xA; &lt;p&gt;Proxmox &lt;a href=&#34;https://github.com/fabianishere/pve-edge-kernel&#34;&gt;Edge Kernels&lt;/a&gt; are custom Linux Kernels for Proxmox VE 7. Keeping up with new Kernel releases instead of LTS&lt;/p&gt; &#xA; &lt;p&gt;Run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/edge-kernel.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Proxmox CPU Scaling Governor&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/cpu.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt;Proxmox CPU Scaling Governor &lt;/h1&gt; &#xA; &lt;p&gt;CPU Scaling Governor enables the operating system to scale the CPU frequency up or down in order to save power or improve performance.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.kernel.org/doc/html/latest/admin-guide/pm/cpufreq.html?#generic-scaling-governors&#34;&gt;Generic Scaling Governors&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/scaling-governor.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Proxmox LXC Updater&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Felpuig.xeill.net%2FMembers%2Fvcarceler%2Farticulos%2Fcontenedores-con-lxd-lxc%2Fcontainers.png&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt;Proxmox LXC Updater &lt;/h1&gt; &#xA; &lt;p&gt;Update All LXC&#39;s Fast &amp;amp; Easy&lt;/p&gt; &#xA; &lt;p&gt;Run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/update-lxcs.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Proxmox Dark Theme&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f6f33a09f8c1207dfb3dc1cbd754c2f3393562c11b1c999751ad9a91a656834a/68747470733a2f2f692e696d6775722e636f6d2f536e6c437948462e706e67&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Proxmox Discord Dark Theme &lt;/h1&gt; &#xA; &lt;p&gt;A dark theme for the Proxmox Web UI by &lt;a href=&#34;https://github.com/Weilbyte/PVEDiscordDark&#34;&gt;Weilbyte&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash &amp;lt;(curl -s https://raw.githubusercontent.com/Weilbyte/PVEDiscordDark/master/PVEDiscordDark.sh ) install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To uninstall the theme, simply run the script with the &lt;code&gt;uninstall&lt;/code&gt; command.&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; üî∏Home Assistant OS VM&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/haos.png?raw=true&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Home Assistant OS VM &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; Option to create VM using the Latest or Stable Image &lt;/h3&gt; &#xA; &lt;p&gt;The script automates the manual process of finding, downloading and extracting the Official KVM (qcow2) disk image provided by the Home Assistant Team, creating a VM with user defined settings, importing and attaching the disk, setting the boot order and starting the VM. No hidden (kpartx, unzip, ect...) installs of any kind. Supports lvmthin, zfspool, nfs, dir and btrfs storage types.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Home Assistant OS VM, run the following in the Proxmox Shell&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/vm/haos-vm-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 4GB RAM - 32GB Storage - 2vCPU - Stable Image‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;After the script completes, click on the VM, then on the &lt;strong&gt;&lt;em&gt;Summary&lt;/em&gt;&lt;/strong&gt; tab to find the VM IP.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Home Assistant Interface - IP:8123&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Home Assistant Container LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://www.docker.com/sites/default/files/d8/2019-07/vertical-logo-monochromatic.png&#34; alt=&#34;Docker Logos | Docker&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/13844975?s=200&amp;amp;v=4&#34; alt=&#34;@home-assistant&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/22225832?s=400&amp;amp;v=4&#34; alt=&#34;GitHub - portainer/portainer-docs: Portainer documentation&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Home Assistant Container LXC &lt;/h1&gt; &#xA; &lt;p&gt;A standalone container-based installation of Home Assistant Core&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Home Assistant Container LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/homeassistant-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 16GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Home Assistant Interface - IP:8123&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Portainer Interface - IP:9000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Path to HA /config&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;/var/lib/docker/volumes/hass_config/_data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Edit the HA configuration.yaml&lt;/strong&gt; (Recommend Using File Browser)&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /var/lib/docker/volumes/hass_config/_data/configuration.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Save and exit the editor with ‚ÄúCtrl+O‚Äù, ‚ÄúEnter‚Äù and ‚ÄúCtrl+X‚Äù&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Copy Data From a Existing Home Assistant LXC to another Home Assistant LXC&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/ha-copy-data.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Allow USB Device Passthrough:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell. (&lt;strong&gt;replace &lt;code&gt;106&lt;/code&gt; with your LXC ID&lt;/strong&gt;)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/usb-passthrough.sh)&#34; -s 106&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Reboot the LXC to apply the changes&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Install HACS:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/hacs.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;After install, reboot Home Assistant and &lt;strong&gt;clear browser cache&lt;/strong&gt; then Add HACS integration.&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;a href=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/update-menu.png&#34;&gt;&lt;strong&gt;Update Menu&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;./update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Podman Home Assistant Container LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://heise.cloudimg.io/width/223/q50.png-lossy-50.webp-lossy-50.foil1/_www-heise-de_/imgs/18/2/5/8/2/8/1/0/podman_logo-670078d7ea1d15a6.png&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/13844975?s=200&amp;amp;v=4&#34; alt=&#34;@home-assistant&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;img&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png&#34; height=&#34;80&#34;&gt;&lt;img&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Podman Home Assistant Container LXC &lt;/h1&gt; A standalone container-based installation of Home Assistant Core &#xA; &lt;p&gt;‚ö†Ô∏è Podman seems to need a privileged LXC&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Podman Home Assistant Container LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/podman-homeassistant-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 16GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Home Assistant Interface - IP:8123&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Yacht Interface - IP:8000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Path to HA /config&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;/var/lib/containers/storage/volumes/hass_config/_data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To edit the HA configuration.yaml&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /var/lib/containers/storage/volumes/hass_config/_data/configuration.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Save and exit the editor with ‚ÄúCtrl+O‚Äù, ‚ÄúEnter‚Äù and ‚ÄúCtrl+X‚Äù&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Copy Data From a Existing Home Assistant LXC to a Podman Home Assistant LXC&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/ha-copy-data-podman.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To allow USB device passthrough:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell. (&lt;strong&gt;replace &lt;code&gt;106&lt;/code&gt; with your LXC ID&lt;/strong&gt;)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/usb-passthrough.sh)&#34; -s 106&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Reboot the LXC to apply the changes&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Install HACS:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/podman_hacs.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;After install, reboot Home Assistant and &lt;strong&gt;clear browser cache&lt;/strong&gt; then Add HACS integration.&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Yacht Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin@yacht.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; ioBroker LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/ioBroker/ioBroker/raw/master/img/logos/ioBroker_Logo_256px.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; ioBroker LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.iobroker.net/#en/intro&#34;&gt;ioBroker&lt;/a&gt; is an open source automation platform.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox ioBroker LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/iobroker-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;ioBroker Interface - IP:8081&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update ioBroker&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;update from the ioBroker UI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; openHAB LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://www.openhab.org/openhab-logo-square.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; openHAB LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.openhab.org/&#34;&gt;openHAB&lt;/a&gt;, a vendor and technology agnostic open source automation software for your home.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox openHAB LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/openhab-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;openHAB Interface - IP:8080&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update openHAB&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Homebridge LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.dingz.ch%2Fadmin%2Fdata%2Ffiles%2Fintegration%2Flogo%2F20%2F200514-em-logo-homebridge_logo.png%3Flm%3D1589459081&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Homebridge LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://homebridge.io/&#34;&gt;Homebridge&lt;/a&gt; allows you to integrate with smart home devices that do not natively support HomeKit&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Homebridge LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/homebridge-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Homebridge Interface - IP:8581&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Config File Path &lt;code&gt;/var/lib/homebridge/config.json&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Storage Path &lt;code&gt;/var/lib/homebridge&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Restart Command &lt;code&gt;sudo hb-service restart&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Stop Command &lt;code&gt;sudo hb-service stop&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Start Command &lt;code&gt;sudo hb-service start&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;View Logs Command &lt;code&gt;sudo hb-service logs&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Systemd Service File &lt;code&gt;/etc/systemd/system/homebridge.service&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Systemd Env File &lt;code&gt;/etc/default/homebridge&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Homebridge&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Update from the Homebridge UI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; ESPHome LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/esphome/dark_icon@2x.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; ESPHome LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://esphome.io/&#34;&gt;ESPHome&lt;/a&gt; is a system to control your ESP8266/ESP32 by simple yet powerful configuration files and control them remotely through Home Automation systems.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox ESPHome LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/esphome-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;ESPHome Interface - IP:6052&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update ESPHome&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;pip3 install esphome --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Nginx Proxy Manager LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://nginxproxymanager.com/logo.png&#34; alt=&#34;hero&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Nginx Proxy Manager LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://nginxproxymanager.com/&#34;&gt;Nginx Proxy Manager&lt;/a&gt; Expose your services easily and securely&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Nginx Proxy Manager LXC Container, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/nginx-proxy-manager-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 3GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;Forward port &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt; from your router to your Nginx Proxy Manager LXC IP.&lt;/p&gt; &#xA; &lt;p&gt;Add the following to your &lt;code&gt;configuration.yaml&lt;/code&gt; in Home Assistant.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; http:&#xA;  use_x_forwarded_for: true&#xA;  trusted_proxies:&#xA;    - 192.168.100.27 ###(Nginx Proxy Manager LXC IP)###&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Nginx Proxy Manager Interface - IP:81&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;changeme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Nginx Proxy Manager&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/npm_update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; MQTT LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://mosquitto.org/images/mosquitto-text-side-28.png&#34; height=&#34;75&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; MQTT LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://mosquitto.org/&#34;&gt;Eclipse Mosquitto&lt;/a&gt; is an open source message broker that implements the MQTT protocol&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox MQTT LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/mqtt-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;Mosquitto comes with a password file generating utility called mosquitto_passwd.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo mosquitto_passwd -c /etc/mosquitto/passwd &amp;lt;usr&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Password: &amp;lt; password &amp;gt;&lt;/p&gt; &#xA; &lt;p&gt;Create a configuration file for Mosquitto pointing to the password file we have just created.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo nano /etc/mosquitto/conf.d/default.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This will open an empty file. Paste the following into it.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;allow_anonymous false&#xA;persistence true&#xA;password_file /etc/mosquitto/passwd&#xA;listener 1883&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Save and exit the text editor with &#34;Ctrl+O&#34;, &#34;Enter&#34; and &#34;Ctrl+X&#34;.&lt;/p&gt; &#xA; &lt;p&gt;Now restart Mosquitto server.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo systemctl restart mosquitto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update MQTT:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Node-Red LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/custom_integrations/nodered/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Node-Red LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://nodered.org/&#34;&gt;Node-RED&lt;/a&gt; is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Node-RED LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/node-red-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Node-Red Interface - IP:1880&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Restart Node-Red:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;node-red-restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Node-Red:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console (Restart after update)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;npm install -g --unsafe-perm node-red&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Install Node-Red Themes&lt;/strong&gt; ‚ö†Ô∏è &lt;strong&gt;Backup your flows before running this script!!&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/node-red-themes.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Mariadb LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://mariadb.com/wp-content/webp-express/webp-images/doc-root/wp-content/themes/sage/dist/images/mariadb-logo-white.png.webp&#34; alt=&#34;MariaDB&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/adminer_logo-cl.png&#34; height=&#34;60&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Mariadb LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://mariadb.org/&#34;&gt;MariaDB&lt;/a&gt; is a community-developed, commercially supported fork of the MySQL relational database management system.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Mariadb LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/mariadb-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;To enable MariaDB to listen to remote connections, you need to edit your defaults file. To do this, open the console in your MariaDB lxc:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /etc/mysql/my.cnf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Un-comment &lt;code&gt;port =3306&lt;/code&gt; Save and exit the editor with &#34;Ctrl+O&#34;, &#34;Enter&#34; and &#34;Ctrl+X&#34;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /etc/mysql/mariadb.conf.d/50-server.cnf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Comment &lt;code&gt;bind-address = 127.0.0.1&lt;/code&gt; Save and exit the editor with &#34;Ctrl+O&#34;, &#34;Enter&#34; and &#34;Ctrl+X&#34;.&lt;/p&gt; &#xA; &lt;p&gt;For new MariaDB installations, the next step is to run the included security script. This script changes some of the less secure default options. We will use it to block remote root logins and to remove unused database users.&lt;/p&gt; &#xA; &lt;p&gt;Run the security script:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo mysql_secure_installation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Enter current password for root (enter for none): &lt;code&gt;enter&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Switch to unix_socket authentication [Y/n] &lt;code&gt;y&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Change the root password? [Y/n] &lt;code&gt;n&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Remove anonymous users? [Y/n] &lt;code&gt;y&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Disallow root login remotely? [Y/n] &lt;code&gt;y&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Remove test database and access to it? [Y/n] &lt;code&gt;y&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Reload privilege tables now? [Y/n] &lt;code&gt;y&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;We will create a new account called admin with the same capabilities as the root account, but configured for password authentication.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Prompt will change to &lt;code&gt;MariaDB [(none)]&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Create a new local admin (Change the username and password to match your preferences)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;CREATE USER &#39;admin&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Give local admin root privileges (Change the username and password to match above)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;GRANT ALL ON *.* TO &#39;admin&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39; WITH GRANT OPTION;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Now, we&#39;ll give the user admin root privileges and password-based access that can connect from anywhere on your local area network (LAN), which has addresses in the subnet 192.168.100.0/24. This is an improvement because opening a MariaDB server up to the Internet and granting access to all hosts is bad practice.. Change the &lt;strong&gt;&lt;em&gt;username&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;password&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;subnet&lt;/em&gt;&lt;/strong&gt; to match your preferences:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;GRANT ALL ON *.* TO &#39;admin&#39;@&#39;192.168.100.%&#39; IDENTIFIED BY &#39;password&#39; WITH GRANT OPTION;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Flush the privileges to ensure that they are saved and available in the current session:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;FLUSH PRIVILEGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Following this, exit the MariaDB shell:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Log in as the new database user you just created:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;mysql -u admin -p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Create a new database:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;CREATE DATABASE homeassistant;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Following this, exit the MariaDB shell:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚ö†Ô∏è Reboot the lxc&lt;/p&gt; &#xA; &lt;p&gt;Checking status.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sudo systemctl status mariadb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Change the recorder: &lt;code&gt;db_url:&lt;/code&gt; in your HA configuration.yaml&lt;/p&gt; &#xA; &lt;p&gt;Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;recorder:&#xA;  db_url: mysql://admin:password@192.168.100.26:3306/homeassistant?charset=utf8mb4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Mariadb:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;a href=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/adminer.png&#34;&gt;&lt;strong&gt;Adminer&lt;/strong&gt;&lt;/a&gt; (formerly phpMinAdmin) is a full-featured database management tool&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;http://your-mariadb-lxc-ip/adminer/&lt;/code&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; PostgreSQL LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://wiki.postgresql.org/images/3/30/PostgreSQL_logo.3colors.120x120.png&#34; height=&#34;100&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/adminer_logo-cl.png&#34; height=&#34;60&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; PostgreSQL LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox PostgreSQL LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/postgresql-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;To make sure our PostgreSQL is secured with a strong password, set a password for its system user and then change the default database admin user account&lt;/p&gt; &#xA; &lt;p&gt;Change user password&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;passwd postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Login using Postgres system account&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;su - postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Now, change the Admin database password&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;psql -c &#34;ALTER USER postgres WITH PASSWORD &#39;your-password&#39;;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Create a new user.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;psql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;CREATE USER admin WITH PASSWORD &#39;your-password&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Create a new database:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;CREATE DATABASE homeassistant;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Grant all rights or privileges on created database to the user&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;GRANT ALL ON DATABASE homeassistant TO admin;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To exit psql&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;\q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then type exit to get back to root&lt;/p&gt; &#xA; &lt;p&gt;Change the recorder: &lt;code&gt;db_url:&lt;/code&gt; in your HA configuration.yaml&lt;/p&gt; &#xA; &lt;p&gt;Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;recorder:&#xA;  db_url: postgresql://admin:your-password@192.168.100.20:5432/homeassistant?client_encoding=utf8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update PostgreSQL&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;a href=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/adminer.png&#34;&gt;&lt;strong&gt;Adminer&lt;/strong&gt;&lt;/a&gt; (formerly phpMinAdmin) is a full-featured database management tool&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;http://your-PostgreSQL-lxc-ip/adminer/&lt;/code&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Zigbee2MQTT LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Koenkk/zigbee2mqtt/raw/master/images/logo_bee_only.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt;Zigbee2MQTT LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.zigbee2mqtt.io/&#34;&gt;Zigbee2MQTT&lt;/a&gt; is a standalone nodejs application that connects a zigbee network to MQTT&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Zigbee2MQTT LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/zigbee2mqtt-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Determine the location of your adapter&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;ls -l /dev/serial/by-id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example Output: &lt;code&gt;lrwxrwxrwx 1 root root 13 Jun 19 17:30 usb-1a86_USB_Serial-if00-port0 -&amp;gt; ../../ttyUSB0&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è ‚ö†Ô∏è &lt;strong&gt;Before you start Zigbee2MQTT you need to edit the &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/configuration/&#34;&gt;configuration.yaml&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /opt/zigbee2mqtt/data/configuration.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Save and exit the editor with ‚ÄúCtrl+O‚Äù, ‚ÄúEnter‚Äù and ‚ÄúCtrl+X‚Äù&lt;/p&gt; &#xA; &lt;p&gt;Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;frontend:&#xA;  port: 9442&#xA;homeassistant: true&#xA;permit_join: false&#xA;mqtt:&#xA;  base_topic: zigbee2mqtt&#xA;  server: &#39;mqtt://192.168.86.224:1883&#39;&#xA;  user: usr&#xA;  password: pwd&#xA;  keepalive: 60&#xA;  reject_unauthorized: true&#xA;  version: 4&#xA;serial:&#xA;  port: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0&#xA;  #adapter: deconz            #(uncomment for ConBee II)&#xA;advanced:&#xA;  pan_id: GENERATE&#xA;  network_key: GENERATE&#xA;  channel: 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Zigbee2MQTT can be started after completing the configuration&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cd /opt/zigbee2mqtt&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To update Zigbee2MQTT&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cd /opt/zigbee2mqtt &amp;amp;&amp;amp; bash update.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Copy Data From a Existing Zigbee2MQTT LXC to another Zigbee2MQTT LXC&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/z2m-copy-data.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; deCONZ LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://phoscon.de/img/phoscon-logo128x.svg?sanitize=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; deCONZ LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.phoscon.de/en/conbee2/software#deconz&#34;&gt;deCONZ&lt;/a&gt; is used to configure, control and display Zigbee networks.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox deCONZ LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/deconz-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;deCONZ Interface - IP:80&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update deCONZ&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC Console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Zwavejs2MQTT LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/zwave-js/zwavejs2mqtt/raw/master/docs/_images/zwavejs_logo.svg?sanitize=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Zwavejs2MQTT LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://zwave-js.github.io/zwavejs2mqtt/#/&#34;&gt;Zwavejs2MQTT&lt;/a&gt; is a fully configurable Z-Wave to MQTT Gateway and Control Panel.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Zwavejs2MQTT LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/zwavejs2mqtt-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Zwavejs2MQTT Interface - IP:8091&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Copy Data From a Existing Zwavejs2MQTT LXC to another Zwavejs2MQTT LXC&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/zwave-copy-data.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Zwavejs2MQTT&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC Console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/zwavejs2mqtt-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; NocoDB LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/nocodb.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; NocoDB LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.nocodb.com/&#34;&gt;NocoDB&lt;/a&gt; is an open source #NoCode platform that turns any database into a smart spreadsheet. Airtable Alternative.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox NocoDB LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/nocodb-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 4GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;NocoDB Interface - IP:8080/dashboard&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update NocoDB&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/nocodb-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Prometheus LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/prome.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Prometheus LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt; is an open-source systems monitoring and alerting toolkit&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Prometheus LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/prometheus-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 4GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Prometheus Interface - IP:9090&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Prometheus&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Working On&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; InfluxDB/Telegraf LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.hopisystems.com%2Fassets%2Fimages%2Fintegrations%2Finfluxdb.png&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;150&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; InfluxDB/Telegraf LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.influxdata.com/&#34;&gt;InfluxDB&lt;/a&gt; is an open-source time series database developed by the company InfluxData.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.influxdata.com/time-series-platform/telegraf/&#34;&gt;Telegraf&lt;/a&gt; is an open source plugin-driven server agent for collecting and reporting metrics.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox InfluxDB LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/influxdb-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;InfluxDB Configuration&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /etc/influxdb/influxdb.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Telegraf Configuration&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /etc/telegraf/telegraf.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update InfluxDB/Telegraf&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Grafana LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fdocs.checkmk.com%2Flatest%2Fimages%2Fgrafana_logo.png&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Grafana LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; is a multi-platform open source analytics and interactive visualization web application.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Grafana LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/grafana-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Grafana Interface - IP:3000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Grafana&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Docker LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/docker.png&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Docker LXC &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; Options to Install Portainer and/or Docker Compose V2&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; is an open-source project for automating the deployment of applications as portable, self-sufficient containers.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Docker LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/docker-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 4GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;‚ö† Run Compose V2 by replacing the hyphen (-) with a space, using docker compose, instead of docker-compose.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Portainer Interface - IP:9000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Debian 11 LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://www.debian.org/Pics/debian-logo-1024x576.png&#34; alt=&#34;Debian&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Debian 11 LXC &lt;/h1&gt; &#xA; &lt;p&gt;To create a new Proxmox Debian 11 (curl. sudo) LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/debian-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Debian 11&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Ubuntu LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://assets.ubuntu.com/v1/29985a98-ubuntu-logo32.png&#34; alt=&#34;Ubuntu&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Ubuntu LXC &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt; Option to define version 18.04, 20.04, 21.10 or 22.04&lt;/h3&gt; &#xA; &lt;p&gt;To create a new Proxmox Ubuntu (curl. sudo) LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/ubuntu-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU - 22.04 ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Ubuntu&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; UniFi Network Application LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fblog.ui.com%2Fwp-content%2Fuploads%2F2016%2F10%2Funifi-app-logo-300x108.png&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; UniFi Network Application LXC &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; With Local Controller Option &lt;/h3&gt; &#xA; &lt;p&gt;An application designed to optimize UniFi home and business networks with ease.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox UniFi Network Application LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/unifi-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;UniFi Interface - https:// IP:8443&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update UniFi&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/unifi-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Omada Controller LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://www.enterpriseitpro.net/wp-content/uploads/2020/12/logo-omada.png&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Omada Controller LXC &lt;/h1&gt; &#xA; &lt;p&gt;Omada Controller is software which is used to manage the EAP&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Omada Controller LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/omada-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Omada Interface - https:// IP:8043&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;tpeap status&lt;/code&gt; show status of Omada Controller&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;tpeap start&lt;/code&gt; start Omada Controller&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;tpeap stop&lt;/code&gt; stop Omada Controller&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Omada&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Working On&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; MeshCentral LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Ylianst/MeshCentral/raw/master/public/favicon-303x303.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; MeshCentral LXC &lt;/h1&gt; &#xA; &lt;p&gt;MeshCentral is a full computer management web site. With MeshCentral, you can run your own web server to remotely manage and control computers on a local network or anywhere on the internet.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox MeshCentral LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/meshcentral-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;MeshCentral Interface - http:// IP&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update MeshCentral&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Update from the MeshCentral UI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Plex Media Server LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/plex/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Plex Media Server LXC &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt; With Hardware Acceleration Support &lt;/h3&gt; To create a new Proxmox Plex Media Server LXC, run the following in the Proxmox Shell. &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/plex-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Plex Media Server Interface - IP:32400/web&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Plex Media Server:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Copy Data From a Existing Plex Media Server LXC to another Plex Media Server LXC&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the Proxmox Shell&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/pms-copy-data.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Jellyfin Media Server LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/jellyfin/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Jellyfin Media Server LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.turnkeylinux.org/mediaserver&#34;&gt;TurnKey has a LXC CT for Jellyfin&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Jellyfin Media Server LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/jellyfin-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Jellyfin Media Server Interface - IP:8096&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;FFmpeg path: &lt;code&gt;/usr/lib/jellyfin-ffmpeg/ffmpeg&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Jellyfin Media Server&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Pi-hole LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/pi_hole/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Pi-hole LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pi-hole.net/&#34;&gt;Pi-hole&lt;/a&gt; is a Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole and optionally a DHCP server.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Pi-hole LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/pihole-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To set your password:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;pihole -a -p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Pi-hole:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Update from the Pi-hole UI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Technitium DNS LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12230362?s=100&amp;amp;v=4&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Technitium DNS LXC &lt;/h1&gt; An open source authoritative as well as recursive DNS server &#xA; &lt;p&gt;To create a new Proxmox Technitium DNS LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/technitiumdns-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Technitium DNS Interface - IP:5380&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Technitium DNS&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/technitiumdns-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; AdGuard Home LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/adguard/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; AdGuard Home LXC &lt;/h1&gt; &#xA; &lt;p&gt;To create a new Proxmox AdGuard Home LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/adguard-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;AdGuard Home Setup Interface - IP:3000 (After Setup use only IP)&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;sub&gt;(For the Home Assistant Integration, use port &lt;code&gt;80&lt;/code&gt; not &lt;code&gt;3000&lt;/code&gt;)&lt;/sub&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Adguard&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Update from the Adguard UI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Uptime Kuma LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/louislam/uptime-kuma/raw/master/public/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Uptime Kuma LXC &lt;/h1&gt; &#xA; &lt;p&gt;Uptime Kuma is a self-hosted, open source, fancy uptime monitoring and alerting system. It can monitor HTTP(s) / TCP / HTTP(s) Keyword / Ping / DNS Record / Push / Steam Game Server.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Uptime Kuma LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/uptimekuma-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 1GB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Uptime Kuma Interface - IP:3001&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Uptime Kuma&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/uptimekuma-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Whoogle LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/whoogle.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Whoogle LXC &lt;/h1&gt; &#xA; &lt;p&gt;Get Google search results, but without any ads, javascript, AMP links, cookies, or IP address tracking.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Whoogle LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/whoogle-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Whoogle Interface - IP:5000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Whoogle&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;pip3 install whoogle-search --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Heimdall Dashboard LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/heimdall.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Heimdall Dashboard LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/bcfd4f74c93b25bea7b14eacbafd649206bf754a3d4b596329968f0ee569cf3c/68747470733a2f2f692e696d6775722e636f6d2f4d72433451704e2e676966&#34;&gt;Heimdall Application Dashboard&lt;/a&gt; is a dashboard for all your web applications. It doesn&#39;t need to be limited to applications though, you can add links to anything you like.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Heimdall Dashboard LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/heimdalldashboard-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Heimdall Dashboard Interface - IP:7990&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Heimdall Dashboard&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/heimdalldashboard-all-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Dashy LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Lissy93/dashy/raw/master/public/web-icons/dashy-logo.png&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Dashy LXC &lt;/h1&gt; &#xA; &lt;p&gt;Dashy helps you organize your self-hosted services by making them accessible from a single place&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Dashy LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/dashy-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 3GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Dashy Interface - IP:4000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;After getting everything setup the way you want in interactive mode and saved to disk, you have to go into update configuration and rebuild application.&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Dashy&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC Console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/dashy-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; üî∏MagicMirror Server LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/MichMich/MagicMirror/raw/master/.github/header.png&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; MagicMirror Server LXC &lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.magicmirror.builders/&#34;&gt;MagicMirror¬≤&lt;/a&gt; is an open source modular smart mirror platform.&lt;/p&gt; &#xA; &lt;p&gt;To create a new MagicMirror Server LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/magicmirror-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 3GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;MagicMirror Interface - IP:8080&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;&lt;a href=&#34;https://docs.magicmirror.builders/configuration/introduction.html#configuring-your-magicmirror&#34;&gt;Configuration&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;/opt/magicmirror/config/config.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;&lt;a href=&#34;https://docs.magicmirror.builders/getting-started/upgrade-guide.html#upgrade-guide&#34;&gt;Update MagicMirror&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC Console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cd /opt/magicmirror &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; npm install --only=prod --omit=dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; PhotoPrism LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/photoprism.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; PhotoPrism LXC &lt;/h1&gt; &#xA; &lt;p&gt;PhotoPrism¬Æ is an AI-powered app for browsing, organizing &amp;amp; sharing your photo collection.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox PhotoPrism LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/photoprism-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;PhotoPrism Interface - IP:2342&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.photosync-app.com/home.html&#34;&gt;PhotoSync&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update PhotoPrism&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC Console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/photoprism-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Daemon Sync Server LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimg.informer.com%2Ficons_mac%2Fpng%2F128%2F350%2F350335.png&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Daemon Sync Server LXC &lt;/h1&gt; &#xA; &lt;p&gt;Sync files from app to server, share photos &amp;amp; videos, back up your data and stay secure inside local network.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Daemon Sync Server LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/daemonsync-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 8GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Daemon Sync Server Interface - IP:8084&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Search: &lt;code&gt;DAEMON Sync&lt;/code&gt; in your favorite app store&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; MotionEye VMS LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/home-assistant/brands/raw/master/core_integrations/motioneye/icon.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; MotionEye VMS LXC &lt;/h1&gt; &#xA; &lt;p&gt;To create a new Proxmox MotionEye VMS LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/motioneye-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 2GB RAM - 8GB Storage - 2vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;MotionEye Interface - IP:8765&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update MotionEye&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;pip install motioneye --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; File Browser&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/tteck/Proxmox/raw/main/misc/images/filebrowser.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; File Browser &lt;/h1&gt; &#xA; &lt;p&gt;To Install File Browser, ‚ö†Ô∏è run the following in the LXC console.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/filebrowser-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://filebrowser.org/features&#34;&gt;File Browser&lt;/a&gt; is a create-your-own-cloud-kind of software where you can install it on a server, direct it to a path and then access your files through a nice web interface. Many available features!&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;File Browser Interface - http:// IP:8080&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;changeme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update File Browser&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Webmin System Administration&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/webmin/webmin/raw/master/images/webmin-blue.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Webmin System Administration &lt;/h1&gt; &#xA; &lt;p&gt;To Install Webmin System Administration &lt;a href=&#34;https://raw.githubusercontent.com/tteck/Proxmox/main/misc/images/file-manager.png&#34;&gt;(Screenshot)&lt;/a&gt;, ‚ö†Ô∏è run the following in the LXC console.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/webmin.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you prefer to manage all aspects of your Proxmox LXC from a graphical interface instead of the command line interface, Webmin might be right for you.&lt;/p&gt; &#xA; &lt;p&gt;Benefits include automatic daily security updates, backup and restore, file manager with editor, web control panel, and preconfigured system monitoring with optional email alerts.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Webmin Interface - https:// IP:10000 (https)&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;root&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;root&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Webmin&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Update from the Webmin UI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Uninstall Webmin&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash /etc/webmin/uninstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; WireGuard LXC &lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn.icon-icons.com%2Ficons2%2F2699%2FPNG%2F512%2Fwireguard_logo_icon_168760.png&amp;amp;f=1&amp;amp;nofb=1&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; WireGuard LXC &lt;/h1&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; With WGDashboard &lt;/h3&gt; &#xA; &lt;p&gt;To create a new Proxmox WireGuard LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/wireguard-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Default Settings: 512MiB RAM - 2GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;WGDashboard Interface - http:// IP:10086&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;username&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Host Configuration&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;nano /etc/pivpn/wireguard/setupVars.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è&lt;strong&gt;Add Clients&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;pivpn add&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update WireGuard&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Tailscale&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/48932923?v=4&amp;amp;s=100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Tailscale&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://tailscale.com/&#34;&gt;Tailscale&lt;/a&gt; Creates a secure network between your servers, computers, and cloud instances. Even when separated by firewalls or subnets, Tailscale just works.&lt;/p&gt; &#xA; &lt;p&gt;To Install Talescale on an existing LXC, run the following in the Proxmox Shell (replace &lt;code&gt;106&lt;/code&gt; with your LXC ID).&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/add-tailscale-lxc.sh)&#34; -s 106&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;After the script finishes, reboot the LXC then run &lt;code&gt;tailscale up&lt;/code&gt; in the LXC console&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://login.tailscale.com/start&#34;&gt;&lt;strong&gt;Tailscale Login&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Tailscale&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt update &amp;amp;&amp;amp; apt upgrade -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; CrowdSec&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crowdsecurity/crowdsec-docs/main/crowdsec-docs/static/img/crowdsec_no_txt.png?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; CrowdSec&lt;/h1&gt; &#xA; &lt;p&gt;To Install CrowdSec, ‚ö†Ô∏è run the following in the LXC console.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/crowdsec-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://crowdsec.net/&#34;&gt;CrowdSec&lt;/a&gt; is a free, open-source and collaborative IPS. Analyze behaviors, respond to attacks &amp;amp; share signals across the community.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.crowdsec.net/product-tour&#34;&gt;&lt;strong&gt;Control center for your CrowdSec machines.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Keycloak LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://www.keycloak.org/resources/images/keycloak_icon_512px.svg?raw=true&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Keycloak LXC&lt;/h1&gt; &#xA; &lt;p&gt;To create a new Proxmox Keycloak LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/keycloak-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.keycloak.org/&#34;&gt;Keycloak&lt;/a&gt; is an Open Source Identity and Access Management solution for modern Applications and Services.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Keycloak Interface - http:// IP:8080&lt;/strong&gt; (First start can take a few minutes)&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Initial Login&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;The initial admin user can be added manually using the web frontend when accessed from localhost or automatically using environment variables.&lt;/p&gt; &#xA; &lt;p&gt;To add the initial admin user using environment variables, set &lt;code&gt;KEYCLOAK_ADMIN&lt;/code&gt; for the initial admin username and &lt;code&gt;KEYCLOAK_ADMIN_PASSWORD&lt;/code&gt; for the initial admin password.&lt;/p&gt; &#xA; &lt;p&gt;First, stop Keycloak&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;systemctl stop keycloak.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;then start Keycloak by coping &amp;amp; pasting the following (only needed once)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cd /opt/keycloak&#xA;export KEYCLOAK_ADMIN=admin&#xA;export KEYCLOAK_ADMIN_PASSWORD=changeme&#xA;&#xA;bin/kc.sh start-dev &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Keycloak&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;working On&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary markdown=&#34;span&#34;&gt; Vaultwarden LXC&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/resources/vaultwarden-icon-white.svg?sanitize=true&#34; width=&#34;100&#34; height=&#34;100&#34;&gt;&lt;/p&gt; &#xA; &lt;h1 align=&#34;center&#34; id=&#34;heading&#34;&gt; Vaultwarden LXC &lt;/h1&gt; &#xA; &lt;p&gt;Alternative implementation of the Bitwarden server API written in Rust and compatible with upstream &lt;a href=&#34;https://bitwarden.com/download/&#34;&gt;Bitwarden clients&lt;/a&gt;, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/p&gt; &#xA; &lt;p&gt;To create a new Proxmox Vaultwarden LXC, run the following in the Proxmox Shell.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/ct/vaultwarden-v3.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚ö†Ô∏è Vaultwarden needs to be behind a proxy (Nginx Proxy Manager) to obtain HTTPS and to allow clients to connect.&lt;/p&gt; &#xA; &lt;p&gt;The script builds from source, which takes time and resources. After the build, the script will automatically set resources to Normal Settings.&lt;/p&gt; &#xA; &lt;p&gt;Expect 30+ minute install time.&lt;/p&gt; &#xA; &lt;h3 align=&#34;center&#34; id=&#34;heading&#34;&gt;‚ö° Normal Settings: 512Mib RAM - 6GB Storage - 1vCPU ‚ö°&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Vaultwarden Interface - IP:8000&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;Path to Vaultwarden .env file&lt;/strong&gt; (to enable &lt;code&gt;ADMIN_TOKEN&lt;/code&gt;)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;/opt/vaultwarden/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;‚öôÔ∏è &lt;strong&gt;To Update Vaultwarden&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Run in the LXC console&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bash -c &#34;$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/vaultwarden-update.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>ohmyzsh/ohmyzsh</title>
    <updated>2022-07-17T02:24:02Z</updated>
    <id>tag:github.com,2022-07-17:/ohmyzsh/ohmyzsh</id>
    <link href="https://github.com/ohmyzsh/ohmyzsh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üôÉ A delightful community-driven (with 2,000+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://ohmyzsh.s3.amazonaws.com/omz-ansi-github.png&#34; alt=&#34;Oh My Zsh&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt; configuration.&lt;/p&gt; &#xA;&lt;p&gt;Sounds boring. Let&#39;s try again.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once installed, your terminal shell will become the talk of the town &lt;em&gt;or your money back!&lt;/em&gt; With each keystroke in your command prompt, you&#39;ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf√©s and ask you, &lt;em&gt;&#34;that is amazing! are you some sort of genius?&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, you&#39;ll begin to get the sort of attention that you have always felt you deserved. ...or maybe you&#39;ll use the time that you&#39;re saving to start flossing more often. üò¨&lt;/p&gt; &#xA;&lt;p&gt;To learn more, visit &lt;a href=&#34;https://ohmyz.sh&#34;&gt;ohmyz.sh&lt;/a&gt;, follow &lt;a href=&#34;https://twitter.com/ohmyzsh&#34;&gt;@ohmyzsh&lt;/a&gt; on Twitter, and join us on &lt;a href=&#34;https://discord.gg/ohmyzsh&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ohmyzsh/ohmyzsh/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ohmyzsh&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ohmyzsh?label=Follow+@ohmyzsh&amp;amp;style=flat&#34; alt=&#34;Follow @ohmyzsh&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ohmyzsh&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/642496866407284746&#34; alt=&#34;Discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/ohmyzsh/ohmyzsh&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready-blue?logo=gitpod&#34; alt=&#34;Gitpod ready&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huntr.dev/bounties/disclose/?utm_campaign=ohmyzsh%2Fohmyzsh&amp;amp;utm_medium=social&amp;amp;utm_source=github&amp;amp;target=https%3A%2F%2Fgithub.com%2Fohmyzsh%2Fohmyzsh&#34;&gt;&lt;img src=&#34;https://cdn.huntr.dev/huntr_security_badge_mono.svg?sanitize=true&#34; alt=&#34;huntr.dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#basic-installation&#34;&gt;Basic Installation&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-inspection&#34;&gt;Manual inspection&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-oh-my-zsh&#34;&gt;Using Oh My Zsh&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#plugins&#34;&gt;Plugins&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enabling-plugins&#34;&gt;Enabling Plugins&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-plugins&#34;&gt;Using Plugins&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#themes&#34;&gt;Themes&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#selecting-a-theme&#34;&gt;Selecting a Theme&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-topics&#34;&gt;Advanced Topics&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-installation&#34;&gt;Advanced Installation&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-directory&#34;&gt;Custom Directory&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#unattended-install&#34;&gt;Unattended install&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installing-from-a-forked-repository&#34;&gt;Installing from a forked repository&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-installation&#34;&gt;Manual Installation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installation-problems&#34;&gt;Installation Problems&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-plugins-and-themes&#34;&gt;Custom Plugins and Themes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-updates&#34;&gt;Getting Updates&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-updates&#34;&gt;Manual Updates&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#uninstalling-oh-my-zsh&#34;&gt;Uninstalling Oh My Zsh&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#how-do-i-contribute-to-oh-my-zsh&#34;&gt;How do I contribute to Oh My Zsh?&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#do-not-send-us-themes&#34;&gt;Do NOT send us themes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#follow-us&#34;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#merchandise&#34;&gt;Merchandise&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#about-planet-argon&#34;&gt;About Planet Argon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL2 is preferred, but cygwin or msys also mostly work.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zsh.org&#34;&gt;Zsh&lt;/a&gt; should be installed (v4.3.9 or more recent is fine but we prefer 5.0.8 and newer). If not pre-installed (run &lt;code&gt;zsh --version&lt;/code&gt; to confirm), check the following wiki instructions here: &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH&#34;&gt;Installing ZSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; should be installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt; should be installed (recommended v2.4.11 or higher)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic Installation&lt;/h3&gt; &#xA;&lt;p&gt;Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt; or another similar tool.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sh -c &#34;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;sh -c &#34;$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that any previous &lt;code&gt;.zshrc&lt;/code&gt; will be renamed to &lt;code&gt;.zshrc.pre-oh-my-zsh&lt;/code&gt;. After installation, you can move the configuration you want to preserve into the new &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Manual inspection&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s a good idea to inspect the install script from projects you don&#39;t yet know. You can do that by downloading the install script first, looking through it so everything looks normal, then running it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&#xA;sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Oh My Zsh&lt;/h2&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Oh My Zsh comes with a shitload of plugins for you to take advantage of. You can take a look in the &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins&#34;&gt;plugins&lt;/a&gt; directory and/or the &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins&#34;&gt;wiki&lt;/a&gt; to see what&#39;s currently available.&lt;/p&gt; &#xA;&lt;h4&gt;Enabling Plugins&lt;/h4&gt; &#xA;&lt;p&gt;Once you spot a plugin (or several) that you&#39;d like to use with Oh My Zsh, you&#39;ll need to enable them in the &lt;code&gt;.zshrc&lt;/code&gt; file. You&#39;ll find the zshrc file in your &lt;code&gt;$HOME&lt;/code&gt; directory. Open it with your favorite text editor and you&#39;ll see a spot to list all the plugins you want to load.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;vi ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, this might begin to look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;plugins=(&#xA;  git&#xA;  bundler&#xA;  dotenv&#xA;  macos&#xA;  rake&#xA;  rbenv&#xA;  ruby&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that the plugins are separated by whitespace (spaces, tabs, new lines...). &lt;strong&gt;Do not&lt;/strong&gt; use commas between them or it will break.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Using Plugins&lt;/h4&gt; &#xA;&lt;p&gt;Each built-in plugin includes a &lt;strong&gt;README&lt;/strong&gt;, documenting it. This README should show the aliases (if the plugin adds any) and extra goodies that are included in that particular plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Themes&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;ll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred and fifty themes now bundled. Most of them have &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&#34;&gt;screenshots&lt;/a&gt; on the wiki (We are working on updating this!). Check them out!&lt;/p&gt; &#xA;&lt;h4&gt;Selecting a Theme&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Robby&#39;s theme is the default one. It&#39;s not the fanciest one. It&#39;s not the simplest one. It&#39;s just the right one (for him).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you find a theme that you&#39;d like to use, you will need to edit the &lt;code&gt;~/.zshrc&lt;/code&gt; file. You&#39;ll see an environment variable (all caps) in there that looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME=&#34;robbyrussell&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a different theme, simply change the value to match the name of your desired theme. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME=&#34;agnoster&#34; # (this is one of the fancy ones)&#xA;# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: many themes require installing a &lt;a href=&#34;https://github.com/powerline/fonts&#34;&gt;Powerline Font&lt;/a&gt; or a &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;Nerd Font&lt;/a&gt; in order to render properly. Without them, these themes will render &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#i-have-a-weird-character-in-my-prompt&#34;&gt;weird prompt symbols&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open up a new terminal window and your prompt should look something like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png&#34; alt=&#34;Agnoster theme&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case you did not find a suitable theme for your needs, please have a look at the wiki for &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&#34;&gt;more of them&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME=&#34;random&#34; # (...please let it be pie... please be some pie..)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And if you want to pick random theme from a list of your favorite themes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME_RANDOM_CANDIDATES=(&#xA;  &#34;robbyrussell&#34;&#xA;  &#34;agnoster&#34;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you only know which themes you don&#39;t like, you can add them similarly to an ignored list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH_THEME_RANDOM_IGNORED=(pygmalion tjkirch_mod)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;If you have some more questions or issues, you might find a solution in our &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Topics&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re the type that likes to get their hands dirty, these sections might resonate.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Installation&lt;/h3&gt; &#xA;&lt;p&gt;Some users may want to manually install Oh My Zsh, or change the default path or other settings that the installer accepts (these settings are also documented at the top of the install script).&lt;/p&gt; &#xA;&lt;h4&gt;Custom Directory&lt;/h4&gt; &#xA;&lt;p&gt;The default location is &lt;code&gt;~/.oh-my-zsh&lt;/code&gt; (hidden in your home directory, you can access it with &lt;code&gt;cd ~/.oh-my-zsh&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to change the install directory with the &lt;code&gt;ZSH&lt;/code&gt; environment variable, either by running &lt;code&gt;export ZSH=/your/path&lt;/code&gt; before installing, or by setting it before the end of the install pipeline like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ZSH=&#34;$HOME/.dotfiles/oh-my-zsh&#34; sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Unattended install&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re running the Oh My Zsh install script as part of an automated install, you can pass the &lt;code&gt;--unattended&lt;/code&gt; flag to the &lt;code&gt;install.sh&lt;/code&gt; script. This will have the effect of not trying to change the default shell, and it also won&#39;t run &lt;code&gt;zsh&lt;/code&gt; when the installation has finished.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sh -c &#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34; &#34;&#34; --unattended&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing from a forked repository&lt;/h4&gt; &#xA;&lt;p&gt;The install script also accepts these variables to allow installation of a different repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;REPO&lt;/code&gt; (default: &lt;code&gt;ohmyzsh/ohmyzsh&lt;/code&gt;): this takes the form of &lt;code&gt;owner/repository&lt;/code&gt;. If you set this variable, the installer will look for a repository at &lt;code&gt;https://github.com/{owner}/{repository}&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;REMOTE&lt;/code&gt; (default: &lt;code&gt;https://github.com/${REPO}.git&lt;/code&gt;): this is the full URL of the git repository clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab, Bitbucket...) or if you want to clone with SSH instead of HTTPS (&lt;code&gt;git@github.com:user/project.git&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE: it&#39;s incompatible with setting the &lt;code&gt;REPO&lt;/code&gt; variable. This setting will take precedence.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BRANCH&lt;/code&gt; (default: &lt;code&gt;master&lt;/code&gt;): you can use this setting if you want to change the default branch to be checked out when cloning the repository. This might be useful for testing a Pull Request, or if you want to use a branch other than &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manual Installation&lt;/h4&gt; &#xA;&lt;h5&gt;1. Clone the repository &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2. &lt;em&gt;Optionally&lt;/em&gt;, backup your existing &lt;code&gt;~/.zshrc&lt;/code&gt; file &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp ~/.zshrc ~/.zshrc.orig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;3. Create a new zsh configuration file &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;p&gt;You can create a new zsh config file by copying the template that we have included for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;4. Change your default shell &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chsh -s $(which zsh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You must log out from your user session and log back in to see this change.&lt;/p&gt; &#xA;&lt;h5&gt;5. Initialize your new zsh configuration &#xA; &lt;!-- omit in toc --&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Once you open up a new terminal window, it should load zsh with Oh My Zsh&#39;s configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Installation Problems&lt;/h3&gt; &#xA;&lt;p&gt;If you have any hiccups installing, here are a few common fixes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You &lt;em&gt;might&lt;/em&gt; need to modify your &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;~/.zshrc&lt;/code&gt; if you&#39;re not able to find some commands after switching to &lt;code&gt;oh-my-zsh&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you installed manually or changed the install location, check the &lt;code&gt;ZSH&lt;/code&gt; environment variable in &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Custom Plugins and Themes&lt;/h3&gt; &#xA;&lt;p&gt;If you want to override any of the default behaviors, just add a new file (ending in &lt;code&gt;.zsh&lt;/code&gt;) in the &lt;code&gt;custom/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;If you have many functions that go well together, you can put them as a &lt;code&gt;XYZ.plugin.zsh&lt;/code&gt; file in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and then enable this plugin.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and it will be loaded instead of the one in &lt;code&gt;plugins/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Updates&lt;/h2&gt; &#xA;&lt;p&gt;By default, you will be prompted to check for updates every 2 weeks. You can choose other update modes by adding a line to your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Automatic update without confirmation prompt:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zstyle &#39;:omz:update&#39; mode auto&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Just offer a reminder every few days, if there are updates available:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zstyle &#39;:omz:update&#39; mode reminder&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To disable automatic updates entirely:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zstyle &#39;:omz:update&#39; mode disabled&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: you can control how often Oh My Zsh checks for updates with the following setting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# This will check for updates every 7 days&#xA;zstyle &#39;:omz:update&#39; frequency 7&#xA;# This will check for updates every time you open the terminal (not recommended)&#xA;zstyle &#39;:omz:update&#39; frequency 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Updates&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to update at any point in time (maybe someone just released a new plugin and you don&#39;t want to wait a week?) you just need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;omz update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Magic! üéâ&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling Oh My Zsh&lt;/h2&gt; &#xA;&lt;p&gt;Oh My Zsh isn&#39;t for everyone. We&#39;ll miss you, but we want to make this an easy breakup.&lt;/p&gt; &#xA;&lt;p&gt;If you want to uninstall &lt;code&gt;oh-my-zsh&lt;/code&gt;, just run &lt;code&gt;uninstall_oh_my_zsh&lt;/code&gt; from the command-line. It will remove itself and revert your previous &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; configuration.&lt;/p&gt; &#xA;&lt;h2&gt;How do I contribute to Oh My Zsh?&lt;/h2&gt; &#xA;&lt;p&gt;Before you participate in our delightful community, please read the &lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m far from being a &lt;a href=&#34;https://www.zsh.org/&#34;&gt;Zsh&lt;/a&gt; expert and suspect there are many ways to improve ‚Äì if you have ideas on how to make the configuration easier to maintain (and faster), don&#39;t hesitate to fork and send pull requests!&lt;/p&gt; &#xA;&lt;p&gt;We also need people to test out pull requests. So take a look through &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/issues&#34;&gt;the open issues&lt;/a&gt; and help where you can.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Do NOT send us themes&lt;/h3&gt; &#xA;&lt;p&gt;We have (more than) enough themes for the time being. Please add your theme to the &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&#34;&gt;external themes&lt;/a&gt; wiki page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn&#39;t be so awesome.&lt;/p&gt; &#xA;&lt;p&gt;Thank you so much!&lt;/p&gt; &#xA;&lt;h2&gt;Follow Us&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on social media:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ohmyzsh&#34;&gt;@ohmyzsh&lt;/a&gt; on Twitter. You should follow it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Oh-My-Zsh-296616263819290/&#34;&gt;Facebook&lt;/a&gt; poke us.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.instagram.com/_ohmyzsh/&#34;&gt;Instagram&lt;/a&gt; tag us in your post showing Oh My Zsh!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/ohmyzsh&#34;&gt;Discord&lt;/a&gt; to chat with us!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Merchandise&lt;/h2&gt; &#xA;&lt;p&gt;We have &lt;a href=&#34;https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github&#34;&gt;stickers, shirts, and coffee mugs available&lt;/a&gt; for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Oh My Zsh is released under the &lt;a href=&#34;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About Planet Argon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg&#34; alt=&#34;Planet Argon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Oh My Zsh was started by the team at &lt;a href=&#34;https://www.planetargon.com/?utm_source=github&#34;&gt;Planet Argon&lt;/a&gt;, a &lt;a href=&#34;https://www.planetargon.com/skills/ruby-on-rails-development?utm_source=github&#34;&gt;Ruby on Rails development agency&lt;/a&gt;. Check out our &lt;a href=&#34;https://www.planetargon.com/open-source?utm_source=github&#34;&gt;other open source projects&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>searxng/searxng-docker</title>
    <updated>2022-07-17T02:24:02Z</updated>
    <id>tag:github.com,2022-07-17:/searxng/searxng-docker</id>
    <link href="https://github.com/searxng/searxng-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The docker-compose files for setting up a SearXNG instance with docker.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;searxng-docker&lt;/h1&gt; &#xA;&lt;p&gt;Create a new SearXNG instance in five minutes using Docker&lt;/p&gt; &#xA;&lt;h2&gt;What is included ?&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Docker image&lt;/th&gt; &#xA;   &lt;th&gt;Dockerfile&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/caddyserver/caddy&#34;&gt;Caddy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reverse proxy (create a LetsEncrypt certificate automatically)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/_/caddy&#34;&gt;caddy/caddy:2-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/caddyserver/caddy-docker&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/searxng/searxng&#34;&gt;SearXNG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SearXNG by itself&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/searxng/searxng&#34;&gt;searxng/searxng:latest&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/searxng/searxng/raw/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/redis/redis&#34;&gt;Redis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;In-memory database&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/_/redis&#34;&gt;redis:alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/docker-library/redis/raw/master/Dockerfile-alpine.template&#34;&gt;Dockerfile-alpine.template&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Install docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Install docker-compose&lt;/a&gt; (be sure that docker-compose version is at least 1.9.0)&lt;/li&gt; &#xA; &lt;li&gt;Get searxng-docker &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd /usr/local&#xA;git clone https://github.com/searxng/searxng-docker.git&#xA;cd searxng-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edit the &lt;a href=&#34;https://github.com/searxng/searxng-docker/raw/master/.env&#34;&gt;.env&lt;/a&gt; file to set the hostname and an email&lt;/li&gt; &#xA; &lt;li&gt;Generate the secret key &lt;code&gt;sed -i &#34;s|ultrasecretkey|$(openssl rand -hex 32)|g&#34; searxng/settings.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edit the &lt;a href=&#34;https://github.com/searxng/searxng-docker/raw/master/searxng/settings.yml&#34;&gt;searxng/settings.yml&lt;/a&gt; file according to your need&lt;/li&gt; &#xA; &lt;li&gt;Check everything is working: &lt;code&gt;docker-compose up&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run SearXNG in the background: &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to access the logs&lt;/h2&gt; &#xA;&lt;p&gt;To access the logs from all the containers use: &lt;code&gt;docker-compose logs -f&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To access the logs of one specific container:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Caddy: &lt;code&gt;docker-compose logs -f caddy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;SearXNG: &lt;code&gt;docker-compose logs -f searxng&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Redis: &lt;code&gt;docker-compose logs -f redis&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Start SearXNG with systemd&lt;/h3&gt; &#xA;&lt;p&gt;You can skip this step if you don&#39;t use systemd.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cp searxng-docker.service.template searxng-docker.service&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;edit the content of &lt;code&gt;WorkingDirectory&lt;/code&gt; in the &lt;code&gt;searxng-docker.service&lt;/code&gt; file (only if the installation path is different from /usr/local/searxng-docker)&lt;/li&gt; &#xA; &lt;li&gt;Install the systemd unit: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl enable $(pwd)/searxng-docker.service&#xA;systemctl start searxng-docker.service&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note on the image proxy feature&lt;/h2&gt; &#xA;&lt;p&gt;The SearXNG image proxy is activated by default.&lt;/p&gt; &#xA;&lt;p&gt;The default &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&#34;&gt;Content-Security-Policy&lt;/a&gt; allow the browser to access to &lt;code&gt;${SEARXNG_HOSTNAME}&lt;/code&gt; and &lt;code&gt;https://*.tile.openstreetmap.org;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If some users wants to disable the image proxy, you have to modify &lt;a href=&#34;https://github.com/searxng/searxng-docker/raw/master/Caddyfile&#34;&gt;./Caddyfile&lt;/a&gt;. Replace the &lt;code&gt;img-src &#39;self&#39; data: https://*.tile.openstreetmap.org;&lt;/code&gt; by &lt;code&gt;img-src * data:;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Multi Architecture Docker images&lt;/h2&gt; &#xA;&lt;p&gt;Supported architecture:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;amd64&lt;/li&gt; &#xA; &lt;li&gt;arm64&lt;/li&gt; &#xA; &lt;li&gt;arm/v7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to update ?&lt;/h2&gt; &#xA;&lt;p&gt;To update the SearXNG stack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker-compose pull&#xA;docker-compose down&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update this &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;p&gt;Check out the newest version on github: &lt;a href=&#34;https://github.com/searxng/searxng-docker&#34;&gt;searxng/searxng-docker&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>