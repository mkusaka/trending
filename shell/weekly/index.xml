<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-03T02:22:45Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>theVakhovskeIsTaken/holoiso</title>
    <updated>2022-07-03T02:22:45Z</updated>
    <id>tag:github.com,2022-07-03:/theVakhovskeIsTaken/holoiso</id>
    <link href="https://github.com/theVakhovskeIsTaken/holoiso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SteamOS 3 (Holo) archiso configuration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build ISO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167457908-07be1a60-7e86-4bef-b7f0-6bd19efd8b24.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;HoloISO&lt;/h1&gt; &#xA;&lt;p&gt;SteamOS 3 (Holo) archiso configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Yes, Gabe. SteamOS functions well on a toaster.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project attempts to bring the Steam Deck&#39;s Holo OS into a generic, installable format, and provide a close-to-official SteamOS experience.&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://t.me/HoloISO&#34;&gt;here&lt;/a&gt; to join &lt;strong&gt;HoloISO&lt;/strong&gt; Telegram update channel;&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://steamdeck.community/forums/holoiso.29/&#34;&gt;here&lt;/a&gt; to visit &lt;strong&gt;HoloISO&lt;/strong&gt; discussion on Steam Deck Community forums&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Common Questions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is this official?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No, but it may as well be 99% of the way there. The code and packages, are straight from Valve, with zero possible edits, and the ISO is being built on the official Steam Deck recovery image, running inside a QEMU instance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The ISO didn&#39;t boot for me, any solution?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Currently, the ISO only boots if flashed using &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;BalenaEtcher&lt;/a&gt;, &lt;a href=&#34;http://wiki.rosalab.ru/en/index.php/ROSA_ImageWriter&#34;&gt;RosaImageWriter&lt;/a&gt;, &lt;a href=&#34;https://getfedora.org/en/workstation/download/&#34;&gt;Fedora Media Writer&lt;/a&gt;, DD with 4MB block size, or &lt;a href=&#34;https://rufus.ie&#34;&gt;Rufus&lt;/a&gt; with DD mode.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Working stuff:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bootup&lt;/li&gt; &#xA; &lt;li&gt;SteamOS OOBE (Steam Deck UI First Boot Experience)&lt;/li&gt; &#xA; &lt;li&gt;Deck UI (separate session)&lt;/li&gt; &#xA; &lt;li&gt;Deck UI (-gamepadui)&lt;/li&gt; &#xA; &lt;li&gt;TDP/FPS limiting&lt;/li&gt; &#xA; &lt;li&gt;Global FSR&lt;/li&gt; &#xA; &lt;li&gt;Shader Pre-Caching&lt;/li&gt; &#xA; &lt;li&gt;Switch to Desktop from plasma/to plasma without user interference.&lt;/li&gt; &#xA; &lt;li&gt;Valve&#39;s exclusive &lt;em&gt;Vapor&lt;/em&gt; appearance for KDE Plasma&lt;/li&gt; &#xA; &lt;li&gt;Steam Deck pacman mirrors&lt;/li&gt; &#xA; &lt;li&gt;Cool-looking neofetch?&lt;/li&gt; &#xA; &lt;li&gt;System updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Known issues:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NVIDIA GPUs are supported after following this procedure:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Only 9xx+ GPUs are supported. Choose your GPU type while installing HoloISO. If you encounter any issues, reboot to recovery mode, type &lt;code&gt;recoveryinit&lt;/code&gt;, connect to network using &lt;code&gt;nmtui&lt;/code&gt; and install required packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Older GPUs won&#39;t be supported until drivers are opensourced OR Until they support atomic KMS, accelerated Xwayland, and Vulkan DMA-BUF extensions, they simply cannot function properly with HoloISO.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel GPUs/iGPUs require a Gamescope and MESA downgrade in order to boot into Steam Deck session.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Choose your GPU type while installing HoloISO. If you encounter any issues, reboot to recovery mode, type &lt;code&gt;recoveryinit&lt;/code&gt;, connect to network using &lt;code&gt;nmtui&lt;/code&gt; and install required packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation process:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequistes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4GB flash drive&lt;/li&gt; &#xA; &lt;li&gt;AMD RX Vega+/APU iGPU; 4xx/5xx, 5xxx/6xxx GPU or Intel UHD 630+ iGPU or NVIDIA GTX 9xx+ iGPU/GPUs (preferably without Optimus [PRIME])&lt;/li&gt; &#xA; &lt;li&gt;UEFI-enabled device&lt;/li&gt; &#xA; &lt;li&gt;Disabled secure boot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation types:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;barebones&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An OS-only installation, resembles vanilla Arch Linux installation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gameonly*&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Steam Deck UI only (AMD GPU only; no desktop), as said, this doesn&#39;t ship any DE, and only has the Steam Deck UI installed. *&lt;em&gt;&lt;strong&gt;This part is currently under a renovation.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;deckperience&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Full SteamOS 3 experience, Includes proper session switching, KDE Plasma + media apps, and Chromium pre-installed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash the ISO from &lt;a href=&#34;https://github.com/bhaiest/holoiso/releases/latest&#34;&gt;releases&lt;/a&gt; or &lt;a href=&#34;https://nightly.link/theVakhovskeIsTaken/holoiso/workflows/build/3.0/holoiso&#34;&gt;actions&lt;/a&gt; for NVIDIA GPUs using &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;BalenaEtcher&lt;/a&gt;, &lt;a href=&#34;https://rufus.ie&#34;&gt;Rufus&lt;/a&gt; with DD mode, or by typing &lt;code&gt;sudo dd if=SteamOS.iso of=/dev/sd(your flash drive) bs=4M status=progress oflag=sync&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Boot into ISO&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;holoinstall&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter drive node, starting from, for example, &lt;code&gt;sda&lt;/code&gt; or &lt;code&gt;nvme0n1&lt;/code&gt; when asked&lt;/li&gt; &#xA; &lt;li&gt;Take your favourite hot beverage, and wait &#39;till it installs :3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upon booting, you&#39;ll be greeted with Steam Deck&#39;s OOBE screen, from where you&#39;ll connect to your network, and login to your Steam account, from there, you can exit to KDE Plasma seamlessly by choosing &lt;em&gt;Switch to desktop&lt;/em&gt; in the power menu, &lt;a href=&#34;https://www.youtube.com/watch?v=smfwna2iHho&#34;&gt;like so&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292656-1679e007-4701-4a3c-89ee-2104b5eb12cd.png&#34; alt=&#34;Screenshot_20220508_133916&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292672-8bc9032d-4a21-4528-ab7e-b9dbc25a0664.png&#34; alt=&#34;Screenshot_20220508_133737&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292722-a68806c1-5768-4790-a8e7-108d7c72bb08.png&#34; alt=&#34;Screenshot_20220508_133746&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292731-86fed590-0260-4c5e-ac13-05d284b5fd24.png&#34; alt=&#34;Screenshot_20220508_133822&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292734-90036b5f-2571-438e-8951-8d731cd4ae93.png&#34; alt=&#34;Screenshot_20220508_134038&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292738-a70d266f-814d-4352-8d38-b920ae3f3381.png&#34; alt=&#34;Screenshot_20220508_134051&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notes:&lt;/h2&gt; &#xA;&lt;p&gt;This configuration includes Valve&#39;s pacman.conf repositories, &lt;code&gt;holoinstall&lt;/code&gt; script and &lt;code&gt;holoinstall&lt;/code&gt; post-installation binaries.&lt;/p&gt; &#xA;&lt;p&gt;This configuration builds a &lt;em&gt;releng-based ISO&lt;/em&gt;, which is the default Arch Linux redistribution flavor.&lt;/p&gt; &#xA;&lt;h2&gt;Building the ISO:&lt;/h2&gt; &#xA;&lt;p&gt;Trigger the build by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -Sy archiso&#xA;git clone https://github.com/bhaiest/holoiso/&#xA;sudo mkarchiso -v holoiso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it ends, your ISO will be available in the &lt;code&gt;out&lt;/code&gt; folder.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Syndrizzle/hotfiles</title>
    <updated>2022-07-03T02:22:45Z</updated>
    <id>tag:github.com,2022-07-03:/Syndrizzle/hotfiles</id>
    <link href="https://github.com/Syndrizzle/hotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üè† A collection of personal configuration files for various rices I have made.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;IMPORTANT:&lt;/b&gt; Those who are looking for the old rice, it is on the worm branch, &lt;a href=&#34;https://github.com/syndrizzle/hotfiles/tree/worm&#34;&gt;click here&lt;/a&gt; to check it out. &lt;/p&gt; &#xA;&lt;img alt=&#34;picture 2&#34; src=&#34;https://i.imgur.com/hrNbdfD.gif&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Syndrizzle/hotfiles/bspwm/#installation&#34;&gt;&lt;img alt=&#34;picture 2&#34; src=&#34;https://i.imgur.com/Y7PKn7x.png&#34; width=&#34;220&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Syndrizzle/hotfiles/bspwm/#gallery&#34;&gt;&lt;img alt=&#34;picture 3&#34; src=&#34;https://i.imgur.com/i9rmhBC.png&#34; width=&#34;220&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Syndrizzle/hotfiles/bspwm/#support&#34;&gt;&lt;img alt=&#34;picture 1&#34; src=&#34;https://i.imgur.com/LLIkH4D.png&#34; width=&#34;220&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Syndrizzle/hotfiles/bspwm/#credits&#34;&gt;&lt;img alt=&#34;picture 5&#34; src=&#34;https://i.imgur.com/QA23l5X.png&#34; width=&#34;220&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Syndrizzle/hotfiles/bspwm/#tips&#34;&gt;&lt;img alt=&#34;picture 4&#34; src=&#34;https://i.imgur.com/cg3KPZc.png&#34; width=&#34;220&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/syndrizzle/hotfiles?color=%231a1b26&amp;amp;label=STARGAZERS&amp;amp;labelColor=%231a1b26&amp;amp;style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://visitor-badge-reloaded.herokuapp.com/badge?color=1a1b26&amp;amp;page_id=syndrizzle/hotfiles&amp;amp;style=for-the-badge&amp;amp;lcolor=1a1b26&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://img.shields.io/github/issues/syndrizzle/hotfiles?color=1a1b26&amp;amp;labelColor=1a1b26&amp;amp;style=for-the-badge&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://img.shields.io/github/license/syndrizzle/hotfiles?color=1a1b26&amp;amp;labelColor=1a1b26&amp;amp;style=for-the-badge&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Thanks for Visiting!&lt;/h3&gt; &#xA;&lt;p&gt;Welcome to my GitHub repository of personal dotfiles! These are beautifully created with usability and aestheticism kept in mind. Feel free to explore it, use it or &lt;del&gt;steal&lt;/del&gt; copy it, but please give me the credits üòÉ. If you need any help, you can open an issue on GitHub or you can contact me on Discord: &lt;code&gt;Syndrizzle#3826&lt;/code&gt;, I will be happy to help!&lt;/p&gt; &#xA;&lt;h4&gt;2. ‚ú® The Bedazzle BSPWM ‚ú®&lt;/h4&gt; &#xA;&lt;h3&gt;About:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kitty&lt;/strong&gt; as the terminal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tokyo Night&lt;/strong&gt; as the color scheme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;BSPWM&lt;/strong&gt; as the window manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Picom (Fluffy Animations)&lt;/strong&gt; as the compositor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;EWW&lt;/strong&gt; as the widgets [Dashboard, Player and System Menu]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rofi&lt;/strong&gt; as the application launcher.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SLiM&lt;/strong&gt; as the Display Manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dunst&lt;/strong&gt; as the notification daemon.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conky&lt;/strong&gt; as the desktop eyecandy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;jgmenu&lt;/strong&gt; as the desktop root menu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Polybar&lt;/strong&gt; as the main bar.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;NOTE!!!!!&lt;/strong&gt; This configuration was made for my PC, so some things might not work on your PC as this was never intended to be a usable full fledged system, in that case, please try if you can fix that up as much as possible, or you can open an issue for help :) This was made for a &lt;strong&gt;1920x1080&lt;/strong&gt; screen and on a &lt;strong&gt;Laptop&lt;/strong&gt; with &lt;strong&gt;96&lt;/strong&gt; dpi.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;Below are the installation steps to install the dotfiles of my setup. Click on a step to Expand it.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;1. Install Dependencies: &lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Before we begin the installation, you need to create a &lt;code&gt;Downloads&lt;/code&gt; folder in your &lt;code&gt;/home&lt;/code&gt; folder if it is not there by default.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ~/Downloads&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Since we will store temporary cloned files in this folder.&lt;/p&gt; &#xA; &lt;p&gt;For now the installation instructions are only provided for Arch Based distributions, I have not included the steps for others because I don&#39;t want to end up fighting with the compatibility issues on other distributions, I will add them after proper testing.&lt;br&gt;&lt;/p&gt; &#xA; &lt;p&gt;A one time command to install most of these dependencies with &lt;strong&gt;your favorite AUR Helper&lt;/strong&gt; is given below, however some of them might need to be installed manually. In this case we are using paru, you can any other, I don&#39;t mind üôÉ&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S kitty polybar rofi bspwm-rounded-corners-git xdg-user-dirs nautilus xorg pavucontrol blueberry xfce4-power-manager feh lxappearance papirus-icon-theme file-roller gtk-engines gtk-engine-murrine neofetch imagemagick parcellite xclip maim gpick curl jq tint2 zsh moreutils recode dunst plank python-xdg redshift mate-polkit xfce4-settings mpv yaru-sound-theme fish alsa-utils slim xorg-xinit brightnessctl acpi mugshot playerctl python-pytz glava wmctrl i3lock-color jgmenu inter-font networkmanager-dmenu-git conky-lua bsp-layout zscroll noise-suppression-for-voice starship system76-power lsof gamemode lib32-gamemode xdo bluez bluez-utils bluez-libs bluez-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You also need &lt;code&gt;pylrc&lt;/code&gt; which is a python module for handling the lyrics of song in the eww based player. You can skip this if you don&#39;t use spotify. First install &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -S python-pip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pip install pylrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To install pylrc to your main &lt;code&gt;site-packages&lt;/code&gt; folder.&lt;/p&gt; &#xA; &lt;p&gt;Now you gotta install some dependencies which cannot be installed via the AUR helper/Pacman or it is better to install them this way:&lt;/p&gt; &#xA; &lt;h4&gt;1. Eww&lt;/h4&gt; &#xA; &lt;p&gt;Elkowar&#39;s wacky widgets are the main widgets that we are gonna use in our system. It is a very essential dependency that you need. First you need the nightly version of rust and also GTK3. A speedy way would be to directly install the binary package of rust nightly from the AUR using your favorite AUR helper:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S rust-nightly-bin gtk3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then we just need to run a few commands assuming you have &lt;code&gt;git&lt;/code&gt; installed:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Downloads&#xA;git clone https://github.com/elkowar/eww.git&#xA;cd eww&#xA;cargo build --release -j $(nproc)&#xA;cd target/release&#xA;sudo mv eww /usr/bin/eww&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;That installs eww to our root filesystem, which is then sourced from the &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;2. xqp&lt;/h4&gt; &#xA; &lt;p&gt;xqp comes from the author of &lt;code&gt;bspwm&lt;/code&gt;. It outputs the pointer ID under the window, basically, it is needed for the right click menu to function when clicking the root window in bspwm. The method of doing this was taken from &lt;a href=&#34;https://github.con/beyond9thousand&#34;&gt;beyond9thousand&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;NOTE: You need &lt;code&gt;base-devel&lt;/code&gt; installed before this:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -S base-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then you just gotta do:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Downloads&#xA;git clone https://github.com/baskerville/xqp.git&#xA;cd xqp&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;3. Picom Pijulius Fork&lt;/h4&gt; &#xA; &lt;p&gt;This picom fork has the best window animations you can get. For eyecandy we are using this fork, this isn&#39;t available in the AUR, so you need to install it manually:&lt;/p&gt; &#xA; &lt;p&gt;First install all the dependencies required to build the compositor:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -S libconfig libev libxdg-basedir pcre pixman xcb-util-image xcb-util-renderutil hicolor-icon-theme libglvnd libx11 libxcb libxext libdbus asciidoc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then do the following:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Downloads&#xA;git clone https://github.com/pijulius/picom.git&#xA;cd picom/&#xA;meson --buildtype=release . build --prefix=/usr -Dwith_docs=true&#xA;sudo ninja -C build install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Add your user to the ADM Group and start the following services:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo usermod -aG adm $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Start the system76-power service:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl enable --now com.system76.PowerDaemon&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Bluetooth:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl enable bluetooth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;With that, we have all the dependencies. We can move to the next part.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;2. Installing GTK Theme:&lt;/b&gt;&lt;/summary&gt; To match with the current colorscheme, we are using the &#xA; &lt;a href=&#34;https://github.com/Fausto-Korpsvart/Tokyo-Night-GTK-Theme&#34;&gt;Tokyo Night GTK Theme&lt;/a&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Downloads&#xA;git clone https://github.com/Fausto-Korpsvart/Tokyo-Night-GTK-Theme.git&#xA;cd Tokyo-Night-GTK-Theme/&#xA;mv themes/Tokyonight-Dark-BL /usr/share/themes/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;And that&#39;s it!&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;3. Installing Dotfiles:&lt;/b&gt;&lt;/summary&gt; The step we all have been waiting for. &#xA; &lt;p&gt;Clone them and install:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Downloads&#xA;git clone https://github.com/syndrizzle/hotfiles.git -b bspwm&#xA;cd hotfiles&#xA;cp -r .config .scripts .local .cache .wallpapers ~/&#xA;sudo cp -r usr/ /usr/&#xA;cp .xinitrc .gtkrc-2.0 ~/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Install Fonts: Assuming you are already in the &lt;code&gt;hotfiles&lt;/code&gt; folder&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd .fonts&#xA;mv * /usr/share/fonts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Move &lt;code&gt;slim.conf&lt;/code&gt; and &lt;code&gt;environment&lt;/code&gt; to it&#39;s location: Again assuming you are in the &lt;code&gt;hotfiles&lt;/code&gt; folder&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd etc/&#xA;mv slim.conf environment /etc/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Move items in &lt;code&gt;usr&lt;/code&gt; folder to their respective places:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mv usr/ /usr/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The usr folder contains the cursor theme and some executable scripts.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Miscllaneous:&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Spicetify Theme: &lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Since we copied the dotfiles, we can apply the spicetify theme now. First, install spicetify using:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S spicetify-cli-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then, we need to give read and write access to our spotify folder for modifications:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo chmod a+wr /opt/spotify&#xA;sudo chmod a+wr /opt/spotify/Apps -R&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;After that we just need to run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;spicetify config current_theme Ziro&#xA;spicetify config color_scheme tokyonight&#xA;spicetify config extensions adblock.js&#xA;spicetify backup apply&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This would install the spicetify theme to your Spotify.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Visual Studio Code Theme: &lt;/b&gt;&lt;/summary&gt; To get a consistent look for visual studio code, you can install the &#xA; &lt;b&gt;Tokyo Night&lt;/b&gt; Theme from the visual studio code marketplace. &#xA; &lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night&#34;&gt;Click Here to access the theme link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Gallery:&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/EMuaeIv.png&#34; width=&#34;1200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;The Desktop&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/9bwXOCm.png&#34; width=&#34;1200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;The Main Dashboard&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/Zge2jbI.png&#34; width=&#34;1200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Spotify&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/n0oeBYP.png&#34; width=&#34;1200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;A much better look at the desktop :)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/arsPP2Q.png&#34; width=&#34;1200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Lock Screen using i3lock&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/avM80Pj.png&#34; width=&#34;1200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Login Screen using SLiM&lt;/h3&gt; &#xA;&lt;h3&gt;More Fluff!&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/s6mMGNJ.gif&#34; width=&#34;1000&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Polybar with all the important information, visible to you when you need it!&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/Ks0Us60.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;A beautiful notification center created with aesthetics and usability in mind.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/jC4JMF4.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;A system menu with a lot of configuration available at your fingertips!&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://i.imgur.com/zx9Ch7p.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;An eww based music player popup to control your music, get synced lyrics, and even a visualizer!&lt;/h3&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tips:&lt;/h2&gt; &#xA;&lt;h3&gt;1. Enable touchpad Tap-to-click:&lt;/h3&gt; &#xA;&lt;p&gt;If you are a laptop user, you might want to enable tap to click so that it gets easier to navigate using a touchpad. It is pretty easy to do so! Copy and paste this one command in your terminal to fly!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mkdir -p /etc/X11/xorg.conf.d &amp;amp;&amp;amp; sudo tee &amp;lt;&amp;lt;&#39;EOF&#39; /etc/X11/xorg.conf.d/90-touchpad.conf 1&amp;gt; /dev/null&#xA;Section &#34;InputClass&#34;&#xA;        Identifier &#34;touchpad&#34;&#xA;        MatchIsTouchpad &#34;on&#34;&#xA;        Driver &#34;libinput&#34;&#xA;        Option &#34;Tapping&#34; &#34;on&#34;&#xA;EndSection&#xA;&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Enable GitHub Notification count.&lt;/h3&gt; &#xA;&lt;p&gt;If you are a GitHub user, you can get a notification count on your main bar. For this you will need a &lt;strong&gt;GitHub Personal Access Token&lt;/strong&gt; in order to authenticate yourself with the API. &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;Follow this guide for obtaining the Personal Access Token&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you just need to append the token to your polybar script using your preferred text editor, in this case we are using &lt;code&gt;nano&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nano ~/.config/polybar/scripts/github&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, replace &lt;code&gt;Your_Username&lt;/code&gt; in the &lt;code&gt;USER&lt;/code&gt; field with your GitHub username. And then replace &lt;code&gt;Your_PAT&lt;/code&gt; in the &lt;code&gt;TOKEN&lt;/code&gt; field with your Personal Access Token.&lt;/p&gt; &#xA;&lt;h3&gt;3. Get your directories.&lt;/h3&gt; &#xA;&lt;p&gt;If there are no default directories when you do &lt;code&gt;dir&lt;/code&gt; or &lt;code&gt;ls&lt;/code&gt;, you might just have to manually create them. Just install &lt;code&gt;xdg-user-dirs&lt;/code&gt; and run the command, then reboot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xdg-user-dirs-update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Turn on lock screen when you need it.&lt;/h3&gt; &#xA;&lt;p&gt;Since we are using xfce4-power-manager, we might want to make it toggle the lock screen when the laptop lid is closed, or if the laptop is just idle. To do this we can use &lt;code&gt;xfconf-query&lt;/code&gt; to set the command that needs to manually toggle our lockscreen,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xfconf-query -c xfce4-session -p /general/LockCommand -s &#34;$HOME/.scripts/lock-run&#34; --create -t string&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support:&lt;/h2&gt; &#xA;&lt;p&gt;You can always show your support towards these rices by donating me, as this takes a lot of time and hardwork, thank you for everything!&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Ko-Fi:&lt;/b&gt; &lt;br&gt; &lt;a href=&#34;https://ko-fi.com/A0A8DKCLY&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Librepay:&lt;/b&gt; &lt;br&gt; &lt;a href=&#34;https://liberapay.com/syndrizzle/donate&#34;&gt;&lt;img alt=&#34;Donate using Liberapay&#34; src=&#34;https://liberapay.com/assets/widgets/donate.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;h4&gt;Thanks to:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rxyhn&#34;&gt;rxyhn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pagankeymaster&#34;&gt;pagankeymaster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/beyond9thousand&#34;&gt;beyond9thousand&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siduck&#34;&gt;siduck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/janleigh&#34;&gt;kizu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All the members of r/unixporn community and the discord server!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;The wallpapers have been taken from &lt;a href=&#34;https://wallhaven.cc&#34;&gt;Wallhaven&lt;/a&gt;, &lt;a href=&#34;https://pexels.com&#34;&gt;pexels&lt;/a&gt; and the &lt;a href=&#34;https://github.com/Fausto-Korpsvart/Tokyo-Night-GTK-Theme/tree/master/wallpapers&#34;&gt;tokyo night gtk theme repository&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The icons are from &lt;a href=&#34;https://icons8.com&#34;&gt;icons8&lt;/a&gt;, &lt;a href=&#34;https://flaticon.com&#34;&gt;flaticon&lt;/a&gt;, &lt;a href=&#34;https://materialdesignicons.com&#34;&gt;materialdesignicons&lt;/a&gt;, &lt;a href=&#34;https://icomoon.io&#34;&gt;IcoMoon&lt;/a&gt;, &lt;a href=&#34;https://feathericons.com/&#34;&gt;feather-icons&lt;/a&gt; and &lt;a href=&#34;https://www.nerdfonts.com&#34;&gt;Nerd Fonts&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Conky theme was taken from &lt;a href=&#34;https://github.com/closebox73/Scorpio&#34;&gt;closebox73&#39;s Scorpio&lt;/a&gt; conky themes pack, named &#34;Auva&#34;. It was modified to match the color scheme.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;That&#39;s it! Have a nice day!&lt;/b&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linux-surface/linux-surface</title>
    <updated>2022-07-03T02:22:45Z</updated>
    <id>tag:github.com,2022-07-03:/linux-surface/linux-surface</id>
    <link href="https://github.com/linux-surface/linux-surface" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux Kernel for Surface Devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux Surface&lt;/h1&gt; &#xA;&lt;p&gt;Linux running on the Microsoft Surface devices. Follow the instructions below to install the latest kernel.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Devices&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Surface Book&lt;/li&gt; &#xA; &lt;li&gt;Surface Book 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Book 3&lt;/li&gt; &#xA; &lt;li&gt;Surface 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Go&lt;/li&gt; &#xA; &lt;li&gt;Surface Go 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Go 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 2&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop 4&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop Go&lt;/li&gt; &#xA; &lt;li&gt;Surface Laptop Studio&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 3&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 4&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro (5th Gen) / Surface Pro 2017&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 6&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 7&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 7+&lt;/li&gt; &#xA; &lt;li&gt;Surface Pro 8&lt;/li&gt; &#xA; &lt;li&gt;Surface Studio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Features / What&#39;s Working&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Supported-Devices-and-Features#feature-matrix&#34;&gt;feature matrix&lt;/a&gt; for more information about each device.&lt;/p&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For the most part, things are tested on a Surface Book 2. While most things are reportedly fully working on other devices, your mileage may vary. Please look at the issues list for possible exceptions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and Setup&lt;/h2&gt; &#xA;&lt;p&gt;We provide package repositories for the patched kernel and other utilities. Please refer to the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup&#34;&gt;detailed installation and setup guide&lt;/a&gt;. There, you may also find device-specific caveats. After installation, you may want to have a look at the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki&#34;&gt;wiki&lt;/a&gt; and the &lt;code&gt;contrib/&lt;/code&gt; directory for useful tweaks.&lt;/p&gt; &#xA;&lt;p&gt;If you want to compile the kernel yourself (e.g. if your distribution is not supported), please have a look at the &lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Compiling-the-Kernel-from-Source&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Information&lt;/h2&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are getting stuck at boot when loading the ramdisk, you need to install the Processor Microcode Firmware for Intel CPUs (usually found under Additional Drivers in Software and Updates).&lt;/li&gt; &#xA; &lt;li&gt;Using TLP can cause slowdowns, laggy performance, and occasional hangs if not configured properly! You have been warned.&lt;/li&gt; &#xA; &lt;li&gt;If you want to use hibernate instead of suspend, you need to create a swap partition or file, please follow your distribution&#39;s instructions (or &lt;a href=&#34;https://fitzcarraldoblog.wordpress.com/2018/07/14/configuring-lubuntu-18-04-to-enable-hibernation-using-a-swap-file&#34;&gt;here&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;If you have questions or need support, please join our &lt;a href=&#34;https://matrix.to/#/#linux-surface:matrix.org&#34;&gt;Matrix Space&lt;/a&gt;! This space contains&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://matrix.to/#/#linux-surface-support:matrix.org&#34;&gt;support channel&lt;/a&gt; for general support and&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://matrix.to/#/#linux-surface-development:matrix.org&#34;&gt;development channel&lt;/a&gt; for all development related questions and discussions. If you prefer IRC, you can also join in via our channel at &lt;a href=&#34;https://web.libera.chat/#linux-surface&#34;&gt;&lt;code&gt;libera.chat/#linux-surface&lt;/code&gt;&lt;/a&gt;, to which the matrix room is bridged to.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains patches, which are either derivative work targeting a specific already licensed source, i.e. parts of the Linux kernel, or introduce new parts to the Linux kernel. These patches fall thus, if not explicitly stated otherwise, under the license of the source they are targeting, or if they introduce new code, the license they explicitly specify inside of the patch. Please refer to the specific patch and source in question for further information. License texts can be obtained at &lt;a href=&#34;https://github.com/torvalds/linux/tree/master/LICENSES&#34;&gt;https://github.com/torvalds/linux/tree/master/LICENSES&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>