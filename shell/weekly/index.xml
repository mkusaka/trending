<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-18T02:02:21Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>docker-library/official-images</title>
    <updated>2023-06-18T02:02:21Z</updated>
    <id>tag:github.com,2023-06-18:/docker-library/official-images</id>
    <link href="https://github.com/docker-library/official-images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Primary source of truth for the Docker &#34;Official Images&#34; program&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker Official Images&lt;/h1&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- AUTOGENERATED TOC --&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#docker-official-images&#34;&gt;Docker Official Images&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#what-are-official-images&#34;&gt;What are &#34;Official Images&#34;?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#architectures-other-than-amd64&#34;&gt;Architectures other than amd64?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#more-faqs&#34;&gt;More FAQs?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#contributing-to-the-standard-library&#34;&gt;Contributing to the standard library&lt;/a&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#review-guidelines&#34;&gt;Review Guidelines&lt;/a&gt; &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#maintainership&#34;&gt;Maintainership&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#repeatability&#34;&gt;Repeatability&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#consistency&#34;&gt;Consistency&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#clarity&#34;&gt;Clarity&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#init&#34;&gt;init&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#cacheability&#34;&gt;Cacheability&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#security&#34;&gt;Security&lt;/a&gt; &#xA;        &lt;ol&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#image-build&#34;&gt;Image Build&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#runtime-configuration&#34;&gt;Runtime Configuration&lt;/a&gt;&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#security-releases&#34;&gt;Security Releases&lt;/a&gt;&lt;/li&gt; &#xA;        &lt;/ol&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#multiple-architectures&#34;&gt;Multiple Architectures&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#commitment&#34;&gt;Commitment&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#library-definition-files&#34;&gt;Library definition files&lt;/a&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#filenames&#34;&gt;Filenames&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#tags-and-aliases&#34;&gt;Tags and aliases&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#instruction-format&#34;&gt;Instruction format&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#creating-a-new-repository&#34;&gt;Creating a new repository&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#adding-a-new-tag-in-an-existing-repository-that-youre-the-maintainer-of&#34;&gt;Adding a new tag in an existing repository (that you&#39;re the maintainer of)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#change-to-a-tag-in-an-existing-repository-that-youre-the-maintainer-of&#34;&gt;Change to a tag in an existing repository (that you&#39;re the maintainer of)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#bashbrew&#34;&gt;Bashbrew&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!-- AUTOGENERATED TOC --&gt; &#xA;&lt;h2&gt;What are &#34;Official Images&#34;?&lt;/h2&gt; &#xA;&lt;p&gt;The Docker Official Images are curated images &lt;a href=&#34;https://hub.docker.com/u/library&#34;&gt;hosted on Docker Hub&lt;/a&gt;. The main tenets are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Focus on &lt;a href=&#34;https://www.debian.org/social_contract#guidelines&#34;&gt;Free&lt;/a&gt; and &lt;a href=&#34;https://opensource.org/&#34;&gt;Open-Source&lt;/a&gt; Software&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#architectures-other-than-amd64&#34;&gt;multiple architectures&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Exemplify &lt;a href=&#34;https://docs.docker.com/develop/develop-images/dockerfile_best-practices/&#34;&gt;&lt;code&gt;Dockerfile&lt;/code&gt; best practices&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#library-definition-files&#34;&gt;Actively rebuild&lt;/a&gt; for updates and security fixes&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adhere to upstream recommendations&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add minimal quality-of-life behavior for the container environment where fit&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.docker.com/docker-hub/official_repos/&#34;&gt;Docker&#39;s documentation&lt;/a&gt; for a good high-level overview of the program.&lt;/p&gt; &#xA;&lt;p&gt;In essence we strive to heed upstream&#39;s recommendations on how they intend for their software to be consumed. Many images are maintained in collaboration with the relevant upstream project if not maintained directly by them. Additionally we aim to exemplify the best practices for Dockerfiles to serve as a reference when making or deriving your own images from them.&lt;/p&gt; &#xA;&lt;p&gt;(If you are a representative of an upstream for which there exists an image and you would like to get involved, please see the &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#maintainership&#34;&gt;Maintainership&lt;/a&gt; section below!)&lt;/p&gt; &#xA;&lt;h2&gt;Architectures other than amd64?&lt;/h2&gt; &#xA;&lt;p&gt;Some images have been ported for other architectures, and many of these are officially supported (to various degrees).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Architectures officially supported by Docker, Inc. for running Docker: (see &lt;a href=&#34;https://download.docker.com/linux/&#34;&gt;download.docker.com&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ARMv6 32-bit (&lt;code&gt;arm32v6&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/arm32v6/&#34;&gt;https://hub.docker.com/u/arm32v6/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;ARMv7 32-bit (&lt;code&gt;arm32v7&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/arm32v7/&#34;&gt;https://hub.docker.com/u/arm32v7/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;ARMv8 64-bit (&lt;code&gt;arm64v8&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/arm64v8/&#34;&gt;https://hub.docker.com/u/arm64v8/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Linux x86-64 (&lt;code&gt;amd64&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/amd64/&#34;&gt;https://hub.docker.com/u/amd64/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows x86-64 (&lt;code&gt;windows-amd64&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/winamd64/&#34;&gt;https://hub.docker.com/u/winamd64/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other architectures built by official images: (but &lt;em&gt;not&lt;/em&gt; officially supported by Docker, Inc.) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ARMv5 32-bit (&lt;code&gt;arm32v5&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/arm32v5/&#34;&gt;https://hub.docker.com/u/arm32v5/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;IBM POWER8 (&lt;code&gt;ppc64le&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/ppc64le/&#34;&gt;https://hub.docker.com/u/ppc64le/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;IBM z Systems (&lt;code&gt;s390x&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/s390x/&#34;&gt;https://hub.docker.com/u/s390x/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;MIPS64 LE (&lt;code&gt;mips64le&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/mips64le/&#34;&gt;https://hub.docker.com/u/mips64le/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;RISC-V 64-bit (&lt;code&gt;riscv64&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/riscv64/&#34;&gt;https://hub.docker.com/u/riscv64/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;x86/i686 (&lt;code&gt;i386&lt;/code&gt;): &lt;a href=&#34;https://hub.docker.com/u/i386/&#34;&gt;https://hub.docker.com/u/i386/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As of 2017-09-12, these other architectures are included under the non-prefixed images via &lt;a href=&#34;https://docs.docker.com/registry/spec/manifest-v2-2/#manifest-list&#34;&gt;&#34;manifest lists&#34;&lt;/a&gt; (also known as &lt;a href=&#34;https://github.com/opencontainers/image-spec/raw/v1.0.0/image-index.md&#34;&gt;&#34;indexes&#34; in the OCI image specification&lt;/a&gt;), such that, for example, &lt;code&gt;docker run hello-world&lt;/code&gt; should run as-is on all supported platforms.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re curious about how these are built, head over to &lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/&#34;&gt;https://doi-janky.infosiftr.net/job/multiarch/&lt;/a&gt; to see the build scaffolding.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#multiple-architectures&#34;&gt;multi-arch section&lt;/a&gt; below for recommendations in adding more architectures to an official image.&lt;/p&gt; &#xA;&lt;h2&gt;More FAQs?&lt;/h2&gt; &#xA;&lt;p&gt;Yes! We have &lt;a href=&#34;https://github.com/docker-library/faq&#34;&gt;a dedicated FAQ repository&lt;/a&gt; where we try to collect other common questions (both about the program and about our practices).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to the standard library&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in the Docker official images project! We strive to make these instructions as simple and straightforward as possible, but if you find yourself lost, don&#39;t hesitate to seek us out on &lt;a href=&#34;https://libera.chat&#34;&gt;Libera.Chat IRC&lt;/a&gt; in channel &lt;code&gt;#docker-library&lt;/code&gt; or by creating a GitHub issue here.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to familiarize yourself with &lt;a href=&#34;https://docs.docker.com/docker-hub/official_repos/&#34;&gt;Official Repositories on Docker Hub&lt;/a&gt; and the &lt;a href=&#34;https://docs.docker.com/articles/dockerfile_best-practices/&#34;&gt;Best practices for writing Dockerfiles&lt;/a&gt; in the Docker documentation. These will be the foundation of the review process performed by the official images maintainers. If you&#39;d like the review process to go more smoothly, please ensure that your &lt;code&gt;Dockerfile&lt;/code&gt;s adhere to all the points mentioned there, as well as &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/README.md#review-guidelines&#34;&gt;below&lt;/a&gt;, before submitting a pull request.&lt;/p&gt; &#xA;&lt;p&gt;Also, the Hub descriptions for these images are currently stored separately in the &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;&lt;code&gt;docker-library/docs&lt;/code&gt; repository&lt;/a&gt;, whose &lt;a href=&#34;https://github.com/docker-library/docs/raw/master/README.md&#34;&gt;&lt;code&gt;README.md&lt;/code&gt; file&lt;/a&gt; explains more about how it&#39;s structured and how to contribute to it. Please be prepared to submit a PR there as well, pending acceptance of your image here.&lt;/p&gt; &#xA;&lt;h3&gt;Review Guidelines&lt;/h3&gt; &#xA;&lt;p&gt;Because the official images are intended to be learning tools for those new to Docker as well as the base images for advanced users to build their production releases, we review each proposed &lt;code&gt;Dockerfile&lt;/code&gt; to ensure that it meets a minimum standard for quality and maintainability. While some of that standard is hard to define (due to subjectivity), as much as possible is defined here, while also adhering to the &#34;Best Practices&#34; where appropriate.&lt;/p&gt; &#xA;&lt;p&gt;A checklist which may be used by the maintainers during review can be found in &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/NEW-IMAGE-CHECKLIST.md&#34;&gt;&lt;code&gt;NEW-IMAGE-CHECKLIST.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Maintainership&lt;/h4&gt; &#xA;&lt;p&gt;Version bumps and security fixes should be attended to in a timely manner.&lt;/p&gt; &#xA;&lt;p&gt;If you do not represent upstream and upstream becomes interested in maintaining the image, steps should be taken to ensure a smooth transition of image maintainership over to upstream.&lt;/p&gt; &#xA;&lt;p&gt;For upstreams interested in taking over maintainership of an existing repository, the first step is to get involved in the existing repository. Making comments on issues, proposing changes, and making yourself known within the &#34;image community&#34; (even if that &#34;community&#34; is just the current maintainer) are all important places to start to ensure that the transition is unsurprising to existing contributors and users.&lt;/p&gt; &#xA;&lt;p&gt;When taking over an existing repository, please ensure that the entire Git history of the original repository is kept in the new upstream-maintained repository to make sure the review process isn&#39;t stalled during the transition. This is most easily accomplished by forking the new from the existing repository, but can also be accomplished by fetching the commits directly from the original and pushing them into the new repo (ie, &lt;code&gt;git fetch https://github.com/jsmith/example.git master&lt;/code&gt;, &lt;code&gt;git rebase FETCH_HEAD&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;). On GitHub, an alternative is to move ownership of the git repository. This can be accomplished without giving either group admin access to the other owner&#39;s repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;create temporary intermediary organization &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library-transitioner&#34;&gt;docker-library-transitioner&lt;/a&gt; is available for this purpose if you would like our help&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;give old and new owners admin access to intermediary organization&lt;/li&gt; &#xA; &lt;li&gt;old owner transfers repo ownership to intermediary organization&lt;/li&gt; &#xA; &lt;li&gt;new owner transfers repo ownership to its new home &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;recommend that old owner does not fork new repo back into the old organization to ensure that GitHub redirects will just work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Repeatability&lt;/h4&gt; &#xA;&lt;p&gt;Rebuilding the same &lt;code&gt;Dockerfile&lt;/code&gt; should result in the same version of the image being packaged, even if the second build happens several versions later, or the build should fail outright, such that an inadvertent rebuild of a &lt;code&gt;Dockerfile&lt;/code&gt; tagged as &lt;code&gt;0.1.0&lt;/code&gt; doesn&#39;t end up containing &lt;code&gt;0.2.3&lt;/code&gt;. For example, if using &lt;code&gt;apt&lt;/code&gt; to install the main program for the image, be sure to pin it to a specific version (ex: &lt;code&gt;... apt-get install -y my-package=0.1.0 ...&lt;/code&gt;). For dependent packages installed by &lt;code&gt;apt&lt;/code&gt; there is not usually a need to pin them to a version.&lt;/p&gt; &#xA;&lt;p&gt;No official images can be derived from, or depend on, non-official images (allowing the non-image &lt;a href=&#34;https://hub.docker.com/_/scratch/&#34;&gt;&lt;code&gt;scratch&lt;/code&gt;&lt;/a&gt; and the intentionally limited exceptions pinned in &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/.external-pins&#34;&gt;&lt;code&gt;.external-pins&lt;/code&gt;&lt;/a&gt; -- see also &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/.external-pins/list.sh&#34;&gt;&lt;code&gt;.external-pins/list.sh&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Consistency&lt;/h4&gt; &#xA;&lt;p&gt;All official images should provide a consistent interface. A beginning user should be able to &lt;code&gt;docker run official-image bash&lt;/code&gt; (or &lt;code&gt;sh&lt;/code&gt;) without needing to learn about &lt;code&gt;--entrypoint&lt;/code&gt;. It is also nice for advanced users to take advantage of entrypoint, so that they can &lt;code&gt;docker run official-image --arg1 --arg2&lt;/code&gt; without having to specify the binary to execute.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If the startup process does not need arguments, just use &lt;code&gt;CMD&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;CMD [&#34;irb&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If there is initialization that needs to be done on start, like creating the initial database, use an &lt;code&gt;ENTRYPOINT&lt;/code&gt; along with &lt;code&gt;CMD&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;ENTRYPOINT [&#34;/docker-entrypoint.sh&#34;]&#xA;CMD [&#34;postgres&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Ensure that &lt;code&gt;docker run official-image bash&lt;/code&gt; (or &lt;code&gt;sh&lt;/code&gt;) works too. The easiest way is to check for the expected command and if it is something else, just &lt;code&gt;exec &#34;$@&#34;&lt;/code&gt; (run whatever was passed, properly keeping the arguments escaped).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh&#xA;set -e&#xA;&#xA;# this if will check if the first argument is a flag&#xA;# but only works if all arguments require a hyphenated flag&#xA;# -v; -SL; -f arg; etc will work, but not arg1 arg2&#xA;if [ &#34;$#&#34; -eq 0 ] || [ &#34;${1#-}&#34; != &#34;$1&#34; ]; then&#xA;    set -- mongod &#34;$@&#34;&#xA;fi&#xA;&#xA;# check for the expected command&#xA;if [ &#34;$1&#34; = &#39;mongod&#39; ]; then&#xA;    # init db stuff....&#xA;    # use gosu (or su-exec) to drop to a non-root user&#xA;    exec gosu mongod &#34;$@&#34;&#xA;fi&#xA;&#xA;# else default to run whatever the user wanted like &#34;bash&#34; or &#34;sh&#34;&#xA;exec &#34;$@&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the image only contains the main executable and its linked libraries (ie no shell) then it is fine to use the executable as the &lt;code&gt;ENTRYPOINT&lt;/code&gt;, since that is the only thing that can run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;ENTRYPOINT [&#34;fully-static-binary&#34;]&#xA;CMD [&#34;--help&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The most common indicator of whether this is appropriate is that the image &lt;code&gt;Dockerfile&lt;/code&gt; starts with &lt;a href=&#34;https://registry.hub.docker.com/_/scratch/&#34;&gt;&lt;code&gt;scratch&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;FROM scratch&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Clarity&lt;/h4&gt; &#xA;&lt;p&gt;Try to make the &lt;code&gt;Dockerfile&lt;/code&gt; easy to understand/read. It may be tempting, for the sake of brevity, to put complicated initialization details into a standalone script and merely add a &lt;code&gt;RUN&lt;/code&gt; command in the &lt;code&gt;Dockerfile&lt;/code&gt;. However, this causes the resulting &lt;code&gt;Dockerfile&lt;/code&gt; to be overly opaque, and such &lt;code&gt;Dockerfile&lt;/code&gt;s are unlikely to pass review. Instead, it is recommended to put all the commands for initialization into the &lt;code&gt;Dockerfile&lt;/code&gt; as appropriate &lt;code&gt;RUN&lt;/code&gt; or &lt;code&gt;ENV&lt;/code&gt; command combinations. To find good examples, look at the current official images.&lt;/p&gt; &#xA;&lt;p&gt;Some examples at the time of writing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/php/raw/b4aeb948e2e240c732d78890ff03285b16e8edda/5.6/Dockerfile&#34;&gt;php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/python/raw/3e5826ad0c6e29f07f6dc7ff8f30b4c54385d1bb/3.4/Dockerfile&#34;&gt;python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/ruby/raw/e34b201a0f0b49818fc8373f6a9148e13d546bdf/2.2/Dockerfile&#34;&gt;ruby:2.2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;init&lt;/h4&gt; &#xA;&lt;p&gt;Following the Docker guidelines it is highly recommended that the resulting image be just one concern per container; predominantly this means just one process per container, so there is no need for a full init system. There are two situations where an init-like process would be helpful for the container. The first being signal handling. If the process launched does not handle &lt;code&gt;SIGTERM&lt;/code&gt; by exiting, it will not be killed since it is PID 1 in the container (see &#34;NOTE&#34; at the end of the &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#foreground&#34;&gt;Foreground section&lt;/a&gt; in the docker docs). The second situation would be zombie reaping. If the process spawns child processes and does not properly reap them it will lead to a full process table, which can prevent the whole system from spawning any new processes. For both of these concerns we recommend &lt;a href=&#34;https://github.com/krallin/tini&#34;&gt;tini&lt;/a&gt;. It is incredibly small, has minimal external dependencies, fills each of these roles, and does only the necessary parts of reaping and signal forwarding.&lt;/p&gt; &#xA;&lt;p&gt;Be sure to use tini in &lt;code&gt;CMD&lt;/code&gt; or &lt;code&gt;ENTRYPOINT&lt;/code&gt; as appropriate.&lt;/p&gt; &#xA;&lt;p&gt;It is best to install tini from a distribution-provided package (ex. &lt;code&gt;apt-get install tini&lt;/code&gt;). If tini is not available in your distribution or is too old, here is a snippet of a &lt;code&gt;Dockerfile&lt;/code&gt; to add in tini:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;# Install tini for signal processing and zombie killing&#xA;ENV TINI_VERSION v0.18.0&#xA;ENV TINI_SIGN_KEY 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7&#xA;RUN set -eux; \&#xA;  wget -O /usr/local/bin/tini &#34;https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini&#34;; \&#xA;  wget -O /usr/local/bin/tini.asc &#34;https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc&#34;; \&#xA;  export GNUPGHOME=&#34;$(mktemp -d)&#34;; \&#xA;  gpg --batch --keyserver keyserver.ubuntu.com --recv-keys &#34;$TINI_SIGN_KEY&#34;; \&#xA;  gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini; \&#xA;  command -v gpgconf &amp;amp;&amp;amp; gpgconf --kill all || :; \&#xA;  rm -r &#34;$GNUPGHOME&#34; /usr/local/bin/tini.asc; \&#xA;  chmod +x /usr/local/bin/tini; \&#xA;  tini --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Cacheability&lt;/h4&gt; &#xA;&lt;p&gt;This is one place that experience ends up trumping documentation for the path to enlightenment, but the following tips might help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Avoid &lt;code&gt;COPY&lt;/code&gt;/&lt;code&gt;ADD&lt;/code&gt; whenever possible, but when necessary, be as specific as possible (ie, &lt;code&gt;COPY one-file.sh /somewhere/&lt;/code&gt; instead of &lt;code&gt;COPY . /somewhere&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;The reason for this is that the cache for &lt;code&gt;COPY&lt;/code&gt; instructions considers file &lt;code&gt;mtime&lt;/code&gt; changes to be a cache bust, which can make the cache behavior of &lt;code&gt;COPY&lt;/code&gt; unpredictable sometimes, especially when &lt;code&gt;.git&lt;/code&gt; is part of what needs to be &lt;code&gt;COPY&lt;/code&gt;ed (for example).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure that lines which are less likely to change come before lines that are more likely to change (with the caveat that each line should generate an image that still runs successfully without assumptions of later lines).&lt;/p&gt; &lt;p&gt;For example, the line that contains the software version number (&lt;code&gt;ENV MYSOFTWARE_VERSION 4.2&lt;/code&gt;) should come after a line that sets up the APT repository &lt;code&gt;.list&lt;/code&gt; file (&lt;code&gt;RUN echo &#39;deb http://example.com/mysoftware/debian some-suite main&#39; &amp;gt; /etc/apt/sources.list.d/mysoftware.list&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Security&lt;/h4&gt; &#xA;&lt;h5&gt;Image Build&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; should be written to help mitigate interception attacks during build. Our requirements focus on three main objectives: verifying the source, verifying author, and verifying the content; these are respectively accomplished by the following: using https where possible; importing PGP keys with the full fingerprint in the &lt;code&gt;Dockerfile&lt;/code&gt; to check signatures; embedding checksums directly in the &lt;code&gt;Dockerfile&lt;/code&gt;. All three should be used when possible. Just https and embedded checksum can be used when no signature is published. As a last resort, just an embedded checksum is acceptable if the site doesn&#39;t have https available and no signature.&lt;/p&gt; &#xA;&lt;p&gt;The purpose in recommending the use of https for downloading needed artifacts is that it ensures that the download is from a trusted source which also happens to make interception much more difficult.&lt;/p&gt; &#xA;&lt;p&gt;The purpose in recommending PGP signature verification is to ensure that only an authorized user published the given artifact. When importing PGP keys, please use the &lt;a href=&#34;https://keys.openpgp.org/about&#34;&gt;the &lt;code&gt;keys.openpgp.org&lt;/code&gt; service&lt;/a&gt; when possible (preferring &lt;code&gt;keyserver.ubuntu.com&lt;/code&gt; otherwise). See also the FAQ section on &lt;a href=&#34;https://github.com/docker-library/faq/#openpgp--gnupg-keys-and-verification&#34;&gt;keys and verification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The purpose in recommending checksum verification is to verify that the artifact is as expected. This ensures that when remote content changes, the Dockerfile also will change and provide a natural &lt;code&gt;docker build&lt;/code&gt; cache bust. As a bonus, this also prevents accidentally downloading newer-than-expected artifacts on poorly versioned files.&lt;/p&gt; &#xA;&lt;p&gt;Below are some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Preferred&lt;/strong&gt;: &lt;em&gt;download over https, PGP key full fingerprint import and &lt;code&gt;asc&lt;/code&gt; verification, embedded checksum verified.&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;ENV PYTHON_DOWNLOAD_SHA512 (sha512-value-here)&#xA;RUN set -eux; \&#xA;    curl -fL &#34;https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz&#34; -o python.tar.xz; \&#xA;    curl -fL &#34;https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc&#34; -o python.tar.xz.asc; \&#xA;    export GNUPGHOME=&#34;$(mktemp -d)&#34;; \&#xA;# gpg: key F73C700D: public key &#34;Larry Hastings &amp;lt;larry@hastings.org&amp;gt;&#34; imported&#xA;    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D; \&#xA;    gpg --batch --verify python.tar.xz.asc python.tar.xz; \&#xA;    rm -r &#34;$GNUPGHOME&#34; python.tar.xz.asc; \&#xA;    echo &#34;$PYTHON_DOWNLOAD_SHA512 *python.tar.xz&#34; | sha512sum --strict --check; \&#xA;    # install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alternate&lt;/strong&gt;: &lt;em&gt;full key fingerprint imported to apt which will check signatures and checksums when packages are downloaded and installed.&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;RUN set -eux; \&#xA;    key=&#39;A4A9406876FCBD3C456770C88C718D3B5072E1F5&#39;; \&#xA;    export GNUPGHOME=&#34;$(mktemp -d)&#34;; \&#xA;    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys &#34;$key&#34;; \&#xA;    gpg --batch --armor --export &#34;$key&#34; &amp;gt; /etc/apt/trusted.gpg.d/mysql.gpg.asc; \&#xA;    gpgconf --kill all; \&#xA;    rm -rf &#34;$GNUPGHOME&#34;; \&#xA;    apt-key list &amp;gt; /dev/null&#xA;&#xA;RUN set -eux; \&#xA;    echo &#34;deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}&#34; &amp;gt; /etc/apt/sources.list.d/mysql.list; \&#xA;    apt-get update; \&#xA;    apt-get install -y mysql-community-client=&#34;${MYSQL_VERSION}&#34; mysql-community-server-core=&#34;${MYSQL_VERSION}&#34;; \&#xA;    rm -rf /var/lib/apt/lists/*; \&#xA;    # ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(As a side note, &lt;code&gt;rm -rf /var/lib/apt/lists/*&lt;/code&gt; is &lt;em&gt;roughly&lt;/em&gt; the opposite of &lt;code&gt;apt-get update&lt;/code&gt; -- it ensures that the layer doesn&#39;t include the extra ~8MB of APT package list data, and enforces &lt;a href=&#34;https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#apt-get&#34;&gt;appropriate &lt;code&gt;apt-get update&lt;/code&gt; usage&lt;/a&gt;.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Less Secure Alternate&lt;/strong&gt;: &lt;em&gt;embed the checksum into the &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;ENV RUBY_DOWNLOAD_SHA256 (sha256-value-here)&#xA;RUN set -eux; \&#xA;    curl -fL -o ruby.tar.gz &#34;https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz&#34;; \&#xA;    echo &#34;$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz&#34; | sha256sum --strict --check; \&#xA;    # install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the use of either SHA1 or MD5 should be considered a &#34;checksum of last resort&#34; as both are considered generally unsafe:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://marc-stevens.nl/research/md5-1block-collision/&#34;&gt;&#34;Single-block collision for MD5&#34; from 2012&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html&#34;&gt;&#34;Announcing the first SHA1 collision&#34; from 2017&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unacceptable&lt;/strong&gt;: &lt;em&gt;download the file over http(s) with no verification.&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;RUN curl -fL &#34;https://julialang.s3.amazonaws.com/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz&#34; | tar ... \&#xA;    # install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Runtime Configuration&lt;/h5&gt; &#xA;&lt;p&gt;By default, Docker containers are executed with reduced privileges: whitelisted Linux capabilities, Control Groups, and a default Seccomp profile (1.10+ w/ host support). Software running in a container may require additional privileges in order to function correctly, and there are a number of command line options to customize container execution. See &lt;a href=&#34;https://docs.docker.com/engine/reference/run/&#34;&gt;&lt;code&gt;docker run&lt;/code&gt; Reference&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/engine/security/seccomp/&#34;&gt;Seccomp for Docker&lt;/a&gt; for reference.&lt;/p&gt; &#xA;&lt;p&gt;Official Repositories that require additional privileges should specify the minimal set of command line options for the software to function, and may still be rejected if this introduces significant portability or security issues. In general, &lt;code&gt;--privileged&lt;/code&gt; is not allowed, but a combination of &lt;code&gt;--cap-add&lt;/code&gt; and &lt;code&gt;--device&lt;/code&gt; options may be acceptable. Additionally, &lt;code&gt;--volume&lt;/code&gt; can be tricky as there are many host filesystem locations that introduce portability/security issues (e.g. X11 socket).&lt;/p&gt; &#xA;&lt;h5&gt;Security Releases&lt;/h5&gt; &#xA;&lt;p&gt;For image updates which constitute a security fix, there are a few things we recommend to help ensure your update is merged, built, and released as quickly as possible:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:doi@docker.com&#34;&gt;Send an email to &lt;code&gt;doi@docker.com&lt;/code&gt;&lt;/a&gt; a few (business) days in advance to give us a heads up and a timing estimate (so we can schedule time for the incoming update appropriately).&lt;/li&gt; &#xA; &lt;li&gt;Include &lt;code&gt;[security]&lt;/code&gt; in the title of your pull request (for example, &lt;code&gt;[security] Update FooBar to 1.2.5, 1.3.7, 2.0.1&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Keep the pull request free of changes that are unrelated to the security fix -- we&#39;ll still be doing review of the update, but it will be expedited so this will help us help you.&lt;/li&gt; &#xA; &lt;li&gt;Be active and responsive to comments on the pull request after it&#39;s opened (as usual, but even more so if the timing of the release is of importance).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Multiple Architectures&lt;/h4&gt; &#xA;&lt;p&gt;Each repo can specify multiple architectures for any and all tags. If no architecture is specified, images are built in Linux on &lt;code&gt;amd64&lt;/code&gt; (aka x86-64). To specify more or different architectures, use the &lt;code&gt;Architectures&lt;/code&gt; field (comma-delimited list, whitespace is trimmed). Valid architectures are found in &lt;a href=&#34;https://github.com/docker-library/bashbrew/raw/v0.1.2/architecture/oci-platform.go#L14-L27&#34;&gt;Bashbrew&#39;s &lt;code&gt;oci-platform.go&lt;/code&gt; file&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;amd64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arm32v6&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arm32v7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arm64v8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;i386&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mips64le&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ppc64le&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;riscv64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;s390x&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;windows-amd64&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;Architectures&lt;/code&gt; of any given tag must be a strict subset of the &lt;code&gt;Architectures&lt;/code&gt; of the tag it is &lt;code&gt;FROM&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Images must have a single &lt;code&gt;Dockerfile&lt;/code&gt; per entry in the library file that can be used for multiple architectures. This means that each supported architecture will have the same &lt;code&gt;FROM&lt;/code&gt; line (e.g. &lt;code&gt;FROM debian:buster&lt;/code&gt;). See &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/golang&#34;&gt;&lt;code&gt;golang&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/docker&#34;&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/haproxy&#34;&gt;&lt;code&gt;haproxy&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/php&#34;&gt;&lt;code&gt;php&lt;/code&gt;&lt;/a&gt; for examples of library files using one &lt;code&gt;Dockerfile&lt;/code&gt; per entry and see their respective git repos for example &lt;code&gt;Dockerfile&lt;/code&gt;s.&lt;/p&gt; &#xA;&lt;p&gt;If different parts of the Dockerfile only happen in one architecture or another, use control flow (e.g.&lt;code&gt;if&lt;/code&gt;/&lt;code&gt;case&lt;/code&gt;) along with &lt;code&gt;dpkg --print-architecture&lt;/code&gt; or &lt;code&gt;apk -print-arch&lt;/code&gt; to detect the userspace architecture. Only use &lt;code&gt;uname&lt;/code&gt; for architecture detection when more accurate tools cannot be installed. See &lt;a href=&#34;https://github.com/docker-library/golang/raw/b879b60a7d94128c8fb5aea763cf31772495511d/1.16/buster/Dockerfile#L24-L68&#34;&gt;golang&lt;/a&gt; for an example where some architectures require building binaries from the upstream source packages and some merely download the binary release.&lt;/p&gt; &#xA;&lt;p&gt;For base images like &lt;code&gt;debian&lt;/code&gt; it will be necessary to have a different &lt;code&gt;Dockerfile&lt;/code&gt; and build context in order to &lt;code&gt;ADD&lt;/code&gt; architecture specific binaries and this is a valid exception to the above. Since these images use the same &lt;code&gt;Tags&lt;/code&gt;, they need to be in the same entry. Use the architecture specific fields for &lt;code&gt;GitRepo&lt;/code&gt;, &lt;code&gt;GitFetch&lt;/code&gt;, &lt;code&gt;GitCommit&lt;/code&gt;, and &lt;code&gt;Directory&lt;/code&gt;, which are the architecture concatenated with hyphen (&lt;code&gt;-&lt;/code&gt;) and the field (e.g. &lt;code&gt;arm32v7-GitCommit&lt;/code&gt;). Any architecture that does not have an architecture-specific field will use the default field (e.g. no &lt;code&gt;arm32v7-Directory&lt;/code&gt; means &lt;code&gt;Directory&lt;/code&gt; will be used for &lt;code&gt;arm32v7&lt;/code&gt;). See the &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/debian&#34;&gt;&lt;code&gt;debian&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/ubuntu&#34;&gt;&lt;code&gt;ubuntu&lt;/code&gt;&lt;/a&gt; files in the library for examples. The following is an example for &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/hello-world&#34;&gt;&lt;code&gt;hello-world&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Maintainers: Tianon Gravi &amp;lt;admwiggin@gmail.com&amp;gt; (@tianon),&#xA;             Joseph Ferguson &amp;lt;yosifkit@gmail.com&amp;gt; (@yosifkit)&#xA;GitRepo: https://github.com/docker-library/hello-world.git&#xA;GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;&#xA;Tags: latest&#xA;Architectures: amd64, arm32v5, arm32v7, arm64v8, ppc64le, s390x&#xA;# all the same commit; easy for us to generate this way since they could be different&#xA;amd64-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;amd64-Directory: amd64/hello-world&#xA;arm32v5-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;arm32v5-Directory: arm32v5/hello-world&#xA;arm32v7-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;arm32v7-Directory: arm32v7/hello-world&#xA;arm64v8-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;arm64v8-Directory: arm64v8/hello-world&#xA;ppc64le-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;ppc64le-Directory: ppc64le/hello-world&#xA;s390x-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;s390x-Directory: s390x/hello-world&#xA;&#xA;Tags: nanoserver&#xA;Architectures: windows-amd64&#xA;# if there is only one architecture, you can use the unprefixed fields&#xA;Directory: amd64/hello-world/nanoserver&#xA;# or use the prefixed versions&#xA;windows-amd64-GitCommit: 7d0ee592e4ed60e2da9d59331e16ecdcadc1ed87&#xA;Constraints: nanoserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#instruction-format&#34;&gt;instruction format section&lt;/a&gt; for more information on the format of the library file.&lt;/p&gt; &#xA;&lt;h3&gt;Commitment&lt;/h3&gt; &#xA;&lt;p&gt;Proposing a new official image should not be undertaken lightly. We expect and require a commitment to maintain your image (including and especially timely updates as appropriate, as noted above).&lt;/p&gt; &#xA;&lt;h2&gt;Library definition files&lt;/h2&gt; &#xA;&lt;p&gt;The library definition files are plain text files found in the &lt;a href=&#34;https://github.com/docker-library/official-images/tree/master/library&#34;&gt;&lt;code&gt;library/&lt;/code&gt; directory of the &lt;code&gt;official-images&lt;/code&gt; repository&lt;/a&gt;. Each library file controls the current &#34;supported&#34; set of image tags that appear on the Docker Hub description. Tags that are removed from a library file do not get removed from the Docker Hub, so that old versions can continue to be available for use, but are not maintained by upstream or the maintainer of the official image. Tags in the library file are only built through an update to that library file or as a result of its base image being updated (ie, an image &lt;code&gt;FROM debian:buster&lt;/code&gt; would be rebuilt when &lt;code&gt;debian:buster&lt;/code&gt; is built). Only what is in the library file will be rebuilt when a base has updates.&lt;/p&gt; &#xA;&lt;p&gt;Given this policy, it is worth clarifying a few cases: backfilled versions, release candidates, and continuous integration builds. When a new repository is proposed, it is common to include some older unsupported versions in the initial pull request with the agreement to remove them right after acceptance. Don&#39;t confuse this with a comprehensive historical archive which is not the intention. Another common case where the term &#34;supported&#34; is stretched a bit is with release candidates. A release candidate is really just a naming convention for what are expected to be shorter-lived releases, so they are totally acceptable and encouraged. Unlike a release candidate, continuous integration builds which have a fully automated release cycle based on code commits or a regular schedule are not appropriate.&lt;/p&gt; &#xA;&lt;p&gt;It is highly recommended that you browse some of the existing &lt;code&gt;library/&lt;/code&gt; file contents (and history to get a feel for how they change over time) before creating a new one to become familiar with the prevailing conventions and further help streamline the review process (so that we can focus on content instead of esoteric formatting or tag usage/naming).&lt;/p&gt; &#xA;&lt;h3&gt;Filenames&lt;/h3&gt; &#xA;&lt;p&gt;The filename of a definition file will determine the name of the image repository it creates on the Docker Hub. For example, the &lt;code&gt;library/ubuntu&lt;/code&gt; file will create tags in the &lt;code&gt;ubuntu&lt;/code&gt; repository.&lt;/p&gt; &#xA;&lt;h3&gt;Tags and aliases&lt;/h3&gt; &#xA;&lt;p&gt;The tags of a repository should reflect upstream&#39;s versions or variations. For example, Ubuntu 14.04 is also known as Ubuntu Trusty Tahr, but often as simply Ubuntu Trusty (especially in usage), so &lt;code&gt;ubuntu:14.04&lt;/code&gt; (version number) and &lt;code&gt;ubuntu:trusty&lt;/code&gt; (version name) are appropriate aliases for the same image contents. In Docker, the &lt;code&gt;latest&lt;/code&gt; tag is a special case, but it&#39;s a bit of a misnomer; &lt;code&gt;latest&lt;/code&gt; really is the &#34;default&#34; tag. When one does &lt;code&gt;docker run xyz&lt;/code&gt;, Docker interprets that to mean &lt;code&gt;docker run xyz:latest&lt;/code&gt;. Given that background, no other tag ever contains the string &lt;code&gt;latest&lt;/code&gt;, since it&#39;s not something users are expected or encouraged to actually type out (ie, &lt;code&gt;xyz:latest&lt;/code&gt; should really be used as simply &lt;code&gt;xyz&lt;/code&gt;). Put another way, having an alias for the &#34;highest 2.2-series release of XYZ&#34; should be &lt;code&gt;xyz:2.2&lt;/code&gt;, not &lt;code&gt;xyz:2.2-latest&lt;/code&gt;. Similarly, if there is an Alpine variant of &lt;code&gt;xyz:latest&lt;/code&gt;, it should be aliased as &lt;code&gt;xyz:alpine&lt;/code&gt;, not &lt;code&gt;xyz:alpine-latest&lt;/code&gt; or &lt;code&gt;xyz:latest-alpine&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is strongly encouraged that version number tags be given aliases which make it easy for the user to stay on the &#34;most recent&#34; release of a particular series. For example, given currently supported XYZ Software versions of 2.3.7 and 2.2.4, suggested aliases would be &lt;code&gt;Tags: 2.3.7, 2.3, 2, latest&lt;/code&gt; and &lt;code&gt;Tags: 2.2.4, 2.2&lt;/code&gt;, respectively. In this example, the user can use &lt;code&gt;xyz:2.2&lt;/code&gt; to easily use the most recent patch release of the 2.2 series, or &lt;code&gt;xyz:2&lt;/code&gt; if less granularity is needed (Python is a good example of where that&#39;s most obviously useful -- &lt;code&gt;python:2&lt;/code&gt; and &lt;code&gt;python:3&lt;/code&gt; are very different, and can be thought of as the &lt;code&gt;latest&lt;/code&gt; tag for each of the major release tracks of Python).&lt;/p&gt; &#xA;&lt;p&gt;As described above, &lt;code&gt;latest&lt;/code&gt; is really &#34;default&#34;, so the image that it is an alias for should reflect which version or variation of the software users should use if they do not know or do not care which version they use. Using Ubuntu as an example, &lt;code&gt;ubuntu:latest&lt;/code&gt; points to the most recent LTS release, given that it is what the majority of users should be using if they know they want Ubuntu but do not know or care which version (especially considering it will be the most &#34;stable&#34; and well-supported release at any given time).&lt;/p&gt; &#xA;&lt;h3&gt;Instruction format&lt;/h3&gt; &#xA;&lt;p&gt;The manifest file format is officially based on &lt;a href=&#34;https://www.ietf.org/rfc/rfc2822.txt&#34;&gt;RFC 2822&lt;/a&gt;, and as such should be familiar to folks who are already familiar with the &#34;headers&#34; of many popular internet protocols/formats such as HTTP or email.&lt;/p&gt; &#xA;&lt;p&gt;The primary additions are inspired by the way Debian commonly uses 2822 -- namely, lines starting with &lt;code&gt;#&lt;/code&gt; are ignored and &#34;entries&#34; are separated by a blank line.&lt;/p&gt; &#xA;&lt;p&gt;The first entry is the &#34;global&#34; metadata for the image. The only required field in the global entry is &lt;code&gt;Maintainers&lt;/code&gt;, whose value is comma-separated in the format of &lt;code&gt;Name &amp;lt;email&amp;gt; (@github)&lt;/code&gt; or &lt;code&gt;Name (@github)&lt;/code&gt;. Any field specified in the global entry will be the default for the rest of the entries and can be overridden in an individual entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# this is a comment and will be ignored&#xA;Maintainers: John Smith &amp;lt;jsmith@example.com&amp;gt; (@example-jsmith),&#xA;             Anne Smith &amp;lt;asmith@example.com&amp;gt; (@example-asmith)&#xA;GitRepo: https://github.com/example/docker-example.git&#xA;GitCommit: deadbeefdeadbeefdeadbeefdeadbeefdeadbeef&#xA;&#xA;# this is also a comment, and will also be ignored&#xA;&#xA;Tags: 1.2.3, 1.2, 1, latest&#xA;Directory: 1&#xA;&#xA;Tags: 2.0-rc1, 2.0-rc, 2-rc, rc&#xA;GitRepo: https://github.com/example/docker-example-rc.git&#xA;GitFetch: refs/heads/2.0-pre-release&#xA;GitCommit: beefdeadbeefdeadbeefdeadbeefdeadbeefdead&#xA;Directory: 2&#xA;File: Dockerfile-to-use&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bashbrew will fetch code out of the Git repository (&lt;code&gt;GitRepo&lt;/code&gt;) at the commit specified (&lt;code&gt;GitCommit&lt;/code&gt;). If the commit referenced is not available by fetching &lt;code&gt;master&lt;/code&gt; of the associated &lt;code&gt;GitRepo&lt;/code&gt;, it becomes necessary to supply a value for &lt;code&gt;GitFetch&lt;/code&gt; in order to tell Bashbrew what ref to fetch in order to get the commit necessary.&lt;/p&gt; &#xA;&lt;p&gt;The built image will be tagged as &lt;code&gt;&amp;lt;manifest-filename&amp;gt;:&amp;lt;tag&amp;gt;&lt;/code&gt; (ie, &lt;code&gt;library/golang&lt;/code&gt; with a &lt;code&gt;Tags&lt;/code&gt; value of &lt;code&gt;1.6, 1, latest&lt;/code&gt; will create tags of &lt;code&gt;golang:1.6&lt;/code&gt;, &lt;code&gt;golang:1&lt;/code&gt;, and &lt;code&gt;golang:latest&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Optionally, if &lt;code&gt;Directory&lt;/code&gt; is present, Bashbrew will look for the &lt;code&gt;Dockerfile&lt;/code&gt; inside the specified subdirectory instead of at the root (and &lt;code&gt;Directory&lt;/code&gt; will be used as the &lt;a href=&#34;https://docs.docker.com/reference/builder/&#34;&gt;&#34;context&#34; for the build&lt;/a&gt; instead of the top-level of the repository). If &lt;code&gt;File&lt;/code&gt; is present, the specified filename instead of &lt;code&gt;Dockerfile&lt;/code&gt; will be used.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/docker-library/official-images/master/#multiple-architectures&#34;&gt;multi-arch section&lt;/a&gt; for details on how to specify a different &lt;code&gt;GitRepo&lt;/code&gt;, &lt;code&gt;GitFetch&lt;/code&gt;, &lt;code&gt;GitCommit&lt;/code&gt;, or &lt;code&gt;Directory&lt;/code&gt; for a specific architecture.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a new repository&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new file in the &lt;code&gt;library/&lt;/code&gt; folder. Its name will be the name of your repository on the Hub.&lt;/li&gt; &#xA; &lt;li&gt;Add your tag definitions using the appropriate syntax (see above).&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request adding the file from your forked repository to this one. Please be sure to add details as to what your repository does.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adding a new tag in an existing repository (that you&#39;re the maintainer of)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add your tag definition using the instruction format documented above.&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request from your Git repository to this one. Please be sure to add details about what&#39;s new, if possible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Change to a tag in an existing repository (that you&#39;re the maintainer of)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the relevant tag definition using the instruction format documented above.&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request from your Git repository to this one. Please be sure to add details about what&#39;s changed, if possible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bashbrew&lt;/h2&gt; &#xA;&lt;p&gt;Bashbrew (&lt;code&gt;bashbrew&lt;/code&gt;) is a tool for cloning, building, tagging, and pushing the Docker official images. See &lt;a href=&#34;https://github.com/docker-library/bashbrew#readme&#34;&gt;the Bashbrew &lt;code&gt;README&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>edoardottt/awesome-hacker-search-engines</title>
    <updated>2023-06-18T02:02:21Z</updated>
    <id>tag:github.com,2023-06-18:/edoardottt/awesome-hacker-search-engines</id>
    <link href="https://github.com/edoardottt/awesome-hacker-search-engines" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of awesome search engines useful during Penetration testing, Vulnerability assessments, Red/Blue Team operations, Bug Bounty and more&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;b&gt;Awesome Hacker Search Engines&lt;/b&gt; &lt;img src=&#34;https://raw.githubusercontent.com/edoardottt/images/main/awesome-hacker-search-engines/awesome.svg?sanitize=true&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A curated list of awesome search engines useful during Penetration testing, Vulnerability assessments, Red/Blue Team operations, Bug Bounty and more &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#general-search-engines&#34; target=&#34;_blank&#34;&gt;General&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#servers&#34; target=&#34;_blank&#34;&gt;Servers&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#vulnerabilities&#34; target=&#34;_blank&#34;&gt;Vulnerabilities&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#exploits&#34; target=&#34;_blank&#34;&gt;Exploits&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#attack-surface&#34; target=&#34;_blank&#34;&gt;Attack surface&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#code-search-engines&#34; target=&#34;_blank&#34;&gt;Code&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#mail-addresses&#34; target=&#34;_blank&#34;&gt;Mail addresses&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#domains&#34; target=&#34;_blank&#34;&gt;Domains&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#urls&#34; target=&#34;_blank&#34;&gt;URLs&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#dns&#34; target=&#34;_blank&#34;&gt;DNS&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#certificates&#34; target=&#34;_blank&#34;&gt;Certificates&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#wifi-networks&#34; target=&#34;_blank&#34;&gt;WiFi networks&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#device-information&#34; target=&#34;_blank&#34;&gt;Device Info&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#credentials&#34; target=&#34;_blank&#34;&gt;Credentials&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#leaks&#34; target=&#34;_blank&#34;&gt;Leaks&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#hidden-services&#34; target=&#34;_blank&#34;&gt;Hidden Services&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#social-networks&#34; target=&#34;_blank&#34;&gt;Social Networks&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#phone-numbers&#34; target=&#34;_blank&#34;&gt;Phone numbers&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#threat-intelligence&#34; target=&#34;_blank&#34;&gt;Threat Intelligence&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#web-history&#34; target=&#34;_blank&#34;&gt;Web History&lt;/a&gt; • &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines#surveillance-cameras&#34; target=&#34;_blank&#34;&gt;Surveillance cameras&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;General Search Engines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.google.com/&#34;&gt;Google&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bing.com/&#34;&gt;Bing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.yahoo.com/&#34;&gt;Yahoo!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yandex.com/&#34;&gt;Yandex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ask.com/&#34;&gt;Ask&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.baidu.com/&#34;&gt;Baidu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://you.com/&#34;&gt;You&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://searx.be/?q=&#34;&gt;SearXNG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.exalead.com/search/web/&#34;&gt;EXALead&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Servers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shodan.io&#34;&gt;Shodan&lt;/a&gt; - Search Engine for the Internet of Everything&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://search.censys.io/&#34;&gt;Censys Search&lt;/a&gt; - Search Engine for every server on the Internet to reduce exposure and improve security&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.onyphe.io/&#34;&gt;Onyphe.io&lt;/a&gt; - Cyber Defense Search Engine for open-source and cyber threat intelligence data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zoomeye.org/&#34;&gt;ZoomEye&lt;/a&gt; - Global cyberspace mapping&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://viz.greynoise.io/&#34;&gt;GreyNoise&lt;/a&gt; - The source for understanding internet noise&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://natlas.io/&#34;&gt;Natlas&lt;/a&gt; - Scaling Network Scanning&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://netlas.io/&#34;&gt;Netlas.io&lt;/a&gt; - Discover, Research and Monitor any Assets Available Online&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fofa.info/&#34;&gt;FOFA&lt;/a&gt; - Cyberspace mapping&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quake.360.net/quake/#/index&#34;&gt;Quake&lt;/a&gt; - Cyberspace surveying and mapping system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hunter.how/&#34;&gt;Hunter&lt;/a&gt; - Internet Search Engines For Security Researchers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vulnerabilities&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/search&#34;&gt;NIST NVD&lt;/a&gt; - US National Vulnerability Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cve.mitre.org/cve/search_cve_list.html&#34;&gt;MITRE CVE&lt;/a&gt; - Identify, define, and catalog publicly disclosed cybersecurity vulnerabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/advisories&#34;&gt;GitHub Advisory Database&lt;/a&gt; - Security vulnerability database inclusive of CVEs and GitHub originated security advisories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cloudvulndb.org/&#34;&gt;cloudvulndb.org&lt;/a&gt; - The Open Cloud Vulnerability &amp;amp; Security Issue Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://osv.dev/list&#34;&gt;osv.dev&lt;/a&gt; - Open Source Vulnerabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulners.com/&#34;&gt;Vulners.com&lt;/a&gt; - Your Search Engine for Security Intelligence&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opencve.io/cve&#34;&gt;opencve.io&lt;/a&gt; - Easiest way to track CVE updates and be alerted about new vulnerabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://security.snyk.io/&#34;&gt;security.snyk.io&lt;/a&gt; - Open Source Vulnerability Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mend.io/vulnerability-database/&#34;&gt;Mend Vulnerability Database&lt;/a&gt; - The largest open source vulnerability DB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rapid7.com/db/&#34;&gt;Rapid7 - DB&lt;/a&gt; - Vulnerability &amp;amp; Exploit Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cvedetails.com/&#34;&gt;CVEDetails&lt;/a&gt; - The ultimate security vulnerability datasource&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulniq.com/&#34;&gt;VulnIQ&lt;/a&gt; - Vulnerability intelligence and management solution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://synapsint.com/&#34;&gt;SynapsInt&lt;/a&gt; - The unified OSINT research tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://avd.aquasec.com/&#34;&gt;Aqua Vulnerability Database&lt;/a&gt; - Vulnerabilities and weaknesses in open source applications and cloud native infrastructure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulmon.com/&#34;&gt;Vulmon&lt;/a&gt; - Vulnerability and exploit search engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuldb.com/&#34;&gt;VulDB&lt;/a&gt; - Number one vulnerability database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://in.scanfactory.io/cvemon.html&#34;&gt;ScanFactory&lt;/a&gt; - Realtime Security Monitoring&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/advisories/published/&#34;&gt;Trend Micro Zero Day Initiative&lt;/a&gt; - Publicly disclosed vulnerabilities discovered by Zero Day Initiative researchers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugs.chromium.org/p/project-zero/issues/list?can=1&amp;amp;q=&amp;amp;sort=-id&amp;amp;colspec=ID%20Type%20Status%20Priority%20Milestone%20Owner%20Summary&#34;&gt;Google Project Zero&lt;/a&gt; - Vulnerabilities including Zero Days&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trickest/cve&#34;&gt;Trickest CVE Repository&lt;/a&gt; - Gather and update all available and newest CVEs with their PoC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnvd.org.cn/&#34;&gt;cnvd.org.cn&lt;/a&gt; - Chinese National Vulnerability Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inthewild.io/feed&#34;&gt;InTheWild.io&lt;/a&gt; - Check CVEs in our free, open source feed of exploited vulnerabilities&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exploits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.exploit-db.com/&#34;&gt;Exploit-DB&lt;/a&gt; - Exploit Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sploitus.com/&#34;&gt;Sploitus&lt;/a&gt; - Convenient central place for identifying the newest exploits&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rapid7.com/db/&#34;&gt;Rapid7 - DB&lt;/a&gt; - Vulnerability &amp;amp; Exploit Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulmon.com/&#34;&gt;Vulmon&lt;/a&gt; - Vulnerability and exploit search engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://packetstormsecurity.com/&#34;&gt;packetstormsecurity.com&lt;/a&gt; - Information Security Services, News, Files, Tools, Exploits, Advisories and Whitepapers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://0day.today/&#34;&gt;0day.today&lt;/a&gt; - Ultimate database of exploits and vulnerabilities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lolbas-project.github.io/&#34;&gt;LOLBAS&lt;/a&gt; - Living Off The Land Binaries, Scripts and Libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gtfobins.github.io/&#34;&gt;GTFOBins&lt;/a&gt; - Curated list of Unix binaries that can be used to bypass local security restrictions in misconfigured systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swisskyrepo.github.io/PayloadsAllTheThingsWeb/&#34;&gt;Payloads All The Things&lt;/a&gt; - A list of useful payloads and bypasses for Web Application Security&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.xss-payloads.com/&#34;&gt;XSS Payloads&lt;/a&gt; - The wonderland of JavaScript unexpected usages, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.exploitalert.com/search-results.html&#34;&gt;exploitalert.com&lt;/a&gt; - Database of Exploits&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.revshells.com/&#34;&gt;Reverse Shell generator&lt;/a&gt; - Online Reverse Shell generator with Local Storage functionality, URI &amp;amp; Base64 Encoding, MSFVenom Generator, and Raw Mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackerone.com/hacktivity&#34;&gt;HackerOne hacktivity&lt;/a&gt; - See the latest hacker activity on HackerOne&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugcrowd.com/crowdstream&#34;&gt;Bugcrowd Crowdstream&lt;/a&gt; - Showcase of accepted and disclosed submissions on Bugcrowd programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gtfoargs.github.io/&#34;&gt;GTFOArgs&lt;/a&gt; - Curated list of Unix binaries that can be manipulated for argument injection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shell-storm.org/shellcode/index.html&#34;&gt;shell-storm.org/shellcode&lt;/a&gt; - Shellcodes database for study cases&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackingthe.cloud/&#34;&gt;Hacking the Cloud&lt;/a&gt; - Encyclopedia of the attacks/tactics/techniques that offensive security professionals can use on their next cloud exploitation adventure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.loldrivers.io/&#34;&gt;LOLDrivers&lt;/a&gt; - Open-source project that brings together vulnerable, malicious, and known malicious Windows drivers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://pwnwiki.io/&#34;&gt;PwnWiki&lt;/a&gt; - Collection of TTPs (tools, tactics, and procedures) for what to do after access has been gained&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Attack Surface&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fullhunt.io/&#34;&gt;FullHunt.io&lt;/a&gt; - Attack surface database of the entire Internet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.binaryedge.io/&#34;&gt;BinaryEdge&lt;/a&gt; - We scan the web and gather data for you&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://censys.io/&#34;&gt;Censys ASM&lt;/a&gt; - Attack Surface Management Solutions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redhuntlabs.com/&#34;&gt;RedHunt Labs&lt;/a&gt; - Discover your Attack Surface, Continuously&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://securitytrails.com/&#34;&gt;SecurityTrails&lt;/a&gt; - The Total Internet Inventory&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://overcast-security.com/&#34;&gt;overcast-security.com&lt;/a&gt; - We make tracking your external attack surface easy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipinfo.io/&#34;&gt;IPInfo.io&lt;/a&gt; - The trusted source for IP address data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipdata.co/&#34;&gt;IPData.co&lt;/a&gt; - IP Geolocation and Threat Intelligence API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://networksdb.io/&#34;&gt;NetworksDB&lt;/a&gt; - information about the public IPv4 and IPv6 addresses, networks and domains owned by companies and organisations across the world&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asnlookup.com/&#34;&gt;ASNlookup&lt;/a&gt; - Quickly lookup updated information about specific Autonomous System Number (ASN), Organization, CIDR, or registered IP addresses (IPv4 and IPv6) among other relevant data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bgp.tools/&#34;&gt;BGPtools&lt;/a&gt; - Browse the Internet ecosystem&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bgpview.io/&#34;&gt;BGPview&lt;/a&gt; - Debug and investigate information about IP addresses, ASN, IXs, BGP, ISPs, Prefixes and Domain names&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bigdatacloud.com/&#34;&gt;BigDataCloud&lt;/a&gt; - The API provides comprehensive location and network data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.radb.net/query&#34;&gt;RADb&lt;/a&gt; - The world&#39;s largest public routing registry&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.deepinfo.com/&#34;&gt;Deepinfo&lt;/a&gt; - Empower your security with the most comprehensive Internet data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detectify.com/&#34;&gt;Detectify&lt;/a&gt; - Complete External Attack Surface Management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code Search Engines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cs.github.com/&#34;&gt;GitHub Code Search&lt;/a&gt; - Search globally across all of GitHub, or scope your search to a particular repository or organization&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/&#34;&gt;GitLab Code Search&lt;/a&gt; - Advanced search for faster, more efficient search across the entire GitLab instance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sourceforge.net/&#34;&gt;Sourceforge&lt;/a&gt; - Complete Open-Source and Business Software Platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grep.app/&#34;&gt;grep.app&lt;/a&gt; - Search across a half million git repos&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://publicwww.com/&#34;&gt;publicwww.com&lt;/a&gt; - Find any alphanumeric snippet, signature or keyword in the web pages HTML, JS and CSS code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://searchcode.com/&#34;&gt;SearchCode&lt;/a&gt; - Search 75 billion lines of code from 40 million projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nerdydata.com/&#34;&gt;NerdyData&lt;/a&gt; - Find companies based on their website&#39;s tech stack or code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codefinder.org/&#34;&gt;RepoSearch&lt;/a&gt; - Source code search engine that helps you find implementation details, example usages or just analyze code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.sourcegraph.com/&#34;&gt;SourceGraph&lt;/a&gt; - Understand and search across your entire codebase&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hotexamples.com/&#34;&gt;HotExamples&lt;/a&gt; - Search code examples from over 1 million projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wpdirectory.net/&#34;&gt;WP Directory&lt;/a&gt; - Lightning fast regex searching of code in the WordPress Plugin and Theme Directories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/discover&#34;&gt;GitHub Gists&lt;/a&gt; - Instantly share code, notes, and snippets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/explore/repos&#34;&gt;CodeBerg&lt;/a&gt; - Collaboration platform and Git hosting for free and open source software, content and projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pagure.io/browse/projects/&#34;&gt;Fedora Pagure&lt;/a&gt; - Open Source software code hosting system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net/&#34;&gt;LaunchPad&lt;/a&gt; - Software collaboration platform that provides: Bug tracking, Code hosting, Code reviews, Ubuntu package building and hosting, Translations...&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo.or.cz/?a=project_list&#34;&gt;repo.or.cz&lt;/a&gt; - Public Git hosting site&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitorious.org/&#34;&gt;gitorious.org&lt;/a&gt; - Read-only mirror of the former gitorious.org code hosting website&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sr.ht/projects&#34;&gt;Sourcehut&lt;/a&gt; - Collection of tools useful for software development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://android.googlesource.com/&#34;&gt;android.googlesource.com&lt;/a&gt; - Git repositories on android&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://deps.dev/&#34;&gt;deps.dev&lt;/a&gt; - Service developed and hosted by Google to help developers better understand the structure, construction, and security of open source software packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webfinery.com/search&#34;&gt;WebFinery&lt;/a&gt; - Search the source code of the web&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Mail Addresses&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hunter.io/&#34;&gt;Hunter.io&lt;/a&gt; - Find professional email addresses in seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://phonebook.cz/&#34;&gt;PhoneBook&lt;/a&gt; - Lists all domains, email addresses, or URLs for the given input domain&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intelx.io/&#34;&gt;IntelligenceX&lt;/a&gt; - Search engine and data archive&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reacher.email/&#34;&gt;Reacher.email&lt;/a&gt; - Open-Source Email Verification&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rocketreach.co/&#34;&gt;RocketReach&lt;/a&gt; - Your first-degree connection to any professional&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.email-format.com/&#34;&gt;email-format.com&lt;/a&gt; - Find the email address formats in use at thousands of companies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tools.emailhippo.com/&#34;&gt;EmailHippo&lt;/a&gt; - Email address verification technology&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thatsthem.com/reverse-email-lookup&#34;&gt;ThatsThem&lt;/a&gt; - Reverse email lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://verify-email.org/&#34;&gt;verify-email.org&lt;/a&gt; - Checks whether the mailbox exists or not&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.melissa.com/v2/lookups/emailcheck/email/&#34;&gt;Melissa - Emailcheck&lt;/a&gt; - Check email addresses and verify they are live&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.voilanorbert.com/&#34;&gt;VoilaNorbert&lt;/a&gt; - I can find anyone&#39;s email address&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://synapsint.com/&#34;&gt;SynapsInt&lt;/a&gt; - The unified OSINT research tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.skymem.info/&#34;&gt;skymem.info&lt;/a&gt; - Find email addresses of companies and people&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.findemails.com/&#34;&gt;findemails.com&lt;/a&gt; - Find Anyone&#39;s Email Address in Seconds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.experte.com/email-finder&#34;&gt;Experte email finder&lt;/a&gt; - Find the right email address, even if you only know the name and the company&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Domains&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://phonebook.cz/&#34;&gt;PhoneBook&lt;/a&gt; - Lists all domains, email addresses, or URLs for the given input domain&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intelx.io/&#34;&gt;IntelligenceX&lt;/a&gt; - Search engine and data archive&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnisint.io/subdomain-enumeration&#34;&gt;Omnisint&lt;/a&gt; - Subdomain enumeration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://riddler.io/&#34;&gt;Riddler&lt;/a&gt; - Allows you to search in a high quality dataset&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.robtex.com/&#34;&gt;RobTex&lt;/a&gt; - Various kinds of research of IP numbers, Domain names, etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://centralops.net/co/DomainDossier.aspx&#34;&gt;CentralOps - DomainDossier&lt;/a&gt; - Investigate domains and IP addresses&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.domainiq.com/&#34;&gt;DomainIQ&lt;/a&gt; - Comprehensive Domain Intelligence&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whois.domaintools.com/&#34;&gt;whois.domaintools.com&lt;/a&gt; - Industry’s fastest domain discovery engine and broadest, most accurate data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shorteners.grayhatwarfare.com/domains&#34;&gt;grayhatwarfare.com - domains&lt;/a&gt; - How to search URLs exposed by Shortener services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whoisology.com/&#34;&gt;whoisology.com&lt;/a&gt; - Deep Connections Between Domain Names &amp;amp; Their Owners&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://who.is/&#34;&gt;who.is&lt;/a&gt; - WHOIS Search, Domain Name, Website, and IP Tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pentest-tools.com/information-gathering/find-subdomains-of-domain&#34;&gt;pentest-tools.com&lt;/a&gt; - Discover subdomains and determine the attack surface of an organization&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://builtwith.com/&#34;&gt;BuiltWith&lt;/a&gt; - Find out what websites are Built With&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://moonsearch.com/&#34;&gt;MoonSearch&lt;/a&gt; - Backlinks checker &amp;amp; SEO Report&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sitereport.netcraft.com/&#34;&gt;sitereport.netcraft.com&lt;/a&gt; - Find out the infrastructure and technologies used by any site&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://synapsint.com/&#34;&gt;SynapsInt&lt;/a&gt; - The unified OSINT research tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spyonweb.com/&#34;&gt;spyonweb.com&lt;/a&gt; - Find out related websites&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.statscrop.com/&#34;&gt;statscrop.com&lt;/a&gt; - Millions of amazing websites across the web are being analyzed with StatsCrop&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://securityheaders.com/&#34;&gt;securityheaders.com&lt;/a&gt; - Scan your site now&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.visualsitemapper.com/&#34;&gt;visualsitemapper.com&lt;/a&gt; - Create a visual map of your site&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.similarweb.com/&#34;&gt;similarweb.com&lt;/a&gt; - The easiest and fastest tool to find out what&#39;s really going on online&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://buckets.grayhatwarfare.com/&#34;&gt;buckets.grayhatwarfare.com&lt;/a&gt; - Public buckets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99.nl&lt;/a&gt; - Over 57 quality API&#39;s and growing!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wannabe1337.xyz/&#34;&gt;wannabe1337.xyz&lt;/a&gt; - Online Tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://subdomainfinder.c99.nl/&#34;&gt;subdomainfinder.c99.nl&lt;/a&gt; - Scanner that scans an entire domain to find as many subdomains as possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jonlu.ca/anubis/&#34;&gt;AnubisDB&lt;/a&gt; - Subdomain enumeration and information gathering tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.whoisxmlapi.com/&#34;&gt;WhoisXMLAPI&lt;/a&gt; - Domain &amp;amp; IP Data Intelligence for Greater Enterprise Security&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hypestat.com/&#34;&gt;HypeStat&lt;/a&gt; - Free statistics and analytics service, where you can find information about every website&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pkey.in/tools-i/search-subdomains&#34;&gt;Private Key Project&lt;/a&gt; - Information security tools from Private Key Project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sitedossier.com/&#34;&gt;SiteDossier&lt;/a&gt; - Profiles for millions of sites on the web&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spyonweb.com/&#34;&gt;SpyOnWeb&lt;/a&gt; - Quick and convenient search for the websites that probably belong to the same owner&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;URLs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://phonebook.cz/&#34;&gt;PhoneBook&lt;/a&gt; - Lists all domains, email addresses, or URLs for the given input domain&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intelx.io/&#34;&gt;IntelligenceX&lt;/a&gt; - Search engine and data archive&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://urlscan.io/&#34;&gt;URLScan&lt;/a&gt; - A sandbox for the web&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackertarget.com/ip-tools/&#34;&gt;HackerTarget&lt;/a&gt; - Collect information about IP Addresses, Networks, Web Pages and DNS records&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://moz.com/link-explorer&#34;&gt;MOZ Link Explorer&lt;/a&gt; - The world&#39;s best backlink checker with over 40 trillion links&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shorteners.grayhatwarfare.com/&#34;&gt;shorteners.grayhatwarfare.com&lt;/a&gt; - Search URLs exposed by Shortener services&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://index.commoncrawl.org/&#34;&gt;CommonCrawl Index&lt;/a&gt; - Open repository of web crawl data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DNS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnsdumpster.com/&#34;&gt;DNSDumpster&lt;/a&gt; - dns recon &amp;amp; research, find &amp;amp; lookup dns records&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaos.projectdiscovery.io/#/&#34;&gt;Chaos&lt;/a&gt; - Enhance research and analyse changes around DNS for better insights&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rapiddns.io/&#34;&gt;RapidDNS&lt;/a&gt; - dns query tool which make querying subdomains or sites of a same ip easy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.farsightsecurity.com/#dnsdb&#34;&gt;DNSdb&lt;/a&gt; - Passive DNS historical database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnisint.io/reverse-dns-lookup&#34;&gt;Omnisint&lt;/a&gt; - Reverse DNS lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackertarget.com/ip-tools/&#34;&gt;HackerTarget&lt;/a&gt; - Collect information about IP Addresses, Networks, Web Pages and DNS records&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://passivedns.mnemonic.no/&#34;&gt;passivedns.mnemonic.no&lt;/a&gt; - Web interface for querying passive DNS data collected in our malware lab&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ptrarchive.com/&#34;&gt;ptrarchive.com&lt;/a&gt; - Over 230 billion reverse DNS entries from 2008 to the present&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dnshistory.org/&#34;&gt;dnshistory.org&lt;/a&gt; - Domain Name System Historical Record Archive&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnstwister.report/&#34;&gt;DNSTwister&lt;/a&gt; - The anti-phishing domain name search engine and DNS monitoring service&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnsviz.net/&#34;&gt;DNSviz&lt;/a&gt; - Tool for visualizing the status of a DNS zone&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99.nl&lt;/a&gt; - Over 57 quality API&#39;s and growing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wannabe1337.xyz/&#34;&gt;wannabe1337.xyz&lt;/a&gt; - Online Tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnslytics.com/&#34;&gt;DNSlytics&lt;/a&gt; - Find out everything about a domain name, IP address or provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnsrepo.noc.org/&#34;&gt;dnsrepo.noc.org&lt;/a&gt; - DNS Database Repository Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnsspy.io/&#34;&gt;DNSSpy&lt;/a&gt; - Monitor, validate and verify your DNS configurations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zetalytics.com/&#34;&gt;ZETAlytics&lt;/a&gt; - We offer unrivalled geographic diversity and exclusive global network visibility in searchable datasets for use by cyber security analysts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://askdns.com/&#34;&gt;AskDNS&lt;/a&gt; - Lookup Connected Domain Names and IP Addresses&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://passivedns.cn/&#34;&gt;360 PassiveDNS.CN&lt;/a&gt; - Biggest public available db in China designed for security and research purpose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Certificates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crt.sh/&#34;&gt;Crt.sh&lt;/a&gt; - Certificate Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui.ctsearch.entrust.com/ui/ctsearchui&#34;&gt;CTSearch&lt;/a&gt; - Certificate Transparency Search Tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tls.bufferover.run/&#34;&gt;tls.bufferover.run&lt;/a&gt; - Quickly find certificates in IPv4 space&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sslmate.com/certspotter/&#34;&gt;CertSpotter&lt;/a&gt; - Monitors your domains for expiring, unauthorized, and invalid SSL certificates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://synapsint.com/&#34;&gt;SynapsInt&lt;/a&gt; - The unified OSINT research tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://search.censys.io/certificates&#34;&gt;Censys Search - Certificates&lt;/a&gt; - Certificates Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ciphersuite.info/&#34;&gt;ciphersuite.info&lt;/a&gt; - TLS Ciphersuite Search. Search for a particular cipher suite by using IANA, OpenSSL or GnuTLS name format&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://certificatedetails.com/&#34;&gt;certificatedetails&lt;/a&gt; - Online certificate viewer. Inspect and dowload certificates from your browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/tools/ct/search/&#34;&gt;FacebookCT&lt;/a&gt; - Search for certificates issued for a given domain and subscribe to notifications from Facebook regarding new certificates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;WiFi Networks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wigle.net/&#34;&gt;Wigle.net&lt;/a&gt; - Maps and database of 802.11 wireless networks with statistics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wifimap.io/&#34;&gt;wifimap.io&lt;/a&gt; - Connect to all Free WiFi Hotspots using WiFi Map App all over the World!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.wificafespots.com/&#34;&gt;wificafespots.com&lt;/a&gt; - Free WiFi Cafe Spots&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wifispc.com/&#34;&gt;wifispc.com&lt;/a&gt; - Free map of Wi-Fi passwords anywhere you go!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwifimap.net/&#34;&gt;openwifimap.net&lt;/a&gt; - HTML5 map with OpenWiFiMap data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mylnikov.org/&#34;&gt;mylnikov.org&lt;/a&gt; - Public API implementation of Wi-Fi Geo-Location database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Device Information&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macvendorlookup.com/&#34;&gt;MAC Vendor Lookup&lt;/a&gt; - Look up the vendor for a specific MAC Address&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://macvendors.com/&#34;&gt;macvendors.com&lt;/a&gt; - Find MAC Address Vendors. Now&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://macaddress.io/&#34;&gt;macaddress.io&lt;/a&gt; - MAC address vendor lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maclookup.app/&#34;&gt;maclookup.app&lt;/a&gt; - Find the vendor name of a device by entering an OUI or a MAC address&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Credentials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;Have I Been Pwned&lt;/a&gt; - Check if your email or phone is in a data breach&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dehashed.com/&#34;&gt;Dehashed&lt;/a&gt; - Free deep-web scans and protection against credential leaks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leakcheck.io/&#34;&gt;LeakCheck.io&lt;/a&gt; - Make sure your credentials haven&#39;t been compromised&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crackstation.net/&#34;&gt;crackstation.net&lt;/a&gt; -Massive pre-computed lookup tables to crack password hashes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hashkiller.io/listmanager&#34;&gt;HashKiller&lt;/a&gt; - Pre-cracked Hashes, easily searchable&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leakedpassword.com/&#34;&gt;LeakedPassword&lt;/a&gt; - Search across multiple data breaches to see if your pass has been compromised&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugmenot.com/&#34;&gt;BugMeNot&lt;/a&gt; - Find and share logins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Leaks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wikileaks.org/&#34;&gt;WikiLeaks&lt;/a&gt; - News leaks and classified media provided by anonymous sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leak-lookup.com/&#34;&gt;Leak-Lookup&lt;/a&gt; - Search across thousands of data breaches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snusbase.com/&#34;&gt;Snusbase&lt;/a&gt; - Stay on top of the latest database breaches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://breachdirectory.org/&#34;&gt;breachdirectory.org&lt;/a&gt; - Check if your information was exposed in a data breach&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://breached.to/&#34;&gt;BreachForums&lt;/a&gt; - Breaches, Data leaks, databases and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/edoardottt/awesome-hacker-search-engines/main/siphondkh34l5vki.onion/&#34;&gt;Siph0n Breach DB (onionsite)&lt;/a&gt; - Breaches, Data leaks, Exploits&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://exposed.vc/&#34;&gt;Exposed Forum&lt;/a&gt; - The premier Databreach discussion &amp;amp; leaks forum&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Hidden Services&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ahmia.fi/&#34;&gt;AHMIA&lt;/a&gt; - Search hidden services on the Tor network&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thehiddenwiki.org/&#34;&gt;thehiddenwiki.org&lt;/a&gt; - The darknet guide&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tor.link/&#34;&gt;tor.link&lt;/a&gt; - Free anonymous deepweb / Darknet search engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://deepweblinks.net/&#34;&gt;deepweblinks.net&lt;/a&gt; - Onion Links&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://onionengine.com/&#34;&gt;onionengine.com&lt;/a&gt; - A search engine for services accessible on the Tor network&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://onionlandsearchengine.com/&#34;&gt;OnionLand&lt;/a&gt; - Discover Hidden Services and access to Tor&#39;s onion sites&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Social Networks&lt;/h3&gt; &#xA;&lt;p&gt;These can be useful for osint and social engineering.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.instagram.com/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://new.reddit.com/&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pinterest.com/&#34;&gt;Pinterest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tumblr.com/&#34;&gt;Tumblr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.snapchat.com/&#34;&gt;SnapChat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.whatsapp.com/&#34;&gt;Whatsapp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/&#34;&gt;Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tiktok.com/&#34;&gt;TikTok&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vimeo.com/&#34;&gt;Vimeo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wechat.com/&#34;&gt;WeChat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vk.com/&#34;&gt;VK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://weibo.com/&#34;&gt;Weibo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tinder.com/&#34;&gt;Tinder&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Phone Numbers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.numlookup.com/&#34;&gt;NumLookup&lt;/a&gt; - Free reverse phone lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spydialer.com/&#34;&gt;SpyDialer&lt;/a&gt; - Free Reverse Lookup Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.whitepages.com/&#34;&gt;WhitePages&lt;/a&gt; - Find people, contact info &amp;amp; background checks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nationalcellulardirectory.com/&#34;&gt;National Cellular Directory&lt;/a&gt; - Begin your comprehensive people search now&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.phonevalidator.com/&#34;&gt;Phone Validator&lt;/a&gt; - Is it a cell phone or is it a landline or is it a fake?&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freecarrierlookup.com/&#34;&gt;Free Carrier Lookup&lt;/a&gt; - Enter a phone number and we&#39;ll return the carrier name&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rocketreach.co/&#34;&gt;RocketReach&lt;/a&gt; - Your first-degree connection to any professional&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sync.me/&#34;&gt;sync.me&lt;/a&gt; - Find out who called&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.emobiletracker.com/&#34;&gt;EmobileTracker&lt;/a&gt; - Track Mobile Owner Name, Location and Mobile Service Provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reversephonelookup.com/&#34;&gt;Reverse Phone Lookup&lt;/a&gt; - Find Out The Owner Of A Phone Number&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thatsthem.com/reverse-phone-lookup&#34;&gt;ThatsThem&lt;/a&gt; - Reverse phone lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thisnumber.com/&#34;&gt;thisnumber.com&lt;/a&gt; - International Phone Directories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.usphonebook.com/&#34;&gt;usphonebook.com&lt;/a&gt; - Free Reverse Phone Number Lookup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.truepeoplesearch.com/#&#34;&gt;truepeoplesearch.com&lt;/a&gt; - Get current address, cell phone number, email address, relatives, friends and a lot more&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tellows.com/&#34;&gt;Tellows&lt;/a&gt; - Who is calling? The phone number reverse search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://synapsint.com/&#34;&gt;SynapsInt&lt;/a&gt; - The unified OSINT research tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99.nl&lt;/a&gt; - Over 57 quality API&#39;s and growing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://validnumber.com/&#34;&gt;ValidNumber.com&lt;/a&gt; - Free reverse phone lookup service to let you identify a caller associated with any 10-digit phone number from the US and Canada&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cellidfinder.com/&#34;&gt;CellIdFinder&lt;/a&gt; - Nonprofit project wich helps you to find GSM BTS by MCC, MNC, LAC and CellID&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.oldphonebook.com/&#34;&gt;OldPhoneBook&lt;/a&gt; - Intantly search a large selection from the past 20 years of USA phone listings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Threat Intelligence&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://attack.mitre.org/&#34;&gt;MITRE ATT&amp;amp;CK&lt;/a&gt; - Globally-accessible knowledge base of adversary tactics and techniques&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pulsedive.com/&#34;&gt;PulseDive&lt;/a&gt; - Threat intelligence made easy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://threatcrowd.org/&#34;&gt;ThreatCrowd&lt;/a&gt; - A Search Engine for Threats&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.threatminer.org/&#34;&gt;ThreatMiner&lt;/a&gt; - Data Mining for Threat Intelligence&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.virustotal.com/&#34;&gt;VirusTotal&lt;/a&gt; - Analyze suspicious files, domains, IPs and URLs to detect malware and other breaches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vx-underground.org/&#34;&gt;vx-underground.org&lt;/a&gt; - The largest collection of malware source code, samples, and papers on the internet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazaar.abuse.ch/browse/&#34;&gt;bazaar.abuse.ch&lt;/a&gt; - Malware sample database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://feodotracker.abuse.ch/browse/&#34;&gt;feodotracker.abuse.ch&lt;/a&gt; - List of botnet Command&amp;amp;Control servers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sslbl.abuse.ch/ssl-certificates/&#34;&gt;sslbl.abuse.ch&lt;/a&gt; - All malicious SSL certificates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://urlhaus.abuse.ch/browse/&#34;&gt;urlhaus.abuse.ch&lt;/a&gt; - Propose new malware urls&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://threatfox.abuse.ch/browse/&#34;&gt;threatfox.abuse.ch&lt;/a&gt; - Indicator Of Compromise (IOC) database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yaraify.abuse.ch/&#34;&gt;yaraify.abuse.ch&lt;/a&gt; - Scan suspicious files such as malware samples or process dumps against a large repository of YARA rules&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rescure.me/&#34;&gt;Rescure&lt;/a&gt; - Curated cyber threat intelligence for everyone&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://otx.alienvault.com/&#34;&gt;otx.alienvault&lt;/a&gt; - The World&#39;s First Truly Open Threat Intelligence Community&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://urlquery.net/&#34;&gt;urlquery.net&lt;/a&gt; - Service for detecting and analyzing web-based malware&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://socradar.io/&#34;&gt;socradar.io&lt;/a&gt; - Extension to your SOC team&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://virusshare.com/&#34;&gt;VirusShare&lt;/a&gt; - System currently contains 48 million malware samples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.riskiq.com/products/passivetotal/&#34;&gt;PassiveTotal&lt;/a&gt; - Security intelligence that scales security operations and response&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://malapi.io/&#34;&gt;malapi.io&lt;/a&gt; - Windows APIs used for malicious purposes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://filesec.io/&#34;&gt;filesec.io&lt;/a&gt; - Latest file extensions being used by attackers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leakix.net/&#34;&gt;leakix.net&lt;/a&gt; - Search engine indexing public information and an open reporting platform linked to the results&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tria.ge/s&#34;&gt;tria.ge&lt;/a&gt; - Fully automated solution for high-volume malware analysis using advanced sandboxing technology&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://polyswarm.network/&#34;&gt;Polyswarm&lt;/a&gt; - Launchpad for new technologies and innovative threat detection methods&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://talosintelligence.com/&#34;&gt;Cisco Talos&lt;/a&gt; - The threat intelligence organization at the center of the Cisco Security portfolio&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scamsearch.io/#anchorCeckNow&#34;&gt;scamsearch.io&lt;/a&gt; - Find your scammer online &amp;amp; report them&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cybercampaigns.net/&#34;&gt;CyberCampaigns&lt;/a&gt; - Threat Actor information and Write-Ups&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://orkl.eu/&#34;&gt;ORKL&lt;/a&gt; - The Community Driven Cyber Threat Intelligence Library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maltiverse.com/search&#34;&gt;Maltiverse&lt;/a&gt; - Data from more than 100 different Threat Intelligence sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.inquest.net/&#34;&gt;Inquest Labs&lt;/a&gt; - Threat intelligence from hundreds of public, private, and internal sources to develop new FDR signatures and rules&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://phishtank.org/&#34;&gt;PhishTank&lt;/a&gt; - Collaborative clearing house for data and information about phishing on the Internet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intelowlproject/IntelOwl&#34;&gt;IntelOwl&lt;/a&gt; - Open Source Intelligence, or OSINT solution to get threat intelligence data about a specific file, an IP or a domain from a single API at scale&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prowl.lupovis.io/&#34;&gt;Lupovis&lt;/a&gt; - Analyze and collect data on Internet-wide scans and attacks in real-time. We use this data to identify and classify malicious actors&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.abuseipdb.com/&#34;&gt;AbuseIPDB&lt;/a&gt; - Check the report history of any IP address to see if anyone else has reported malicious activities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sitecheck.sucuri.net/&#34;&gt;Sucuri SiteCheck&lt;/a&gt; - Check websites for known malware, viruses, blacklisting status, website errors, out-of-date software, and malicious code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spamhaus.com&#34;&gt;Spamhaus&lt;/a&gt; - Protect and investigate using IP and domain reputation data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://threatbook.io/&#34;&gt;ThreatBook&lt;/a&gt; - One step ahead of your adversary with high-fidelity, efficient and actionable cyber threat intelligence&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shadowserver.org/&#34;&gt;ShadowServer&lt;/a&gt; - Nonprofit security organization working altruistically behind the scenes to make the Internet more secure for everyone&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.team-cymru.com/&#34;&gt;Team Cymru&lt;/a&gt; - Global leader in cyber threat intelligence and attack surface management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bevigil.com/&#34;&gt;BeVigil&lt;/a&gt; - Search engine for mobile application security testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.circl.lu/&#34;&gt;CIRCL&lt;/a&gt; - The Computer Incident Response Center Luxembourg is a government-driven initiative designed to gather, review, report and respond to computer security threats and incidents&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metadefender.opswat.com/&#34;&gt;MetaDefender Cloud&lt;/a&gt; - Advanced threat detection and prevention platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web History&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/&#34;&gt;Web Archive&lt;/a&gt; - Explore more than 702 billion web pages saved over time&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archive.ph/&#34;&gt;Archive.ph&lt;/a&gt; - Create a copy of a webpage that will always be up even if the original link is down&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cachedpages.com/&#34;&gt;CachedPages&lt;/a&gt; - Get the cached page of any URL&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stored.website/&#34;&gt;stored.website&lt;/a&gt; - View cached web pages/website&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://commoncrawl.org/&#34;&gt;CommonCrawl&lt;/a&gt; - Open repository of web crawl data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.webarchive.org.uk/ukwa/&#34;&gt;UK Web Archive&lt;/a&gt; - Collects millions of websites each year, preserving them for future generations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arquivo.pt/&#34;&gt;Arquivo&lt;/a&gt; - Non-profit service that maintains information published on the web of interest to the Portuguese community&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archive-it.org/&#34;&gt;Archive-It&lt;/a&gt; - An archive of digital government and non-government organization (NGO) documents and reports&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haw.nsk.hr/en/&#34;&gt;HAW&lt;/a&gt; - Croatian Web Archive&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Surveillance cameras&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.insecam.org/en/&#34;&gt;Insecam.org&lt;/a&gt; - The world biggest directory of online surveillance security cameras&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sunders.uber.space/&#34;&gt;Surveillance under Surveillance&lt;/a&gt; - Cameras and guards watching you almost everywhere&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Unclassified&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://netograph.io/&#34;&gt;NetoGraph&lt;/a&gt; - Captures and indexes detailed, low-level snapshots of website behaviour&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dorksearch.com/&#34;&gt;DorkSearch&lt;/a&gt; - Speed up your Dorking&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://usersearch.org/&#34;&gt;usersearch.org&lt;/a&gt; - Find someone by username or email on Social Networks, Dating Sites, Forums, Crypto Forums, Chat Sites and Blogs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pastebin.com/&#34;&gt;Pastebin&lt;/a&gt; - Website where you can store text online for a set period of time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Not working / Paused&lt;/h3&gt; &#xA;&lt;!-- markdown-link-check-disable --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dns.bufferover.run/&#34;&gt;DNS.BufferOver.run&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- markdown-link-check-enable --&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to propose changes, just open an &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines/issues&#34;&gt;issue&lt;/a&gt; or a &lt;a href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.edoardoottavianelli.it&#34;&gt;edoardoottavianelli.it&lt;/a&gt; to contact me.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SeleniumHQ/docker-selenium</title>
    <updated>2023-06-18T02:02:21Z</updated>
    <id>tag:github.com,2023-06-18:/SeleniumHQ/docker-selenium</id>
    <link href="https://github.com/SeleniumHQ/docker-selenium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images for Selenium Grid&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/workflows/Build%20&amp;amp;%20test/badge.svg?branch=trunk&#34; alt=&#34;Build &amp;amp; test&#34;&gt; &lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/workflows/Deploys/badge.svg?sanitize=true&#34; alt=&#34;Deployments&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Docker images for the Selenium Grid Server&lt;/h1&gt; &#xA;&lt;p&gt;The project is made possible by volunteer contributors who have put in thousands of hours of their own time, and made the source code freely available under the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/LICENSE.md&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These Docker images come with a handful of tags to simplify its usage, have a look at them in one of our &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/releases/tag/4.10.0-20230607&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get notifications of new releases, add yourself as a &#34;Releases only&#34; watcher.&lt;/p&gt; &#xA;&lt;p&gt;These images are published to the Docker Hub registry at &lt;a href=&#34;https://hub.docker.com/u/selenium&#34;&gt;Selenium Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Do you need help to use these Docker images? Talk to us at &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;https://www.selenium.dev/support/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#experimental-mult-arch-aarch64armhfamd64-images&#34;&gt;Experimental Mult-Arch aarch64/armhf/amd64 Images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dev-and-beta-channel-browser-images&#34;&gt;Dev and Beta Channel Browser Images&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dev-and-beta-standalone-mode&#34;&gt;Dev and Beta Standalone Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dev-and-beta-on-the-grid&#34;&gt;Dev and Beta on the Grid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-modes&#34;&gt;Execution modes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#standalone&#34;&gt;Standalone&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#hub-and-nodes&#34;&gt;Hub and Nodes&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#docker-networking&#34;&gt;Docker networking&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-different-machinesvms&#34;&gt;Using different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#fully-distributed-mode---router-queue-distributor-eventbus-sessionmap-and-nodes&#34;&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording&#34;&gt;Video recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dynamic-grid&#34;&gt;Dynamic Grid&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuration-example&#34;&gt;Configuration example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-hub--node-roles&#34;&gt;Execution with Hub &amp;amp; Node roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-standalone-roles&#34;&gt;Execution with Standalone roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-dynamic-grid-in-different-machinesvms&#34;&gt;Using Dynamic Grid in different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-docker-compose&#34;&gt;Execution with Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording-screen-resolution-and-time-zones-in-a-dynamic-grid&#34;&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#deploying-to-kubernetes&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuring-the-containers&#34;&gt;Configuring the containers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_opts-selenium-configuration-options&#34;&gt;SE_OPTS Selenium Configuration Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_java_opts-java-environment-options&#34;&gt;SE_JAVA_OPTS Java Environment Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#node-configuration-options&#34;&gt;Node configuration options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#setting-sub-path&#34;&gt;Setting Sub Path&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#setting-screen-resolution&#34;&gt;Setting Screen Resolution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#grid-url-and-session-timeout&#34;&gt;Grid Url and Session Timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#session-request-timeout&#34;&gt;Session request timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#increasing-session-concurrency-per-container&#34;&gt;Increasing session concurrency per container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#running-in-headless-mode&#34;&gt;Running in Headless mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#building-the-images&#34;&gt;Building the images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#waiting-for-the-grid-to-be-ready&#34;&gt;Waiting for the Grid to be ready&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#install-certificates-for-Chromium-based-browsers&#34;&gt;Install certificates for Chromium based browsers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#tracing-in-grid&#34;&gt;Tracing in Grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start a Docker container with Firefox&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Point your WebDriver tests to &lt;a href=&#34;http://localhost:4444&#34;&gt;http://localhost:4444&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;That&#39;s it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) To see what is happening inside the container, head to &lt;a href=&#34;http://localhost:7900/?autoconnect=1&amp;amp;resize=scale&amp;amp;password=secret&#34;&gt;http://localhost:7900/?autoconnect=1&amp;amp;resize=scale&amp;amp;password=secret&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;More details about visualising the container activity, check the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; When executing &lt;code&gt;docker run&lt;/code&gt; for an image that contains a browser please use the flag &lt;code&gt;--shm-size=2g&lt;/code&gt; to use the host&#39;s shared memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; Always use a Docker image with a full tag to pin a specific browser and Grid version. See &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/wiki/Tagging-Convention&#34;&gt;Tagging Conventions&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Try them out in a ready to use GitPod environment!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/SeleniumHQ/docker-selenium&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Experimental Mult-Arch aarch64/armhf/amd64 Images&lt;/h2&gt; &#xA;&lt;p&gt;For experimental docker container images, which run on platforms such as the Mac M1 or Raspberry Pi, see the community driven repository hosted at &lt;a href=&#34;https://github.com/seleniumhq-community/docker-seleniarm&#34;&gt;seleniumhq-community/docker-seleniarm&lt;/a&gt;. These images are built for three separate architectures: linux/arm64 (aarch64), linux/arm/v7 (armhf), and linux/amd64.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, these experimental container images are published on &lt;a href=&#34;https://hub.docker.com/u/seleniarm&#34;&gt;Seleniarm Docker Hub&lt;/a&gt; registry.&lt;/p&gt; &#xA;&lt;p&gt;See issue &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1076&#34;&gt;#1076&lt;/a&gt; for more information on these images.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re working on an Intel or AMD64 architecture, we recommend using the container images in &lt;em&gt;this&lt;/em&gt; repository (SeleniumHQ/docker-selenium) instead of the experimental ones.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dev and Beta Channel Browser Images&lt;/h2&gt; &#xA;&lt;p&gt;To run tests or otherwise work with pre-release browsers, Google, Mozilla, and Microsoft maintain a Dev and Beta release channel for those who need to see what&#39;s soon to be released to the general population.&lt;/p&gt; &#xA;&lt;h3&gt;Dev and Beta Standalone Mode&lt;/h3&gt; &#xA;&lt;p&gt;Here are the instructions to run them in Standalone mode:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chrome Beta:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-chrome:beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chrome Dev:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-chrome:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Firefox Beta:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-firefox:beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Firefox Dev:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-firefox:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Edge Beta:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-edge:beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Edge Dev:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --rm -it -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-edge:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dev and Beta on the Grid&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;docker-compose-v3-beta-channel.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# To execute this docker-compose yml file use `docker-compose -f docker-compose-v3-beta-channel.yml up`&#xA;# Add the `-d` flag at the end for detached execution&#xA;# To stop the execution, hit Ctrl+C, and then `docker-compose -f docker-compose-v3-beta-channel.yml down`&#xA;version: &#34;3&#34;&#xA;services:&#xA;  chrome:&#xA;    image: selenium/node-chrome:beta&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  edge:&#xA;    image: selenium/node-edge:beta&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  firefox:&#xA;    image: selenium/node-firefox:beta&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  selenium-hub:&#xA;    image: selenium/hub:latest&#xA;    container_name: selenium-hub&#xA;    ports:&#xA;      - &#34;4442:4442&#34;&#xA;      - &#34;4443:4443&#34;&#xA;      - &#34;4444:4444&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;docker-compose-v3-dev-channel.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# To execute this docker-compose yml file use `docker-compose -f docker-compose-v3-dev-channel.yml up`&#xA;# Add the `-d` flag at the end for detached execution&#xA;# To stop the execution, hit Ctrl+C, and then `docker-compose -f docker-compose-v3-dev-channel.yml down`&#xA;version: &#34;3&#34;&#xA;services:&#xA;  chrome:&#xA;    image: selenium/node-chrome:dev&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  edge:&#xA;    image: selenium/node-edge:dev&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  firefox:&#xA;    image: selenium/node-firefox:dev&#xA;    shm_size: 2gb&#xA;    depends_on:&#xA;      - selenium-hub&#xA;    environment:&#xA;      - SE_EVENT_BUS_HOST=selenium-hub&#xA;      - SE_EVENT_BUS_PUBLISH_PORT=4442&#xA;      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443&#xA;&#xA;  selenium-hub:&#xA;    image: selenium/hub:latest&#xA;    container_name: selenium-hub&#xA;    ports:&#xA;      - &#34;4442:4442&#34;&#xA;      - &#34;4443:4443&#34;&#xA;      - &#34;4444:4444&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on the Dev and Beta channel container images, see the blog post on &lt;a href=&#34;https://www.selenium.dev/blog/2022/dev-and-beta-channel-browsers-via-docker-selenium/&#34;&gt;Dev and Beta Channel Browsers via Docker Selenium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Execution modes&lt;/h2&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_24x24.png&#34; alt=&#34;Firefox&#34;&gt; Firefox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_24x24.png&#34; alt=&#34;Chrome&#34;&gt; Chrome&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_24x24.png&#34; alt=&#34;Edge&#34;&gt; Edge&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Only one Standalone container can run on port&lt;/em&gt; &lt;code&gt;4444&lt;/code&gt; &lt;em&gt;at the same time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Hub and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;There are different ways to run the images and create a Grid with a Hub and Nodes, check the following options.&lt;/p&gt; &#xA;&lt;h4&gt;Docker networking&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created in the same network and they will recognize each other by their container name. A Docker &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_create/&#34;&gt;network&lt;/a&gt; needs to be created as a first step.&lt;/p&gt; &#xA;&lt;h5&gt;macOS/Linux&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows PowerShell&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-edge:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using different machines/VMs&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created on different machines/VMs, they need to know each other&#39;s IPs to communicate properly. If more than one node will be running on the same Machine/VM, they must be configured to expose different ports.&lt;/p&gt; &#xA;&lt;h5&gt;Hub - Machine/VM 1&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 2&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; \&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; `&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Edge - Machine/VM 3&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; \&#xA;    selenium/node-edge:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; `&#xA;    selenium/node-edge:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Firefox - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    selenium/node-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    selenium/node-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5556:5556 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    -e SE_NODE_PORT=5556 \&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5556:5556 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    -e SE_NODE_PORT=5556 `&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Compose&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; is the simplest way to start a Grid. Use the linked resources below, save them locally, and check the execution instructions on top of each file.&lt;/p&gt; &#xA;&lt;h5&gt;Version 2&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v2.yml&#34;&gt;&lt;code&gt;docker-compose-v2.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Version 3&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3.yml&#34;&gt;&lt;code&gt;docker-compose-v3.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To stop the Grid and cleanup the created containers, run &lt;code&gt;docker-compose down&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Version 3 with Swarm support&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-swarm.yml&#34;&gt;&lt;code&gt;docker-compose-v3-swarm.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to start a Selenium Grid with all its components apart. For simplicity, only an example with docker-compose will be provided. Save the file locally, and check the execution instructions on top of it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-full-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Video recording&lt;/h2&gt; &#xA;&lt;p&gt;Tests execution can be recorded by using the &lt;code&gt;selenium/video:ffmpeg-4.3.1-20230607&lt;/code&gt; Docker image. One container is needed per each container where a browser is running. This means if you are running 5 Nodes/Standalone containers, you will need 5 video containers, the mapping is 1-1.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the only way to do this mapping is manually (either starting the containers manually, or through &lt;code&gt;docker-compose&lt;/code&gt;). We are iterating on this process and probably this setup will be more simple in the future.&lt;/p&gt; &#xA;&lt;p&gt;The video Docker image we provide is based on the ffmpeg Ubuntu image provided by the &lt;a href=&#34;https://github.com/jrottenberg/ffmpeg&#34;&gt;jrottenberg/ffmpeg&lt;/a&gt; project, thank you for providing this image and simplifying our work &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have questions or feedback, please use the community contact points shown &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please report any bugs through GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/new/choose&#34;&gt;issues&lt;/a&gt;, and provide all the information requested on the template.&lt;/li&gt; &#xA; &lt;li&gt;Video recording for headless browsers is not supported.&lt;/li&gt; &#xA; &lt;li&gt;Video recording tends to use considerable amounts of CPU. Normally you should estimate 1CPU per video container, and 1 CPU per browser container.&lt;/li&gt; &#xA; &lt;li&gt;Videos are stored in the &lt;code&gt;/videos&lt;/code&gt; directory inside the video container. Map a local directory to get the videos.&lt;/li&gt; &#xA; &lt;li&gt;If you are running more than one video container, be sure to overwrite the video file name through the &lt;code&gt;FILE_NAME&lt;/code&gt; environment variable to avoid unexpected results.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This example shows how to start the containers manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4444:4444 -p 6900:5900 --net grid --name selenium --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.10.0-20230607&#xA;$ docker run -d --net grid --name video -v /tmp/videos:/videos selenium/video:ffmpeg-4.3.1-20230607&#xA;# Run your tests&#xA;$ docker stop video &amp;amp;&amp;amp; docker rm video&#xA;$ docker stop selenium &amp;amp;&amp;amp; docker rm selenium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the containers are stopped and removed, you should see a video file on your machine&#39;s &lt;code&gt;/tmp/videos&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a few Nodes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video.yml&#34;&gt;&lt;code&gt;docker-compose-v3-video.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dynamic Grid&lt;/h2&gt; &#xA;&lt;p&gt;Grid 4 has the ability to start Docker containers on demand, this means that it starts a Docker container in the background for each new session request, the test gets executed there, and when the test completes, the container gets thrown away.&lt;/p&gt; &#xA;&lt;p&gt;This execution mode can be used either in the Standalone or Node roles. The &#34;dynamic&#34; execution mode needs to be told what Docker images to use when the containers get started. Additionally, the Grid needs to know the URI of the Docker daemon. This configuration can be placed in a local &lt;code&gt;toml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration example&lt;/h3&gt; &#xA;&lt;p&gt;You can save this file locally and name it, for example, &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.10.0-20230607&#34;, &#39;{&#34;browserName&#34;: &#34;firefox&#34;}&#39;,&#xA;    &#34;selenium/standalone-chrome:4.10.0-20230607&#34;, &#39;{&#34;browserName&#34;: &#34;chrome&#34;}&#39;,&#xA;    &#34;selenium/standalone-edge:4.10.0-20230607&#34;, &#39;{&#34;browserName&#34;: &#34;MicrosoftEdge&#34;}&#39;&#xA;]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because internally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-4.3.1-20230607&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;#[server]&#xA;#host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;#port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Hub &amp;amp; Node roles&lt;/h3&gt; &#xA;&lt;p&gt;This can be expanded to a full Grid deployment, all components deployed individually. The overall idea is to have the Hub in one virtual machine, and each of the Nodes in separate and more powerful virtual machines.&lt;/p&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Standalone roles&lt;/h3&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/standalone-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/standalone-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Dynamic Grid in different machines/VMs&lt;/h3&gt; &#xA;&lt;h4&gt;Hub - Machine/VM 1&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Node Chrome - Machine/VM 2&lt;/h4&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Complete the &lt;code&gt;[server]&lt;/code&gt; section in the &lt;code&gt;config.toml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.10.0-20230607&#34;, &#34;{\&#34;browserName\&#34;: \&#34;firefox\&#34;}&#34;,&#xA;    &#34;selenium/standalone-chrome:4.10.0-20230607&#34;, &#34;{\&#34;browserName\&#34;: \&#34;chrome\&#34;}&#34;,&#xA;    &#34;selenium/standalone-edge:4.10.0-20230607&#34;, &#34;{\&#34;browserName\&#34;: \&#34;MicrosoftEdge\&#34;}&#34;&#xA;    ]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-4.3.1-20230607&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;[server]&#xA;host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Execution with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a Node:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-dynamic-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-dynamic-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuring the child containers&lt;/h3&gt; &#xA;&lt;p&gt;Containers can be further configured through environment variables, such as &lt;code&gt;SE_NODE_SESSION_TIMEOUT&lt;/code&gt; and &lt;code&gt;SE_OPTS&lt;/code&gt;. When a child container is created, all environment variables prefixed with &lt;code&gt;SE_&lt;/code&gt; will be forwared and set in the container. You can set the desired environment variables in the &lt;code&gt;standalone-docker&lt;/code&gt; or &lt;code&gt;node-docker&lt;/code&gt; containers. The following example sets the session timeout to 700 seconds for all sessions:&lt;/p&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 \&#xA;    -e SE_NODE_SESSION_TIMEOUT=700 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/standalone-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 `&#xA;    -e SE_NODE_SESSION_TIMEOUT=700 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/standalone-docker:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/h3&gt; &#xA;&lt;p&gt;To record your WebDriver session, you need to add a &lt;code&gt;se:recordVideo&lt;/code&gt; field set to &lt;code&gt;true&lt;/code&gt;. You can also set a time zone and a screen resolution, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;browserName&#34;: &#34;firefox&#34;,&#xA;  &#34;platformName&#34;: &#34;linux&#34;,&#xA;  &#34;se:recordVideo&#34;: &#34;true&#34;,&#xA;  &#34;se:timeZone&#34;: &#34;US/Pacific&#34;,&#xA;  &#34;se:screenResolution&#34;: &#34;1920x1080&#34;  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running a test, check the path you mounted to the Docker container, (&lt;code&gt;${PWD}/assets&lt;/code&gt;), and you should see videos and session information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploying to Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;We offer a Helm chart to deploy these Docker images to Kubernetes. Read more details at the Helm &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/charts/selenium-grid/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Configuring the containers&lt;/h2&gt; &#xA;&lt;h3&gt;SE_OPTS Selenium Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;SE_OPTS&lt;/code&gt; variable with additional commandline parameters for starting a hub or a node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_OPTS=&#34;--log-level FINE&#34; --name selenium-hub selenium/hub:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SE_JAVA_OPTS Java Environment Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;SE_JAVA_OPTS&lt;/code&gt; environment variable to java process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_JAVA_OPTS=-Xmx512m --name selenium-hub selenium/hub:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Node configuration options&lt;/h3&gt; &#xA;&lt;p&gt;The Nodes register themselves through the Event Bus. When the Grid is started in its typical Hub/Node setup, the Hub will be the one acting as the Event Bus, and when the Grid is started with all its five elements apart, the Event Bus will be running on its own.&lt;/p&gt; &#xA;&lt;p&gt;In both cases, it is necessary to tell the Node where the Event Bus is, so it can register itself. That is the purpose of the &lt;code&gt;SE_EVENT_BUS_HOST&lt;/code&gt;, &lt;code&gt;SE_EVENT_BUS_PUBLISH_PORT&lt;/code&gt; and &lt;code&gt;SE_EVENT_BUS_SUBSCRIBE_PORT&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, for example if you want to tag a node, it might be necessary to supply a custom stereotype to the node config. The environement variable &lt;code&gt;SE_NODE_STEREOTYPE&lt;/code&gt; sets the stereotype entry in the node&#39;s &lt;code&gt;config.toml&lt;/code&gt;. An example config.toml file can be found here: &lt;a href=&#34;https://www.selenium.dev/documentation/grid/configuration/toml_options/#setting-custom-capabilities-for-matching-specific-nodes&#34;&gt;Setting custom capabilities for matching specific Nodes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the default values of these environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d \&#xA;  -e SE_EVENT_BUS_HOST=&amp;lt;event_bus_ip|event_bus_name&amp;gt; \&#xA;  -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 -e SE_NODE_STEREOTYPE=&#34;{\&#34;browserName\&#34;:\&#34;${SE_NODE_BROWSER_NAME}\&#34;,\&#34;browserVersion\&#34;:\&#34;${SE_NODE_BROWSER_VERSION}\&#34;,\&#34;platformName\&#34;: \&#34;Linux\&#34;}&#34; \&#xA;  --shm-size=&#34;2g&#34; selenium/node-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Sub Path&lt;/h3&gt; &#xA;&lt;p&gt;By default, Selenium is reachable at &lt;code&gt;http://127.0.0.1:4444/&lt;/code&gt;. Selenium can be configured to use a custom sub path by specifying the &lt;code&gt;SE_SUB_PATH&lt;/code&gt; environmental variable. In the example below Selenium is reachable at &lt;code&gt;http://127.0.0.1:4444/selenium-grid/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_SUB_PATH=/selenium-grid/ --name selenium-hub selenium/hub:4.9.0-20230421&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Screen Resolution&lt;/h3&gt; &#xA;&lt;p&gt;By default, nodes start with a screen resolution of 1360 x 1020 with a color depth of 24 bits and a dpi of 96. These settings can be adjusted by specifying &lt;code&gt;SE_SCREEN_WIDTH&lt;/code&gt;, &lt;code&gt;SE_SCREEN_HEIGHT&lt;/code&gt;, &lt;code&gt;SE_SCREEN_DEPTH&lt;/code&gt;, and/or &lt;code&gt;SE_SCREEN_DPI&lt;/code&gt; environmental variables when starting the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -e SE_SCREEN_WIDTH=1366 -e SE_SCREEN_HEIGHT=768 -e SE_SCREEN_DEPTH=24 -e SE_SCREEN_DPI=74 selenium/standalone-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Grid Url and Session Timeout&lt;/h3&gt; &#xA;&lt;p&gt;In some use cases you might need to set the Grid url to the Node, for example if you&#39;d like to access the BiDi/CDP endpoint. This is also needed when you want to use the new &lt;code&gt;RemoteWebDriver.builder()&lt;/code&gt; or &lt;code&gt;Augmenter()&lt;/code&gt; present in Selenium 4 (since they setup the BiDi/CDP connection implicitly). You can do that through the &lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt; environment variable. Setting this env var is needed if you want to see the live view while sessions are executing.&lt;/p&gt; &#xA;&lt;p&gt;Grid has a default session timeout of 300 seconds, where the session can be on a stale state until it is killed. You can use &lt;code&gt;SE_NODE_SESSION_TIMEOUT&lt;/code&gt; to overwrite that value in seconds.&lt;/p&gt; &#xA;&lt;h3&gt;Session request timeout&lt;/h3&gt; &#xA;&lt;p&gt;A new session request is placed in the Session Queue before it is processed, and the request sits in the queue until a matching slot is found across the registered Nodes. However, the new session request might timeout if no slot was found. By default, a request will stay in the queue up to 300 seconds before it a timeout is reached. In addition, an attempt to process the request is done every 5 seconds (by default).&lt;/p&gt; &#xA;&lt;p&gt;It is possible to override those values through environment variables in the Hub and the SessionQueue (&lt;code&gt;SE_SESSION_REQUEST_TIMEOUT&lt;/code&gt; and &lt;code&gt;SE_SESSION_RETRY_INTERVAL&lt;/code&gt;). For example, a timeout of 500 seconds would be &lt;code&gt;SE_SESSION_REQUEST_TIMEOUT=500&lt;/code&gt; and a retry interval of 2 seconds would be &lt;code&gt;SE_SESSION_RETRY_INTERVAL=2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Increasing session concurrency per container&lt;/h3&gt; &#xA;&lt;p&gt;By default, only one session is configured to run per container through the &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; environment variable. It is possible to increase that number up to the maximum available processors, this is because more stability is achieved when one container/browser has 1 CPU to run.&lt;/p&gt; &#xA;&lt;p&gt;However, if you have measured performance and based on that, you think more sessions can be executed in each container, you can override the maximum limit by setting both &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; to a desired number and &lt;code&gt;SE_NODE_OVERRIDE_MAX_SESSIONS&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Nevertheless, running more browser sessions than the available processors is not recommended since you will be overloading the resources.&lt;/p&gt; &#xA;&lt;p&gt;Overriding this setting has a undesired side effect when video recording is enabled, since more than one browser session might be captured in the same video.&lt;/p&gt; &#xA;&lt;h3&gt;Running in Headless mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/web/updates/2017/04/headless-chrome&#34;&gt;Chrome&lt;/a&gt;, When using headless mode, there&#39;s no need for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Xvfb&#34;&gt;Xvfb&lt;/a&gt; server to be started.&lt;/p&gt; &#xA;&lt;p&gt;To avoid starting the server you can set the &lt;code&gt;START_XVFB&lt;/code&gt; environment variable to &lt;code&gt;false&lt;/code&gt; (or any other value than &lt;code&gt;true&lt;/code&gt;), for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 -e START_XVFB=false --shm-size=&#34;2g&#34; selenium/node-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see this GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/567&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stopping the Node/Standalone after N sessions have been executed&lt;/h3&gt; &#xA;&lt;p&gt;In some environments, like Docker Swarm or Kubernetes, it is useful to shut down the Node or Standalone container after N tests have been executed. For example, this can be used in Kubernetes to terminate the pod and then scale a new one after N sessions. Set the environment variable &lt;code&gt;SE_DRAIN_AFTER_SESSION_COUNT&lt;/code&gt; to a value higher than zero to enable this behaviour.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -e SE_DRAIN_AFTER_SESSION_COUNT=5 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the previous command, the Standalone container will shutdown after 5 sessions have been executed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Building the images&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo and from the project directory root you can build everything by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=local make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to configure environment variable in order to build the image (http proxy for instance), simply set an environment variable &lt;code&gt;BUILD_ARGS&lt;/code&gt; that contains the additional variables to pass to the docker context (this will only work with docker &amp;gt;= 1.9)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ BUILD_ARGS=&#34;--build-arg http_proxy=http://acme:3128 --build-arg https_proxy=http://acme:3128&#34; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Omitting&lt;/em&gt; &lt;code&gt;VERSION=local&lt;/code&gt; &lt;em&gt;will build the images with the released version but replacing the date for the current one.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Waiting for the Grid to be ready&lt;/h2&gt; &#xA;&lt;p&gt;It is a good practice to check first if the Grid is up and ready to receive requests, this can be done by checking the &lt;code&gt;/wd/hub/status&lt;/code&gt; endpoint.&lt;/p&gt; &#xA;&lt;p&gt;A Grid that is ready, composed by a hub and two nodes, could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;value&#34;: {&#xA;    &#34;ready&#34;: true,&#xA;    &#34;message&#34;: &#34;Selenium Grid ready.&#34;,&#xA;    &#34;nodes&#34;: [&#xA;      {&#xA;        &#34;id&#34;: &#34;6c0a2c59-7e99-469d-bbfc-313dc638797c&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.3:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;firefox&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      },&#xA;      {&#xA;        &#34;id&#34;: &#34;26af3363-a0d8-4bd6-a854-2c7497ed64a4&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.4:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;chrome&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;&#34;ready&#34;: true&lt;/code&gt; value indicates that the Grid is ready to receive requests. This status can be polled through a script before running any test, or it can be added as a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; when the docker container is started.&lt;/p&gt; &#xA;&lt;h3&gt;Adding a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; to the Grid&lt;/h3&gt; &#xA;&lt;p&gt;The script &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/Base/check-grid.sh&#34;&gt;check-grid.sh&lt;/a&gt;, which is included in the images, can be used to poll the Grid status.&lt;/p&gt; &#xA;&lt;p&gt;This example checks the status of the Grid every 15 seconds, it has a timeout of 30 seconds when the check is done, and it retries up to 5 times until the container is marked as unhealthy. Please use adjusted values to fit your needs, (if needed) replace the &lt;code&gt;--host&lt;/code&gt; and &lt;code&gt;--port&lt;/code&gt; parameters for the ones used in your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub \&#xA;  --health-cmd=&#39;/opt/bin/check-grid.sh --host 0.0.0.0 --port 4444&#39; \&#xA;  --health-interval=15s --health-timeout=30s --health-retries=5 \&#xA;  selenium/hub:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.10.0-20230607&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.10.0-20230607&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;\&lt;/code&gt; line delimiter won&#39;t work on Windows based terminals, try either &lt;code&gt;^&lt;/code&gt; or a backtick.&lt;/p&gt; &#xA;&lt;p&gt;The container health status can be checked by doing &lt;code&gt;docker ps&lt;/code&gt; and verifying the &lt;code&gt;(healthy)|(unhealthy)&lt;/code&gt; status or by inspecting it in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker inspect --format=&#39;{{json .State.Health.Status}}&#39; selenium-hub&#xA;&#34;healthy&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a bash script to wait for the Grid&lt;/h3&gt; &#xA;&lt;p&gt;A common problem known in docker is that a running container does not always mean that the application inside it is ready. A simple way to tackle this is by using a &#34;wait-for-it&#34; script, more information can be seen &lt;a href=&#34;https://docs.docker.com/compose/startup-order/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following script is an example of how this can be done using bash, but the same principle applies if you want to do this with the programming language used to write the tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;# wait-for-grid.sh&#xA;&#xA;set -e&#xA;&#xA;cmd=&#34;$@&#34;&#xA;&#xA;while ! curl -sSL &#34;http://localhost:4444/wd/hub/status&#34; 2&amp;gt;&amp;amp;1 \&#xA;        | jq -r &#39;.value.ready&#39; 2&amp;gt;&amp;amp;1 | grep &#34;true&#34; &amp;gt;/dev/null; do&#xA;    echo &#39;Waiting for the Grid&#39;&#xA;    sleep 1&#xA;done&#xA;&#xA;&amp;gt;&amp;amp;2 echo &#34;Selenium Grid is up - executing tests&#34;&#xA;exec $cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Will require &lt;code&gt;jq&lt;/code&gt; installed via &lt;code&gt;apt-get&lt;/code&gt;, else the script will keep printing &lt;code&gt;Waiting&lt;/code&gt; without completing the execution.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If needed, replace &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;4444&lt;/code&gt; for the correct values in your environment. Also, this script is polling indefinitely, you might want to tweak it and establish a timeout.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say that the normal command to execute your tests is &lt;code&gt;mvn clean test&lt;/code&gt;. Here is a way to use the above script and execute your tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./wait-for-grid.sh mvn clean test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like this, the script will poll until the Grid is ready, and then your tests will start.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Install certificates for Chromium based browsers&lt;/h2&gt; &#xA;&lt;p&gt;If you need to install custom certificates, CA, intermediate CA, client certificates (for example enterprise internal CA) you can use the different utils come from libnss3-tools. Chromium based browser uses nssdb as certificate store. Create new nssdb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;certutil -d sql:$HOME/.pki/nssdb -N&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, to trust a root CA certificate for issuing SSL server certificates, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;certutil -d sql:$HOME/.pki/nssdb -A -t &#34;C,,&#34; -n &amp;lt;certificate nickname&amp;gt; -i &amp;lt;certificate filename&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To import an intermediate CA certificate, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;certutil -d sql:$HOME/.pki/nssdb -A -t &#34;,,&#34; -n &amp;lt;certificate nickname&amp;gt; -i &amp;lt;certificate filename&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find more information &lt;a href=&#34;https://chromium.googlesource.com/chromium/src/+/master/docs/linux/cert_management.md&#34;&gt;here&lt;/a&gt; Usage example: If your company has internal CA you can create your own dockerimage from selenium node image. You can then install all required internal certificates in your Dockerfile like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;FROM selenium/node-edge:latest&#xA;USER root&#xA;COPY certs/ /etc/certs # copy over the certificate file&#xA;&#xA;#=========&#xA;# libnss3-tools&#xA;# Network Security Service tools&#xA;# Manage certificates in nssdb (certutil, pk12util, modutil, shlibsign, signtool, ssltap)&#xA;#=========&#xA;RUN apt-get update -qqy \&#xA;  &amp;amp;&amp;amp; apt-get -qqy install \&#xA;    libnss3-tools \&#xA;  &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* /var/cache/apt/*&#xA;&#xA;RUN mkdir -p -m755 /home/seluser/.pki/nssdb \ #create nssdb folder&#xA;    &amp;amp;&amp;amp; certutil -d sql:/home/seluser/.pki/nssdb -N --empty-password \ # create new db without password&#xA;    &amp;amp;&amp;amp; certutil -d sql:/home/seluser/.pki/nssdb -A -t &#34;C,,&#34; -n companyca -i /etc/certs/companeca.pem \ #trust company CA&#xA;    &amp;amp;&amp;amp; pk12util -d sql:/home/seluser/.pki/nssdb -i client_cert.p12 -W password_of_clent_cert # client certificate install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way the certificates will be installed and the node will start automatically as before.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Alternative method: Add certificates to existing Selenium based images for browsers&lt;/h2&gt; &#xA;&lt;p&gt;As an alternative, you can add your certificate files to existing Selenium images. This practical example assumes you have a known image to use as a build image and have a way to publish new images to your local docker registry.&lt;/p&gt; &#xA;&lt;p&gt;This example uses a RedHat based distro as build image (Rocky Linux) but it can be &lt;em&gt;any&lt;/em&gt; linux image of your choice. Please note that build instrutions will vary between distributions. You can check instructions for Ubuntu in previous example.&lt;/p&gt; &#xA;&lt;p&gt;The example also assumes your internal CA is already in &lt;em&gt;/etc/pki/ca-trust/source/anchors/YOUR_CA.pem&lt;/em&gt;, the default location for Rocky Linux. Alternatively, you can also provide these files from your host and copy them into build image.&lt;/p&gt; &#xA;&lt;p&gt;For Chrome and Edge browsers, the recipe is the same, just adapt image name (node-chrome or node-edge):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Get a standard image for creating nssdb file&#xA;FROM rockylinux:8.6 as build&#xA;RUN yum install -y nss-tools&#xA;RUN mkdir -p -m755 /seluser/.pki/nssdb \&#xA;    &amp;amp;&amp;amp; certutil -d sql:/seluser/.pki/nssdb -N --empty-password \&#xA;    &amp;amp;&amp;amp; certutil -d sql:/seluser/.pki/nssdb -A -t &#34;C,,&#34; -n YOUR_CA -i /etc/pki/ca-trust/source/anchors/YOUR_CA.pem \&#xA;    &amp;amp;&amp;amp; chown -R 1200:1201 /seluser&#xA;&#xA;# Start from Selenium image and add relevant files from build image&#xA;FROM selenium/node-chrome:4.10.0-20230607&#xA;USER root&#xA;COPY --from=build /seluser/ /home/seluser/&#xA;USER seluser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example for Firefox:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Get a standard image for working on&#xA;FROM rockylinux:8.6 as build&#xA;RUN mkdir -p &#34;/distribution&#34; &#34;/certs&#34; &amp;amp;&amp;amp; \&#xA;    cp /etc/pki/ca-trust/source/anchors/YOUR_CA*.pem /certs/ &amp;amp;&amp;amp; \&#xA;    echo &#39;{ &#34;policies&#34;: { &#34;Certificates&#34;: { &#34;Install&#34;: [&#34;/opt/firefox-latest/YOUR_CA.pem&#34;] }} }&#39; &amp;gt;&#34;/distribution/policies.json&#34;&#xA;&#xA;# Start from Selenium image and add relevant files from build image&#xA;FROM selenium/node-firefox:4.10.0-20230607&#xA;USER root&#xA;COPY --from=build /certs /opt/firefox-latest&#xA;COPY --from=build /distribution /opt/firefox-latest/distribution&#xA;USER seluser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/LibVNC/x11vnc&#34;&gt;x11vnc&lt;/a&gt; as VNC server to allow users inspect what is happening inside the container. Users can connect to this server in two ways:&lt;/p&gt; &#xA;&lt;h3&gt;Using a VNC client&lt;/h3&gt; &#xA;&lt;p&gt;The VNC server is listening to port 5900, you can use a VNC client and connect to it. Feel free to map port 5900 to any free external port that you wish.&lt;/p&gt; &#xA;&lt;p&gt;The internal 5900 port remains the same because that is the configured port for the VNC server running inside the container. You can override it with the &lt;code&gt;SE_VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 5900:5900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.10.0-20230607&#xA;$ docker run -d -p 4445:4444 -p 5901:5900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.10.0-20230607&#xA;$ docker run -d -p 4446:4444 -p 5902:5900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your VNC client:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Port 5900 to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;Port 5901 to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;Port 5902 to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;. If you wish to change this, you can set the environment variable &lt;code&gt;SE_VNC_PASSWORD&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run VNC without password authentication you can set the environment variable &lt;code&gt;SE_VNC_NO_PASSWORD=1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run VNC in view-only mode you can set the environment variable &lt;code&gt;SE_VNC_VIEW_ONLY=1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using your browser (no VNC client is needed)&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/novnc/noVNC&#34;&gt;noVNC&lt;/a&gt; to allow users inspect visually container activity with their browser. This might come handy if you cannot install a VNC client on your machine. Port 7900 is used to start noVNC, so you will need to connect to that port with your browser.&lt;/p&gt; &#xA;&lt;p&gt;Similarly to the previous section, feel free to map port 7900 to any free external port that you wish. You can also override it with the &lt;code&gt;SE_NO_VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.10.0-20230607&#xA;$ docker run -d -p 4445:4444 -p 7901:7900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.10.0-20230607&#xA;$ docker run -d -p 4446:4444 -p 7902:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your browser:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7900/&#34;&gt;http://localhost:7900/&lt;/a&gt; to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7901/&#34;&gt;http://localhost:7901/&lt;/a&gt; to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7902/&#34;&gt;http://localhost:7902/&lt;/a&gt; to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Tracing in Grid&lt;/h2&gt; &#xA;&lt;p&gt;In order to enable tracing in Selenium Grid container, the following commands can be executed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create grid&#xA;docker run -d -p 16686:16686 -p 14250:14250 --net grid --name jaeger jaegertracing/all-in-one:1.17&#xA;docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.10.0-20230607&#xA;docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;&#x9;-e SE_ENABLE_TRACING=true \&#xA;&#x9;-e JAVA_OPTS=&#34;-Dotel.traces.exporter=jaeger -Dotel.exporter.jaeger.endpoint=http://jaegar:14250 -Dotel.resource.attributes=service.name=selenium-hub&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.10.0-20230607&#xA;docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;&#x9;-e SE_ENABLE_TRACING=true \&#xA;&#x9;-e JAVA_OPTS=&#34;-Dotel.traces.exporter=jaeger -Dotel.exporter.jaeger.endpoint=http://jaegar:14250 -Dotel.resource.attributes=service.name=selenium-node-edge&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.10.0-20230607&#xA;docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;&#x9;-e SE_ENABLE_TRACING=true \&#xA;&#x9;-e JAVA_OPTS=&#34;-Dotel.traces.exporter=jaeger -Dotel.exporter.jaeger.endpoint=http://jaegar:14250 -Dotel.resource.attributes=service.name=selenium-node-firefox&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also refer to the below docker-compose yaml files to be able to start a simple grid (or) a dynamic grid.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Grid &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-tracing.yml&#34;&gt;v3 yaml file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simple Grid &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v2-tracing.yml&#34;&gt;v2 yaml file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Grid &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid-tracing.yml&#34;&gt;v3 yaml file&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can view the &lt;a href=&#34;http://localhost:16686/&#34;&gt;Jaegar UI&lt;/a&gt; and trace your request.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;All output gets sent to stdout, so it can be inspected by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker logs -f &amp;lt;container-id|container-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can increase the log output by passing environment variable to the containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SE_OPTS=&#34;--log-level FINE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;--shm-size=&#34;2g&#34;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Why is &lt;code&gt;--shm-size 2g&lt;/code&gt; necessary?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a known workaround to avoid the browser crashing inside a docker container, here are the documented issues for &lt;a href=&#34;https://code.google.com/p/chromium/issues/detail?id=519952&#34;&gt;Chrome&lt;/a&gt; and &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1338771#c10&#34;&gt;Firefox&lt;/a&gt;. The shm size of 2gb is arbitrary but known to work well, your specific use case might need a different value, it is recommended to tune this value according to your needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Headless&lt;/h3&gt; &#xA;&lt;p&gt;If you see the following selenium exceptions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: invalid argument: can&#39;t kill an exited process&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: unknown error: Chrome failed to start: exited abnormally&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The reason &lt;em&gt;might&lt;/em&gt; be that you&#39;ve set the &lt;code&gt;START_XVFB&lt;/code&gt; environment variable to &#34;false&#34;, but forgot to actually run Firefox, Chrome or Edge in headless mode.&lt;/p&gt; &#xA;&lt;h3&gt;Mounting volumes to retrieve downloaded files&lt;/h3&gt; &#xA;&lt;p&gt;A common scenario is mounting a volume to the browser container in order to retrieve downloaded files. This works well in Windows and macOS but not without workarounds in Linux. For more details, check this well documented &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1095&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, while using Linux, you might be starting a container in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; \&#xA;  -v /home/ubuntu/files:/home/seluser/files \&#xA;  selenium/standalone-chrome:4.10.0-20230607&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will mount the host &lt;code&gt;/home/ubuntu/files&lt;/code&gt; directory to the &lt;code&gt;/home/seluser/files&lt;/code&gt; inside the container. The problem happens because the volume will be mounted as &lt;code&gt;root&lt;/code&gt;, and therefore the browser cannot write a file to that directory because it is running under the user &lt;code&gt;seluser&lt;/code&gt;. This happens because that is how Docker mounts volumes in Linux, more details in this &lt;a href=&#34;https://github.com/moby/moby/issues/2259&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A workaround for this is to create the directory on the host and change its permissions &lt;strong&gt;before mounting the volume&lt;/strong&gt;. Depending on your user permissions, you might need to use &lt;code&gt;sudo&lt;/code&gt; for some of these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /home/ubuntu/files&#xA;chown 1200:1201 /home/ubuntu/files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After doing this, you should be able to download files to the mounted directory. If you have a better workaround, please send us a pull request!&lt;/p&gt;</summary>
  </entry>
</feed>