<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T02:21:36Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MichaelCade/90DaysOfDevOps</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/MichaelCade/90DaysOfDevOps</id>
    <link href="https://github.com/MichaelCade/90DaysOfDevOps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is my documenting repository for learning the world of DevOps. I started this journey on the 1st January 2022 and I plan to run to March 31st for a complete 90-day romp on spending an hour a day including weekends to get a foundational knowledge across a lot of different areas that make up DevOps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;90DaysOfDevOps&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/logo.png?raw=true&#34; alt=&#34;90DaysOfDevOps Logo&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;English Version | &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/zh_cn/README.md&#34;&gt;中文版本&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/zh_tw/README.md&#34;&gt;繁體中文版本&lt;/a&gt;| &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/ja/README.md&#34;&gt;日本語版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is used to document my journey on getting a better foundational knowledge of &#34;DevOps&#34;. I will be starting this journey on the 1st January 2022 but the idea is that we take 90 days which just so happens to be January 1st to March 31st.&lt;/p&gt; &#xA;&lt;p&gt;The reason for documenting these days is so that others can take something from it and also hopefully enhance the resources.&lt;/p&gt; &#xA;&lt;p&gt;The goal is to take 90 days, 1 hour each a day, to tackle over 13 areas of &#34;DevOps&#34; to a foundational knowledge.&lt;/p&gt; &#xA;&lt;p&gt;This will &lt;strong&gt;not cover all things&lt;/strong&gt; &#34;DevOps&#34; but it will cover the areas that I feel will benefit my learning and understanding overall.&lt;/p&gt; &#xA;&lt;p&gt;The quickest way to get in touch is going to be via Twitter, my handle is &lt;a href=&#34;https://twitter.com/MichaelCade1&#34;&gt;@MichaelCade1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ♾️ 1 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day01.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What is and why do we use DevOps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ♾️ 2 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day02.md&#34;&gt;Responsibilities of a DevOps Engineer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 3 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day03.md&#34;&gt;DevOps Lifecycle - Application Focused&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 4 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day04.md&#34;&gt;DevOps &amp;amp; Agile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 5 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day05.md&#34;&gt;Plan &amp;gt; Code &amp;gt; Build &amp;gt; Testing &amp;gt; Release &amp;gt; Deploy &amp;gt; Operate &amp;gt; Monitor &amp;gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 6 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day06.md&#34;&gt;DevOps - The real stories&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learning a Programming Language&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 7 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day07.md&#34;&gt;The Big Picture: DevOps &amp;amp; Learning a Programming Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 8 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day08.md&#34;&gt;Setting up your DevOps environment for Go &amp;amp; Hello World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 9 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day09.md&#34;&gt;Let&#39;s explain the Hello World code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 10 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day10.md&#34;&gt;The Go Workspace &amp;amp; Compiling &amp;amp; running code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 11 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day11.md&#34;&gt;Variables, Constants &amp;amp; Data Types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 12 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day12.md&#34;&gt;Getting user input with Pointers and a finished program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 13 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day13.md&#34;&gt;Tweet your progress with our new App&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Knowing Linux Basics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🐧 14 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day14.md&#34;&gt;The Big Picture: DevOps and Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 15 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day15.md&#34;&gt;Linux Commands for DevOps (Actually everyone)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 16 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day16.md&#34;&gt;Managing your Linux System, Filesystem &amp;amp; Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 17 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day17.md&#34;&gt;Text Editors - nano vs vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 18 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day18.md&#34;&gt;SSH &amp;amp; Web Server(LAMP)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 19 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day19.md&#34;&gt;Automate tasks with bash scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 20 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day20.md&#34;&gt;Dev workstation setup - All the pretty things&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Understand Networking&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🌐 21 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day21.md&#34;&gt;The Big Picture: DevOps and Networking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 22 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day22.md&#34;&gt;The OSI Model - The 7 Layers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 23 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day23.md&#34;&gt;Network Protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 24 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day24.md&#34;&gt;Network Automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 25 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day25.md&#34;&gt;Python for Network Automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 26 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day26.md&#34;&gt;Building our Lab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 27 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day27.md&#34;&gt;Getting Hands-On with Python &amp;amp; Network&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stick to one Cloud Provider&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ☁️ 28 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day28.md&#34;&gt;The Big Picture: DevOps &amp;amp; The Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 29 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day29.md&#34;&gt;Microsoft Azure Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 30 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day30.md&#34;&gt;Microsoft Azure Security Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 31 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day31.md&#34;&gt;Microsoft Azure Compute Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 32 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day32.md&#34;&gt;Microsoft Azure Storage &amp;amp; Database Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 33 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day33.md&#34;&gt;Microsoft Azure Networking Models + Azure Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 34 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day34.md&#34;&gt;Microsoft Azure Hands-On Scenarios&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Git Effectively&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📚 35 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day35.md&#34;&gt;The Big Picture: Git - Version Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 36 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day36.md&#34;&gt;Installing &amp;amp; Configuring Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 37 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day37.md&#34;&gt;Gitting to know Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 38 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day38.md&#34;&gt;Staging &amp;amp; Changing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 39 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day39.md&#34;&gt;Viewing, unstaging, discarding &amp;amp; restoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 40 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day40.md&#34;&gt;Social Network for code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 41 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day41.md&#34;&gt;The Open Source Workflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 42 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day42.md&#34;&gt;The Big Picture: Containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 43 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day43.md&#34;&gt;What is Docker &amp;amp; Getting installed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 44 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day44.md&#34;&gt;Docker Images &amp;amp; Hands-On with Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 45 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day45.md&#34;&gt;The anatomy of a Docker Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 46 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day46.md&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 47 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day47.md&#34;&gt;Docker Networking &amp;amp; Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 48 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day48.md&#34;&gt;Alternatives to Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ☸ 49 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day49.md&#34;&gt;The Big Picture: Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 50 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day50.md&#34;&gt;Choosing your Kubernetes platform &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 51 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day51.md&#34;&gt;Deploying your first Kubernetes Cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 52 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day52.md&#34;&gt;Setting up a multinode Kubernetes Cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 53 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day53.md&#34;&gt;Rancher Overview - Hands On&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 54 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day54.md&#34;&gt;Kubernetes Application Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 55 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day55.md&#34;&gt;State and Ingress in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learn Infrastructure as Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🤖 56 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day56.md&#34;&gt;The Big Picture: IaC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 57 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day57.md&#34;&gt;An intro to Terraform &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 58 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day58.md&#34;&gt;HashiCorp Configuration Language (HCL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 59 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day59.md&#34;&gt;Create a VM with Terraform &amp;amp; Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 60 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day60.md&#34;&gt;Docker Containers, Provisioners &amp;amp; Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 61 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day61.md&#34;&gt;Kubernetes &amp;amp; Multiple Environments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 62 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day62.md&#34;&gt;Testing, Tools &amp;amp; Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Automate Configuration Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📜 63 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day63.md&#34;&gt;The Big Picture: Configuration Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 64 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day64.md&#34;&gt;Ansible: Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 65 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day65.md&#34;&gt;Ansible Playbooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 66 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day66.md&#34;&gt;Ansible Playbooks Continued...&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 67 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day67.md&#34;&gt;Using Roles &amp;amp; Deploying a Loadbalancer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 68 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day68.md&#34;&gt;Tags, Variables, Inventory &amp;amp; Database Server config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 69 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day69.md&#34;&gt;All other things Ansible - Automation Controller, AWX, Vault&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Create CI/CD Pipelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🔄 70 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day70.md&#34;&gt;The Big Picture: CI/CD Pipelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 71 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day71.md&#34;&gt;What is Jenkins?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 72 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day72.md&#34;&gt;Getting hands on with Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 73 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day73.md&#34;&gt;Building a Jenkins pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 74 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day74.md&#34;&gt;Hello World - Jenkinsfile App Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 75 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day75.md&#34;&gt;GitHub Actions Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 76 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day76.md&#34;&gt;ArgoCD Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring, Log Management, and Data Visualisation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📈 77 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day77.md&#34;&gt;The Big Picture: Monitoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 78 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day78.md&#34;&gt;Hands-On Monitoring Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 79 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day79.md&#34;&gt;The Big Picture: Log Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 80 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day80.md&#34;&gt;ELK Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 81 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day81.md&#34;&gt;Fluentd &amp;amp; FluentBit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 82 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day82.md&#34;&gt;EFK Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 83 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day83.md&#34;&gt;Data Visualisation - Grafana&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Store &amp;amp; Protect Your Data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 84 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day84.md&#34;&gt;The Big Picture: Data Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 85 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day85.md&#34;&gt;Data Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 86 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day86.md&#34;&gt;Backup all the platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 87 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day87.md&#34;&gt;Hands-On Backup &amp;amp; Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 88 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day88.md&#34;&gt;Application Focused Backups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 89 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day89.md&#34;&gt;Disaster Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 90 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day90.md&#34;&gt;Data &amp;amp; Application Mobility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Shield: &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg?sanitize=true&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#MichaelCade/90DaysOfDevOps&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=MichaelCade/90DaysOfDevOps&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>89luca89/distrobox</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/89luca89/distrobox</id>
    <link href="https://github.com/89luca89/distrobox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use any linux distribution inside your terminal. Enable both backward and forward compatibility with software and freedom to use whatever distribution you’re more comfortable with. Mirror available at: https://gitlab.com/89luca89/distrobox&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/157771834-7423cf9b-8311-4e90-8a79-cd0eff6bd632.png&#34; alt=&#34;distrobox-logo&#34;&gt; &lt;sub&gt;logo credits &lt;a href=&#34;https://github.com/j4ckr3d&#34;&gt;j4ckr3d&lt;/a&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Distrobox&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/89luca89/distrobox/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint&#34;&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/actions/workflows/compatibility.yml&#34;&gt;&lt;img src=&#34;https://github.com/89luca89/distrobox/actions/workflows/compatibility.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/COPYING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/89luca89/distrobox?color=blue&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/89luca89/distrobox&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/distrobox/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/distrobox.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/89luca89/distrobox/help%20wanted?color=blue&amp;amp;label=Help%20Wanted%20Issues&#34; alt=&#34;Github issue needs help&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/89luca89/distrobox/issues?q=is%3Aissue+is%3Aopen+label%3A%22bug%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/89luca89/distrobox/bug?color=red&amp;amp;label=Open%20Bug%20Reports&#34; alt=&#34;GitHub issues by-label&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use any Linux distribution inside your terminal. Enable both backward and forward compatibility with software and freedom to use whatever distribution you’re more comfortable with. Distrobox uses &lt;code&gt;podman&lt;/code&gt; or &lt;code&gt;docker&lt;/code&gt; to create containers using the Linux distribution of your choice. The created container will be tightly integrated with the host, allowing sharing of the HOME directory of the user, external storage, external USB devices and graphical apps (X11/Wayland), and audio.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://distrobox.privatedns.org/#distrobox&#34;&gt;Documentation&lt;/a&gt; - &lt;a href=&#34;https://matrix.to/#/%23distrobox:matrix.org&#34;&gt;Matrix Room&lt;/a&gt; - &lt;a href=&#34;https://t.me/distrobox&#34;&gt;Telegram Group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/144294862-f6684334-ccf4-4e5e-85f8-1d66210a0fff.png&#34; alt=&#34;overview&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#distrobox&#34;&gt;Distrobox&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#what-it-does&#34;&gt;What it does&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#see-it-in-action&#34;&gt;See it in action&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#why&#34;&gt;Why?&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#aims&#34;&gt;Aims&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#uninstallation&#34;&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md&#34;&gt;Compatibility&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#supported-container-managers&#34;&gt;Supported container managers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;Host Distros&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#containers-distros&#34;&gt;Containers Distros&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md#outside-the-distrobox&#34;&gt;Outside the distrobox&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-create.md&#34;&gt;distrobox-create&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-enter.md&#34;&gt;distrobox-enter&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-list.md&#34;&gt;distrobox-list&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-rm.md&#34;&gt;distrobox-rm&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-stop.md&#34;&gt;distrobox-stop&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md#inside-the-distrobox&#34;&gt;Inside the distrobox&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-export.md&#34;&gt;distrobox-export&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-host-exec.md&#34;&gt;distrobox-host-exec&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/distrobox-init.md&#34;&gt;distrobox-init&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/#configure-distrobox&#34;&gt;Configure distrobox&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md&#34;&gt;Useful tips&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#execute-complex-commands-directly-from-distrobox-enter&#34;&gt;Execute complex commands directly from distrobox-enter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#create-a-distrobox-with-a-custom-home-directory&#34;&gt;Create a distrobox with a custom HOME directory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#mount-additional-volumes-in-a-distrobox&#34;&gt;Mount additional volumes in a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#use-a-different-shell-than-the-host&#34;&gt;Use a different shell than the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#duplicate-an-existing-distrobox&#34;&gt;Duplicate an existing distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#export-to-the-host&#34;&gt;Export to the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#execute-commands-on-the-host&#34;&gt;Execute commands on the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#enable-ssh-x-forwarding-when-ssh-ing-in-a-distrobox&#34;&gt;Enable SSH X-Forwarding when SSH-ing in a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#use-distrobox-to-install-different-flatpaks-from-the-host&#34;&gt;Use distrobox to install different flatpaks from the host&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-podman-inside-a-distrobox&#34;&gt;Using podman inside a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-docker-inside-a-distrobox&#34;&gt;Using docker inside a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-init-system-inside-a-distrobox&#34;&gt;Using init system inside a distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-distrobox-as-main-cli&#34;&gt;Using distrobox as main cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#using-a-different-architecture&#34;&gt;Using a different architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#improve-distrobox-enter-performance&#34;&gt;Improve distrobox-enter performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#slow-creation-on-podman-and-image-size-getting-bigger-with-distrobox-create&#34;&gt;Slow creation on podman and image size getting bigger with distrobox-create&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#container-save-and-restore&#34;&gt;Container save and restore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md#check-used-resources&#34;&gt;Check used resources&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/distrobox_gentoo.md&#34;&gt;Build a Gentoo distrobox container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/distrobox_custom.md&#34;&gt;Build a Dedicated distrobox container&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/posts.md&#34;&gt;Posts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/run_latest_gnome_kde_on_distrobox.md&#34;&gt;Run latest GNOME and KDE Plasma using distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/integrate_vscode_distrobox.md&#34;&gt;Integrate VSCode and Distrobox&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/posts/execute_commands_on_host.md&#34;&gt;Execute a command on the Host&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md&#34;&gt;Featured Articles&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md#articles&#34;&gt;Articles&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://fedoramagazine.org/run-distrobox-on-fedora-linux/&#34;&gt;Run Distrobox on Fedora Linux - Fedora Magazine&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.tecmint.com/distrobox-run-any-linux-distribution/&#34;&gt;DistroBox – Run Any Linux Distribution Inside Linux Terminal - TecMint&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.techrepublic.com/article/how-to-quickly-deploy-a-linux-distribution-with-gui-applications-via-a-container/&#34;&gt;Distrobox - How to quickly deploy a Linux distribution with GUI applications via a container&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Distrobox-Clear-Linux&#34;&gt;Using Distrobox To Augment The Package Selection On Clear Linux - Phoronix&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1305326-clear-linux-container-performance-continues-showing-sizable-gains&#34;&gt;Benchmark: benefits of Clear Linux containers (distrobox) - Phoronix&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://phmurphy.com/posts/distrobox-toolbelt/&#34;&gt;Distrobox - A great item in the Linux toolbelt - phmurphy&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md&#34;&gt;Running Other Linux Distros with Distrobox on Fedora Linux - bandithijo&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.ypsidanger.com/day-to-day-advantages-of-fedora-silverblue/&#34;&gt;Day-to-day differences between Fedora Silverblue and Ubuntu - castrojo&#39;s blog&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://cloudyday.tech.blog/2022/05/14/distrobox-is-awesome/&#34;&gt;Distrobox is Awesome - Running Window Manager and Desktop environments using Distrobox&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md#talks&#34;&gt;Talks&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/89luca89/distrobox/files/8598433/distrobox-las-talk.pdf&#34;&gt;Linux App Summit 2022 - Distrobox: Run Any App On Any Distro - BoF&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/featured_articles.md#podcasts&#34;&gt;Podcasts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What it does&lt;/h2&gt; &#xA;&lt;p&gt;Simply put it&#39;s a fancy wrapper around &lt;code&gt;podman&lt;/code&gt; or &lt;code&gt;docker&lt;/code&gt; to create and start containers highly integrated with the hosts.&lt;/p&gt; &#xA;&lt;p&gt;The distrobox environment is based on an OCI image. This image is used to create a container that seamlessly integrates with the rest of the operating system by providing access to the user&#39;s home directory, the Wayland and X11 sockets, networking, removable devices (like USB sticks), systemd journal, SSH agent, D-Bus, ulimits, /dev and the udev database, etc...&lt;/p&gt; &#xA;&lt;p&gt;It implements the same concepts introduced by &lt;a href=&#34;https://github.com/containers/toolbox&#34;&gt;https://github.com/containers/toolbox&lt;/a&gt; but in a simplified way using POSIX sh and aiming at broader compatibility.&lt;/p&gt; &#xA;&lt;p&gt;All the props go to them as they had the great idea to implement this stuff.&lt;/p&gt; &#xA;&lt;p&gt;It is divided into 8 commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-create&lt;/code&gt; - creates the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-enter&lt;/code&gt; - to enter the container&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-list&lt;/code&gt; - to list containers created with distrobox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-rm&lt;/code&gt; - to delete a container created with distrobox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-stop&lt;/code&gt; - to stop a running container created with distrobox&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-init&lt;/code&gt; - the entrypoint of the container (not meant to be used manually)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-export&lt;/code&gt; - it is meant to be used inside the container, useful to export apps and services from the container to the host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;distrobox-host-exec&lt;/code&gt; - to run commands/programs from the host, while inside of the container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It also includes a little wrapper to launch commands with &lt;code&gt;distrobox COMMAND&lt;/code&gt; instead of calling the single files.&lt;/p&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md&#34;&gt;the usage docs here&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md&#34;&gt;see some handy tips on how to use it&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;See it in action&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/castrojo&#34;&gt;castrojo&lt;/a&gt;, you can see Distrobox in action in this explanatory video on his setup with Distrobox, Toolbx, Fedora Silverblue on his project &lt;a href=&#34;https://github.com/castrojo/ublue&#34;&gt;ublue&lt;/a&gt; (check it out!)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Q2PrISAOtbY&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/153680522-f5903607-2854-4cfb-a186-cba7403745bd.png&#34; alt=&#34;Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide a mutable environment on an immutable OS, like Endless OS, Fedora Silverblue, OpenSUSE MicroOS or SteamOS3&lt;/li&gt; &#xA; &lt;li&gt;Provide a locally privileged environment for sudoless setups (eg. company-provided laptops, security reasons, etc...)&lt;/li&gt; &#xA; &lt;li&gt;To mix and match a stable base system (eg. Debian Stable, Ubuntu LTS, RedHat) with a bleeding-edge environment for development or gaming (eg. Arch, OpenSUSE Tumbleweed or Fedora with latest Mesa)&lt;/li&gt; &#xA; &lt;li&gt;Leverage high abundance of curated distro images for docker/podman to manage multiple environments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Refer to the compatiblity list for an overview of supported host&#39;s distro &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;HERE&lt;/a&gt; and container&#39;s distro &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#containers-distros&#34;&gt;HERE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Aims&lt;/h3&gt; &#xA;&lt;p&gt;This project aims to bring &lt;strong&gt;any distro userland to any other distro&lt;/strong&gt; supporting podman or docker. It has been written in POSIX sh to be as portable as possible and not have problems with dependencies and glibc version&#39;s compatibility.&lt;/p&gt; &#xA;&lt;p&gt;Refer &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#supported-container-managers&#34;&gt;HERE&lt;/a&gt; for a list of supported container managers and minimum supported versions.&lt;/p&gt; &#xA;&lt;p&gt;It also aims to enter the container &lt;strong&gt;as fast as possible&lt;/strong&gt;, every millisecond adds up if you use the container as your default environment for your terminal:&lt;/p&gt; &#xA;&lt;p&gt;These are some sample results of &lt;code&gt;distrobox-enter&lt;/code&gt; on the same container on my weak laptop from 2015 with 2 core cpu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Total time for 100 container enters:&#xA;&#xA;  ~$ time (for i in {1..100}; do distrobox-enter --name fedora-toolbox-35 -- whoami; done)&#xA;  real 0m36.209s&#xA;  user 0m6.520s&#xA;  sys 0m4.803s&#xA;&#xA;Mean:&#xA;&#xA;36.209s/100 = ~0.362ms mean time to enter the container&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I would like to keep it always below the &lt;a href=&#34;https://lawsofux.com/doherty-threshold/&#34;&gt;Doherty Treshold&lt;/a&gt; of 400ms.&lt;/p&gt; &#xA;&lt;h4&gt;Security implications&lt;/h4&gt; &#xA;&lt;p&gt;Isolation and sandboxing is &lt;strong&gt;not&lt;/strong&gt; the main aim of the project, on the contrary it aims to tightly integrate the container with the host. The container will have complete access to your home, pen drives and so on, so do not expect it to be highly sandboxed like a plain docker/podman container or a flatpak.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;BE CAREFUL&lt;/strong&gt;: if you use docker, or you use podman with the &lt;code&gt;--root/-r&lt;/code&gt; flag, the containers will run as root, so &lt;strong&gt;root inside the rootful container can modify system stuff outside the container&lt;/strong&gt;, if you have security concern for this, &lt;strong&gt;use podman that runs in rootless mode&lt;/strong&gt;. Rootless docker is still not working as intended and will be included in the future when it will be complete.&lt;/p&gt; &#xA;&lt;p&gt;That said, it is in the works to implement some sort of decoupling with the host, as discussed here: &lt;a href=&#34;https://github.com/89luca89/distrobox/issues/28&#34;&gt;#28 Sandboxed mode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Basic usage&lt;/h1&gt; &#xA;&lt;p&gt;Create a new distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox create -n test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enter created distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox enter test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Execute a command in a distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox enter test -- command-to-execute&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;List running distroboxes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox list&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stop a running distrobox:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox stop test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Remove a distrobox&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;distrobox rm test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can check &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/usage/usage.md&#34;&gt;HERE for more advanced usage&lt;/a&gt; and check a &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/useful_tips.md&#34;&gt;comprehensive list of useful tips HERE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Configure Distrobox&lt;/h1&gt; &#xA;&lt;p&gt;Configuration files can be placed in the following paths, from the least important to the most important:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/usr/share/distrobox/distrobox.conf&lt;/li&gt; &#xA; &lt;li&gt;/etc/distrobox/distrobox.conf&lt;/li&gt; &#xA; &lt;li&gt;${HOME}/.config/distrobox/distrobox.conf&lt;/li&gt; &#xA; &lt;li&gt;${HOME}/.distroboxrc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;container_always_pull=&#34;1&#34;&#xA;container_user_custom_home=&#34;/home/.local/share/container-home-test&#34;&#xA;container_image=&#34;registry.opensuse.org/opensuse/toolbox:latest&#34;&#xA;container_manager=&#34;docker&#34;&#xA;container_name=&#34;test-name-1&#34;&#xA;non_interactive=&#34;1&#34;&#xA;skip_workdir=&#34;0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively it is possible to specify preferences using ENV variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DBX_CONTAINER_ALWAYS_PULL&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_CUSTOM_HOME&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_IMAGE&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_MANAGER&lt;/li&gt; &#xA; &lt;li&gt;DBX_CONTAINER_NAME&lt;/li&gt; &#xA; &lt;li&gt;DBX_NON_INTERACTIVE&lt;/li&gt; &#xA; &lt;li&gt;DBX_SKIP_WORKDIR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Distrobox is packaged in the following distributions, if your distribution is on this list, you can refer to your repos for installation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/distrobox/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/distrobox.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the maintainers for their work: &lt;a href=&#34;https://github.com/M0Rf30&#34;&gt;M0Rf30&lt;/a&gt;, &lt;a href=&#34;https://github.com/alcir&#34;&gt;alcir&lt;/a&gt;, &lt;a href=&#34;https://github.com/dfaggioli&#34;&gt;dfaggioli&lt;/a&gt;, &lt;a href=&#34;https://github.com/AtilaSaraiva&#34;&gt;AtilaSaraiva&lt;/a&gt;, &lt;a href=&#34;https://github.com/michel-slm&#34;&gt;michel-slm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Else, if you like to live your life dangerously, or you want the latest release, you can trust me and simply run this in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sudo sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you want to select a custom directory to install without sudo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sh -s -- --prefix ~/.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively you can clone the project using &lt;code&gt;git clone&lt;/code&gt; or using the latest release &lt;a href=&#34;https://github.com/89luca89/distrobox/releases/latest&#34;&gt;HERE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Enter the directory and run &lt;code&gt;./install&lt;/code&gt;, by default it will attempt to install in &lt;code&gt;~/.local&lt;/code&gt; but if you run the script as root, it will default to &lt;code&gt;/usr/local&lt;/code&gt;. You can specify a custom directory with the &lt;code&gt;--prefix&lt;/code&gt; flag such as &lt;code&gt;./install --prefix ~/.distrobox&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Prefix explained: main distrobox files get installed to &lt;code&gt;${prefix}/bin&lt;/code&gt; whereas the manpages get installed to &lt;code&gt;${prefix}/share/man&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;Host Distros&lt;/a&gt; compatibility list for distro-specific instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Distrobox depends on a container manager to work, you can choose to install either podman or docker. Please look in the &lt;a href=&#34;https://raw.githubusercontent.com/89luca89/distrobox/main/compatibility.md#host-distros&#34;&gt;Compatibility Table&lt;/a&gt; for your distribution notes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Uninstallation&lt;/h2&gt; &#xA;&lt;p&gt;If you installed distrobox using the &lt;code&gt;install&lt;/code&gt; script in the default install directory use this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/uninstall | sudo sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you specified a custom path:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/uninstall | sh -s -- --prefix ~/.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Else if cloned the project using &lt;code&gt;git clone&lt;/code&gt; or using the latest archive release from &lt;a href=&#34;https://github.com/89luca89/distrobox/releases/latest&#34;&gt;HERE&lt;/a&gt;,&lt;/p&gt; &#xA;&lt;p&gt;enter the directory and run &lt;code&gt;./uninstall&lt;/code&gt;, by default it will assume the install directory was &lt;code&gt;/usr/local&lt;/code&gt; if ran as root or &lt;code&gt;~/.local&lt;/code&gt;, you can specify another directory if needed with &lt;code&gt;./uninstall --prefix ~/.local&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/598882/144294113-ab3c62b0-4ff0-488f-8e85-dfecc308e561.png&#34; alt=&#34;distrobox-box&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>nvm-sh/nvm</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/nvm-sh/nvm</id>
    <link href="https://github.com/nvm-sh/nvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nvm-sh/logos&#34;&gt;&lt;img alt=&#34;nvm project logo&#34; src=&#34;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-color.svg?sanitize=true&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Node Version Manager &lt;a href=&#34;https://travis-ci.org/nvm-sh/nvm&#34;&gt;&lt;img src=&#34;https://travis-ci.org/nvm-sh/nvm.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nvm-sh/nvm/releases/tag/v0.39.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-v0.39.1-yellow.svg?sanitize=true&#34; alt=&#34;nvm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/684&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/684/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- To update this table of contents, ensure you have run `npm install` then `npm run doctoc` --&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-and-updating&#34;&gt;Installing and Updating&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#install--update-script&#34;&gt;Install &amp;amp; Update Script&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#additional-notes&#34;&gt;Additional Notes&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-linux&#34;&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-macos&#34;&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#ansible&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#verify-installation&#34;&gt;Verify Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#important-notes&#34;&gt;Important Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#git-install&#34;&gt;Git Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&#34;&gt;Manual Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-upgrade&#34;&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#long-term-support&#34;&gt;Long-term Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#migrating-global-packages-while-installing&#34;&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#default-global-packages-from-file-while-installing&#34;&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#iojs&#34;&gt;io.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#system-version-of-node&#34;&gt;System Version of Node&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#listing-versions&#34;&gt;Listing Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#setting-custom-colors&#34;&gt;Setting Custom Colors&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#persisting-custom-colors&#34;&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#suppressing-colorized-output&#34;&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#restoring-path&#34;&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#set-default-node-version&#34;&gt;Set default node version&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#use-a-mirror-of-node-binaries&#34;&gt;Use a mirror of node binaries&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#nvmrc&#34;&gt;.nvmrc&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#deeper-shell-integration&#34;&gt;Deeper Shell Integration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash&#34;&gt;bash&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#automatically-call-nvm-use&#34;&gt;Automatically call &lt;code&gt;nvm use&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#zsh&#34;&gt;zsh&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file&#34;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#fish&#34;&gt;fish&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file-1&#34;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#running-tests&#34;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#environment-variables&#34;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash-completion&#34;&gt;Bash Completion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage-1&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#compatibility-issues&#34;&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-nvm-on-alpine-linux&#34;&gt;Installing nvm on Alpine Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#uninstalling--removal&#34;&gt;Uninstalling / Removal&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-uninstall&#34;&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#docker-for-development-environment&#34;&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#problems&#34;&gt;Problems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#macos-troubleshooting&#34;&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#copyright-notice&#34;&gt;Copyright notice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different versions of node via the command line.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm use 16&#xA;Now using node v16.9.1 (npm v7.21.1)&#xA;$ node -v&#xA;v16.9.1&#xA;$ nvm use 14&#xA;Now using node v14.18.0 (npm v6.14.15)&#xA;$ node -v&#xA;v14.18.0&#xA;$ nvm install 12&#xA;Now using node v12.22.6 (npm v6.14.5)&#xA;$ node -v&#xA;v12.22.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Simple as that!&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;nvm is a version manager for &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt;, designed to be installed per-user, and invoked per-shell. &lt;code&gt;nvm&lt;/code&gt; works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and &lt;a href=&#34;https://github.com/nvm-sh/nvm#important-notes&#34;&gt;windows WSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;installation-and-update&#34;&gt;&lt;/a&gt; &lt;a id=&#34;install-script&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing and Updating&lt;/h2&gt; &#xA;&lt;h3&gt;Install &amp;amp; Update Script&lt;/h3&gt; &#xA;&lt;p&gt;To &lt;strong&gt;install&lt;/strong&gt; or &lt;strong&gt;update&lt;/strong&gt; nvm, you should run the &lt;a href=&#34;https://github.com/nvm-sh/nvm/raw/v0.39.1/install.sh&#34;&gt;install script&lt;/a&gt;. To do that, you may either download and run the script manually, or use the following cURL or Wget command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running either of the above commands downloads a script and runs it. The script clones the nvm repository to &lt;code&gt;~/.nvm&lt;/code&gt;, and attempts to add the source lines from the snippet below to the correct profile file (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;profile_snippet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$([ -z &#34;${XDG_CONFIG_HOME-}&#34; ] &amp;amp;&amp;amp; printf %s &#34;${HOME}/.nvm&#34; || printf %s &#34;${XDG_CONFIG_HOME}/nvm&#34;)&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Additional Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If the environment variable &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is present, it will place the &lt;code&gt;nvm&lt;/code&gt; files there.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;--no-use&lt;/code&gt; to the end of the above script (...&lt;code&gt;nvm.sh --no-use&lt;/code&gt;) to postpone using &lt;code&gt;nvm&lt;/code&gt; until you manually &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&#34;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can customize the install source, directory, profile, and version using the &lt;code&gt;NVM_SOURCE&lt;/code&gt;, &lt;code&gt;NVM_DIR&lt;/code&gt;, &lt;code&gt;PROFILE&lt;/code&gt;, and &lt;code&gt;NODE_VERSION&lt;/code&gt; variables. Eg: &lt;code&gt;curl ... | NVM_DIR=&#34;path/to/nvm&#34;&lt;/code&gt;. Ensure that the &lt;code&gt;NVM_DIR&lt;/code&gt; does not contain a trailing slash.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The installer can use &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;wget&lt;/code&gt; to download &lt;code&gt;nvm&lt;/code&gt;, whichever is available.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Troubleshooting on Linux&lt;/h4&gt; &#xA;&lt;p&gt;On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;bash&lt;/em&gt;: &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;zsh&lt;/em&gt;: &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt;: &lt;code&gt;. ~/.profile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;These should pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h4&gt;Troubleshooting on macOS&lt;/h4&gt; &#xA;&lt;p&gt;Since OS X 10.9, &lt;code&gt;/usr/bin/git&lt;/code&gt; has been preset by Xcode command line tools, which means we can&#39;t properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it&#39;ll fail. (see &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/1782&#34;&gt;#1782&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;If you get &lt;code&gt;nvm: command not found&lt;/code&gt; after running the install script, one of the following might be the reason:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Since macOS 10.15, the default shell is &lt;code&gt;zsh&lt;/code&gt; and nvm will look for &lt;code&gt;.zshrc&lt;/code&gt; to update, none is installed by default. Create one with &lt;code&gt;touch ~/.zshrc&lt;/code&gt; and run the install script again.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use bash, the previous default shell, your system may not have a &lt;code&gt;.bash_profile&lt;/code&gt; file where the command is set up. Create one with &lt;code&gt;touch ~/.bash_profile&lt;/code&gt; and run the install script again. Then, run &lt;code&gt;source ~/.bash_profile&lt;/code&gt; to pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You have previously used &lt;code&gt;bash&lt;/code&gt;, but you have &lt;code&gt;zsh&lt;/code&gt; installed. You need to manually add &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&#34;&gt;these lines&lt;/a&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; and run &lt;code&gt;. ~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You might need to restart your terminal instance or run &lt;code&gt;. ~/.nvm/nvm.sh&lt;/code&gt;. Restarting your terminal/opening a new tab/window, or running the source command will load the command and the new configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the above didn&#39;t help, you might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the above doesn&#39;t fix the problem, you may try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use bash, it may be that your &lt;code&gt;.bash_profile&lt;/code&gt; (or &lt;code&gt;~/.profile&lt;/code&gt;) does not source your &lt;code&gt;~/.bashrc&lt;/code&gt; properly. You could fix this by adding &lt;code&gt;source ~/&amp;lt;your_profile_file&amp;gt;&lt;/code&gt; to it or follow the next step below.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try adding &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#profile_snippet&#34;&gt;the snippet from the install section&lt;/a&gt;, that finds the correct nvm directory and loads nvm, to your usual profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For more information about this issue and possible workarounds, please &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/576&#34;&gt;refer here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For Macs with the M1 chip, node started providing &lt;strong&gt;arm64&lt;/strong&gt; arch darwin packages since v16.0.0. For earlier versions, there were only &lt;strong&gt;darwin_x64&lt;/strong&gt; packages available but no &lt;strong&gt;darwin_arm64&lt;/strong&gt;. If you are facing issues installing node using &lt;code&gt;nvm&lt;/code&gt;, you may want to update to v16 or later.&lt;/p&gt; &#xA;&lt;h4&gt;Ansible&lt;/h4&gt; &#xA;&lt;p&gt;You can use a task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: nvm&#xA;  shell: &amp;gt;&#xA;    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;  args:&#xA;    creates: &#34;{{ ansible_env.HOME }}/.nvm/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verify Installation&lt;/h3&gt; &#xA;&lt;p&gt;To verify that nvm has been installed, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;command -v nvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which should output &lt;code&gt;nvm&lt;/code&gt; if the installation was successful. Please note that &lt;code&gt;which nvm&lt;/code&gt; will not work, since &lt;code&gt;nvm&lt;/code&gt; is a sourced shell function, not an executable binary.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again.&lt;/p&gt; &#xA;&lt;h3&gt;Important Notes&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re running a system without prepackaged binary available, which means you&#39;re going to install nodejs or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the &lt;code&gt;build-essential&lt;/code&gt; and &lt;code&gt;libssl-dev&lt;/code&gt; packages work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; also support Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;GitBash&lt;/a&gt; (MSYS) or &lt;a href=&#34;https://cygwin.com&#34;&gt;Cygwin&lt;/a&gt;. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coreybutler/nvm-windows&#34;&gt;nvm-windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marcelklehr/nodist&#34;&gt;nodist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jasongin/nvs&#34;&gt;nvs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; does not support &lt;a href=&#34;https://fishshell.com&#34;&gt;Fish&lt;/a&gt; either (see &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/303&#34;&gt;#303&lt;/a&gt;). Alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edc/bass&#34;&gt;bass&lt;/a&gt; allows you to use utilities written for Bash in fish shell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brigand/fast-nvm-fish&#34;&gt;fast-nvm-fish&lt;/a&gt; only works with version numbers (not aliases) but doesn&#39;t significantly slow your shell startup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/derekstavis/plugin-nvm&#34;&gt;plugin-nvm&lt;/a&gt; plugin for &lt;a href=&#34;https://github.com/oh-my-fish/oh-my-fish&#34;&gt;Oh My Fish&lt;/a&gt;, which makes nvm and its completions available in fish shell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fisherman/fnm&#34;&gt;fnm&lt;/a&gt; - &lt;a href=&#34;https://github.com/fisherman/fisherman&#34;&gt;fisherman&lt;/a&gt;-based version manager for fish&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FabioAntunes/fish-nvm&#34;&gt;fish-nvm&lt;/a&gt; - Wrapper around nvm for fish, delays sourcing nvm until it&#39;s actually used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need &lt;a href=&#34;https://www.freshports.org/www/node/files/patch-deps_v8_src_base_platform_platform-posix.cc&#34;&gt;patches&lt;/a&gt;; see the issue ticket:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/900&#34;&gt;[#900] [Bug] nodejs on FreeBSD may need to be patched&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nodejs/node/issues/3716&#34;&gt;nodejs/node#3716&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the &lt;code&gt;Command Line Tools&lt;/code&gt;. You can check out this blog post on how to just that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/&#34;&gt;How to Install Command Line Tools in OS X Mavericks &amp;amp; Yosemite (Without Xcode)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you have/had a &#34;system&#34; node installed and want to install modules globally, keep in mind that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using &lt;code&gt;nvm&lt;/code&gt; you do not need &lt;code&gt;sudo&lt;/code&gt; to globally install a module with &lt;code&gt;npm -g&lt;/code&gt;, so instead of doing &lt;code&gt;sudo npm install -g grunt&lt;/code&gt;, do instead &lt;code&gt;npm install -g grunt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you have an &lt;code&gt;~/.npmrc&lt;/code&gt; file, make sure it does not contain any &lt;code&gt;prefix&lt;/code&gt; settings (which is not compatible with &lt;code&gt;nvm&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;You can (but should not?) keep your previous &#34;system&#34; node install, but &lt;code&gt;nvm&lt;/code&gt; will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using &lt;code&gt;/usr/local/lib/node_modules/*&lt;/code&gt; VS your user account using &lt;code&gt;~/.nvm/versions/node/vX.X.X/lib/node_modules/*&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Homebrew installation is not supported. If you have issues with homebrew-installed &lt;code&gt;nvm&lt;/code&gt;, please &lt;code&gt;brew uninstall&lt;/code&gt; it, and install it using the instructions below, before filing an issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re using &lt;code&gt;zsh&lt;/code&gt; you can easily install &lt;code&gt;nvm&lt;/code&gt; as a zsh plugin. Install &lt;a href=&#34;https://github.com/lukechilds/zsh-nvm&#34;&gt;&lt;code&gt;zsh-nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm upgrade&lt;/code&gt; to upgrade.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Git versions before v1.7 may face a problem of cloning &lt;code&gt;nvm&lt;/code&gt; source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to &lt;a href=&#34;https://github.com/git/git/commit/5a7d5b683f869d3e3884a89775241afa515da9e7&#34;&gt;v1.17.10&lt;/a&gt; can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub&#39;s &lt;a href=&#34;https://help.github.com/articles/https-cloning-errors/&#34;&gt;HTTPS cloning errors&lt;/a&gt; article.&lt;/p&gt; &#xA;&lt;h3&gt;Git Install&lt;/h3&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt; installed (requires git v1.7.10+):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone this repo in the root of your user profile&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cd ~/&lt;/code&gt; from anywhere then &lt;code&gt;git clone https://github.com/nvm-sh/nvm.git .nvm&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;cd ~/.nvm&lt;/code&gt; and check out the latest version with &lt;code&gt;git checkout v0.39.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;activate &lt;code&gt;nvm&lt;/code&gt; by sourcing it from your shell: &lt;code&gt;. ./nvm.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34;  # This loads nvm&#xA;[ -s &#34;$NVM_DIR/bash_completion&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/bash_completion&#34;  # This loads nvm bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Install&lt;/h3&gt; &#xA;&lt;p&gt;For a fully manual install, execute the following lines to first clone the &lt;code&gt;nvm&lt;/code&gt; repository into &lt;code&gt;$HOME/.nvm&lt;/code&gt;, and then load &lt;code&gt;nvm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34; &amp;amp;&amp;amp; (&#xA;  git clone https://github.com/nvm-sh/nvm.git &#34;$NVM_DIR&#34;&#xA;  cd &#34;$NVM_DIR&#34;&#xA;  git checkout `git describe --abbrev=0 --tags --match &#34;v[0-9]*&#34; $(git rev-list --tags --max-count=1)`&#xA;) &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;[ -s &#34;$NVM_DIR/bash_completion&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/bash_completion&#34;  # This loads nvm bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Upgrade&lt;/h3&gt; &#xA;&lt;p&gt;For manual upgrade with &lt;code&gt;git&lt;/code&gt; (requires git v1.7.10+):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;change to the &lt;code&gt;$NVM_DIR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;pull down the latest changes&lt;/li&gt; &#xA; &lt;li&gt;check out the latest version&lt;/li&gt; &#xA; &lt;li&gt;activate the new version&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;(&#xA;  cd &#34;$NVM_DIR&#34;&#xA;  git fetch --tags origin&#xA;  git checkout `git describe --abbrev=0 --tags --match &#34;v[0-9]*&#34; $(git rev-list --tags --max-count=1)`&#xA;) &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To download, compile, and install the latest release of node, do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install node # &#34;node&#34; is an alias for the latest version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a specific version of node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install 14.7.0 # or 16.3.0, 12.22.1, etc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first version installed becomes the default. New shells will start with the default version of node (e.g., &lt;code&gt;nvm alias default&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can list available versions using &lt;code&gt;ls-remote&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls-remote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then in any new shell just use the installed version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm use node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can just run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm run node --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can run any arbitrary command in a subshell with the desired version of node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm exec 4.2 node --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also get the path to the executable to where it was installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm which 12.22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In place of a version pointer like &#34;14.7&#34; or &#34;16.3&#34; or &#34;12.22.1&#34;, you can use the following special default aliases with &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm which&lt;/code&gt;, etc:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: this installs the latest version of &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iojs&lt;/code&gt;: this installs the latest version of &lt;a href=&#34;https://iojs.org/en/&#34;&gt;&lt;code&gt;io.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: this alias is deprecated, and only truly applies to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.12&lt;/code&gt; and earlier. Currently, this is an alias for &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unstable&lt;/code&gt;: this alias points to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.11&lt;/code&gt; - the last &#34;unstable&#34; node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Long-term Support&lt;/h3&gt; &#xA;&lt;p&gt;Node has a &lt;a href=&#34;https://github.com/nodejs/Release#release-schedule&#34;&gt;schedule&lt;/a&gt; for long-term support (LTS) You can reference LTS versions in aliases and &lt;code&gt;.nvmrc&lt;/code&gt; files with the notation &lt;code&gt;lts/*&lt;/code&gt; for the latest LTS, and &lt;code&gt;lts/argon&lt;/code&gt; for LTS releases from the &#34;argon&#34; line, for example. In addition, the following commands support LTS arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm install --lts&lt;/code&gt; / &lt;code&gt;nvm install --lts=argon&lt;/code&gt; / &lt;code&gt;nvm install &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm install lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm uninstall --lts&lt;/code&gt; / &lt;code&gt;nvm uninstall --lts=argon&lt;/code&gt; / &lt;code&gt;nvm uninstall &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm uninstall lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm use --lts&lt;/code&gt; / &lt;code&gt;nvm use --lts=argon&lt;/code&gt; / &lt;code&gt;nvm use &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm use lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm exec --lts&lt;/code&gt; / &lt;code&gt;nvm exec --lts=argon&lt;/code&gt; / &lt;code&gt;nvm exec &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm exec lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm run --lts&lt;/code&gt; / &lt;code&gt;nvm run --lts=argon&lt;/code&gt; / &lt;code&gt;nvm run &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm run lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm ls-remote --lts&lt;/code&gt; / &lt;code&gt;nvm ls-remote --lts=argon&lt;/code&gt; &lt;code&gt;nvm ls-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm ls-remote lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm version-remote --lts&lt;/code&gt; / &lt;code&gt;nvm version-remote --lts=argon&lt;/code&gt; / &lt;code&gt;nvm version-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm version-remote lts/argon&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any time your local copy of &lt;code&gt;nvm&lt;/code&gt; connects to &lt;a href=&#34;https://nodejs.org&#34;&gt;https://nodejs.org&lt;/a&gt;, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under &lt;code&gt;$NVM_DIR/alias/lts&lt;/code&gt;), are managed by &lt;code&gt;nvm&lt;/code&gt;, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.&lt;/p&gt; &#xA;&lt;p&gt;To get the latest LTS version of node and migrate your existing installed packages, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install &#39;lts/*&#39; --reinstall-packages-from=current&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Migrating Global Packages While Installing&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install a new version of Node.js and migrate npm packages from a previous version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install node --reinstall-packages-from=node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will first use &#34;nvm version node&#34; to identify the current version you&#39;re migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs &#34;nvm reinstall-packages&#34; to reinstall the npm packages from your prior version of Node to the new one.&lt;/p&gt; &#xA;&lt;p&gt;You can also install and migrate npm packages from specific versions of Node like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install 6 --reinstall-packages-from=5&#xA;nvm install v4.2 --reinstall-packages-from=iojs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that reinstalling packages &lt;em&gt;explicitly does not update the npm version&lt;/em&gt; — this is to ensure that npm isn&#39;t accidentally upgraded to a broken version for the new node version.&lt;/p&gt; &#xA;&lt;p&gt;To update npm at the same time add the &lt;code&gt;--latest-npm&lt;/code&gt; flag, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install &#39;lts/*&#39; --reinstall-packages-from=default --latest-npm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, you can at any time run the following command to get the latest supported npm version on the current node version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install-latest-npm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve already gotten an error to the effect of &#34;npm does not support Node.js&#34;, you&#39;ll need to (1) revert to a previous node version (&lt;code&gt;nvm ls&lt;/code&gt; &amp;amp; &lt;code&gt;nvm use &amp;lt;your latest _working_ version from the ls&amp;gt;&lt;/code&gt;, (2) delete the newly created node version (&lt;code&gt;nvm uninstall &amp;lt;your _broken_ version of node from the ls&amp;gt;&lt;/code&gt;), then (3) rerun your &lt;code&gt;nvm install&lt;/code&gt; with the &lt;code&gt;--latest-npm&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h3&gt;Default Global Packages From File While Installing&lt;/h3&gt; &#xA;&lt;p&gt;If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file &lt;code&gt;$NVM_DIR/default-packages&lt;/code&gt;. You can add anything npm would accept as a package argument on the command line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# $NVM_DIR/default-packages&#xA;&#xA;rimraf&#xA;object-inspect@1.0.2&#xA;stevemao/left-pad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;io.js&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install &lt;a href=&#34;https://github.com/iojs/io.js/&#34;&gt;io.js&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install iojs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install a new version of io.js and migrate npm packages from a previous version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install iojs --reinstall-packages-from=iojs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same guidelines mentioned for migrating npm packages in node are applicable to io.js.&lt;/p&gt; &#xA;&lt;h3&gt;System Version of Node&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the system-installed version of node, you can use the special default alias &#34;system&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm use system&#xA;nvm run system --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Listing Versions&lt;/h3&gt; &#xA;&lt;p&gt;If you want to see what versions are installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see what versions are available to install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls-remote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Custom Colors&lt;/h3&gt; &#xA;&lt;p&gt;You can set five colors that will be used to display version and alias information. These colors replace the default colors. Initial colors are: g b y r e&lt;/p&gt; &#xA;&lt;p&gt;Color codes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;r/R = red / bold red&#xA;&#xA;g/G = green / bold green&#xA;&#xA;b/B = blue / bold blue&#xA;&#xA;c/C = cyan / bold cyan&#xA;&#xA;m/M = magenta / bold magenta&#xA;&#xA;y/Y = yellow / bold yellow&#xA;&#xA;k/K = black / bold black&#xA;&#xA;e/W = light grey / white&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm set-colors rgBcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Persisting custom colors&lt;/h4&gt; &#xA;&lt;p&gt;If you want the custom colors to persist after terminating the shell, export the &lt;code&gt;NVM_COLORS&lt;/code&gt; variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_COLORS=&#39;cmgRY&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Suppressing colorized output&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm help (or -h or --help)&lt;/code&gt;, &lt;code&gt;nvm ls&lt;/code&gt;, &lt;code&gt;nvm ls-remote&lt;/code&gt; and &lt;code&gt;nvm alias&lt;/code&gt; usually produce colorized output. You can disable colors with the &lt;code&gt;--no-colors&lt;/code&gt; option (or by setting the environment variable &lt;code&gt;TERM=dumb&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls --no-colors&#xA;nvm help --no-colors&#xA;TERM=dumb nvm ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Restoring PATH&lt;/h4&gt; &#xA;&lt;p&gt;To restore your PATH, you can deactivate it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm deactivate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Set default node version&lt;/h4&gt; &#xA;&lt;p&gt;To set a default Node version to be used in any new shell, use the alias &#39;default&#39;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm alias default node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use a mirror of node binaries&lt;/h4&gt; &#xA;&lt;p&gt;To use a mirror of the node binaries, set &lt;code&gt;$NVM_NODEJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist&#xA;nvm install node&#xA;&#xA;NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a mirror of the io.js binaries, set &lt;code&gt;$NVM_IOJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist&#xA;nvm install iojs-v1.0.3&#xA;&#xA;NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; will not, by default, create a &#34;current&#34; symlink. Set &lt;code&gt;$NVM_SYMLINK_CURRENT&lt;/code&gt; to &#34;true&#34; to enable this behavior, which is sometimes useful for IDEs. Note that using &lt;code&gt;nvm&lt;/code&gt; in multiple shell tabs with this environment variable enabled can cause race conditions.&lt;/p&gt; &#xA;&lt;h3&gt;.nvmrc&lt;/h3&gt; &#xA;&lt;p&gt;You can create a &lt;code&gt;.nvmrc&lt;/code&gt; file containing a node version number (or any other string that &lt;code&gt;nvm&lt;/code&gt; understands; see &lt;code&gt;nvm --help&lt;/code&gt; for details) in the project root directory (or any parent directory). Afterwards, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, and &lt;code&gt;nvm which&lt;/code&gt; will use the version specified in the &lt;code&gt;.nvmrc&lt;/code&gt; file if no version is supplied on the command line.&lt;/p&gt; &#xA;&lt;p&gt;For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ echo &#34;5.9&#34; &amp;gt; .nvmrc&#xA;&#xA;$ echo &#34;lts/*&#34; &amp;gt; .nvmrc # to default to the latest LTS version&#xA;&#xA;$ echo &#34;node&#34; &amp;gt; .nvmrc # to default to the latest version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[NB these examples assume a POSIX-compliant shell version of &lt;code&gt;echo&lt;/code&gt;. If you use a Windows &lt;code&gt;cmd&lt;/code&gt; development environment, eg the &lt;code&gt;.nvmrc&lt;/code&gt; file is used to configure a remote Linux deployment, then keep in mind the &lt;code&gt;&#34;&lt;/code&gt;s will be copied leading to an invalid file. Remove them.]&lt;/p&gt; &#xA;&lt;p&gt;Then when you run nvm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm use&#xA;Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;&#xA;Now using node v5.9.1 (npm v3.7.3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; et. al. will traverse directory structure upwards from the current directory looking for the &lt;code&gt;.nvmrc&lt;/code&gt; file. In other words, running &lt;code&gt;nvm use&lt;/code&gt; et. al. in any subdirectory of a directory with an &lt;code&gt;.nvmrc&lt;/code&gt; will result in that &lt;code&gt;.nvmrc&lt;/code&gt; being utilized.&lt;/p&gt; &#xA;&lt;p&gt;The contents of a &lt;code&gt;.nvmrc&lt;/code&gt; file &lt;strong&gt;must&lt;/strong&gt; be the &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; (as described by &lt;code&gt;nvm --help&lt;/code&gt;) followed by a newline. No trailing spaces are allowed, and the trailing newline is required.&lt;/p&gt; &#xA;&lt;h3&gt;Deeper Shell Integration&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/wbyoung/avn&#34;&gt;&lt;code&gt;avn&lt;/code&gt;&lt;/a&gt; to deeply integrate into your shell and automatically invoke &lt;code&gt;nvm&lt;/code&gt; when changing directories. &lt;code&gt;avn&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. Please &lt;a href=&#34;https://github.com/wbyoung/avn/issues/new&#34;&gt;report issues to the &lt;code&gt;avn&lt;/code&gt; team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer a lighter-weight solution, the recipes below have been contributed by &lt;code&gt;nvm&lt;/code&gt; users. They are &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. We are, however, accepting pull requests for more examples.&lt;/p&gt; &#xA;&lt;h4&gt;bash&lt;/h4&gt; &#xA;&lt;h5&gt;Automatically call &lt;code&gt;nvm use&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Put the following at the end of your &lt;code&gt;$HOME/.bashrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cdnvm() {&#xA;    command cd &#34;$@&#34;;&#xA;    nvm_path=$(nvm_find_up .nvmrc | tr -d &#39;\n&#39;)&#xA;&#xA;    # If there are no .nvmrc file, use the default nvm version&#xA;    if [[ ! $nvm_path = *[^[:space:]]* ]]; then&#xA;&#xA;        declare default_version;&#xA;        default_version=$(nvm version default);&#xA;&#xA;        # If there is no default version, set it to `node`&#xA;        # This will use the latest version on your machine&#xA;        if [[ $default_version == &#34;N/A&#34; ]]; then&#xA;            nvm alias default node;&#xA;            default_version=$(nvm version default);&#xA;        fi&#xA;&#xA;        # If the current version is not the default version, set it to use the default version&#xA;        if [[ $(nvm current) != &#34;$default_version&#34; ]]; then&#xA;            nvm use default;&#xA;        fi&#xA;&#xA;    elif [[ -s $nvm_path/.nvmrc &amp;amp;&amp;amp; -r $nvm_path/.nvmrc ]]; then&#xA;        declare nvm_version&#xA;        nvm_version=$(&amp;lt;&#34;$nvm_path&#34;/.nvmrc)&#xA;&#xA;        declare locally_resolved_nvm_version&#xA;        # `nvm ls` will check all locally-available versions&#xA;        # If there are multiple matching versions, take the latest one&#xA;        # Remove the `-&amp;gt;` and `*` characters and spaces&#xA;        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found&#xA;        locally_resolved_nvm_version=$(nvm ls --no-colors &#34;$nvm_version&#34; | tail -1 | tr -d &#39;\-&amp;gt;*&#39; | tr -d &#39;[:space:]&#39;)&#xA;&#xA;        # If it is not already installed, install it&#xA;        # `nvm install` will implicitly use the newly-installed version&#xA;        if [[ &#34;$locally_resolved_nvm_version&#34; == &#34;N/A&#34; ]]; then&#xA;            nvm install &#34;$nvm_version&#34;;&#xA;        elif [[ $(nvm current) != &#34;$locally_resolved_nvm_version&#34; ]]; then&#xA;            nvm use &#34;$nvm_version&#34;;&#xA;        fi&#xA;    fi&#xA;}&#xA;alias cd=&#39;cdnvm&#39;&#xA;cd &#34;$PWD&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This alias would search &#39;up&#39; from your current directory in order to detect a &lt;code&gt;.nvmrc&lt;/code&gt; file. If it finds it, it will switch to that version; if not, it will use the default version.&lt;/p&gt; &#xA;&lt;h4&gt;zsh&lt;/h4&gt; &#xA;&lt;h5&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h5&gt; &#xA;&lt;p&gt;Put this into your &lt;code&gt;$HOME/.zshrc&lt;/code&gt; to call &lt;code&gt;nvm use&lt;/code&gt; automatically whenever you enter a directory that contains an &lt;code&gt;.nvmrc&lt;/code&gt; file with a string telling nvm which node to &lt;code&gt;use&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;# place this after nvm initialization!&#xA;autoload -U add-zsh-hook&#xA;load-nvmrc() {&#xA;  local node_version=&#34;$(nvm version)&#34;&#xA;  local nvmrc_path=&#34;$(nvm_find_nvmrc)&#34;&#xA;&#xA;  if [ -n &#34;$nvmrc_path&#34; ]; then&#xA;    local nvmrc_node_version=$(nvm version &#34;$(cat &#34;${nvmrc_path}&#34;)&#34;)&#xA;&#xA;    if [ &#34;$nvmrc_node_version&#34; = &#34;N/A&#34; ]; then&#xA;      nvm install&#xA;    elif [ &#34;$nvmrc_node_version&#34; != &#34;$node_version&#34; ]; then&#xA;      nvm use&#xA;    fi&#xA;  elif [ &#34;$node_version&#34; != &#34;$(nvm version default)&#34; ]; then&#xA;    echo &#34;Reverting to nvm default version&#34;&#xA;    nvm use default&#xA;  fi&#xA;}&#xA;add-zsh-hook chpwd load-nvmrc&#xA;load-nvmrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;fish&lt;/h4&gt; &#xA;&lt;h5&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h5&gt; &#xA;&lt;p&gt;This requires that you have &lt;a href=&#34;https://github.com/edc/bass&#34;&gt;bass&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;# ~/.config/fish/functions/nvm.fish&#xA;function nvm&#xA;  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm $argv&#xA;end&#xA;&#xA;# ~/.config/fish/functions/nvm_find_nvmrc.fish&#xA;function nvm_find_nvmrc&#xA;  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm_find_nvmrc&#xA;end&#xA;&#xA;# ~/.config/fish/functions/load_nvm.fish&#xA;function load_nvm --on-variable=&#34;PWD&#34;&#xA;  set -l default_node_version (nvm version default)&#xA;  set -l node_version (nvm version)&#xA;  set -l nvmrc_path (nvm_find_nvmrc)&#xA;  if test -n &#34;$nvmrc_path&#34;&#xA;    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))&#xA;    if test &#34;$nvmrc_node_version&#34; = &#34;N/A&#34;&#xA;      nvm install (cat $nvmrc_path)&#xA;    else if test &#34;$nvmrc_node_version&#34; != &#34;$node_version&#34;&#xA;      nvm use $nvmrc_node_version&#xA;    end&#xA;  else if test &#34;$node_version&#34; != &#34;$default_node_version&#34;&#xA;    echo &#34;Reverting to default Node version&#34;&#xA;    nvm use default&#xA;  end&#xA;end&#xA;&#xA;# ~/.config/fish/config.fish&#xA;# You must call it on initialization or listening to directory switching won&#39;t work&#xA;load_nvm &amp;gt; /dev/stderr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;Tests are written in &lt;a href=&#34;https://github.com/scraperwiki/urchin&#34;&gt;Urchin&lt;/a&gt;. Install Urchin (and other dependencies) like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are slow tests and fast tests. The slow tests do things like install node and check that the right versions are used. The fast tests fake this to test things like aliases and uninstalling. From the root of the nvm git repository, run the fast tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test/fast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the slow tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test/slow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all of the tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Nota bene: Avoid running nvm while the tests are running.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;nvm exposes the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_DIR&lt;/code&gt; - nvm&#39;s installation directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_BIN&lt;/code&gt; - where node, npm, and global packages for the active version of node are installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_INC&lt;/code&gt; - node&#39;s include file directory (useful for building C/C++ addons for node).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_CD_FLAGS&lt;/code&gt; - used to maintain compatibility with zsh.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_RC_VERSION&lt;/code&gt; - version from .nvmrc file if being used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, nvm modifies &lt;code&gt;PATH&lt;/code&gt;, and, if present, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;NODE_PATH&lt;/code&gt; when changing versions.&lt;/p&gt; &#xA;&lt;h2&gt;Bash Completion&lt;/h2&gt; &#xA;&lt;p&gt;To activate, you need to source &lt;code&gt;bash_completion&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Put the above sourcing line just below the sourcing line for nvm in your profile (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;nvm:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias               deactivate          install             list-remote         reinstall-packages  uninstall           version&#xA;cache               exec                install-latest-npm  ls                  run                 unload              version-remote&#xA;current             help                list                ls-remote           unalias             use                 which&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;nvm alias:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;default      iojs         lts/*        lts/argon    lts/boron    lts/carbon   lts/dubnium  lts/erbium   node         stable       unstable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm alias my_alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;v10.22.0       v12.18.3      v14.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;nvm use:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm use&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;nvm uninstall:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm uninstall&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compatibility Issues&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; will encounter some issues if you have some non-default settings set. (see &lt;a href=&#34;https://github.com/creationix/nvm/issues/606&#34;&gt;#606&lt;/a&gt;) The following are known to cause issues:&lt;/p&gt; &#xA;&lt;p&gt;Inside &lt;code&gt;~/.npmrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;prefix=&#39;some/path&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Environment Variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$NPM_CONFIG_PREFIX&#xA;$PREFIX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Shell settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing nvm on Alpine Linux&lt;/h2&gt; &#xA;&lt;p&gt;In order to provide the best performance (and other optimizations), nvm will download and install pre-compiled binaries for Node (and npm) when you run &lt;code&gt;nvm install X&lt;/code&gt;. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).&lt;/p&gt; &#xA;&lt;p&gt;Alpine Linux, unlike mainstream/traditional Linux distributions, is based on &lt;a href=&#34;https://www.busybox.net/&#34;&gt;BusyBox&lt;/a&gt;, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - &lt;a href=&#34;https://www.musl-libc.org/&#34;&gt;musl&lt;/a&gt;. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply &lt;code&gt;nvm install X&lt;/code&gt; on Alpine Linux and expect the downloaded binary to run correctly - you&#39;ll likely see &#34;...does not exist&#34; errors if you try that.&lt;/p&gt; &#xA;&lt;p&gt;There is a &lt;code&gt;-s&lt;/code&gt; flag for &lt;code&gt;nvm install&lt;/code&gt; which requests nvm download Node source and compile it locally.&lt;/p&gt; &#xA;&lt;p&gt;If installing nvm on Alpine Linux &lt;em&gt;is&lt;/em&gt; still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils&#xA;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.&lt;/p&gt; &#xA;&lt;p&gt;As a potential alternative, @mhart (a Node contributor) has some &lt;a href=&#34;https://github.com/mhart/alpine-node&#34;&gt;Docker images for Alpine Linux with Node and optionally, npm, pre-installed&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;removal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling / Removal&lt;/h2&gt; &#xA;&lt;h3&gt;Manual Uninstall&lt;/h3&gt; &#xA;&lt;p&gt;To remove &lt;code&gt;nvm&lt;/code&gt; manually, execute the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rm -rf &#34;$NVM_DIR&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; (or other shell resource config) and remove the lines below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker For Development Environment&lt;/h2&gt; &#xA;&lt;p&gt;To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 18.04 base image, prepared with essential and useful tools for &lt;code&gt;nvm&lt;/code&gt; development, to build the docker image of the environment, run the docker command at the root of &lt;code&gt;nvm&lt;/code&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker build -t nvm-dev .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will package your current nvm repository with our pre-defined development environment into a docker image named &lt;code&gt;nvm-dev&lt;/code&gt;, once it&#39;s built with success, validate your image via &lt;code&gt;docker images&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker images&#xA;&#xA;REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE&#xA;nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you got no error message, now you can easily involve in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run -h nvm-dev -it nvm-dev&#xA;&#xA;nvm@nvm-dev:~/.nvm$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that it&#39;ll take about 8 minutes to build the image and the image size would be about 650MB, so it&#39;s not suitable for production usage.&lt;/p&gt; &#xA;&lt;p&gt;For more information and documentation about docker, please refer to its official website:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Problems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you try to install a node version and the installation fails, be sure to run &lt;code&gt;nvm cache clear&lt;/code&gt; to delete cached node downloads, or you might get an error like the following:&lt;/p&gt; &lt;p&gt;curl: (33) HTTP server doesn&#39;t seem to support byte ranges. Cannot resume.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Where&#39;s my &lt;code&gt;sudo node&lt;/code&gt;? Check out &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/43&#34;&gt;#43&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don&#39;t work due to incompatibility of shared libs. In such cases, use &lt;code&gt;-s&lt;/code&gt; option to force install from source:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install -s 0.8.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If setting the &lt;code&gt;default&lt;/code&gt; alias does not establish the node version in new shells (i.e. &lt;code&gt;nvm current&lt;/code&gt; yields &lt;code&gt;system&lt;/code&gt;), ensure that the system&#39;s node &lt;code&gt;PATH&lt;/code&gt; is set before the &lt;code&gt;nvm.sh&lt;/code&gt; source line in your shell profile (see &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/658&#34;&gt;#658&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;macOS Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;nvm node version not found in vim shell&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you set node version to a version other than your system node version &lt;code&gt;nvm use 6.2.1&lt;/code&gt; and open vim and run &lt;code&gt;:!node -v&lt;/code&gt; you should see &lt;code&gt;v6.2.1&lt;/code&gt; if you see your system version &lt;code&gt;v0.12.7&lt;/code&gt;. You need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo chmod ugo-x /usr/libexec/path_helper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More on this issue in &lt;a href=&#34;https://github.com/dotphiles/dotzsh#mac-os-x&#34;&gt;dotphiles/dotzsh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nvm is not compatible with the npm config &#34;prefix&#34; option&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some solutions for this issue can be found &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/1245&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is one more edge case causing this issue, and that&#39;s a &lt;strong&gt;mismatch between the &lt;code&gt;$HOME&lt;/code&gt; path and the user&#39;s home directory&#39;s actual name&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You have to make sure that the user directory name in &lt;code&gt;$HOME&lt;/code&gt; and the user directory name you&#39;d see from running &lt;code&gt;ls /Users/&lt;/code&gt; &lt;strong&gt;are capitalized the same way&lt;/strong&gt; (&lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/2261&#34;&gt;See this issue&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To change the user directory and/or account name follow the instructions &lt;a href=&#34;https://support.apple.com/en-us/HT201548&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Homebrew makes zsh directories unsecure&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;zsh compinit: insecure directories, run compaudit for list.&#xA;Ignore insecure directories and continue [y] or abort compinit [n]? y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Homebrew causes insecure directories like &lt;code&gt;/usr/local/share/zsh/site-functions&lt;/code&gt; and &lt;code&gt;/usr/local/share/zsh&lt;/code&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an &lt;code&gt;nvm&lt;/code&gt; problem - it is a homebrew problem. Refer &lt;a href=&#34;https://github.com/zsh-users/zsh-completions/issues/680&#34;&gt;here&lt;/a&gt; for some solutions related to the issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Macs with M1 chip&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Experimental support for the M1 architecture was added in node.js v15.3 and full support was added in v16.0. Because of this, if you try to install older versions of node as usual, you will probably experience either compilation errors when installing node or out-of-memory errors while running your code.&lt;/p&gt; &#xA;&lt;p&gt;So, if you want to run a version prior to v16.0 on an M1 Mac, it may be best to compile node targeting the &lt;code&gt;x86_64&lt;/code&gt; Intel architecture so that Rosetta 2 can translate the &lt;code&gt;x86_64&lt;/code&gt; processor instructions to ARM-based Apple Silicon instructions. Here&#39;s what you will need to do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Rosetta, if you haven&#39;t already done so&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ softwareupdate --install-rosetta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You might wonder, &#34;how will my M1 Mac know to use Rosetta for a version of node compiled for an Intel chip?&#34;. If an executable contains only Intel instructions, macOS will automatically use Rosetta to translate the instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a shell that&#39;s running using Rosetta&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ arch -x86_64 zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same thing can also be accomplished by finding the Terminal or iTerm App in Finder, right clicking, selecting &#34;Get Info&#34;, and then checking the box labeled &#34;Open using Rosetta&#34;.&lt;/p&gt; &lt;p&gt;Note: This terminal session is now running in &lt;code&gt;zsh&lt;/code&gt;. If &lt;code&gt;zsh&lt;/code&gt; is not the shell you typically use, &lt;code&gt;nvm&lt;/code&gt; may not be &lt;code&gt;source&lt;/code&gt;&#39;d automatically like it probably is for your usual shell through your dotfiles. If that&#39;s the case, make sure to source &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ source &#34;${NVM_DIR}/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install whatever older version of node you are interested in. Let&#39;s use 12.22.1 as an example. This will fetch the node source code and compile it, which will take several minutes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm install v12.22.1 --shared-zlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You&#39;re probably curious why &lt;code&gt;--shared-zlib&lt;/code&gt; is included. There&#39;s a bug in recent versions of Apple&#39;s system &lt;code&gt;clang&lt;/code&gt; compiler. If one of these broken versions is installed on your system, the above step will likely still succeed even if you didn&#39;t include the &lt;code&gt;--shared-zlib&lt;/code&gt; flag. However, later, when you attempt to &lt;code&gt;npm install&lt;/code&gt; something using your old version of node.js, you will see &lt;code&gt;incorrect data check&lt;/code&gt; errors. If you want to avoid the possible hassle of dealing with this, include that flag. For more details, see &lt;a href=&#34;https://github.com/nodejs/node/issues/39313&#34;&gt;this issue&lt;/a&gt; and &lt;a href=&#34;https://github.com/nodejs/node/issues/39313#issuecomment-902395576&#34;&gt;this comment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Exit back to your native shell.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ exit&#xA;$ arch&#xA;arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: If you selected the box labeled &#34;Open using Rosetta&#34; rather than running the CLI command in the second step, you will see &lt;code&gt;i386&lt;/code&gt; here. Unless you have another reason to have that box selected, you can deselect it now.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check to make sure the architecture is correct. &lt;code&gt;x64&lt;/code&gt; is the abbreviation for &lt;code&gt;x86_64&lt;/code&gt;, which is what you want to see.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ node -p process.arch&#xA;x64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now you should be able to use node as usual.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Currently, the sole maintainer is &lt;a href=&#34;https://github.com/ljharb&#34;&gt;@ljharb&lt;/a&gt; - more maintainers are quite welcome, and we hope to add folks to the team over time. &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/GOVERNANCE.md&#34;&gt;Governance&lt;/a&gt; will be re-evaluated as the project evolves.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright notice&lt;/h2&gt; &#xA;&lt;p&gt;Copyright &lt;a href=&#34;https://openjsf.org&#34;&gt;OpenJS Foundation&lt;/a&gt; and &lt;code&gt;nvm&lt;/code&gt; contributors. All rights reserved. The &lt;a href=&#34;https://openjsf.org&#34;&gt;OpenJS Foundation&lt;/a&gt; has registered trademarks and uses trademarks. For a list of trademarks of the &lt;a href=&#34;https://openjsf.org&#34;&gt;OpenJS Foundation&lt;/a&gt;, please see our &lt;a href=&#34;https://trademark-policy.openjsf.org/&#34;&gt;Trademark Policy&lt;/a&gt; and &lt;a href=&#34;https://trademark-list.openjsf.org/&#34;&gt;Trademark List&lt;/a&gt;. Node.js is a trademark of Joyent, Inc. and is used with its permission. Trademarks and logos not indicated on the &lt;a href=&#34;https://trademark-list.openjsf.org&#34;&gt;list of OpenJS Foundation trademarks&lt;/a&gt; are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openjsf.org/&#34;&gt;The OpenJS Foundation&lt;/a&gt; | &lt;a href=&#34;https://terms-of-use.openjsf.org/&#34;&gt;Terms of Use&lt;/a&gt; | &lt;a href=&#34;https://privacy-policy.openjsf.org/&#34;&gt;Privacy Policy&lt;/a&gt; | &lt;a href=&#34;https://bylaws.openjsf.org/&#34;&gt;OpenJS Foundation Bylaws&lt;/a&gt; | &lt;a href=&#34;https://trademark-policy.openjsf.org/&#34;&gt;Trademark Policy&lt;/a&gt; | &lt;a href=&#34;https://trademark-list.openjsf.org/&#34;&gt;Trademark List&lt;/a&gt; | &lt;a href=&#34;https://www.linuxfoundation.org/cookies/&#34;&gt;Cookie Policy&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>neargle/my-re0-k8s-security</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/neargle/my-re0-k8s-security</id>
    <link href="https://github.com/neargle/my-re0-k8s-security" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[WIP] 整理过去的分享，从零开始的Kubernetes攻防 ...&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;从零开始的Kubernetes攻防&lt;/h1&gt; &#xA;&lt;p&gt;本材料基于我原先在腾讯发表的博客 &lt;strong&gt;《红蓝对抗中的云原生漏洞挖掘及利用实录》&lt;/strong&gt; 进行持续更新和完善，用于解决公众号无法及时勘误和调整的局限性；且由于Kubernetes安全特性、容器安全等场景的攻防技术在不断发展和改变，文章的内容也会持续不断的进行调整；并在后续会补充从零开始的实验环境搭建、Kubernetes安全特性对抗、完整红蓝对抗案例、EBPF安全等相关的内容。希望整理和囊括我在Kubecon、CloudNativeCon、HITB、BlackHat、WHC、CIS等会议上分享的云原生安全相关的议题，以及此前写过的所有相关文章；希望重新构建和整理自己的在 Kubernetes 上的知识体系。👁 &lt;em&gt;盼望能多积累勘误，沉淀一些真正有质量的内容。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;文件包括[WIP]：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/slide/&#34;&gt;SLIDE&lt;/a&gt; - 近期发表的议题材料&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/paper/&#34;&gt;PAPER&lt;/a&gt; - 近期写的文章和白皮书汇总&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/gist/&#34;&gt;GIST&lt;/a&gt; - 文章和议题所用到的代码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Security Conference&lt;/th&gt; &#xA;   &lt;th&gt;CNCF &amp;amp; Linux Foundation&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/mdimg/20220521123149.png&#34; height=&#34;45&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/mdimg/20220521122243.png&#34; height=&#34;45&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/mdimg/20220521230036.png&#34; height=&#34;45&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/mdimg/20220521225818.png&#34; height=&#34;45&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/mdimg/20220521115419.png&#34; height=&#34;45&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HITB、 BlackHat、 WHC、CIS ...&lt;/td&gt; &#xA;   &lt;td&gt;Kubecon &amp;amp; CloudNativeCon ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;0. 目录&lt;/h2&gt;&#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#0-%E7%9B%AE%E5%BD%95&#34;&gt;0. 目录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#05-%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E5%BB%BA%E8%AE%AE&#34;&gt;0.5 测试环境建议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#1-%E8%83%8C%E6%99%AF&#34;&gt;1. 背景&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#2-%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B8%AD%E7%9A%84%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%89%E5%85%A8&#34;&gt;2. 攻防演练中的云原生安全&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#3-%E5%8D%95%E5%AE%B9%E5%99%A8%E7%8E%AF%E5%A2%83%E5%86%85%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86&#34;&gt;3. 单容器环境内的信息收集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#4-%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C&#34;&gt;4. 容器网络&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#5-%E5%85%B3%E4%BA%8E%E9%80%83%E9%80%B8%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B&#34;&gt;5. 关于逃逸的那些事&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#51-privileged-%E5%AE%B9%E5%99%A8%E5%86%85-mount-device&#34;&gt;5.1. privileged 容器内 mount device&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#52-%E6%94%BB%E5%87%BB-lxcfs&#34;&gt;5.2. 攻击 lxcfs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#53-%E5%88%9B%E5%BB%BA-cgroup-%E8%BF%9B%E8%A1%8C%E5%AE%B9%E5%99%A8%E9%80%83%E9%80%B8&#34;&gt;5.3. 创建 cgroup 进行容器逃逸&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#54%E7%89%B9%E6%AE%8A%E8%B7%AF%E5%BE%84%E6%8C%82%E8%BD%BD%E5%AF%BC%E8%87%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E9%80%83%E9%80%B8&#34;&gt;5.4.&amp;nbsp;特殊路径挂载导致的容器逃逸&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#541-docker-in-docker&#34;&gt;5.4.1 Docker in Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#542-%E6%94%BB%E5%87%BB%E6%8C%82%E8%BD%BD%E4%BA%86%E4%B8%BB%E6%9C%BA-proc-%E7%9B%AE%E5%BD%95%E7%9A%84%E5%AE%B9%E5%99%A8&#34;&gt;5.4.2 攻击挂载了主机 /proc 目录的容器&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#55-sys_ptrace-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9&#34;&gt;5.5. SYS_PTRACE 安全风险&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#56-%E5%88%A9%E7%94%A8%E5%A4%A7%E6%9D%83%E9%99%90%E7%9A%84-service-account&#34;&gt;5.6. 利用大权限的 Service Account&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#57-cve-2020-15257-%E5%88%A9%E7%94%A8&#34;&gt;5.7. CVE-2020-15257 利用&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#58-runc-cve-2019-5736-%E5%92%8C%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6%E5%8E%86%E5%8F%B2%E9%80%83%E9%80%B8%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0&#34;&gt;5.8. runc CVE-2019-5736 和容器组件历史逃逸漏洞综述&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#59-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E%E6%8F%90%E6%9D%83%E5%92%8C%E9%80%83%E9%80%B8%E6%A6%82%E8%BF%B0&#34;&gt;5.9. 内核漏洞提权和逃逸概述&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#6-%E5%AE%B9%E5%99%A8%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E&#34;&gt;6. 容器相关组件的历史漏洞**&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#7-%E5%AE%B9%E5%99%A8%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%BB%84%E4%BB%B6-api-%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93%E6%88%96%E6%9C%AA%E9%89%B4%E6%9D%83&#34;&gt;7. 容器、容器编排组件 API 配置不当或未鉴权&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#71-%E7%BB%84%E4%BB%B6%E5%88%86%E5%B7%A5&#34;&gt;7.1. 组件分工&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#72apiserver&#34;&gt;7.2.&amp;nbsp;apiserver&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#73-kubelet&#34;&gt;7.3. kubelet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#74-dashboard&#34;&gt;7.4. dashboard&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#75-etcd&#34;&gt;7.5. etcd&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#76-docker-remote-api&#34;&gt;7.6. docker remote api&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#77-kubectl-proxy&#34;&gt;7.7. kubectl proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#8-%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98&#34;&gt;8. 容器镜像安全问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#9-%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%89%80%E4%BA%A7%E7%94%9F%E7%9A%84%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98&#34;&gt;9. 二次开发所产生的安全问题&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#91-%E5%AF%B9-kubernetes-api-%E7%9A%84%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91%E6%88%96%E6%8B%BC%E6%8E%A5&#34;&gt;9.1. 对 Kubernetes API 的请求转发或拼接&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#10-serverless&#34;&gt;10. Serverless&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#101-%E6%96%87%E4%BB%B6%E9%A9%BB%E7%95%99%E5%AF%BC%E8%87%B4%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C&#34;&gt;10.1. 文件驻留导致命令执行&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#102-%E6%94%BB%E5%87%BB%E5%85%AC%E7%94%A8%E5%AE%B9%E5%99%A8--%E9%95%9C%E5%83%8F&#34;&gt;10.2. 攻击公用容器 / 镜像&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#11-devops&#34;&gt;11. DevOps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#12-%E4%BA%91%E5%8E%9F%E7%94%9F-api-%E7%BD%91%E5%85%B3&#34;&gt;12. 云原生 API 网关&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#121-apisix-%E7%9A%84-rce-%E5%88%A9%E7%94%A8&#34;&gt;12.1. APISIX 的 RCE 利用&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#13-%E5%85%B6%E5%AE%83%E5%88%A9%E7%94%A8%E5%9C%BA%E6%99%AF%E5%92%8C%E6%89%8B%E6%B3%95&#34;&gt;13. 其它利用场景和手法&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#131-%E4%BB%8E-cronjob-%E8%B0%88%E6%8C%81%E4%B9%85%E5%8C%96&#34;&gt;13.1. 从 CronJob 谈持久化&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#14-%E8%87%B4%E8%B0%A2&#34;&gt;14. 致谢&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/neargle/my-re0-k8s-security/main/#15-%E5%BC%95%E7%94%A8&#34;&gt;15. 引用&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;&#xA;&lt;h2&gt;0.5 测试环境建议&lt;/h2&gt;&#xA;&lt;p&gt;测试环境的所有问题钱都能解决，我们可以直接在云厂商上购买一个包含多节点的 Kubernetes 容器集群；但如果只有一台VPS服务器或配置有限的虚拟机环境，那么我建议可以使用 minikube、kind 或 K3s 等工具来搭建一个 Kubernetes 容器集群进行测试。&lt;/p&gt;&#xA;&lt;h2&gt;1. 背景&lt;/h2&gt;&#xA;&lt;p&gt;回顾近几年我在容器、Kubernetes上的探索和沉淀，我们在 2018 年的时候开始正式投入对 Serverless 和容器编排技术在攻防场景的预研，并把相关的沉淀服务于多个腾讯基础设施和产品之上，而在近期内外部的红蓝对抗演练中腾讯蓝军也多次依靠在云原生场景上的漏洞挖掘和漏洞利用，进而突破防御进入到内网或攻破核心靶标。&lt;/p&gt;&#xA;&lt;p&gt;本篇文章我们想聚焦于攻防对抗中所沉淀下来的漏洞，分享我们在多处攻防场景所遇到的云原生相关的漏洞挖掘和漏洞利用实例。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注：本材料所有内容仅供安全研究和企业安全能力建设参考，请勿用于未授权渗透测试和恶意入侵攻击。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2&gt;2. 攻防演练中的云原生安全&lt;/h2&gt;&#xA;&lt;p&gt;CNCF（云原生计算基金会 &amp;nbsp;Cloud Native Computing Foundation）在对云原生定义的描述中提到 “云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API”；&lt;/p&gt;&#xA;&lt;p&gt;我们今天所聊到的漏洞和利用手法也紧紧围绕着上述的几类技术和由云原生相关技术所演化出来的多种技术架构进行，包括但不限于容器、服务网格、微服务、不可变基础设施、声明式 API、无服务架构、函数计算、DevOps 等，并涉及研发团队在使用的一些云原生开源组件和自研、二次开发时常见的安全问题。不在 “云原生安全” 这个概念上做过多的延伸和扩展，且提及所有的安全漏洞都在 “腾讯蓝军” 对内对外的攻防演练和漏洞挖掘中有实际的利用经验积累。&lt;/p&gt;&#xA;&lt;p&gt;在实际的攻防中我们所进行的攻击路径并非完全契合在 CIS2020 上总结的攻击模型：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftBdfO2wkP8CxGyLPo3g9YnEbsMnrYicqc20yEgrxWVmdLEWUwue54Skw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;因为大部分情况下我们遇到的内网并非完全基于容器技术所构建的，所以内网的起点并不一定是一个权限受限的容器，但攻击的方向和目标却大同小异：为了获取特定靶标的权限、资金和数据，我们一般需要控制更多乃至全部的容器、主机和集群。&lt;/p&gt;&#xA;&lt;p&gt;也由于业界云原生实践的发展非常迅速，虽然进入内网之后我们所接触的不一定是全是 Kubernetes 所编排下的容器网络和架构，但基于云原生技术所产生的新漏洞和利用手法往往能帮蓝军打开局面。&lt;/p&gt;&#xA;&lt;p&gt;举个例子，当我们通过远控木马获取某个集群管理员 PC 上的 kubeconfig 文件 （一般位于 ~/.kube/config 目录），此时我们就拥有了管理 Kubernetes 集群的所有能力了，具体能做的事情后面会有更详细的探讨。&lt;/p&gt;&#xA;&lt;p&gt;如果此时该集群没有设置严格的 security policy 且目标企业的 HIDS 没有针对容器特性进行一定策略优化的话，那创建一个能获取 NODE 权限的 POD 或许就是一个不错的选择，因为只有这样获取的 shell 才能更方便的在容器母机上进行信息收集，例如 strace 母机 sshd 进程抓取我们想要的用户名和密码、使用 tcpdump 抓取内网系统的管理员登录态等，目前正在运行的容器一般是没有这些权限的。&lt;/p&gt;&#xA;&lt;p&gt;以下是这种情况下我们常用的 POD yaml 配置：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftwCHtcUarg5Q2TibAGToyUjjicA79dtZD5WicGABfq5W5Td7yPAaRicHLqg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果对 Kubernetes 的 POD 不熟悉，其实上述的配置就比较类似于在想要 ROOT 权限的业务服务器上执行以下 docker 命令:&lt;/p&gt;&#xA;&lt;p&gt;docker -H ${host_docker_sock} run -d -it --name neartest_Kubernetes_hashsubix -v &#34;/proc:/host/proc&#34; -v &#34;/sys:/host/sys&#34; -v &#34;/:/near_sandbox&#34; --network=host --privileged=true --cap-add=ALL alpine:latest /bin/sh -c tail -f /dev/null&lt;/p&gt;&#xA;&lt;p&gt;执行的结果和作用如下 (注：所有的挂载和选项并非都必须，实战中填写需要的权限和目录即可，此处提供一个较全的参考)：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftgtxzp2bHN2wPiclVFXdjiaI3GThc2EllRLEjqhe5VhQNH4FDsz0srf8g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当然上述大部分配置都会被多租户集群下的 Kubernetes Security Policy 所拦截，且如果目前主机上的 HIDS 有一定容器安全能力的话，这类配置的容器创建行为也比较容易会被标记为异常行为。&lt;/p&gt;&#xA;&lt;p&gt;不过，显然我们在真实的对抗中如果只是想达到执行 strace 抓取 sshd 的目的，配置可以更加简化一点，只需添加 SYS_PTRACE 的 capabilities 即可，我在演习中也正是这么做的。&lt;/p&gt;&#xA;&lt;p&gt;因为具有 SYS_PTRACE 权限的容器并且进行 kubectl exec 的行为在实际的研发运维流程中非常常见，是 HIDS 比较不容易察觉的类业务型操作；另外也可以寻找节点上已有该配置的容器和 POD 进行控制，同样是不易被防御团队所察觉的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftEhyicH6Zpv2lsLiap7t9dLyM2r8QPyLrLaNvOpkmicQZZxwkltSsIiaaPA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;接下来我们也会一个个讨论这类漏洞和手法和我们实际在对抗中遇到的场景。同时，无论是在 CNCF 对云原生的定义里，还是大家对云原生技术最直观的感受，大部分技术同学都会想到容器以及容器编排相关的技术，这里我们就以容器为起始，开启我们今天的云原生安全探索之旅吧~&lt;/p&gt;&#xA;&lt;h2&gt;3. 单容器环境内的信息收集&lt;/h2&gt;&#xA;&lt;p&gt;当我们获取了一个容器的 shell，或许 cat /proc/1/cgroup 是我们首要要执行的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftGKIPgDbCSJNK6zfH8HMBPGtTt0A7ofib1Ricj5SMtTmM01ItbDpwn8uA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;毕竟从内核角度看容器技术的关键就是 CGroup 和 Namespace，或许应该再加一个 Capabilities。从 CGroup 信息中，不仅可以判断我们是否在容器内，也能很方便判断出当前的容器是否在 Kubernetes 的编排环境中。&lt;/p&gt;&#xA;&lt;p&gt;没使用 Kubernetes 的 docker 容器，其 cgroup 信息长这样：&lt;/p&gt;&#xA;&lt;p&gt;12:hugetlb:/docker/9df9278580c5fc365cb5b5ee9430acc846cf6e3207df1b02b9e35dec85e86c36&lt;/p&gt;&#xA;&lt;p&gt;而 Kubernetes 默认的，长这样：&lt;/p&gt;&#xA;&lt;p&gt;12:hugetlb:/kubepods/burstable/pod45226403-64fe-428d-a419-1cc1863c9148/e8fb379159f2836dbf990915511a398a0c6f7be1203e60135f1cbdc31b97c197&lt;/p&gt;&#xA;&lt;p&gt;同时，这里的 CGroup 信息也是宿主机内当前容器所对应的 CGroup 路径，在后续的多个逃逸场景中获取 CGroup 的路径是非常重要的。&lt;/p&gt;&#xA;&lt;p&gt;同类判断当前 shell 环境是否是容器，并采集容器内信息的还有很多，举个不完全的例子：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ps aux&#xA;&#xA;ls -l .dockerenv&#xA;&#xA;capsh --print&#xA;&#xA;env | grep KUBE&#xA;&#xA;ls -l /run/secrets/Kubernetes.io/&#xA;&#xA;mount&#xA;&#xA;df -h&#xA;&#xA;cat /etc/resolv.conf&#xA;&#xA;cat /etc/mtab&#xA;&#xA;cat /proc/self/status&#xA;&#xA;cat /proc/self/mounts&#xA;&#xA;cat /proc/net/unix&#xA;&#xA;cat /proc/1/mountinfo&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftPaEEMDapm7RgLEpRRPibpPezFWy7K4D44qhOs2UgdRENTicibzaCicFC2g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其中 capsh --print 获取到信息是十分重要的，可以打印出当前容器里已有的 Capabilities 权限；历史上，我们曾经为了使用 strace 分析业务进程，而先设法进行容器逃逸忘记看当前容器的 Capabilities 其实已经拥有了 ptrace 权限，绕了一个大弯子。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftcgCLWayVj5MuKrHtibFOsoIsWrDc7Onr5cTbzIPXpafkq2hjnAv16Jg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;但是，容器的 SHELL 环境里经常遇到无法安装新工具，且大部分常用工具都在镜像里被精简或阉割了。这时理解工具背后的原理并根据原理达到相同的效果就很重要。&lt;/p&gt;&#xA;&lt;p&gt;以 capsh 为例，并非所有的容器镜像里都可以执行 capsh，这时如果想要获取当前容器的 &amp;nbsp;Capabilities 权限信息，可以先 cat /proc/1/status 获取到 Capabilities hex 记录之后，再使用 capsh --decode 解码出 Capabilities 的可读字符串即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft1HBSRN9nBvtlv2iaVEWKYyYdEVx12K1qRjDGeOic5USvFXCaAx23RtvA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其他如 mount, lsof 等命令也类似。&lt;/p&gt;&#xA;&lt;p&gt;另外一个比较常见就是 kubectl 命令的功能复现，很多情况下我们虽然获得了可以访问 APIServer 的网络权限和证书（又或者不需要证书）拥有了控制集群资源的权限，却无法下载或安装一个 kubectl 程序便捷的和 APIServer 通信，此时我们可以配置 kubectl 的 logging 登机，记录本地 kubectl 和测试 APIServer 的请求详情，并将相同的请求包发送给目标的 APIServer 以实现相同的效果。&lt;/p&gt;&#xA;&lt;p&gt;kubectl create -f cronjob.yaml -v=8&lt;/p&gt;&#xA;&lt;p&gt;如果需要更详细的信息，也可以提高 logging level, 例如 kubectl -v=10 等，其他 Kubernetes 组件也能达到相同的目的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft3BicWNtm2RTCWS67EMSES3h6thcljtORdUEWb73W5ibvtHZOve5x18bw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;4. 容器网络&lt;/h2&gt;&#xA;&lt;p&gt;以 Kubernetes 为例，容器与容器之间的网络是极为特殊的。虽然大部分经典 IDC 内网的手法和技巧依然可以使用，但是容器技术所构建起来的是全新的内网环境，特别是当企业引入服务网格等云原生技术做服务治理时，整个内网和 IDC 内网的差别就非常大了；因此了解一下 Kubernetes 网络的默认设计是非常重要的，为了避免引入复杂的 Kubernetes 网络知识，我们以攻击者的视角来简述放在蓝军面前的 Kubernetes 网络。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftcXMH816vZg00WRsgnomrkInQYzToiaJU76Rv4wmF7x2srIEiaOXG4dJQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;从上图可以很直观的看出，当我们获取 Kubernetes 集群内某个容器的 shell，默认情况下我们可以访问以下几个内网里的目标：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;相同节点下的其它容器开放的端口&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其他节点下的其它容器开放的端口&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其它节点宿主机开放的端口&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;当前节点宿主机开放的端口&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Kubernetes Service 虚拟出来的服务端口&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;内网其它服务及端口，主要目标可以设定为 APISERVER、ETCD、Kubelet 等&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;不考虑对抗和安装门槛的话，使用 masscan 和 nmap 等工具在未实行服务网格的容器网络内进行服务发现和端口探测和在传统的 IDC 网络里区别不大；当然，因为 Kubernetes Service 虚拟出来的服务端口默认是不会像容器网络一样有一个虚拟的 veth 网络接口的，所以即使 Kubernetes Service 可以用 IP:PORT 的形式访问到，但是是没办法以 ICMP 协议做 Service 的 IP 发现（Kubernetes Service 的 IP 探测意义也不大）。&lt;/p&gt;&#xA;&lt;p&gt;另如果 HIDS、NIDS 在解析扫描请求时，没有针对 Kubernetes 的 IPIP Tunnle 做进一步的解析，可能产生一定的漏报。&lt;/p&gt;&#xA;&lt;p&gt;注：若 Kubernetes 集群使用了服务网格，其中最常见的就是 istio，此时服务网格下的内网和内网探测手法变化是比较大的。可以参考引用中：《腾讯蓝军： CIS2020 - Attack in a Service Mesh》；由于 ISTIO 大家接触较少，此处不再展开。&lt;/p&gt;&#xA;&lt;p&gt;也因此多租户集群下的默认网络配置是我们需要重点关注的，云产品和开源产品使用容器做多租户集群下的隔离和资源限制的实现并不少见，著名的产品有如 Azure Serverless、Kubeless 等。&lt;/p&gt;&#xA;&lt;p&gt;若在设计多租户集群下提供给用户代码执行权限即容器权限的产品时，还直接使用 Kubernetes 默认的网络设计是不合理的且非常危险。&lt;/p&gt;&#xA;&lt;p&gt;很明显一点是，用户创建的容器可以直接访问内网和 Kubernetes 网络。在这个场景里，合理的网络设计应该和云服务器 VPS 的网络设计一致，用户与用户之间的内网网络不应该互相连通，用户网络和企业内网也应该进行一定程度的隔离，上图中所有对内的流量路径都应该被切断。把所有用户 POD 都放置在一个 Kubernetes namespace 下就更不应该了。&lt;/p&gt;&#xA;&lt;h2&gt;5. 关于逃逸的那些事&lt;/h2&gt;&#xA;&lt;p&gt;要更好的理解容器逃逸的手法，应该知道本质上容器内的进程只是一个受限的普通 Linux 进程，容器内部进程的所有行为对于宿主机来说是透明的，这也是众多容器 EDR 产品可以直接在主机或 SideCar 内做容器运行时安全的基础之一。&lt;/p&gt;&#xA;&lt;p&gt;我们可以很容易在宿主机用 ps 看到容器进程信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftq0qxLqTBAK3nWHNkMplc0oMG5sxyGVBhR93gDhEvtwGXKjeAQFuKIA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;所以，容器逃逸的本质和硬件虚拟化逃逸的本质有很大的不同 (不包含 Kata Containers 等)，我的理解里容器逃逸的过程是一个受限进程获取未受限的完整权限，又或某个原本受 Cgroup/Namespace 限制权限的进程获取更多权限的操作，更趋近于提权。&lt;/p&gt;&#xA;&lt;p&gt;而在对抗上，不建议将逃逸的行为当成可以写入宿主机特定文件 (如 /etc/cron*, /root/.ssh/authorized_keys 等文件) 的行为，应该根据目标选择更趋近与业务行为的手法，容器逃逸的利用手段会比大部分情况下的命令执行漏洞利用要灵活。&lt;/p&gt;&#xA;&lt;p&gt;以目标 “获取宿主机上的配置文件” 为例，以下几种逃逸手法在容易在防御团队中暴露的概率从大到小，排序如下(部分典型手法举例，不同的 EDR 情况不同)：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;mount /etc + write crontab&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mount /root/.ssh + write authorized_keys&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;old CVE/vulnerability exploit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;write cgroup notify_on_release&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;write procfs core_pattern&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;volumeMounts: / + chroot&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;remount and rewrite cgroup&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;create ptrace cap container&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;websocket/sock shell + volumeMounts: /path&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我们来一一看一下利用场景和方法：&lt;/p&gt;&#xA;&lt;h2&gt;5.1. privileged 容器内 mount device&lt;/h2&gt;&#xA;&lt;p&gt;使用 privileged 特权容器是业界最常见以及最广为人知的逃逸手法，对容器安全有一定要求的产品一般都会严格限制特权容器的使用和监控。不过依然会有一些著名的云产品犯类似的低级错误，例如微软的 Azure 出现的问题：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://thehackernews.com/2021/01/new-docker-container-escape-bug-affects.html&#34;&gt;https://thehackernews.com/2021/01/new-docker-container-escape-bug-affects.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;privileged 特权容器的权限其实有很多，所以也有很多不同的逃逸方式，挂载设备读写宿主机文件是特权容器最常见的逃逸方式之一。&lt;/p&gt;&#xA;&lt;p&gt;当你进入 privileged 特权容器内部时，你可以使用 &lt;code&gt;fdisk -l&lt;/code&gt; 查看宿主机的磁盘设备：&lt;/p&gt;&#xA;&lt;p&gt;fdisk -l&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftGfNAXmbY6uvBia2ssPzWPZO09zlxyoeQfGY2Et96NickicqVYhYSLgibMA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果不在 privileged 容器内部，是没有权限查看磁盘列表并操作挂载的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft8w0dfp2xjr4r6BWKCfs5uKpR58aj9YqAsJZPR542xnKC56Tdmiczf1A/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;因此，在特权容器里，你可以把宿主机里的根目录 / 挂载到容器内部，从而去操作宿主机内的任意文件，例如 crontab config file, /root/.ssh/authorized_keys, /root/.bashrc 等文件，而达到逃逸的目的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft2Q8Gdwwz7Kslf31TXMuUu1pPPnCHYGpCDibcltRdeGczics9V11EiaD5Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当然这类的文件的读写是 EDR 和 HIDS 重点监控的对象，所以是极易触发告警的；即使 HIDS 不一定有针对容器安全的特性进行优化，对此类的逃逸行为依旧有一些检测能力。&lt;/p&gt;&#xA;&lt;h2&gt;5.2. 攻击 lxcfs&lt;/h2&gt;&#xA;&lt;p&gt;lxcfs 的场景和手法应该是目前业界 HIDS 较少进行覆盖的，我们目前也未在真实的攻防场景中遇到 lxcfs 所导致的容器逃逸利用，学习到这个有趣的场景主要还是来自于 @lazydog 师傅在开源社区和私聊里的分享，他在自己的实际蓝军工作中遇到了 lxcfs 的场景，并调研文档和资料构建了一套相应的容器逃逸思路；由此可见，这个场景和手法在实际的攻防演练中也是非常有价值的。&lt;/p&gt;&#xA;&lt;p&gt;lxcfs： &lt;a href=&#34;https://linuxcontainers.org/lxcfs/&#34;&gt;https://linuxcontainers.org/lxcfs/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;假设业务使用 lxcfs 加强业务容器在 /proc/ 目录下的虚拟化，以此为前提，我们构建出这样的 demo pod:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft1G5hEGn2nOicDpFookOYNsyicbG6RARkn8o9licXQRlhpNooetfuzqBNA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;并使用 &lt;code&gt;lxcfs /data/test/lxcfs/&lt;/code&gt; 修改了 data 目录下的权限。若蓝军通过渗透控制的是该容器实例，则就可以通过下述的手法达到逃逸访问宿主机文件的目的，这里简要描述一下关键的流程和原理。&lt;/p&gt;&#xA;&lt;p&gt;（1）首先在容器内，蓝军需要判断业务是否使用了 lxcfs，在 mount 信息里面可以进行简单判断，当然容器不一定包含 mount 命令，也可以使用 cat /proc/1/mountinfo 获取&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftqyVYKOTgP0AoQNODZ1K4HIZCmIVEY26jluyICLqtt7KqaJzx2SnpCg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（2）此时容器内会出现一个新的虚拟路径：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftv1x875RksBQzoI6fufzz26pmIYOvumjBUg1Lq6NXCCjfgqHn8K4AIw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（3）更有趣的是，该路径下会绑定当前容器的 devices subsystem cgroup 进入容器内，且在容器内有权限对该 devices subsystem 进行修改。&lt;/p&gt;&#xA;&lt;p&gt;使用 echo a &amp;gt; devices.allow 可以修改当前容器的设备访问权限，致使我们在容器内可以访问所有类型的设备。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftlHhr7YzFOqx19KDYSy28icQTXFmWKdeZkjYSCpao7CU3LX63kvSds5g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（4）如果跟进过 CVE-2020-8557 这个具有 Kubernetes 特色的拒绝服务漏洞的话，应该知道&lt;/p&gt;&#xA;&lt;p&gt;/etc/hosts， /dev/termination-log，/etc/resolv.conf， /etc/hostname 这四个容器内文件是由默认从宿主机挂载进容器的，所以在他们的挂载信息内很容易能获取到主设备号 ID。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftaDwpX3m03LqY7DkaWfzPOFB57iatun8yhuOJODZtXDO1SoR07LYTRKg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（5）我们可以使用 mknod 创建相应的设备文件目录并使用 debugfs 进行访问，此时我们就有了读写宿主机任意文件的权限。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftwacESL1sXDo8ZDKpia4qGyyibXtqtQbcSIh95DCRgjpuXYIoJTIly3Gw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这个手法和利用方式不仅可以作用于 lxcfs 的问题，即使没有安装和使用 lxcfs，当容器为 privileged、sys_admin 等特殊配置时，可以使用相同的手法进行逃逸。我们曾经多次使用类似的手法逃逸 privileged、sys_admin 的场景 (在容器内 CAPABILITIES sys_admin 其实是 privileged 的子集)，相较之下会更加隐蔽。&lt;/p&gt;&#xA;&lt;p&gt;当然自动化的工具可以帮我们更好的利用这个漏洞并且考虑容器内的更多情况，这里自动化 EXP 可以使用 CDK 工具 (该工具由笔者 neargle 和 CDXY 师傅一同研发和维护，并正在持续迭代中)：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cdk-team/CDK/wiki/Exploit:-lxcfs-rw&#34;&gt;https://github.com/cdk-team/CDK/wiki/Exploit:-lxcfs-rw&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;逃逸章节所使用的技巧很多都在 CDK 里有自动化的集成和实现。&lt;/p&gt;&#xA;&lt;h2&gt;5.3. 创建 cgroup 进行容器逃逸&lt;/h2&gt;&#xA;&lt;p&gt;上面提到了 privileged 配置可以理解为一个很大的权限集合，可以直接 mount device 并不是它唯一的权限和利用手法，另外一个比较出名的手法就是利用 cgroup release_agent 进行容器逃逸以在宿主机执行命令，这个手法同样可以作用于 sys_admin 的容器。&lt;/p&gt;&#xA;&lt;p&gt;shell 利用脚本如下（bash 脚本参考： &lt;a href=&#34;https://github.com/neargle/cloud_native_security_test_case/raw/master/privileged/1-host-ps.sh%EF%BC%89%EF%BC%9A&#34;&gt;https://github.com/neargle/cloud_native_security_test_case/blob/master/privileged/1-host-ps.sh）：&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftEWoZ2qyfQR8GX93YnMXf5adbPsONoOGjWgdznasxJdciaib9PNHZVrDQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;输出示例：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftd0OAOT3fzaDQCAlAaIRQSgEWIol1sKbUxz1Ttg9BxcCMcpLcw46jcA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其中&lt;/p&gt;&#xA;&lt;p&gt;host_path=&lt;code&gt;sed -n &#39;s/.*\perdir=\([^,]*\).*/\1/p&#39; /etc/mtab&lt;/code&gt;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;的做法经常在不同的 Docker 容器逃逸 EXP 被使用到；如果我们在漏洞利用过程中，需要在容器和宿主机内进行文件或文本共享，这种方式是非常棒且非常通用的一个做法。&lt;/p&gt;&#xA;&lt;p&gt;其思路在于利用 Docker 容器镜像分层的文件存储结构 (Union FS)，从 mount 信息中找出宿主机内对应当前容器内部文件结构的路径；则对该路径下的文件操作等同于对容器根目录的文件操作。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftiauaaBrb6vQiarVSQpAfSdVPiaqxX6ibhHGvFWruakuTM85UIYQ40J6TZQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此类手法如果 HIDS 并未针对容器逃逸的特性做一定优化的话，则 HIDS 对于逃逸在母机中执行命令的感知能力可能就会相对弱一点。不过业界的 EDR 和 HIDS 针对此手法进行规则覆盖的跟进速度也很快，已有多款 HIDS 对此有一定的感知能力。&lt;/p&gt;&#xA;&lt;p&gt;另外一个比较小众方法是借助上面 lxcfs 的思路，复用到 sys_admin 或特权容器的场景上读写母机上的文件。（腾讯蓝军的兄弟们问得最多的手法之一，每过一段时间就有人过来问一次 ~）&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt;首先我们还是需要先创建一个 cgroup 但是这次是 device subsystem 的。&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;mkdir /tmp/dev&lt;/p&gt;&#xA;&lt;p&gt;mount -t cgroup -o devices devices /tmp/dev/&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;修改当前已控容器 cgroup 的 devices.allow，此时容器内已经可以访问所有类型的设备,&amp;nbsp;&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;命令： echo a &amp;gt;&lt;/p&gt;&#xA;&lt;p&gt;/tmp/dev/docker/b76c0b53a9b8fb8478f680503164b37eb27c2805043fecabb450c48eaad10b57/devices.allow&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;同样的，我们可以使用 mknod 创建相应的设备文件目录并使用 debugfs 进行访问，此时我们就有了读写宿主机任意文件的权限。&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;mknod near b 252 1&lt;/p&gt;&#xA;&lt;p&gt;debugfs -w near&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft26N0dJav4icNaXnENfhzLNH3K7R4ODLpCDsEmWyiawlw3HjBaib8Mx8OQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;5.4.&amp;nbsp;特殊路径挂载导致的容器逃逸&lt;/h2&gt;&#xA;&lt;p&gt;这类的挂载很好理解，当例如宿主机的内的 /, /etc/, /root/.ssh 等目录的写权限被挂载进容器时，在容器内部可以修改宿主机内的 /etc/crontab、/root/.ssh/、/root/.bashrc 等文件执行任意命令，就可以导致容器逃逸。&lt;/p&gt;&#xA;&lt;p&gt;执行下列命令可以很容易拥有这样的环境：&lt;/p&gt;&#xA;&lt;p&gt;➜ &amp;nbsp;~ docker run -it -v /:/tmp/rootfs ubuntu bash&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftatOPnCicAiaV8lXHkvKuPQFT4aUSJicKE5FhfKibxWx3PQVAQAzJpMdxibw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;5.4.1 Docker in Docker&lt;/h2&gt;&#xA;&lt;p&gt;其中一个比较特殊且常见的场景是当宿主机的 /var/run/docker.sock 被挂载容器内的时候，容器内就可以通过 docker.sock 在宿主机里创建任意配置的容器，此时可以理解为可以创建任意权限的进程；当然也可以控制任意正在运行的容器。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftw32wVunQaYQ1iczSQ50LvsNLQrqa0rG6mE3Ob2VSHh9gIj8gv5tgdVQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这类的设计被称为： Docker in Docker。常见于需要对当前节点进行容器管理的编排逻辑容器里，历史上我遇到的场景举例：&lt;/p&gt;&#xA;&lt;p&gt;a. 存在于 Serverless 的前置公共容器内&lt;/p&gt;&#xA;&lt;p&gt;b. 存在于每个节点的日志容器内&lt;/p&gt;&#xA;&lt;p&gt;如果你已经获取了此类容器的 full tty shell, 你可以用类似下述的命令创建一个通往母机的 shell。&lt;/p&gt;&#xA;&lt;p&gt;./bin/docker -H unix:///tmp/rootfs/var/run/docker.sock run -d -it --rm --name rshell -v &#34;/proc:/host/proc&#34; -v &#34;/sys:/host/sys&#34; -v &#34;/:/rootfs&#34; --network=host --privileged=true --cap-add=ALL alpine:latest&lt;/p&gt;&#xA;&lt;p&gt;如果想现在直接尝试此类逃逸利用的魅力，不妨可以试试 Google Cloud IDE 天然自带的容器逃逸场景，拥有 Google 账号可以直接点击下面的链接获取容器环境和利用代码，直接执行利用代码 try_google_cloud/host_root.sh 再 chroot 到 /rootfs 你就可以获取一个完整的宿主机 shell：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/neargle/cloud_native_security_test_case.git&#34;&gt;https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/neargle/cloud_native_security_test_case.git&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftJ2vstIzkOJLNRZNzSwMyPUDLiagDBia53jYDqCTFD5Jpy07WbxBJpNhg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当然容器内部不一定有条件安装或运行 docker client，一般获取的容器 shell 其容器镜像是受限且不完整的，也不一定能安装新的程序，即使是用 pip 或 npm 安装第三方依赖包也很困难。&lt;/p&gt;&#xA;&lt;p&gt;此时基于 golang 编写简易的利用程序，利用交叉编译编译成无需依赖的单独 bin 文件下载到容器内执行就是经常使用的方法了。&lt;/p&gt;&#xA;&lt;h2&gt;5.4.2 攻击挂载了主机 /proc 目录的容器&lt;/h2&gt;&#xA;&lt;p&gt;另一个比较有趣的场景就是挂载了主机 /proc 目录的容器，在历史的攻防演练中当我们遇到挂载了主机 /proc 目录的容器，一般都会有其它可以逃逸的特性，如 sys_ptrace 或者 sys_admin 等，但是其实挂载了主机 /proc 目录这个设置本身，就是一个可以逃逸在宿主机执行命令的特性。&lt;/p&gt;&#xA;&lt;p&gt;我们可以简单的执行以下命令创建一个具有该配置的容器并获得其 shell：&lt;/p&gt;&#xA;&lt;p&gt;docker run -v /proc:/host_proc --rm -it ubuntu bash&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftAB4cUYkuAw8qAOpVUiclIpDNYUxspI6KP34Zf91eVQ6xwiaNUqjm19hw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里逃逸并在外部执行命令的方式主要是利用了 linux 的 /proc/sys/kernel/core_pattern 文件。&lt;/p&gt;&#xA;&lt;p&gt;a. 首先我们需要利用在 release_agent 中提及的方法从 mount 信息中找出宿主机内对应当前容器内部文件结构的路径。&lt;/p&gt;&#xA;&lt;p&gt;sed -n &#39;s/.&lt;em&gt;\perdir=([^,]&lt;/em&gt;).*/\1/p&#39; /etc/mtab&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftR3jLLNribmw1DuJ0NO9kjn0fYslX59rhRdZVYMNl1mKYIS8M5gUkbdw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;b. 此时我们在容器内的 /exp.sh 就对应了宿主机的 /var/lib/docker/overlay2/a1a1e60a9967d6497f22f5df21b185708403e2af22eab44cfc2de05ff8ae115f/diff/exp.sh 文件。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftH6nUncxl6ibtrUumbDmWNOdnibrBCJFwpf3HrTFZ9xFhhvkRa4BCgCjA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;c. 因为宿主机内的 /proc 文件被挂载到了容器内的 /host_proc 目录，所以我们修改 /host_proc/sys/kernel/core_pattern 文件以达到修改宿主机 /proc/sys/kernel/core_pattern 的目的。&lt;/p&gt;&#xA;&lt;p&gt;echo -e&lt;/p&gt;&#xA;&lt;p&gt;&#34;|/var/lib/docker/overlay2/a1a1e60a9967d6497f22f5df21b185708403e2af22eab44cfc2de05ff8ae115f/diff/exp.sh \rcore&#34; &amp;gt; /host_proc/sys/kernel/core_pattern&lt;/p&gt;&#xA;&lt;p&gt;d. 此时我们还需要一个程序在容器里执行并触发 segmentation fault 使植入的 payload 即 exp.sh 在宿主机执行。&lt;/p&gt;&#xA;&lt;p&gt;这里我们参考了 &lt;a href=&#34;https://wohin.me/rong-qi-tao-yi-gong-fang-xi-lie-yi-tao-yi-ji-zhu-gai-lan/#4-2-procfs-&#34;&gt;https://wohin.me/rong-qi-tao-yi-gong-fang-xi-lie-yi-tao-yi-ji-zhu-gai-lan/#4-2-procfs-&lt;/a&gt; 里的 c 语言代码和 CDK-TEAM/CDK 里面的 GO 语言代码：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftEOJquTPhAf5XtlOBCEjRNM4qALicMhjMymWib58D2HkicTv7N9OcmpwZw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;e. 当然不能忘记给 exp.sh 赋予可执行权限。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftYW4ibU65yhwJFibysUswDMOdiaSJbEIQkaZNdSusFBShsaHSS81KjZC0g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当容器内的 segmentation fault 被触发时，我们就达到了逃逸到宿主机在容器外执行任意代码的目的。&lt;/p&gt;&#xA;&lt;h2&gt;5.5. SYS_PTRACE 安全风险&lt;/h2&gt;&#xA;&lt;p&gt;当 docker 容器设置 --cap-add=SYS_PTRACE 或 Kubernetes PODS 设置 securityContext.capabilities 为 SYS_PTRACE 配置等把 SYS_PTRACE capabilities 权限赋予容器的情况，都可能导致容器逃逸。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftiatm1LG35dC04AKvK7vbmJibx5iciaena0ptqib9W2xOY9cVTVShyFmBMFQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这个场景很常见，因为无论是不是线上环境，业务进行灾难重试和程序调试都是没办法避免的，所以容器经常被设置 ptrace 权限。&lt;/p&gt;&#xA;&lt;p&gt;使用 capsh --print 可以判断当前容器是否附加了 ptrace capabilities。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftA5xR0WNgNA3DwdiaIoGn2mWmGGTzCwibmeRsejfKo8daibJ3fib6vxMWiaw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里的利用方式和进程注入的方式大致无二，如果是使用 pupy 或 metasploit 维持容器的 shell 权限的话，利用框架现有的功能就能很方便的进行注入和利用。&lt;/p&gt;&#xA;&lt;p&gt;当然，就如上面所述，拥有了该权限就可以在容器内执行 strace 和 ptrace 等工具，若只是一些常见场景的信息收集也不一定需要注入恶意 shellcode 进行逃逸才可以做到。&lt;/p&gt;&#xA;&lt;h2&gt;5.6. 利用大权限的 Service Account&lt;/h2&gt;&#xA;&lt;p&gt;使用 Kubernetes 做容器编排的话，在 POD 启动时，Kubernetes 会默认为容器挂载一个 Service Account 证书。同时，默认情况下 Kubernetes 会创建一个特有的 Service 用来指向 ApiServer。&lt;/p&gt;&#xA;&lt;p&gt;有了这两个条件，我们就拥有了在容器内直接和 APIServer 通信和交互的方式。&lt;/p&gt;&#xA;&lt;p&gt;Kubernetes Default Service&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftF3icYrbEyoajYW3lxKIYcevm66b3clvlQUIXxneO7LJLVqEibrEhHziaw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftTvug1uFW0iaib9xCxBAGmXIO0M5xgOpWb3SlNabapWZnkko7SQGf5gOw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Default Service Account&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft7TibDhibGHJ9Hrb2uIPSCEGiaUgacRkL4THkcThMyGmN2gPDUADeJLBzQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;默认情况下，这个 Service Account 的证书和 token 虽然可以用于和 Kubernetes Default Service 的 APIServer 通信，但是是没有权限进行利用的。&lt;/p&gt;&#xA;&lt;p&gt;但是集群管理员可以为 Service Account 赋予权限：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftKYhULXklPpLiciaR5icMSuVehOY3FTUrkfIyCtvmj9IoiclZkZt5eW5gZA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时直接在容器里执行 kubectl 就可以集群管理员权限管理容器集群。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftia4aojurXia3vykNrLmzUp1LxDKqalKT9wofHFks3F7f3v9OAjiaKMm4Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;因此获取一个拥有绑定了 ClusterRole/cluster-admin Service Account 的 POD，其实就等于拥有了集群管理员的权限。&lt;/p&gt;&#xA;&lt;p&gt;实际攻防演练利用过程中，有几个坑点：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;老版本的 kubectl 不会自动寻找和使用 Service Account 需要用 kubectl config set-cluster cfc 进行绑定或下载一个新版本的 kubectl 二进制程序；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果当前用户的目录下配置了 kubeconfig 即使是错误的，也会使用 kubeconfig 的配置去访问不会默认使用 Service Account ；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;历史上我们遇到很多集群会删除 Kubernetes Default Service，所以需要使用容器内的资产探测手法进行信息收集获取 apiserver 的地址。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;h2&gt;5.7. CVE-2020-15257 利用&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftkxc6w0j4uicMY3jcHMyYhwBHL3cqqVoavpqlOQMQhLBtUEKmCZW6OUQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此前 containerd 修复了一个逃逸漏洞，当容器和宿主机共享一个 net namespace 时（如使用 --net=host 或者 Kubernetes 设置 pod container 的 .spec.hostNetwork 为 true）攻击者可对拥有特权的 containerd shim API 进行操作，可能导致容器逃逸获取主机权限、修改主机文件等危害。&lt;/p&gt;&#xA;&lt;p&gt;官方建议升级 containerd 以修复和防御该攻击；当然业务在使用时，也建议如无特殊需求不要将任何 host 的 namespace 共享给容器，如 Kubernetes PODS 设置 hostPID: true、hostIPC: true、hostNetwork: true 等。&lt;/p&gt;&#xA;&lt;p&gt;我们测试升级 containerd 可能导致运行容器退出或重启，有状态容器节点的升级要极为慎重。也因为如此，业务针对该问题进行 containerd 升级的概率并不高。&lt;/p&gt;&#xA;&lt;p&gt;利用目前最方便的 EXP 为：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cdk-team/CDK/wiki/Exploit:-shim-pwn&#34;&gt;https://github.com/cdk-team/CDK/wiki/Exploit:-shim-pwn&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft66U7coycRmetNGibBpXjwjN6mjYogWazh856zC1Ajmeq34tC2jXdI0Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;5.8. runc CVE-2019-5736 和容器组件历史逃逸漏洞综述&lt;/h2&gt;&#xA;&lt;p&gt;这个由 RUNC 实现而导致的逃逸漏洞太出名了，出名到每一次提及容器安全能力或容器安全研究都会被拿出来当做案例或 DEMO。但不得不说，这里的利用条件在实际的攻防场景里还是过于有限了；实际利用还是需要一些特定的场景才能真的想要去使用和利用它。&lt;/p&gt;&#xA;&lt;p&gt;这里公开的 POC 很多，不同的环境和操作系统发行版本利用起来有一定的差异，可以参考进行利用：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;github.com/feexd/pocs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;github.com/twistlock/RunC-CVE-2019-5736&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;github.com/AbsoZed/DockerPwn.py&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;github.com/q3k/cve-2019-5736-poc&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;至于我们实际遇到的场景可以在 “容器相关组件的历史漏洞” 一章中查看。从攻防角度不得不说的是，这个漏洞的思路和 EXP 过于出名，几乎所有的 HIDS 都已经具备检测能力，甚至对某些 EXP 文件在静态文件规则上做了拉黑，所以大部分情况是使用该方法就等于在一定程度上暴露了行踪，需要谨慎使用。&lt;/p&gt;&#xA;&lt;h2&gt;5.9. 内核漏洞提权和逃逸概述&lt;/h2&gt;&#xA;&lt;p&gt;容器共享宿主机内核，因此我们可以使用宿主机的内核漏洞进行容器逃逸，比如通过内核漏洞进入宿主机内核并更改当前容器的 namespace，在历史内核漏洞导致的容器逃逸当中最广为人知的便是脏牛漏洞（CVE-2016-5195）了。&lt;/p&gt;&#xA;&lt;p&gt;同时，近期还有一个比较出名的内核漏洞是 CVE-2020-14386，也是可以导致容器逃逸的安全问题。&lt;/p&gt;&#xA;&lt;p&gt;这些漏洞的 POC 和 EXP 都已经公开，且不乏有利用行为，但同时大部分的 EDR 和 HIDS 也对 EXP 的利用具有检测能力，这也是利用内核漏洞进行容器逃逸的痛点之一。&lt;/p&gt;&#xA;&lt;h2&gt;5.10. 写 StaticPod 逃逸或权限维持&lt;/h2&gt;&#xA;&lt;p&gt;利用 Static Pod 是我们在容器逃逸和远程代码执行场景找到的解决方案，他是 Kubernetes 里的一种特殊的 Pod，由节点上 kubelet 进行管理。在漏洞利用上有以下几点明显的优势：&lt;/p&gt;&#xA;&lt;p&gt;1、 仅依赖于 kubelet&lt;/p&gt;&#xA;&lt;p&gt;Static Pod 仅依赖 kubelet，即使 K8s 的其他组件都奔溃掉线，删除 apiserver，也不影响 Static Pod 的使用。在 Kubernetes 已经是云原生技术事实标准的现在，kubelet 几乎运行与每个容器母机节点之上。&lt;/p&gt;&#xA;&lt;p&gt;2、 配置目录固定&lt;/p&gt;&#xA;&lt;p&gt;Static Pod 配置文件写入路径由 kubelet config 的 staticPodPath 配置项管理，默认为 /etc/kubernetes/manifests 或 /etc/kubelet.d/，一般情况不做更改。&lt;/p&gt;&#xA;&lt;p&gt;3、 执行间隔比 Cron 更短&lt;/p&gt;&#xA;&lt;p&gt;通过查看 Kubernetes 的源码，我们可以发现 kubelet 会每 20 秒监控新的 POD 配置文件并运行或更新对应的 POD；由&amp;nbsp;&lt;code&gt;c.FileCheckFrequency.Duration = 20 * time.Second&lt;/code&gt;&amp;nbsp;控制，虽然 Cron 的每分钟执行已经算是非常及时，但 Static Pod 显然可以让等待 shell 的时间更短暂，对比 /etc/cron.daily/* ， /etc/cron.hourly/* ， /etc/cron.monthly/* ， /etc/cron.weekly/* 等目录就更不用说了。&lt;/p&gt;&#xA;&lt;p&gt;另外，Cron 的分钟级任务也会遇到重复多次执行的问题，增加多余的动作更容易触发 IDS 和 IPS，而 Static Pod 若执行成功就不再调用，保持执行状态，仅在程序奔溃或关闭时可自动重启&lt;/p&gt;&#xA;&lt;p&gt;4、 进程配置更灵活&lt;/p&gt;&#xA;&lt;p&gt;Static Pod 支持 Kubernetes POD 的所有配置，等于可以运行任意配置的容器。不仅可以配置特权容器和 HostPID 使用 nscenter 直接获取容器母机权限；更可以配置不同 namespace、capabilities、cgroup、apparmor、seccomp 用于特殊的需求。&lt;/p&gt;&#xA;&lt;p&gt;灵活的进程参数和 POD 配置使得 Static Pod 有更多方法对抗 IDS 和 IPS，因此也延生了很多新的对抗手法，这里就不再做过多介绍。&lt;/p&gt;&#xA;&lt;p&gt;5、 检测新文件或文件变化的逻辑更通用&lt;/p&gt;&#xA;&lt;p&gt;最重要的是，Static Pod 不依赖于 st_mtime 逻辑，也无需设置可执行权限，新文件检测逻辑更加通用。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;func (s *sourceFile) extractFromDir(name string) ([]*v1.Pod, error) {&#xA;    dirents, err := filepath.Glob(filepath.Join(name, &#34;[^.]*&#34;))&#xA;    if err != nil {&#xA;        return nil, fmt.Errorf(&#34;glob failed: %v&#34;, err)&#xA;    }&#xA;    pods := make([]*v1.Pod, 0, len(dirents))&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;而文件更新检测是基于 kubelet 维护的 POD Hash 表进行的，配置的更新可以很及时和确切的对 POD 容器进行重建。Static Pod 甚至包含稳定完善的奔溃重启机制，由 kubelet 维护，属于 kubelet 的默认行为无需新加配置。操作系统层的痕迹清理只需删除 Static Pod YAML 文件即可，kubelet 会自动移除关闭运行的恶意容器。同时，对于不了解 Static Pod 的蓝队选手来说，我们需要注意的是，使用&amp;nbsp;&lt;code&gt;kubectl delete&lt;/code&gt;&amp;nbsp;删除恶意容器或使用&amp;nbsp;&lt;code&gt;docker stop&lt;/code&gt;&amp;nbsp;关闭容器都无法完全清除 Static Pod 的恶意进程，kubelet 会守护并重启该 Pod。&lt;/p&gt;&#xA;&lt;h2&gt;6. 容器相关组件的历史漏洞&lt;/h2&gt;&#xA;&lt;p&gt;2020 年我们和腾讯云的同学一起处理跟进分析了多个官方开源分支所披露的安全问题，并在公司内外的云原生能力上进行复现、分析，从产品和安全两个角度出发探讨攻击场景，保障云用户和业务的安全。&lt;/p&gt;&#xA;&lt;p&gt;其中投入时间比较多的，主要是以下十个漏洞，每个都非常有趣，且都在云产品上得到了妥善的跟进和安全能力建设：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftfyYibISQBmbTeyibKy0TwkdDMtGJIqoqlCDKkH4vaHxbb2MkzU3W6LRA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;实际攻防场景里面我真实用过且在关键路径里起到作用的也就 CVE-2020-15257，其它漏洞的 POC 都只在漏洞公开时自建测试的环境复现和公司内服务的漏洞挖掘用了一下，有些环境虽然有漏洞，但是实际打真实目标却没怎么用得上。&lt;/p&gt;&#xA;&lt;p&gt;值得一提的是最开始跟进分析时，因为 EXP 需要钓鱼让管理员去执行 docker exec 或 kubectl exec 才可以触发，所以不怎么看好的 CVE-2019-5736 RUNC 容器逃逸漏洞；反而是真的遇到几个无交互即可触发的场景。主要是 vscode server、jupyter notebook、container webconsole 等这种提供容器内交互式 shell 的多租户场景在企业内网里变多了，容器逃逸之后就是新的网络环境和主机环境。&lt;/p&gt;&#xA;&lt;h2&gt;7. 容器、容器编排组件 API 配置不当或未鉴权&lt;/h2&gt;&#xA;&lt;p&gt;就安全问题来说，业界普遍接触最多、最首当其冲的就是容器组件服务的未鉴权问题。我们在 2019 年的时候整理了一份 Kubernetes 架构下常见的开放服务指纹，提供给到了地表最强的扫描器洞犀团队，就现在看来这份指纹也是比较全的。&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;kube-apiserver: 6443, 8080&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kubectl proxy: 8080, 8081&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kubelet: 10250, 10255, 4149&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;dashboard: 30000&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;docker api: 2375&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;etcd: 2379, 2380&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kube-controller-manager: 10252&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kube-proxy: 10256, 31442&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kube-scheduler: 10251&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;weave: 6781, 6782, 6783&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kubeflow-dashboard: 8080&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;前六个服务的非只读接口我们都曾经在渗透测试里遇到并利用过，都是一旦被控制可以直接获取相应容器、相应节点、集群权限的服务，也是广大公网蠕虫的必争之地。&lt;/p&gt;&#xA;&lt;h2&gt;7.1. 组件分工&lt;/h2&gt;&#xA;&lt;p&gt;各个组件未鉴权所能造成的风险，其实从它们在 Kubernetes 集群环境里所能起到的作用就能很明显的判断出来，如 APIServer 是所有功能的主入口，则控制 APIServer 基本上等同控制集群的所有功能；而 kubelet 是单个节点用于进行容器编排的 Agent，所以控制 kubelet 主要是对单个节点下的容器资源进行控制。&lt;/p&gt;&#xA;&lt;p&gt;组件分工上较为完整的图例可参考：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftdtJiaulxvzaFwvM2qeOiatjO2G11dHW3xZmiaicBunCZiazicZKPH7gZYhpg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;想必这样也相对晦涩难懂，我简化了一下，假如用户想在集群里面新建一个容器集合单元，那各个组件以此会相继做什么事情呢？&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;用户与 kubectl 或者 Kubernetes Dashboard 进行交互，提交需求。（例: kubectl create -f pod.yaml）;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kubectl 会读取 ~/.kube/config 配置，并与 apiserver 进行交互，协议：http/https;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;apiserver 会协同 ETCD 等组件准备下发新建容器的配置给到节点，协议：http/https（除 ETCD 外还有例如 kube-controller-manager, scheduler 等组件用于规划容器资源和容器编排方向，此处简化省略）;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;apiserver 与 kubelet 进行交互，告知其容器创建的需求，协议：http/https；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kubelet 与 Docker 等容器引擎进行交互，创建容器，协议：http/unix socket.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;至此我们的容器已然在集群节点上创建成功，创建的流程涉及 ETCD、apiserver、kubelet、dashboard、docker remote api 等组件，可见每个组件被控制会造成的风险和危害，以及相应的利用方向；&lt;/p&gt;&#xA;&lt;p&gt;对于这些组件的安全性，除了不同组件不一样的鉴权设计以外，网络隔离也是非常必要的，常规的 iptables 设置和规划也可以在容器网络中起到作用（容器网络的很多能力也是基于 iptables 实现的）。&lt;/p&gt;&#xA;&lt;p&gt;另外比较有容器特色的方案就是 Network Policy 的规划和服务网格的使用，能从容器、POD、服务的维度更加优雅的管理和治理容器网络以及集群内流量。这些组件的资料和对应渗透手法，这里我们一一介绍一下:&lt;/p&gt;&#xA;&lt;h2&gt;7.2.&amp;nbsp;apiserver&lt;/h2&gt;&#xA;&lt;p&gt;如果想要攻击 apiserver, 下载 kubectl 是必经之路。&lt;/p&gt;&#xA;&lt;p&gt;curl -LO &#34;&lt;a href=&#34;https://dl.Kubernetes.io/release/$(curl&#34;&gt;https://dl.Kubernetes.io/release/$(curl&lt;/a&gt; -L -s &lt;a href=&#34;https://dl.Kubernetes.io/release/stable.txt)/bin/linux/amd64/kubectl&#34;&gt;https://dl.Kubernetes.io/release/stable.txt)/bin/linux/amd64/kubectl&lt;/a&gt;&#34;&lt;/p&gt;&#xA;&lt;p&gt;默认情况下，apiserver 都是有鉴权的：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftM9oEyDHU4pstSLynedSxPkZn3uuzJ4VXzdHrnUh00cljFu0UOibnc3Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当然也有未鉴权的配置：kube-apiserver --insecure-bind-address=0.0.0.0 --insecure-port=8080，此时请求接口的结果如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftibmOReZolOmwMr0YkrznWE9ZJ0BN3sE1QOlw5LSgMWpUv8c2znbNAiag/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;对于这类的未鉴权的设置来说，访问到 apiserver 一般情况下就获取了集群的权限：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftqK18Uoe76DboIH9ffRN54PjPXaYDheClyBAEZ37ib7v0ibzZ792oNNNg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可能还有同学不知道 apiserver 在 Kubernetes / 容器编排集群里的重要地位，这里简单介绍一下：在蓝军眼中的 Kubernetes APIServer 其重要性，如下图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftXeGING1DWkTWc8UOib0eJabJvib590vZU3o9LhrKW8ZZFXHdLInRAq3g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;所以，对于针对 Kubernetes 集群的攻击来说，获取 admin kubeconfig 和 apiserver 所在的 master node 权限基本上就是获取主机权限路程的终点。&lt;/p&gt;&#xA;&lt;p&gt;至于如何通过 apiserver 进行持续渗透和控制，参考 kubectl 的官方文档是最好的：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://Kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;https://Kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2&gt;7.3. kubelet&lt;/h2&gt;&#xA;&lt;p&gt;每一个 Node 节点都有一个 kubelet 服务，kubelet 监听了 10250，10248，10255 等端口。&lt;/p&gt;&#xA;&lt;p&gt;其中 10250 端口是 kubelet 与 apiserver 进行通信的主要端口，通过该端口 kubelet 可以知道自己当前应该处理的任务，该端口在最新版 Kubernetes 是有鉴权的，但在开启了接受匿名请求的情况下，不带鉴权信息的请求也可以使用 10250 提供的能力；因为 Kubernetes 流行早期，很多挖矿木马基于该端口进行传播和利用，所以该组件在安全领域部分群体内部的知名度反而会高于 APIServer。&lt;/p&gt;&#xA;&lt;p&gt;在新版本 Kubernetes 中当使用以下配置打开匿名访问时便可能存在 kubelet 未授权访问漏洞：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftjpiaZkeEpJDRXf1GS3Nlm9abfNO8O1dRRxUkfZqZ348GMgcib4JgdkRw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果 10250 端口存在未授权访问漏洞，那么我们可以先使用 / pods 接口获取集群的详细信息，如 namespace，pods，containers 等&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftza2qbic1CqZm3icSicwqGdQnlEh3tsbyKjicmgeh1jVibjb2gibHLaHDYI4Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;之后再通过&lt;/p&gt;&#xA;&lt;p&gt;curl -k &lt;a href=&#34;https://Kubernetes-node-ip:10250/run///&#34;&gt;https://Kubernetes-node-ip:10250/run///&lt;/a&gt; -d “cmd=id” 的方式在任意容器里执行命令&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftzyicibzfCRmZZVmRdbO0Aibn7LI4132GPk73g7pwkqepME7ekBaZEw7tQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时，选择我们所有控制的容器快速过滤出高权限可逃逸的容器就很重要，在上述 /pods API 中可以获取到每个 POD 的配置，包括了 host*、securityContext、volumes 等配置，可以根据容器逃逸知识快速过滤出相应的 POD 进行控制。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSfttdDKiaAdhbeGWsnJzJibwcbfDOwFibRibvylp5hobyicibzG028FENiaF8rbw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;由于这里 10250 鉴权当前的 Kubernetes 设计是默认安全的，所以 10255 的开放就可能更加容易在红蓝对抗中起到至关重要的作用。10255 本身为只读端口，虽然开放之后默认不存在鉴权能力，无法直接利用在容器中执行命令，但是可以获取环境变量 ENV、主进程 CMDLINE 等信息，里面包含密码和秘钥等敏感信息的概率是很高的，可以快速帮我们在对抗中打开局面。&lt;/p&gt;&#xA;&lt;h2&gt;7.4. dashboard&lt;/h2&gt;&#xA;&lt;p&gt;dashboard 是 Kubernetes 官方推出的控制 Kubernetes 的图形化界面，在 Kubernetes 配置不当导致 dashboard 未授权访问漏洞的情况下，通过 dashboard 我们可以控制整个集群。&lt;/p&gt;&#xA;&lt;p&gt;在 dashboard 中默认是存在鉴权机制的，用户可以通过 kubeconfig 或者 Token 两种方式登录，当用户开启了 enable-skip-login 时可以在登录界面点击 Skip 跳过登录进入 dashboard&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftxutjWrROJS2HetWnJL1wzjMU355bCb7KjSBfu9yCxeVjiaKoKjh2rlw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然而通过点击 Skip 进入 dashboard 默认是没有操作集群的权限的，因为 Kubernetes 使用 RBAC(Role-based access control) 机制进行身份认证和权限管理，不同的 serviceaccount 拥有不同的集群权限。&lt;/p&gt;&#xA;&lt;p&gt;我们点击 Skip 进入 dashboard 实际上使用的是 Kubernetes-dashboard 这个 ServiceAccount，如果此时该 ServiceAccount 没有配置特殊的权限，是默认没有办法达到控制集群任意功能的程度的。&lt;/p&gt;&#xA;&lt;p&gt;但有些开发者为了方便或者在测试环境中会为 Kubernetes-dashboard 绑定 cluster-admin 这个 ClusterRole（cluster-admin 拥有管理集群的最高权限）。&lt;/p&gt;&#xA;&lt;p&gt;这个极具安全风险的设置，具体如下：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt;新建 dashboard-admin.yaml 内容如下（该配置也类似于 “利用大权限的 Service Account” 一小节的配置 ）&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSfticH5NXjL1A5BAceJmkqQHSHL0NcKWevHlFricISGwLaIQiayeuU0RebIQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;执行 kubectl create -f dashboard-admin.yaml&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;此时用户通过点击 Skip 进入 dashboard 即可拥有管理集群的权限了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftYmIEUwGXaNtDvxLrYmbMgYp470KFrZEugWXdTdBeVY2dLKVHRFayOQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入到 dashboard 我们可以管理 Pods、CronJobs 等，这里介绍下我们如何通过创建 Pod 控制 node 节点。&lt;/p&gt;&#xA;&lt;p&gt;我们新建一个以下配置的 Pod，该 pod 主要是将宿主机根目录挂载到容器 tmp 目录下。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftXETcKPkAS5r8rm1ZoyACLWGx74PftXkJSs0zBA0unAYMPT9E7bgWBQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;之后我们便可以通过该容器的 tmp 目录管理 node 节点的文件。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftwota0l4oVnG2gI2D4mS6TlQaaljFHgTcwZ84ujRBibh5OdP5Jz4fzkA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftOne3a77LTdFNhia8tudS6uo4eXP8wwL83KLGK41ibx4h04fOandVQ0bg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;值得注意的是，为了集群的稳定性和安全性要求，在 Kubernetes 默认设计的情况下 Pod 是不能调度到 master 节点的，但如果用户自行设置关闭了 Master Only 状态，那么我们可以直接在 master 节点新建 Pod 更直接的控制 master node；不过目前各大主流云产商上的 Kubernetes 集群服务，都会默认推荐让 Master 节点由云厂商托管，更加加剧了 Master 节点渗透和控制的难度 。&lt;/p&gt;&#xA;&lt;h2&gt;7.5. etcd&lt;/h2&gt;&#xA;&lt;p&gt;etcd 被广泛用于存储分布式系统或机器集群数据，其默认监听了 2379 等端口，如果 2379 端口暴露到公网，可能造成敏感信息泄露，本文我们主要讨论 Kubernetes 由于配置错误导致 etcd 未授权访问的情况。Kubernetes 默认使用了 etcd v3 来存储数据，如果我们能够控制 Kubernetes etcd 服务，也就拥有了整个集群的控制权。&lt;/p&gt;&#xA;&lt;p&gt;在 Kubernetes 中用户可以通过配置 / etc/Kubernetes/manifests/etcd.yaml 更改 etcd pod 相关的配置，倘若管理员通过修改配置将 etcd 监听的 host 修改为 0.0.0.0，则通过 ectd 获取 Kubernetes 的认证鉴权 token 用于控制集群就是自然而然的思路了，方式如下：&lt;/p&gt;&#xA;&lt;p&gt;首先读取用于访问 apiserver 的 token&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft9L0VJiaVHwkv7NYMms1GE6x8atYPbJGn3GjMLP8GyoVuialJY8boeg1g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftSKBkEC7icKASMRq3ccycnKCSaWyEAoK3ib2Q2WDHXDpgGZGcSoicv6wuQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;利用 token 我们可以通过 apiserver 端口 6443 控制集群：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftLhA7tToh4wYcXDpeico3iaTgcaiaQdiaiajQF2jw0aXc6iaDrGdEb0ibB1epA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;7.6. docker remote api&lt;/h2&gt;&#xA;&lt;p&gt;Docker Engine API 是 Docker 提供的基于 HTTP 协议的用于 Docker 客户端与 Docker 守护进程交互的 API，Docker daemon 接收来自 Docker Engine API 的请求并处理，Docker daemon 默认监听 2375 端口且未鉴权，我们可以利用 API 来完成 Docker 客户端能做的所有事情。&lt;/p&gt;&#xA;&lt;p&gt;Docker daemon 支持三种不同类型的 socket: unix, tcp, fd。默认情况下，Docker daemon 监听在 unix:///var/run/docker.sock，开发者可以通过多种方式打开 tcp socket，比如修改 Docker 配置文件如 / usr/lib/systemd/system/docker.service：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft5rRHUuRvfdbtVIQT9KvN9jN6fuMMR6DEqkOmQq5Qk7eZjTDAYBFQ7g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;之后依次执行 systemctl daemon-reload、systemctl restart docker 便可以使用 docker -H tcp://[HOST]:2375 这种方式控制目标 docker&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftFYmmUrU7CwrIjs8FWGmjVppvdeq1LsdgFuUDQKsWHUX5zic4rgEwDdQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftMyam51E9TJW5XdHt0BR9pfGsRhuITsxFcSqFuR5vjgJDqq31naglFw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;因此当你有访问到目标 Docker API 的网络能力或主机能力的时候，你就拥有了控制当前服务器的能力。我们可以利用 Docker API 在远程主机上创建一个特权容器，并且挂载主机根目录到容器，对主机进行进一步的渗透，更多利用方法参考容器逃逸章节。&lt;/p&gt;&#xA;&lt;p&gt;检测目标是否存在 docker api 未授权访问漏洞的方式也很简单，访问 http://[host]:[port]/info 路径是否含有 ContainersRunning、DockerRootDir 等关键字。&lt;/p&gt;&#xA;&lt;h2&gt;7.7. kubectl proxy&lt;/h2&gt;&#xA;&lt;p&gt;kubectl proxy 这个子命令大家可能遇到比较少，这里单独介绍一下；由于上述几个组件的安全问题较为常见和出名，且在目前开源分支里它们在鉴权这个方面都是默认安全的，所以直接出现问题的可能性较小，企业在内外网也都收敛得不错；此时 kubectl proxy 这个子命令反而是另一个常见且蠕虫利用起来非常简单粗暴的问题。&lt;/p&gt;&#xA;&lt;p&gt;了解使用过 Kubernetes 的同学应该知道，如果你在集群的 POD 上开放一个端口并用 ClusterIP Service 绑定创建一个内部服务，如果没有开放 NodePort 或 LoadBalancer 等 Service 的话，你是无法在集群外网访问这个服务的（除非修改了 CNI 插件等）。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftTo2SWAYNZmQYibibfOa1ur0j4rV4vfytPaVS9yx1C03Sc4xPulcibyG5A/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果想临时在本地和外网调试的话，kubectl proxy 似乎是个不错的选择。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftMCKwyeAcnN0P2vs5POWIRoAzSCsicLWRiaFaWhOOFI3YkZdCVFwltISA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;但其实 kubectl proxy 转发的是 apiserver 所有的能力，而且是默认不鉴权的，所以 --address=0.0.0.0 就是极其危险的了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft3OEqmTq1QzrDCBqE9UibQn3hiboicicYHCaMbn3dAjDdJxrt4QHibAqZV9w/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;所以这里的利用和危害和 APIServer 的小节是相似的。&lt;/p&gt;&#xA;&lt;h2&gt;8. 容器镜像安全问题&lt;/h2&gt;&#xA;&lt;p&gt;容器镜像的安全扫描能力是很多乙方商业产品和甲方安全系统首先会推进的容器安全建设方向。不像容器运行时安全监控需要较高的成本、稳定性要求和技术积累，也有业界相对成熟的开源方案。&lt;/p&gt;&#xA;&lt;p&gt;容器镜像是容器安全非常关键且重要的一环，当获取到节点权限或管理员 PC 权限时，~/.docker/config.json 文件内就可能存有镜像仓库账号和密码信息，用户名和密码只用 Base64 编码了一下，对于安全人员来说和没有是一样的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftblRJtmc8ibDkyGhiay04AvRp9kpUbP0urpobAKnXXbcAhGqfDq0YKH0g/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;很多 POD 和线上容器在使用镜像时，可能用 latest 或默认没有指定版本，所以劫持镜像源之后只要在原本的 latest 之上植入恶意代码并 push 新的版本镜像，就可以在获取镜像权限之后进而获取线上的容器权限。&lt;/p&gt;&#xA;&lt;p&gt;不仅在安全攻防领域，作为一个长期依赖容器技术的半吊子开发者，我也不建议用 latest 镜像标签作为线上环境的长期方案；从研发运维角度的最佳实践来看，使用特定版本的 TAG 且可以和代码版本控制相对应是比较推荐的方案，应该保障每个镜像都是可追踪溯源的。&lt;/p&gt;&#xA;&lt;p&gt;比较有趣的是，我们曾经遇到企业在基础容器镜像里打入 sshd 并且在 init.sh 主程序中启动 sshd 程序（无论是安全还是容器架构最佳实践都是不建议的），导致所有 Kubernetes 集群里的容器都会开放 22 端口并且拥有一样的 / etc/shadow 文件和 / root/.ssh/authorized_keys。这就代表所有的容器都可以使用一个通用密码和 ssh 证书去登录。因此在逃逸获取容器的宿主机权限后，分析容器基础镜像的通用安全问题确实可以很快扩大影响面。&lt;/p&gt;&#xA;&lt;h2&gt;9. 二次开发所产生的安全问题&lt;/h2&gt;&#xA;&lt;h2&gt;9.1. 对 Kubernetes API 的请求转发或拼接&lt;/h2&gt;&#xA;&lt;p&gt;熟悉 Kubernetes 架构的同学可能知道，管理员管理 Kubernetes 无论是使用 kubectl 或 Kubernetes dashboard 的 UI 功能，其实都是间接在和 APIServer 做交互。&lt;/p&gt;&#xA;&lt;p&gt;参考官方的架构图：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftE9uEUhww0LFR8Tbs7YDicEddrKdZnGEVVqa495YOsUzGODrvj29sVsg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;那么如果需求需要在 Kubernetes 原本的能力上做开发的话，很有可能产品后端就是请求了 APIServer 的 Rest API 实现的。&lt;/p&gt;&#xA;&lt;p&gt;攻击者破坏程序原本想对 APIServer 所表达的语义，注入或修改 Rest API 请求里所要表达的信息，就可以达到意想不到的效果。&lt;/p&gt;&#xA;&lt;p&gt;例如下面的代码，用户传入 namespace、pod 和容器名即可获取相应容器的日志：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftljXMiblpicwPTFm2fiaicCwpxO9s7kz24VWeubW8INcGcu7fHOVjibu2n0Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;相似的需求和 API 还有例如：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt;到用户自己的容器内创建一个 web console 供用户进行远程调试, POST https:/apiserver:&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;8443/api/v1/namespaces/default/pods/nginx/exec?command=bash&amp;amp;container=nginx&amp;amp;stdin=true&amp;amp;stdout=true&amp;amp;tty=true&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;给用户销毁自己 POD 的能力， DELETE &lt;a href=&#34;https://apiserver&#34;&gt;https://apiserver&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;8443/api/v1/namespaces/default/pods/sleep-75c6fd99c-g5kss&lt;/p&gt;&#xA;&lt;p&gt;这类型的需求在多租户的集群设计里比较常见。渗透测试选手看到这样的代码或 API，首先想到的就是越权，把 namespace、pod 和容器名修改为他人的，就可以让二次开发的代码去删除其他用户的 POD、进入其他用户的容器里执行命令、获取其它 POD 的日志等。&lt;/p&gt;&#xA;&lt;p&gt;除了上述的功能点，这里比较容易出问题且影响较大的功能和业务逻辑是多租户集群平台的自研 Web Console 功能，Web Console 的越权问题可以直接导致任意容器登录和远程控制，也是非常值得关注的一个点。&lt;/p&gt;&#xA;&lt;p&gt;其实我们甚至可以修改获取日志、删除 POD、执行命令的 Rest API 语义：&lt;/p&gt;&#xA;&lt;p&gt;例如在上述 namespace 命名空间处插入 “default/configmaps/istio-ca-root-cert?ingore=”，&lt;/p&gt;&#xA;&lt;p&gt;原本请求的&lt;/p&gt;&#xA;&lt;p&gt;&#34;&lt;a href=&#34;https://apiserver:6443/api/v1/namespaces/istio-dev/pods/service-account-simple/lo&#34;&gt;https://apiserver:6443/api/v1/namespaces/istio-dev/pods/service-account-simple/lo&lt;/a&gt; g?container=test-container&#34;&amp;nbsp;&lt;/p&gt;&#xA;&lt;p&gt;就会转变为&lt;/p&gt;&#xA;&lt;p&gt;&#34;&lt;a href=&#34;https://apiserver:6443/api/v1/namespaces/default/configmaps/istio-ca-root-cert?ingore=/pods/service-account-simple/lo&#34;&gt;https://apiserver:6443/api/v1/namespaces/default/configmaps/istio-ca-root-cert?ingore=/pods/service-account-simple/lo&lt;/a&gt; g?container=test-container&#34;，&lt;/p&gt;&#xA;&lt;p&gt;实际就是请求了&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://apiserver:6443/api/v1/namespaces/default/configmaps/istio-ca-root-cert%EF%BC%8C%E4%BB%8E%E8%8E%B7%E5%8F%96%E6%97%A5%E5%BF%97%E8%BD%AC%E5%8F%98%E4%BA%86%E4%B8%BA%E8%8E%B7%E5%8F%96&#34;&gt;https://apiserver:6443/api/v1/namespaces/default/configmaps/istio-ca-root-cert，从获取日志转变了为获取&lt;/a&gt; configmap。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftO66YjDQMVGFz5zhTJLiaNA9ySASneO662ARGOsDp7sm4rYkib4E1MyAQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;10. Serverless&lt;/h2&gt;&#xA;&lt;p&gt;Serverless 还有一个比较大漏洞挖掘的方向是资源占用，例如驻留进程，驻留文件，进程偷跑，句柄耗尽等条件竞争漏洞，用于影响多租户集群，占用计算资源等。我们之前也研究过相关的安全漏洞和利用方法，但因为和传统的黑客攻防对抗相关性较少，此处暂且不表。&lt;/p&gt;&#xA;&lt;p&gt;这里只描述那些确实成为安全演习关键路径一环的漏洞。&lt;/p&gt;&#xA;&lt;h2&gt;10.1. 文件驻留导致命令执行&lt;/h2&gt;&#xA;&lt;p&gt;有些 Serverless 实现在应用程序生命周期结束之后，程序文件的清理上进入了僵局。一方面开发者希望借助容器 “对 Linux Cgroup 和 Namespace 进行管理的特性” 用于实现限制应用的资源访问能力和进程权限的需求；在此之上，开发者希望能更快的达到用户文件清理的目的，避免反复初始化容器环境带来的时间和资源上的消耗，复用同一个容器环境。&lt;/p&gt;&#xA;&lt;p&gt;而在蓝军的视角里，这样的处理方式会导致多个用户的应用会存在多个用户在不同时间段使用一个容器环境的情况，在安全性上是比较难得到保障的。&lt;/p&gt;&#xA;&lt;p&gt;以面向 Python 开发者的 Serverless 架构为例，开发者所构想的简化模型是这样的：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftrDqh6Mv2jkjXAsnotwCywtqGaNCDdHt7PavrjRInTzUVOY9eUwhdUg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;用户文件清理的代码实现上，简化可参考：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftypEhfurOuOClWQrtN3z8IhAL84xibuB2W8ERiaVN8uk2euZViaGvvH2ew/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在进行包括上述文件删除动作在内的一系列环境清理工作之后，容器内外的主调度进程会写入其他租户的代码到当前容器内，此时这个容器就进入了下一个应用的 Serverless 生命周期。&lt;/p&gt;&#xA;&lt;p&gt;虽然，主框架代码实现内有很多类似调用系统命令拼接目录等参数进行执行的代码实现，但是类似命令注入的问题大多只能影响到当前的生命周期；而又因为用户权限的问题，我们没办法修改其他目录下的文件。&lt;/p&gt;&#xA;&lt;p&gt;于是我们构建了这样一个目录和文件：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftuEbNuIjDbKaMYLBwvlAVozHU0ZcicdsnOor5ZND4Hgy3vRn6CXskQFg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当程序执行 rm -rf * 时，因为 bash glob 对 * 号的返回是有默认排序的，这里可参考下方 bash 的文档，只要我们不去修改 LC_ALL 的环境变量，我们构造的 --help 文件会排列在文件列表的最前方，导致 rm 会执行 rm --help 而终止，恶意文件得以保留。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Pathname Expansion&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;After word splitting, unless the -f option has been set, bash scans each word for the characters *, ?, and [. If one of these characters appears, then the word is regarded as a pattern, and replaced with an alphabetically sorted list of file names matching the pattern.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;我们可以简单在 bash 内进行验证，可以看到 rm -rf * 命令被 --help 强行终止，我们所植入的恶意文件还依然存在没有被清理掉，同时 rm --help 的命令执行返回为 0，不会产生 OS ERROE Code，清理进程会认为这里的清除命令已经成功执行：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftpjnbtv45r37Ov4icyG36okaRFb5uywHMRbPPmRAiaP1cuk33ORSwhicLg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;而实际在 serverless log 里的返回，可参考：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftD7gxhR3T4yGxysBJPlceL9wS1Cfvw7kVEgFibFrLqkMGaHfIrcyAOCw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时，serverless 的主调度程序会以为自己已经正常清理了容器环境，并写入另外一个租户的源码包进行执行，而当另外一个租户的代码执行至 import requests 时，我们驻留在应用目录下的 requests.py 内的恶意代码就会被执行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftTLwvYdm6tuj1pzCs8k7x3S2aPQ6cYRkUbvs2TADAYX7pQUVJMD4tiag/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;不过值得注意的是，因为 serverless 的生命周期一般极为有限，所以此时获取的 shell 可能会在短时间结束，触发新一轮的反弹 shell，且 Servless 容器环境内的信息相对单一和简便。所以容器环境里值得我们探索和翻找的地方也不多，一般需要关注：]&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;新的代码&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;代码内部配置&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;环境变量&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;秘钥、证书、密码信息等&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;不同的 serverless 架构实现对于存储和传递相应信息的方式各有不同。&lt;/p&gt;&#xA;&lt;h2&gt;10.2. 攻击公用容器 / 镜像&lt;/h2&gt;&#xA;&lt;p&gt;现在我们知道了，很多 Serverless 的用户代码都跑在一个个容器内。不同应用的代码运行于不同的容器之上，依靠容器原本的能力进行资源回收和隔离。由于 Serverless 应用的代码会进行相应的结构化解耦，且每个应用容器的底层环境相对来说是一致的。所以其实，根据应用漏洞获取更多应用类 Serverless 容器不仅困难而且在内网渗透中作用相对较为有限，能做的事情也相对较少。&lt;/p&gt;&#xA;&lt;p&gt;但其实在不同的 Serverless 架构中，都有多类持久化且公用的容器以实现程序调度、代码预编译、代码下载运行等逻辑。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftqufjNJKdpiaBRywruibXuUElXU2rDiaicQnIAPcruJ2SLJpPmVOicMQOFWA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这类容器一般拥有获取所有用户代码、配置和环境变量的能力，同时也比较容易出现 Docker IN Docker 或大权限 Service Account 的设计。&lt;/p&gt;&#xA;&lt;p&gt;如何控制这类型的容器呢？以下是我们在攻防过程中遇到的场景：&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt;在下载源代码时，使用 git clone 进行命令拼接，导致存在命令注入；&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftWvSD1Tu67qCpVSOavKtibTv8WYEiaKaRbVPOlh1FHPrWLqktY5eRUj2Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;在安装 node.js 依赖包时，构造特殊的 package.json 利用 preinstall 控制公用容器。&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftSBprNNstw3ok5GDpMaQbvjmoW0IRy05SzlY72qwKOtblrRVqUrx6Pg/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;配置指向恶意第三方仓库的 pip requirements.txt，利用恶意 pip 包获取依赖打包容器的权限，同类的利用手法还可以作用于 nodejs、ruby 等语言的包管理器。&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft6kHyR00oTMD2dW0589S9ib2XpiaTUrhLw4ryWKL065aODR2u4FQVhG1Q/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;因为容器镜像里的打了低版本 git、go 等程序，在执行 git clone, &amp;nbsp;git submodule update(CVE-2019-19604), go get 时所导致的命令执行，&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;下图为 CVE-2018-6574 的 POC 可参考： &lt;a href=&#34;https://github.com/neargle/CVE-2018-6574-POC/raw/master/main.go%E3%80%82&#34;&gt;https://github.com/neargle/CVE-2018-6574-POC/blob/master/main.go。&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSft6DuCaxYUibWhNTmguQic2JNtwZLTibhFjtgRGecfANIlCKoLITr8ap3rQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;11. DevOps&lt;/h2&gt;&#xA;&lt;p&gt;我们从 2019 年开始研究 DevOps 安全攻防对抗的战场，不仅研究企业内部 DevOps 平台和产品的安全性，同时也不断在内部的研发流程中积极引入 DevOps 做蓝军武器化自动化研发的测试、发布、打包和编译等流程中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;从蓝军的角度，在我们历史攻防对抗中比较值得注意的场景有以下几点：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;目前不同的 DevOps 平台可能会包含不同的 Low-Code 流水线特性，隔离上也会大量采用我们上面提及的多租户容器集群设计，所以多租户集群下的渗透测试技巧也大致无二。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;控制了上述的多租户容器集群是可以控制集群所用节点服务器的，这些服务器的作用一般用于编译和构建业务代码，并接入代码管理站点如 Gitlab、Github 等，所以一般拥有获取企业程序各业务源码的权限。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DevOps 及其相关的平台其最重要的能力之一就是 CICD，因此控制 DevOps 也就间接拥有了从办公网、开发网突破进入生产网的方法；控制的应用数量和业务种类越多，也能根据应用的不同进入不同的隔离区。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;p&gt;另外在 DevOps 平台内若集成了日志组件（云原生的重点之一：可观察性）的话，那么日志组件和 Agent 的升级、安装问题一般会是重中之重，蓝军可以根据这个点达到获取公司内任意主机权限的目地。&lt;/p&gt;&#xA;&lt;h2&gt;12. 云原生 API 网关&lt;/h2&gt;&#xA;&lt;p&gt;作为 API 网关，它具有管理集群南北流量的功能，一般也可能作为集群流量的入口和出口（ingress/egress）。而作为标榜云原生特性的 API 网关产品，似乎无一例外都会具有动态配置、灵活修改、远程管理的特性，而这些特性往往以 REST API 对外提供服务。&lt;/p&gt;&#xA;&lt;p&gt;然而在远程配置逻辑的鉴权能力上，身为网关这种基础网络的产品，各个受欢迎的开源组件在默认安全的实现上似乎还需努力。&lt;/p&gt;&#xA;&lt;p&gt;以 Kong 为例，Kong API 网关 (&lt;a href=&#34;https://github.com/Kong/kong&#34;&gt;https://github.com/Kong/kong&lt;/a&gt;) 是目前最受欢迎的云原生 API 网关之一，有开源版和企业版两个分支，被广泛应用于云原生、微服务、分布式、无服务云函数等场景的 API 接入中间件，为云原生应用提供鉴权，转发，负载均衡，监控等能力。&lt;/p&gt;&#xA;&lt;p&gt;我们曾经在一次渗透测试中使用 Kong 的远程配置能力突破外网进入到内网环境中，可以参考之前的预警文章**《腾讯蓝军安全提醒：开源云原生 API 网关 Kong 可能会成为攻击方进入企业内网的新入口》**&lt;/p&gt;&#xA;&lt;p&gt;Kong 使用 Kong Admin Rest API 作为管理 Kong Proxy 能力的关键入口，以支持最大程度的灵活性；在开源分支里，这个管理入口是没有鉴权能力的 (Kong 企业版支持对 Kong Admin Rest API 进行角色控制和鉴权)，Kong 建议用户在网络层进行访问控制；当攻击方可以访问到这个 API，他就具有了 Kong Proxy 的所有能力，可以查看和修改企业当前在南北流量管理上的配置，可以直接控制 API 网关使其成为一个开放性的流量代理 (比 SSRF 更便于使用和利用)；从攻击方的角度思考，控制了这个 API 等于是拥有了摸清网络架构和打破网络边界的能力。&lt;/p&gt;&#xA;&lt;p&gt;当蓝军可以访问到 Kong Admin Rest API &amp;nbsp;和 &amp;nbsp;Kong Proxy 时，蓝军可以通过以下步骤创建一个通往内网的代理：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftiaxerLLF2Lib6bAylq9yJDuxgYKKhEHdljWZRqe0bhoF3mQc3ydxZQZA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;至此，蓝军从外网发往 Kong Proxy 的流量只要 host 头带有 target.com 就会转发到内网的 target.com:443 中，实际利用手法会根据内网和目标站点配置的不同而变化。&lt;/p&gt;&#xA;&lt;p&gt;而目前 Kong 的开源分支里是不支持给 Kong Admin Rest API 添加相应的鉴权能力的，只可以改变监听的网卡，或使用设置 Network Policy、 iptables、安全组等方式进行网络上隔离。现在最常见的方式就是不开放外网，只允许内网访问。也因为如此，如果已经进入到内网，API 网关的管理接口会成为我首要的攻击目标之一，借此我们可以摸清当前集群对内对外提供的相关能力，更有可能直接获取流量出入口容器的 Shell 权限。&lt;/p&gt;&#xA;&lt;h2&gt;12.1. APISIX 的 RCE 利用&lt;/h2&gt;&#xA;&lt;p&gt;另外一个值得深入的开源组件就是 Apache APISIX，这是一款基于 lua 语言开发，是一个动态、实时、高性能的 API 网关， 提供负载均衡、动态上游、灰度发布、服务熔断、身份认证、可观测性等丰富的流量管理功能。&lt;/p&gt;&#xA;&lt;p&gt;APISIX 提供了 REST Admin API 功能，用户可以使用 REST Admin API 来管理 APISIX，默认情况下只允许 127.0.0.1 访问，用户可以修改 conf/config.yaml 中的 allow_admin 字段，指定允许调用 Admin API 的 ip 列表。&lt;/p&gt;&#xA;&lt;p&gt;当用户对外开启了 Admin API 且未修改硬编码的缺省 admin_key 的情况下，攻击者可以利用该 admin_key 执行任意 lua 代码。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSfto8mHNHeB77LoDPhFESbBegaNiaib0BALNkDWrh3x1EBAdoK89x01Hq1w/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;根据 apisix 官方文档可以知道，在创建路由时用户可以定义一个 filter_func 参数用于处理请求，filter_func 的内容可以是任意的 lua 代码。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftIfSbPDUz124AichVhhvGTaueXiba0Ja0E4ZyFYZRQWOp9yfsRCpRDlAA/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;那么我们便可以使用默认的 admin_key 创建恶意的 route 并访问以触发 lua 代码执行，达到 rce 的目的，下面是具体步骤：&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;（1）创建可用的 services:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftst9v4ibA2LYdvG3nqMhTHDicGqXvKq7PmofK2tK15SPF6DNVMLWf8BJw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;（2）创建恶意的 route:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftLVN26q4XLteqAicQINLQ2bBY9jmnP0Jp3hCf5Jn9WriaXiagfaibMYLl8A/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最后访问&amp;nbsp;&lt;a href=&#34;http://127.0.0.1:9080/api/tforce_test&#34;&gt;http://127.0.0.1:9080/api/tforce_test&lt;/a&gt; 即可触发预定义的 lua 代码执行。&lt;/p&gt;&#xA;&lt;p&gt;因此，在内网里攻击云原生 API 网关是比较容易打开一定局面的。&lt;/p&gt;&#xA;&lt;h2&gt;13. 其它利用场景和手法&lt;/h2&gt;&#xA;&lt;h2&gt;13.1. 从 CronJob 谈持久化&lt;/h2&gt;&#xA;&lt;p&gt;因为 CronJob 的设计和 Linux CronTab 过于相似，所以很多人都会把其引申为在 Kubernetes 集群攻击的一些持久化思路。&lt;/p&gt;&#xA;&lt;p&gt;官方文档&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://Kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&#34;&gt;https://Kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&lt;/a&gt; 里也谈及了 CronJob 和 CronTab 的对比， 这个技术也确实可以和 CronTab 一样一定程度上可以满足持久化的场景。&lt;/p&gt;&#xA;&lt;p&gt;这里有一个我们预研时使用的 &amp;nbsp;CronJob 配置：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftrrCeuxvK2FlC1SVIZx0jOQOrVfgibPg7Acwq8xadYojuKht8HvebhyQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftWJSdjSw4orHiagibFcg9JWAE78DBABCVudY6DVfAHKs6ibbKQntYicsjFQ/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此处的配置会隔每分钟创建一个具有生命周期的 POD，同时这些容器也可以使用特权容器（如上述配置）、挂载大目录等设置，此时持久化创建的 POD 就可以拥有特权和访问宿主机根目录文件的权限。&lt;/p&gt;&#xA;&lt;p&gt;不过实际对抗过程中，虽然我们也会对恶意的 POD 和容器做一定的持久化，但是直接使用 CronJob 的概率却不高。在创建后门 POD 的时候，直接使用 restartPolicy: Always 就可以方便优雅的进行后门进程的重启和维持，所以对 CronJob 的需求反而没那么高。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz_png/JMH1pEQ7qP5lIovB8NLL2Anic3icVltSftVUtO0jicZWfyBIVotbJ1D2uhQ3slMibqowUq21tdNoPlZeHQciauJN0Fw/640?wx_fmt=png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;&#xA;&lt;h2&gt;14. 致谢&lt;/h2&gt;&#xA;&lt;p&gt;[WIP]&lt;/p&gt;&#xA;&lt;p&gt;也感谢您读到现在，这篇文章匆忙构成肯定有不周到或描述不正确的地方，期待业界师傅们用各种方式指正勘误。&lt;/p&gt;&#xA;&lt;h2&gt;15. 引用&lt;/h2&gt;&#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdk-team/CDK/&#34;&gt;https://github.com/cdk-team/CDK/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://force.tencent.com/docs/CIS2020-Attack-in-a-Service-Mesh-Public.pdf?v=1&#34;&gt;https://force.tencent.com/docs/CIS2020-Attack-in-a-Service-Mesh-Public.pdf?v=1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cncf/toc/raw/master/DEFINITION.md&#34;&gt;https://github.com/cncf/toc/blob/master/DEFINITION.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cncf.io/blog/2017/04/26/service-mesh-critical-component-cloud-native-stack/&#34;&gt;https://www.cncf.io/blog/2017/04/26/service-mesh-critical-component-cloud-native-stack/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lxc/lxcfs&#34;&gt;https://github.com/lxc/lxcfs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdr/code-server&#34;&gt;https://github.com/cdr/code-server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://Kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;https://Kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thehackernews.com/2021/01/new-docker-container-escape-bug-affects.html&#34;&gt;https://thehackernews.com/2021/01/new-docker-container-escape-bug-affects.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/jorgeacetozi/Kubernetes-master-components-etcd-api-server-controller-manager-and-scheduler-3a0179fc8186&#34;&gt;https://medium.com/jorgeacetozi/Kubernetes-master-components-etcd-api-server-controller-manager-and-scheduler-3a0179fc8186&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wohin.me/rong-qi-tao-yi-gong-fang-xi-lie-yi-tao-yi-ji-zhu-gai-lan/#4-2-procfs-&#34;&gt;https://wohin.me/rong-qi-tao-yi-gong-fang-xi-lie-yi-tao-yi-ji-zhu-gai-lan/#4-2-procfs-&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://security.tencent.com/index.php/announcement/msg/193&#34;&gt;https://security.tencent.com/index.php/announcement/msg/193&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/196993.html&#34;&gt;https://www.freebuf.com/vuls/196993.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://Kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&#34;&gt;https://Kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://Kubernetes.io/zh/docs/reference/command-line-tools-reference/kubelet/&#34;&gt;https://Kubernetes.io/zh/docs/reference/command-line-tools-reference/kubelet/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cdxy.me/?p=827&#34;&gt;https://www.cdxy.me/?p=827&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/jorgeacetozi/kubernetes-master-components-etcd-api-server-controller-manager-and-scheduler-3a0179fc8186&#34;&gt;https://medium.com/jorgeacetozi/kubernetes-master-components-etcd-api-server-controller-manager-and-scheduler-3a0179fc8186&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neargle/CVE-2018-6574-POC&#34;&gt;https://github.com/neargle/CVE-2018-6574-POC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.serverless.com/blog/serverless-faas-vs-containers/&#34;&gt;https://www.serverless.com/blog/serverless-faas-vs-containers/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&#34;&gt;https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;&#xA;&lt;table&gt;                                                                                                                                                                                                                                                                                                                                                                                                                                                 &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>bitnami/bitnami-docker-kafka</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/bitnami/bitnami-docker-kafka</id>
    <link href="https://github.com/bitnami/bitnami-docker-kafka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bitnami Docker Image for Kafka&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Kafka packaged by Bitnami&lt;/h1&gt; &#xA;&lt;h2&gt;What is Apache Kafka?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Apache Kafka is a distributed streaming platform designed to build real-time pipelines and can be used as a message broker or as a replacement for a log aggregation solution for big data applications.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kafka.apache.org/&#34;&gt;Overview of Apache Kafka&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trademarks: This software listing is packaged by Bitnami. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.&lt;/p&gt; &#xA;&lt;h2&gt;TL;DR&lt;/h2&gt; &#xA;&lt;h2&gt;Run the application using Docker Compose&lt;/h2&gt; &#xA;&lt;p&gt;The main folder of this repository contains a functional &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file. Run the application using it as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -sSL https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/docker-compose.yml &amp;gt; docker-compose.yml&#xA;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why use Bitnami Images?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bitnami closely tracks upstream source changes and promptly publishes new versions of this image using our automated systems.&lt;/li&gt; &#xA; &lt;li&gt;With Bitnami images the latest bug fixes and features are available as soon as possible.&lt;/li&gt; &#xA; &lt;li&gt;Bitnami containers, virtual machines and cloud images use the same components and configuration approach - making it easy to switch between formats based on your project needs.&lt;/li&gt; &#xA; &lt;li&gt;All our images are based on &lt;a href=&#34;https://github.com/bitnami/minideb&#34;&gt;minideb&lt;/a&gt; a minimalist Debian based container image which gives you a small base container image and the familiarity of a leading Linux distribution.&lt;/li&gt; &#xA; &lt;li&gt;All Bitnami images available in Docker Hub are signed with &lt;a href=&#34;https://docs.docker.com/engine/security/trust/content_trust/&#34;&gt;Docker Content Trust (DCT)&lt;/a&gt;. You can use &lt;code&gt;DOCKER_CONTENT_TRUST=1&lt;/code&gt; to verify the integrity of the images.&lt;/li&gt; &#xA; &lt;li&gt;Bitnami container images are released daily with the latest distribution packages available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to deploy Apache Kafka in Kubernetes?&lt;/h2&gt; &#xA;&lt;p&gt;Deploying Bitnami applications as Helm Charts is the easiest way to get started with our applications on Kubernetes. Read more about the installation in the &lt;a href=&#34;https://github.com/bitnami/charts/tree/master/bitnami/kafka&#34;&gt;Bitnami Apache Kafka Chart GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bitnami containers can be used with &lt;a href=&#34;https://kubeapps.com/&#34;&gt;Kubeapps&lt;/a&gt; for deployment and management of Helm Charts in clusters.&lt;/p&gt; &#xA;&lt;h2&gt;Why use a non-root container?&lt;/h2&gt; &#xA;&lt;p&gt;Non-root container images add an extra layer of security and are generally recommended for production environments. However, because they run as a non-root user, privileged tasks are typically off-limits. Learn more about non-root containers &lt;a href=&#34;https://docs.bitnami.com/tutorials/work-with-non-root-containers/&#34;&gt;in our docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported tags and respective &lt;code&gt;Dockerfile&lt;/code&gt; links&lt;/h2&gt; &#xA;&lt;p&gt;Learn more about the Bitnami tagging policy and the difference between rolling tags and immutable tags &lt;a href=&#34;https://docs.bitnami.com/tutorials/understand-rolling-tags-containers/&#34;&gt;in our documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/3.2.0-debian-10-r9/3.2/debian-10/Dockerfile&#34;&gt;&lt;code&gt;3.2&lt;/code&gt;, &lt;code&gt;3.2-debian-10&lt;/code&gt;, &lt;code&gt;3.2.0&lt;/code&gt;, &lt;code&gt;3.2.0-debian-10-r9&lt;/code&gt;, &lt;code&gt;latest&lt;/code&gt; (3.2/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/3.1.1-debian-10-r15/3.1/debian-10/Dockerfile&#34;&gt;&lt;code&gt;3.1&lt;/code&gt;, &lt;code&gt;3.1-debian-10&lt;/code&gt;, &lt;code&gt;3.1.1&lt;/code&gt;, &lt;code&gt;3.1.1-debian-10-r15&lt;/code&gt; (3.1/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/3.0.1-debian-10-r68/3.0/debian-10/Dockerfile&#34;&gt;&lt;code&gt;3.0&lt;/code&gt;, &lt;code&gt;3.0-debian-10&lt;/code&gt;, &lt;code&gt;3.0.1&lt;/code&gt;, &lt;code&gt;3.0.1-debian-10-r68&lt;/code&gt; (3.0/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/2.8.1-debian-10-r234/2.8/debian-10/Dockerfile&#34;&gt;&lt;code&gt;2.8&lt;/code&gt;, &lt;code&gt;2.8-debian-10&lt;/code&gt;, &lt;code&gt;2.8.1&lt;/code&gt;, &lt;code&gt;2.8.1-debian-10-r234&lt;/code&gt; (2.8/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Subscribe to project updates by watching the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka&#34;&gt;bitnami/kafka GitHub repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get this image&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to get the Bitnami Apache Kafka Docker Image is to pull the prebuilt image from the &lt;a href=&#34;https://hub.docker.com/r/bitnami/kafka&#34;&gt;Docker Hub Registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a specific version, you can pull a versioned tag. You can view the &lt;a href=&#34;https://hub.docker.com/r/bitnami/kafka/tags/&#34;&gt;list of available versions&lt;/a&gt; in the Docker Hub Registry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/kafka:[TAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish, you can also build the image yourself.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker build -t bitnami/kafka:latest &#39;https://github.com/bitnami/bitnami-docker-kafka.git#master:3.2/debian-10&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Persisting your data&lt;/h2&gt; &#xA;&lt;p&gt;If you remove the container all your data and configurations will be lost, and the next time you run the image the database will be reinitialized. To avoid this loss of data, you should mount a volume that will persist even after the container is removed.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you have already started using your database, follow the steps on &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#backing-up-your-container&#34;&gt;backing up&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#restoring-a-backup&#34;&gt;restoring&lt;/a&gt; to pull the data from your running container down to your host.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The image exposes a volume at &lt;code&gt;/bitnami/kafka&lt;/code&gt; for the Apache Kafka data. For persistence you can mount a directory at this location from your host. If the mounted directory is empty, it will be initialized on the first run.&lt;/p&gt; &#xA;&lt;p&gt;Using Docker Compose:&lt;/p&gt; &#xA;&lt;p&gt;This requires a minor change to the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kafka:&#xA;  ...&#xA;  volumes:&#xA;    - /path/to/kafka-persistence:/bitnami/kafka&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: As this is a non-root container, the mounted files and directories must have the proper permissions for the UID &lt;code&gt;1001&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Connecting to other containers&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://docs.docker.com/engine/userguide/networking/&#34;&gt;Docker container networking&lt;/a&gt;, a Apache Kafka server running inside a container can easily be accessed by your application containers.&lt;/p&gt; &#xA;&lt;p&gt;Containers attached to the same network can communicate with each other using the container name as the hostname.&lt;/p&gt; &#xA;&lt;h3&gt;Using the Command Line&lt;/h3&gt; &#xA;&lt;p&gt;In this example, we will create a Apache Kafka client instance that will connect to the server instance that is running on the same docker network as the client.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Create a network&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker network create app-tier --driver bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Launch the Zookeeper server instance&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--network app-tier&lt;/code&gt; argument to the &lt;code&gt;docker run&lt;/code&gt; command to attach the Zookeeper container to the &lt;code&gt;app-tier&lt;/code&gt; network.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -d --name zookeeper-server \&#xA;    --network app-tier \&#xA;    -e ALLOW_ANONYMOUS_LOGIN=yes \&#xA;    bitnami/zookeeper:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Launch the Apache Kafka server instance&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--network app-tier&lt;/code&gt; argument to the &lt;code&gt;docker run&lt;/code&gt; command to attach the Apache Kafka container to the &lt;code&gt;app-tier&lt;/code&gt; network.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -d --name kafka-server \&#xA;    --network app-tier \&#xA;    -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;    -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 \&#xA;    bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 3: Launch your Apache Kafka client instance&lt;/h4&gt; &#xA;&lt;p&gt;Finally we create a new container instance to launch the Apache Kafka client and connect to the server created in the previous step:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --rm \&#xA;    --network app-tier \&#xA;    -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 \&#xA;    bitnami/kafka:latest kafka-topics.sh --list  --bootstrap-server kafka-server:9092&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;When not specified, Docker Compose automatically sets up a new network and attaches all deployed services to that network. However, we will explicitly define a new &lt;code&gt;bridge&lt;/code&gt; network named &lt;code&gt;app-tier&lt;/code&gt;. In this example we assume that you want to connect to the Apache Kafka server from your own custom application image which is identified in the following snippet by the service name &lt;code&gt;myapp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;networks:&#xA;  app-tier:&#xA;    driver: bridge&#xA;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    networks:&#xA;      - app-tier&#xA;  kafka:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    networks:&#xA;      - app-tier&#xA;  myapp:&#xA;    image: &#39;YOUR_APPLICATION_IMAGE&#39;&#xA;    networks:&#xA;      - app-tier&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Please update the &lt;code&gt;YOUR_APPLICATION_IMAGE&lt;/code&gt; placeholder in the above snippet with your application image&lt;/li&gt; &#xA;  &lt;li&gt;Configure Apache Kafka and ZooKeeper persistence, and configure them either via environment variables or by &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#full-configuration&#34;&gt;mounting configuration files&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;In your application container, use the hostname &lt;code&gt;kafka&lt;/code&gt; to connect to the Apache Kafka server&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Launch the containers using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The configuration can easily be setup with the Bitnami Apache Kafka Docker image using the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_PLAINTEXT_LISTENER&lt;/code&gt;: Allow to use the PLAINTEXT listener. Default: &lt;strong&gt;no&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_USER&lt;/code&gt;: Apache Kafka inter broker communication user. Default: admin. Default: &lt;strong&gt;user&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_PASSWORD&lt;/code&gt;: Apache Kafka inter broker communication password. Default: &lt;strong&gt;bitnami&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CERTIFICATE_PASSWORD&lt;/code&gt;: Password for certificates. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_HEAP_OPTS&lt;/code&gt;: Apache Kafka&#39;s Java Heap size. Default: &lt;strong&gt;-Xmx1024m -Xms1024m&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: Authentication protocol for Zookeeper connections. Allowed protocols: &lt;strong&gt;PLAINTEXT&lt;/strong&gt;, &lt;strong&gt;SASL&lt;/strong&gt;, &lt;strong&gt;SSL&lt;/strong&gt;, and &lt;strong&gt;SASL_SSL&lt;/strong&gt;. Defaults: &lt;strong&gt;PLAINTEXT&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_USER&lt;/code&gt;: Apache Kafka Zookeeper user for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper user password for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper keystore file password and key password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper truststore file password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME&lt;/code&gt;: Verify Zookeeper hostname on TLS certificates. Defaults: &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_SASL_ENABLED_MECHANISMS&lt;/code&gt;: Allowed mechanism when using SASL either for clients, inter broker, or zookeeper comunications. Allowed values: &lt;code&gt;PLAIN&lt;/code&gt;, &lt;code&gt;SCRAM-SHA-256&lt;/code&gt;, &lt;code&gt;SCRAM-SHA-512&lt;/code&gt; or a comma separated combination of those values. Default: &lt;strong&gt;PLAIN,SCRAM-SHA-256,SCRAM-SHA-512&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL&lt;/code&gt;: SASL mechanism to use for inter broker communications. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TLS_CLIENT_AUTH&lt;/code&gt;: Configures kafka brokers to request client authentication. Allowed values: &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;requested&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;. Defaults: &lt;strong&gt;required&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;: Users that will be created into Zookeeper when using SASL for client communications. Separated by commas. Default: &lt;strong&gt;user&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;: Passwords for the users specified at&lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;. Separated by commas. Default: &lt;strong&gt;bitnami&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_MAX_PARTITION_FETCH_BYTES&lt;/code&gt;: The maximum amount of data per-partition the server will return. Default: &lt;strong&gt;1048576&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_MAX_REQUEST_SIZE&lt;/code&gt;: The maximum size of a request in bytes. Default: &lt;strong&gt;1048576&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ENABLE_KRAFT&lt;/code&gt;: Whether to enable Kafka Raft (KRaft) mode. Default: &lt;strong&gt;no&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_KRAFT_CLUSTER_ID&lt;/code&gt;: Kafka cluster ID when using Kafka Raft (KRaft). No defaults.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, any environment variable beginning with &lt;code&gt;KAFKA_CFG_&lt;/code&gt; will be mapped to its corresponding Apache Kafka key. For example, use &lt;code&gt;KAFKA_CFG_BACKGROUND_THREADS&lt;/code&gt; in order to set &lt;code&gt;background.threads&lt;/code&gt; or &lt;code&gt;KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE&lt;/code&gt; in order to configure &lt;code&gt;auto.create.topics.enable&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or by modifying the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kafka:&#xA;  ...&#xA;  environment:&#xA;    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Apache Kafka development setup example&lt;/h3&gt; &#xA;&lt;p&gt;To use Apache Kafka in a development setup, create the following &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    ports:&#xA;      - &#39;2181:2181&#39;&#xA;    environment:&#xA;      - ALLOW_ANONYMOUS_LOGIN=yes&#xA;  kafka:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092:9092&#39;&#xA;    environment:&#xA;      - KAFKA_BROKER_ID=1&#xA;      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092&#xA;      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;    depends_on:&#xA;      - zookeeper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To deploy it, run the following command in the directory where the &lt;code&gt;docker-compose.yml&lt;/code&gt; file is located:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kafka without Zookeeper (KRaft)&lt;/h3&gt; &#xA;&lt;p&gt;Apache Kafka Raft (KRaft) makes use of a new quorum controller service in Kafka which replaces the previous controller and makes use of an event-based variant of the Raft consensus protocol. This greatly simplifies Kafka’s architecture by consolidating responsibility for metadata into Kafka itself, rather than splitting it between two different systems: ZooKeeper and Kafka.&lt;/p&gt; &#xA;&lt;p&gt;More Info can be found here: &lt;a href=&#34;https://developer.confluent.io/learn/kraft/&#34;&gt;https://developer.confluent.io/learn/kraft/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; KRaft is in early access and should be used in development only. It is not suitable for production.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Configuration here has been crafted from the &lt;a href=&#34;https://github.com/apache/kafka/tree/trunk/config/kraft&#34;&gt;Kraft Repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;-  zookeeper:&#xA;-    image: &#39;bitnami/zookeeper:latest&#39;&#xA;-    ports:&#xA;-      - &#39;2181:2181&#39;&#xA;-    environment:&#xA;-      - ALLOW_ANONYMOUS_LOGIN=yes&#xA;   kafka:&#xA;     image: &#39;bitnami/kafka:latest&#39;&#xA;     ports:&#xA;       - &#39;9092:9092&#39;&#xA;     environment:&#xA;+      - KAFKA_ENABLE_KRAFT=yes&#xA;+      - KAFKA_CFG_PROCESS_ROLES=broker,controller&#xA;+      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER&#xA;-      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092&#xA;+      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093&#xA;+      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT&#xA;       - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092&#xA;       - KAFKA_BROKER_ID=1&#xA;+      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093&#xA;-      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;       - ALLOW_PLAINTEXT_LISTENER=yes&#xA;-    depends_on:&#xA;-      - zookeeper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Accessing Apache Kafka with internal and external clients&lt;/h3&gt; &#xA;&lt;p&gt;In order to use internal and external clients to access Apache Kafka brokers you need to configure one listener for each kind of clients.&lt;/p&gt; &#xA;&lt;p&gt;To do so, add the following environment variables to your docker-compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;+     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT&#xA;+     - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093&#xA;+     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093&#xA;+     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And expose the external port:&lt;/p&gt; &#xA;&lt;p&gt;(the internal, client one can still be used within the docker network)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;    ports:&#xA;-     - &#39;9092:9092&#39;&#xA;+     - &#39;9093:9093&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: To connect from an external machine, change &lt;code&gt;localhost&lt;/code&gt; above to your host&#39;s external IP/hostname and include &lt;code&gt;EXTERNAL://0.0.0.0:9093&lt;/code&gt; in &lt;code&gt;KAFKA_CFG_LISTENERS&lt;/code&gt; to allow for remote connections.&lt;/p&gt; &#xA;&lt;h4&gt;Producer and consumer using external client&lt;/h4&gt; &#xA;&lt;p&gt;These clients, from the same host, will use &lt;code&gt;localhost&lt;/code&gt; to connect to Apache Kafka.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kafka-console-producer.sh --broker-list 127.0.0.1:9093 --topic test&#xA;kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9093 --topic test --from-beginning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If running these commands from another machine, change the address accordingly.&lt;/p&gt; &#xA;&lt;h4&gt;Producer and consumer using internal client&lt;/h4&gt; &#xA;&lt;p&gt;These clients, from other containers on the same Docker network, will use the kafka container service hostname to connect to Apache Kafka.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kafka-console-producer.sh --broker-list kafka:9092 --topic test&#xA;kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic test --from-beginning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Similarly, application code will need to use &lt;code&gt;bootstrap.servers=kafka:9092&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;More info about Apache Kafka listeners can be found in &lt;a href=&#34;https://rmoff.net/2018/08/02/kafka-listeners-explained/&#34;&gt;this great article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;The Bitnami Apache Kafka docker image disables the PLAINTEXT listener for security reasons. You can enable the PLAINTEXT listener by adding the next environment variable, but remember that this configuration is not recommended for production.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ALLOW_PLAINTEXT_LISTENER=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to configure authentication, you must configure the Apache Kafka listeners properly. This container assumes the names below will be used for the listeners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;INTERNAL: used for inter-broker communications.&lt;/li&gt; &#xA; &lt;li&gt;CLIENT: used for communications with clients that are within the same network as Apache Kafka brokers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let&#39;s see an example to configure Apache Kafka with &lt;code&gt;SASL_SSL&lt;/code&gt; authentication for communications with clients, and &lt;code&gt;SSL&lt;/code&gt; authentication for inter-broker communication.&lt;/p&gt; &#xA;&lt;p&gt;The environment variables below should be define to configure the listeners, and the SASL credentials for client communications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SSL,CLIENT:SASL_SSL&#xA;KAFKA_CFG_LISTENERS=INTERNAL://:9093,CLIENT://:9092&#xA;KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,CLIENT://kafka:9092&#xA;KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL&#xA;KAFKA_CLIENT_USERS=user&#xA;KAFKA_CLIENT_PASSWORDS=password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;strong&gt;must&lt;/strong&gt; also use your own certificates for SSL. You can drop your Java Key Stores or PEM files into &lt;code&gt;/opt/bitnami/kafka/config/certs&lt;/code&gt;. If the JKS or PEM certs are password protected (recommended), you will need to provide it to get access to the keystores:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;KAFKA_CERTIFICATE_PASSWORD=myCertificatePassword&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the truststore is mounted in a different location than &lt;code&gt;/opt/bitnami/kafka/config/certs/kafka.truststore.jks&lt;/code&gt;, &lt;code&gt;/opt/bitnami/kafka/conf/certs/kafka.truststore.pem&lt;/code&gt;, &lt;code&gt;/bitnami/kafka/conf/certs/kafka.truststore.jks&lt;/code&gt; or &lt;code&gt;/bitnami/kafka/conf/certs/kafka.truststore.pem&lt;/code&gt;, set the &lt;code&gt;KAFKA_TLS_TRUSTSTORE_FILE&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;p&gt;The following script can help you with the creation of the JKS and certificates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/confluent-platform-security-tools/master/kafka-generate-ssl.sh&#34;&gt;kafka-generate-ssl.sh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Keep in mind the following notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When prompted to enter a password, use the same one for all.&lt;/li&gt; &#xA; &lt;li&gt;Set the Common Name or FQDN values to your Apache Kafka container hostname, e.g. &lt;code&gt;kafka.example.com&lt;/code&gt;. After entering this value, when prompted &#34;What is your first and last name?&#34;, enter this value as well. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;As an alternative, you can disable host name verification setting the environment variable &lt;code&gt;KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/code&gt; to an empty string.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;When setting up a Apache Kafka Cluster (check &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#setting-up-a-kafka-cluster&#34;&gt;this section&lt;/a&gt; for more information), each Apache Kafka broker and logical client needs its own keystore. You will have to repeat the process for each of the brokers in the cluster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following docker-compose file is an example showing how to mount your JKS certificates protected by the password &lt;code&gt;certificatePassword123&lt;/code&gt;. Additionally it is specifying the Apache Kafka container hostname and the credentials for the client and zookeeper users.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    ports:&#xA;     - &#39;2181:2181&#39;&#xA;    environment:&#xA;      - ZOO_ENABLE_AUTH=yes&#xA;      - ZOO_SERVER_USERS=kafka&#xA;      - ZOO_SERVER_PASSWORDS=kafka_password&#xA;  kafka:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    hostname: kafka.example.com&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - KAFKA_CFG_LISTENERS=SASL_SSL://:9092&#xA;      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_SSL://:9092&#xA;      - KAFKA_ZOOKEEPER_USER=kafka&#xA;      - KAFKA_ZOOKEEPER_PASSWORD=kafka_password&#xA;      - KAFKA_CLIENT_USERS=user&#xA;      - KAFKA_CLIENT_PASSWORDS=password&#xA;      - KAFKA_CERTIFICATE_PASSWORD=certificatePassword123&#xA;      - KAFKA_TLS_TYPE=JKS # or PEM&#xA;    volumes:&#xA;      # Both .jks and .pem files are supported&#xA;      # - &#39;./kafka.keystore.pem:/opt/bitnami/kafka/config/certs/kafka.keystore.pem:ro&#39;&#xA;      # - &#39;./kafka.keystore.key:/opt/bitnami/kafka/config/certs/kafka.keystore.key:ro&#39;&#xA;      # - &#39;./kafka.truststore.pem:/opt/bitnami/kafka/config/certs/kafka.truststore.pem:ro&#39;&#xA;      - &#39;./kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro&#39;&#xA;      - &#39;./kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to get the required credentials to consume and produce messages you need to provide the credentials in the client. If your Apache Kafka client allows it, use the credentials you&#39;ve provided.&lt;/p&gt; &#xA;&lt;p&gt;While producing and consuming messages using the &lt;code&gt;bitnami/kafka&lt;/code&gt; image, you&#39;ll need to point to the &lt;code&gt;consumer.properties&lt;/code&gt; and/or &lt;code&gt;producer.properties&lt;/code&gt; file, which contains the needed configuration to work. You can find this files in the &lt;code&gt;/opt/bitnami/kafka/conf&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Use this to generate messages using a secure setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;export KAFKA_OPTS=&#34;-Djava.security.auth.login.config=/opt/bitnami/kafka/conf/kafka_jaas.conf&#34;&#xA;kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic test --producer.config /opt/bitnami/kafka/conf/producer.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use this to consume messages using a secure setup&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;export KAFKA_OPTS=&#34;-Djava.security.auth.login.config=/opt/bitnami/kafka/conf/kafka_jaas.conf&#34;&#xA;kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic test --consumer.config /opt/bitnami/kafka/conf/consumer.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use other tools to use your Apache Kafka cluster, you&#39;ll need to provide the required information. You can find the required information in the files located at &lt;code&gt;/opt/bitnami/kafka/conf&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h4&gt;InterBroker communications&lt;/h4&gt; &#xA;&lt;p&gt;When configuring your broker to use &lt;code&gt;SASL&lt;/code&gt; or &lt;code&gt;SASL_SSL&lt;/code&gt; for inter-broker communications, you can provide the SASL credentials using these environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_USER&lt;/code&gt;: Apache Kafka inter broker communication user. Deprecated in favor of &lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_PASSWORD&lt;/code&gt;: Apache Kafka inter broker communication password. Deprecated in favor of &lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Apache Kafka client configuration&lt;/h4&gt; &#xA;&lt;p&gt;When configuring Apache Kafka with &lt;code&gt;SASL&lt;/code&gt; or &lt;code&gt;SASL_SSL&lt;/code&gt; for communications with clients, you can provide your the SASL credentials using this environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;: Apache Kafka client user. Default: &lt;strong&gt;user&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;: Apache Kafka client user password. Default: &lt;strong&gt;bitnami&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Apache Kafka ZooKeeper client configuration&lt;/h4&gt; &#xA;&lt;p&gt;There are different options of configuration to connect a Zookeeper server.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect a Zookeeper server without authentication, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;PLAINTEXT&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to authenticate Apache Kafka against a Zookeeper server with &lt;code&gt;SASL&lt;/code&gt;, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;SASL&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_USER&lt;/code&gt;: Apache Kafka Zookeeper user for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper user password for SASL authentication. No defaults.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to authenticate Apache Kafka against a Zookeeper server with &lt;code&gt;SSL&lt;/code&gt;, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;SSL&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper keystore file password and key password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper truststore file password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME&lt;/code&gt;: Verify Zookeeper hostname on TLS certificates. Defaults: &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to authenticate Apache Kafka against a Zookeeper server with &lt;code&gt;SASL_SSL&lt;/code&gt;, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;SASL_SSL&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_USER&lt;/code&gt;: Apache Kafka Zookeeper user for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper user password for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_FILE&lt;/code&gt;: Apache Kafka Zookeeper truststore file location. Set it if the mount location is different from &lt;code&gt;/bitnami/kafka/conf/certs/zookeeper.truststore.pem&lt;/code&gt;, &lt;code&gt;/bitnami/kafka/conf/certs/zookeeper.truststore.jks&lt;/code&gt;, &lt;code&gt;/opt/bitnami/kafka/config/certs/zookeeper.truststore.jks&lt;/code&gt; or &lt;code&gt;/opt/bitnami/kafka/conf/certs/zookeeper.truststore.pem&lt;/code&gt; No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper keystore file password and key password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper truststore file password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME&lt;/code&gt;: Verify Zookeeper hostname on TLS certificates. Defaults: &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: You &lt;strong&gt;must&lt;/strong&gt; also use your own certificates for SSL. You can mount your Java Key Stores (&lt;code&gt;zookeeper.keystore.jks&lt;/code&gt; and &lt;code&gt;zookeeper.truststore.jks&lt;/code&gt;) or PEM files (&lt;code&gt;zookeeper.keystore.pem&lt;/code&gt;, &lt;code&gt;zookeeper.keystore.key&lt;/code&gt; and &lt;code&gt;zookeeper.truststore.pem&lt;/code&gt;) into &lt;code&gt;/opt/bitnami/kafka/conf/certs&lt;/code&gt;. If client authentication is &lt;code&gt;none&lt;/code&gt; or &lt;code&gt;want&lt;/code&gt; in Zookeeper, the cert files are optional.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Setting up a Apache Kafka Cluster&lt;/h3&gt; &#xA;&lt;p&gt;A Apache Kafka cluster can easily be setup with the Bitnami Apache Kafka Docker image using the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECT&lt;/code&gt;: Comma separated host:port pairs, each corresponding to a Zookeeper Server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Create a Docker network to enable visibility to each other via the docker container name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker network create app-tier --driver bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 1: Create the first node for Zookeeper&lt;/h4&gt; &#xA;&lt;p&gt;The first step is to create one Zookeeper instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name zookeeper \&#xA;  --network app-tier \&#xA;  -e ALLOW_ANONYMOUS_LOGIN=yes \&#xA;  -p 2181:2181 \&#xA;  bitnami/zookeeper:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Create the first node for Apache Kafka&lt;/h4&gt; &#xA;&lt;p&gt;The first step is to create one Apache Kafka instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka1 \&#xA;  --network app-tier \&#xA;  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \&#xA;  -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;  -p :9092 \&#xA;  bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Create the second node&lt;/h4&gt; &#xA;&lt;p&gt;Next we start a new Apache Kafka container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka2 \&#xA;  --network app-tier \&#xA;  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \&#xA;  -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;  -p :9092 \&#xA;  bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3: Create the third node&lt;/h3&gt; &#xA;&lt;p&gt;Next we start another new Apache Kafka container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka3 \&#xA;  --network app-tier \&#xA;  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \&#xA;  -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;  -p :9092 \&#xA;  bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You now have a Apache Kafka cluster up and running. You can scale the cluster by adding/removing slaves without incurring any downtime.&lt;/p&gt; &#xA;&lt;p&gt;With Docker Compose, topic replication can be setup using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    ports:&#xA;     - &#39;2181:2181&#39;&#xA;    environment:&#xA;     - ALLOW_ANONYMOUS_LOGIN=yes&#xA;  kafka1:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;  kafka2:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;  kafka3:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you can create a replicated topic with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;root@kafka1:/# /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --topic mytopic --partitions 3 --replication-factor 3&#xA;Created topic &#34;mytopic&#34;.&#xA;&#xA;root@kafka1:/# /opt/bitnami/kafka/bin/kafka-topics.sh --describe --bootstrap-server localhost:9092 --topic mytopic&#xA;Topic:mytopic   PartitionCount:3        ReplicationFactor:3     Configs:&#xA;        Topic: mytopic  Partition: 0    Leader: 2       Replicas: 2,3,1 Isr: 2,3,1&#xA;        Topic: mytopic  Partition: 1    Leader: 3       Replicas: 3,1,2 Isr: 3,1,2&#xA;        Topic: mytopic  Partition: 2    Leader: 1       Replicas: 1,2,3 Isr: 1,2,3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full configuration&lt;/h3&gt; &#xA;&lt;p&gt;The image looks for configuration files (server.properties, log4j.properties, etc.) in the &lt;code&gt;/bitnami/kafka/config/&lt;/code&gt; directory, this directory can be changed by setting the KAFKA_MOUNTED_CONF_DIR environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka -v /path/to/server.properties:/bitnami/kafka/config/server.properties bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, your changes will be taken into account in the server&#39;s behaviour.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Run the Apache Kafka image&lt;/h4&gt; &#xA;&lt;p&gt;Run the Apache Kafka image, mounting a directory from your host.&lt;/p&gt; &#xA;&lt;p&gt;Modify the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;...&#xA;services:&#xA;  kafka:&#xA;    ...&#xA;    volumes:&#xA;      - &#39;kafka_data:/bitnami&#39;&#xA;+     - /path/to/server.properties:/bitnami/kafka/config/server.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Edit the configuration&lt;/h4&gt; &#xA;&lt;p&gt;Edit the configuration on your host using your favorite editor.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;vi /path/to/server.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 3: Restart Apache Kafka&lt;/h4&gt; &#xA;&lt;p&gt;After changing the configuration, restart your Apache Kafka container for changes to take effect.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker restart kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose restart kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;The Bitnami Apache Kafka Docker image sends the container logs to the &lt;code&gt;stdout&lt;/code&gt;. To view the logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker logs kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose logs kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can configure the containers &lt;a href=&#34;https://docs.docker.com/engine/admin/logging/overview/&#34;&gt;logging driver&lt;/a&gt; using the &lt;code&gt;--log-driver&lt;/code&gt; option if you wish to consume the container logs differently. In the default configuration docker uses the &lt;code&gt;json-file&lt;/code&gt; driver.&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance&lt;/h2&gt; &#xA;&lt;h3&gt;Backing up your container&lt;/h3&gt; &#xA;&lt;p&gt;To backup your data, configuration and logs, follow these simple steps:&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Stop the currently running container&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker stop kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose stop kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Run the backup command&lt;/h4&gt; &#xA;&lt;p&gt;We need to mount two volumes in a container we will use to create the backup: a directory on your host to store the backup in, and the volumes from the container we just stopped so we can access the data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --rm -v /path/to/kafka-backups:/backups --volumes-from kafka busybox \&#xA;  cp -a /bitnami/kafka:latest /backups/latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --rm -v /path/to/kafka-backups:/backups --volumes-from `docker-compose ps -q kafka` busybox \&#xA;  cp -a /bitnami/kafka:latest /backups/latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Restoring a backup&lt;/h3&gt; &#xA;&lt;p&gt;Restoring a backup is as simple as mounting the backup as volumes in the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -v /path/to/kafka-backups/latest:/bitnami/kafka bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also modify the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kafka:&#xA;  volumes:&#xA;    - /path/to/kafka-backups/latest:/bitnami/kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upgrade this image&lt;/h3&gt; &#xA;&lt;p&gt;Bitnami provides up-to-date versions of Apache Kafka, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Get the updated image&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you&#39;re using Docker Compose, update the value of the image property to &lt;code&gt;bitnami/kafka:latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Step 2: Stop and backup the currently running container&lt;/h4&gt; &#xA;&lt;p&gt;Before continuing, you should backup your container&#39;s data, configuration and logs.&lt;/p&gt; &#xA;&lt;p&gt;Follow the steps on &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#backing-up-your-container&#34;&gt;creating a backup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Step 3: Remove the currently running container&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker rm -v kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose rm -v kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 4: Run the new image&lt;/h4&gt; &#xA;&lt;p&gt;Re-create your container from the new image, &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#restoring-a-backup&#34;&gt;restoring your backup&lt;/a&gt; if necessary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notable Changes&lt;/h2&gt; &#xA;&lt;h3&gt;Branches rename&lt;/h3&gt; &#xA;&lt;p&gt;Branch 2 has been renamed to 2.8 and branch 3 has been splited into branches 3.0 and 3.1 mirroing the upstream &lt;a href=&#34;https://kafka.apache.org/downloads&#34;&gt;Apache Kafka&#39;s naming policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3.0.0-debian-10-r0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache Kafka 3.0 deprecates the &lt;code&gt;--zookeper&lt;/code&gt; flag in shell commands. Related operations such as topic creation require the use of updated flags. Please, refer to &lt;a href=&#34;https://downloads.apache.org/kafka/3.0.0/RELEASE_NOTES.html&#34;&gt;Apache Kafka&#39;s official release notes&lt;/a&gt; for further information on the changes introduced by this version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.5.0-debian-10-r111&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;KAFKA_CLIENT_USER&lt;/code&gt; AND &lt;code&gt;KAFKA_CLIENT_PASSWORD&lt;/code&gt; have been deprecated in favor of &lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt; and &lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.5.0-debian-10-r51&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The environment variables &lt;code&gt;KAFKA_PORT_NUMBER&lt;/code&gt; and &lt;code&gt;KAFKA_CFG_PORT&lt;/code&gt; was deprecated, you can specify the port number in &lt;code&gt;KAFKA_CFG_LISTENERS&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The following environment variables were renamed:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_BROKER_USER&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CLIENT_USER&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_BROKER_PASSWORD&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CLIENT_PASSWORD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Listeners &amp;amp; advertised listeners must be configured to enable authentication. Check &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#security&#34;&gt;Security section&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.4.1-r38-debian-10&lt;/h3&gt; &#xA;&lt;p&gt;The configuration directory was changed to &lt;code&gt;/opt/bitnami/kafka/config&lt;/code&gt;. Configuration files should be mounted to &lt;code&gt;/bitnami/kafka/config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.1.1-debian-9-r224, 2.2.1-debian-9-r16, 1.1.1-ol-7-r306 and 2.2.1-ol-7-r14&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The following environment variables were beingly wrongly translated into &lt;code&gt;KAFKA_CFG_&lt;/code&gt; environment variables, and therefore they were being wrongly mapped into Apache Kafka keys:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_LOGS_DIRS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_DIRS&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_PORT_NUMBER&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_PORT&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For consistency reasons with previous environment variables, the following &lt;code&gt;KAFKA_&lt;/code&gt; to &lt;code&gt;KAFKA_CFG_&lt;/code&gt; environment variable translations are now supported for mapping into Apache Kafka keys:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_LOG_DIRS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_DIRS&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.1-debian-9-r205, 2.2.0-debian-9-r40, 1.1.1-ol-7-r286, and 2.2.0-ol-7-r53&lt;/h3&gt; &#xA;&lt;p&gt;Configuration changes. Most environment variables now start with &lt;code&gt;KAFKA_CFG_&lt;/code&gt;, as they are now mapped directly to Apache Kafka keys. Variables changed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ADVERTISED_LISTENERS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_BROKER_ID&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_BROKER_ID&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_DEFAULT_REPLICATION_FACTOR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_DEFAULT_REPLICATION_FACTOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_DELETE_TOPIC_ENABLE&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_DELETE_TOPIC_ENABLE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_LISTENER_NAME&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_INTER_BROKER_LISTENER_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LISTENERS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LISTENERS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOGS_DIRS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_DIRS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_FLUSH_INTERVAL_MESSAGES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_FLUSH_INTERVAL_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_FLUSH_INTERVAL_MS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_MESSAGE_FORMAT_VERSION&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_MESSAGE_FORMAT_VERSION&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_RETENTION_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_RETENTION_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_RETENTION_CHECK_INTERVALS_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_RETENTION_HOURS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_RETENTION_HOURS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_MAX_MESSAGE_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_MESSAGE_MAX_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_IO_THREADS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_IO_THREADS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_NETWORK_THREADS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_NETWORK_THREADS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_PARTITIONS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_PARTITIONS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_PORT&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_PORT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SEGMENT_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SEGMENT_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SOCKET_RECEIVE_BUFFER_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SOCKET_REQUEST_MAX_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SOCKET_SEND_BUFFER_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TRANSACTION_STATE_LOG_MIN_ISR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECT_TIMEOUT_MS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECT&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECT&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.0-r41&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration is not persisted anymore. It should be mounted as a volume or it will be regenerated each time the container is created.&lt;/li&gt; &#xA; &lt;li&gt;Dummy certificates are not used anymore when the SASL_SSL listener is configured. These certificates must be mounted as volumes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.10.2.1-r3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The kafka container has been migrated to a non-root container approach. Previously the container run as &lt;code&gt;root&lt;/code&gt; user and the kafka daemon was started as &lt;code&gt;kafka&lt;/code&gt; user. From now own, both the container and the kafka daemon run as user &lt;code&gt;1001&lt;/code&gt;. As a consequence, the configuration files are writable by the user running the kafka process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.10.2.1-r0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New Bitnami release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Branch Deprecation Notice&lt;/h2&gt; &#xA;&lt;p&gt;Apache Kafka&#39;s branch 2.8.x is no longer maintained by upstream and is now internally tagged as to be deprecated. This branch will no longer be released in our catalog a month after this notice is published, but already released container images will still persist in the registries. Valid to be removed starting on: 06-20-2022&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love for you to contribute to this container. You can request new features by creating an &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/issues&#34;&gt;issue&lt;/a&gt;, or submit a &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/pulls&#34;&gt;pull request&lt;/a&gt; with your contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you encountered a problem running this container, you can file an &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/issues/new&#34;&gt;issue&lt;/a&gt;. For us to provide better support, be sure to include the following information in your issue:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Host OS and version&lt;/li&gt; &#xA; &lt;li&gt;Docker version (&lt;code&gt;docker version&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Output of &lt;code&gt;docker info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Version of this container&lt;/li&gt; &#xA; &lt;li&gt;The command you used to run the container, and any relevant output you saw (masking any sensitive information)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2022 Bitnami&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kaldi-asr/kaldi</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/kaldi-asr/kaldi</id>
    <link href="https://github.com/kaldi-asr/kaldi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;kaldi-asr/kaldi is the official location of the Kaldi project.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://travis-ci.com/kaldi-asr/kaldi&#34;&gt;&lt;img src=&#34;https://travis-ci.com/kaldi-asr/kaldi.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/kaldi-asr/kaldi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt; Kaldi Speech Recognition Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;To build the toolkit: see &lt;code&gt;./INSTALL&lt;/code&gt;. These instructions are valid for UNIX systems including various flavors of Linux; Darwin; and Cygwin (has not been tested on more &#34;exotic&#34; varieties of UNIX). For Windows installation instructions (excluding Cygwin), see &lt;code&gt;windows/INSTALL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run the example system builds, see &lt;code&gt;egs/README.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you encounter problems (and you probably will), please do not hesitate to contact the developers (see below). In addition to specific questions, please let us know if there are specific aspects of the project that you feel could be improved, that you find confusing, etc., and which missing features you most wish it had.&lt;/p&gt; &#xA;&lt;h2&gt;Kaldi information channels&lt;/h2&gt; &#xA;&lt;p&gt;For HOT news about Kaldi see &lt;a href=&#34;http://kaldi-asr.org/&#34;&gt;the project site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kaldi-asr.org/doc/&#34;&gt;Documentation of Kaldi&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Info about the project, description of techniques, tutorial for C++ coding.&lt;/li&gt; &#xA; &lt;li&gt;Doxygen reference of the C++ code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kaldi-asr.org/forums.html&#34;&gt;Kaldi forums and mailing lists&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;We have two different lists&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User list kaldi-help&lt;/li&gt; &#xA; &lt;li&gt;Developer list kaldi-developers:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To sign up to any of those mailing lists, go to &lt;a href=&#34;http://kaldi-asr.org/forums.html&#34;&gt;http://kaldi-asr.org/forums.html&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;h2&gt;Development pattern for contributors&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/fork-a-repo/&#34;&gt;Create a personal fork&lt;/a&gt; of the &lt;a href=&#34;https://github.com/kaldi-asr/kaldi&#34;&gt;main Kaldi repository&lt;/a&gt; in GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Make your changes in a named branch different from &lt;code&gt;master&lt;/code&gt;, e.g. you create a branch &lt;code&gt;my-awesome-feature&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/creating-a-pull-request/&#34;&gt;Generate a pull request&lt;/a&gt; through the Web interface of GitHub.&lt;/li&gt; &#xA; &lt;li&gt;As a general rule, please follow &lt;a href=&#34;https://google.github.io/styleguide/cppguide.html&#34;&gt;Google C++ Style Guide&lt;/a&gt;. There are a &lt;a href=&#34;http://kaldi-asr.org/doc/style.html&#34;&gt;few exceptions in Kaldi&lt;/a&gt;. You can use the &lt;a href=&#34;https://raw.githubusercontent.com/google/styleguide/gh-pages/cpplint/cpplint.py&#34;&gt;Google&#39;s cpplint.py&lt;/a&gt; to verify that your code is free of basic mistakes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Platform specific notes&lt;/h2&gt; &#xA;&lt;h3&gt;PowerPC 64bits little-endian (ppc64le)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kaldi is expected to work out of the box in RHEL &amp;gt;= 7 and Ubuntu &amp;gt;= 16.04 with OpenBLAS, ATLAS, or CUDA.&lt;/li&gt; &#xA; &lt;li&gt;CUDA drivers for ppc64le can be found at &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;https://developer.nvidia.com/cuda-downloads&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://www.redbooks.ibm.com/abstracts/redp5169.html&#34;&gt;IBM Redbook&lt;/a&gt; is available as a guide to install and configure CUDA.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kaldi supports cross compiling for Android using Android NDK, clang++ and OpenBLAS.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;http://jcsilva.github.io/2017/03/18/compile-kaldi-android/&#34;&gt;this blog post&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web Assembly&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kaldi supports cross compiling for Web Assembly for in-browser execution using &lt;a href=&#34;https://emscripten.org/&#34;&gt;emscripten&lt;/a&gt; and CLAPACK.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://gitlab.inria.fr/kaldi.web/kaldi-wasm/-/wikis/build_details.md&#34;&gt;this post&lt;/a&gt; for a step-by-step description of the build process.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>acmesh-official/acme.sh</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/acmesh-official/acme.sh</id>
    <link href="https://github.com/acmesh-official/acme.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A pure Unix shell script implementing ACME client protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An ACME Shell script: acme.sh&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&#34; alt=&#34;Solaris&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/Shellcheck/badge.svg?sanitize=true&#34; alt=&#34;Shellcheck&#34;&gt; &lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/PebbleStrict/badge.svg?sanitize=true&#34; alt=&#34;PebbleStrict&#34;&gt; &lt;img src=&#34;https://github.com/acmesh-official/acme.sh/workflows/Build%20DockerHub/badge.svg?sanitize=true&#34; alt=&#34;DockerHub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh&#34; alt=&#34;Financial Contributors on Open Collective&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/all/badge.svg?label=financial+contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/acme-sh/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/acme-sh/Lobby.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/acme-sh/Lobby&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neilpang/acme.sh&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/neilpang/acme.sh.svg?sanitize=true&#34; alt=&#34;Docker stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neilpang/acme.sh&#34; title=&#34;Click to view the image on Docker Hub&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/neilpang/acme.sh.svg?sanitize=true&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An ACME protocol client written purely in Shell (Unix shell) language.&lt;/li&gt; &#xA; &lt;li&gt;Full ACME protocol implementation.&lt;/li&gt; &#xA; &lt;li&gt;Support ECDSA certs&lt;/li&gt; &#xA; &lt;li&gt;Support SAN and wildcard certs&lt;/li&gt; &#xA; &lt;li&gt;Simple, powerful and very easy to use. You only need 3 minutes to learn it.&lt;/li&gt; &#xA; &lt;li&gt;Bash, dash and sh compatible.&lt;/li&gt; &#xA; &lt;li&gt;Purely written in Shell with no dependencies on python.&lt;/li&gt; &#xA; &lt;li&gt;Just one script to issue, renew and install your certificates automatically.&lt;/li&gt; &#xA; &lt;li&gt;DOES NOT require &lt;code&gt;root/sudoer&lt;/code&gt; access.&lt;/li&gt; &#xA; &lt;li&gt;Docker ready&lt;/li&gt; &#xA; &lt;li&gt;IPv6 ready&lt;/li&gt; &#xA; &lt;li&gt;Cron job notifications for renewal or error etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It&#39;s probably the &lt;code&gt;easiest &amp;amp; smartest&lt;/code&gt; shell script to automatically issue &amp;amp; renew the free certificates.&lt;/p&gt; &#xA;&lt;p&gt;Wiki: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For Docker Fans: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker&#34;&gt;acme.sh &lt;span&gt;💕&lt;/span&gt; Docker &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/neilpangxa&#34;&gt;@neilpangxa&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&#34;&gt;中文说明&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Who:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.crashed.org/letsencrypt-in-freebsd-org/&#34;&gt;FreeBSD.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ruby-china.org/topics/31983&#34;&gt;ruby-china.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pve.proxmox.com/wiki/Certificate_Management&#34;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfsense/FreeBSD-ports/pull/89&#34;&gt;pfsense&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.webfaction.com/questions/19988/using-letsencrypt&#34;&gt;webfaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.loadbalancer.org/blog/loadbalancer-org-with-lets-encrypt-quick-and-dirty&#34;&gt;Loadbalancer.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meta.discourse.org/t/setting-up-lets-encrypt/40709&#34;&gt;discourse.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://centminmod.com/letsencrypt-acmetool-https.html&#34;&gt;Centminmod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.splynx.com/t/free-ssl-cert-for-splynx-lets-encrypt/297&#34;&gt;splynx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.archlinux.org/packages/community/any/acme.sh&#34;&gt;archlinux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/opnsense/plugins/tree/master/security/acme-client/src/opnsense/scripts/OPNsense/AcmeClient&#34;&gt;opnsense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://centos-webpanel.com/&#34;&gt;CentOS Web Panel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lnmp.org/&#34;&gt;lnmp.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Blogs-and-tutorials&#34;&gt;more...&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tested OS&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;NO&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mac OSX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows (cygwin with curl, openssl and crontab included)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&#34; alt=&#34;FreeBSD&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&#34; alt=&#34;Solaris&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Solaris&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;NA&lt;/td&gt; &#xA;   &lt;td&gt;pfsense&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;NA&lt;/td&gt; &#xA;   &lt;td&gt;OpenBSD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CentOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Alpine Linux (with curl)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Archlinux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kali Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Oracle Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mageia&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Gentoo Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ClearLinux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;-----&lt;/td&gt; &#xA;   &lt;td&gt;Cloud Linux &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/issues/111&#34;&gt;https://github.com/acmesh-official/acme.sh/issues/111&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;-----&lt;/td&gt; &#xA;   &lt;td&gt;OpenWRT: Tested and working. See &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-run-on-OpenWRT&#34;&gt;wiki page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acmesh-official/letest#here-are-the-latest-status&#34;&gt;&lt;img src=&#34;https://acmesh-official.github.io/acmetest/status/proxmox.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proxmox: See Proxmox VE Wiki. Version &lt;a href=&#34;https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Let.27s_Encrypt_using_acme.sh&#34;&gt;4.x, 5.0, 5.1&lt;/a&gt;, version &lt;a href=&#34;https://pve.proxmox.com/wiki/Certificate_Management&#34;&gt;5.2 and up&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://github.com/acmesh-official/acmetest&#34;&gt;testing project&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acmetest&#34;&gt;https://github.com/acmesh-official/acmetest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported CA&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA&#34;&gt;ZeroSSL.com CA&lt;/a&gt;(default)&lt;/li&gt; &#xA; &lt;li&gt;Letsencrypt.org CA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/BuyPass.com-CA&#34;&gt;BuyPass.com CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/SSL.com-CA&#34;&gt;SSL.com CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Google-Public-CA&#34;&gt;Google.com Public CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/letsencrypt/pebble&#34;&gt;Pebble strict Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any other &lt;a href=&#34;https://tools.ietf.org/html/rfc8555&#34;&gt;RFC8555&lt;/a&gt;-compliant CA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported modes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Webroot mode&lt;/li&gt; &#xA; &lt;li&gt;Standalone mode&lt;/li&gt; &#xA; &lt;li&gt;Standalone tls-alpn mode&lt;/li&gt; &#xA; &lt;li&gt;Apache mode&lt;/li&gt; &#xA; &lt;li&gt;Nginx mode&lt;/li&gt; &#xA; &lt;li&gt;DNS mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode&#34;&gt;DNS alias mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Stateless-Mode&#34;&gt;Stateless mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;1. How to install&lt;/h1&gt; &#xA;&lt;h3&gt;1. Install online&lt;/h3&gt; &#xA;&lt;p&gt;Check this project: &lt;a href=&#34;https://github.com/acmesh-official/get.acme.sh&#34;&gt;https://github.com/acmesh-official/get.acme.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://get.acme.sh | sh -s email=my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O -  https://get.acme.sh | sh -s email=my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Or, Install from git&lt;/h3&gt; &#xA;&lt;p&gt;Clone this project and launch installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/acmesh-official/acme.sh.git&#xA;cd ./acme.sh&#xA;./acme.sh --install -m my@example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;code&gt;don&#39;t have to be root&lt;/code&gt; then, although &lt;code&gt;it is recommended&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Advanced Installation: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The installer will perform 3 actions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create and copy &lt;code&gt;acme.sh&lt;/code&gt; to your home dir (&lt;code&gt;$HOME&lt;/code&gt;): &lt;code&gt;~/.acme.sh/&lt;/code&gt;. All certs will be placed in this folder too.&lt;/li&gt; &#xA; &lt;li&gt;Create alias for: &lt;code&gt;acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create daily cron job to check and renew the certs if needed.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Cron entry example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;0 0 * * * &#34;/home/user/.acme.sh&#34;/acme.sh --cron --home &#34;/home/user/.acme.sh&#34; &amp;gt; /dev/null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the installation, you must close the current terminal and reopen it to make the alias take effect.&lt;/p&gt; &#xA;&lt;p&gt;Ok, you are ready to issue certs now.&lt;/p&gt; &#xA;&lt;p&gt;Show help message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;root@v1:~# acme.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;2. Just issue a cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Single domain.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /home/wwwroot/example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /home/username/public_html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -w /var/www/html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; Multiple domains in the same cert.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parameter &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt; or &lt;code&gt;/home/username/public_html&lt;/code&gt; or &lt;code&gt;/var/www/html&lt;/code&gt; is the web root folder where you host your website files. You &lt;strong&gt;MUST&lt;/strong&gt; have &lt;code&gt;write access&lt;/code&gt; to this folder.&lt;/p&gt; &#xA;&lt;p&gt;Second argument &lt;strong&gt;&#34;example.com&#34;&lt;/strong&gt; is the main domain you want to issue the cert for. You must have at least one domain there.&lt;/p&gt; &#xA;&lt;p&gt;You must point and bind all the domains to the same webroot dir: &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The certs will be placed in &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. Install the cert to Apache/Nginx etc.&lt;/h1&gt; &#xA;&lt;p&gt;After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. You &lt;strong&gt;MUST&lt;/strong&gt; use this command to copy the certs to the target files, &lt;strong&gt;DO NOT&lt;/strong&gt; use the certs files in &lt;strong&gt;~/.acme.sh/&lt;/strong&gt; folder, they are for internal use only, the folder structure may change in the future.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --install-cert -d example.com \&#xA;--cert-file      /path/to/certfile/in/apache/cert.pem  \&#xA;--key-file       /path/to/keyfile/in/apache/key.pem  \&#xA;--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \&#xA;--reloadcmd     &#34;service apache2 force-reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --install-cert -d example.com \&#xA;--key-file       /path/to/keyfile/in/nginx/key.pem  \&#xA;--fullchain-file /path/to/fullchain/nginx/cert.pem \&#xA;--reloadcmd     &#34;service nginx force-reload&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only the domain is required, all the other parameters are optional.&lt;/p&gt; &#xA;&lt;p&gt;The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.&lt;/p&gt; &#xA;&lt;p&gt;Install/copy the cert/key to the production Apache or Nginx path.&lt;/p&gt; &#xA;&lt;p&gt;The cert will be renewed every &lt;strong&gt;60&lt;/strong&gt; days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: &lt;code&gt;service apache2 force-reload&lt;/code&gt; or &lt;code&gt;service nginx force-reload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please take care: The reloadcmd is very important. The cert can be automatically renewed, but, without a correct &#39;reloadcmd&#39; the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;4. Use Standalone server to issue cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 80 (TCP))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port &lt;code&gt;80&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;5. Use Standalone ssl server to issue cert&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 443 (TCP))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Port &lt;code&gt;443&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;6. Use Apache mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Apache server)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; &#xA;&lt;p&gt;Just set string &#34;apache&#34; as the second argument and it will force use of apache plugin automatically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This apache mode is only to issue the cert, it will not change your apache config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your apache server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;7. Use Nginx mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Nginx server)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; &#xA;&lt;p&gt;Just set string &#34;nginx&#34; as the second argument.&lt;/p&gt; &#xA;&lt;p&gt;It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.&lt;/p&gt; &#xA;&lt;p&gt;So, the config is not changed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This nginx mode is only to issue the cert, it will not change your nginx config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your nginx server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;8. Automatic DNS API integration&lt;/h1&gt; &#xA;&lt;p&gt;If your DNS provider supports API access, we can use that API to automatically issue the certs.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t have to do anything manually!&lt;/p&gt; &#xA;&lt;h3&gt;Currently acme.sh supports most of the dns providers:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;9. Use DNS manual mode:&lt;/h1&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;If your dns provider doesn&#39;t support any api access, you can add the txt record by hand.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should get an output like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Add the following txt record:&#xA;Domain:_acme-challenge.example.com&#xA;Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c&#xA;&#xA;Add the following txt record:&#xA;Domain:_acme-challenge.www.example.com&#xA;Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#xA;&#xA;Please add those txt records to the domains. Waiting for the dns to take effect.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just rerun with &lt;code&gt;renew&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --renew -d example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ok, it&#39;s done.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please use dns api mode instead.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;10. Issue ECC certificates&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Let&#39;s Encrypt&lt;/code&gt; can now issue &lt;strong&gt;ECDSA&lt;/strong&gt; certificates.&lt;/p&gt; &#xA;&lt;p&gt;And we support them too!&lt;/p&gt; &#xA;&lt;p&gt;Just set the &lt;code&gt;keylength&lt;/code&gt; parameter with a prefix &lt;code&gt;ec-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;h3&gt;Single domain ECC certificate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SAN multi domain ECC certificate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please look at the &lt;code&gt;keylength&lt;/code&gt; parameter above.&lt;/p&gt; &#xA;&lt;p&gt;Valid values are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-256 (prime256v1, &#34;ECDSA P-256&#34;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-384 (secp384r1, &#34;ECDSA P-384&#34;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ec-521 (secp521r1, &#34;ECDSA P-521&#34;, which is not supported by Let&#39;s Encrypt yet.)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;11. Issue Wildcard certificates&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s simple, just give a wildcard domain as the &lt;code&gt;-d&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh  --issue -d example.com  -d &#39;*.example.com&#39;  --dns dns_cf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;12. How to renew the certs&lt;/h1&gt; &#xA;&lt;p&gt;No, you don&#39;t need to renew the certs manually. All the certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; &#xA;&lt;p&gt;However, you can also force to renew a cert:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --renew -d example.com --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, for ECC cert:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --renew -d example.com --force --ecc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;13. How to stop cert renewal&lt;/h1&gt; &#xA;&lt;p&gt;To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --remove -d example.com [--ecc]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The cert/key file is not removed from the disk.&lt;/p&gt; &#xA;&lt;p&gt;You can remove the respective directory (e.g. &lt;code&gt;~/.acme.sh/example.com&lt;/code&gt;) by yourself.&lt;/p&gt; &#xA;&lt;h1&gt;14. How to upgrade &lt;code&gt;acme.sh&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;acme.sh is in constant development, so it&#39;s strongly recommended to use the latest code.&lt;/p&gt; &#xA;&lt;p&gt;You can update acme.sh to the latest code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also enable auto upgrade:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade --auto-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then &lt;strong&gt;acme.sh&lt;/strong&gt; will be kept up to date automatically.&lt;/p&gt; &#xA;&lt;p&gt;Disable auto upgrade:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;acme.sh --upgrade --auto-upgrade 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;15. Issue a cert from an existing CSR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;16. Send notifications in cronjob&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/notify&#34;&gt;https://github.com/acmesh-official/acme.sh/wiki/notify&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;17. Under the Hood&lt;/h1&gt; &#xA;&lt;p&gt;Speak ACME language using shell, directly to &#34;Let&#39;s Encrypt&#34;.&lt;/p&gt; &#xA;&lt;p&gt;TODO:&lt;/p&gt; &#xA;&lt;h1&gt;18. Acknowledgments&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Acme-tiny: &lt;a href=&#34;https://github.com/diafygi/acme-tiny&#34;&gt;https://github.com/diafygi/acme-tiny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ACME protocol: &lt;a href=&#34;https://github.com/ietf-wg-acme/acme&#34;&gt;https://github.com/ietf-wg-acme/acme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Financial Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&#34;https://opencollective.com/acmesh/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;h4&gt;Individuals&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/individuals.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Organizations&lt;/h4&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/acmesh/contribute&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/acmesh/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/acmesh/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/acmesh/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;19. License &amp;amp; Others&lt;/h1&gt; &#xA;&lt;p&gt;License is GPLv3&lt;/p&gt; &#xA;&lt;p&gt;Please Star and Fork me.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/pulls&#34;&gt;pull requests&lt;/a&gt; are welcome.&lt;/p&gt; &#xA;&lt;h1&gt;20. Donate&lt;/h1&gt; &#xA;&lt;p&gt;Your donation makes &lt;strong&gt;acme.sh&lt;/strong&gt; better:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PayPal/Alipay(支付宝)/Wechat(微信): &lt;a href=&#34;https://donate.acme.sh/&#34;&gt;https://donate.acme.sh/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/Donate-list&#34;&gt;Donate List&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>boostchicken-dev/udm-utilities</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/boostchicken-dev/udm-utilities</id>
    <link href="https://github.com/boostchicken-dev/udm-utilities" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of things I have made to make the Unifi Dream Machine more useful&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;udm-utilities &lt;a href=&#34;https://discord.gg/8zqrQJFghg&#34;&gt;&lt;img src=&#34;https://img.shields.io:/discord/939817841107034172?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34; title=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmp.yml&#34;&gt;&lt;img src=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmp.yml/badge.svg?sanitize=true&#34; alt=&#34;UDM-Pro Podman&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmse.yml&#34;&gt;&lt;img src=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmse.yml/badge.svg?branch=master&#34; alt=&#34;UDM-SE Podman&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of things to enhance the capabilities of your Unifi Dream Machine or Dream Machine Pro.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull Requests welcome! If you use this functionality to do new cool stuff to your UDM/P please send a PR and share it with the community!&lt;/p&gt; &#xA;&lt;h2&gt;Custom Kernel&lt;/h2&gt; &#xA;&lt;p&gt;If you want to do a custom kernel with wireguard support, multicast, multipath routing that is now a possiblity. Please see the repo and please use at your own risk. This a much larger change than anything in this repo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fabianishere/udm-kernel-tools&#34;&gt;udm-kernel-tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Podman Builds for UDM-SE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions&#34;&gt;https://github.com/boostchicken-dev/udm-utilities/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Extract the zip to the root of your device! Look at the assets on the Podman workflow.&lt;/p&gt; &#xA;&lt;h2&gt;General Tools&lt;/h2&gt; &#xA;&lt;h3&gt;on-boot-script&lt;/h3&gt; &#xA;&lt;p&gt;Do this first. Enables &lt;code&gt;init.d&lt;/code&gt; style scripts to run on every boot of your UDM. Includes examples to run &lt;code&gt;wpa-supplicant/eap-proxy&lt;/code&gt; and/or &lt;code&gt;ntop-ng&lt;/code&gt; on startup. Follow this &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/raw/master/on-boot-script/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It enables complete customization of your UDM/P and fills the gap that config.gateway.json left behind.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;podman-update&lt;/h3&gt; &#xA;&lt;p&gt;Updates Podman, conmon, and runc to a recent version. This allows docker-compose usage as well.&lt;/p&gt; &#xA;&lt;h3&gt;container-common&lt;/h3&gt; &#xA;&lt;p&gt;Apply this after on-boot-script. Updates container defaults to maintain &lt;strong&gt;stable disk usage footprint&lt;/strong&gt; of custom containers. &lt;strong&gt;Prevents logs filling up UDM storage full&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;python&lt;/h3&gt; &#xA;&lt;p&gt;If you need python3 on your UDM, generally not recommended, can always use it in unifi-os container.&lt;/p&gt; &#xA;&lt;h3&gt;UDMP Persistence SSH Keys Script&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDMP-Persistence-SSH-Keys&#34;&gt;https://github.com/fire1ce/UDMP-Persistence-SSH-Keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Script to presist ssh keys after reboot&lt;/p&gt; &#xA;&lt;h2&gt;VPN Servers / Clients&lt;/h2&gt; &#xA;&lt;h3&gt;wireguard-go&lt;/h3&gt; &#xA;&lt;p&gt;Run a Wireguard client/server on your UDM/P. Utilizes wireguard-go, not linux kernel modules. The performance will take a hit due to that.&lt;/p&gt; &#xA;&lt;h3&gt;WireGuard kernel module for UDM/P&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tusc/wireguard-kmod&#34;&gt;https://github.com/tusc/wireguard-kmod&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Uses a prebuilt linux kernel module, without the need to move to a custom kernel.&lt;/p&gt; &#xA;&lt;h3&gt;OpenConnect VPN&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shuguet/openconnect-udm&#34;&gt;https://github.com/shuguet/openconnect-udm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenConnect VPN Client for the UniFi Dream Machine Pro (Unofficial).&lt;/p&gt; &#xA;&lt;h3&gt;split-vpn&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/peacey/split-vpn&#34;&gt;https://github.com/peacey/split-vpn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A split tunnel VPN script for the UDM with policy based routing. This helper script can be used on your UDM to route select VLANs, clients, or even domains through a VPN connection. It supports OpenVPN, WireGuard, and OpenConnect (Cisco AnyConnect) clients running directly on your UDM, and external VPN clients running on other servers on your network.&lt;/p&gt; &#xA;&lt;h2&gt;DNS Providers&lt;/h2&gt; &#xA;&lt;p&gt;Install a DNS server that functions as a network-wide ad and tracker blocker, and which can also securely proxy encrypted DNS requests to an upstream DNS provider. Begin by following the instructions to setup &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/tree/master/on-boot-script&#34;&gt;on-boot-script&lt;/a&gt; and &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/tree/master/dns-common/on_boot.d&#34;&gt;dns-common&lt;/a&gt;. Then, follow the guides below to setup either Pi-Hole, NextDNS, or AdGuard Home.&lt;/p&gt; &#xA;&lt;h3&gt;dns-common&lt;/h3&gt; &#xA;&lt;p&gt;Base configuration for DNS server containers, both IPv4 and IPv6. Utilizes MacVLAN CNI plugins to completely isolate the network stack.&lt;/p&gt; &#xA;&lt;h3&gt;run-pihole&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PiHole w/ DoH Image. Run Pi-hole on your UDM with podman. Also contains custom image for Pi-hole with &lt;code&gt;cloudflared&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;PiHole with DoTe&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole-dote.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Desigened by: &lt;a href=&#34;https://github.com/chrisstaite/DoTe/&#34;&gt;https://github.com/chrisstaite/DoTe/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternative to mine which uses DoTe&lt;/p&gt; &#xA;&lt;h3&gt;AdguardHome&lt;/h3&gt; &#xA;&lt;p&gt;Run AdguardHome on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;Cloudflare DDNS&lt;/h3&gt; &#xA;&lt;p&gt;Update your cloudflare domains from your UDM with podman.&lt;/p&gt; &#xA;&lt;h2&gt;Cool projects you can use with this&lt;/h2&gt; &#xA;&lt;h3&gt;multicast-relay&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/multicast-relay&#34;&gt;https://hub.docker.com/r/scyto/multicast-relay&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/alsmith/multicast-relay&#34;&gt;https://github.com/alsmith/multicast-relay&lt;/a&gt; to provide mDNS and SSDP on a unifi dream machine. It will likely work on any multi homed host.&lt;/p&gt; &#xA;&lt;h3&gt;mqtt-mosquitto&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/eclipse-mosquitto&#34;&gt;https://hub.docker.com/_/eclipse-mosquitto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Eclipse Mosquitto is an open source message broker which implements MQTT version 5, 3.1.1 and 3.1.&lt;/p&gt; &#xA;&lt;h3&gt;ntopng&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tusc/ntopng-udm&#34;&gt;https://github.com/tusc/ntopng-udm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Much better network stats for your UDM/P! Install this docker container and create an on_boot script to make sure it&#39;s always running.&lt;/p&gt; &#xA;&lt;h3&gt;LetsEncrypt SSL Certs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kchristensen/udm-le&#34;&gt;https://github.com/kchristensen/udm-le&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provision and renew LetsEncrypt SSL certs from your UDM/P.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alxwolf/ubios-cert&#34;&gt;https://github.com/alxwolf/ubios-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;udm-le&lt;/code&gt;, adding different providers for SSL/TLS certificates (LE, ZeroSSL, BuyPass) and DNS API (all-inkl.com) currently not supported by &lt;a href=&#34;https://go-acme.github.io/lego/dns/&#34;&gt;LEGO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unifi API Browser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/unifibrowser&#34;&gt;https://hub.docker.com/r/scyto/unifibrowser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/Art-of-WiFi/UniFi-API-browser&#34;&gt;https://github.com/Art-of-WiFi/UniFi-API-browser&lt;/a&gt; to provide a graphical tool to inspect the data structures available via the unifi API. Great if you are using the REST API for your own purposes and want to explore. Works with multiple controller versions.&lt;/p&gt; &#xA;&lt;h3&gt;Unifi UDM-Pro auto fan speed&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/renedis/ubnt-auto-fan-speed&#34;&gt;https://github.com/renedis/ubnt-auto-fan-speed&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A shell script with the goal to make the UDM-Pro silenced while still having good thermal values. It stops the build in service that monitors the thermal values, fan speed and connection of a HDD/SSD. After that it sets the thermal/fan chip (adt7475) to automatic mode. Once that is done it changes the thermal and fan values specified in the script.&lt;/p&gt; &#xA;&lt;h3&gt;rclone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rclone.org/&#34;&gt;https://rclone.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run rclone container with Web GUI for offsite backups.&lt;/p&gt; &#xA;&lt;h3&gt;Telegram-Notifications On WAN Failorver&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDMP-Failover-Telegram-Notifications&#34;&gt;https://github.com/fire1ce/UDMP-Failover-Telegram-Notifications&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use telegram bot to be notified of a wan failover with local account&lt;/p&gt; &#xA;&lt;h3&gt;udm-proxy&lt;/h3&gt; &#xA;&lt;p&gt;Run a reverse proxy (using caddy in vlan) on the udm-pro.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xpherism/udm-proxy&#34;&gt;https://github.com/xpherism/udm-proxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Unsupported / No longer maintained&lt;/h2&gt; &#xA;&lt;h3&gt;nextdns&lt;/h3&gt; &#xA;&lt;p&gt;Run NextDNS on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;suricata&lt;/h3&gt; &#xA;&lt;p&gt;Updates suricata to a recent version.&lt;/p&gt; &#xA;&lt;h3&gt;Jumbo Frames&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kalenarndt/udmp-jumbo-frames&#34;&gt;https://github.com/kalenarndt/udmp-jumbo-frames&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; native jumbo frame support for the UDM and UDM-Pro is added in the 1.12.13 EA firmware, support for the UDM-SE is not yet announced.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jgraph/drawio-desktop</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/jgraph/drawio-desktop</id>
    <link href="https://github.com/jgraph/drawio-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a diagramming and whiteboarding desktop app based on &lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt; that wraps the &lt;a href=&#34;https://github.com/jgraph/drawio&#34;&gt;core draw.io editor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download built binaries from the &lt;a href=&#34;https://github.com/jgraph/drawio-desktop/releases&#34;&gt;releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; &lt;em&gt;in the root directory of this repo&lt;/em&gt; runs the app. For debugging, use &lt;code&gt;npm start --enable-logging&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To release:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; &#xA; &lt;li&gt;Wait for the builds to complete (&lt;a href=&#34;https://travis-ci.org/jgraph/drawio-desktop&#34;&gt;https://travis-ci.org/jgraph/drawio-desktop&lt;/a&gt; and &lt;a href=&#34;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&#34;&gt;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/jgraph/drawio-desktop/releases&#34;&gt;https://github.com/jgraph/drawio-desktop/releases&lt;/a&gt;, edit the preview release.&lt;/li&gt; &#xA; &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add release notes&lt;/li&gt; &#xA; &lt;li&gt;Publish release&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt; &#xA;&lt;h2&gt;Open-source, not open-contribution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sqlite.org/copyright.html&#34;&gt;Similar to SQLite&lt;/a&gt;, diagrams.net is open source but closed to contributions.&lt;/p&gt; &#xA;&lt;p&gt;The level of complexity of this project means that even simple changes can break a &lt;em&gt;lot&lt;/em&gt; of other moving parts. The amount of testing required is far more than it first seems. If we were to receive a PR, we&#39;d have to basically throw it away and write it how we want it to be implemented.&lt;/p&gt; &#xA;&lt;p&gt;We are grateful for community involvement, bug reports, &amp;amp; feature requests. We do not wish to come off as anything but welcoming, however, we&#39;ve made the decision to keep this project closed to contributions for the long term viability of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>haixiangyan/jest-tutorial</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/haixiangyan/jest-tutorial</id>
    <link href="https://github.com/haixiangyan/jest-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🃏《Jest 实践指南》&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🃏《Jest 实践指南》&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/haixiangyan/jest-tutorial?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/haixiangyan/jest-tutorial-example/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jest-tutorial&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/cover.jpeg&#34; width=&#34;300&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.yanhaixiang.com/jest-tutorial/&#34;&gt;《Jest 实践指南》访问链接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haixiangyan/jest-tutorial-example&#34;&gt;《Jest 实践指南》配套项目&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jestjs.io/&#34;&gt;Jest&lt;/a&gt; 看似很简单，就像很多博客写的那样：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;expect(sum(1, 1)).toEqual(2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然而在真实业务中，写出一个好测试的难度并没有大家想的那么低。我总结了一下写测试的几个难点：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不会配置。&lt;/strong&gt; Jest 的上手文档非常简单，甚至不需要配置。但真实情况是只要一个配置没配好，所有测试都跑不起来。测试不像开发，代码有问题可以慢慢调。 测试是一个 0 - 1 游戏，不是成功就是失败，挫败感非常强。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不知道要怎么 Mock。&lt;/strong&gt; 这个绝对是经典中的经典。虽然官方文档有教程，但是真实的业务往往不是那么理想，远比文档要复杂的多。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;不会构造测试用例。&lt;/strong&gt; 刚接触测试时，很容易把做业务那套 “实现 XXX 功能” 的想法代入测试。但测试的重点不在于实现功能，而是构造用例。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;没有测试策略。&lt;/strong&gt; 上面是 “技” 的难点，测试还有 “术” 的难点。闷着头一通肝测试代码并不高效，使用合适的测试策略远比写 10 个测试用例重要。&lt;/p&gt; &#xA;&lt;p&gt;上面这些问题很容易让人写出难以维护和复杂的测试。只要业务一改，不仅要维护业务代码还要维护测试代码。 这时，你不禁感叹：“测试真浪费时间”，最终放弃写测试，直接开摆。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;好的测试会让你获得很高的代码信心，而不好的测试则会严重拖垮项目开发。所以，大家所厌恶的不应该是测试本身，而是那些维护性差的测试。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目的&lt;/h2&gt; &#xA;&lt;p&gt;我在网上翻找关于前端测试的资料时，我发现真的太少了，几乎可以分为几类：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;入门类。&lt;/strong&gt; 安装 Jest，外加 &lt;code&gt;expect(1 + 1).toEqual(2)&lt;/code&gt; 小例子&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API 说明书类。&lt;/strong&gt; 类似于把 Jest 官网抄了一遍&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;理论类。&lt;/strong&gt; 是什么、为什么、测试分类等，但最重要的 “怎么做” 没有说&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;并不是说这些文章不好，只是，这些文章大多数停留在最初级，很不利于其它同学来学习一门新技术。&lt;/p&gt; &#xA;&lt;p&gt;同时，我还拜访了一下 &lt;a href=&#34;https://jestjs.io/zh-Hans/&#34;&gt;Jest 的官网&lt;/a&gt; 。没想到，都 2022 年了，中文翻译依然这么难看：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/docs/bad-translation.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;先不说翻译的正确性如何，单看这中文的内容就让人没有想看下去的欲望，真希望 Jest 能找稍微专业一点的人来做翻译。 由于官网的中文翻译做的实在太烂，遇到问题几乎在中文社区是找不到的。&lt;/p&gt; &#xA;&lt;p&gt;终于，我看到了 React Testing Library 作者 Kent C. Dodds 的 &lt;a href=&#34;https://kentcdodds.com/&#34;&gt;博客&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/docs/kentcdodds.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;他写了很多关于测试思路的文章，每一篇都非常精彩。&lt;strong&gt;受他的启发，我觉得有必要把这些思想和技巧分享出来，最终形成了这本小书。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;内容&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;此次教程主要分享测试的思路为主，虽然以 React 为主要技术栈，但使用其它技术栈的读者依然可以流畅阅读。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;本教程是我结合了自身实践、Kent C. Dodds 文章、StackOverflow、Github Issue 以及别的博客最终总结出来的一套实践指南。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;小书包含 3 部分：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;基础实践。&lt;/strong&gt; 从 0 到 1 写项目和测试，每一章会通过一个业务例子来分享测试难点、解法和思路。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;测试思路。&lt;/strong&gt; 分享一些 Kent 的文章（中文翻译）以及测试总结。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/haixiangyan/jest-tutorial-example&#34;&gt;配套项目&lt;/a&gt;。&lt;/strong&gt; 如果你在某一步卡壳了，也可以参考这个项目。&lt;/p&gt; &#xA;&lt;p&gt;最近给这个 Repo 开了一个 &lt;a href=&#34;https://github.com/haixiangyan/jest-tutorial/discussions&#34;&gt;讨论区&lt;/a&gt; ，如果你有任何问题（Jest、测试、小书） ，都可以在这里一起讨论 😄。&lt;/p&gt; &#xA;&lt;h2&gt;求关注&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;这教程 + 配套项目写了 3 周，说实话挺累的。原创不易，打赏就不必了，观众老爷省着吧。只求大家多关注一下我的新公众号【写代码的海怪】。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/haixiangyan/jest-tutorial/main/docs/qrcode.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kj89/testnet_manuals</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/kj89/testnet_manuals</id>
    <link href="https://github.com/kj89/testnet_manuals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;This page contain tutorials on how to deploy various crypto project servers&lt;/h3&gt; &#xA;&lt;p style=&#34;font-size:14px&#34; align=&#34;center&#34;&gt; Join our telegram &lt;a href=&#34;https://t.me/kjnotes&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/50621007/168689534-796f181e-3e4c-43a5-8183-9888fc92cfa7.png&#34; width=&#34;30&#34;&gt;&lt;/a&gt; Visit our website &lt;a href=&#34;https://kjnodes.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/50621007/168689709-7e537ca6-b6b8-4adc-9bd0-186ea4ea4aed.png&#34; width=&#34;30&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>confluentinc/examples</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/confluentinc/examples</id>
    <link href="https://github.com/confluentinc/examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Kafka and Confluent Platform examples and demos&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/images/confluent-logo-300-2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#where-to-start&#34;&gt;Where to Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#confluent-cloud&#34;&gt;Confluent Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#stream-processing&#34;&gt;Stream Processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#data-pipelines&#34;&gt;Data Pipelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#confluent-platform&#34;&gt;Confluent Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#build-your-own&#34;&gt;Build Your Own&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/#additional-demos&#34;&gt;Additional Demos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;This is a curated list of demos that showcase Apache Kafka® event stream processing on the Confluent Platform, an event stream processing platform that enables you to process, organize, and manage massive amounts of streaming data across cloud, on-prem, and serverless deployments.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://www.youtube.com/watch?v=muQBd6gry0U&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/images/examples-video-thumbnail.jpg&#34; width=&#34;360&#34; height=&#34;270&#34; border=&#34;10&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Where to start&lt;/h1&gt; &#xA;&lt;p&gt;The best demo to start with is &lt;a href=&#34;https://github.com/confluentinc/cp-demo&#34;&gt;cp-demo&lt;/a&gt; which spins up a Kafka event streaming application using ksqlDB for stream processing, with many security features enabled, in an end-to-end streaming ETL pipeline with a source connector pulling from live data and a sink connector connecting to Elasticsearch and Kibana for visualizations. &lt;code&gt;cp-demo&lt;/code&gt; also comes with a tutorial and is a great configuration reference for Confluent Platform.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/cp-demo/5.4.1-post/docs/images/cp-demo-overview.jpg&#34; width=&#34;600&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Confluent Cloud&lt;/h1&gt; &#xA;&lt;p&gt;There are many examples from full end-to-end demos that create connectors, streams, and KSQL queries in Confluent Cloud, to resources that help you build your own demos. You can find the documentation and instructions for all Confluent Cloud demos at &lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/examples/ccloud/docs/ccloud-demos-overview.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;https://docs.confluent.io/platform/current/tutorials/examples/ccloud/docs/ccloud-demos-overview.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Local&lt;/th&gt; &#xA;   &lt;th&gt;Docker&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/ccloud/beginner-cloud/README.md#confluent-cloud-cli&#34;&gt;Confluent CLI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Fully automated demo interacting with your Confluent Cloud cluster using the Confluent CLI &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/images/confluent-cli.png&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/README.md&#34;&gt;Clients in Various Languages to Cloud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Client applications, showcasing producers and consumers, in various programming languages connecting to &lt;a href=&#34;https://www.confluent.io/confluent-cloud/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Cloud&lt;/a&gt; &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/images/clients-all.png&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cloud-etl/README.md&#34;&gt;Cloud ETL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cloud-etl/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Fully automated cloud ETL solution using Confluent Cloud connectors (AWS Kinesis, Postgres with AWS RDS, GCP GCS, AWS S3, Azure Blob) and fully-managed ksqlDB &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cloud-etl/docs/images/topology.png&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/ccloud/ccloud-stack/README.md&#34;&gt;ccloud-stack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Creates a fully-managed stack in Confluent Cloud, including a new environment, service account, Kafka cluster, KSQL app, Schema Registry, and ACLs. The demo also generates a config file for use with client applications.&lt;br&gt;&lt;img src=&#34;https://github.com/confluentinc/cp-all-in-one/raw/latest/images/ccloud-stack-resources.png&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.confluent.io/current/tutorials/cp-demo/docs/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;On-Prem Kafka to Cloud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.confluent.io/current/tutorials/cp-demo/docs/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Module 2 of &lt;a href=&#34;https://docs.confluent.io/current/tutorials/cp-demo/docs/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Platform demo&lt;/a&gt; (&lt;code&gt;cp-demo&lt;/code&gt;) with a playbook for copying data between the on-prem and Confluent Cloud clusters &lt;br&gt;&lt;img src=&#34;https://github.com/confluentinc/cp-demo/raw/7.1.1-post/docs/images/cp-demo-overview-with-ccloud.jpg&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/kubernetes/replicator-gke-cc/README.md&#34;&gt;GKE to Cloud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/kubernetes/replicator-gke-cc/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses Google Kubernetes Engine, &lt;a href=&#34;https://www.confluent.io/confluent-cloud/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Cloud&lt;/a&gt;, and &lt;a href=&#34;https://www.confluent.io/confluent-replicator/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Replicator&lt;/a&gt; to explore a multicloud deployment &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/kubernetes/replicator-gke-cc/docs/images/operator-demo-phase-2.png&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/streaming-ops/index.html&#34;&gt;DevOps for Apache Kafka® with Kubernetes and GitOps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Simulated production environment running a streaming application targeting Apache Kafka on Confluent Cloud using Kubernetes and GitOps &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/images/github-flux-kubernetes-600x105.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Stream Processing&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Local&lt;/th&gt; &#xA;   &lt;th&gt;Docker&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clickstream/README.md&#34;&gt;Clickstream&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/examples/clickstream/docs/index.html#clickstream-demo?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automated version of the &lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/examples/clickstream/docs/index.html#clickstream-demo?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;ksqlDB clickstream demo&lt;/a&gt; &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clickstream/docs/images/grafana-dashboard.png&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kafka-tutorials.confluent.io?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Kafka Tutorials&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kafka-tutorials.confluent.io?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kafka-tutorials.confluent.io?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collection of common event streaming use cases, with each tutorial featuring an example scenario and several complete code solutions &lt;br&gt;&lt;img src=&#34;https://cdn.confluent.io/wp-content/uploads/Kafka-Tutorials-350x195.jpg&#34; width=&#34;350&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/microservices-orders/README.md&#34;&gt;Microservices ecosystem&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/microservices-orders/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/confluentinc/kafka-streams-examples/tree/5.2.2-post/src/main/java/io/confluent/examples/streams/microservices&#34;&gt;Microservices orders Demo Application&lt;/a&gt; integrated into the Confluent Platform &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/microservices-orders/docs/images/microservices-demo.jpg&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Data Pipelines&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Local&lt;/th&gt; &#xA;   &lt;th&gt;Docker&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/README.md&#34;&gt;Clients in Various Languages&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Client applications, showcasing producers and consumers, in various programming languages &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/cloud/images/clients-all.png&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/connect-streams-pipeline/README.md&#34;&gt;Connect and Kafka Streams&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/connect-streams-pipeline/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrate various ways, with and without Kafka Connect, to get data into Kafka topics and then loaded for use by the Kafka Streams API &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/connect-streams-pipeline/docs/images/example_3.jpg&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Confluent Platform&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Demo&lt;/th&gt; &#xA;   &lt;th&gt;Local&lt;/th&gt; &#xA;   &lt;th&gt;Docker&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/README.md&#34;&gt;Avro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/clients/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;Client applications using Avro and Confluent Schema Registry &lt;br&gt;&lt;img src=&#34;https://www.confluent.io/wp-content/uploads/dwg_SchemaReg_howitworks.png&#34; width=&#34;420&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/confluentinc/cp-demo&#34;&gt;CP Demo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/confluentinc/cp-demo&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/cp-demo/docs/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Platform demo&lt;/a&gt; (&lt;code&gt;cp-demo&lt;/code&gt;) with a playbook for Kafka event streaming ETL deployments &lt;br&gt;&lt;img src=&#34;https://github.com/confluentinc/cp-demo/raw/7.1.1-post/docs/images/cp-demo-overview.jpg&#34; width=&#34;420&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/kubernetes/README.md&#34;&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/kubernetes/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrations of Confluent Platform deployments using the &lt;a href=&#34;https://docs.confluent.io/operator/current/overview.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Operator&lt;/a&gt; &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/kubernetes/docs/images/operator.png&#34; width=&#34;420&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/multi-datacenter/README.md&#34;&gt;Multi Datacenter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/multi-datacenter/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Active-active multi-datacenter design with two instances of Confluent Replicator copying data bidirectionally between the datacenters &lt;br&gt;&lt;img src=&#34;https://docs.confluent.io/platform/current/_images/mdc-level-1.png&#34; width=&#34;420&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/multiregion/README.md&#34;&gt;Multi-Region Clusters&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/multiregion/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi-Region clusters (MRC) with follower fetching, observers, and replica placement&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/multiregion/docs/images/multi-region-topic-replicas-v2.png&#34; width=&#34;420&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cp-quickstart/README.md&#34;&gt;Quickstart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cp-quickstart/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cp-quickstart/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automated version of the &lt;a href=&#34;https://docs.confluent.io/platform/current/quickstart/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;Confluent Quickstart&lt;/a&gt;: for Confluent Platform on local install or Docker, community version, and Confluent Cloud &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/cp-quickstart/images/quickstart.png&#34; width=&#34;420&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/security/rbac/README.md&#34;&gt;Role-Based Access Control&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;Role-based Access Control (RBAC) provides granular privileges for users and service accounts &lt;br&gt;&lt;img src=&#34;https://docs.confluent.io/platform/current/_images/rbac-overview.png&#34; width=&#34;450&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/replicator-security/README.md&#34;&gt;Replicator Security&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/replicator-security/README.md&#34;&gt;Y&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demos of various security configurations supported by Confluent Replicator and examples of how to implement them &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/examples/7.1.1-post/images/replicator-security.png&#34; width=&#34;300&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Build Your Own&lt;/h1&gt; &#xA;&lt;p&gt;As a next step, you may want to build your own custom demo or test environment. We have several resources that launch just the services in Confluent Cloud or on prem, with no pre-configured connectors, data sources, topics, schemas, etc. Using these as a foundation, you can then add any connectors or applications. You can find the documentation and instructions for these &#34;build-your-own&#34; resources at &lt;a href=&#34;https://docs.confluent.io/platform/current/tutorials/build-your-own-demos.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top&#34;&gt;https://docs.confluent.io/platform/current/tutorials/build-your-own-demos.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Additional Demos&lt;/h1&gt; &#xA;&lt;p&gt;Here are additional GitHub repos that offer an incredible set of nearly a hundred other Apache Kafka demos. They are not maintained on a per-release basis like the demos in this repo, but they are an invaluable resource.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.confluent.io/demos-examples/&#34;&gt;Learn: Apache Kafka Demos and Examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/confluentinc/demo-scene/raw/master/README.md&#34;&gt;confluentinc/demo-scene&lt;/a&gt;, the most popular demos include:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/confluentinc/demo-scene/tree/master/build-a-streaming-pipeline/workshop&#34;&gt;Workshop: Apache Kafka and ksqlDB in Action: Let’s Build a Streaming Data Pipeline!&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/confluentinc/demo-scene/tree/master/introduction-to-ksqldb&#34;&gt;Introduction to ksqlDB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/confluentinc/demo-scene/tree/master/kafka-connect-zero-to-hero&#34;&gt;Kafka Connect Zero to Hero&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vdesabou/kafka-docker-playground/raw/master/README.md&#34;&gt;vdesabou/kafka-docker-playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-quickstart-templates</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/Azure/azure-quickstart-templates</id>
    <link href="https://github.com/Azure/azure-quickstart-templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Azure Quickstart Templates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure Resource Manager QuickStart Templates&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains all currently available Azure Resource Manager templates contributed by the community. A searchable template index is maintained at &lt;a href=&#34;https://azure.microsoft.com/en-us/documentation/templates&#34;&gt;azure.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/README.md#contribution-guide&#34;&gt;&lt;strong&gt;Contribution guide&lt;/strong&gt;&lt;/a&gt; for how to use or contribute to this repo.&lt;/p&gt; &#xA;&lt;h2&gt;NOTE&lt;/h2&gt; &#xA;&lt;p&gt;We have finished migration of the samples to subfolders, see &lt;a href=&#34;https://azure.microsoft.com/en-us/documentation/templates&#34;&gt;azure.com&lt;/a&gt; if you need help finding a sample. A few obsolete samples were removed in the migration.&lt;/p&gt; &#xA;&lt;h3&gt;Final Note&lt;/h3&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/super-linter</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/github/super-linter</id>
    <link href="https://github.com/github/super-linter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Combination of multiple linters to install as a GitHub Action&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Super-Linter&lt;/h1&gt; &#xA;&lt;p&gt;This repository is for the &lt;strong&gt;GitHub Action&lt;/strong&gt; to run a &lt;strong&gt;Super-Linter&lt;/strong&gt;. It is a simple combination of various linters, written in &lt;code&gt;bash&lt;/code&gt;, to help validate your source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codacy.com/gh/github/super-linter/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=github/super-linter&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/51071879604e4f319859d4daf91c68f5&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The end goal of this tool:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prevent broken code from being uploaded to the default branch (&lt;em&gt;Usually&lt;/em&gt; &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;main&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Help establish coding best practices across multiple languages&lt;/li&gt; &#xA; &lt;li&gt;Build guidelines for code layout and format&lt;/li&gt; &#xA; &lt;li&gt;Automate the process to help streamline code reviews&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#super-linter&#34;&gt;Super-Linter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-it-works&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#supported-linters&#34;&gt;Supported Linters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-to-use&#34;&gt;How to use&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#example-connecting-github-action-workflow&#34;&gt;Example connecting GitHub Action Workflow&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#add-super-linter-badge-in-your-repository-readme&#34;&gt;Add Super-Linter badge in your repository README&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#images&#34;&gt;Images&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#standard-image&#34;&gt;Standard Image&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#slim-image&#34;&gt;Slim Image&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#environment-variables&#34;&gt;Environment variables&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#template-rules-files&#34;&gt;Template rules files&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#using-your-own-rules-files&#34;&gt;Using your own rules files&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#disabling-rules&#34;&gt;Disabling rules&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#using-your-own-ssh-key&#34;&gt;Using your own SSH key&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#filter-linted-files&#34;&gt;Filter linted files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#docker-hub&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#run-super-linter-outside-github-actions&#34;&gt;Run Super-Linter outside GitHub Actions&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#local-troubleshootingdebuggingenhancements&#34;&gt;Local (troubleshooting/debugging/enhancements)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#azure&#34;&gt;Azure&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#gitlab&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#ssl-certs&#34;&gt;SSL Certs&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#community-activity&#34;&gt;Community Activity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;The super-linter finds issues and reports them to the console output. Fixes are suggested in the console output but not automatically fixed, and a status check will show up as failed on the pull request.&lt;/p&gt; &#xA;&lt;p&gt;The design of the &lt;strong&gt;Super-Linter&lt;/strong&gt; is currently to allow linting to occur in &lt;strong&gt;GitHub Actions&lt;/strong&gt; as a part of continuous integration occurring on pull requests as the commits get pushed. It works best when commits are being pushed early and often to a branch with an open or draft pull request. There is some desire to move this closer to local development for faster feedback on linting errors but this is not yet supported.&lt;/p&gt; &#xA;&lt;h3&gt;Repository Visualization&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://super-linter.s3.us-west-2.amazonaws.com/diagram.svg?sanitize=true&#34; alt=&#34;Visualization of the codebase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Linters&lt;/h2&gt; &#xA;&lt;p&gt;Developers on &lt;strong&gt;GitHub&lt;/strong&gt; can call the &lt;strong&gt;GitHub Action&lt;/strong&gt; to lint their codebase with the following list of linters:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;em&gt;Language&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;Linter&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ansible&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ansible/ansible-lint&#34;&gt;ansible-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AWS CloudFormation templates&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aws-cloudformation/cfn-python-lint/&#34;&gt;cfn-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Azure Resource Manager (Bicep)(ARM)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/azure/arm-ttk&#34;&gt;arm-ttk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cpplint/cpplint&#34;&gt;cpp-lint&lt;/a&gt; / &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/format&#34;&gt;dotnet-format&lt;/a&gt; / &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://stylelint.io/&#34;&gt;stylelint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/borkdude/clj-kondo&#34;&gt;clj-kondo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CoffeeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coffeelint.github.io/&#34;&gt;coffeelint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Copy/paste detection&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kucherenko/jscpd&#34;&gt;jscpd&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dart&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dart.dev/guides/language/analysis-options&#34;&gt;dartanalyzer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;hadolint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EditorConfig&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/editorconfig-checker/editorconfig-checker&#34;&gt;editorconfig-checker&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ENV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotenv-linter/dotenv-linter&#34;&gt;dotenv-linter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Gherkin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vsiakka/gherkin-lint&#34;&gt;gherkin-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GitHub Actions&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rhysd/actionlint&#34;&gt;actionlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Golang&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;&gt;golangci-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Groovy&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvuillam/npm-groovy-lint&#34;&gt;npm-groovy-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/htmlhint/HTMLHint&#34;&gt;HTMLHint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://checkstyle.org&#34;&gt;checkstyle&lt;/a&gt; / &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;google-java-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; / &lt;a href=&#34;https://standardjs.com/&#34;&gt;standard js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-json&#34;&gt;eslint-plugin-json&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSONC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-jsonc&#34;&gt;eslint-plugin-jsonc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kubeval&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/instrumenta/kubeval&#34;&gt;kubeval&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LaTeX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nongnu.org/chktex/&#34;&gt;ChkTex&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Lua&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/luarocks/luacheck&#34;&gt;luacheck&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#readme&#34;&gt;markdownlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Natural language&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://textlint.github.io/&#34;&gt;textlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OpenAPI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/stoplightio/spectral&#34;&gt;spectral&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic&#34;&gt;perlcritic&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.php.net/&#34;&gt;PHP built-in linter&lt;/a&gt; / &lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP CodeSniffer&lt;/a&gt; / &lt;a href=&#34;https://phpstan.org/&#34;&gt;PHPStan&lt;/a&gt; / &lt;a href=&#34;https://psalm.dev/&#34;&gt;Psalm&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PowerShell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/Psscriptanalyzer&#34;&gt;PSScriptAnalyzer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Protocol Buffers&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yoheimuta/protolint&#34;&gt;protolint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pylint.org/&#34;&gt;pylint&lt;/a&gt; / &lt;a href=&#34;https://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt; / &lt;a href=&#34;https://github.com/psf/black&#34;&gt;black&lt;/a&gt; / &lt;a href=&#34;https://pypi.org/project/isort/&#34;&gt;isort&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jimhester/lintr&#34;&gt;lintr&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Raku&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raku.org&#34;&gt;Raku&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rubocop-hq/rubocop&#34;&gt;RuboCop&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rust-lang/rustfmt&#34;&gt;Rustfmt&lt;/a&gt; / &lt;a href=&#34;https://github.com/rust-lang/rust-clippy&#34;&gt;Clippy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Scala&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/scalameta/scalafmt&#34;&gt;scalafmt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zricethezav/gitleaks&#34;&gt;GitLeaks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Shell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;Shellcheck&lt;/a&gt; / [executable bit check] / &lt;a href=&#34;https://github.com/mvdan/sh&#34;&gt;shfmt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Snakemake&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/snakemake/snakefmt/&#34;&gt;snakefmt&lt;/a&gt; / &lt;a href=&#34;https://snakemake.readthedocs.io/en/stable/snakefiles/writing_snakefiles.html#best-practices&#34;&gt;snakemake --lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/joereynolds/sql-lint&#34;&gt;sql-lint&lt;/a&gt; / &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff&#34;&gt;sqlfluff&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Tekton&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/IBM/tekton-lint&#34;&gt;tekton-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;tflint&lt;/a&gt; / &lt;a href=&#34;https://github.com/accurics/terrascan&#34;&gt;terrascan&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terragrunt&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;terragrunt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; / &lt;a href=&#34;https://standardjs.com/&#34;&gt;standard js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://xmlsoft.org/&#34;&gt;LibXML&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/adrienverge/yamllint&#34;&gt;YamlLint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;More in-depth &lt;a href=&#34;https://www.youtube.com/watch?v=EDAmFKO4Zt0&amp;amp;t=118s&#34;&gt;tutorial&lt;/a&gt; available&lt;/p&gt; &#xA;&lt;p&gt;To use this &lt;strong&gt;GitHub&lt;/strong&gt; Action you will need to complete the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new file in your repository called &lt;code&gt;.github/workflows/linter.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the example workflow from below into that new file, no extra configuration required&lt;/li&gt; &#xA; &lt;li&gt;Commit that file to a new branch&lt;/li&gt; &#xA; &lt;li&gt;Open up a pull request and observe the action working&lt;/li&gt; &#xA; &lt;li&gt;Enjoy your more &lt;em&gt;stable&lt;/em&gt;, and &lt;em&gt;cleaner&lt;/em&gt; codebase&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://github.com/github/super-linter/wiki&#34;&gt;Wiki&lt;/a&gt; for customization options&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you pass the &lt;em&gt;Environment&lt;/em&gt; variable &lt;code&gt;GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&lt;/code&gt; in your workflow, then the &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt; will mark the status of each individual linter run in the Checks section of a pull request. Without this you will only see the overall status of the full run. There is no need to set the &lt;strong&gt;GitHub&lt;/strong&gt; Secret as it is automatically set by GitHub, it only needs to be passed to the action.&lt;/p&gt; &#xA;&lt;h3&gt;Example connecting GitHub Action Workflow&lt;/h3&gt; &#xA;&lt;p&gt;In your repository you should have a &lt;code&gt;.github/workflows&lt;/code&gt; folder with &lt;strong&gt;GitHub&lt;/strong&gt; Action similar to below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.github/workflows/linter.yml&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example file can be found at &lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/TEMPLATES/linter.yml&#34;&gt;&lt;code&gt;TEMPLATES/linter.yml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This file should have the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;---&#xA;#################################&#xA;#################################&#xA;## Super Linter GitHub Actions ##&#xA;#################################&#xA;#################################&#xA;name: Lint Code Base&#xA;&#xA;#&#xA;# Documentation:&#xA;# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions&#xA;#&#xA;&#xA;#############################&#xA;# Start the job on all push #&#xA;#############################&#xA;on:&#xA;  push:&#xA;    branches-ignore: [master, main]&#xA;    # Remove the line above to run when pushing to master&#xA;  pull_request:&#xA;    branches: [master, main]&#xA;&#xA;###############&#xA;# Set the Job #&#xA;###############&#xA;jobs:&#xA;  build:&#xA;    # Name the Job&#xA;    name: Lint Code Base&#xA;    # Set the agent to run on&#xA;    runs-on: ubuntu-latest&#xA;&#xA;    ##################&#xA;    # Load all steps #&#xA;    ##################&#xA;    steps:&#xA;      ##########################&#xA;      # Checkout the code base #&#xA;      ##########################&#xA;      - name: Checkout Code&#xA;        uses: actions/checkout@v3&#xA;        with:&#xA;          # Full git history is needed to get a proper list of changed files within `super-linter`&#xA;          fetch-depth: 0&#xA;&#xA;      ################################&#xA;      # Run Linter against code base #&#xA;      ################################&#xA;      - name: Lint Code Base&#xA;        uses: github/super-linter@v4&#xA;        env:&#xA;          VALIDATE_ALL_CODEBASE: false&#xA;          DEFAULT_BRANCH: master&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add Super-Linter badge in your repository README&lt;/h3&gt; &#xA;&lt;p&gt;You can show Super-Linter status with a badge in your repository README&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marketplace/actions/super-linter&#34;&gt;&lt;img src=&#34;https://github.com/nvuillam/npm-groovy-lint/workflows/Lint%20Code%20Base/badge.svg?sanitize=true&#34; alt=&#34;GitHub Super-Linter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![GitHub Super-Linter](https://github.com/&amp;lt;OWNER&amp;gt;/&amp;lt;REPOSITORY&amp;gt;/workflows/Lint%20Code%20Base/badge.svg)](https://github.com/marketplace/actions/super-linter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![GitHub Super-Linter](https://github.com/nvuillam/npm-groovy-lint/workflows/Lint%20Code%20Base/badge.svg)](https://github.com/marketplace/actions/super-linter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; IF you did not use &lt;code&gt;Lint Code Base&lt;/code&gt; as GitHub Action name, please read &lt;a href=&#34;https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/adding-a-workflow-status-badge&#34;&gt;GitHub Actions Badges documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Images&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt; now builds and supports &lt;code&gt;multiple&lt;/code&gt; images. We have found as we added more linters, the image size expanded drastically. After further investigation, we were able to see that a few linters were very disk heavy. We removed those linters and created the &lt;code&gt;slim&lt;/code&gt; image. This allows users to choose which &lt;strong&gt;Super-Linter&lt;/strong&gt; they want to run and potentially speed up their build time. The available images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;github/super-linter:v4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;github/super-linter:slim-v4&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Standard Image&lt;/h4&gt; &#xA;&lt;p&gt;The standard &lt;code&gt;github/super-linter:v4&lt;/code&gt; comes with all supported linters. Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;################################&#xA;# Run Linter against code base #&#xA;################################&#xA;- name: Lint Code Base&#xA;  uses: github/super-linter@v4&#xA;  env:&#xA;    VALIDATE_ALL_CODEBASE: false&#xA;    DEFAULT_BRANCH: master&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Slim Image&lt;/h4&gt; &#xA;&lt;p&gt;The slim &lt;code&gt;github/super-linter:slim-v4&lt;/code&gt; comes with all supported linters but removes the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rust&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotenv&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;armttk&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pwsh&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;c#&lt;/code&gt; linters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By removing these linters, we were able to bring the image size down by &lt;code&gt;2gb&lt;/code&gt; and drastically speed up the build and download time. The behavior will be the same for non-supported languages, and will skip languages at run time. Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;################################&#xA;# Run Linter against code base #&#xA;################################&#xA;- name: Lint Code Base&#xA;  uses: github/super-linter/slim@v4&#xA;  env:&#xA;    VALIDATE_ALL_CODEBASE: false&#xA;    DEFAULT_BRANCH: master&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;The super-linter allows you to pass the following &lt;code&gt;ENV&lt;/code&gt; variables to be able to trigger different functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; All the &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables behave in a very specific way:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If none of them are passed, then they all default to true.&lt;/li&gt; &#xA; &lt;li&gt;If any one of the variables are set to true, we default to leaving any unset variable to false (only validate those languages).&lt;/li&gt; &#xA; &lt;li&gt;If any one of the variables are set to false, we default to leaving any unset variable to true (only exclude those languages).&lt;/li&gt; &#xA; &lt;li&gt;If there are &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables set to both true and false. It will fail.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This means that if you run the linter &#34;out of the box&#34;, all languages will be checked. But if you wish to select or exclude specific linters, we give you full control to choose which linters are run, and won&#39;t run anything unexpected.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;ENV VAR&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Default Value&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ACTIONS_RUNNER_DEBUG&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable additional information about the linter, versions, and additional output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ansible-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://ansible-lint.readthedocs.io/en/latest/configuring.html#configuration-file&#34;&gt;Ansible-lint configuration&lt;/a&gt; (ex: &lt;code&gt;.ansible-lint&lt;/code&gt;, &lt;code&gt;.ansible-lint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_DIRECTORY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/ansible&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the root directory for Ansible file location(s), relative to &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;. Set to &lt;code&gt;.&lt;/code&gt; to use the top-level of the &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_ROLES_PATH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;${ANSIBLE_DIRECTORY}/roles&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the Ansible roles directory.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CSS_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.stylelintrc.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/stylelint/stylelint&#34;&gt;Stylelint configuration&lt;/a&gt; (ex: &lt;code&gt;.stylelintrc.yml&lt;/code&gt;, &lt;code&gt;.stylelintrc.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEFAULT_BRANCH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The name of the repository default branch.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEFAULT_WORKSPACE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/tmp/lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The location containing files to lint if you are running locally.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DISABLE_ERRORS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to have the linter complete with exit code 0 even if errors were detected.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DOCKERFILE_HADOLINT_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.hadolint.yaml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;hadolint configuration&lt;/a&gt; (ex: &lt;code&gt;.hadolintlintrc.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EDITORCONFIG_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ecrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/editorconfig-checker/editorconfig-checker&#34;&gt;editorconfig-checker configuration&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ERROR_ON_MISSING_EXEC_BIT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;bash-exec&lt;/code&gt; linter will report a warning if a shell script is not executable. If set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;bash-exec&lt;/code&gt; linter will report an error instead.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FILTER_REGEX_EXCLUDE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regular expression defining which files will be excluded from linting (ex: &lt;code&gt;.*src/test.*&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FILTER_REGEX_INCLUDE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regular expression defining which files will be processed by linters (ex: &lt;code&gt;.*src/.*&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_ACTIONS_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;actionlint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/rhysd/actionlint/raw/main/docs/config.md&#34;&gt;Actionlint configuration&lt;/a&gt; (ex: &lt;code&gt;actionlint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_CUSTOM_API_URL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.github.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub API URL in case GitHub Enterprise is used: e.g. &lt;code&gt;https://github.myenterprise.com/api/v3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_DOMAIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;github.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub domain in case GitHub Enterprise is used: e.g. &lt;code&gt;github.myenterprise.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITLEAKS_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.gitleaks.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/zricethezav/gitleaks#configuration&#34;&gt;GitLeaks configuration&lt;/a&gt; (ex: &lt;code&gt;.geatleaks.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IGNORE_GENERATED_FILES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will ignore all the files with &lt;code&gt;@generated&lt;/code&gt; marker but without &lt;code&gt;@not-generated&lt;/code&gt; marker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IGNORE_GITIGNORED_FILES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will ignore all the files that are ignored by Git.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVA_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sun_checks.xml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://checkstyle.sourceforge.io/config.html&#34;&gt;Checkstyle configuration&lt;/a&gt; (ex: &lt;code&gt;checkstyle.xml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVASCRIPT_DEFAULT_STYLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the default style of JavaScript. Available options: &lt;strong&gt;standard&lt;/strong&gt;/&lt;strong&gt;prettier&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVASCRIPT_ES_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.eslintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring#configuration-file-formats&#34;&gt;ESLint configuration&lt;/a&gt; (ex: &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSCPD_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.jscpd.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for JSCPD configuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;KUBERNETES_KUBEVAL_OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments to pass to the command-line when running &lt;strong&gt;Kubernetes Kubeval&lt;/strong&gt; (Example: --ignore-missing-schemas)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LINTER_RULES_PATH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.github/linters&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directory for all linter configuration rules.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LOG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;super-linter.log&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The filename for outputting logs. All output is sent to the log file regardless of &lt;code&gt;LOG_LEVEL&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LOG_LEVEL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;VERBOSE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How much output the script will generate to the console. One of &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;NOTICE&lt;/code&gt;, &lt;code&gt;VERBOSE&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt; or &lt;code&gt;TRACE&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MARKDOWN_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.markdown-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/DavidAnson/markdownlint#optionsconfig&#34;&gt;Markdownlint configuration&lt;/a&gt; (ex: &lt;code&gt;.markdown-lint.yml&lt;/code&gt;, &lt;code&gt;.markdownlint.json&lt;/code&gt;, &lt;code&gt;.markdownlint.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MARKDOWN_CUSTOM_RULE_GLOBS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.markdown-lint/rules,rules/**&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated list of &lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#globbing&#34;&gt;file globs&lt;/a&gt; matching &lt;a href=&#34;https://github.com/DavidAnson/markdownlint/raw/main/doc/CustomRules.md&#34;&gt;custom Markdownlint rule files&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MULTI_STATUS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A status API is made for each language that is linted to make visual parsing easier.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;NATURAL_LANGUAGE_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.textlintrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://textlint.github.io/docs/getting-started.html#configuration&#34;&gt;textlint configuration&lt;/a&gt; (ex: &lt;code&gt;.textlintrc&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PERL_PERLCRITIC_OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments to pass to the command-line when running &lt;strong&gt;perlcritic&lt;/strong&gt; (Example: --theme community)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;php.ini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://www.php.net/manual/en/configuration.file.php&#34;&gt;PHP Configuration&lt;/a&gt; (ex: &lt;code&gt;php.ini&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PROTOBUF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.protolintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/yoheimuta/protolint/raw/master/_example/config/.protolint.yaml&#34;&gt;protolint configuration&lt;/a&gt; (ex: &lt;code&gt;.protolintrc.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_BLACK_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.python-black&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/psf/black/raw/main/docs/guides/using_black_with_other_tools.md#black-compatible-configurations&#34;&gt;black configuration&lt;/a&gt; (ex: &lt;code&gt;.isort.cfg&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_FLAKE8_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.flake8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://flake8.pycqa.org/en/latest/user/configuration.html&#34;&gt;flake8 configuration&lt;/a&gt; (ex: &lt;code&gt;.flake8&lt;/code&gt;, &lt;code&gt;tox.ini&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_ISORT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.isort.cfg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://pycqa.github.io/isort/docs/configuration/config_files.html&#34;&gt;isort configuration&lt;/a&gt; (ex: &lt;code&gt;.isort.cfg&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_MYPY_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.mypy.ini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/config_file.html&#34;&gt;mypy configuration&lt;/a&gt; (ex: &lt;code&gt;.mypi.ini&lt;/code&gt;, &lt;code&gt;setup.config&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_PYLINT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.python-lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://pylint.pycqa.org/en/latest/user_guide/run.html?highlight=rcfile#command-line-options&#34;&gt;pylint configuration&lt;/a&gt; (ex: &lt;code&gt;.python-lint&lt;/code&gt;, &lt;code&gt;.pylintrc&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;RUBY_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ruby-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.rubocop.org/rubocop/configuration.html&#34;&gt;rubocop configuration&lt;/a&gt; (ex: &lt;code&gt;.ruby-lint.yml&lt;/code&gt;, &lt;code&gt;.rubocop.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SCALAFMT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.scalafmt.conf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://scalameta.org/scalafmt/docs/configuration.html&#34;&gt;scalafmt configuration&lt;/a&gt; (ex: &lt;code&gt;.scalafmt.conf&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SNAKEMAKE_SNAKEFMT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.snakefmt.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/snakemake/snakefmt#configuration&#34;&gt;Snakemake configuration&lt;/a&gt; (ex: &lt;code&gt;pyproject.toml&lt;/code&gt;, &lt;code&gt;.snakefmt.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSL_CERT_SECRET&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL cert to add to the &lt;strong&gt;Super-Linter&lt;/strong&gt; trust store. This is needed for users on &lt;code&gt;self-hosted&lt;/code&gt; runners or need to inject the cert for security standards (ex. ${{ secrets.SSL_CERT }})&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_KEY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSH key that has access to your private repositories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_SETUP_GITHUB&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, adds the &lt;code&gt;github.com&lt;/code&gt; SSH key to &lt;code&gt;known_hosts&lt;/code&gt;. This is ignored if &lt;code&gt;SSH_KEY&lt;/code&gt; is provided - i.e. the &lt;code&gt;github.com&lt;/code&gt; SSH key is always added if &lt;code&gt;SSH_KEY&lt;/code&gt; is provided&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_INSECURE_NO_VERIFY_GITHUB_KEY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;INSECURE -&lt;/strong&gt; If set to &lt;code&gt;true&lt;/code&gt;, does not verify the fingerprint of the github.com SSH key before adding this. This is not recommended!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQL_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.sql-config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://sql-lint.readthedocs.io/en/latest/files/configuration.html&#34;&gt;SQL-Lint configuration&lt;/a&gt; (ex: &lt;code&gt;sql-config.json&lt;/code&gt; , &lt;code&gt;.config.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQLFLUFF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/.sqlfluff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/configuration.html&#34;&gt;SQLFLUFF configuration&lt;/a&gt; (ex: &lt;code&gt;/.sqlfluff&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPPRESS_FILE_TYPE_WARN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will hide warning messages about files without their proper extensions. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPPRESS_POSSUM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will hide the ASCII possum at top of log output. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TERRAFORM_TERRASCAN_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/accurics/terrascan&#34;&gt;terrascan configuration&lt;/a&gt; (ex: &lt;code&gt;terrascan.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TERRAFORM_TFLINT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.tflint.hcl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;tfLint configuration&lt;/a&gt; (ex: &lt;code&gt;.tflint.hcl&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_DEFAULT_STYLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ts-standard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the default style of TypeScript. Available options: &lt;strong&gt;ts-standard&lt;/strong&gt;/&lt;strong&gt;prettier&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_ES_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.eslintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring#configuration-file-formats&#34;&gt;ESLint configuration&lt;/a&gt; (ex: &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_STANDARD_TSCONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&#34;&gt;TypeScript configuration&lt;/a&gt; in &lt;a href=&#34;https://github.com/standard/ts-standard&#34;&gt;ts-standard&lt;/a&gt; (ex: &lt;code&gt;tsconfig.json&lt;/code&gt;, &lt;code&gt;tsconfig.eslint.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;USE_FIND_ALGORITHM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;By default, we use &lt;code&gt;git diff&lt;/code&gt; to find all files in the workspace and what has been updated, this would enable the Linux &lt;code&gt;find&lt;/code&gt; method instead to find all files to lint&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ALL_CODEBASE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Will parse the entire repository and find all files to validate across all types. &lt;strong&gt;NOTE:&lt;/strong&gt; When set to &lt;code&gt;false&lt;/code&gt;, only &lt;strong&gt;new&lt;/strong&gt; or &lt;strong&gt;edited&lt;/strong&gt; files will be parsed for validation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSCPD_ALL_CODEBASE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will lint the whole codebase with JSCPD. If set to &lt;code&gt;false&lt;/code&gt;, JSCPD will only lint files one by one.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ANSIBLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Ansible language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ARM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the ARM language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_BASH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Bash language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_BASH_EXEC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Bash language to validate if file is stored as executable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CPP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C++ language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLANG_FORMAT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C++/C language with clang-format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLOJURE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Clojure language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLOUDFORMATION&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the AWS Cloud Formation language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_COFFEESCRIPT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Coffeescript language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CSHARP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C# language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CSS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the CSS language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_DART&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Dart language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_DOCKERFILE_HADOLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Docker language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_EDITORCONFIG&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process with the EditorConfig.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ENV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the ENV language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GHERKIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Gherkin language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GITHUB_ACTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the GitHub Actions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GITLEAKS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the secrets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GO&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Golang language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GOOGLE_JAVA_FORMAT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Java language. (Utilizing: google-java-format)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GROOVY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_HTML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the HTML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Java language. (Utilizing: checkstyle)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVASCRIPT_ES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JavaScript language. (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVASCRIPT_STANDARD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JavaScript language. (Utilizing: standard)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSCPD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the JSCPD.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JSON language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for jsx files (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KOTLIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Kotlin language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KOTLIN_ANDROID&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Kotlin language. (Utilizing: &lt;code&gt;ktlint --android&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KUBERNETES_KUBEVAL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Kubernetes descriptors with Kubeval&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_LATEX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the LaTeX language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_LUA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_MARKDOWN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Markdown language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_NATURAL_LANGUAGE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the natural language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_OPENAPI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the OpenAPI language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PERL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Perl language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter) (keep for backward compatibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_BUILTIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PHPCS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP CodeSniffer)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PHPSTAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHPStan)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PSALM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PSalm)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_POWERSHELL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Powershell language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PROTOBUF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Protobuf language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: pylint) (keep for backward compatibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_BLACK&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_FLAKE8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: flake8)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_ISORT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: isort)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_MYPY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: mypy)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_PYLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: pylint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_R&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the R language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RAKU&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Raku language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUBY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Ruby language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2015&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Rust language. (edition: 2015)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2018&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Rust language. (edition: 2018)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2021&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Rust language. (edition: 2021)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_CLIPPY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the clippy linting process of Rust language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SCALAFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Scala language. (Utilizing: scalafmt --test)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SHELL_SHFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Shell scripts. (Utilizing: shfmt)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SNAKEMAKE_LINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakemake --lint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SNAKEMAKE_SNAKEFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakefmt)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_STATES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for AWS States Language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SQL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the SQL language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SQLFLUFF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the SQL language. (Utilizing: sqlfuff)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TEKTON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Tekton language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_TERRASCAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Terraform language for security related issues.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_TFLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Terraform language. (Utilizing tflint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAGRUNT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for Terragrunt files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for tsx files (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TYPESCRIPT_ES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the TypeScript language. (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TYPESCRIPT_STANDARD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ts-standard)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_XML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the XML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_YAML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the YAML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.yaml-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://yamllint.readthedocs.io/en/stable/configuration.html&#34;&gt;Yamllint configuration&lt;/a&gt; (ex: &lt;code&gt;.yaml-lint.yml&lt;/code&gt;, &lt;code&gt;.yamllint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML_ERROR_ON_WARNING&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the error on warning for Yamllint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Template rules files&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;strong&gt;GitHub&lt;/strong&gt; &lt;strong&gt;Super-Linter&lt;/strong&gt; &lt;em&gt;with&lt;/em&gt; or &lt;em&gt;without&lt;/em&gt; your own personal rules sets. This allows for greater flexibility for each individual codebase. The Template rules all try to follow the standards we believe should be enabled at the basic level.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy &lt;strong&gt;any&lt;/strong&gt; or &lt;strong&gt;all&lt;/strong&gt; template rules files from &lt;code&gt;TEMPLATES/&lt;/code&gt; into the &lt;code&gt;.github/linters/&lt;/code&gt; directory of your repository, and modify them to suit your needs. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The rules files in &lt;a href=&#34;https://github.com/github/super-linter/tree/main/TEMPLATES&#34;&gt;this repository&#39;s &lt;code&gt;TEMPLATE&lt;/code&gt; folder&lt;/a&gt; will be used as defaults should any be omitted.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using your own rules files&lt;/h3&gt; &#xA;&lt;p&gt;If your repository contains your own rules files that live outside of a &lt;code&gt;.github/linters/&lt;/code&gt; directory, you will have to tell Super-Linter where your rules files are located in your repository, and what their filenames are. To learn more, see &lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/docs/using-rules-files.md&#34;&gt;Using your own rules files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Disabling rules&lt;/h3&gt; &#xA;&lt;p&gt;If you need to disable certain &lt;em&gt;rules&lt;/em&gt; and &lt;em&gt;functionality&lt;/em&gt;, you can view &lt;a href=&#34;https://github.com/github/super-linter/raw/main/docs/disabling-linters.md&#34;&gt;Disable Rules&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using your own SSH key&lt;/h3&gt; &#xA;&lt;p&gt;If you need to add your own SSH key to the linter because of private dependencies, you can use the &lt;code&gt;SSH_KEY&lt;/code&gt; environment variable. The value of that environment variable should be an SSH private key that has access to your private repositories.&lt;/p&gt; &#xA;&lt;p&gt;You should add this key as an &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;Encrypted Secret&lt;/a&gt; and access it with the &lt;code&gt;secrets&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;p&gt;Example workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;---&#xA;#################################&#xA;#################################&#xA;## Super Linter GitHub Actions ##&#xA;#################################&#xA;#################################&#xA;name: Lint Code Base&#xA;&#xA;#&#xA;# Documentation:&#xA;# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions&#xA;#&#xA;&#xA;#############################&#xA;# Start the job on all push #&#xA;#############################&#xA;on:&#xA;  push:&#xA;    branches-ignore: [master, main]&#xA;    # Remove the line above to run when pushing to master&#xA;  pull_request:&#xA;    branches: [master, main]&#xA;&#xA;###############&#xA;# Set the Job #&#xA;###############&#xA;jobs:&#xA;  build:&#xA;    # Name the Job&#xA;    name: Lint Code Base&#xA;    # Set the agent to run on&#xA;    runs-on: ubuntu-latest&#xA;&#xA;    ##################&#xA;    # Load all steps #&#xA;    ##################&#xA;    steps:&#xA;      ##########################&#xA;      # Checkout the code base #&#xA;      ##########################&#xA;      - name: Checkout Code&#xA;        uses: actions/checkout@v2&#xA;        with:&#xA;          # Full git history is needed to get a proper list of changed files within `super-linter`&#xA;          fetch-depth: 0&#xA;&#xA;      ################################&#xA;      # Run Linter against code base #&#xA;      ################################&#xA;      - name: Lint Code Base&#xA;        uses: github/super-linter@v4&#xA;        env:&#xA;          VALIDATE_ALL_CODEBASE: false&#xA;          DEFAULT_BRANCH: master&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Filter linted files&lt;/h2&gt; &#xA;&lt;p&gt;If you need to lint only a folder or exclude some files from linting, you can use optional environment parameters &lt;code&gt;FILTER_REGEX_INCLUDE&lt;/code&gt; and &lt;code&gt;FILTER_REGEX_EXCLUDE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lint only src folder: &lt;code&gt;FILTER_REGEX_INCLUDE: .*src/.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not lint files inside test folder: &lt;code&gt;FILTER_REGEX_EXCLUDE: .*test/.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not lint JavaScript files inside test folder: &lt;code&gt;FILTER_REGEX_EXCLUDE: .*test/.*.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- This `README.md` has both markers in the text, so it is considered not generated. --&gt; &#xA;&lt;p&gt;Additionally when &lt;code&gt;IGNORE_GENERATED_FILES=true&lt;/code&gt;, super-linter ignores any file with &lt;code&gt;@generated&lt;/code&gt; marker in it unless the file also has &lt;code&gt;@not-generated&lt;/code&gt; marker. &lt;code&gt;@generated&lt;/code&gt; marker is &lt;a href=&#34;https://engineering.fb.com/2015/08/20/open-source/writing-code-that-writes-code-with-hack-codegen/&#34;&gt;used by Facebook&lt;/a&gt; and some other projects to mark generated files. For example, this file is considered generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh&#xA;echo &#34;@generated&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And this file is considered not generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh&#xA;echo &#34;@generated&#34; # @not-generated&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Hub&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Docker&lt;/strong&gt; container that is built from this repository is located at &lt;a href=&#34;https://hub.docker.com/r/github/super-linter&#34;&gt;github/super-linter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run Super-Linter outside GitHub Actions&lt;/h2&gt; &#xA;&lt;h3&gt;Local (troubleshooting/debugging/enhancements)&lt;/h3&gt; &#xA;&lt;p&gt;If you find that you need to run super-linter locally, you can follow the documentation at &lt;a href=&#34;https://github.com/github/super-linter/raw/main/docs/run-linter-locally.md&#34;&gt;Running super-linter locally&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-it-works&#34;&gt;note&lt;/a&gt; in &lt;strong&gt;How it Works&lt;/strong&gt; to understand more about the &lt;strong&gt;Super-Linter&lt;/strong&gt; linting locally versus via continuous integration.&lt;/p&gt; &#xA;&lt;h3&gt;Azure&lt;/h3&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://blog.tyang.org/2020/06/27/use-github-super-linter-in-azure-pipelines/&#34;&gt;article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GitLab&lt;/h3&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://gitlab.com/snippets/1988376&#34;&gt;snippet&lt;/a&gt; and this Guided Exploration: &lt;a href=&#34;https://gitlab.com/guided-explorations/ci-cd-plugin-extensions/ci-cd-plugin-extension-github-action-super-linter&#34;&gt;GitLab CI CD Extension for Super-Linter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;You can checkout this repository using &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;Container Remote Development&lt;/a&gt;, and debug the linter using the &lt;code&gt;Test Linter&lt;/code&gt; task. &lt;img src=&#34;https://user-images.githubusercontent.com/15258962/85165778-2d2ce700-b21b-11ea-803e-3f6709d8e609.gif&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We will also support &lt;a href=&#34;https://github.com/features/codespaces/&#34;&gt;GitHub Codespaces&lt;/a&gt; once it becomes available&lt;/p&gt; &#xA;&lt;h3&gt;SSL Certs&lt;/h3&gt; &#xA;&lt;p&gt;If you need to inject a SSL cert into the trust store, you will need to first copy the cert to &lt;strong&gt;GitHub Secrets&lt;/strong&gt; Once you have copied the plain text certificate into &lt;strong&gt;GitHub Secrets&lt;/strong&gt;, you can use the variable &lt;code&gt;SSL_CERT_SECRET&lt;/code&gt; to point the &lt;strong&gt;Super-Linter&lt;/strong&gt; to the files contents. Once found, it will load the certificate contents to a file, and to the trust store.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Example workflow:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;- name: Lint Code Base&#xA;  uses: github/super-linter@v4&#xA;  env:&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;    SSL_CERT_SECRET: ${{ secrets.ROOT_CA }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cauldron.io/project/2083/stats.svg?sanitize=true&#34; alt=&#34;super-linter stats&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Below are a list of the known limitations for the &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Due to being completely packaged at run time, you will not be able to update dependencies or change versions of the enclosed linters and binaries&lt;/li&gt; &#xA; &lt;li&gt;Additional details from &lt;code&gt;package.json&lt;/code&gt; are not read by the &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Downloading additional codebases as dependencies from private repositories will fail due to lack of permissions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to help contribute to this &lt;strong&gt;GitHub&lt;/strong&gt; Action, please see &lt;a href=&#34;https://github.com/github/super-linter/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/super-linter/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>WSA-Community/WSAGAScript</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/WSA-Community/WSAGAScript</id>
    <link href="https://github.com/WSA-Community/WSAGAScript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scripts to install Google Apps into a WSA image. Plus optional root&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/WSA-Community/WSAGAScript&#34;&gt;WSA GApps Script&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#required-warnings&#34;&gt;Required Warnings&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#youtube-tutorial&#34;&gt;YouTube Tutorial&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#installation-procedure&#34;&gt;Installation procedure&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#uninstallation-procedure&#34;&gt;Uninstallation procedure&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#gaining-root-access&#34;&gt;Gaining Root Access&lt;/a&gt; • &lt;a href=&#34;https://t.me/WSA_Community&#34;&gt;Telegram Group&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Required Warnings&lt;/h1&gt; &#xA;&lt;h2&gt;This project is Work-In-Progress&lt;/h2&gt; &#xA;&lt;p&gt;This project is being updated without schedule (though frequently). This README might not be completely clear right now, it will be fixed ASAP.&lt;/p&gt; &#xA;&lt;p&gt;As for potential questions - please open Discussions instead of Issues.&lt;br&gt; Issues are needed in cases if you have an &lt;strong&gt;actual&lt;/strong&gt; issue that &lt;strong&gt;prevents&lt;/strong&gt; you from &lt;strong&gt;using&lt;/strong&gt; this project.&lt;/p&gt; &#xA;&lt;h2&gt;Legal Warnings&lt;/h2&gt; &#xA;&lt;p&gt;By using the tools (scripts, but not limited to) provided by this project, you agree with the terms of &lt;a href=&#34;https://github.com/WSA-Community/WSAGAScript/raw/main/LICENSE&#34;&gt;Unlicense License&lt;/a&gt;, which states that &#34;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;To end user this serves as a warning, though we currently don&#39;t have any explicit confirmations - such way of installing Google Services and Google Play Store may potentially be in a legal gray area.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright notices&lt;/h2&gt; &#xA;&lt;p&gt;Any product or trademark referenced in this document (or project as whole) belongs to their respective owners. No copyright infringement is intended.&lt;/p&gt; &#xA;&lt;h1&gt;YouTube Tutorial&lt;/h1&gt; &#xA;&lt;p&gt;As a temporary measure and additional information (especially if README remains unclear, &lt;a href=&#34;https://github.com/ADeltaX&#34;&gt;@ADeltaX&lt;/a&gt; provides a video-tutorial hosted on YouTube&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=rIt00xDp0tM&#34; title=&#34;How to install Google Apps (Play Store) on WSA (Windows Subsystem Android)&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/rIt00xDp0tM/0.jpg&#34; alt=&#34;How to install Google Apps (Play Store) on WSA (Windows Subsystem Android)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Click on the image to see the video&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation procedure&lt;/h1&gt; &#xA;&lt;h2&gt;Install Windows Subsystem for Linux (Version 2)&lt;/h2&gt; &#xA;&lt;h3&gt;Q &amp;amp; A for WSL Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you have never used WSL, please do check the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must be running Windows 10 version 2004 and higher (Build 19041 and higher) or Windows 11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Fastest way to check your build version is to run &lt;code&gt;winver&lt;/code&gt; command in Windows Search or via &#34;Run...&#34; (Right-click the Start button to access &#34;Run...&#34;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why do I need that &#34;WSL&#34;?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Because of the way Android as an operating system is built - specific tools to do the modifications that we are doing are only available on Linux-based OSes. The fastest way to get access to these tools is via WSL.&lt;/p&gt; &#xA;&lt;h3&gt;How to install WSL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Windows PowerShell as an Administrator&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;wsl --install&lt;/code&gt;: this will install Ubuntu 20.04 LTS in WSL (Version 2) and all necessary components required to run as it is default (this is recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your PC may restart several times when downloading and installing required components. After that - follow installation wizard instructions to proceed. If you have any questions, official documentation from Microsoft for WSL will help you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check with &lt;code&gt;wsl --list --verbose&lt;/code&gt; to be sure that you have a Linux Distro installed with WSL2 version. If for some reason you have receieved WSL1 kernel (or you have trouble running this command in general) - follow instructions in the section below to perform conversion.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;Microsoft Docs: Installing WSL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/setup/environment&#34;&gt;Microsoft Docs: Set up and best practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to convert WSL1 to WSL2 (and manual installation)&lt;/h3&gt; &#xA;&lt;p&gt;If you have trouble installing WSL2 with &lt;code&gt;wsl --install&lt;/code&gt; in general - follow this instruction from Microsoft.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-manual&#34;&gt;Microsoft Docs: Manual installation steps for older versions of WSL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have already used WSL, have trouble installing with &lt;code&gt;wsl --install&lt;/code&gt; or for some reason have received a WSL1 version installation, this section is for you.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download WSL2 kernel for manual installation. Use the Microsoft Docs link above (Manual Installation) and check Step 4 to receive the kernel package.&lt;/li&gt; &#xA; &lt;li&gt;Open Windows PowerShell as Administrator and run: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsl --shutdown&lt;/code&gt; to stop all WSL related processes (if any are running).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the kernel package from the step above.&lt;/li&gt; &#xA; &lt;li&gt;Return to Windows PowerShell and run: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsl --list --verbose&lt;/code&gt; to get your installed distribution name. In case of Ubuntu, it most likely will look like &lt;code&gt;Ubuntu-20.04&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsl --set-version &amp;lt;distribution name&amp;gt; 2&lt;/code&gt;, replace &#xA;    &lt;distribution name&gt;&#xA;      with the one that you have.&#xA;    &lt;/distribution&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Optional: if you would like to automatically install only WSL2 version builds in future. &lt;code&gt;wsl --set-default-version 2&lt;/code&gt;. To be sure about the difference, check &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/compare-versions&#34;&gt;Microsoft Docs: WSL - Compare versions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install unzip, lzip&lt;/h2&gt; &#xA;&lt;p&gt;For now, we are assuming that you have went with default installation (Ubuntu), terminal commands will be provided for Ubuntu. Commands provided for the most part will work for other Linux Distributions but there may be some that use other package managers. Check how to correctly install applications for your chosen distribution on the internet.&lt;/p&gt; &#xA;&lt;p&gt;Run following in the &lt;strong&gt;WSL Terminal&lt;/strong&gt; (If you are unsure what is WSL Terminal, refer to the video, Microsoft Docs, or search Ubuntu in your start menu to be sure):&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention!&lt;/strong&gt; For new users who have never used Linux Terminals - when you are being asked for your password (which you&#39;ve set up when installed WSL) - it will &lt;strong&gt;NOT&lt;/strong&gt; be displayed in the terminal as part of security measures. You should enter it blindly and then press enter. If password was entered incorrectly system will give you two more attempts, after which you will need to run the command again and try entering password again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install unzip lzip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have checked availability of updates and requested installation of two packages which are required for execution of scripts provided by this project. They may be already present at your installation, but it is better to check anyway.&lt;/p&gt; &#xA;&lt;h2&gt;Prepare folder structure&lt;/h2&gt; &#xA;&lt;p&gt;For the sake of simplicity, create a folder in the root of C Drive, so you will have &lt;code&gt;C:\WSA\&lt;/code&gt;. You may use other location if you would like, be sure to adjust commands below for new location.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention!&lt;/strong&gt; The folder where you will place the files which we will be downloading is going to become an installation folder. &lt;strong&gt;DO NOT&lt;/strong&gt; delete that folder!&lt;br&gt; &lt;strong&gt;Attention!&lt;/strong&gt; At the time of last update for this README, attempt to run scripts if they are located in path that contains spaces (like &#34;Zulu Storage&#34; in &lt;code&gt;D:\Zulu Storage\WSA&lt;/code&gt;) will result in an error. Be sure to use paths with no spaces as long as fix have not been implemented.&lt;/p&gt; &#xA;&lt;p&gt;Hint: You can also open any folder (even those that are located within Linux WSL Filesystem, by typing &lt;code&gt;explorer.exe .&lt;/code&gt; (Yes, with the dot) in the WSL Terminal, to move files around.&lt;/p&gt; &#xA;&lt;h2&gt;Download Windows Subsystem for Android™️ Installation Package&lt;/h2&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;As we need to modify installation files, we cannot download WSA from the Microsoft Store. To download it directly we will use this &lt;a href=&#34;https://store.rg-adguard.net/&#34;&gt;service&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ProductID: 9P3395VX91NR&lt;/li&gt; &#xA; &lt;li&gt;Ring: Fast&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Click the checkmark, and locate file which has size of approx. ~1.3GB (usually at the bottom of the page) and has &lt;code&gt;.msixbundle&lt;/code&gt; extension.&lt;/p&gt; &#xA;&lt;p&gt;Click the filename to begin downloading (or copy the download link). You may be warned by your web-browser that &#34;The file cannot be downloaded securely&#34;. Disregard the warning and force the download (use buttons like &#34;Keep anyway&#34; or similar, depending on your web-browser)&lt;/p&gt; &#xA;&lt;p&gt;Save the file at our prepared directory &lt;code&gt;C:\WSA\&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extract&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download 7zip or a similar archival program and use it to extract downloaded file. Do not mind that this file does not bear any archival extensions (like .zip).&lt;/li&gt; &#xA; &lt;li&gt;After extraction open &lt;code&gt;C:\WSA\MicrosoftCorporationII.WindowsSubsystemForAndroid_versionnumber_neutral___identifier\&lt;/code&gt;. This folder will contain a lot of &lt;code&gt;.msix&lt;/code&gt; files, use &#34;Sort by size&#34; to locate two biggest files.&lt;/li&gt; &#xA; &lt;li&gt;Extract the one that is valid for your architecture, like this one &lt;code&gt;WsaPackage_1.8.32822.0_x64_Release-Nightly.msix&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open the extracted folder&lt;/li&gt; &#xA; &lt;li&gt;Locate and delete files &lt;code&gt;AppxBlockMap.xml&lt;/code&gt;, &lt;code&gt;AppxSignature.p7x&lt;/code&gt; and &lt;code&gt;\[Content_Types\].xml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Locate and delete &lt;code&gt;AppxMetadata&lt;/code&gt; folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do not close this folder - we will return here to collect *.img files.&lt;/p&gt; &#xA;&lt;h2&gt;Download &#34;GApps&#34; via OpenGApps Project&lt;/h2&gt; &#xA;&lt;p&gt;To install Play Store, we need to get it from somewhere. Use &lt;a href=&#34;https://opengapps.org/&#34;&gt;OpenGApps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Platform: x86_64 if you are running Windows on a traditional laptop/PC, otherwise choose ARM64&lt;/li&gt; &#xA; &lt;li&gt;Android: 11.0&lt;/li&gt; &#xA; &lt;li&gt;Variant: Pico (at the time of writing this README, only minimal functionality with Pico variant have been confirmed working).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the time being save the .zip file at &lt;code&gt;C:\WSA\gapps-zip-file-name.zip&lt;/code&gt;. Do &lt;strong&gt;not&lt;/strong&gt; extract it.&lt;/p&gt; &#xA;&lt;h2&gt;Clone this repository and populate the directories&lt;/h2&gt; &#xA;&lt;p&gt;As we have used &lt;code&gt;C:\WSA&lt;/code&gt;, you will be able to use Windows Explorer to move files around.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Reminder: commands provided are for Ubuntu&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention!&lt;/strong&gt; To be sure that you can access your Windows filesystem from inside of WSL, you can run &lt;code&gt;cd FolderName&lt;/code&gt; to change to another directory and &lt;code&gt;ls&lt;/code&gt; to list what files and folders you have there. Typically, Windows Filesystem is available by &#34;/mnt/$DriveLetter/&#34;, so &lt;code&gt;/mnt/c/Users&lt;/code&gt; will be your Windows &lt;code&gt;C:\Users&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /mnt/c/WSA&#xA;git clone https://github.com/WSA-Community/WSAGAScript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for the command to finish running.&lt;/p&gt; &#xA;&lt;p&gt;At the &lt;strong&gt;Extract&lt;/strong&gt; step (in Download Windows Subsystem for Android™️ Installation Package) of this Guide we have got a folder that contains four *.img files which are product, system, system_ext and vendor. Move those files into &lt;code&gt;C:\WSA\WSAGAScript\#IMAGES&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also have &lt;code&gt;C:\WSA\gapps-zip-file-name.zip&lt;/code&gt;. Copy this .zip file into &lt;code&gt;C:\WSA\WSAGAScript\#GAPPS&lt;/code&gt;. Do not &lt;strong&gt;extract&lt;/strong&gt; it, just move the file.&lt;/p&gt; &#xA;&lt;h2&gt;Final preparations&lt;/h2&gt; &#xA;&lt;h3&gt;Change architecture&lt;/h3&gt; &#xA;&lt;p&gt;If you are using this project on a device with ARM architecture (e.g., Qualcomm Snapdragon), please edit &lt;code&gt;VARIABLES.sh&lt;/code&gt; and set the correct architecture. Hint is in the file.&lt;/p&gt; &#xA;&lt;h3&gt;Set executable permissions for the scripts&lt;/h3&gt; &#xA;&lt;p&gt;You should still be in the same directory within the WSL Terminal, if not use &lt;code&gt;cd /mnt/c/WSA/WSAGAScript&lt;/code&gt; to get back. Set executable permissions for the scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x *.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that your scripts are executable by running &lt;code&gt;ls -l&lt;/code&gt; and checking that you have &lt;code&gt;-rwxrwxrwx&lt;/code&gt; at the start of lines that contain files: &lt;code&gt;VARIABLES.sh&lt;/code&gt;, &lt;code&gt;apply.sh&lt;/code&gt;, &lt;code&gt;extend_and_mount_images.sh&lt;/code&gt;, &lt;code&gt;extract_gapps_pico.sh&lt;/code&gt;, &lt;code&gt;unmount_images.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running the scripts&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you&#39;re in the same directory as in the step before, the run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./extract_gapps_pico.sh&#xA;sudo ./extend_and_mount_images.sh&#xA;sudo ./apply.sh&#xA;sudo ./unmount_images.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copy the edited images&lt;/h2&gt; &#xA;&lt;p&gt;After successful execution, you can now copy edited images from &lt;code&gt;C:\WSA\WSAGAScript\#IMAGES&lt;/code&gt; back to &lt;code&gt;C:\WSA\MicrosoftCorporationII.WindowsSubsystemForAndroid_1.8.32822.0_neutral___8wekyb3d8bbwe\WsaPackage_1.8.32822.0_x64_Release-Nightly&lt;/code&gt; (example, the folder from where you have taken the images).&lt;/p&gt; &#xA;&lt;h2&gt;Registering the edited Windows Subsystem for Android™️ Installation Package&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Windows Search to find &#34;Developer Settings&#34;, when PC Settings app opens, enable &#34;Developer Mode&#34; on that page.&lt;/li&gt; &#xA; &lt;li&gt;Uninstall any other installed versions of WSA (if you had any, uninstall exactly the main WSA app, all Android apps that have been added to Start Menu will be removed automatically)&lt;/li&gt; &#xA; &lt;li&gt;Open Windows PowerShell as Administrator and run &lt;code&gt;Add-AppxPackage -Register path-to-extracted-msix\AppxManifest.xml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Where &lt;code&gt;path-to-extracted-msix&lt;/code&gt;, use path from &#34;Copy the edited images&#34; section (right above) as example.&lt;/p&gt; &#xA;&lt;p&gt;WSA will install with GApps, &lt;strong&gt;make sure to sign in to Play Store and install &#34;Android System WebView&#34;&lt;/strong&gt; or most apps will crash without that component.&lt;/p&gt; &#xA;&lt;h1&gt;Uninstallation procedure&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Locate Windows Subsystem for Android™️ in your Start Menu, right-click, uninstall. This will uninstall Android and all Android Apps will vanish from Start as they are just shortcuts wired in from the WSA. You don&#39;t need to uninstall all Android Apps one-by-one beforehand.&lt;/li&gt; &#xA; &lt;li&gt;Locate the directory where you have placed the files (in the example of this README it would be &lt;code&gt;C:\WSA&lt;/code&gt;) - remove it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Done.&lt;/p&gt; &#xA;&lt;h1&gt;Gaining Root Access&lt;/h1&gt; &#xA;&lt;p&gt;You can get root access by replacing the kernel. (This step is no longer required to sign in GApps.)&lt;/p&gt; &#xA;&lt;h2&gt;(ADB SHELL ROOT WITH su)&lt;/h2&gt; &#xA;&lt;p&gt;Copy the kernel file from this repo (in &lt;code&gt;misc&lt;/code&gt; folder) and replace the kernel file inside the &lt;code&gt;Tools&lt;/code&gt; folder of your extracted msix (make sure WSA is not running, use Stop button inside WSA Settings, and close settings).&lt;/p&gt; &#xA;&lt;p&gt;Kernel files inside &lt;code&gt;misc&lt;/code&gt; are named for their respective architectures, do not forget to rename the file you took to &lt;code&gt;kernel&lt;/code&gt; before placing it back into &lt;code&gt;Tools&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This will allow you to use &lt;code&gt;su&lt;/code&gt; inside the &lt;code&gt;adb shell&lt;/code&gt;. Enter into the &lt;code&gt;adb shell&lt;/code&gt; and run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;su&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You are now root.&lt;/p&gt; &#xA;&lt;h2&gt;Kernel source&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WSA-Community/WSA-Linux-Kernel&#34;&gt;WSA-Community/WSA-Linux-Kernel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Currently known issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WSA-Community/WSAGAScript/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mathiasbynens/dotfiles</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/mathiasbynens/dotfiles</id>
    <link href="https://github.com/mathiasbynens/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔧 .files, including ~/.macos — sensible hacker defaults for macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mathias’s dotfiles&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/EkEtphC.png&#34; alt=&#34;Screenshot of my shell prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If you want to give these dotfiles a try, you should first fork this repository, review the code, and remove things you don’t want or need. Don’t blindly use my settings unless you know what that entails. Use at your own risk!&lt;/p&gt; &#xA;&lt;h3&gt;Using Git and the bootstrap script&lt;/h3&gt; &#xA;&lt;p&gt;You can clone the repository wherever you want. (I like to keep it in &lt;code&gt;~/Projects/dotfiles&lt;/code&gt;, with &lt;code&gt;~/dotfiles&lt;/code&gt; as a symlink.) The bootstrapper script will pull in the latest version and copy the files to your home folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mathiasbynens/dotfiles.git &amp;amp;&amp;amp; cd dotfiles &amp;amp;&amp;amp; source bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update, &lt;code&gt;cd&lt;/code&gt; into your local &lt;code&gt;dotfiles&lt;/code&gt; repository and then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, to update while avoiding the confirmation prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set -- -f; source bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Git-free install&lt;/h3&gt; &#xA;&lt;p&gt;To install these dotfiles without Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd; curl -#L https://github.com/mathiasbynens/dotfiles/tarball/main | tar -xzv --strip-components 1 --exclude={README.md,bootstrap.sh,.osx,LICENSE-MIT.txt}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update later on, just run that command again.&lt;/p&gt; &#xA;&lt;h3&gt;Specify the &lt;code&gt;$PATH&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If &lt;code&gt;~/.path&lt;/code&gt; exists, it will be sourced along with the other files, before any feature testing (such as &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/raw/aff769fd75225d8f2e481185a71d5e05b76002dc/.aliases#L21-L26&#34;&gt;detecting which version of &lt;code&gt;ls&lt;/code&gt; is being used&lt;/a&gt;) takes place.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example &lt;code&gt;~/.path&lt;/code&gt; file that adds &lt;code&gt;/usr/local/bin&lt;/code&gt; to the &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=&#34;/usr/local/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add custom commands without creating a new fork&lt;/h3&gt; &#xA;&lt;p&gt;If &lt;code&gt;~/.extra&lt;/code&gt; exists, it will be sourced along with the other files. You can use this to add a few custom commands without the need to fork this entire repository, or to add commands you don’t want to commit to a public repository.&lt;/p&gt; &#xA;&lt;p&gt;My &lt;code&gt;~/.extra&lt;/code&gt; looks something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Git credentials&#xA;# Not in the repository, to prevent people from accidentally committing under my name&#xA;GIT_AUTHOR_NAME=&#34;Mathias Bynens&#34;&#xA;GIT_COMMITTER_NAME=&#34;$GIT_AUTHOR_NAME&#34;&#xA;git config --global user.name &#34;$GIT_AUTHOR_NAME&#34;&#xA;GIT_AUTHOR_EMAIL=&#34;mathias@mailinator.com&#34;&#xA;GIT_COMMITTER_EMAIL=&#34;$GIT_AUTHOR_EMAIL&#34;&#xA;git config --global user.email &#34;$GIT_AUTHOR_EMAIL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could also use &lt;code&gt;~/.extra&lt;/code&gt; to override settings, functions and aliases from my dotfiles repository. It’s probably better to &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/fork&#34;&gt;fork this repository&lt;/a&gt; instead, though.&lt;/p&gt; &#xA;&lt;h3&gt;Sensible macOS defaults&lt;/h3&gt; &#xA;&lt;p&gt;When setting up a new Mac, you may want to set some sensible macOS defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./.macos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Homebrew formulae&lt;/h3&gt; &#xA;&lt;p&gt;When setting up a new Mac, you may want to install some common &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; formulae (after installing Homebrew, of course):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./brew.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some of the functionality of these dotfiles depends on formulae installed by &lt;code&gt;brew.sh&lt;/code&gt;. If you don’t plan to run &lt;code&gt;brew.sh&lt;/code&gt;, you should look carefully through the script and manually install any particularly important ones. A good example is Bash/Git completion: the dotfiles use a special version from Homebrew.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Suggestions/improvements &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/issues&#34;&gt;welcome&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://twitter.com/mathias&#34; title=&#34;Follow @mathias on Twitter&#34;&gt;&lt;img src=&#34;http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70&#34; alt=&#34;twitter/mathias&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mathiasbynens.be/&#34;&gt;Mathias Bynens&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Thanks to…&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@ptb and &lt;a href=&#34;https://github.com/ptb/mac-setup&#34;&gt;his &lt;em&gt;macOS Setup&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://benalman.com/&#34;&gt;Ben Alman&lt;/a&gt; and his &lt;a href=&#34;https://github.com/cowboy/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alrra&#34;&gt;Cătălin Mariș&lt;/a&gt; and his &lt;a href=&#34;https://github.com/alrra/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://butt.zone/&#34;&gt;Gianni Chiappetta&lt;/a&gt; for sharing his &lt;a href=&#34;https://github.com/gf3/dotfiles&#34;&gt;amazing collection of dotfiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jan.moesen.nu/&#34;&gt;Jan Moesen&lt;/a&gt; and his &lt;a href=&#34;https://gist.github.com/1156154&#34;&gt;ancient &lt;code&gt;.bash_profile&lt;/code&gt;&lt;/a&gt; + &lt;a href=&#34;https://github.com/janmoesen/tilde&#34;&gt;shiny &lt;em&gt;tilde&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lauri ‘Lri’ Ranta for sharing &lt;a href=&#34;https://web.archive.org/web/20161104144204/http://osxnotes.net/defaults.html&#34;&gt;loads of hidden preferences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://matijs.brinkhu.is/&#34;&gt;Matijs Brinkhuis&lt;/a&gt; and his &lt;a href=&#34;https://github.com/matijs/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nicolasgallagher.com/&#34;&gt;Nicolas Gallagher&lt;/a&gt; and his &lt;a href=&#34;https://github.com/necolas/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sindresorhus.com/&#34;&gt;Sindre Sorhus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sanctum.geek.nz/&#34;&gt;Tom Ryder&lt;/a&gt; and his &lt;a href=&#34;https://sanctum.geek.nz/cgit/dotfiles.git/about&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kevinsuttle.com/&#34;&gt;Kevin Suttle&lt;/a&gt; and his &lt;a href=&#34;https://github.com/kevinSuttle/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt; and &lt;a href=&#34;https://github.com/kevinSuttle/macOS-Defaults&#34;&gt;macOS-Defaults project&lt;/a&gt;, which aims to provide better documentation for &lt;a href=&#34;https://mths.be/macos&#34;&gt;&lt;code&gt;~/.macos&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hkdobrev.com/&#34;&gt;Haralan Dobrev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Anyone who &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/contributors&#34;&gt;contributed a patch&lt;/a&gt; or &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/issues&#34;&gt;made a helpful suggestion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pystardust/ytfzf</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/pystardust/ytfzf</id>
    <link href="https://github.com/pystardust/ytfzf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A posix script to find and watch youtube videos from the terminal. (Without API)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/.assets/logo.png&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/pystardust/ytfzf/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/pystardust/ytfzf?color=orange&amp;amp;logo=github&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pystardust/ytfzf/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/pystardust/ytfzf?style=flat-square&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/static/v1?color=%231831ad&amp;amp;message=Euro20179&amp;amp;label=Maintainer&amp;amp;style=flat-square&#34; alt=&#34;Maintainer: Euro20179&#34;&gt; &lt;a href=&#34;https://github.com/pystardust/ytfzf/releases/tag/v1.1.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/pystardust/ytfzf?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/pystardust/ytfzf/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/pystardust/ytfzf?color=green&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/kupWznHjRJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/815609275644117022?color=yellow&amp;amp;logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#ytfzf-chat:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?color=%230eb687&amp;amp;message=chat&amp;amp;logo=matrix&amp;amp;label=matrix&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;i&gt;A POSIX script that helps you find Youtube videos (without API) and opens/downloads them using mpv/youtube-dl&lt;/i&gt; &lt;/p&gt;&#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; This is a little showcase &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/.assets/ytfzf.gif&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Table Of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Dependencies&#34;&gt;&lt;code&gt;Dependencies&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Install&#34;&gt;&lt;code&gt;Install&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Features&#34;&gt;&lt;code&gt;Features&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Examples&#34;&gt;&lt;code&gt;Examples&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Configuration&#34;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Todo&#34;&gt;&lt;code&gt;Todo&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Bugs&#34;&gt;&lt;code&gt;Bugs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Credits&#34;&gt;&lt;code&gt;Credits&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;There are only 2 required dependencies, however the rest require some configuration before you can replace them.&lt;/p&gt; &#xA;&lt;h2&gt;Requried dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/curl/curl&#34;&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mpv-player/mpv&#34;&gt;&lt;code&gt;mpv&lt;/code&gt;&lt;/a&gt; (the default video and audio player)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt; (the default menu selection screen)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Optional dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;&lt;code&gt;yt-dlp&lt;/code&gt;&lt;/a&gt; (for downloading)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tools.suckless.org/dmenu/&#34;&gt;&lt;code&gt;dmenu&lt;/code&gt;&lt;/a&gt; (only if using the -D option)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seebye/ueberzug&#34;&gt;&lt;code&gt;ueberzug&lt;/code&gt;&lt;/a&gt; (if using thumbnails (-t) on x11) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If on wayland, or you do not want &lt;code&gt;ueberzug&lt;/code&gt;, see the alternatives &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Alternative-Thumbnail-Viewers&#34;&gt;below&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;To use an alternative include &lt;code&gt;--thumb-viewer=&amp;lt;alternative&amp;gt;&lt;/code&gt; in the command when running ytfzf&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Alternative Thumbnail Viewers&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Program&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Wayland Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/hpjansson/chafa&#34;&gt;&lt;code&gt;chafa&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/posva/catimg&#34;&gt;&lt;code&gt;catimg&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/tats/w3m&#34;&gt;&lt;code&gt;w3m&lt;/code&gt;&lt;/a&gt; (buggy)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://git.sr.ht/~exec64/imv&#34;&gt;&lt;code&gt;imv&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;&lt;code&gt;kitty&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/artemsen/swayimg&#34;&gt;&lt;code&gt;swayimg&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;only on &lt;code&gt;sway&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;a href=&#34;https://repology.org/metapackage/ytfzf&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/ytfzf.svg?sanitize=true&#34; alt=&#34;Repo status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;strong&gt;if on &lt;code&gt;linux&lt;/code&gt; and installed using make on version &lt;code&gt;2.0&lt;/code&gt; or prior, run &lt;code&gt;sudo make uninstall-old&lt;/code&gt; first&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the dependencies listed &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/#Dependencies&#34;&gt;above&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the following commands&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/pystardust/ytfzf&#xA;cd ytfzf&#xA;sudo make install doc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you wish to not install documentation (highly unrecommended) run &lt;code&gt;sudo make install&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you wish to install addons, run &lt;code&gt;sudo make addons&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;YTFZF_SYSTEM_ADDONS_DIR&lt;/code&gt; will point to &lt;code&gt;/usr/local/share/ytfzf/addons&lt;/code&gt; even if you set &lt;code&gt;PREFIX&lt;/code&gt; to something else&lt;/li&gt; &#xA;   &lt;li&gt;If you use a different prefix, it would be smart to export &lt;code&gt;YTFZF_SYSTEM_ADDONS_DIR&lt;/code&gt; to &lt;code&gt;$PREFIX/share/ytfzf/addons&lt;/code&gt; in a shell startup file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You may also install &lt;code&gt;ytfzf&lt;/code&gt; through your package manager, as listed on the side.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Addons&lt;/h2&gt; &#xA;&lt;p&gt;Addons are extra features that will not be as supported as everything built into &lt;code&gt;ytfzf&lt;/code&gt; itself.&lt;/p&gt; &#xA;&lt;p&gt;Addons are located in &lt;code&gt;addons&lt;/code&gt;, copy any addon to &lt;code&gt;~/.config/ytfzf/{addon-type}/{addon}&lt;/code&gt;, and give it execute permissions.&lt;/p&gt; &#xA;&lt;p&gt;You may also just copy the entire addon folder type, eg: &lt;code&gt;cp -r addons/thumbnail-viewers ~/.config/ytfzf/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;To use a scraper addon run &lt;code&gt;ytfzf -c &amp;lt;scraper&amp;gt; ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use a thumbnail-viewer addon run &lt;code&gt;ytfzf --thumb-viewer=&amp;lt;viewer&amp;gt; ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use a interface addon run &lt;code&gt;ytfzf --interface=&amp;lt;interface&amp;gt; ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use a url-handler addon run &lt;code&gt;ytfzf --url-handler=&amp;lt;handler&amp;gt; ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use a sort-name addon run &lt;code&gt;ytfzf --sort-name=&amp;lt;sort-name&amp;gt; ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use an extension addon run &lt;code&gt;ytfzf --ext=&amp;lt;extension&amp;gt; ...&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subscriptions&lt;/li&gt; &#xA; &lt;li&gt;Thumbnails&lt;/li&gt; &#xA; &lt;li&gt;Watch history&lt;/li&gt; &#xA; &lt;li&gt;Downloading&lt;/li&gt; &#xA; &lt;li&gt;Queueing multiple videos&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Search with thumbnails&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ytfzf -t &amp;lt;search&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Use &lt;code&gt;dmenu&lt;/code&gt; as the menu instead of &lt;code&gt;fzf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ytfzf -D &amp;lt;search&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Print the link of the selected video instead of playing it&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ytfzf -L &amp;lt;search&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Search Odysee instead of youtube&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ytfzf -cO &amp;lt;search&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Everything that is an option can also be configured in &lt;code&gt;~/.config/ytfzf/conf.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition, the video player and other things may be changed here&lt;/p&gt; &#xA;&lt;p&gt;Here is a &lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/docs/conf.sh&#34;&gt;sample configuration&lt;/a&gt; (please dont use it)&lt;/p&gt; &#xA;&lt;p&gt;For more information, see &lt;code&gt;ytfzf(5)&lt;/code&gt; which should be installed, if it&#39;s not see &lt;a href=&#34;https://github.com/pystardust/ytfzf/wiki&#34;&gt;the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Bugs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;dwm with swallow patch: Images don&#39;t render with ueberzug when looped (ie, option &lt;code&gt;-l&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;if thumbnails are not working &lt;code&gt;.Xauthority&lt;/code&gt; might be causing it. Try deleting it and relogging into your computer.&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;User&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Contributions&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Donate&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pystardust&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/pystardust.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Euro20179&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/euro20179.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/euro20179.md#Donate&#34;&gt;donate&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Simonhughxyz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/simonhughxyz.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Jac-Zac&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/jac-zac.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mudskipper875&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/mudskipper875.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Gardockt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/gardockt.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;qoheniac&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pystardust/ytfzf/master/credits/qoheniac.md&#34;&gt;contributions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>ophub/amlogic-s9xxx-armbian</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/ophub/amlogic-s9xxx-armbian</id>
    <link href="https://github.com/ophub/amlogic-s9xxx-armbian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Armbian for Amlogic s9xxx tv box. Support a311d, s922x, s905x3, s905x2, s912, s905d, s905x, s905w, s905, etc. including install to EMMC and update related functions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Armbian for Amlogic TV Boxes&lt;/h1&gt; &#xA;&lt;p&gt;View Chinese description | &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/README.cn.md&#34;&gt;查看中文说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.armbian.com/&#34;&gt;Armbian&lt;/a&gt; system is a lightweight Linux system based on Debian/Ubuntu built specifically for ARM chips. The Armbian system is lean, clean, and 100% compatible and inherits the functions and rich software ecosystem of the Debian/Ubuntu system. It can run safely and stably in TF/SD/USB and the eMMC of the device.&lt;/p&gt; &#xA;&lt;p&gt;Now you can replace the Android TV system of the TV box with the Amlogic chip with the Armbian system, making it a powerful server. This project builds Armbian system for Amlogic s9xxx TV box. including install to EMMC and update related functions. Support Amlogic s9xxx TV Boxes are &lt;em&gt;&lt;strong&gt;&lt;code&gt;a311d, s922x, s905x3, s905x2, s905l3a, s912, s905d, s905x, s905w, s905&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, etc. such as &lt;em&gt;&lt;strong&gt;&lt;code&gt;Belink GT-King, Belink GT-King Pro, UGOOS AM6 Plus, X96-Max+, HK1-Box, H96-Max-X3, Phicomm-N1, Octopus-Planet, Fiberhome HG680P, ZTE B860H&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, etc. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs&#34;&gt;Armbian Documentation&lt;/a&gt; for the usage method.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of the Armbian firmware can be downloaded in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/releases&#34;&gt;Releases&lt;/a&gt;. Welcome to &lt;code&gt;Fork&lt;/code&gt; and personalize it. If it is useful to you, you can click on the &lt;code&gt;Star&lt;/code&gt; in the upper right corner of the warehouse to show your support.&lt;/p&gt; &#xA;&lt;h2&gt;Armbian Firmware instructions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SoC&lt;/th&gt; &#xA;   &lt;th&gt;Device&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;Optional kernel&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Armbian Firmware&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a311d&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/boards---shields/pp_3008145189226460.html&#34;&gt;Khadas-VIM3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_a311d_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s922x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/RAgZmOM41db&#34;&gt;Beelink-GT-King&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008857542462482.html&#34;&gt;Beelink-GT-King-Pro&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/pHGKXuV41db&#34;&gt;Ugoos-AM6-Plus&lt;/a&gt;, &lt;a href=&#34;https://www.tokopedia.com/search?st=product&amp;amp;q=ODROID-N2&#34;&gt;ODROID-N2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s922x_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/uMaH09s41db&#34;&gt;X96-Max+&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/xhWeQgTuwfb&#34;&gt;HK1-Box&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/KuWvwoYuwfb&#34;&gt;H96-Max-X3&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/duoIXZpdGgb&#34;&gt;Ugoos-X3&lt;/a&gt;, &lt;a href=&#34;https://www.aliexpress.com/item/1005003772717802.html&#34;&gt;TX3&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3002885621272175.html&#34;&gt;X96-Air&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/ByBL45jdGgb&#34;&gt;A95XF3-Air&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905x3_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/HcfLaRzjqeb&#34;&gt;X96Max-4G&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/HcfLaRzjqeb&#34;&gt;X96Max-2G&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008133484979616.html&#34;&gt;MECOOL-KM3-4G&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905x2_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s912&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box/pp_759339.html&#34;&gt;TX9-Pro&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_503486.html&#34;&gt;H96-Pro-Plus&lt;/a&gt;, &lt;a href=&#34;http://www.tanix-box.com/project-view/tanix-tx92-android-tv-box-powered-amlogic-s912/&#34;&gt;Tanix-TX92&lt;/a&gt;, &lt;a href=&#34;http://www.vorke.com/project/vorke-z6-2/&#34;&gt;VORKE-Z6-Plus&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3005746210753315.html&#34;&gt;Mecool-M8S-PRO-L&lt;/a&gt;, &lt;a href=&#34;https://www.ebay.com/itm/253466003975&#34;&gt;T95Z-Plus&lt;/a&gt;, Octopus-Planet&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s912_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905d&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_629409.html&#34;&gt;MECOOL-KI-Pro&lt;/a&gt;, Phicomm-N1&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905d_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/HbrIbqQcGgb&#34;&gt;HG680P&lt;/a&gt;, &lt;a href=&#34;https://www.zte.com.cn/global/products/cocloud/201707261551/IP-STB/ZXV10-B860H&#34;&gt;B860H&lt;/a&gt;, &lt;a href=&#34;https://www.tbee.com/product/tbee-box/&#34;&gt;TBee-Box&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_268277.html&#34;&gt;T95&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905x_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905w&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/ro207Hsjqeb&#34;&gt;X96-Mini&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_009748238474.html&#34;&gt;TX3-Mini&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;5.15.y&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905w_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_321409.html&#34;&gt;Beelink-Mini-MX-2G&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_354313.html&#34;&gt;MXQ-Pro+4K&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905l3a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Calmact/e900v22c&#34;&gt;E900V22C/D&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905l3a_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;💡Tip: The current &lt;em&gt;&lt;strong&gt;&lt;code&gt;s905w&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; series of TV Boxes only support the use of the &lt;code&gt;5.15.y&lt;/code&gt; kernel, Other types of TV Boxes can use optional kernel versions. Currently &lt;em&gt;&lt;strong&gt;&lt;code&gt;s905&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; TV Boxes can only be used in &lt;code&gt;TF/SD/USB&lt;/code&gt;, other types of TV Boxes also support writing to &lt;code&gt;EMMC&lt;/code&gt;. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs/amlogic_model_database.md&#34;&gt;instructions&lt;/a&gt; for dtb and u-boot of each device.&lt;/p&gt; &#xA;&lt;h2&gt;Install to EMMC and update instructions&lt;/h2&gt; &#xA;&lt;p&gt;Choose the corresponding firmware according to your box. Then write the IMG file to the USB hard disk through software such as &lt;a href=&#34;https://rufus.ie/&#34;&gt;Rufus&lt;/a&gt; or &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt;. Insert the USB hard disk into the box. Common for all &lt;code&gt;Amlogic s9xxx TV Boxes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Install Armbian to EMMC&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian (default user: root, default password: 1234) → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The mainline u-boot is installed by default, In order to support the use of 5.10 and above kernels. If you choose not to install, specify it in the &lt;code&gt;1&lt;/code&gt; input parameter, e.g. &lt;code&gt;armbian-install no&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Update Armbian Kernel&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Run as root user (sudo -i)&#xA;# If no other parameters are specified, the following update command will update to the latest version of the current kernel of the same series.&#xA;armbian-update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If there is a set of kernel files in the current directory, it will be updated with the kernel in the current directory (The 4 kernel files required for the update are &lt;code&gt;header-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;boot-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;dtb-amlogic-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;modules-xxx.tar.gz&lt;/code&gt;. Other kernel files are not required. If they exist at the same time, it will not affect the update. The system can accurately identify the required kernel files). If there is no kernel file in the current directory, it will query and download the latest kernel of the same series from the server for update. You can also query the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;optional kernel&lt;/a&gt; version and update the specified version: &lt;code&gt;armbian-update 5.10.100&lt;/code&gt;. The optional kernel supported by the device can be freely updated, such as from 5.10.100 kernel to 5.15.25 kernel. When the kernel is updated, By default, download from &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;stable&lt;/a&gt; kernel version branch, if you download other &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, please specify according to the branch folder name in the &lt;code&gt;2&lt;/code&gt; parameter, such as &lt;code&gt;armbian-update 5.7.19 dev&lt;/code&gt; . The mainline u-boot will be installed automatically by default, which has better support for kernels using versions above 5.10. If you choose not to install, please specify it in the &lt;code&gt;3&lt;/code&gt; input parameter, such as &lt;code&gt;armbian-update 5.10.100 stable no &lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Install Docker Service&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing docker, you can choose whether to install the &lt;code&gt;portainer&lt;/code&gt; visual management panel. Users who intend to use the &lt;code&gt;LAN IP&lt;/code&gt; for management can choose (&lt;code&gt;h&lt;/code&gt;) to install the &lt;code&gt;http://ip:9000&lt;/code&gt; version; Users who intend to use the &lt;code&gt;domain name&lt;/code&gt; for remote management can choose (&lt;code&gt;s&lt;/code&gt;) to install the &lt;code&gt;https://domain:9000&lt;/code&gt; domain name certificate version (Please name the domain name &lt;code&gt;SSL&lt;/code&gt; certificate as &lt;code&gt;portainer.crt&lt;/code&gt; and &lt;code&gt;portainer.key&lt;/code&gt; and upload it to the &lt;code&gt;/etc/ssl/&lt;/code&gt; directory); Users who &lt;code&gt;do not need&lt;/code&gt; to install can choose (&lt;code&gt;n&lt;/code&gt;) to end the installation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Modify Armbian Config&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Create swap for Armbian&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you feel that the memory of the current box is not enough when you are using applications with a large memory footprint such as &lt;code&gt;docker&lt;/code&gt;, you can create a &lt;code&gt;swap&lt;/code&gt; virtual memory partition, Change the disk space a certain capacity is virtualized into memory for use. The unit of the input parameter of the following command is &lt;code&gt;GB&lt;/code&gt;, and the default is &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-swap 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Controlling the LED display&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-led&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Debug according to &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs/led_screen_display_control.md&#34;&gt;LED screen display control instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Use Armbian in TF/SD/USB&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To activate the remaining space of TF/SD/USB, please login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-tf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;According to the prompt, enter &lt;code&gt;e&lt;/code&gt; to expand the remaining space to the current system partition and file system, and enter &lt;code&gt;c&lt;/code&gt; to create a new third partition.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Or manually allocate the remaining space&lt;/summary&gt; &#xA; &lt;h4&gt;View &lt;a href=&#34;https://user-images.githubusercontent.com/68696949/137860992-fbd4e2fa-e90c-4bbb-8985-7f5db9f49927.jpg&#34;&gt;Operation screenshot&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# 1. Confirm the name of the TF/SD/USB according to the size of the space. The TF/SD is [ `mmcblk` ], USB is [ `sd` ]&#xA;Command: Enter [ fdisk -l | grep &#34;sd&#34; ]&#xA;&#xA;# 2. Get the starting value of the remaining space, Copy and save, used below  (E.g: 5382144)&#xA;Command: Enter [ fdisk -l | grep &#34;sd&#34; | sed -n &#39;$p&#39; | awk &#39;{print $3}&#39; | xargs -i expr {} + 1 ]&#xA;&#xA;# 3. Start allocating unused space (E.g: sda, mmcblk0 or mmcblk1)&#xA;Command: Enter [ fdisk /dev/sda ] Start allocating the remaining space&#xA;Command: Select [ n ] to create a partition&#xA;Command: Select [ p ] to specify the partition type as primary partition&#xA;Command: Set the partition number to [ 3 ]&#xA;Command: The start value of the partition, enter the value obtained in the second step, E.g: [ 5382144 ]&#xA;Command: End value, press [ Enter ] to use the default value&#xA;Command: If there is a hint: Do you want to remove the signature? [Y]es/[N]o: Enter [ Y ]&#xA;Command: Enter [ t ] to specify the partition type&#xA;Command: Enter Partition number [ 3 ]&#xA;Command: Enter Hex code (type L to list all codes): [ 83 ]&#xA;Command: Enter [ w ] to save&#xA;Command: Enter [ reboot ] to restart&#xA;&#xA;# 4. After restarting, format the new partition&#xA;Command: Enter [ mkfs.ext4 -F -L SHARED /dev/sda3 ] to format the new partition&#xA;&#xA;# 5. Set the mount directory for the new partition&#xA;Command: Enter [ mkdir -p /mnt/share ] to Create mount directory&#xA;Command: Enter [ mount -t ext4 /dev/sda3 /mnt/share ] to Mount the newly created partition to the directory&#xA;&#xA;# 6. Add automatic mount at boot&#xA;Command: Enter [ vi /etc/fstab ]&#xA;# Press [ i ] to enter the input mode, copy the following values to the end of the file&#xA;/dev/sda3 /mnt/share ext4 defaults 0 0&#xA;# Press [ esc ] to exit, Input [ :wq! ] and [ Enter ] to Save, Finish.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Backup/restore the original EMMC system&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supports backup/restore of the box&#39;s &lt;code&gt;EMMC&lt;/code&gt; partition in &lt;code&gt;TF/SD/USB&lt;/code&gt;. It is recommended that you back up the Android TV system that comes with the current box before installing the Armbian system in a brand new box, so that you can use it in the future when restoring the TV system.&lt;/p&gt; &#xA;&lt;p&gt;Please login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-ddbr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;According to the prompt, enter &lt;code&gt;b&lt;/code&gt; to perform system backup, and enter &lt;code&gt;r&lt;/code&gt; to perform system recovery.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Compile the kernel in Armbian&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the usage of compiling the kernel in Armbian, see the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel&#34;&gt;compile-kernel&lt;/a&gt; documentation. please login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-kernel -update&#xA;armbian-kernel -d -k 5.10.100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;More instructions for use&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the use of Armbian, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs&#34;&gt;armbian-docs&lt;/a&gt; for some common problems that may be encountered.&lt;/p&gt; &#xA;&lt;h2&gt;Local build instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository to the local. &lt;code&gt;git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-armbian.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the necessary packages (The script has only been tested on x86_64 Ubuntu-20.04/22.04)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cd amlogic-s9xxx-armbian&#xA;sudo apt-get update -y&#xA;sudo apt-get full-upgrade -y&#xA;# For Ubuntu-22.04&#xA;sudo apt-get install -y $(cat compile-kernel/tools/script/ubuntu2204-build-armbian-depends)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the &lt;code&gt;build/output/images&lt;/code&gt; folder, and upload the Armbian image ( Eg: &lt;code&gt;Armbian_21.11.0-trunk_Odroidn2_current_5.15.25.img&lt;/code&gt; ) to this &lt;code&gt;~/amlogic-s9xxx-armbian/build/output/images&lt;/code&gt; directory. Please keep the release version number (e.g. &lt;code&gt;21.11.0&lt;/code&gt;) and kernel version number (e.g. &lt;code&gt;5.15.25&lt;/code&gt;) in the name of the original Armbian image file, It will be used as the name of the armbian firmware after rebuilding.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter the &lt;code&gt;~/amlogic-s9xxx-armbian&lt;/code&gt; root directory. And run Eg: &lt;code&gt;sudo ./rebuild -d -b s905x3 -k 5.10.100&lt;/code&gt; to build armbian for &lt;code&gt;amlogic s9xxx&lt;/code&gt;. The generated Armbian image is in the &lt;code&gt;build/output/images&lt;/code&gt; directory under the root directory.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Description of localized packaging parameters&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-d&lt;/td&gt; &#xA;   &lt;td&gt;Defaults&lt;/td&gt; &#xA;   &lt;td&gt;Compile all cores and all firmware types.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-b&lt;/td&gt; &#xA;   &lt;td&gt;BuildSoC&lt;/td&gt; &#xA;   &lt;td&gt;Specify the Build firmware type. Write the build firmware name individually, such as &lt;code&gt;-b s905x3&lt;/code&gt; . Multiple firmware use &lt;code&gt;_&lt;/code&gt; connect such as &lt;code&gt;-b s905x3_s905d&lt;/code&gt; . Use &lt;code&gt;all&lt;/code&gt; for all SoC models. You can use these codes: &lt;code&gt;a311d&lt;/code&gt;, &lt;code&gt;s905x3&lt;/code&gt;, &lt;code&gt;s905x2&lt;/code&gt;, &lt;code&gt;s905l3a&lt;/code&gt;, &lt;code&gt;s905x&lt;/code&gt;, &lt;code&gt;s905w&lt;/code&gt;, &lt;code&gt;s905d&lt;/code&gt;, &lt;code&gt;s905d-ki&lt;/code&gt;, &lt;code&gt;s905&lt;/code&gt;, &lt;code&gt;s922x&lt;/code&gt;, &lt;code&gt;s922x-n2&lt;/code&gt;, &lt;code&gt;s912&lt;/code&gt;, &lt;code&gt;s912-m8s&lt;/code&gt; . Note: &lt;code&gt;s922x-reva&lt;/code&gt; is &lt;code&gt;s922x-gtking-pro-rev_a&lt;/code&gt;, &lt;code&gt;s922x-n2&lt;/code&gt; is &lt;code&gt;s922x-odroid-n2&lt;/code&gt;, &lt;code&gt;s912-m8s&lt;/code&gt; is &lt;code&gt;s912-mecool-m8s-pro-l&lt;/code&gt;, &lt;code&gt;s905d-ki&lt;/code&gt; is &lt;code&gt;s912-mecool-ki-pro&lt;/code&gt;, &lt;code&gt;s905x2-km3&lt;/code&gt; is &lt;code&gt;s905x2-mecool-km3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-k&lt;/td&gt; &#xA;   &lt;td&gt;Kernel&lt;/td&gt; &#xA;   &lt;td&gt;Specify the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;kernel version&lt;/a&gt;, Such as &lt;code&gt;-k 5.10.100&lt;/code&gt; . Multiple kernel use &lt;code&gt;_&lt;/code&gt; connection such as &lt;code&gt;-k 5.15.25_5.10.100&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a&lt;/td&gt; &#xA;   &lt;td&gt;AutoKernel&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to automatically adopt the latest version of the kernel of the same series. When it is &lt;code&gt;true&lt;/code&gt;, it will automatically find in the kernel library whether there is an updated version of the kernel specified in &lt;code&gt;-k&lt;/code&gt; such as 5.10.100 version. If there is the latest version of same series, it will automatically Replace with the latest version. When set to &lt;code&gt;false&lt;/code&gt;, the specified version of the kernel will be compiled. Default value: &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v&lt;/td&gt; &#xA;   &lt;td&gt;Version&lt;/td&gt; &#xA;   &lt;td&gt;Specify the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, Such as &lt;code&gt;-v stable&lt;/code&gt;. The specified name must be the same as the branch directory name. The &lt;code&gt;stable&lt;/code&gt; branch version is used by default.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;Specify the size of the ROOTFS partition in MB. The default is 2748, and the specified size must be greater than 2000. Such as &lt;code&gt;-s 2748&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-t&lt;/td&gt; &#xA;   &lt;td&gt;RootfsType&lt;/td&gt; &#xA;   &lt;td&gt;Set the file system type of the ROOTFS partition of the firmware, the default is &lt;code&gt;ext4&lt;/code&gt; type, and the options are &lt;code&gt;ext4&lt;/code&gt; or &lt;code&gt;btrfs&lt;/code&gt; type. Such as &lt;code&gt;-t btrfs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;CustomName&lt;/td&gt; &#xA;   &lt;td&gt;Set the signature part of the firmware name. The default value is empty. You can add signatures such as &lt;code&gt;_server&lt;/code&gt;, &lt;code&gt;_gnome_desktop&lt;/code&gt; or &lt;code&gt;_ophub&lt;/code&gt; as needed. Do not include spaces when setting custom signatures.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d&lt;/code&gt;: Use the default configuration to pack all TV Boxes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3 -k 5.10.100&lt;/code&gt;: recommend. Use the default configuration, specify a kernel and a firmware for compilation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3_s905d -k 5.15.25_5.10.100&lt;/code&gt;: Use the default configuration, specify multiple cores, and multiple firmware for compilation. use &lt;code&gt;_&lt;/code&gt; to connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3 -k 5.10.100 -s 2748&lt;/code&gt;: Use the default configuration, specify a kernel, a firmware, and set the partition size for compilation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3 -v dev -k 5.7.19&lt;/code&gt;: Use the default configuration, specify the model, specify the version branch, and specify the kernel for packaging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3_s905d&lt;/code&gt;: Use the default configuration, specify multiple firmware, use &lt;code&gt;_&lt;/code&gt; to connect. compile all kernels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -k 5.15.25_5.10.100&lt;/code&gt;: Use the default configuration. Specify multiple cores, use &lt;code&gt;_&lt;/code&gt; to connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -k 5.15.25_5.10.100 -a true&lt;/code&gt;: Use the default configuration. Specify multiple cores, use &lt;code&gt;_&lt;/code&gt; to connect. Auto update to the latest kernel of the same series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -t btrfs -s 2748 -k 5.10.100&lt;/code&gt;: Use the default configuration, set the file system to btrfs format and the partition size to 2748M, and only compile the armbian firmware with the kernel version 5.10.100.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use GitHub Actions to build&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Workflows configuration in &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/.github/workflows/build-armbian.yml&#34;&gt;.yml&lt;/a&gt; files. Set the armbian &lt;code&gt;SOC&lt;/code&gt; you want to build in &lt;code&gt;Rebuild Armbian for amlogic s9xxx&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;New compilation: Select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Build armbian&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; on the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/actions&#34;&gt;Actions&lt;/a&gt; page, According to the OS version officially supported by Armbian, In &lt;a href=&#34;https://docs.armbian.com/Developer-Guide_Build-Options/&#34;&gt;RELEASE&lt;/a&gt;, you can choose Ubuntu series: &lt;code&gt;jammy&lt;/code&gt; / &lt;code&gt;focal&lt;/code&gt;, or Debian series: &lt;code&gt;bullseye&lt;/code&gt; / &lt;code&gt;buster&lt;/code&gt;, and in &lt;code&gt;BOARD&lt;/code&gt;, you can choose &lt;code&gt;odroidn2&lt;/code&gt; / &lt;code&gt;lepotato&lt;/code&gt;, etc., Click the &lt;em&gt;&lt;strong&gt;&lt;code&gt;Run workflow&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile again: If there is an &lt;code&gt;Armbian_.*-trunk_.*.img.gz&lt;/code&gt; file in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/releases&#34;&gt;Releases&lt;/a&gt;, you do not need to compile it completely, you can directly use this file to &lt;code&gt;build armbian&lt;/code&gt; of different soc. Select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Use Releases file to build armbian&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; on the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/actions&#34;&gt;Actions&lt;/a&gt; page. Click the &lt;em&gt;&lt;strong&gt;&lt;code&gt;Run workflow&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use other Armbian firmware, such as &lt;a href=&#34;https://armbian.tnahosting.net/dl/odroidn2/archive/&#34;&gt;odroidn2&lt;/a&gt; provided by the official Armbian firmware download site &lt;a href=&#34;https://armbian.tnahosting.net/dl/&#34;&gt;armbian.tnahosting.net&lt;/a&gt;, only by introducing the script of this repository in the process control file &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/.github/workflows/rebuild-armbian.yml&#34;&gt;.yml&lt;/a&gt; for Armbian reconstruction, it can be adapted to the use of Amlogic S9xxx series TV Boxes. In the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/actions&#34;&gt;Actions&lt;/a&gt; page, select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Rebuild armbian&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, and enter the Armbian network download url such as &lt;code&gt;https://dl.armbian.com/*/Armbian_*.img.xz&lt;/code&gt;, or in the process control file &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/.github/workflows/rebuild-armbian.yml&#34;&gt;.yml&lt;/a&gt;, set the load path of the rebuild file through the &lt;code&gt;armbian_path&lt;/code&gt; parameter. code show as below:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Rebuild the Armbian for Amlogic s9xxx&#xA;  uses: ophub/amlogic-s9xxx-armbian@main&#xA;  with:&#xA;    build_target: armbian&#xA;    armbian_path: build/output/images/*.img&#xA;    armbian_soc: s905d_s905x3_s922x_s905x&#xA;    armbian_kernel: 5.15.25_5.10.100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GitHub Actions Input parameter description&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the related settings of GitHUB RELEASES_TOKEN, please refer to: &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/raw/main/router-config/README.md#3-fork-repository-and-set-releases_token&#34;&gt;RELEASES_TOKEN&lt;/a&gt;. The relevant parameters correspond to the &lt;code&gt;local packaging command&lt;/code&gt;, please refer to the above description.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Defaults&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_path&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;Set the path of the original Armbian file, support the file path in the current workflow such as &lt;code&gt;build/output/images/*.img&lt;/code&gt;, and also support the use of the network download address such as: &lt;code&gt;https://dl.armbian.com/*/Armbian_*.img.xz&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_soc&lt;/td&gt; &#xA;   &lt;td&gt;s905d_s905x3&lt;/td&gt; &#xA;   &lt;td&gt;Set the &lt;code&gt;SOC&lt;/code&gt; of the packaged TV Boxes, function reference &lt;code&gt;-b&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_kernel&lt;/td&gt; &#xA;   &lt;td&gt;5.15.25_5.10.100&lt;/td&gt; &#xA;   &lt;td&gt;Set kernel &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;version&lt;/a&gt;, function reference &lt;code&gt;-k&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auto_kernel&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to automatically use the latest version of the same series of kernels, function reference &lt;code&gt;-a&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version_branch&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;Specify the name of the kernel &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, function reference &lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_size&lt;/td&gt; &#xA;   &lt;td&gt;2748&lt;/td&gt; &#xA;   &lt;td&gt;Set the size of the firmware ROOTFS partition, function reference &lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_fstype&lt;/td&gt; &#xA;   &lt;td&gt;ext4&lt;/td&gt; &#xA;   &lt;td&gt;Set the file system type of the firmware ROOTFS partition, function reference &lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_sign&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;Set the signature part of the firmware name, function reference &lt;code&gt;-n&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GitHub Actions Output variable description&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To upload to &lt;code&gt;Releases&lt;/code&gt;, you need to add &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; and &lt;code&gt;GH_TOKEN&lt;/code&gt; to the repository and set &lt;code&gt;Workflow read and write permissions&lt;/code&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs#2-set-the-privacy-variable-github_token&#34;&gt;instructions for details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;For example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_OUTPUTPATH }}&lt;/td&gt; &#xA;   &lt;td&gt;out&lt;/td&gt; &#xA;   &lt;td&gt;OpenWrt firmware storage path&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_OUTPUTDATE }}&lt;/td&gt; &#xA;   &lt;td&gt;04.13.1058&lt;/td&gt; &#xA;   &lt;td&gt;Packing date(month.day.hour.minute)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_STATUS }}&lt;/td&gt; &#xA;   &lt;td&gt;success&lt;/td&gt; &#xA;   &lt;td&gt;Package status: success / failure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Armbian firmware default information&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default IP&lt;/td&gt; &#xA;   &lt;td&gt;Get IP from the router&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default username&lt;/td&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default password&lt;/td&gt; &#xA;   &lt;td&gt;1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Compile the kernel using GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;For the compilation method of the kernel, see &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel&#34;&gt;compile-kernel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Compile the kernel for Amlogic s9xxx&#xA;  uses: ophub/amlogic-s9xxx-armbian@main&#xA;  with:&#xA;    build_target: kernel&#xA;    kernel_version: 5.15.25_5.10.100&#xA;    kernel_auto: true&#xA;    kernel_sign: -ophub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Armbian Contributors&lt;/h2&gt; &#xA;&lt;p&gt;First of all, I would like to thank &lt;a href=&#34;https://github.com/150balbes&#34;&gt;150balbes&lt;/a&gt; for his outstanding contributions and a good foundation for using Armbian in the Amlogic TV Boxes. The &lt;a href=&#34;https://github.com/armbian/build&#34;&gt;armbian&lt;/a&gt; system compiled here directly uses the latest official source code for real-time compilation. The development idea of the program comes from the tutorials of authors such as &lt;a href=&#34;https://www.kflyo.com/howto-compile-armbian-for-n1-box&#34;&gt;ebkso&lt;/a&gt;. Thank you for your dedication and sharing, so that we can use the Armbian system in the Amlogic s9xxx TV Boxes.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;kernel&lt;/code&gt; / &lt;code&gt;u-boot&lt;/code&gt; and other resources used by this system are mainly copied from the project of &lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq/openwrt_packit&lt;/a&gt;, Some files are shared by users in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/pulls&#34;&gt;Pull&lt;/a&gt; and &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/issues&#34;&gt;Issues&lt;/a&gt; of &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt&#34;&gt;amlogic-s9xxx-openwrt&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian&#34;&gt;amlogic-s9xxx-armbian&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/luci-app-amlogic&#34;&gt;luci-app-amlogic&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/kernel&#34;&gt;kernel&lt;/a&gt; and other projects. To thank these pioneers and sharers, From now on (This source code repository was created on 2021-09-19), I have recorded them in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/CONTRIBUTOR.md&#34;&gt;CONTRIBUTOR.md&lt;/a&gt;. Thanks again everyone for giving new life and meaning to the TV Boxes.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/build&#34;&gt;armbian/build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unifreq&#34;&gt;unifreq/kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kernel.org&#34;&gt;kernel.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The amlogic-s9xxx-armbian © OPHUB is licensed under &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/LICENSE&#34;&gt;GPL-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tfutils/tfenv</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/tfutils/tfenv</id>
    <link href="https://github.com/tfutils/tfenv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Terraform version manager&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/tfutils/tfenv/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;tfenv&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/&#34;&gt;Terraform&lt;/a&gt; version manager inspired by &lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Currently tfenv supports the following OSes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac OS X (64bit)&lt;/li&gt; &#xA; &lt;li&gt;Linux &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;64bit&lt;/li&gt; &#xA;   &lt;li&gt;Arm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows (64bit) - only tested in git-bash - currently presumed failing due to symlink issues in git-bash&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Automatic&lt;/h3&gt; &#xA;&lt;p&gt;Install via Homebrew&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ brew install tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install via Arch User Repository (AUR)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ yay --sync tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install via puppet&lt;/p&gt; &#xA;&lt;p&gt;Using puppet module &lt;a href=&#34;https://github.com/SergK/puppet-tfenv&#34;&gt;sergk-tfenv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-puppet&#34;&gt;include ::tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check out tfenv into any path (here is &lt;code&gt;${HOME}/.tfenv&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git clone https://github.com/tfutils/tfenv.git ~/.tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add &lt;code&gt;~/.tfenv/bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt; any way you like&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo &#39;export PATH=&#34;$HOME/.tfenv/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bash_profile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR you can make symlinks for &lt;code&gt;tfenv/bin/*&lt;/code&gt; scripts into a path that is already added to your &lt;code&gt;$PATH&lt;/code&gt; (e.g. &lt;code&gt;/usr/local/bin&lt;/code&gt;) &lt;code&gt;OSX/Linux Only!&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ln -s ~/.tfenv/bin/* /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu/Debian touching &lt;code&gt;/usr/local/bin&lt;/code&gt; might require sudo access, but you can create &lt;code&gt;${HOME}/bin&lt;/code&gt; or &lt;code&gt;${HOME}/.local/bin&lt;/code&gt; and on next login it will get added to the session &lt;code&gt;$PATH&lt;/code&gt; or by running &lt;code&gt;. ${HOME}/.profile&lt;/code&gt; it will get added to the current shell session&#39;s &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ mkdir -p ~/.local/bin/&#xA;$ . ~/.profile&#xA;$ ln -s ~/.tfenv/bin/* ~/.local/bin&#xA;$ which tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;tfenv install [version]&lt;/h3&gt; &#xA;&lt;p&gt;Install a specific version of Terraform.&lt;/p&gt; &#xA;&lt;p&gt;If no parameter is passed, the version to use is resolved automatically via &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version files&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv_terraform_version&#34;&gt;TFENV_TERRAFORM_VERSION environment variable&lt;/a&gt; (TFENV_TERRAFORM_VERSION takes precedence), defaulting to &#39;latest&#39; if none are found.&lt;/p&gt; &#xA;&lt;p&gt;If a parameter is passed, available options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;x.y.z&lt;/code&gt; &lt;a href=&#34;https://semver.org/&#34;&gt;Semver 2.0.0&lt;/a&gt; string specifying the exact version to install&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; is a syntax to install latest version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; is a syntax to install latest version matching regex (used by grep -e)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;min-required&lt;/code&gt; is a syntax to recursively scan your Terraform files to detect which version is minimally required. See &lt;a href=&#34;https://www.terraform.io/docs/configuration/terraform.html&#34;&gt;required_version&lt;/a&gt; docs. Also &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#min-required&#34;&gt;see min-required&lt;/a&gt; section below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv install&#xA;$ tfenv install 0.7.0&#xA;$ tfenv install latest&#xA;$ tfenv install latest:^0.8&#xA;$ tfenv install min-required&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;shasum&lt;/code&gt; is present in the path, tfenv will verify the download against Hashicorp&#39;s published sha256 hash. If &lt;a href=&#34;https://keybase.io/&#34;&gt;keybase&lt;/a&gt; is available in the path it will also verify the signature for those published hashes using Hashicorp&#39;s published public key.&lt;/p&gt; &#xA;&lt;p&gt;You can opt-in to using GnuPG tools for PGP signature verification if keybase is not available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ echo &#39;trust-tfenv: yes&#39; &amp;gt; ~/.tfenv/use-gpgv&#xA;$ tfenv install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;trust-tfenv&lt;/code&gt; directive means that verification uses a copy of the Hashicorp OpenPGP key found in the tfenv repository. Skipping that directive means that the Hashicorp key must be in the existing default trusted keys. Use the file &lt;code&gt;~/.tfenv/use-gnupg&lt;/code&gt; to instead invoke the full &lt;code&gt;gpg&lt;/code&gt; tool and see web-of-trust status; beware that a lack of trust path will not cause a validation failure.&lt;/p&gt; &#xA;&lt;h4&gt;.terraform-version&lt;/h4&gt; &#xA;&lt;p&gt;If you use a &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version&lt;/a&gt; file, &lt;code&gt;tfenv install&lt;/code&gt; (no argument) will install the version written in it.&lt;/p&gt; &#xA;&lt;h4&gt;min-required&lt;/h4&gt; &#xA;&lt;p&gt;Please note that we don&#39;t do semantic version range parsing but use first ever found version as the candidate for minimally required one. It is up to the user to keep the definition reasonable. I.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terraform&#34;&gt;// this will detect 0.12.3&#xA;terraform {&#xA;  required_version  = &#34;&amp;lt;0.12.3, &amp;gt;= 0.10.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terraform&#34;&gt;// this will detect 0.10.0&#xA;terraform {&#xA;  required_version  = &#34;&amp;gt;= 0.10.0, &amp;lt;0.12.3&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;h4&gt;TFENV&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_ARCH&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: amd64)&lt;/p&gt; &#xA;&lt;p&gt;Specify architecture. Architecture other than the default amd64 can be specified with the &lt;code&gt;TFENV_ARCH&lt;/code&gt; environment variable&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_ARCH=arm tfenv install 0.7.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_AUTO_INSTALL&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: true)&lt;/p&gt; &#xA;&lt;p&gt;Should tfenv automatically install terraform if the version specified by defaults or a .terraform-version file is not currently installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_AUTO_INSTALL=false terraform plan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_CURL_OUTPUT&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 2)&lt;/p&gt; &#xA;&lt;p&gt;Set the mechanism used for displaying download progress when downloading terraform versions from the remote server.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2: v1 Behaviour: Pass &lt;code&gt;-#&lt;/code&gt; to curl&lt;/li&gt; &#xA; &lt;li&gt;1: Use curl default&lt;/li&gt; &#xA; &lt;li&gt;0: Pass &lt;code&gt;-s&lt;/code&gt; to curl&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_DEBUG&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;Set the debug level for TFENV.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0: No debug output&lt;/li&gt; &#xA; &lt;li&gt;1: Simple debug output&lt;/li&gt; &#xA; &lt;li&gt;2: Extended debug output, with source file names and interactive debug shells on error&lt;/li&gt; &#xA; &lt;li&gt;3: Debug level 2 + Bash execution tracing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_REMOTE&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: &lt;a href=&#34;https://releases.hashicorp.com&#34;&gt;https://releases.hashicorp.com&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;To install from a remote other than the default&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_REMOTE=https://example.jfrog.io/artifactory/hashicorp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_CONFIG_DIR&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Path (Default: &lt;code&gt;$TFENV_ROOT&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;The path to a directory where the local terraform versions and configuration files exist.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;TFENV_CONFIG_DIR=&#34;$XDG_CONFIG_HOME/tfenv&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;TFENV_TERRAFORM_VERSION&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: &#34;&#34;)&lt;/p&gt; &#xA;&lt;p&gt;If not empty string, this variable overrides Terraform version, specified in &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version files&lt;/a&gt;. &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; syntax are also supported. &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv-install-version&#34;&gt;&lt;code&gt;tfenv install&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv-use-version&#34;&gt;&lt;code&gt;tfenv use&lt;/code&gt;&lt;/a&gt; command also respects this variable.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ TFENV_TERRAFORM_VERSION=latest:^0.11. terraform --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Bashlog Logging Library&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_COLOURS&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 1)&lt;/p&gt; &#xA;&lt;p&gt;To disable colouring of console output, set to 0.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_DATE_FORMAT&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: +%F %T)&lt;/p&gt; &#xA;&lt;p&gt;The display format for the date as passed to the &lt;code&gt;date&lt;/code&gt; binary to generate a datestamp used as a prefix to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FILE&lt;/code&gt; type log file lines.&lt;/li&gt; &#xA; &lt;li&gt;Each console output line when &lt;code&gt;BASHLOG_EXTRA=1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_EXTRA&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;By default, console output from tfenv does not print a date stamp or log severity.&lt;/p&gt; &#xA;&lt;p&gt;To enable this functionality, making normal output equivalent to FILE log output, set to 1.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_FILE&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;Set to 1 to enable plain text logging to file (FILE type logging).&lt;/p&gt; &#xA;&lt;p&gt;The default path for log files is defined by /tmp/$(basename $0).log Each executable logs to its own file.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ BASHLOG_FILE=1 tfenv use latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will log to &lt;code&gt;/tmp/tfenv-use.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_FILE_PATH&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: /tmp/$(basename ${0}).log)&lt;/p&gt; &#xA;&lt;p&gt;To specify a single file as the target for all FILE type logging regardless of the executing script.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_I_PROMISE_TO_BE_CAREFUL_CUSTOM_EVAL_PREFIX&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: &#34;&#34;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;BE CAREFUL - MISUSE WILL DESTROY EVERYTHING YOU EVER LOVED&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This variable allows you to pass a string containing a command that will be executed using &lt;code&gt;eval&lt;/code&gt; in order to produce a prefix to each console output line, and each FILE type log entry.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ BASHLOG_I_PROMISE_TO_BE_CAREFUL_CUSTOM_EVAL_PREFIX=&#39;echo &#34;${$$} &#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will prefix every log line with the calling process&#39; PID.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_JSON&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;Set to 1 to enable JSON logging to file (JSON type logging).&lt;/p&gt; &#xA;&lt;p&gt;The default path for log files is defined by /tmp/$(basename $0).log.json Each executable logs to its own file.&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ BASHLOG_JSON=1 tfenv use latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will log in JSON format to &lt;code&gt;/tmp/tfenv-use.log.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;JSON log content:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;{&#34;timestamp&#34;:&#34;&amp;lt;date +%s&amp;gt;&#34;,&#34;level&#34;:&#34;&amp;lt;log-level&amp;gt;&#34;,&#34;message&#34;:&#34;&amp;lt;log-content&amp;gt;&#34;}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_JSON_PATH&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: /tmp/$(basename ${0}).log.json)&lt;/p&gt; &#xA;&lt;p&gt;To specify a single file as the target for all JSON type logging regardless of the executing script.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_SYSLOG&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Integer (Default: 0)&lt;/p&gt; &#xA;&lt;p&gt;To log to syslog using the &lt;code&gt;logger&lt;/code&gt; binary, set this to 1.&lt;/p&gt; &#xA;&lt;p&gt;The basic functionality is thus:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ local tag=&#34;${BASHLOG_SYSLOG_TAG:-$(basename &#34;${0}&#34;)}&#34;;&#xA;$ local facility=&#34;${BASHLOG_SYSLOG_FACILITY:-local0}&#34;;&#xA;$ local pid=&#34;${$}&#34;;&#xA;$ logger --id=&#34;${pid}&#34; -t &#34;${tag}&#34; -p &#34;${facility}.${severity}&#34; &#34;${syslog_line}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_SYSLOG_FACILITY&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: local0)&lt;/p&gt; &#xA;&lt;p&gt;The syslog facility to specify when using SYSLOG type logging.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;code&gt;BASHLOG_SYSLOG_TAG&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;String (Default: $(basename $0))&lt;/p&gt; &#xA;&lt;p&gt;The syslog tag to specify when using SYSLOG type logging.&lt;/p&gt; &#xA;&lt;p&gt;Defaults to the PID of the calling process.&lt;/p&gt; &#xA;&lt;h3&gt;tfenv use [version]&lt;/h3&gt; &#xA;&lt;p&gt;Switch a version to use&lt;/p&gt; &#xA;&lt;p&gt;If no parameter is passed, the version to use is resolved automatically via &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#terraform-version-file&#34;&gt;.terraform-version files&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv_terraform_version&#34;&gt;TFENV_TERRAFORM_VERSION environment variable&lt;/a&gt; (TFENV_TERRAFORM_VERSION takes precedence), defaulting to &#39;latest&#39; if none are found.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;latest&lt;/code&gt; is a syntax to use the latest installed version&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; is a syntax to use latest installed version matching regex (used by grep -e)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;min-required&lt;/code&gt; will switch to the version minimally required by your terraform sources (see above &lt;code&gt;tfenv install&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv use&#xA;$ tfenv use min-required&#xA;$ tfenv use 0.7.0&#xA;$ tfenv use latest&#xA;$ tfenv use latest:^0.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tfenv uninstall &amp;lt;version&amp;gt;&lt;/h3&gt; &#xA;&lt;p&gt;Uninstall a specific version of Terraform &lt;code&gt;latest&lt;/code&gt; is a syntax to uninstall latest version &lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt; is a syntax to uninstall latest version matching regex (used by grep -e)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv uninstall 0.7.0&#xA;$ tfenv uninstall latest&#xA;$ tfenv uninstall latest:^0.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tfenv list&lt;/h3&gt; &#xA;&lt;p&gt;List installed versions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv list&#xA;* 0.10.7 (set by /opt/tfenv/version)&#xA;  0.9.0-beta2&#xA;  0.8.8&#xA;  0.8.4&#xA;  0.7.0&#xA;  0.7.0-rc4&#xA;  0.6.16&#xA;  0.6.2&#xA;  0.6.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;tfenv list-remote&lt;/h3&gt; &#xA;&lt;p&gt;List installable versions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ tfenv list-remote&#xA;0.9.0-beta2&#xA;0.9.0-beta1&#xA;0.8.8&#xA;0.8.7&#xA;0.8.6&#xA;0.8.5&#xA;0.8.4&#xA;0.8.3&#xA;0.8.2&#xA;0.8.1&#xA;0.8.0&#xA;0.8.0-rc3&#xA;0.8.0-rc2&#xA;0.8.0-rc1&#xA;0.8.0-beta2&#xA;0.8.0-beta1&#xA;0.7.13&#xA;0.7.12&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;.terraform-version file&lt;/h2&gt; &#xA;&lt;p&gt;If you put a &lt;code&gt;.terraform-version&lt;/code&gt; file on your project root, or in your home directory, tfenv detects it and uses the version written in it. If the version is &lt;code&gt;latest&lt;/code&gt; or &lt;code&gt;latest:&amp;lt;regex&amp;gt;&lt;/code&gt;, the latest matching version currently installed will be selected.&lt;/p&gt; &#xA;&lt;p&gt;Note, that &lt;a href=&#34;https://raw.githubusercontent.com/tfutils/tfenv/master/#tfenv_terraform_version&#34;&gt;TFENV_TERRAFORM_VERSION environment variable&lt;/a&gt; can be used to override version, specified by &lt;code&gt;.terraform-version&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cat .terraform-version&#xA;0.6.16&#xA;&#xA;$ terraform version&#xA;Terraform v0.6.16&#xA;&#xA;Your version of Terraform is out of date! The latest version&#xA;is 0.7.3. You can update by downloading from www.terraform.io&#xA;&#xA;$ echo 0.7.3 &amp;gt; .terraform-version&#xA;&#xA;$ terraform version&#xA;Terraform v0.7.3&#xA;&#xA;$ echo latest:^0.8 &amp;gt; .terraform-version&#xA;&#xA;$ terraform version&#xA;Terraform v0.8.8&#xA;&#xA;$ TFENV_TERRAFORM_VERSION=0.7.3 terraform --version&#xA;Terraform v0.7.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ git --git-dir=~/.tfenv/.git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uninstalling&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rm -rf /some/path/to/tfenv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tfutils/tfenv/raw/master/LICENSE&#34;&gt;tfenv itself&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rbenv/rbenv/raw/master/LICENSE&#34;&gt;rbenv&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;tfenv partially uses rbenv&#39;s source code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>walidshaari/Kubernetes-Certified-Administrator</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/walidshaari/Kubernetes-Certified-Administrator</id>
    <link href="https://github.com/walidshaari/Kubernetes-Certified-Administrator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Online resources that will help you prepare for taking the CNCF CKA 2020 &#34;Kubernetes Certified Administrator&#34; Certification exam. with time, This is not likely the comprehensive up to date list - please make a pull request if there something that should be added here.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-sa/4.0/80x15.png&#34; alt=&#34;License: CC BY-SA 4.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kubernetes Certified Administration&lt;/h1&gt; &#xA;&lt;p&gt;Online resources that will help you prepare for taking the Kubernetes Certified Administrator Certification exam.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This is not likely a comprehensive list as the exam will be a moving target with the fast pace of k8s development - please make a pull request if there something wrong, should be added, or updated.&lt;/p&gt; &#xA;&lt;p&gt;I tried to restrict the cross references of resources to &lt;a href=&#34;https://raw.githubusercontent.com/walidshaari/Kubernetes-Certified-Administrator/main/kubernetes.io&#34;&gt;kubernetes.io&lt;/a&gt;. Youtube videos and other blog resources are optional; however, I still found them useful in my k8s learning journey.&lt;/p&gt; &#xA;&lt;p&gt;Ensure you have the right version of Kubernetes documentation selected (e.g. v1.21 as of June 2021 exam) especially for API objects and annotations.&lt;/p&gt; &#xA;&lt;p&gt;LDR: &lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Other CK exams:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/walidshaari/Certified-Kubernetes-Secuirty-Specialist&#34;&gt;Certified Kubernetes Security Specialist CKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgkanatsios/CKAD-exercises&#34;&gt;Certified Kubernetes Application Developer CKAD&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CKA 2021 Exam Objectives&lt;/h2&gt; &#xA;&lt;p&gt;These are the exam objectives you review and understand in order to pass the test.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cncf/curriculum&#34;&gt;CNCF Exam Curriculum repository &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://youtu.be/vS-wXo2qbPs&#34;&gt; Cluster Architecture, Installation, and Configuration&lt;/a&gt; 25%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Manage role based access control&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/@HoussemDellai/rbac-with-kubernetes-in-minikube-4deed658ea7b&#34;&gt;Lab: RBAC with Kubernetes in Minikube&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/&#34;&gt;Use kubeadm to install a basic cluster&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://phoenixnap.com/kb/install-kubernetes-on-ubuntu&#34;&gt;Lab: Install Kubernetes On Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/&#34;&gt;Manage a highly available Kubernetes cluster&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/&#34;&gt;Options for Highly Available topology&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.weave.works/blog/running-highly-available-clusters-with-kubeadm&#34;&gt;Weaveworks Kubeadm HA cluster&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&#34;&gt;Provision underlying infrastructure to deploy Kubernetes cluster&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-upgrade/&#34;&gt;Peform a version upgrade on Kubernetes cluster using kubeadm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster&#34;&gt;implment etcd backup and restore&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/DhsFfNSIrQ4&#34;&gt;Kubecon Europe 2020: Kubeadm deep dive&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; sample commands used during backup/restore/update of nodes &lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code&gt;#etcd backup and restore brief&#xA;export ETCDCTL_API=3  # needed to specify etcd api versions, not sure if it is needed anylonger with k8s 1.19+ &#xA;etcdctl snapshot save -h   #find save options&#xA;etcdctl snapshot restore -h  #find restore options&#xA;&#xA;## possible example of save, options will change depending on cluster context, as TLS is used need to give ca,crt, and key paths&#xA;etcdctl snapshot save /backup/snapshot.db  --cert=/etc/kubernetes/pki/etcd/server.crt  --key=/etc/kubernetes/pki/etcd/server.key --      cacert=/etc/kubernetes/pki/etcd/ca.crt&#xA;&#xA;&#xA;# evicting pods/nodes and bringing back node back to cluster&#xA;kubectl drain  &amp;lt;node&amp;gt;# to drain a node&#xA;kubectl uncordon  &amp;lt;node&amp;gt; # to return a node after updates back to the cluster from unscheduled state to Ready&#xA;kubectl cordon  &amp;lt;node&amp;gt;   # to not schedule new pods on a node&#xA;&#xA;#backup/restore the cluster (e.g. the state of the cluster in etcd)&#xA;&#xA;&#xA;# upgrade kubernetes worker node&#xA;kubectl drain &amp;lt;node&amp;gt;&#xA;apt-get upgrade -y kubeadm=&amp;lt;k8s-version-to-upgrade&amp;gt;&#xA;apt-get upgrade -y kubelet=&amp;lt;k8s-version-to-upgrade&amp;gt;&#xA;kubeadm upgrade node config --kubelet-version &amp;lt;k8s-version-to-upgrade&amp;gt;&#xA;systemctl restart kubelet&#xA;kubectl uncordon &amp;lt;node&amp;gt;&#xA;&#xA;&#xA;#kubeadm upgrade steps&#xA;kubeadm upgrade plan&#xA;kubeadm upgrade apply&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Workloads &amp;amp; Scheduling – 15%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;Understand deployments and how to perform rolling update and rollbacks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/configmap/&#34;&gt;ConfigMaps&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/secret/&#34;&gt;Secrets&lt;/a&gt; to configure applications&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/&#34;&gt;configure a pod with a configmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/&#34;&gt;configure a pod with a secret&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Know how to &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#scaling-a-deployment&#34;&gt;scale applications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/run-application/scale-stateful-set/&#34;&gt;scaling a statefulset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/#scaling-a-replicaset&#34;&gt;scaling a replicaset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Understand the primitives used to create robust, self-healing, application deployments&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/&#34;&gt;Replicaset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;Deployments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/&#34;&gt;Statefulsets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/&#34;&gt;Daemonset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#how-pods-with-resource-requests-are-scheduled&#34;&gt;how resource limits can affect Pod scheduling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Awareness of manifest management and common templating tools&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/&#34;&gt;Kustomize&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/blog/2018/05/29/introducing-kustomize-template-free-configuration-customization-for-kubernetes/&#34;&gt;Kustomize Blog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-kubernetes-objects/&#34;&gt;manage kubernetes objects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/service-catalog/install-service-catalog-using-helm/&#34;&gt;Install service catalog using helm&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Non-k8s.io resource: CNCF Kubecon video: &lt;a href=&#34;https://youtu.be/x2w6T0sE50w?list=PLj6h78yzYM2O1wlsM-Ma-RYhfT5LKq0XC&#34;&gt;An introduction to Helm - Bridget Kromhout, Microsoft &amp;amp; Marc Khouzam, City of Montreal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Non-k8s.io resource: External resource: &lt;a href=&#34;https://learnk8s.io/templating-yaml-with-code&#34;&gt;templating-yaml-with-code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Services &amp;amp; Networking – 20%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/networking/&#34;&gt;host networking configuration on the cluster nodes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Understand connectivity between Pods&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/#pod-networking&#34;&gt;The concept of Pods networking&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Understand ClusterIP, NodePort, LoadBalancer service types and endpoints&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34;&gt;service&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Know how to use &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/&#34;&gt;Ingress controllers&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource&#34;&gt;Ingress resources&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/walidshaari/Kubernetes-Certified-Administrator/main/(https://kubernetes.io/docs/concepts/services-networking/ingress/)&#34;&gt;Ingress concepts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/&#34;&gt;Know how to configure and use CoreDNS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network&#34;&gt;Choose an appropriate container network interface plugin&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/tq9ng_Nz9j8&#34;&gt;Kubernetes Networking Intro and Deep-Dive - Bowei Du &amp;amp; Tim Hockin, Google&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/xB190-yyJnY?t=241&#34;&gt;Kubernetes and Networks: why is this so dang hard?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/InZVNuKY5GY?list=PLj6h78yzYM2O1wlsM-Ma-RYhfT5LKq0XC&#34;&gt;Kubecon Eu 2020 Tutorial: Communication Is Key - Understanding Kubernetes Networking - Jeff Poole, Vivint Smart Home&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Storage – 10%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/storage-classes/&#34;&gt;storage classes&lt;/a&gt;, &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/&#34;&gt;persistent volumes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#volume-mode&#34;&gt;volume mode&lt;/a&gt;, &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes&#34;&gt;access modes&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#reclaim-policy&#34;&gt;reclaim policies&lt;/a&gt; for volumes&lt;/li&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims&#34;&gt;persistent volume claims&lt;/a&gt; primitive&lt;/li&gt; &#xA; &lt;li&gt;Know how to &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/&#34;&gt;configure applications with persistent storage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; StorageClass, PersistentVolume, and PersitentVolumeClaim examples &lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code&gt;#### Storage Class example&#xA;#&#xA;&#xA;#### Persistent Volume Claim example&#xA;#&#xA;kind: PersistentVolumeClaim&#xA;apiVersion: v1&#xA;metadata:&#xA;  name: local-pvc&#xA;spec:&#xA;  accessModes:&#xA;  - ReadWriteOnce&#xA;  storageClassName: local-storage-sc&#xA;  resources:&#xA;    requests:&#xA;      storage: 100Mi&#xA;&#xA;## Persistent Volume example&#xA;#&#xA;apiVersion: v1&#xA;kind: PersistentVolume&#xA;metadata:&#xA;  name: local-pv&#xA;spec:&#xA;  accessModes:&#xA;  - ReadWriteOnce&#xA;  capacity:&#xA;    storage: 200Mi&#xA;  local:&#xA;    path: /data/pv/disk021&#xA;  persistentVolumeReclaimPolicy: Retain&#xA;  storageClassName: local-storage-sc&#xA;  volumeMode: Filesystem&#xA;&#xA;###  Pod using the pvc&#xA;#&#xA;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: nginx&#xA;  labels:&#xA;    name: nginx&#xA;spec:&#xA;  containers:&#xA;  - name: nginx&#xA;    image: nginx&#xA;    volumeMounts:&#xA;      - name: local-persistent-storage&#xA;        mountPath: /var/www/html&#xA;  volumes:&#xA;    - name: local-persistent-storage&#xA;      persistentVolumeClaim:&#xA;        claimName: local-pvc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Troubleshooting – 30%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/logging/&#34;&gt;Evaluate cluster and node logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/resource-usage-monitoring/&#34;&gt;Understand how to monitor applications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/logging/#logging-at-the-node-level&#34;&gt;Manage container stdout &amp;amp; stderr logs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/debug-application/&#34;&gt;Troubleshoot application failure&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#troubleshooting&#34;&gt;Pending or termintated pods&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/debug-cluster/&#34;&gt;Troubleshoot cluster component failure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/debug-cluster/&#34;&gt;Troubleshoot networking&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/&#34;&gt;DNS troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Tips:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get familiar with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Familiarize yourself with the documentation, initially &lt;a href=&#34;https://kubernetes.io/docs/concepts/&#34;&gt;concepts&lt;/a&gt; and mostly &lt;a href=&#34;https://kubernetes.io/docs/tasks/&#34;&gt;tasks&lt;/a&gt;, &lt;strong&gt;kubectl explain&lt;/strong&gt; command, &lt;a href=&#34;https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/&#34;&gt;kubectl cheatsheet&lt;/a&gt;, and &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;kubectl commands reference&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/&#34;&gt;https://kubernetes.io/docs/concepts/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/&#34;&gt;https://kubernetes.io/docs/tasks/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/&#34;&gt;https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;kubectl api-versions&lt;/code&gt; and &lt;code&gt;kubectl api-resources&lt;/code&gt; wih &lt;code&gt;grep&lt;/code&gt; for a specific resoruce e.g. pv, pvc, deployment, storageclass, ..etc can help figure out the &lt;strong&gt;apiVersion&lt;/strong&gt;, and &lt;strong&gt;kind&lt;/strong&gt; combined with explain below will help in constructing the yaml manifest&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.heptio.com/kubectl-explain-heptioprotip-ee883992a243&#34;&gt;kubectl explain --recurisve&lt;/a&gt; to construct out any yaml manifest you need and find its specd and details&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When using kubectl for investigations and troubleshooting utilize the wide output it gives your more details&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;     $kubectl get pods -o wide  --show-labels  --all-namespaces&#xA;     or&#xA;     $kubectl get pods -o wide  --show-labels  -A     # -A is quicker than --all-namespaces&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;kubectl&lt;/code&gt; utilizie &lt;code&gt;--all-namespaces or better -A&lt;/code&gt; to ensure deployments, pods, objects are on the right name space, and right desired state&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;for events and troubleshooting utilize kubectl describe if its pod/resource related and logs if it is application issue related&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;     $kubectl describe pods &amp;lt;PODID&amp;gt;   # for pod, deployment, other k8s resource issues/events&#xA;     $kubectl logs &amp;lt;PODID&amp;gt;            # for container/application issues like crash loops&#xA;     &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/faun/be-fast-with-kubectl-1-18-ckad-cka-31be00acc443&#34;&gt;fast with kubectl&lt;/a&gt; e.g. the &#39;-o yaml&#39; in conjuction with &lt;code&gt;--dry-run=client&lt;/code&gt; allows you to create a manifest template from an imperative spec, combined with &lt;code&gt;--edit&lt;/code&gt; it allows you to modify the object before creation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl create service clusterip my-svc -o yaml --dry-run=client &amp;gt; /tmp/srv.yaml&#xA;kubectl create --edit -f /tmp/srv.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use kubectl &lt;a href=&#34;https://github.com/ahmetb/kubectl-aliases&#34;&gt;aliases&lt;/a&gt; to speed up and reduce typo errors, practice these alaises early at your work and study for the exam. some example aliases:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias k=&#39;kubectl&#39;&#xA;alias kg=&#39;kubectl get&#39;&#xA;alias kgpo=&#39;kubectl get pod&#39;&#xA;alias kcpyd=&#39;kubectl create pod -o yaml --dry-run=client&#39;&#xA;alias ksysgpo=&#39;kubectl --namespace=kube-system get pod&#39;&#xA;&#xA;alias kd=&#39;kubectl delete&#39;&#xA;alias kdf=&#39;kubectl delete -f&#39;&#xA;## for quick deletes you can add --force --grace-period=0  **Not sure if it is a good idea if you are in a production cluster**&#xA;alias krmgf=&#39;kubectl delete --grace-period 0 --force&#39;&#xA;alias kgsvcoyaml=&#39;kubectl get service -o=yaml&#39;&#xA;alias kgsvcwn=&#39;watch kubectl get service --namespace&#39;&#xA;alias kgsvcslwn=&#39;watch kubectl get service --show-labels --namespace&#39;&#xA;&#xA;#example usage of aliases&#xA;krmgf nginx-8jk71    # kill pod nginx-8jk71 using grace period 0 and force&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/cheatsheet/#bash&#34;&gt;kubectl autocomplete&lt;/a&gt;. Autocomplete is the life saviour in any timebound exam as well as our day to day work (e.g. If autocomplete enabled &lt;code&gt;k -n [Press Tab]&lt;/code&gt; will suggest available namespaces). Example command to enable autocomplete is available at official &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/cheatsheet/#bash&#34;&gt;kubectl Cheat Sheet&lt;/a&gt; page, you don&#39;t have to remember anything.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;source &amp;lt;(kubectl completion bash) # setup autocomplete in bash into the current shell, bash-completion package should be installed first.&#xA;echo &#34;source &amp;lt;(kubectl completion bash)&#34; &amp;gt;&amp;gt; ~/.bashrc # add autocomplete permanently to your bash shell.&#xA;&#xA;alias k=kubectl&#xA;complete -F __start_kubectl k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Miscellaneous (resources not allowed during exam):&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ContainerSolutions/kubernetes-examples&#34;&gt;Troubleshooting use cases by Ian/Container solutions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Popular training and practice sites:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Double check if the course is uptodate with the latest exam information (e.g. api, or curicuilim)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/&#34;&gt;Mumshad CKA with practice tests and mock exams&lt;/a&gt; - Highly recommended&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://killer.sh/cka&#34;&gt;Killer.sh CKA simulator&lt;/a&gt; ⟹ use code &lt;strong&gt;walidshaari&lt;/strong&gt; for &lt;strong&gt;20%&lt;/strong&gt; discount - they update frequently&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.techworld-with-nana.com/kubernetes-administrator-cka&#34;&gt;AWS Container hero NANA CKA course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kube.academy/courses/how-to-prepare-for-the-cka-exam&#34;&gt;Kube Academy free How to prepare for the CKA exam training&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acloud.guru/overview/certified-kubernetes-administrator&#34;&gt;A Cloud Guru - Certified Kubernetes Administrator (CKA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/paths/certified-kubernetes-administrator&#34;&gt;Pluralsight CKA course&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/nocentino&#34;&gt;Anthony E. Nocentino &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acloud.guru/learn/7f5137aa-2d26-4b19-8d8c-025b22667e76&#34;&gt;LinuxAcademy/ACloudGuru CKA course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rx-m.com/cka-online-training/&#34;&gt;rx-m online CKA course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Duffie Cooly &lt;a href=&#34;https://k8s.work/cka-lab.mp4&#34;&gt;hands-on CKA video&lt;/a&gt; using KinD and accompanying &lt;a href=&#34;https://hackmd.io/@mauilion/cka-lab&#34;&gt;notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/stilian-stoilov-379972a9/&#34;&gt;Stilian Stoilov&lt;/a&gt; &lt;a href=&#34;https://github.com/StenlyTU/K8s-training-official&#34;&gt;practice questions&lt;/a&gt; - 50+ tasks with increasing difficulty.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick review material&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adnan Rashisd CKA notes: can be found at &lt;a href=&#34;https://adnan.study/&#34;&gt;https://adnan.study/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What&#39;s Next:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn more about Kubernetes core components from &lt;a href=&#34;https://twitter.com/mauilion&#34;&gt;Duffie Cooly&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/playlist?list=PL7bmigfV0EqS6WxgWlH-p4dhkfuwcZ6-E&#34;&gt;TGIK Grokking playlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cncf.io/certification/ckad/&#34;&gt;CKAD Certified Kubernetes Application Developer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/walidshaari/Certified-Kubernetes-Secuirty-Specialist&#34;&gt;CKS Certified Kubernetes Security Specialist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Klustered: live youtube series of advanced level of internals troubleshooting. fun and interesting to watch &lt;a href=&#34;https://www.youtube.com/playlist?list=PLz0t90fOInA5IyhoT96WhycPV8Km-WICj&#34;&gt;Klustered&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>wurstmeister/kafka-docker</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/wurstmeister/kafka-docker</id>
    <link href="https://github.com/wurstmeister/kafka-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerfile for Apache Kafka&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/wurstmeister/kafka&#34; title=&#34;Get your own version badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/version/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/wurstmeister/kafka&#34; title=&#34;Get your own image badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/wurstmeister/kafka-docker&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/wurstmeister/kafka-docker.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;kafka-docker&lt;/h1&gt; &#xA;&lt;p&gt;Dockerfile for &lt;a href=&#34;http://kafka.apache.org/&#34;&gt;Apache Kafka&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The image is available directly from &lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tags and releases&lt;/h2&gt; &#xA;&lt;p&gt;All versions of the image are built from the same set of scripts with only minor variations (i.e. certain features are not supported on older versions). The version format mirrors the Kafka format, &lt;code&gt;&amp;lt;scala version&amp;gt;-&amp;lt;kafka version&amp;gt;&lt;/code&gt;. Initially, all images are built with the recommended version of scala documented on &lt;a href=&#34;http://kafka.apache.org/downloads&#34;&gt;http://kafka.apache.org/downloads&lt;/a&gt;. To list all available tags:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -s https://registry.hub.docker.com/v2/repositories/wurstmeister/kafka/tags\?page_size\=1024 | jq -r &#39;.results[].name&#39; | sort -u | egrep &#39;\d.\d{2}-.*&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everytime the image is updated, all tags will be pushed with the latest updates. This should allow for greater consistency across tags, as well as any security updates that have been made to the base image.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Announcements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;04-Jun-2019&lt;/strong&gt; - Update base image to openjdk 212 (&lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/8u212-relnotes-5292913.html&#34;&gt;Release notes&lt;/a&gt;. Please force pull to get these latest updates - including security patches etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Pre-Requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install docker-compose &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;modify the &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/wurstmeister/kafka-docker/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; to match your docker host IP (Note: Do not use localhost or 127.0.0.1 as the host ip if you want to run multiple brokers.)&lt;/li&gt; &#xA; &lt;li&gt;if you want to customize any Kafka parameters, simply add them as environment variables in &lt;code&gt;docker-compose.yml&lt;/code&gt;, e.g. in order to increase the &lt;code&gt;message.max.bytes&lt;/code&gt; parameter set the environment to &lt;code&gt;KAFKA_MESSAGE_MAX_BYTES: 2000000&lt;/code&gt;. To turn off automatic topic creation set &lt;code&gt;KAFKA_AUTO_CREATE_TOPICS_ENABLE: &#39;false&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kafka&#39;s log4j usage can be customized by adding environment variables prefixed with &lt;code&gt;LOG4J_&lt;/code&gt;. These will be mapped to &lt;code&gt;log4j.properties&lt;/code&gt;. For example: &lt;code&gt;LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER=DEBUG, authorizerAppender&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; There are several &#39;gotchas&#39; with configuring networking. If you are not sure about what the requirements are, please check out the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki/Connectivity&#34;&gt;Connectivity Guide&lt;/a&gt; in the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Start a cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose up -d &lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add more brokers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose scale kafka=3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Destroy a cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose stop&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;The default &lt;code&gt;docker-compose.yml&lt;/code&gt; should be seen as a starting point. By default each broker will get a new port number and broker id on restart. Depending on your use case this might not be desirable. If you need to use specific ports and broker ids, modify the docker-compose configuration accordingly, e.g. &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/raw/master/docker-compose-single-broker.yml&#34;&gt;docker-compose-single-broker.yml&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose -f docker-compose-single-broker.yml up&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broker IDs&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the broker id in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_BROKER_ID&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;BROKER_ID_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;BROKER_ID_COMMAND: &#34;hostname | awk -F&#39;-&#39; &#39;{print $$2}&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you don&#39;t specify a broker id in your docker-compose file, it will automatically be generated (see &lt;a href=&#34;https://issues.apache.org/jira/browse/KAFKA-1070&#34;&gt;https://issues.apache.org/jira/browse/KAFKA-1070&lt;/a&gt;. This allows scaling up and down. In this case it is recommended to use the &lt;code&gt;--no-recreate&lt;/code&gt; option of docker-compose to ensure that containers are not re-created and thus keep their names and ids.&lt;/p&gt; &#xA;&lt;h2&gt;Automatically create topics&lt;/h2&gt; &#xA;&lt;p&gt;If you want to have kafka-docker automatically create topics in Kafka during creation, a &lt;code&gt;KAFKA_CREATE_TOPICS&lt;/code&gt; environment variable can be added in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example snippet from &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    environment:&#xA;      KAFKA_CREATE_TOPICS: &#34;Topic1:1:3,Topic2:1:1:compact&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Topic 1&lt;/code&gt; will have 1 partition and 3 replicas, &lt;code&gt;Topic 2&lt;/code&gt; will have 1 partition, 1 replica and a &lt;code&gt;cleanup.policy&lt;/code&gt; set to &lt;code&gt;compact&lt;/code&gt;. Also, see FAQ: &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki#topic-compaction-does-not-work&#34;&gt;Topic compaction does not work&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use multi-line YAML or some other delimiter between your topic definitions, override the default &lt;code&gt;,&lt;/code&gt; separator by specifying the &lt;code&gt;KAFKA_CREATE_TOPICS_SEPARATOR&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;KAFKA_CREATE_TOPICS_SEPARATOR: &#34;$$&#39;\n&#39;&#34;&lt;/code&gt; would use a newline to split the topic definitions. Syntax has to follow docker-compose escaping rules, and &lt;a href=&#34;https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html&#34;&gt;ANSI-C&lt;/a&gt; quoting.&lt;/p&gt; &#xA;&lt;h2&gt;Advertised hostname&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the advertised hostname in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;HOSTNAME_COMMAND: &#34;route -n | awk &#39;/UG[ \t]/{print $$2}&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When using commands, make sure you review the &#34;Variable Substitution&#34; section in &lt;a href=&#34;https://docs.docker.com/compose/compose-file/#variable-substitution&#34;&gt;https://docs.docker.com/compose/compose-file/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt; is specified, it takes precedence over &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For AWS deployment, you can use the Metadata service to get the container host&#39;s IP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HOSTNAME_COMMAND=wget -t3 -T2 -qO-  http://169.254.169.254/latest/meta-data/local-ipv4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reference: &lt;a href=&#34;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&#34;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Injecting HOSTNAME_COMMAND into configuration&lt;/h3&gt; &#xA;&lt;p&gt;If you require the value of &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt; in any of your other &lt;code&gt;KAFKA_XXX&lt;/code&gt; variables, use the &lt;code&gt;_{HOSTNAME_COMMAND}&lt;/code&gt; string in your variable value, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS=SSL://_{HOSTNAME_COMMAND}:9093,PLAINTEXT://9092&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advertised port&lt;/h2&gt; &#xA;&lt;p&gt;If the required advertised port is not static, it may be necessary to determine this programatically. This can be done with the &lt;code&gt;PORT_COMMAND&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PORT_COMMAND: &#34;docker port $$(hostname) 9092/tcp | cut -d: -f2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be then interpolated in any other &lt;code&gt;KAFKA_XXX&lt;/code&gt; config using the &lt;code&gt;_{PORT_COMMAND}&lt;/code&gt; string, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://1.2.3.4:_{PORT_COMMAND}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Listener Configuration&lt;/h2&gt; &#xA;&lt;p&gt;It may be useful to have the &lt;a href=&#34;https://kafka.apache.org/documentation/&#34;&gt;Kafka Documentation&lt;/a&gt; open, to understand the various broker listener configuration options.&lt;/p&gt; &#xA;&lt;p&gt;Since 0.9.0, Kafka has supported &lt;a href=&#34;https://issues.apache.org/jira/browse/KAFKA-1809&#34;&gt;multiple listener configurations&lt;/a&gt; for brokers to help support different protocols and discriminate between internal and external traffic. Later versions of Kafka have deprecated &lt;code&gt;advertised.host.name&lt;/code&gt; and &lt;code&gt;advertised.port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;advertised.host.name&lt;/code&gt; and &lt;code&gt;advertised.port&lt;/code&gt; still work as expected, but should not be used if configuring the listeners.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;The example environment below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HOSTNAME_COMMAND: curl http://169.254.169.254/latest/meta-data/public-hostname&#xA;KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094&#xA;KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094&#xA;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT&#xA;KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will result in the following broker config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;advertised.listeners = OUTSIDE://ec2-xx-xx-xxx-xx.us-west-2.compute.amazonaws.com:9094,INSIDE://:9092&#xA;listeners = OUTSIDE://:9094,INSIDE://:9092&#xA;inter.broker.listener.name = INSIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No listeners may share a port number.&lt;/li&gt; &#xA; &lt;li&gt;An advertised.listener must be present by protocol name and port number in the list of listeners.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broker Rack&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the broker rack affinity in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_BROKER_RACK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;RACK_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;RACK_COMMAND: &#34;curl http://169.254.169.254/latest/meta-data/placement/availability-zone&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In the above example the AWS metadata service is used to put the instance&#39;s availability zone in the &lt;code&gt;broker.rack&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;h2&gt;JMX&lt;/h2&gt; &#xA;&lt;p&gt;For monitoring purposes you may wish to configure JMX. Additional to the standard JMX parameters, problems could arise from the underlying RMI protocol used to connect&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;java.rmi.server.hostname - interface to bind listening port&lt;/li&gt; &#xA; &lt;li&gt;com.sun.management.jmxremote.rmi.port - The port to service RMI requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to connect to a kafka running locally (assumes exposing port 1099)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  KAFKA_JMX_OPTS: &#34;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099&#34;&#xA;  JMX_PORT: 1099&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Jconsole can now connect at &lt;code&gt;jconsole 192.168.99.100:1099&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker Swarm Mode&lt;/h2&gt; &#xA;&lt;p&gt;The listener configuration above is necessary when deploying Kafka in a Docker Swarm using an overlay network. By separating OUTSIDE and INSIDE listeners, a host can communicate with clients outside the overlay network while still benefiting from it from within the swarm.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the multiple-listener configuration, additional best practices for operating Kafka in a Docker Swarm include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &#34;deploy: global&#34; in a compose file to launch one and only one Kafka broker per swarm node.&lt;/li&gt; &#xA; &lt;li&gt;Use compose file version &#39;3.2&#39; (minimum Docker version 16.04) and the &#34;long&#34; port definition with the port in &#34;host&#34; mode instead of the default &#34;ingress&#34; load-balanced port binding. This ensures that outside requests are always routed to the correct broker. For example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ports:&#xA;   - target: 9094&#xA;     published: 9094&#xA;     protocol: tcp&#xA;     mode: host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Older compose files using the short-version of port mapping may encounter Kafka client issues if their connection to individual brokers cannot be guaranteed.&lt;/p&gt; &#xA;&lt;p&gt;See the included sample compose file &lt;code&gt;docker-compose-swarm.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release process&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki/ReleaseProcess&#34;&gt;wiki&lt;/a&gt; for information on adding or updating versions to release to Dockerhub.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://wurstmeister.github.io/kafka-docker/&#34;&gt;http://wurstmeister.github.io/kafka-docker/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>catppuccin/catppuccin</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/catppuccin/catppuccin</id>
    <link href="https://github.com/catppuccin/catppuccin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;😸 Soothing pastel theme for the high-spirited!&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/logos/exports/1544x1544_circle.png&#34; width=&#34;100&#34; alt=&#34;Logo&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;30&#34; width=&#34;0px&#34;&gt; Catppuccin Theme &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;30&#34; width=&#34;0px&#34;&gt; &lt;/h3&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin#-palette&#34;&gt;Palettes&lt;/a&gt; · &lt;a href=&#34;https://github.com/catppuccin/catppuccin#-ports-and-more&#34;&gt;Ports&lt;/a&gt; · &lt;a href=&#34;https://github.com/catppuccin/catppuccin/tree/main/docs&#34;&gt;Docs&lt;/a&gt; &lt;/h6&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/macchiato.png&#34; width=&#34;400&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin/stargazers&#34;&gt; &lt;img alt=&#34;Stargazers&#34; src=&#34;https://img.shields.io/github/stars/catppuccin/catppuccin?style=for-the-badge&amp;amp;logo=starship&amp;amp;color=C9CBFF&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin/releases/latest&#34;&gt; &lt;img alt=&#34;Releases&#34; src=&#34;https://img.shields.io/github/release/catppuccin/catppuccin.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;color=F2CDCD&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catppuccin/catppuccin/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/catppuccin/catppuccin?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;color=B5E8E0&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/r6Mdz5dpFc&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/907385605422448742?style=for-the-badge&amp;amp;logo=discord&amp;amp;color=DDB6F2&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Catppuccin is a community-driven pastel theme that aims to be the middle ground between low and high contrast themes. It consists of 4 soothing warm palettes with 26 eye-candy colors each, perfect for coding, designing, and much more! In addition, this repository tracks the development of the actual color palette, &lt;a href=&#34;https://github.com/catppuccin/catppuccin/tree/dev/docs&#34;&gt;&lt;b&gt;the project&#39;s documentation&lt;/b&gt;&lt;/a&gt;, organization-wide assets, resources and code samples for maintainers/developers. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/r6Mdz5dpFc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/social/discord.png&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;Discord Logo&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;1&#34; width=&#34;5&#34;&gt; &lt;a href=&#34;https://github.com/catppuccin&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/social/github.png&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;Github Logo&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;1&#34; width=&#34;5&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/org/catppuccin&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/social/npm.svg?sanitize=true&#34; width=&#34;100&#34; height=&#34;100&#34; alt=&#34;Npm Logo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Join our community! &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;🧠 Design Philosophy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Colorful is better than colorless&lt;/strong&gt;: the colorfulness of something contributes to the distinction amongst the parts of that &lt;em&gt;something&lt;/em&gt;, making it marginally easier to understand how things are structured.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;There should be balance&lt;/strong&gt;: not too dull, not too bright. Suitability under various light conditions is a must.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Harmony is superior to dissonance&lt;/strong&gt;: vivacious colors must complement each other.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;🎨 Palettes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Catppuccin&lt;/strong&gt; constist of 4 beautiful pastel color palettes. All the details can be found below.&lt;br&gt; To make the best use them please refer to the &lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/main/docs/style-guide.md&#34;&gt;style guide&lt;/a&gt;. &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;10&#34; width=&#34;0&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🌻 Latte&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#dc8a78&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(220, 138, 120)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(11, 59%, 67%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#dd7878&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(221, 120, 120)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 60%, 67%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ea76cb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(234, 118, 203)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 73%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8839ef&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(136, 57, 239)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(266, 85%, 58%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#d20f39&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(210, 15, 57)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(347, 87%, 44%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e64553&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(230, 69, 83)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(355, 76%, 59%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#fe640b&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(254, 100, 11)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt; hsl(22, 99%, 52%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#df8e1d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(223, 142, 29)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(35, 77%, 49%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#40a02b&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(64, 160, 43)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(109, 58%, 40%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#179299&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(23, 146, 153)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(183, 74%, 35%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#04a5e5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(4, 165, 229)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(197, 97%, 46%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#209fb5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(32, 159, 181)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 70%, 42%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#1e66f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(30, 102, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 91%, 54%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7287fd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(114, 135, 253)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 97%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#4c4f69&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(76, 79, 105)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(234, 16%, 35%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#5c5f77&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(92, 95, 119)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 13%, 41%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#6c6f85&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(108, 111, 133)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 10%, 47%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7c7f93&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(124, 127, 147)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(232, 10%, 53%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8c8fa1&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(140, 143, 161)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 10%, 59%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#9ca0b0&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(156, 160, 176)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 11%, 65%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#acb0be&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(172, 176, 190)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 12%, 71%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#bcc0cc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(188, 192, 204)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(225, 14%, 77%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ccd0da&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(204, 208, 218)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(223, 16%, 83%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eff1f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(239, 241, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 23%, 95%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e6e9ef&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(230, 233, 239)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 22%, 92%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/latte_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#dce0e8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(220, 224, 232)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 21%, 89%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🪴 Frappé&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f2d5cf&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(242, 213, 207)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(10, 57%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eebebe&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(238, 190, 190)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 59%, 84%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f4b8e4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(244, 184, 228)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 73%, 84%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ca9ee6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(202, 158, 230)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(277, 59%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e78284&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(231, 130, 132)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(359, 68%, 71%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ea999c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(234, 153, 156)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(358, 66%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ef9f76&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(239, 159, 118)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(20, 79%, 70%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#e5c890&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(229, 200, 144)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(40, 62%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6d189&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 209, 137)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(96, 44%, 68%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#81c8be&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(129, 200, 190)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(172, 39%, 65%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#99d1db&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(153, 209, 219)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 48%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#85c1dc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(133, 193, 220)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(199, 55%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8caaee&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(140, 170, 238)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(222, 74%, 74%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#babbf1&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(186, 187, 241)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(239, 66%, 84%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#c6d0f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(198, 208, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 70%, 87%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b5bfe2&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(181, 191, 226)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 44%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a5adce&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(165, 173, 206)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 29%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#949cbb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(148, 156, 187)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 22%, 66%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#838ba7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(131, 139, 167)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 17%, 58%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#737994&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(115, 121, 148)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(229, 13%, 52%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#626880&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(98, 104, 128)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 13%, 44%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#51576d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(81, 87, 109)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 15%, 37%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#414559&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(65, 69, 89)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 16%, 30%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#303446&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(48, 52, 70)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(229, 19%, 23%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#292c3c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(41, 44, 60)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 19%, 20%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/frappe_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#232634&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(35, 38, 52)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(229, 20%, 17%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🌺 Macchiato&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f4dbd6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(244, 219, 214)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(10, 58%, 90%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f0c6c6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(240, 198, 198)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 58%, 86%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5bde6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 189, 230)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 74%, 85%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#c6a0f6&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(198, 160, 246)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(267, 83%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ed8796&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(237, 135, 150)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(351, 74%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#ee99a0&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(238, 153, 160)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(355, 71%, 77%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5a97f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 169, 127)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(21, 86%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eed49f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(238, 212, 159)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(40, 70%, 78%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6da95&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 218, 149)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(105, 48%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8bd5ca&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(139, 213, 202)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(171, 47%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#91d7e3&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(145, 215, 227)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 59%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7dc4e4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(125, 196, 228)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(199, 66%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8aadf4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(138, 173, 244)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(220, 83%, 75%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b7bdf8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(183, 189, 248)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(234, 82%, 85%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#cad3f5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(202, 211, 245)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 68%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b8c0e0&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(184, 192, 224)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 39%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a5adcb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(165, 173, 203)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 27%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#939ab7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(147, 154, 183)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 20%, 65%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#8087a2&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(128, 135, 162)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 15%, 57%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#6e738d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(110, 115, 141)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 12%, 49%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#5b6078&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(91, 96, 120)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 14%, 41%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#494d64&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(73, 77, 100)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 16%, 34%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#363a4f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(54, 58, 79)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 19%, 26%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#24273a&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(36, 39, 58)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(232, 23%, 18%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#1e2030&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(30, 32, 48)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 23%, 15%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/macchiato_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#181926&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(24, 25, 38)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(236, 23%, 12%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🌿 Mocha&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;/th&gt; &#xA;    &lt;th&gt;Labels&lt;/th&gt; &#xA;    &lt;th&gt;Hex&lt;/th&gt; &#xA;    &lt;th&gt;RGG&lt;/th&gt; &#xA;    &lt;th&gt;HSL&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_rosewater.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rosewater&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5e0dc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 224, 220)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(10, 56%, 91%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_flamingo.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Flamingo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f2cdcd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(242, 205, 205)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(0, 59%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_pink.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Pink&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f5c2e7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(245, 194, 231)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(316, 72%, 86%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_mauve.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mauve&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#cba6f7&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(203, 166, 247)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(267, 84%, 81%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_red.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Red&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f38ba8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(243, 139, 168)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(343, 81%, 75%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_maroon.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Maroon&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#eba0ac&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(235, 160, 172)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(350, 65%, 77%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_peach.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Peach&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#fab387&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(250, 179, 135)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(23, 92%, 75%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_yellow.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Yellow&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#f9e2af&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(249, 226, 175)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(41, 86%, 83%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_green.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Green&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6e3a1&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 227, 161)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(115, 54%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_teal.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Teal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#94e2d5&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(148, 226, 213)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(170, 57%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_sky.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sky&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#89dceb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(137, 220, 235)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(189, 71%, 73%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_sapphire.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Sapphire&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#74c7ec&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(116, 199, 236)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(199, 76%, 69%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_blue.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Blue&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#89b4fa&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(137, 180, 250)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(217, 92%, 76%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_lavender.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lavender&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#b4befe&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(180, 190, 254)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(232, 97%, 85%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_text.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#cdd6f4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(205, 214, 244)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(226, 64%, 88%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_subtext1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#bac2de&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(186, 194, 222)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(227, 35%, 80%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_subtext0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Subtext0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#a6adc8&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(166, 173, 200)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 24%, 72%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_overlay2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#9399b2&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(147, 153, 178)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(228, 17%, 64%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_overlay1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#7f849c&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(127, 132, 156)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(230, 13%, 55%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_overlay0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Overlay0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#6c7086&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(108, 112, 134)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(231, 11%, 47%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_surface2.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface2&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#585b70&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(88, 91, 112)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(233, 12%, 39%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_surface1.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface1&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#45475a&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(69, 71, 90)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(234, 13%, 31%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_surface0.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Surface0&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#313244&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(49, 50, 68)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(237, 16%, 23%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_base.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Base&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#1e1e2e&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(30, 30, 46)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(240, 21%, 15%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_mantle.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Mantle&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#181825&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(24, 24, 37)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(240, 21%, 12%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/palette/circles/mocha_crust.png&#34; height=&#34;23&#34; width=&#34;23&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Crust&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;#11111b&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;rgb(17, 17, 27)&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;hsl(240, 23%, 9%)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;🪵 Ports and more!&lt;/h3&gt; &#xA;&lt;p&gt;Catppuccin is available for various apps and in different formats. Here is a list of them:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: recently &lt;a href=&#34;https://github.com/catppuccin/catppuccin/releases/tag/v0.2.0&#34;&gt;Ctp v0.2.0&lt;/a&gt; was released and thus most of the ports need to be updated. Please refer to &lt;a href=&#34;https://github.com/orgs/catppuccin/projects/2&#34;&gt;this&lt;/a&gt; Kanban project to check out the progress made so far.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;IDEs/DEs&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/nvim&#34;&gt;Nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/vscode&#34;&gt;Vscode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/sublime-text&#34;&gt;Sublime-text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/emacs&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/jetbrains&#34;&gt;Jetbrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/geany&#34;&gt;Geany&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/micro&#34;&gt;Micro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/vim&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/helix&#34;&gt;Helix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/kakoune&#34;&gt;Kakoune&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Development&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/template&#34;&gt;Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/wallpapers&#34;&gt;Wallpapers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/palette&#34;&gt;Palette&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/toolbox&#34;&gt;Toolbox&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;System&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/xresources&#34;&gt;Xresources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/cava&#34;&gt;Cava&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/gtk&#34;&gt;Gtk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/btop&#34;&gt;Btop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/mako&#34;&gt;Mako&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/kde&#34;&gt;Kde&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/grub&#34;&gt;Grub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/sddm&#34;&gt;Sddm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/rofi&#34;&gt;Rofi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/plank&#34;&gt;Plank&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/lxqt&#34;&gt;Lxqt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/floris-board&#34;&gt;Floris-board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/cursors&#34;&gt;Cursors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/dunst&#34;&gt;Dunst&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/papirus-folders&#34;&gt;Papirus-folders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/alfred&#34;&gt;Alfred&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/fzf&#34;&gt;Fzf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/conky&#34;&gt;Conky&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Shells&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/fish&#34;&gt;Fish&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Productivity&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/zathura&#34;&gt;Zathura&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/github&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Leisure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/spicetify&#34;&gt;Spicetify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/spotify-player&#34;&gt;spotify-player&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Browsers&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/duckduckgo&#34;&gt;Duckduckgo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/firefox&#34;&gt;Firefox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/vimium&#34;&gt;Vimium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/chrome&#34;&gt;Chrome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/whoogle&#34;&gt;Whoogle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/dark-reader&#34;&gt;Dark-reader&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Messaging&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/telegram&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/revolt&#34;&gt;Revolt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/discord&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Note-taking&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/obsidian&#34;&gt;Obsidian&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Terminals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/alacritty&#34;&gt;Alacritty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/st&#34;&gt;St&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/hyper&#34;&gt;Hyper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/iterm&#34;&gt;Iterm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/urxvt&#34;&gt;Urxvt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/gnome-terminal&#34;&gt;Gnome-terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/terminator&#34;&gt;Terminator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/kitty&#34;&gt;Kitty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/tmux&#34;&gt;Tmux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/termux&#34;&gt;Termux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/konsole&#34;&gt;Konsole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/xfce4-terminal&#34;&gt;Xfce4-terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/windows-terminal&#34;&gt;Windows-terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/contour&#34;&gt;Contour&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/wezterm&#34;&gt;Wezterm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/tym&#34;&gt;Tym&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/fcitx5&#34;&gt;Fcitx5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/zellij&#34;&gt;Zellij&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/foot&#34;&gt;Foot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Social&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/libreddit&#34;&gt;Libreddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/monkeytype&#34;&gt;Monkeytype&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/youtube&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/mailspring&#34;&gt;Mailspring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/Aliucord&#34;&gt;Aliucord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/github-readme-stats&#34;&gt;Github-readme-stats&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;👐 Contribute&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;📜 License&lt;/h3&gt; &#xA;&lt;p&gt;Catppuccin is released under the MIT license, which grants the following permissions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commercial use&lt;/li&gt; &#xA; &lt;li&gt;Distribution&lt;/li&gt; &#xA; &lt;li&gt;Modification&lt;/li&gt; &#xA; &lt;li&gt;Private use&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more convoluted language, see the &lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;❤️ Gratitude&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the following tools developing this project is possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolors.co/&#34;&gt;coolors.co&lt;/a&gt;: A tool for creating and collecting color palettes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://inkscape.org/&#34;&gt;InkScape&lt;/a&gt;: Free and open-source vector graphics editor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/colors/colors_converter.asp&#34;&gt;colors_converter.asp&lt;/a&gt;: Color format converter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mdigi.tools/&#34;&gt;mdigi.tools&lt;/a&gt;: Web based digital tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/footers/gray0_ctp_on_line.svg?sanitize=true&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Copyright © 2021-present &lt;a href=&#34;https://github.com/catppuccin&#34; target=&#34;_blank&#34;&gt;Catppuccin Org&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/catppuccin/catppuccin/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?style=for-the-badge&amp;amp;label=License&amp;amp;message=MIT&amp;amp;logoColor=d9e0ee&amp;amp;colorA=302d41&amp;amp;colorB=c9cbff&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-dev-containers</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/microsoft/vscode-dev-containers</id>
    <link href="https://github.com/microsoft/vscode-dev-containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository of development container definitions for the VS Code Remote - Containers extension and GitHub Codespaces&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VS Code Remote / GitHub Codespaces Container Definitions&lt;/h1&gt; &#xA;&lt;table style=&#34;width: 100%; border-style: none;&#34;&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width: 140px; text-align: center;&#34;&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/download/extension&#34;&gt;&lt;img width=&#34;128px&#34; src=&#34;https://microsoft.github.io/vscode-remote-release/images/remote-extensionpack.png&#34; alt=&#34;Visual Studio Code logo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Visual Studio Code Remote Development and GitHub Codespaces&lt;/strong&gt;&lt;br&gt; &lt;i&gt;Open your code in the cloud, in a local container, on a remote machine, or in WSL and take advantage of VS Code&#39;s full feature set. &lt;/i&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. The &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;VS Code Remote - Containers&lt;/a&gt; extension and &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; allow you to open or clone code in a local or cloud-hosted dev container and take advantage of VS Code&#39;s full development feature set.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains a set of &lt;strong&gt;dev container definitions&lt;/strong&gt; to help get you up and running with a containerized environment. The definitions describe the appropriate container image, runtime arguments for starting the container, and VS Code extensions that should be installed. Each provides a container configuration file (&lt;code&gt;devcontainer.json&lt;/code&gt;) and other needed files that you can drop into any existing folder as a starting point for containerizing your project. You can use the the &lt;strong&gt;Add Development Container Configuration Files...&lt;/strong&gt; command to add one to your project or codespace.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; repositories may also be of interest if you are looking for complete sample projects.&lt;/p&gt; &#xA;&lt;h2&gt;Adding a definition to a project or codespace&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Either &lt;a href=&#34;https://aka.ms/ghcs-open-codespace&#34;&gt;create a codespace for your repository&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;set up your local machine&lt;/a&gt; for use with the Remote - Containers extension, start VS Code, and open your project folder.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt;, and select the &lt;strong&gt;Add Development Container Configuration Files...&lt;/strong&gt; command for &lt;strong&gt;Remote-Containers&lt;/strong&gt; or &lt;strong&gt;Codespaces&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Pick one of the recommended definitions from the list or select &lt;strong&gt;Show All Definitions...&lt;/strong&gt; to see all of them. You may need to choose the &lt;strong&gt;From a predefined container configuration definition...&lt;/strong&gt; option if your project has an existing Dockerfile or Docker Compose file. Answer any questions that appear.&lt;/li&gt; &#xA; &lt;li&gt;See the definition&#39;s &lt;code&gt;README&lt;/code&gt; for configuration options. A link is available in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file added to your folder.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;strong&gt;Remote-Containers: Reopen in Container&lt;/strong&gt; to use it locally, or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; from within a codespace.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding a definition to a repository&lt;/h3&gt; &#xA;&lt;p&gt;You can share a customized dev container definition for your project by adding the files under &lt;code&gt;.devcontainer&lt;/code&gt; to source control.&lt;/p&gt; &#xA;&lt;p&gt;Anyone who then opens a local copy of your repo in VS Code will be prompted to reopen the folder in a container, provided they have the &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;Remote - Containers&lt;/a&gt; extension installed. Additionally, this will be used whenever someone creates a codespace in &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; for the repository.&lt;/p&gt; &#xA;&lt;p&gt;Your team now has a consistent environment and tool-chain and new contributors or team members can be productive quickly. First-time contributors will require less guidance and there will be fewer issues related to environment setup.&lt;/p&gt; &#xA;&lt;h2&gt;Sample projects&lt;/h2&gt; &#xA;&lt;p&gt;If you want to try a sample project which already has a dev container, check out one of the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-node&#34;&gt;Node Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-python&#34;&gt;Python Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-go&#34;&gt;Go Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-java&#34;&gt;Java Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-dotnetcore&#34;&gt;.NET Core Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-rust&#34;&gt;Rust Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-cpp&#34;&gt;C++ Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-php&#34;&gt;PHP Sample&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/containers&#34;&gt;&lt;code&gt;containers&lt;/code&gt;&lt;/a&gt; - Contains reusable dev container definitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library&#34;&gt;&lt;code&gt;script-library&lt;/code&gt;&lt;/a&gt; - Includes scripts used in this repository to install things. Also useful in your own Dockerfiles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/container-templates&#34;&gt;&lt;code&gt;container-templates&lt;/code&gt;&lt;/a&gt; - Contains templates for creating your own container definitions or to &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#contributing-dev-container-definitions&#34;&gt;contribute back&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Can I just reuse an existing container image or Docker / Docker Compose configuration?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! If you have a Dockerfile or Docker Compose file in your project/repository, follow the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/#adding&#34;&gt;same steps to add a definition&lt;/a&gt; and you&#39;ll be prompted to select a Dockerfile or Docker Compose file and customize from there. If you then commit these files to a Git repository, you can use it with &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; as well. If you prefer, you can also start up the container manually and &lt;a href=&#34;https://aka.ms/vscode-remote/containers/attach&#34;&gt;attach to it&lt;/a&gt;. However, note that many images will be missing things like &lt;code&gt;git&lt;/code&gt; that you will want to use. There are scripts in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library&#34;&gt;script-library&lt;/a&gt; like the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library/docs/common.md&#34;&gt;common script&lt;/a&gt; that can help adding these to your existing Dockerfile or image.&lt;/p&gt; &#xA;&lt;h3&gt;What is the goal of &lt;code&gt;devcontainer.json&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;devcontainer.json&lt;/code&gt; file is similar to &lt;code&gt;launch.json&lt;/code&gt; for debugging, but designed to launch (or attach to) a development container instead. At its simplest, all you need is a &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file in your project that references an image, &lt;code&gt;Dockerfile&lt;/code&gt;, or &lt;code&gt;docker-compose.yml&lt;/code&gt;, and a few properties. You can &lt;a href=&#34;https://aka.ms/vscode-remote/containers/folder-setup&#34;&gt;adapt it for use&lt;/a&gt; in a wide variety of situations.&lt;/p&gt; &#xA;&lt;h3&gt;Why do Dockerfiles in this repo use &lt;code&gt;RUN&lt;/code&gt; statements with commands separated by &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;Each &lt;code&gt;RUN&lt;/code&gt; statement creates a Docker image &#34;layer&#34;. If one &lt;code&gt;RUN&lt;/code&gt; statement adds temporary contents, these contents remain in this layer in the image even if they are deleted in a subsequent &lt;code&gt;RUN&lt;/code&gt;. This means the image takes more storage locally and results in slower image download times if you publish the image to a registry. You can resolve this problem by using a &lt;code&gt;RUN&lt;/code&gt; statement that includes any clean up steps (separated by &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) after a given operation. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#why-do-dockerfiles-in-this-repository-use-run-statements-with-commands-separated-by-&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more tips.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing and feedback&lt;/h2&gt; &#xA;&lt;p&gt;Have a question or feedback?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contribute or provide feedback for the &lt;a href=&#34;https://github.com/Microsoft/vscode-remote-release/raw/main/CONTRIBUTING.md&#34;&gt;VS Code Remote&lt;/a&gt; extensions or &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/codespaces-feedback&#34;&gt;GitHub Codespaces&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Search &lt;a href=&#34;https://github.com/Microsoft/vscode-dev-containers/issues&#34;&gt;existing issues&lt;/a&gt; with dev container definitions or &lt;a href=&#34;https://github.com/Microsoft/vscode-dev-containers/issues/new&#34;&gt;report a problem&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Contribute a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#contributing-dev-container-definitions&#34;&gt;development container definition&lt;/a&gt; to the repository.&lt;/li&gt; &#xA; &lt;li&gt;Review and file issues to shape the direction of development containers and the dev container CLI in the &lt;a href=&#34;https://github.com/microsoft/dev-container-spec&#34;&gt;dev container spec repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved. &lt;br&gt; Licensed under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For images generated from this repository, see &lt;a href=&#34;https://github.com/microsoft/containerregistry/raw/main/legal/Container-Images-Legal-Notice.md&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/NOTICE.txt&#34;&gt;NOTICE.txt&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kiddin9/OpenWrt_x86-r2s-r4s-N1</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/kiddin9/OpenWrt_x86-r2s-r4s-N1</id>
    <link href="https://github.com/kiddin9/OpenWrt_x86-r2s-r4s-N1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatic unattended weekly builds of the current OpenWrt development master branch for X86/64, NanoPi R2S, NanoPi R4S, NanoPi R2C, Phicomm N1, NanoPi NEO3, 树莓派 4B, DoorNet1, DoorNet2, 香橙派 Orange Pi R1 Plus, 香橙派 Orange Pi R1 Plus LTS, 红米AX6, 小米AX3600, 小米AX9000, 红米AX6S/小米AX3200, 红米AC2100, 小米AC2100, 小米CR6606/TR606(联通版), CR6608/TR608(移动版), CR6609/T…&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;OpenWrt with NGINX for X86/64, NanoPi R2S, NanoPi R4S, NanoPi R2C, Phicomm N1, NanoPi NEO3, 树莓派 4B, DoorNet1, DoorNet2, 香橙派 Orange Pi R1 Plus, 香橙派 Orange Pi R1 Plus LTS, 红米AX6, 小米AX3600, 小米AX9000, 红米AX6S/小米AX3200, 红米AC2100, 小米AC2100, 小米CR6606/TR606(联通版), CR6608/TR608(移动版), CR6609/TR609(电信版), 小米4, 小米 R3G, 小米R3P, 小娱C5, newifi-d2, H1 Box, 贝壳云 P1 , 我家云 lL Pro, x96 Max, 微加云 V-Plus, 章鱼星球 ZYXQ, GT-King, Odroid N2, MXQ Pro+&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kiddin9/OpenWrt_x86-r2s-r4s-N1/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLV2-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kiddin9/OpenWrt_x86-r2s-r4s.svg?style=flat-square&amp;amp;label=Stars&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/kiddin9/OpenWrt_x86-r2s-r4s.svg?style=flat-square&amp;amp;label=Forks&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/issues/new&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Issues-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;Issue Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/actions&#34;&gt;&lt;img src=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/actions/workflows/Openwrt-AutoBuild.yml/badge.svg?sanitize=true&#34; alt=&#34;AutoBuild&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/opwrts&#34; target=&#34;_blank&#34;&gt;Telegram&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. &lt;strong&gt;特色&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Cutting edge,openwrt官方openwrt-22.03分支版本, Kernel 5.15, 与官方最新源码同步.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;原生极致纯净,固件默认只包含基础上网功能, 后台在线选装插件,系统升级不丢失插件和配置.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自建插件仓库囊括了市面上几乎所有开源插件,插件库日更,系统自动更新所有已安装插件.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在线一键定制固件,可在&lt;a href=&#34;https://supes.top&#34;&gt;supes.top&lt;/a&gt;也可在后台系统定制升级菜单中一键定制, 同时支持github云编译和本地一键编译.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台一键OTA更新固件,省去了每次固件升级都需要找固件,下载固件,上传固件等繁琐操作.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台一键设置旁路由,一键开关IPv6.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持在线安装Kmod内核模块.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重构版SSR-PLUS,国内外智能DNS解析,支持DOH,Trojan-Go等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;替换 Uhttpd 为 Nginx, 支持 反向代理; WebDAV等诸多玩法.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;性能,友好度,易用性,插件,以及针对国内特殊环境等的自定义优化, 开箱即用&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自定制清爽Material风格新主题Edge&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. &lt;strong&gt;固件&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;固件生成有3种方式：在线定制化生成、GitHub编译、本地化编译。&lt;/p&gt; &#xA;&lt;p&gt;可根据需要选择任意一种进行固件生成。&lt;/p&gt; &#xA;&lt;h3&gt;2.1 &lt;strong&gt;在线生成&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;通过浏览器访问&lt;a href=&#34;https://supes.top&#34;&gt;https://supes.top&lt;/a&gt;进行固件定制，等待固件生成结束之后直接下载使用即可。&lt;/p&gt; &#xA;&lt;h3&gt;2.2 &lt;strong&gt;GitHub编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;将仓库进行fork&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按需添加相关环境参数REPO_TOKEN、SCKEY、TELEGRAM_CHAT_ID&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Actions页面选择 Repo Dispatcher 点击 Run workflow&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.3 &lt;strong&gt;GitHub结合浏览器插件编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;请在支持油猴的浏览器中安装 &lt;a href=&#34;https://greasyfork.org/scripts/407616-github-actions-trigger/code/Github%20Actions%20Trigger.user.js&#34;&gt;脚本&lt;/a&gt; ,仓库右上角会出现 x86_64 Actions,K2P Actions等按钮,点击对应按钮即可.更多玩法 &lt;a href=&#34;https://github.com/tete1030/github-repo-dispatcher&#34;&gt;repo-dispatcher&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.4 &lt;strong&gt;本地化编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;注意：&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;不&lt;/strong&gt;要用 &lt;strong&gt;root&lt;/strong&gt; 用户 git 和编译！！！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;国内用户编译前请准备好梯子,使用大陆白名单或全局模式&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;请使用Ubuntu 64bit，推荐 Ubuntu 18 或 Ubuntu 20&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;首次编译:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -S openwrt&#xA;bash -c &#34;$(curl -fsSL https://git.io/opbuild.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;二次编译:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -S openwrt&#xA;bash -c &#34;$(curl -fsSL https://git.io/rebuild.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. &lt;strong&gt;使用&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;3.1 &lt;strong&gt;后台&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;登录地址 op/ 或 10.0.0.1 (若后台无法打开，请尝试插拔交换wan、lan网线顺序。)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认用户 root&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认密码 root&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.2 &lt;strong&gt;快捷访问&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;部分服务需要先自行在软件包中安装并启用，可自行在 /etc/nginx/conf.d/shortcuts.conf 中调整和添加更多快捷访问。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;op/ 可打开 OpenWRT后台 即 lan ip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ql/ 可打开 青龙后台 即 lan ip:5700&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;adg/ 可打开 AdGuardHome管理后台 即 lan ip:3000&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pve/ 可打开 Proxmox VE虚拟机管理 默认为 10.0.0.10:8006&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;by/ 可打开 Bypass插件页面 即 ip/luci/admin/services/bypass&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pk/ 可打开 Packages插件管理页面 即 ip/luci/admin/system/opkg&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ag/ 可打开 Aria2 Web面板 即 ip/ariang&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ug/ 可打开 固件在线更新页面 即 ip/luci/admin/services/gpsysupgrade&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. &lt;strong&gt;注意事项&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;第一次使用请采用全新安装,避免出现升级失败以及其他一些可能的Bug.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;云编译需要 &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;在此&lt;/a&gt; 创建个token,然后在此仓库Settings-&amp;gt;Secrets中添加个名字为REPO_TOKEN的Secret,填入token值,否者无法触发编译。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中分别添加 PPPOE_USERNAME, PPPOE_PASSWD 可设置默认拨号账号密码.有 &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/issues/23&#34;&gt;安全隐患&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中添加 SCKEY 可通过&lt;a href=&#34;http://sc.ftqq.com&#34;&gt;Server酱&lt;/a&gt; 推送编译结果到微信。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中添加 TELEGRAM_CHAT_ID, TELEGRAM_TOKEN 可推送编译结果到Telegram Bot. &lt;a href=&#34;https://longnight.github.io/2018/12/12/Telegram-Bot-notifications&#34;&gt;教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DIY云编译教程参考: &lt;a href=&#34;https://p3terx.com/archives/build-openwrt-with-github-actions.html&#34;&gt;Read the details in my blog (in Chinese) | 中文教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认插件包含: Opkg 软件包管理、Bypass 智能过墙、Samba4 文件共享(x86)、UPNP 自动端口转发、Turbo ACC 网络加速。 其他插件请自行在 后台-&amp;gt;软件包 中安装,系统升级不会丢失插件.每次系统升级完成连接网络后,会自动安装所有已自选安装的插件。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. &lt;strong&gt;系统截图展示&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/3.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For English&lt;/p&gt; &#xA;&lt;p&gt;Build OpenWrt using GitHub Actions&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for &lt;a href=&#34;https://github.com/features/actions/signup&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fork &lt;a href=&#34;https://github.com/kiddin9/OpenWrt&#34;&gt;this GitHub repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;click the &lt;code&gt;Star&lt;/code&gt; button, and the build will starts automatically.Progress can be viewed on the Actions page.&lt;/li&gt; &#xA; &lt;li&gt;When the build is complete, click the &lt;code&gt;Artifacts&lt;/code&gt; button in the upper right corner of the Actions page to download the binaries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/openwrt&#34;&gt;OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;Lean&#39;s OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P3TERX/Actions-OpenWrt/raw/master/LICENSE&#34;&gt;P3TERX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/asu&#34;&gt;aparcar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Boos4721/openwrt&#34;&gt;Boos4721&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>internetwache/GitTools</title>
    <updated>2022-06-01T02:21:36Z</updated>
    <id>tag:github.com,2022-06-01:/internetwache/GitTools</id>
    <link href="https://github.com/internetwache/GitTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository with 3 tools for pwn&#39;ing websites with .git repositories available&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/internetwache/GitTools/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/internetwache/GitTools.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/internetwache/GitTools/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/internetwache/GitTools.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;GitTools&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains three small python/bash scripts used for the Git research. &lt;a href=&#34;https://en.internetwache.org/dont-publicly-expose-git-or-how-we-downloaded-your-websites-sourcecode-an-analysis-of-alexas-1m-28-07-2015/&#34;&gt;Read about it here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Finder&lt;/h2&gt; &#xA;&lt;p&gt;You can use this tool to find websites with their .git repository available to the public&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;This python script identifies websites with publicly accessible &lt;code&gt;.git&lt;/code&gt; repositories. It checks if the &lt;code&gt;.git/HEAD&lt;/code&gt; file contains &lt;code&gt;refs/heads&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./gitfinder.py -h&#xA;&#xA;###########&#xA;# Finder is part of https://github.com/internetwache/GitTools&#xA;#&#xA;# Developed and maintained by @gehaxelt from @internetwache&#xA;#&#xA;# Use at your own risk. Usage might be illegal in certain circumstances.&#xA;# Only for educational purposes!&#xA;###########&#xA;&#xA;usage: gitfinder.py [-h] [-i INPUTFILE] [-o OUTPUTFILE] [-t THREADS]&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  -i INPUTFILE, --inputfile INPUTFILE&#xA;                        input file&#xA;  -o OUTPUTFILE, --outputfile OUTPUTFILE&#xA;                        output file&#xA;  -t THREADS, --threads THREADS&#xA;                        threads&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The input file should contain the targets one per line. The script will output discovered domains in the form of &lt;code&gt;[*] Found: DOMAIN&lt;/code&gt; to stdout.&lt;/p&gt; &#xA;&lt;h4&gt;Scanning Alexa’s Top 1M&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget http://s3.amazonaws.com/alexa-static/top-1m.csv.zip&#xA;unzip top-1m.csv.zip&#xA;sed -i.bak &#39;s/.*,//&#39; top-1m.csv&#xA;./gitfinder.py -i top-1m.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dumper&lt;/h2&gt; &#xA;&lt;p&gt;This tool can be used to download as much as possible from the found .git repository from webservers which do not have directory listing enabled.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./gitdumper.sh -h&#xA;&#xA;[*] USAGE: http://target.tld/.git/ dest-dir [--git-dir=otherdir]&#xA;&#x9;&#x9;--git-dir=otherdir&#x9;&#x9;Change the git folder name. Default: .git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: This tool has no 100% guaranty to completely recover the .git repository. Especially if the repository has been compressed into &lt;code&gt;pack&lt;/code&gt;-files, it may fail.&lt;/p&gt; &#xA;&lt;h2&gt;Extractor&lt;/h2&gt; &#xA;&lt;p&gt;A small bash script to extract commits and their content from a broken repository.&lt;/p&gt; &#xA;&lt;p&gt;This script tries to recover incomplete git repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Iterate through all commit-objects of a repository&lt;/li&gt; &#xA; &lt;li&gt;Try to restore the contents of the commit&lt;/li&gt; &#xA; &lt;li&gt;Commits are &lt;em&gt;not&lt;/em&gt; sorted by date&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./extractor.sh /tmp/mygitrepo /tmp/mygitrepodump&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/tmp/mygitrepo&lt;/code&gt; contains a &lt;code&gt;.git&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/tmp/mygitrepodump&lt;/code&gt; is the destination directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This can be used in combination with the &lt;code&gt;Git Dumper&lt;/code&gt; in case the downloaded repository is incomplete.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a small demo of the &lt;strong&gt;Dumper&lt;/strong&gt; tool:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/24072&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/24072.png&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Proxy support&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;urllib&lt;/code&gt; and &lt;code&gt;curl&lt;/code&gt; should support proxy configuration through environment variables:&lt;/p&gt; &#xA;&lt;p&gt;In bash, set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export HTTP_PROXY=http://proxy_url:proxy_port&#xA;export HTTPS_PROXY=http://proxy_url:proxy_port&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Window&#39;s CMD, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;set HTTP_PROXY=http://proxy_url:proxy_port&#xA;set HTTPS_PROXY=http://proxy_url:proxy_port&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Basic auth should be supported with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://username:password@proxy_url:proxy_port&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;Python 3+&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;bash&lt;/li&gt; &#xA; &lt;li&gt;sed&lt;/li&gt; &#xA; &lt;li&gt;binutils (strings)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;All tools are licensed using the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/internetwache/GitTools/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>