<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-07T01:49:43Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pterodactyl-installer/pterodactyl-installer</title>
    <updated>2024-07-07T01:49:43Z</updated>
    <id>tag:github.com,2024-07-07:/pterodactyl-installer/pterodactyl-installer</id>
    <link href="https://github.com/pterodactyl-installer/pterodactyl-installer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üê¶ Unofficial installation scripts for Pterodactyl Panel&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;üê¶&lt;/span&gt; pterodactyl-installer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pterodactyl-installer/pterodactyl-installer/actions/workflows/panel.yml/badge.svg?sanitize=true&#34; alt=&#34;Test Panel&#34;&gt; &lt;img src=&#34;https://github.com/pterodactyl-installer/pterodactyl-installer/actions/workflows/wings.yml/badge.svg?sanitize=true&#34; alt=&#34;Test Wings&#34;&gt; &lt;img src=&#34;https://github.com/pterodactyl-installer/pterodactyl-installer/actions/workflows/shellcheck.yml/badge.svg?sanitize=true&#34; alt=&#34;Shellcheck&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pterodactyl-installer/pterodactyl-installer/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pterodactyl-installer/pterodactyl-installer&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pterodactyl-installer.se/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/682342331206074373?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Made%20with%20Bash-1f425f.svg?logo=image%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyZpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw%2FeHBhY2tldCBiZWdpbj0i77u%2FIiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8%2BIDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTExIDc5LjE1ODMyNSwgMjAxNS8wOS8xMC0wMToxMDoyMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTUgKFdpbmRvd3MpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkE3MDg2QTAyQUZCMzExRTVBMkQxRDMzMkJDMUQ4RDk3IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkE3MDg2QTAzQUZCMzExRTVBMkQxRDMzMkJDMUQ4RDk3Ij4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTcwODZBMDBBRkIzMTFFNUEyRDFEMzMyQkMxRDhEOTciIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6QTcwODZBMDFBRkIzMTFFNUEyRDFEMzMyQkMxRDhEOTciLz4gPC9yZGY6RGVzY3JpcHRpb24%2BIDwvcmRmOlJERj4gPC94OnhtcG1ldGE%2BIDw%2FeHBhY2tldCBlbmQ9InIiPz6lm45hAAADkklEQVR42qyVa0yTVxzGn7d9Wy03MS2ii8s%2BeokYNQSVhCzOjXZOFNF4jx%2BMRmPUMEUEqVG36jo2thizLSQSMd4N8ZoQ8RKjJtooaCpK6ZoCtRXKpRempbTv5ey83bhkAUphz8fznvP8znn%2B%2F3NeEEJgNBoRRSmz0ub%2FfuxEacBg%2FDmYtiCjgo5NG2mBXq%2BH5I1ogMRk9Zbd%2BQU2e1ML6VPLOyf5tvBQ8yT1lG10imxsABm7SLs898GTpyYynEzP60hO3trHDKvMigUwdeaceacqzp7nOI4n0SSIIjl36ao4Z356OV07fSQAk6xJ3XGg%2BLCr1d1OYlVHp4eUHPnerU79ZA%2F1kuv1JQMAg%2BE4O2P23EumF3VkvHprsZKMzKwbRUXFEyTvSIEmTVbrysp%2BWr8wfQHGK6WChVa3bKUmdWou%2BjpArdGkzZ41c1zG%2Fu5uGH4swzd561F%2BuhIT4%2BLnSuPsv9%2BJKIpjNr9dXYOyk7%2FBZrcjIT4eCnoKgedJP4BEqhG77E3NKP31FO7cfQA5K0dSYuLgz2TwCWJSOBzG6crzKK%2BohNfni%2Bx6OMUMMNe%2Fgf7ocbw0v0acKg6J8Ql0q%2BT%2FAXR5PNi5dz9c71upuQqCKFAD%2BYhrZLEAmpodaHO3Qy6TI3NhBpbrshGtOWKOSMYwYGQM8nJzoFJNxP2HjyIQho4PewK6hBktoDcUwtIln4PjOWzflQ%2Be5yl0yCCYgYikTclGlxadio%2BBQCSiW1UXoVGrKYwH4RgMrjU1HAB4vR6LzWYfFUCKxfS8Ftk5qxHoCUQAUkRJaSEokkV6Y%2F%2BJUOC4hn6A39NVXVBYeNP8piH6HeA4fPbpdBQV5KOx0QaL1YppX3Jgk0TwH2Vg6S3u%2BdB91%2B%2FpuNYPYFl5uP5V7ZqvsrX7jxqMXR6ff3gCQSTzFI0a1TX3wIs8ul%2Bq4HuWAAiM39vhOuR1O1fQ2gT%2F26Z8Z5vrl2OHi9OXZn995nLV9aFfS6UC9JeJPfuK0NBohWpCHMSAAsFe74WWP%2BvT25wtP9Bpob6uGqqyDnOtaeumjRu%2ByFu36VntK%2FPA5umTJeUtPWZSU9BCgud661odVp3DZtkc7AnYR33RRC708PrVi1larW7XwZIjLnd7R6SgSqWSNjU1B3F72pz5TZbXmX5vV81Yb7Lg7XT%2FUXriu8XLVqw6c6XqWnBKiiYU%2BMt3wWF7u7i91XlSEITwSAZ%2FCzAAHsJVbwXYFFEAAAAASUVORK5CYII%3D&#34; alt=&#34;made-with-bash&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unofficial scripts for installing Pterodactyl Panel &amp;amp; Wings. Works with the latest version of Pterodactyl!&lt;/p&gt; &#xA;&lt;p&gt;Read more about &lt;a href=&#34;https://pterodactyl.io/&#34;&gt;Pterodactyl&lt;/a&gt; here. This script is not associated with the official Pterodactyl Project.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic installation of the Pterodactyl Panel (dependencies, database, cronjob, nginx).&lt;/li&gt; &#xA; &lt;li&gt;Automatic installation of the Pterodactyl Wings (Docker, systemd).&lt;/li&gt; &#xA; &lt;li&gt;Panel: (optional) automatic configuration of Let&#39;s Encrypt.&lt;/li&gt; &#xA; &lt;li&gt;Panel: (optional) automatic configuration of firewall.&lt;/li&gt; &#xA; &lt;li&gt;Uninstallation support for both panel and wings.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help and support&lt;/h2&gt; &#xA;&lt;p&gt;For help and support regarding the script itself and &lt;strong&gt;not the official Pterodactyl project&lt;/strong&gt;, you can join the &lt;a href=&#34;https://pterodactyl-installer.se/discord&#34;&gt;Discord Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported installations&lt;/h2&gt; &#xA;&lt;p&gt;List of supported installation setups for panel and Wings (installations supported by this installation script).&lt;/p&gt; &#xA;&lt;h3&gt;Supported panel and wings operating systems&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operating System&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Supported&lt;/th&gt; &#xA;   &lt;th&gt;PHP Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;14.04&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;16.04&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt; *&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;18.04&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt; *&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;20.04&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;22.04&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;24.04&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt; *&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt; *&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CentOS&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt; *&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;üî¥&lt;/span&gt; *&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rocky Linux&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AlmaLinux&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;‚úÖ&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;* Indicates an operating system and release that previously was supported by this script.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using the installation scripts&lt;/h2&gt; &#xA;&lt;p&gt;To use the installation scripts, simply run this command as root. The script will ask you whether you would like to install just the panel, just Wings or both.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(curl -s https://pterodactyl-installer.se)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: On some systems, it&#39;s required to be already logged in as root before executing the one-line command (where &lt;code&gt;sudo&lt;/code&gt; is in front of the command does not work).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is a &lt;a href=&#34;https://www.youtube.com/watch?v=E8UJhyUFoHM&#34;&gt;YouTube video&lt;/a&gt; that illustrates the installation process.&lt;/p&gt; &#xA;&lt;h2&gt;Firewall setup&lt;/h2&gt; &#xA;&lt;p&gt;The installation scripts can install and configure a firewall for you. The script will ask whether you want this or not. It is highly recommended to opt-in for the automatic firewall setup.&lt;/p&gt; &#xA;&lt;h2&gt;Development &amp;amp; Ops&lt;/h2&gt; &#xA;&lt;h3&gt;Testing the script locally&lt;/h3&gt; &#xA;&lt;p&gt;To test the script, we use &lt;a href=&#34;https://www.vagrantup.com&#34;&gt;Vagrant&lt;/a&gt;. With Vagrant, you can quickly get a fresh machine up and running to test the script.&lt;/p&gt; &#xA;&lt;p&gt;If you want to test the script on all supported installations in one go, just run the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you only want to test a specific distribution, you can run the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vagrant up &amp;lt;name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace name with one of the following (supported installations).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu_jammy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu_focal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debian_bullseye&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debian_buster&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debian_bookworm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;almalinux_8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;almalinux_9&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rockylinux_8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rockylinux_9&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then you can use &lt;code&gt;vagrant ssh &amp;lt;name of machine&amp;gt;&lt;/code&gt; to SSH into the box. The project directory will be mounted in &lt;code&gt;/vagrant&lt;/code&gt; so you can quickly modify the script locally and then test the changes by running the script from &lt;code&gt;/vagrant/installers/panel.sh&lt;/code&gt; and &lt;code&gt;/vagrant/installers/wings.sh&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a release&lt;/h3&gt; &#xA;&lt;p&gt;In &lt;code&gt;install.sh&lt;/code&gt; github source and script release variables should change every release. Firstly, update the &lt;code&gt;CHANGELOG.md&lt;/code&gt; so that the release date and release tag are both displayed. No changes should be made to the changelog points themselves. Secondly, update &lt;code&gt;GITHUB_SOURCE&lt;/code&gt; and &lt;code&gt;SCRIPT_RELEASE&lt;/code&gt; in &lt;code&gt;install.sh&lt;/code&gt;. Finally, you can now push a commit with the message &lt;code&gt;Release vX.Y.Z&lt;/code&gt;. Create a release on GitHub. See &lt;a href=&#34;https://github.com/pterodactyl-installer/pterodactyl-installer/commit/90aaae10785f1032fdf90b216a4a8d8ca64e6d44&#34;&gt;this commit&lt;/a&gt; for reference.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2018 - 2024, Vilhelm Prytz, &lt;a href=&#34;mailto:vilhelm@prytznet.se&#34;&gt;vilhelm@prytznet.se&lt;/a&gt;, and contributors!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Created by &lt;a href=&#34;https://github.com/vilhelmprytz&#34;&gt;Vilhelm Prytz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Maintained by &lt;a href=&#34;https://github.com/Linux123123&#34;&gt;Linux123123&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks to the Discord moderators &lt;a href=&#34;https://github.com/sam1370&#34;&gt;sam1370&lt;/a&gt;, &lt;a href=&#34;https://github.com/Linux123123&#34;&gt;Linux123123&lt;/a&gt; and &lt;a href=&#34;https://github.com/sinjs&#34;&gt;sinjs&lt;/a&gt; for helping on the Discord server! contributors&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>super-linter/super-linter</title>
    <updated>2024-07-07T01:49:43Z</updated>
    <id>tag:github.com,2024-07-07:/super-linter/super-linter</id>
    <link href="https://github.com/super-linter/super-linter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Combination of multiple linters to run as a GitHub Action or standalone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Super-Linter&lt;/h1&gt; &#xA;&lt;p&gt;Super-linter is a ready-to-run collection of linters and code analyzers, to help validate your source code.&lt;/p&gt; &#xA;&lt;p&gt;The goal of super-linter is to help you establish best practices and consistent formatting across multiple programming languages, and ensure developers are adhering to those conventions.&lt;/p&gt; &#xA;&lt;p&gt;Super-linter analyzes source code files using several tools, and reports the issues that those tools find as console output, and as &lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks&#34;&gt;GitHub Actions status checks&lt;/a&gt;. You can also &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/#run-super-linter-outside-github-actions&#34;&gt;run super-linter outside GitHub Actions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Super-linter is licensed under a &lt;a href=&#34;https://github.com/super-linter/super-linter/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marketplace/actions/super-linter&#34;&gt;&lt;img src=&#34;https://github.com/super-linter/super-linter/actions/workflows/cd.yml/badge.svg?sanitize=true&#34; alt=&#34;Super-Linter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here are some notable Super-linter features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;MIT License&lt;/strong&gt;: Super-linter is licensed under a &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independent project&lt;/strong&gt;: Super-linter is maintained by a team of independent developers and is not commercially backed by any entity that might influence the course of the project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Widely used&lt;/strong&gt;: Super-linter is the &lt;a href=&#34;https://github.com/super-linter/super-linter/network/dependents&#34;&gt;most widely used&lt;/a&gt; and &lt;a href=&#34;https://github.com/super-linter/super-linter/forks&#34;&gt;forked&lt;/a&gt; project of this kind.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Runs linters in parallel&lt;/strong&gt;: Since &lt;code&gt;v6&lt;/code&gt;, Super-linter parallelizes running all the included linters, leading to scanning massive code repositories in seconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly curated set of linters&lt;/strong&gt;: Avoid including linters that implement overlapping checks, reducing bloat, scanning times, and container image size.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run on GitHub Actions or other environments&lt;/strong&gt;: Super-linter runs &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/#get-started&#34;&gt;on GitHub Actions&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/#run-using-a-container-runtime-engine&#34;&gt;other runtime environments&lt;/a&gt;, with the only dependency of an OCI-compatible container runtime engine, such as Docker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lean codebase&lt;/strong&gt;: Super-linter doesn&#39;t reinvent the wheel, and builds on top of established tools and standards, such as &lt;a href=&#34;https://www.gnu.org/software/parallel/&#34;&gt;GNU Parallel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensive test suite&lt;/strong&gt;: Super-linter includes and extensive test suite that covers every single linter and analyzer that Super-linter ships.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Original design&lt;/strong&gt;: to the best of our knowledge, Super-linter is the first open-source, fully-containerized linting suite. Other projects borrow ideas and design choices from Super-linter (and we&#39;re cool with that :).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported linters and code analyzers&lt;/h2&gt; &#xA;&lt;p&gt;Super-linter supports the following tools:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;em&gt;Language&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;Linter&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ansible&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ansible/ansible-lint&#34;&gt;ansible-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AWS CloudFormation templates&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aws-cloudformation/cfn-python-lint/&#34;&gt;cfn-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Azure Resource Manager (ARM)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/azure/arm-ttk&#34;&gt;arm-ttk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cpplint/cpplint&#34;&gt;cpp-lint&lt;/a&gt; / &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/format&#34;&gt;dotnet format&lt;/a&gt; / &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://stylelint.io/&#34;&gt;stylelint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/borkdude/clj-kondo&#34;&gt;clj-kondo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CoffeeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coffeelint.github.io/&#34;&gt;coffeelint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Copy/paste detection&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kucherenko/jscpd&#34;&gt;jscpd&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dart&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dart.dev/guides/language/analysis-options&#34;&gt;dartanalyzer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;hadolint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EditorConfig&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/editorconfig-checker/editorconfig-checker&#34;&gt;editorconfig-checker&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ENV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotenv-linter/dotenv-linter&#34;&gt;dotenv-linter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Gherkin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vsiakka/gherkin-lint&#34;&gt;gherkin-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GitHub Actions&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rhysd/actionlint&#34;&gt;actionlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Golang&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;&gt;golangci-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GoReleaser&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser&#34;&gt;GoReleaser&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Groovy&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvuillam/npm-groovy-lint&#34;&gt;npm-groovy-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/htmlhint/HTMLHint&#34;&gt;HTMLHint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://checkstyle.org&#34;&gt;checkstyle&lt;/a&gt; / &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;google-java-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; / &lt;a href=&#34;https://standardjs.com/&#34;&gt;standard js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-json&#34;&gt;eslint-plugin-json&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSONC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-jsonc&#34;&gt;eslint-plugin-jsonc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infrastructure as code&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.checkov.io/&#34;&gt;Checkov&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yannh/kubeconform&#34;&gt;kubeconform&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LaTeX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nongnu.org/chktex/&#34;&gt;ChkTex&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Lua&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/luarocks/luacheck&#34;&gt;luacheck&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#readme&#34;&gt;markdownlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Natural language&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://textlint.github.io/&#34;&gt;textlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OpenAPI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/stoplightio/spectral&#34;&gt;spectral&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic&#34;&gt;perlcritic&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.php.net/manual/en/features.commandline.options.php&#34;&gt;PHP built-in linter&lt;/a&gt; / &lt;a href=&#34;https://github.com/PHPCSStandards/PHP_CodeSniffer&#34;&gt;PHP CodeSniffer&lt;/a&gt; / &lt;a href=&#34;https://phpstan.org/&#34;&gt;PHPStan&lt;/a&gt; / &lt;a href=&#34;https://psalm.dev/&#34;&gt;Psalm&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PowerShell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/Psscriptanalyzer&#34;&gt;PSScriptAnalyzer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Protocol Buffers&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yoheimuta/protolint&#34;&gt;protolint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pylint.pycqa.org/&#34;&gt;pylint&lt;/a&gt; / &lt;a href=&#34;https://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt; / &lt;a href=&#34;https://github.com/psf/black&#34;&gt;black&lt;/a&gt; / &lt;a href=&#34;https://pypi.org/project/isort/&#34;&gt;isort&lt;/a&gt; / &lt;a href=&#34;https://github.com/astral-sh/ruff&#34;&gt;ruff&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jimhester/lintr&#34;&gt;lintr&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Raku&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raku.org&#34;&gt;Raku&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Renovate&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.renovatebot.com/config-validation/&#34;&gt;renovate-config-validator&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rubocop-hq/rubocop&#34;&gt;RuboCop&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rust-lang/rustfmt&#34;&gt;Rustfmt&lt;/a&gt; / &lt;a href=&#34;https://github.com/rust-lang/rust-clippy&#34;&gt;Clippy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Scala&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/scalameta/scalafmt&#34;&gt;scalafmt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zricethezav/gitleaks&#34;&gt;GitLeaks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Shell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;ShellCheck&lt;/a&gt; / &lt;code&gt;executable bit check&lt;/code&gt; / &lt;a href=&#34;https://github.com/mvdan/sh&#34;&gt;shfmt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Snakemake&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/snakemake/snakefmt/&#34;&gt;snakefmt&lt;/a&gt; / &lt;a href=&#34;https://snakemake.readthedocs.io/en/stable/snakefiles/writing_snakefiles.html#best-practices&#34;&gt;snakemake --lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/joereynolds/sql-lint&#34;&gt;sql-lint&lt;/a&gt; / &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff&#34;&gt;sqlfluff&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Tekton&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/IBM/tekton-lint&#34;&gt;tekton-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developer.hashicorp.com/terraform/cli/commands/fmt&#34;&gt;fmt&lt;/a&gt; / &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;tflint&lt;/a&gt; / &lt;a href=&#34;https://github.com/accurics/terrascan&#34;&gt;terrascan&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terragrunt&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;terragrunt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; / &lt;a href=&#34;https://standardjs.com/&#34;&gt;standard js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://xmlsoft.org/&#34;&gt;LibXML&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/adrienverge/yamllint&#34;&gt;YamlLint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;More in-depth &lt;a href=&#34;https://www.youtube.com/watch?v=EDAmFKO4Zt0&amp;amp;t=118s&#34;&gt;tutorial&lt;/a&gt; available&lt;/p&gt; &#xA;&lt;p&gt;To run super-linter as a GitHub Action, you do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/about-workflows#about-workflows&#34;&gt;GitHub Actions workflow&lt;/a&gt; in your repository with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;name: Lint&#xA;&#xA;on:  # yamllint disable-line rule:truthy&#xA;  push: null&#xA;  pull_request: null&#xA;&#xA;permissions: { }&#xA;&#xA;jobs:&#xA;  build:&#xA;    name: Lint&#xA;    runs-on: ubuntu-latest&#xA;&#xA;    permissions:&#xA;      contents: read&#xA;      packages: read&#xA;      # To report GitHub Actions status checks&#xA;      statuses: write&#xA;&#xA;    steps:&#xA;      - name: Checkout code&#xA;        uses: actions/checkout@v4&#xA;        with:&#xA;          # super-linter needs the full git history to get the&#xA;          # list of files that changed across commits&#xA;          fetch-depth: 0&#xA;&#xA;      - name: Super-linter&#xA;        uses: super-linter/super-linter@v6.6.0  # x-release-please-version&#xA;        env:&#xA;          # To report GitHub Actions status checks&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commit that file to a new branch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push the new commit to the remote repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new pull request to observe the results.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Upgrade to newer super-linter versions&lt;/h2&gt; &#xA;&lt;p&gt;For more information about upgrading super-linter to a new major version, see the &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/docs/upgrade-guide.md&#34;&gt;upgrade guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Add Super-Linter badge in your repository readme&lt;/h2&gt; &#xA;&lt;p&gt;You can show Super-Linter status with a badge in your repository readme:&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![Super-Linter](https://github.com/&amp;lt;OWNER&amp;gt;/&amp;lt;REPOSITORY&amp;gt;/actions/workflows/&amp;lt;WORKFLOW_FILE_NAME&amp;gt;/badge.svg)](https://github.com/marketplace/actions/super-linter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/adding-a-workflow-status-badge&#34;&gt;Adding a workflow status badge&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Super-linter variants&lt;/h2&gt; &#xA;&lt;p&gt;Super-Linter provides several variants:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;standard&lt;/code&gt;: &lt;code&gt;super-linter/super-linter@[VERSION]&lt;/code&gt;: includes all supported linters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;slim&lt;/code&gt;: &lt;code&gt;super-linter/super-linter/slim@[VERSION]&lt;/code&gt;: includes all supported linters except:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;rust&lt;/code&gt; linters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;dotenv&lt;/code&gt; linters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;armttk&lt;/code&gt; linters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;pwsh&lt;/code&gt; linters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;c#&lt;/code&gt; linters&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configure super-linter&lt;/h2&gt; &#xA;&lt;p&gt;You can configure super-linter using the following environment variables:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Environment variable&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Default Value&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ansible-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://ansible.readthedocs.io/projects/lint/configuring/&#34;&gt;Ansible-lint configuration&lt;/a&gt; (ex: &lt;code&gt;.ansible-lint&lt;/code&gt;, &lt;code&gt;.ansible-lint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_DIRECTORY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/ansible&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the root directory for Ansible file location(s), relative to &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;. Set to &lt;code&gt;.&lt;/code&gt; to use the top-level of the &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;BASH_EXEC_IGNORE_LIBRARIES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, shell files with a file extension and no shebang line are ignored when checking if the executable bit is set.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;BASH_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.shellcheckrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/koalaman/shellcheck/raw/master/shellcheck.1.md#rc-files&#34;&gt;Shellcheck&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;BASH_SEVERITY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify the minimum severity of errors to consider in shellcheck. Valid values in order of severity are error, warning, info and style.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CHECKOV_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.checkov.yaml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configuration filename for Checkov.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CLANG_FORMAT_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.clang-format&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configuration filename for &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CREATE_LOG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, it creates the log file. You can set the log filename using the &lt;code&gt;LOG_FILE&lt;/code&gt; environment variable. This overrides any existing log files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CSS_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.stylelintrc.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/stylelint/stylelint&#34;&gt;Stylelint configuration&lt;/a&gt; (ex: &lt;code&gt;.stylelintrc.yml&lt;/code&gt;, &lt;code&gt;.stylelintrc.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEFAULT_BRANCH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Default repository branch when running on GitHub Actions, &lt;code&gt;master&lt;/code&gt; otherwise&lt;/td&gt; &#xA;   &lt;td&gt;The name of the repository default branch. There&#39;s no need to configure this variable when running on GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEFAULT_WORKSPACE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/tmp/lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The location containing files to lint if you are running locally. Defaults to &lt;code&gt;GITHUB_WORKSPACE&lt;/code&gt; when running in GitHub Actions. There&#39;s no need to configure this variable when running on GitHub Actions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DISABLE_ERRORS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to have the linter complete with exit code 0 even if errors were detected.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DOCKERFILE_HADOLINT_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.hadolint.yaml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;hadolint configuration&lt;/a&gt; (ex: &lt;code&gt;.hadolintlintrc.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EDITORCONFIG_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ecrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/editorconfig-checker/editorconfig-checker&#34;&gt;editorconfig-checker configuration&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ENABLE_GITHUB_ACTIONS_GROUP_TITLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt; if &lt;code&gt;RUN_LOCAL=true&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; otherwise&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#grouping-log-lines&#34;&gt;GitHub Actions log grouping&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FILTER_REGEX_EXCLUDE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;not set&lt;/td&gt; &#xA;   &lt;td&gt;Regular expression defining which files will be excluded from linting (ex: &lt;code&gt;.*src/test.*&lt;/code&gt;). Not setting this variable means to process all files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FILTER_REGEX_INCLUDE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;not set&lt;/td&gt; &#xA;   &lt;td&gt;Regular expression defining which files will be processed by linters (ex: &lt;code&gt;.*src/.*&lt;/code&gt;). Not setting this variable means to process all files. &lt;code&gt;FILTER_REGEX_INCLUDE&lt;/code&gt; is evaluated before &lt;code&gt;FILTER_REGEX_EXCLUDE&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_ACTIONS_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;actionlint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/rhysd/actionlint/raw/main/docs/config.md&#34;&gt;Actionlint configuration&lt;/a&gt; (ex: &lt;code&gt;actionlint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_ACTIONS_COMMAND_ARGS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments passed to &lt;code&gt;actionlint&lt;/code&gt; command. Useful to &lt;a href=&#34;https://github.com/rhysd/actionlint/raw/main/docs/usage.md#ignore-some-errors&#34;&gt;ignore some errors&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_CUSTOM_API_URL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.${GITHUB_DOMAIN}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub API URL in case GitHub Enterprise is used: e.g. &lt;code&gt;https://github.myenterprise.com/api/v3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_CUSTOM_SERVER_URL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://${GITHUB_DOMAIN}&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub server URL. Useful for GitHub Enterprise instances.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_DOMAIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;github.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub domain in case GitHub Enterprise is used: e.g. &lt;code&gt;github.myenterprise.com&lt;/code&gt;. &lt;code&gt;GITHUB_DOMAIN&lt;/code&gt; is a convenience configuration variable to automatically build &lt;code&gt;GITHUB_CUSTOM_API_URL&lt;/code&gt; and &lt;code&gt;GITHUB_CUSTOM_SERVER_URL&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITLEAKS_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.gitleaks.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/zricethezav/gitleaks#configuration&#34;&gt;GitLeaks configuration&lt;/a&gt; (ex: &lt;code&gt;.gitleaks.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IGNORE_GENERATED_FILES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will ignore all the files with &lt;code&gt;@generated&lt;/code&gt; marker but without &lt;code&gt;@not-generated&lt;/code&gt; marker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IGNORE_GITIGNORED_FILES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will ignore all the files that are ignored by Git.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVA_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sun_checks.xml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://checkstyle.sourceforge.io/config.html&#34;&gt;Checkstyle configuration&lt;/a&gt;. Checkstyle embeds several configuration files, such as &lt;code&gt;sun_checks.xml&lt;/code&gt;, &lt;code&gt;google_checks.xml&lt;/code&gt; that you can use without providing your own configuration file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVASCRIPT_DEFAULT_STYLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the default style of JavaScript. Available options: &lt;strong&gt;standard&lt;/strong&gt;/&lt;strong&gt;prettier&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVASCRIPT_ES_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.eslintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring#configuration-file-formats&#34;&gt;ESLint configuration&lt;/a&gt; (ex: &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSCPD_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.jscpd.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for JSCPD configuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;KUBERNETES_KUBECONFORM_OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments to pass to the command-line when running &lt;strong&gt;Kubernetes Kubeconform&lt;/strong&gt; (Example: --ignore-missing-schemas)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LINTER_RULES_PATH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.github/linters&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directory for all linter configuration rules.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LOG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;super-linter.log&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The filename for outputting logs. All output is sent to the log file regardless of &lt;code&gt;LOG_LEVEL&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LOG_LEVEL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;INFO&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How much output the script will generate to the console. One of &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;NOTICE&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, or &lt;code&gt;DEBUG&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MARKDOWN_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.markdown-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/DavidAnson/markdownlint#optionsconfig&#34;&gt;Markdownlint configuration&lt;/a&gt; (ex: &lt;code&gt;.markdown-lint.yml&lt;/code&gt;, &lt;code&gt;.markdownlint.json&lt;/code&gt;, &lt;code&gt;.markdownlint.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MARKDOWN_CUSTOM_RULE_GLOBS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.markdown-lint/rules,rules/**&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated list of &lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#globbing&#34;&gt;file globs&lt;/a&gt; matching &lt;a href=&#34;https://github.com/DavidAnson/markdownlint/raw/main/doc/CustomRules.md&#34;&gt;custom Markdownlint rule files&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MULTI_STATUS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A status API is made for each language that is linted to make visual parsing easier.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;NATURAL_LANGUAGE_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.textlintrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://textlint.github.io/docs/getting-started.html#configuration&#34;&gt;textlint configuration&lt;/a&gt; (ex: &lt;code&gt;.textlintrc&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PERL_PERLCRITIC_OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments to pass to the command-line when running &lt;strong&gt;perlcritic&lt;/strong&gt; (Example: --theme community)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POWERSHELL_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.powershell-psscriptanalyzer.psd1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://learn.microsoft.com/en-gb/powershell/utility-modules/psscriptanalyzer/using-scriptanalyzer&#34;&gt;PSScriptAnalyzer configuration&lt;/a&gt; (ex: &lt;code&gt;.powershell-psscriptanalyzer.psd1&lt;/code&gt;, &lt;code&gt;PSScriptAnalyzerSettings.psd1&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;php.ini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://www.php.net/manual/en/configuration.file.php&#34;&gt;PHP Configuration&lt;/a&gt; (ex: &lt;code&gt;php.ini&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP_PHPCS_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;phpcs.xml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP CodeSniffer&lt;/a&gt; (ex: &lt;code&gt;.phpcs.xml&lt;/code&gt;, &lt;code&gt;.phpcs.xml.dist&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PROTOBUF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.protolintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/yoheimuta/protolint/raw/master/_example/config/.protolint.yaml&#34;&gt;protolint configuration&lt;/a&gt; (ex: &lt;code&gt;.protolintrc.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_BLACK_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.python-black&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/psf/black/raw/main/docs/guides/using_black_with_other_tools.md#black-compatible-configurations&#34;&gt;black configuration&lt;/a&gt; (ex: &lt;code&gt;.isort.cfg&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_FLAKE8_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.flake8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://flake8.pycqa.org/en/latest/user/configuration.html&#34;&gt;flake8 configuration&lt;/a&gt; (ex: &lt;code&gt;.flake8&lt;/code&gt;, &lt;code&gt;tox.ini&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_ISORT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.isort.cfg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://pycqa.github.io/isort/docs/configuration/config_files.html&#34;&gt;isort configuration&lt;/a&gt; (ex: &lt;code&gt;.isort.cfg&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_MYPY_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.mypy.ini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/config_file.html&#34;&gt;mypy configuration&lt;/a&gt; (ex: &lt;code&gt;.mypy.ini&lt;/code&gt;, &lt;code&gt;setup.config&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_PYLINT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.python-lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://pylint.pycqa.org/en/latest/user_guide/run.html?highlight=rcfile#command-line-options&#34;&gt;pylint configuration&lt;/a&gt; (ex: &lt;code&gt;.python-lint&lt;/code&gt;, &lt;code&gt;.pylintrc&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_RUFF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ruff.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.astral.sh/ruff/configuration/&#34;&gt;ruff configuration&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;RENOVATE_SHAREABLE_CONFIG_PRESET_FILE_NAMES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;not set&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated filenames for &lt;a href=&#34;https://docs.renovatebot.com/config-presets/&#34;&gt;renovate shareable config preset&lt;/a&gt; (ex: &lt;code&gt;default.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;RUBY_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ruby-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.rubocop.org/rubocop/configuration.html&#34;&gt;rubocop configuration&lt;/a&gt; (ex: &lt;code&gt;.ruby-lint.yml&lt;/code&gt;, &lt;code&gt;.rubocop.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SAVE_SUPER_LINTER_OUTPUT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will save its output to &lt;code&gt;${DEFAULT_WORKSPACE}/${SUPER_LINTER_OUTPUT_DIRECTORY_NAME}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SCALAFMT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.scalafmt.conf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://scalameta.org/scalafmt/docs/configuration.html&#34;&gt;scalafmt configuration&lt;/a&gt; (ex: &lt;code&gt;.scalafmt.conf&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SNAKEMAKE_SNAKEFMT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.snakefmt.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/snakemake/snakefmt#configuration&#34;&gt;Snakemake configuration&lt;/a&gt; (ex: &lt;code&gt;pyproject.toml&lt;/code&gt;, &lt;code&gt;.snakefmt.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSL_CERT_SECRET&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL cert to add to the &lt;strong&gt;Super-Linter&lt;/strong&gt; trust store. This is needed for users on &lt;code&gt;self-hosted&lt;/code&gt; runners or need to inject the cert for security standards (ex. ${{ secrets.SSL_CERT }})&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_KEY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSH key that has access to your private repositories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_SETUP_GITHUB&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, adds the &lt;code&gt;github.com&lt;/code&gt; SSH key to &lt;code&gt;known_hosts&lt;/code&gt;. This is ignored if &lt;code&gt;SSH_KEY&lt;/code&gt; is provided - i.e. the &lt;code&gt;github.com&lt;/code&gt; SSH key is always added if &lt;code&gt;SSH_KEY&lt;/code&gt; is provided&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_INSECURE_NO_VERIFY_GITHUB_KEY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;INSECURE -&lt;/strong&gt; If set to &lt;code&gt;true&lt;/code&gt;, does not verify the fingerprint of the github.com SSH key before adding this. This is not recommended!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQL_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.sql-config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://sql-lint.readthedocs.io/en/latest/files/configuration.html&#34;&gt;SQL-Lint configuration&lt;/a&gt; (ex: &lt;code&gt;sql-config.json&lt;/code&gt; , &lt;code&gt;.config.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQLFLUFF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/.sqlfluff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/configuration.html&#34;&gt;SQLFLUFF configuration&lt;/a&gt; (ex: &lt;code&gt;/.sqlfluff&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPER_LINTER_OUTPUT_DIRECTORY_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;super-linter-output&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Name of the directory where super-linter saves its output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPPRESS_FILE_TYPE_WARN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will hide warning messages about files without their proper extensions. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPPRESS_POSSUM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will hide the ASCII possum at top of log output. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TERRAFORM_TERRASCAN_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/accurics/terrascan&#34;&gt;terrascan configuration&lt;/a&gt; (ex: &lt;code&gt;terrascan.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TERRAFORM_TFLINT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.tflint.hcl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;tfLint configuration&lt;/a&gt; (ex: &lt;code&gt;.tflint.hcl&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_DEFAULT_STYLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ts-standard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the default style of TypeScript. Available options: &lt;strong&gt;ts-standard&lt;/strong&gt;/&lt;strong&gt;prettier&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_ES_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.eslintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring#configuration-file-formats&#34;&gt;ESLint configuration&lt;/a&gt; (ex: &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_STANDARD_TSCONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;${DEFAULT_WORKSPACE}/tsconfig.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&#34;&gt;TypeScript project configuration&lt;/a&gt; in &lt;a href=&#34;https://github.com/standard/ts-standard&#34;&gt;ts-standard&lt;/a&gt;. The path is relative to &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;USE_FIND_ALGORITHM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;By default, we use &lt;code&gt;git diff&lt;/code&gt; to find all files in the workspace and what has been updated, this would enable the Linux &lt;code&gt;find&lt;/code&gt; method instead to find all files to lint&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ALL_CODEBASE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Will parse the entire repository and find all files to validate across all types. &lt;strong&gt;NOTE:&lt;/strong&gt; When set to &lt;code&gt;false&lt;/code&gt;, only &lt;strong&gt;new&lt;/strong&gt; or &lt;strong&gt;edited&lt;/strong&gt; files will be parsed for validation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ANSIBLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Ansible language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ARM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the ARM language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_BASH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Bash language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_BASH_EXEC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Bash language to validate if file is stored as executable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CPP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C++ language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CHECKOV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process with Checkov&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLANG_FORMAT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C++/C language with clang-format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLOJURE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Clojure language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLOUDFORMATION&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the AWS Cloud Formation language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_COFFEESCRIPT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the CoffeeScript language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CSHARP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C# language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CSS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the CSS language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_DART&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Dart language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_DOCKERFILE_HADOLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Docker language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_EDITORCONFIG&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process with the EditorConfig.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ENV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the ENV language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GHERKIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Gherkin language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GITHUB_ACTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the GitHub Actions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GITLEAKS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the secrets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GO&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the individual Golang files. Set this to &lt;code&gt;false&lt;/code&gt; if you want to lint Go modules. See the &lt;code&gt;VALIDATE_GO_MODULES&lt;/code&gt; variable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GO_MODULES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Go modules. Super-linter considers a directory to be a Go module if it contains a file named &lt;code&gt;go.mod&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GO_RELEASER&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the GoReleaser config file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GOOGLE_JAVA_FORMAT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Java language. (Utilizing: google-java-format)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GROOVY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_HTML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the HTML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Java language. (Utilizing: checkstyle)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVASCRIPT_ES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JavaScript language. (Utilizing: ESLint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVASCRIPT_STANDARD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JavaScript language. (Utilizing: standard)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSCPD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable JSCPD.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JSON language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSONC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JSONC and JSON5 languages.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for jsx files (Utilizing: ESLint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KOTLIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Kotlin language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KUBERNETES_KUBECONFORM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Kubernetes descriptors with Kubeconform&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_LATEX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the LaTeX language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_LUA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_MARKDOWN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Markdown language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_NATURAL_LANGUAGE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the natural language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_OPENAPI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the OpenAPI language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PERL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Perl language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter) (keep for backward compatibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_BUILTIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PHPCS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP CodeSniffer)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PHPSTAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHPStan)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PSALM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PSalm)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_POWERSHELL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Powershell language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PROTOBUF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Protobuf language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: pylint) (keep for backward compatibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_BLACK&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_FLAKE8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: flake8)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_ISORT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: isort)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_MYPY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: mypy)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_PYLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: pylint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_RUFF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: ruff)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_R&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the R language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RAKU&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Raku language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RENOVATE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Renovate configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUBY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Ruby language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2015&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Rust language. (edition: 2015)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2018&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Rust language. (edition: 2018)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2021&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Rust language. (edition: 2021)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_CLIPPY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the clippy linting process of Rust language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SCALAFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Scala language. (Utilizing: scalafmt --test)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SHELL_SHFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Shell scripts. (Utilizing: shfmt)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SNAKEMAKE_LINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakemake --lint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SNAKEMAKE_SNAKEFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakefmt)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_STATES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for AWS States Language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SQL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the SQL language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SQLFLUFF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the SQL language. (Utilizing: sqlfuff)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TEKTON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Tekton language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_FMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the formatting process of the Terraform files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_TERRASCAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Terraform language for security related issues.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_TFLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Terraform language. (Utilizing tflint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAGRUNT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for Terragrunt files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for tsx files (Utilizing: ESLint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TYPESCRIPT_ES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ESLint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TYPESCRIPT_STANDARD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ts-standard)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_XML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the XML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_YAML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the YAML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.yaml-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://yamllint.readthedocs.io/en/stable/configuration.html&#34;&gt;Yamllint configuration&lt;/a&gt; (ex: &lt;code&gt;.yaml-lint.yml&lt;/code&gt;, &lt;code&gt;.yamllint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML_ERROR_ON_WARNING&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the error on warning for Yamllint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables work as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;super-linter runs all supported linters by default.&lt;/li&gt; &#xA; &lt;li&gt;If you set any of the &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables to &lt;code&gt;true&lt;/code&gt;, super-linter defaults to leaving any unset variable to false (only validate those languages).&lt;/li&gt; &#xA; &lt;li&gt;If you set any of the &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables to &lt;code&gt;false&lt;/code&gt;, super-linter defaults to leaving any unset variable to true (only exclude those languages).&lt;/li&gt; &#xA; &lt;li&gt;If you set any of the &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables to both &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, super-linter fails reporting an error.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information about reusing super-linter configuration across environments, see &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/docs/run-linter-locally.md#share-environment-variables-between-environments&#34;&gt;Share Environment variables between environments&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configure linters&lt;/h2&gt; &#xA;&lt;p&gt;Super-linter provides default configurations for some linters in the &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/TEMPLATES/&#34;&gt;&lt;code&gt;TEMPLATES/&lt;/code&gt;&lt;/a&gt; directory. You can customize the configuration for the linters that support this by placing your own configuration files in the &lt;code&gt;LINTER_RULES_PATH&lt;/code&gt; directory. &lt;code&gt;LINTER_RULES_PATH&lt;/code&gt; is relative to the &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Super-linter supports customizing the name of these configuration files. For more information, refer to &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/#configure-super-linter&#34;&gt;Configure super-linter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can configure super-linter to load configuration files from the &lt;code&gt;config/lint&lt;/code&gt; directory in your repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  env:&#xA;    LINTER_RULES_PATH: `config/lint`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some of the linters that super-linter provides can be configured to disable certain rules or checks, and to ignore certain files or part of them.&lt;/p&gt; &#xA;&lt;p&gt;For more information about how to configure each linter, review &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/#supported-linters-and-code-analyzers&#34;&gt;their own documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Include or exclude files from checks&lt;/h2&gt; &#xA;&lt;p&gt;If you need to include or exclude directories from being checked, you can use two environment variables: &lt;code&gt;FILTER_REGEX_INCLUDE&lt;/code&gt; and &lt;code&gt;FILTER_REGEX_EXCLUDE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lint only the &lt;code&gt;src&lt;/code&gt; folder: &lt;code&gt;FILTER_REGEX_INCLUDE: .*src/.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not lint files inside test folder: &lt;code&gt;FILTER_REGEX_EXCLUDE: .*test/.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not lint JavaScript files inside test folder: &lt;code&gt;FILTER_REGEX_EXCLUDE: .*test/.*.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- This `README.md` has both markers in the text, so it is considered not generated. --&gt; &#xA;&lt;p&gt;Additionally, if you set &lt;code&gt;IGNORE_GENERATED_FILES&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, super-linter ignores any file with &lt;code&gt;@generated&lt;/code&gt; string in it, unless the file also has &lt;code&gt;@not-generated&lt;/code&gt; marker. For example, super-linter considers a file with the following contents as generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh&#xA;echo &#34;@generated&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;while considers this file as not generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh&#xA;echo &#34;@generated&#34; # @not-generated&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you can set &lt;code&gt;IGNORE_GITIGNORED_FILES&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to ignore a file if Git ignores it too.&lt;/p&gt; &#xA;&lt;h2&gt;Run Super-Linter outside GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;You don&#39;t need GitHub Actions to run super-linter. It supports several runtime environments.&lt;/p&gt; &#xA;&lt;h3&gt;Run using a container runtime engine&lt;/h3&gt; &#xA;&lt;p&gt;You can run super-linter outside GitHub Actions. For example, you can run super-linter from a shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run \&#xA;  -e LOG_LEVEL=DEBUG \&#xA;  -e RUN_LOCAL=true \&#xA;  -v /path/to/local/codebase:/tmp/lint \&#xA;  ghcr.io/super-linter/super-linter:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://github.com/super-linter/super-linter/raw/main/docs/run-linter-locally.md&#34;&gt;Run super-linter outside GitHub Actions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Use your own SSH key and certificate&lt;/h2&gt; &#xA;&lt;p&gt;If you need to use your own SSH key to authenticate against private repositories, you can use the &lt;code&gt;SSH_KEY&lt;/code&gt; environment variable. The value of that environment variable is expected to be be the private key of an SSH keypair that has access to your private repositories.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can configure this private key as an &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;Encrypted Secret&lt;/a&gt; and access it with the &lt;code&gt;secrets&lt;/code&gt; parameter from your GitHub Actions workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  env:&#xA;    SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to inject a SSL certificate into the trust store, you can use the &lt;code&gt;SSL_CERT_SECRET&lt;/code&gt; variable. The value of that variable is expected to be the path to the files that contains a CA that can be used to valide the certificate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  env:&#xA;    SSL_CERT_SECRET: ${{ secrets.ROOT_CA }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Super-linter outputs&lt;/h2&gt; &#xA;&lt;p&gt;If you set &lt;code&gt;SAVE_SUPER_LINTER_OUTPUT&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, Super-linter saves its output to &lt;code&gt;${DEFAULT_WORKSPACE}/${DEFAULT_SUPER_LINTER_OUTPUT_DIRECTORY_NAME}&lt;/code&gt;, so you can further process it, if needed.&lt;/p&gt; &#xA;&lt;p&gt;Most outputs are in JSON format.&lt;/p&gt; &#xA;&lt;p&gt;The output of previous Super-linter runs is not preserved when running locally.&lt;/p&gt; &#xA;&lt;h2&gt;Linter reports and outputs&lt;/h2&gt; &#xA;&lt;p&gt;Some linters support configuring the format of their outputs for further processing. To get access to that output, enable it using the respective linter configuration file. If a linter requires a path for the output directory, you can use the value of the &lt;code&gt;${DEFAULT_WORKSPACE}&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;p&gt;If a linter doesn&#39;t support setting an arbitrary output path as described in the previous paragraph, but only supports emitting results to standard output or standard error streams, you can &lt;a href=&#34;https://raw.githubusercontent.com/super-linter/super-linter/main/#super-linter-outputs&#34;&gt;enable Super-linter outputs&lt;/a&gt; and parse them.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to help contribute to super-linter, see &lt;a href=&#34;https://github.com/super-linter/super-linter/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>