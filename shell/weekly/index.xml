<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-09T01:48:07Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nelvko/clash-for-linux-install</title>
    <updated>2025-03-09T01:48:07Z</updated>
    <id>tag:github.com,2025-03-09:/nelvko/clash-for-linux-install</id>
    <link href="https://github.com/nelvko/clash-for-linux-install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;😼 优雅地部署基于 clash/mihomo 的代理环境&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux 一键安装 Clash&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nelvko/clash-for-linux-install/master/resources/preview.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;默认安装 &lt;code&gt;mihomo&lt;/code&gt; 内核，&lt;a href=&#34;https://github.com/nelvko/clash-for-linux-install/wiki/FAQ#%E5%AE%89%E8%A3%85-clash-%E5%86%85%E6%A0%B8&#34;&gt;可选安装&lt;/a&gt; &lt;code&gt;clash&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;自动进行本地订阅转换。&lt;/li&gt; &#xA; &lt;li&gt;多架构支持，适配主流 &lt;code&gt;Linux&lt;/code&gt; 发行版：&lt;code&gt;CentOS 7.6&lt;/code&gt;、&lt;code&gt;Debian 12&lt;/code&gt;、&lt;code&gt;Ubuntu 24.04.1 LTS&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;环境要求&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;需要 &lt;code&gt;root&lt;/code&gt; 或 &lt;code&gt;sudo&lt;/code&gt; 权限。&lt;/li&gt; &#xA; &lt;li&gt;具备 &lt;code&gt;bash&lt;/code&gt; 和 &lt;code&gt;systemd&lt;/code&gt; 的系统环境。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;一键安装&lt;/h3&gt; &#xA;&lt;p&gt;下述命令适用于 &lt;code&gt;x86_64&lt;/code&gt; 架构，其他架构请戳：&lt;a href=&#34;https://github.com/nelvko/clash-for-linux-install/wiki#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85-%E5%A4%9A%E6%9E%B6%E6%9E%84&#34;&gt;一键安装-多架构&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --branch master --depth 1 https://gh-proxy.com/https://github.com/nelvko/clash-for-linux-install.git \&#xA;  &amp;amp;&amp;amp; cd clash-for-linux-install \&#xA;  &amp;amp;&amp;amp; sudo bash -c &#39;. install.sh; exec bash&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如遇问题，请在查阅&lt;a href=&#34;https://github.com/nelvko/clash-for-linux-install/wiki/FAQ&#34;&gt;常见问题&lt;/a&gt;及 &lt;a href=&#34;https://github.com/nelvko/clash-for-linux-install/issues?q=is%3Aissue&#34;&gt;issue&lt;/a&gt; 未果后进行反馈。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;上述克隆命令使用了&lt;a href=&#34;https://gh-proxy.com/&#34;&gt;加速前缀&lt;/a&gt;，如失效请更换其他&lt;a href=&#34;https://ghproxy.link/&#34;&gt;可用链接&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;默认通过远程订阅获取配置进行安装，本地配置安装详见：&lt;a href=&#34;https://github.com/nelvko/clash-for-linux-install/issues/39&#34;&gt;issue#39&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;没有订阅？&lt;a href=&#34;https://%E6%AC%A1%E5%85%83.net/auth/register?code=oUbI&#34;&gt;click me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;验证是否连通外网：&lt;code&gt;wget www.google.com&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;命令一览&lt;/h3&gt; &#xA;&lt;p&gt;执行 &lt;code&gt;clash&lt;/code&gt; 列出开箱即用的快捷命令。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ clash&#xA;Usage:&#xA;    clash                    命令一览&#xA;    clashon                  开启代理&#xA;    clashoff                 关闭代理&#xA;    clashui                  面板地址&#xA;    clashstatus              内核状况&#xA;    clashtun     [on|off]    Tun 模式&#xA;    clashmixin   [-e|-r]     Mixin 配置&#xA;    clashsecret  [secret]    Web 密钥&#xA;    clashupdate  [auto|log]  更新订阅&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;开始使用&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ clashoff&#xA;😼 已关闭代理环境&#xA;&#xA;$ clashon&#xA;😼 已开启代理环境&#xA;&#xA;$ clashui&#xA;😼 Web 面板地址...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;原理：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;systemctl&lt;/code&gt; 控制 &lt;code&gt;clash&lt;/code&gt; 启停，并调整代理环境变量的值（http_proxy 等）。应用程序在发起网络请求时，会通过其指定的代理地址转发流量，不调整会造成：关闭代理但未卸载代理变量导致仍转发请求、开启代理后未设置代理地址导致请求不转发。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;clashon&lt;/code&gt; 等命令封装了上述流程。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;定时更新订阅&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ clashupdate https://example.com&#xA;👌 备份配置：/opt/clash/config.yaml.bak&#xA;🍃 下载成功：内核验证配置...&#xA;✅ [2025-02-23 22:45:23] 订阅更新成功：https://example.com&#xA;&#xA;$ clashupdate auto [url]&#xA;😼 定时任务设置成功&#xA;&#xA;$ clashupdate log&#xA;✅ [2025-02-23 22:45:23] 订阅更新成功：https://example.com&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;clashupdate&lt;/code&gt; 会记忆安装和更新成功时的订阅，后续执行无需再指定订阅 &lt;code&gt;url&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;可通过 &lt;code&gt;crontab -e&lt;/code&gt; 修改定时更新频率及订阅链接。&lt;/li&gt; &#xA; &lt;li&gt;通过配置文件进行更新：&lt;a href=&#34;https://github.com/nelvko/clash-for-linux-install/pull/24#issuecomment-2565054701&#34;&gt;pr#24&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web 控制台密钥&lt;/h3&gt; &#xA;&lt;p&gt;控制台密钥默认为空，若暴露到公网使用建议更新密钥。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ clashsecret 666&#xA;😼 密钥更新成功，已重启生效&#xA;&#xA;$ clashsecret&#xA;😼 当前密钥：666&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;Tun&lt;/code&gt; 模式&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ clashtun&#xA;😾 Tun 状态：关闭&#xA;&#xA;$ clashtun on&#xA;😼 Tun 模式已开启&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作用：实现本机及 &lt;code&gt;Docker&lt;/code&gt; 等容器的所有流量路由到 &lt;code&gt;clash&lt;/code&gt; 代理、DNS 劫持等。&lt;/li&gt; &#xA; &lt;li&gt;原理：&lt;a href=&#34;https://www.clashverge.dev/guide/term.html#tun&#34;&gt;clash-verge-rev&lt;/a&gt;、 &lt;a href=&#34;https://clash.wiki/premium/tun-device.html&#34;&gt;clash.wiki&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Mixin&lt;/code&gt; 配置&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ clashmixin&#xA;😼 查看 mixin 配置（less）&#xA;&#xA;$ clashmixin -e&#xA;😼 编辑 mixin 配置（vim）&#xA;&#xA;$ clashmixin -r&#xA;😼 查看 运行时 配置（less）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作用：用来存储自定义配置，防止更新订阅后覆盖丢失自定义配置内容。&lt;/li&gt; &#xA; &lt;li&gt;运行时配置是订阅配置和 &lt;code&gt;Mixin&lt;/code&gt; 配置的并集。&lt;/li&gt; &#xA; &lt;li&gt;相同配置项优先级：&lt;code&gt;Mixin&lt;/code&gt; 配置 &amp;gt; 订阅配置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;卸载&lt;/h3&gt; &#xA;&lt;p&gt;以下为通用命令，&lt;code&gt;root&lt;/code&gt; 用户可直接使用： &lt;code&gt;. uninstall.sh&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash -c &#39;. uninstall.sh; exec bash&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;引用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clash.wiki/&#34;&gt;Clash 知识库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.clash.la/releases/&#34;&gt;Clash 家族下载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://downloads.clash.wiki/ClashPremium/&#34;&gt;Clash Premium 2023.08.17&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MetaCubeX/mihomo&#34;&gt;mihomo v1.19.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter&#34;&gt;subconverter v0.9.0：本地订阅转换&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haishanh/yacd&#34;&gt;yacd v0.3.8：Web UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mikefarah/yq&#34;&gt;yq v4.45.1：处理 yaml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TrackRay&#34;&gt;@鑫哥&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特别声明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;编写本项目主要目的为学习和研究 &lt;code&gt;Shell&lt;/code&gt; 编程，不得将本项目中任何内容用于违反国家/地区/组织等的法律法规或相关规定的其他用途。&lt;/li&gt; &#xA; &lt;li&gt;本项目保留随时对免责声明进行补充或更改的权利，直接或间接使用本项目内容的个人或组织，视为接受本项目的特别声明。&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>bin456789/reinstall</title>
    <updated>2025-03-09T01:48:07Z</updated>
    <id>tag:github.com,2025-03-09:/bin456789/reinstall</id>
    <link href="https://github.com/bin456789/reinstall" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一键DD/重装脚本 (One-click reinstall OS on VPS)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;reinstall&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codacy.com/gh/bin456789/reinstall/dashboard&#34;&gt;&lt;img src=&#34;https://img.shields.io/codacy/grade/dc679a17751448628fe6d8ac35e26eed?logo=Codacy&amp;amp;label=Codacy&amp;amp;style=flat-square&#34; alt=&#34;Codacy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/bin456789/reinstall&#34;&gt;&lt;img src=&#34;https://img.shields.io/codefactor/grade/github/bin456789/reinstall?logo=CodeFactor&amp;amp;logoColor=white&amp;amp;label=CodeFactor&amp;amp;style=flat-square&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/XAMPPRocky/tokei&#34;&gt;&lt;img src=&#34;https://tokei.rs/b1/github/bin456789/reinstall?category=code&amp;amp;label=Lines%20of%20Code&amp;amp;style=flat-square&#34; alt=&#34;Lines of Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/reinstall_os&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=flat-square&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram Group&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/bin456789&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/sponsor-30363D?style=flat-square&amp;amp;logo=GitHub-Sponsors&amp;amp;logoColor=#EA4AAA&#34; alt=&#34;Github Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Lines of Code](https://aschey.tech/tokei/github/bin456789/reinstall?category=code&amp;label=Lines%20of%20Code&amp;style=flat-square)](https://github.com/aschey/vercel-tokei) --&gt; &#xA;&lt;p&gt;一键重装脚本 &lt;a href=&#34;https://raw.githubusercontent.com/bin456789/reinstall/main/README.en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/bin456789&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bin456789/sponsors/refs/heads/master/sponsors.svg?sanitize=true&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;亮点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一键安装 Linux，支持 19 种常见发行版&lt;/li&gt; &#xA; &lt;li&gt;一键安装 Windows，使用官方 ISO 安装而非自制镜像，&lt;del&gt;脚本会自动获取 ISO 链接&lt;/del&gt;、自动安装 Virtio 等常见驱动&lt;/li&gt; &#xA; &lt;li&gt;支持任意方向重装，即 &lt;code&gt;Linux to Linux&lt;/code&gt;、&lt;code&gt;Linux to Windows&lt;/code&gt;、&lt;code&gt;Windows to Windows&lt;/code&gt;、&lt;code&gt;Windows to Linux&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;无需填写 IP 参数，自动识别动静态，支持 &lt;code&gt;/32&lt;/code&gt;、&lt;code&gt;/128&lt;/code&gt;、&lt;code&gt;网关不在子网范围内&lt;/code&gt;、&lt;code&gt;纯 IPv6&lt;/code&gt;、&lt;code&gt;双网卡&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;专门适配低配小鸡，比官方 netboot 需要更少的内存&lt;/li&gt; &#xA; &lt;li&gt;全程用分区表 ID 识别硬盘，确保不会写错硬盘&lt;/li&gt; &#xA; &lt;li&gt;支持 BIOS、EFI 引导，支持 ARM 服务器&lt;/li&gt; &#xA; &lt;li&gt;不含自制包，所有资源均实时从镜像源获得&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;系统要求&lt;/h2&gt; &#xA;&lt;p&gt;原系统可以是表格中的任意系统&lt;/p&gt; &#xA;&lt;p&gt;目标系统的配置要求如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;系统&lt;/th&gt; &#xA;   &lt;th&gt;版本&lt;/th&gt; &#xA;   &lt;th&gt;内存&lt;/th&gt; &#xA;   &lt;th&gt;硬盘&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.alpinelinux.org/alpine-logo.ico&#34;&gt; Alpine&lt;/td&gt; &#xA;   &lt;td&gt;3.18, 3.19, 3.20, 3.21&lt;/td&gt; &#xA;   &lt;td&gt;256 MB&lt;/td&gt; &#xA;   &lt;td&gt;1 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.debian.org/favicon.ico&#34;&gt; Debian&lt;/td&gt; &#xA;   &lt;td&gt;9, 10, 11, 12&lt;/td&gt; &#xA;   &lt;td&gt;256 MB&lt;/td&gt; &#xA;   &lt;td&gt;1 ~ 1.5 GB ^&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://github.com/bin456789/reinstall/assets/7548515/f74b3d5b-085f-4df3-bcc9-8a9bd80bb16d&#34;&gt; Kali&lt;/td&gt; &#xA;   &lt;td&gt;滚动&lt;/td&gt; &#xA;   &lt;td&gt;256 MB&lt;/td&gt; &#xA;   &lt;td&gt;1 ~ 1.5 GB ^&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://canonical-subiquity.readthedocs-hosted.com/en/latest/_static/favicon.png&#34;&gt; Ubuntu&lt;/td&gt; &#xA;   &lt;td&gt;16.04 LTS - 24.04 LTS, 24.10&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;2 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://img.alicdn.com/imgextra/i1/O1CN01oJnJZg1yK4RzI4Rx2_!!6000000006559-2-tps-118-118.png&#34;&gt; Anolis&lt;/td&gt; &#xA;   &lt;td&gt;7, 8, 23&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.redhat.com/favicon.ico&#34;&gt; RHEL &amp;nbsp;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://almalinux.org/fav/favicon.ico&#34;&gt; AlmaLinux &amp;nbsp;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://rockylinux.org/favicon.png&#34;&gt; Rocky &amp;nbsp;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.oracle.com/asset/web/favicons/favicon-32.png&#34;&gt; Oracle&lt;/td&gt; &#xA;   &lt;td&gt;8, 9&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://opencloudos.org/qq.ico&#34;&gt; OpenCloudOS&lt;/td&gt; &#xA;   &lt;td&gt;8, 9, Stream 23&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.centos.org/assets/icons/favicon.svg?sanitize=true&#34;&gt; CentOS&lt;/td&gt; &#xA;   &lt;td&gt;9, 10&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://fedoraproject.org/favicon.ico&#34;&gt; Fedora&lt;/td&gt; &#xA;   &lt;td&gt;40, 41&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.openeuler.org/favicon.ico&#34;&gt; openEuler&lt;/td&gt; &#xA;   &lt;td&gt;20.03 LTS - 24.03 LTS, 24.09&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://static.opensuse.org/favicon.ico&#34;&gt; openSUSE&lt;/td&gt; &#xA;   &lt;td&gt;15.6, Tumbleweed (滚动)&lt;/td&gt; &#xA;   &lt;td&gt;512 MB *&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://github.com/user-attachments/assets/99a542b6-6482-4086-addf-f192c06fef73&#34;&gt; NixOS&lt;/td&gt; &#xA;   &lt;td&gt;24.11&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://archlinux.org/static/favicon.png&#34;&gt; Arch&lt;/td&gt; &#xA;   &lt;td&gt;滚动&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.gentoo.org/assets/img/logo/gentoo-g.png&#34;&gt; Gentoo&lt;/td&gt; &#xA;   &lt;td&gt;滚动&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://aosc.io/assets/distros/aosc-os.svg?sanitize=true&#34;&gt; 安同 OS&lt;/td&gt; &#xA;   &lt;td&gt;滚动&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;5 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.fnnas.com/favicon.ico&#34;&gt; 飞牛 fnOS&lt;/td&gt; &#xA;   &lt;td&gt;公测&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;8 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&#34;&gt; Windows (DD)&lt;/td&gt; &#xA;   &lt;td&gt;任何&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;取决于镜像&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&#34;&gt; Windows (ISO)&lt;/td&gt; &#xA;   &lt;td&gt;Vista, 7, 8.x (Server 2008 - 2012 R2)&lt;/td&gt; &#xA;   &lt;td&gt;512 MB&lt;/td&gt; &#xA;   &lt;td&gt;25 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&#34;&gt; Windows (ISO)&lt;/td&gt; &#xA;   &lt;td&gt;10, 11 (Server 2016 - 2025)&lt;/td&gt; &#xA;   &lt;td&gt;1 GB&lt;/td&gt; &#xA;   &lt;td&gt;25 GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;* 表示使用云镜像安装，非传统网络安装&lt;/p&gt; &#xA;&lt;p&gt;^ 表示需要 256 MB 内存 + 1.5 GB 硬盘，或 512 MB 内存 + 1 GB 硬盘&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] ❌ 本脚本不支持 OpenVZ、LXC 虚拟机&lt;/p&gt; &#xA; &lt;p&gt;请改用 &lt;a href=&#34;https://github.com/LloydAsp/OsMutation&#34;&gt;https://github.com/LloydAsp/OsMutation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;下载（当前系统是 &lt;img width=&#34;20&#34; height=&#34;20&#34; src=&#34;https://www.kernel.org/theme/images/logos/favicon.png&#34;&gt; Linux）&lt;/h2&gt; &#xA;&lt;p&gt;国外服务器：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh || wget -O reinstall.sh $_&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;国内服务器：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -O https://gitlab.com/bin456789/reinstall/-/raw/main/reinstall.sh || wget -O reinstall.sh $_&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;下载（当前系统是 &lt;img width=&#34;20&#34; height=&#34;20&#34; src=&#34;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&#34;&gt; Windows）&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] 请先关闭 &lt;code&gt;Windows Defender&lt;/code&gt; 的 &lt;code&gt;实时保护&lt;/code&gt; 功能。该功能会阻止 &lt;code&gt;certutil&lt;/code&gt; 下载任何文件。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;解决 Windows 7 下无法下载脚本&lt;/summary&gt; &#xA; &lt;p&gt;由于不支持 TLS 1.2、SHA-256、根证书没有更新等原因，Vista，7 和 Server 2008 (R2) 可能无法自动下载脚本，因此需要手动下载，具体操作如下：&lt;/p&gt; &#xA; &lt;p&gt;用 IE 下载 (先在 IE 高级设置里启用 TLS 1.2)，或者通过远程桌面，将这两个文件保存到同一个目录&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.bat&#34;&gt;https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.bat&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.cygwin.com/setup-x86.exe&#34;&gt;https://www.cygwin.com/setup-x86.exe&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;使用时运行下载的 &lt;code&gt;reinstall.bat&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;国外服务器：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;certutil -urlcache -f -split https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;国内服务器：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;certutil -urlcache -f -split https://gitlab.com/bin456789/reinstall/-/raw/main/reinstall.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;所有功能&lt;/strong&gt; 都可在 Linux / Windows 下运行&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux 下运行 &lt;code&gt;bash reinstall.sh ...&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows 下先运行 &lt;code&gt;cmd&lt;/code&gt;，再运行 &lt;code&gt;reinstall.bat ...&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;如果参数中的链接包含特殊字符，要用 &lt;code&gt;&#34;&#34;&lt;/code&gt; 将链接包起来，不能用 &lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;功能 1: 安装 &lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.kernel.org/theme/images/logos/favicon.png&#34;&gt; Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用户名 &lt;code&gt;root&lt;/code&gt; 默认密码 &lt;code&gt;123@@@&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;安装最新版可不输入版本号&lt;/li&gt; &#xA; &lt;li&gt;最大化利用磁盘空间：不含 boot 分区（Fedora 例外），不含 swap 分区&lt;/li&gt; &#xA; &lt;li&gt;自动根据机器类型选择不同的优化内核，例如 &lt;code&gt;Cloud&lt;/code&gt;、&lt;code&gt;HWE&lt;/code&gt; 内核&lt;/li&gt; &#xA; &lt;li&gt;安装 Red Hat 时需填写 &lt;a href=&#34;https://access.redhat.com/downloads/content/rhel&#34;&gt;https://access.redhat.com/downloads/content/rhel&lt;/a&gt; 得到的 &lt;code&gt;qcow2&lt;/code&gt; 镜像链接，也可以安装其它类 RHEL 系统，例如 &lt;code&gt;Alibaba Cloud Linux&lt;/code&gt; 和 &lt;code&gt;TencentOS Server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;重装后如需修改 SSH 端口或者改成密钥登录，注意还要修改 &lt;code&gt;/etc/ssh/sshd_config.d/&lt;/code&gt; 里面的文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh anolis      7|8|23&#xA;                  opencloudos 8|9|23&#xA;                  rocky       8|9&#xA;                  redhat      8|9   --img=&#34;http://xxx.com/xxx.qcow2&#34;&#xA;                  oracle      8|9&#xA;                  almalinux   8|9&#xA;                  centos      9|10&#xA;                  fedora      40|41&#xA;                  nixos       24.11&#xA;                  debian      9|10|11|12&#xA;                  opensuse    15.6|tumbleweed&#xA;                  alpine      3.18|3.19|3.20|3.21&#xA;                  openeuler   20.03|22.03|24.03|24.09&#xA;                  ubuntu      16.04|18.04|20.04|22.04|24.04|24.10 [--minimal]&#xA;                  kali&#xA;                  arch&#xA;                  gentoo&#xA;                  aosc&#xA;                  fnos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;可选参数&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--password PASSWORD&lt;/code&gt; 设置密码&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ssh-key KEY&lt;/code&gt; 设置 SSH 登录公钥，支持以下格式。当使用公钥时，密码为空 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key &#34;ssh-rsa ...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key &#34;ssh-ed25519 ...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key &#34;ecdsa-sha2-nistp256/384/521 ...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key http://path/to/public_key&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key github:your_username&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key gitlab:your_username&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key /path/to/public_key&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key C:\path\to\public_key&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口（安装期间观察日志用，也作用于新系统）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--web-port PORT&lt;/code&gt; 修改 Web 端口（安装期间观察日志用）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--hold 2&lt;/code&gt; 安装结束后不重启，此时可以 SSH 登录修改系统内容，系统挂载在 &lt;code&gt;/os&lt;/code&gt; (此功能不支持 Debian/Kali)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] 安装 Debian/Kali 时，x86 可通过后台 VNC 查看安装进度，ARM 可通过串行控制台查看安装进度。&lt;/p&gt; &#xA; &lt;p&gt;安装其它系统时，可通过多种方式（SSH、HTTP 80 端口、后台 VNC、串行控制台）查看安装进度。 &lt;br&gt;即使安装过程出错，也能通过 SSH 运行 &lt;code&gt;/trans.sh alpine&lt;/code&gt; 安装到 Alpine。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;实验性功能&lt;/summary&gt; &#xA; &lt;p&gt;云镜像安装 Debian&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;适合于 CPU 较慢的机器&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh debian --ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;ISO 安装 CentOS, AlmaLinux, Rocky, Fedora&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;仅支持内存大于 2G 且为动态 IP 的机器&lt;/li&gt; &#xA;  &lt;li&gt;密码 &lt;code&gt;123@@@&lt;/code&gt;，SSH 端口 &lt;code&gt;22&lt;/code&gt;，不支持用参数修改&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh centos --installer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;ISO 安装 Ubuntu&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;仅支持内存大于 1G 且为动态 IP 的机器&lt;/li&gt; &#xA;  &lt;li&gt;密码 &lt;code&gt;123@@@&lt;/code&gt;，SSH 端口 &lt;code&gt;22&lt;/code&gt;，不支持用参数修改&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh ubuntu --installer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;功能 2: DD&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 &lt;code&gt;raw&lt;/code&gt; &lt;code&gt;vhd&lt;/code&gt; 格式的镜像（未压缩，或者压缩成 &lt;code&gt;.gz&lt;/code&gt; &lt;code&gt;.xz&lt;/code&gt; &lt;code&gt;.zst&lt;/code&gt; &lt;code&gt;.tar&lt;/code&gt; &lt;code&gt;.tar.gz&lt;/code&gt; &lt;code&gt;.tar.xz&lt;/code&gt; &lt;code&gt;.tar.zst&lt;/code&gt;）&lt;/li&gt; &#xA; &lt;li&gt;DD Windows 镜像时，会自动扩展系统盘，静态 IP 的机器会配置好 IP，可能首次开机几分钟后才生效&lt;/li&gt; &#xA; &lt;li&gt;DD Linux 镜像时，&lt;strong&gt;不会&lt;/strong&gt;修改镜像的任何内容&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh dd --img &#34;https://example.com/xxx.xz&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;可选参数&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--allow-ping&lt;/code&gt; 允许被 Ping (仅限 DD Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--rdp-port PORT&lt;/code&gt; 修改 RDP 端口 (仅限 DD Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口（安装期间观察日志用）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--web-port PORT&lt;/code&gt; 修改 Web 端口（安装期间观察日志用）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--hold 2&lt;/code&gt; DD 结束后不重启，此时可以 SSH 登录修改系统内容，Windows 系统会挂载在 &lt;code&gt;/os&lt;/code&gt;，Linux 系统&lt;strong&gt;不会&lt;/strong&gt;自动挂载&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] 可通过多种方式（SSH、HTTP 80 端口、后台 VNC、串行控制台）查看安装进度。 &lt;br&gt;即使安装过程出错，也能通过 SSH 运行 &lt;code&gt;/trans.sh alpine&lt;/code&gt; 安装到 Alpine。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;功能 3: 重启到 &lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://www.alpinelinux.org/alpine-logo.ico&#34;&gt; Alpine Live OS（内存系统）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可用 ssh 连接，进行备份/恢复硬盘、手动 DD、修改分区、手动安装 Alpine/Arch/Gentoo 等操作&lt;/li&gt; &#xA; &lt;li&gt;用户名 &lt;code&gt;root&lt;/code&gt; 默认密码 &lt;code&gt;123@@@&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果手动操作没有破坏原系统，再次重启将回到原系统&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh alpine --hold=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;可选参数&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--password PASSWORD&lt;/code&gt; 设置密码&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ssh-key KEY&lt;/code&gt; 设置 SSH 登录公钥，支持以下格式。当使用公钥时，密码为空 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key &#34;ssh-rsa ...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key &#34;ssh-ed25519 ...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key &#34;ecdsa-sha2-nistp256/384/521 ...&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key http://path/to/public_key&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key github:your_username&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key gitlab:your_username&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key /path/to/public_key&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--ssh-key C:\path\to\public_key&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;功能 4: 重启到 &lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://netboot.xyz/img/favicon.ico&#34;&gt; netboot.xyz&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可使用商家后台 VNC 手动安装 &lt;a href=&#34;https://github.com/netbootxyz/netboot.xyz?tab=readme-ov-file#what-operating-systems-are-currently-available-on-netbootxyz&#34;&gt;更多系统&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果手动操作没有破坏原系统，再次重启将回到原系统&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh netboot.xyz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://netboot.xyz/images/netboot.xyz.gif&#34; alt=&#34;netboot.xyz&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;功能 5: 安装 &lt;img width=&#34;16&#34; height=&#34;16&#34; src=&#34;https://blogs.windows.com/wp-content/uploads/prod/2022/09/cropped-Windows11IconTransparent512-32x32.png&#34;&gt; Windows ISO&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/bin456789/reinstall/assets/7548515/07c1aea2-1ce3-4967-904f-aaf9d6eec3f7&#34; alt=&#34;Windows 安装界面&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用户名 &lt;code&gt;administrator&lt;/code&gt; 默认密码 &lt;code&gt;123@@@&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果远程登录失败，可以尝试使用用户名 &lt;code&gt;.\administrator&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;静态机器会自动配置好 IP，可能首次开机几分钟后才生效&lt;/li&gt; &#xA; &lt;li&gt;支持所有语言&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;支持的系统&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (Vista ~ 11)&lt;/li&gt; &#xA; &lt;li&gt;Windows Server (2008 ~ 2025) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows Server Essentials *&lt;/li&gt; &#xA;   &lt;li&gt;Windows Server (Semi) Annual Channel *&lt;/li&gt; &#xA;   &lt;li&gt;Hyper-V Server *&lt;/li&gt; &#xA;   &lt;li&gt;Azure Stack HCI *&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;del&gt;方法 1: 让脚本自动查找 ISO&lt;/del&gt;&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] 目前该 ISO 仓库禁止了直链下载，因此该方法已失效&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;脚本会从 &lt;a href=&#34;https://massgrave.dev/genuine-installation-media&#34;&gt;https://massgrave.dev/genuine-installation-media&lt;/a&gt; 查找 ISO，该网站专门提供官方 ISO 下载&lt;/li&gt; &#xA; &lt;li&gt;上面带 * 的系统不支持自动查找 ISO&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh windows \&#xA;     --image-name &#34;Windows 11 Enterprise LTSC 2024&#34; \&#xA;     --lang zh-cn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;支持的语言&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;ar-sa&#xA;bg-bg&#xA;cs-cz&#xA;da-dk&#xA;de-de&#xA;el-gr&#xA;en-gb&#xA;en-us&#xA;es-es&#xA;es-mx&#xA;et-ee&#xA;fi-fi&#xA;fr-ca&#xA;fr-fr&#xA;he-il&#xA;hr-hr&#xA;hu-hu&#xA;it-it&#xA;ja-jp&#xA;ko-kr&#xA;lt-lt&#xA;lv-lv&#xA;nb-no&#xA;nl-nl&#xA;pl-pl&#xA;pt-pt&#xA;pt-br&#xA;ro-ro&#xA;ru-ru&#xA;sk-sk&#xA;sl-si&#xA;sr-latn-rs&#xA;sv-se&#xA;th-th&#xA;tr-tr&#xA;uk-ua&#xA;zh-cn&#xA;zh-hk&#xA;zh-tw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;方法 2: 自行指定 ISO 连接&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果不知道 &lt;code&gt;--image-name&lt;/code&gt;，可以随便填，在重启后连接 SSH，根据错误提示重新输入正确的值&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh windows \&#xA;     --image-name &#34;Windows 11 Enterprise LTSC 2024&#34; \&#xA;     --iso &#34;https://go.microsoft.com/fwlink/?linkid=2289029&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;或者磁力链接&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash reinstall.sh windows \&#xA;     --image-name &#34;Windows 11 Enterprise LTSC 2024&#34; \&#xA;     --iso &#34;magnet:?xt=urn:btih:7352bd2db48c3381dffa783763dc75aa4a6f1cff&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;以下网站可找到 ISO 链接&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;正式版 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://msdl.gravesoft.dev&#34;&gt;https://msdl.gravesoft.dev&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://massgrave.dev/genuine-installation-media&#34;&gt;https://massgrave.dev/genuine-installation-media&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://next.itellyou.cn&#34;&gt;https://next.itellyou.cn&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.xitongku.com&#34;&gt;https://www.xitongku.com&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/software-download/windows10&#34;&gt;https://www.microsoft.com/software-download/windows10&lt;/a&gt; (需用非 Windows User-Agent 打开)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/software-download/windows11&#34;&gt;https://www.microsoft.com/software-download/windows11&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/software-download/windows11arm64&#34;&gt;https://www.microsoft.com/software-download/windows11arm64&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;评估版 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-10-enterprise&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-10-enterprise&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-11-enterprise&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-11-enterprise&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-11-iot-enterprise-ltsc-eval&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-11-iot-enterprise-ltsc-eval&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-server-2012-r2&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2012-r2&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-server-2016&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2016&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-server-2019&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2019&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-server-2022&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2022&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/evalcenter/download-windows-server-2025&#34;&gt;https://www.microsoft.com/evalcenter/download-windows-server-2025&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Insider 预览版 &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewiso&#34;&gt;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewiso&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewserver&#34;&gt;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewserver&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;可选参数&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--password PASSWORD&lt;/code&gt; 设置密码&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--allow-ping&lt;/code&gt; 设置 Windows 防火墙允许被 Ping&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--rdp-port PORT&lt;/code&gt; 更改 RDP 端口&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ssh-port PORT&lt;/code&gt; 修改 SSH 端口（安装期间观察日志用）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--web-port PORT&lt;/code&gt; 修改 Web 端口（安装期间观察日志用）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--add-driver INF_OR_DIR&lt;/code&gt; 添加额外驱动，填写 .inf 路径，或者 .inf 所在的文件夹 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;需先下载驱动到本地&lt;/li&gt; &#xA;   &lt;li&gt;可多次设置该参数以添加不同的驱动&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--hold 2&lt;/code&gt; 在进入 Windows 官方安装程序之前，可以 SSH 登录修改硬盘内容，硬盘挂载在 &lt;code&gt;/os&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;以下驱动会自动按需下载安装，无需手动添加&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Virtio (&lt;a href=&#34;https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/&#34;&gt;Virtio&lt;/a&gt;、&lt;a href=&#34;https://www.alibabacloud.com/help/ecs/user-guide/install-the-virtio-driver-1&#34;&gt;阿里云&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;XEN (&lt;a href=&#34;https://xenproject.org/resources/downloads/&#34;&gt;&lt;del&gt;XEN&lt;/del&gt; (未签名)&lt;/a&gt;、&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Upgrading_PV_drivers.html#win2008-citrix-upgrade&#34;&gt;Citrix&lt;/a&gt;、&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/xen-drivers-overview.html&#34;&gt;AWS&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;AWS (&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-driver-releases-windows.html&#34;&gt;ENA 网卡&lt;/a&gt;、&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-driver-version-history.html&#34;&gt;NVME 存储控制器&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;GCP (&lt;a href=&#34;https://cloud.google.com/compute/docs/networking/using-gvnic&#34;&gt;gVNIC 网卡&lt;/a&gt;、&lt;a href=&#34;https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display&#34;&gt;GGA 显卡&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Azure (&lt;a href=&#34;https://learn.microsoft.com/azure/virtual-network/accelerated-networking-mana-windows&#34;&gt;MANA 网卡&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Intel (&lt;a href=&#34;https://www.intel.com/content/www/us/en/download/720755/intel-rapid-storage-technology-driver-installation-software-with-intel-optane-memory-11th-up-to-13th-gen-platforms.html&#34;&gt;VMD 存储控制器&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;如何填写映像名称 &lt;code&gt;--image-name&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;通常一个 ISO 会包含多个系统版本，例如家庭版、专业版。映像名称 &lt;code&gt;--image-name&lt;/code&gt; 就是用来指定要安装的版本，填写时不区分大小写&lt;/p&gt; &#xA;&lt;p&gt;可以用 DISM、DISM++、Wimlib 等工具查询 ISO 包含的映像名称&lt;/p&gt; &#xA;&lt;p&gt;常用的映像名称有：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Windows 7 Ultimate&#xA;Windows 11 Pro&#xA;Windows 11 Enterprise LTSC 2024&#xA;Windows Server 2025 SERVERDATACENTER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;如何用 &lt;a href=&#34;https://github.com/Chuyu-Team/Dism-Multi-language/releases&#34;&gt;DISM++&lt;/a&gt; 查询 ISO 包含的映像名称&lt;/h4&gt; &#xA;&lt;p&gt;打开文件菜单 &amp;gt; 打开映像文件，选择要安装的 iso，即可得到映像名称，所有映像名称都可以安装&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/bin456789/reinstall/assets/7548515/5aae0a9b-61e2-4f66-bb98-d470a6beaac2&#34; alt=&#34;image-name&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Vista (Server 2008) 和 32 位系统可能会缺少驱动&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 未开启 CSM 的 EFI 机器，无法安装 Windows 7 (Server 2008 R2)&lt;/p&gt; &#xA; &lt;p&gt;Hyper-V (Azure) 需选择合适的虚拟机代系 &lt;a href=&#34;https://learn.microsoft.com/windows-server/virtualization/hyper-v/plan/should-i-create-a-generation-1-or-2-virtual-machine-in-hyper-v&#34;&gt;https://learn.microsoft.com/windows-server/virtualization/hyper-v/plan/should-i-create-a-generation-1-or-2-virtual-machine-in-hyper-v&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Windows 10 LTSC 2021 中文版镜像 &lt;code&gt;zh-cn_windows_10_enterprise_ltsc_2021_x64_dvd_033b7312.iso&lt;/code&gt; 的 &lt;code&gt;wsappx&lt;/code&gt; 进程会长期占用 CPU&lt;/p&gt; &#xA; &lt;p&gt;解决方法是更新系统补丁，或者手动安装 &lt;code&gt;VCLibs&lt;/code&gt; 库 &lt;a href=&#34;https://www.google.com/search?q=ltsc+wsappx&#34;&gt;https://www.google.com/search?q=ltsc+wsappx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;ARM 安装 Windows 的注意事项&lt;/h4&gt; &#xA;&lt;p&gt;大部分 ARM 机器都支持安装 Windows 11 24H2&lt;/p&gt; &#xA;&lt;p&gt;安装过程可能会黑屏，串行控制台可能会显示 &lt;code&gt;ConvertPages: failed to find range&lt;/code&gt;，均不影响正常安装&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;兼容性&lt;/th&gt; &#xA;   &lt;th&gt;云服务商&lt;/th&gt; &#xA;   &lt;th&gt;实例类型&lt;/th&gt; &#xA;   &lt;th&gt;问题&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;Azure&lt;/td&gt; &#xA;   &lt;td&gt;B2pts_v2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;阿里云&lt;/td&gt; &#xA;   &lt;td&gt;g6r, c6r&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;阿里云&lt;/td&gt; &#xA;   &lt;td&gt;g8y, c8y, r8y&lt;/td&gt; &#xA;   &lt;td&gt;有几率重启时卡开机 Logo，强制重启即可&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;AWS&lt;/td&gt; &#xA;   &lt;td&gt;T4g&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;Scaleway&lt;/td&gt; &#xA;   &lt;td&gt;COPARM1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;Gcore&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;甲骨文云&lt;/td&gt; &#xA;   &lt;td&gt;A1.Flex&lt;/td&gt; &#xA;   &lt;td&gt;不一定能安装成功，越新创建的实例越容易成功&lt;br&gt;安装后还需要手动加载显卡驱动&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;谷歌云&lt;/td&gt; &#xA;   &lt;td&gt;t2a&lt;/td&gt; &#xA;   &lt;td&gt;缺少网卡驱动&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;甲骨文云加载显卡驱动&lt;/summary&gt; &#xA; &lt;p&gt;使用远程桌面登录到服务器，打开设备管理器，找到显卡，选择更新驱动，在列表中选择 &lt;code&gt;Red Hat VirtIO GPU DOD controller&lt;/code&gt; 即可。不需要提前下载驱动。&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/503e1d82-4fa9-4486-917e-73326ad7c988&#34; alt=&#34;virtio-gpu-1&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/bf3a9af6-13d8-4f93-9d6c-d3b2dbddb37d&#34; alt=&#34;virtio-gpu-2&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/a9006a78-838f-45bf-a556-2dba193d3c03&#34; alt=&#34;virtio-gpu-3&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;讨论&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bin456789/reinstall/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/reinstall_os&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram Group&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;如何修改脚本自用&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork 本仓库&lt;/li&gt; &#xA; &lt;li&gt;修改 &lt;code&gt;reinstall.sh&lt;/code&gt; 和 &lt;code&gt;reinstall.bat&lt;/code&gt; 开头的 &lt;code&gt;confhome&lt;/code&gt; 和 &lt;code&gt;confhome_cn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;修改其它代码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/bin456789&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/sponsor-30363D?style=for-the-badge&amp;amp;logo=GitHub-Sponsors&amp;amp;logoColor=#EA4AAA&#34; alt=&#34;Github Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢以下商家提供白嫖机器&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.oracle.com/cloud/&#34;&gt;&lt;img src=&#34;https://github.com/bin456789/reinstall/assets/7548515/8b430ed4-8344-4f96-b4da-c2bda031cc90&#34; alt=&#34;Oracle Cloud&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dartnode.com/&#34;&gt;&lt;img src=&#34;https://github.com/bin456789/reinstall/assets/7548515/435d6740-bcdd-4f3a-a196-2f60ae397f17&#34; alt=&#34;DartNode&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>moovweb/gvm</title>
    <updated>2025-03-09T01:48:07Z</updated>
    <id>tag:github.com,2025-03-09:/moovweb/gvm</id>
    <link href="https://github.com/moovweb/gvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Go Version Manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gvm&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/moovweb/gvm&#34;&gt;&lt;img src=&#34;https://travis-ci.org/moovweb/gvm.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;By Josh Bussdieker (jbuss, jaja, jbussdieker) while working at &lt;a href=&#34;https://www.moovweb.com&#34;&gt;Moovweb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently lovingly maintained by &lt;a href=&#34;https://github.com/BenKnigge&#34;&gt;Benjamin Knigge&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pull requests and other any other contributions would be very much appreciated.&lt;/p&gt; &#xA;&lt;p&gt;GVM provides an interface to manage Go versions.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install/Uninstall Go versions with &lt;code&gt;gvm install [tag]&lt;/code&gt; where tag is &#34;60.3&#34;, &#34;go1&#34;, &#34;weekly.2011-11-08&#34;, or &#34;tip&#34;&lt;/li&gt; &#xA; &lt;li&gt;List added/removed files in GOROOT with &lt;code&gt;gvm diff&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Manage GOPATHs with &lt;code&gt;gvm pkgset [create/use/delete] [name]&lt;/code&gt;. Use &lt;code&gt;--local&lt;/code&gt; as &lt;code&gt;name&lt;/code&gt; to manage repository under local path (&lt;code&gt;/path/to/repo/.gvm_local&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;List latest release tags with &lt;code&gt;gvm listall&lt;/code&gt;. Use &lt;code&gt;--all&lt;/code&gt; to list weekly as well.&lt;/li&gt; &#xA; &lt;li&gt;Cache a clean copy of the latest Go source for multiple version installs.&lt;/li&gt; &#xA; &lt;li&gt;Link project directories into GOPATH&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Background&lt;/h1&gt; &#xA;&lt;p&gt;When we started developing in Go mismatched dependencies and API changes plagued our build process and made it extremely difficult to merge with other peoples changes.&lt;/p&gt; &#xA;&lt;p&gt;After nuking my entire GOROOT several times and rebuilding I decided to come up with a tool to oversee the process. It eventually evolved into what gvm is today.&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;To install:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://www.gnu.org/software/bison/&#34;&gt;Bison&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo apt-get install bison&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install gvm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bash &amp;lt; &amp;lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Or if you are using zsh just change &lt;code&gt;bash&lt;/code&gt; with &lt;code&gt;zsh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing Go&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm install go1.4&#xA;gvm use go1.4 [--default]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once this is done Go will be in the path and ready to use. $GOROOT and $GOPATH are set automatically.&lt;/p&gt; &#xA;&lt;p&gt;Additional options can be specified when installing Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: gvm install [version] [options]&#xA;    -s,  --source=SOURCE      Install Go from specified source.&#xA;    -n,  --name=NAME          Override the default name for this version.&#xA;    -pb, --with-protobuf      Install Go protocol buffers.&#xA;    -b,  --with-build-tools   Install package build tools.&#xA;    -B,  --binary             Only install from binary.&#xA;         --prefer-binary      Attempt a binary install, falling back to source.&#xA;    -h,  --help               Display this message.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;A Note on Compiling Go 1.5+&lt;/h3&gt; &#xA;&lt;p&gt;Go 1.5+ removed the C compilers from the toolchain and &lt;a href=&#34;https://docs.google.com/document/d/1OaatvGhEAq7VseQ9kkavxKNAfepWy2yhPUBs96FGV28/edit&#34;&gt;replaced&lt;/a&gt; them with one written in Go. Obviously, this creates a bootstrapping problem if you don&#39;t already have a working Go install. In order to compile Go 1.5+, make sure Go 1.4 is installed first. If Go 1.4 won&#39;t install try a later version (e.g. go1.5), just make sure you have the &lt;code&gt;-B&lt;/code&gt; option after the version number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm install go1.4 -B&#xA;gvm use go1.4&#xA;export GOROOT_BOOTSTRAP=$GOROOT&#xA;gvm install go1.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;A Note on ARMv6 and ARMv7 architectures (32 bit)&lt;/h3&gt; &#xA;&lt;p&gt;Binary versions for ARMv6 architecture are available &lt;a href=&#34;https://go.dev/dl/#go1.6&#34;&gt;starting from Go 1.6&lt;/a&gt;. So, it is necessary to bootstrap with an existing binary version, then it will be possible compiling other versions. For instance, to bootstrap a setup, version &lt;code&gt;1.21.0&lt;/code&gt; may be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm install go1.21.0 -B&#xA;gvm use go1.21.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then, compile any other version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm install go1.20.7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;To install Go 1.20+&lt;/h4&gt; &#xA;&lt;p&gt;Go 1.20+ requires go1.17.3+. Use the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm install go1.4 -B&#xA;gvm use go1.4&#xA;export GOROOT_BOOTSTRAP=$GOROOT&#xA;gvm install go1.17.13&#xA;gvm use go1.17.13&#xA;export GOROOT_BOOTSTRAP=$GOROOT&#xA;gvm install go1.20&#xA;gvm use go1.20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;List Go Versions&lt;/h1&gt; &#xA;&lt;p&gt;To list all installed Go versions (The current version is prefixed with &#34;=&amp;gt;&#34;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To list all Go versions available for download:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm listall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Uninstalling&lt;/h1&gt; &#xA;&lt;p&gt;To completely remove gvm and all installed Go versions and packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm implode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If that doesn&#39;t work see the troubleshooting steps at the bottom of this page.&lt;/p&gt; &#xA;&lt;h1&gt;Mac OS X Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Mercurial from &lt;a href=&#34;https://www.mercurial-scm.org/downloads&#34;&gt;https://www.mercurial-scm.org/downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Xcode Command Line Tools from the App Store.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;xcode-select --install&#xA;brew update&#xA;brew install mercurial&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Linux Requirements&lt;/h1&gt; &#xA;&lt;h1&gt;Debian/Ubuntu&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install curl git mercurial make binutils bison gcc build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Redhat/Centos&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum install curl&#xA;sudo yum install git&#xA;sudo yum install make&#xA;sudo yum install bison&#xA;sudo yum install gcc&#xA;sudo yum install glibc-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Mercurial from &lt;a href=&#34;http://pkgs.repoforge.org/mercurial/&#34;&gt;http://pkgs.repoforge.org/mercurial/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;FreeBSD Requirements&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pkg_add -r bash&#xA;sudo pkg_add -r git&#xA;sudo pkg_add -r mercurial&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Vendoring Native Code and Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;GVM supports vendoring package set-specific native code and related dependencies, which is useful if you need to qualify a new configuration or version of one of these dependencies against a last-known-good version in an isolated manner. Such behavior is critical to maintaining good release engineering and production environment hygiene.&lt;/p&gt; &#xA;&lt;p&gt;As a convenience matter, GVM will furnish the following environment variables to aid in this manner if you want to decouple your work from what the operating system provides:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;${GVM_OVERLAY_PREFIX}&lt;/code&gt; functions in a manner akin to a root directory hierarchy suitable for auto{conf,make,tools} where it could be passed in to &lt;code&gt;./configure --prefix=${GVM_OVERLAY_PREFIX}&lt;/code&gt; and not conflict with any existing operating system artifacts and hermetically be used by your workspace. This is suitable to use with &lt;code&gt;C{PP,XX}FLAGS and LDFLAGS&lt;/code&gt;, but you will have to manage these yourself, since each tool that uses them is different.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;${PATH}&lt;/code&gt; includes &lt;code&gt;${GVM_OVERLAY_PREFIX}/bin&lt;/code&gt; so that any tools you manually install will reside there, available for you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;${LD_LIBRARY_PATH}&lt;/code&gt; includes &lt;code&gt;${GVM_OVERLAY_PREFIX}/lib&lt;/code&gt; so that any runtime library searching can be fulfilled there on FreeBSD and Linux.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;${DYLD_LIBRARY_PATH}&lt;/code&gt; includes &lt;code&gt;${GVM_OVERLAY_PREFIX}/lib&lt;/code&gt; so that any runtime library searching can be fulfilled there on Mac OS X.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;${PKG_CONFIG_PATH}&lt;/code&gt; includes &lt;code&gt;${GVM_OVERLAY_PREFIX}/lib/pkgconfig&lt;/code&gt; so that &lt;code&gt;pkg-config&lt;/code&gt; can automatically resolve any vendored dependencies.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Recipe for success:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gvm use go1.1&#xA;gvm pkgset use current-known-good&#xA;# Let&#39;s assume that this includes some C headers and native libraries, which&#xA;# Go&#39;s CGO facility wraps for us.  Let&#39;s assume that these native&#xA;# dependencies are at version V.&#xA;gvm pkgset create trial-next-version&#xA;# Let&#39;s assume that V+1 has come along and you want to safely trial it in&#xA;# your workspace.&#xA;gvm pkgset use trial-next-version&#xA;# Do your work here replicating current-known-good from above, but install&#xA;# V+1 into ${GVM_OVERLAY_PREFIX}.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See examples/native for a working example.&lt;/p&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;p&gt;Sometimes especially during upgrades the state of gvm&#39;s files can get mixed up. This is mostly true for upgrade from older version than 0.0.8. Changes are slowing down and a LTR is imminent. But for now &lt;code&gt;rm -rf ~/.gvm&lt;/code&gt; will always remove gvm. Stay tuned!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/GoVesionManager/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/GoVesionManager/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>