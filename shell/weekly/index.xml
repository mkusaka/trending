<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T02:05:13Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kroese/virtual-dsm</title>
    <updated>2023-07-02T02:05:13Z</updated>
    <id>tag:github.com,2023-07-02:/kroese/virtual-dsm</id>
    <link href="https://github.com/kroese/virtual-dsm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Virtual DSM in a docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Virtual DSM for Docker&lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://github.com/kroese/virtual-dsm/raw/master/.github/screen.jpg&#34; title=&#34;Screenshot&#34; style=&#34;max-width:100%;&#34; width=&#34;432&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://github.com/kroese/virtual-dsm/&#34;&gt;&lt;img src=&#34;https://github.com/kroese/virtual-dsm/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kroese/virtual-dsm/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/kroese/virtual-dsm?arch=amd64&amp;amp;sort=date&amp;amp;color=066da5&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kroese/virtual-dsm/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/kroese/virtual-dsm/latest?color=066da5&amp;amp;label=size&#34; alt=&#34;Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kroese/virtual-dsm&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kroese/virtual-dsm.svg?style=flat&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&lt;/h1&gt; Virtual DSM in a docker container. &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-platform&lt;/li&gt; &#xA; &lt;li&gt;KVM acceleration&lt;/li&gt; &#xA; &lt;li&gt;Graceful shutdown&lt;/li&gt; &#xA; &lt;li&gt;Upgrades supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;    dsm:&#xA;        container_name: dsm&#xA;        image: kroese/virtual-dsm:latest&#xA;        environment:&#xA;            DISK_SIZE: &#34;16G&#34;&#xA;        devices:&#xA;            - /dev/kvm&#xA;            - /dev/vhost-net&#xA;        cap_add:&#xA;            - NET_ADMIN                       &#xA;        ports:&#xA;            - 5000:5000&#xA;        volumes:&#xA;            - /opt/dsm:/storage&#xA;        restart: on-failure&#xA;        stop_grace_period: 1m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm -p 5000:5000 --device=/dev/kvm --cap-add NET_ADMIN --stop-timeout 60 kroese/virtual-dsm:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the size of the virtual disk?&lt;/h3&gt; &lt;p&gt;To expand the default size of 16 GB, locate the &lt;code&gt;DISK_SIZE&lt;/code&gt; setting in your compose file and modify it to your preferred capacity:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;    DISK_SIZE: &#34;256G&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the location of the virtual disk?&lt;/h3&gt; &lt;p&gt;To change the virtual disk&#39;s location from the default Docker volume, include the following bind mount in your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;volumes:&#xA;    - /home/user/data:/storage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Replace the example path &lt;code&gt;/home/user/data&lt;/code&gt; with the desired storage folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the space reserved by the virtual disk?&lt;/h3&gt; &lt;p&gt;By default, the entire disk space is reserved in advance. To create a growable disk that only reserves the space that is actually used, add the following environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;    ALLOCATE: &#34;N&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Keep in mind that this will not affect any of your existing disks, it only applies to newly created disks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I increase the amount of CPU or RAM?&lt;/h3&gt; &lt;p&gt;By default, a single core and 512 MB of RAM are allocated to the container. To increase this, add the following environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;    CPU_CORES: &#34;4&#34;&#xA;    RAM_SIZE: &#34;2048M&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I verify if my system supports KVM?&lt;/h3&gt; &lt;p&gt;To verify if your system supports KVM, run the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cpu-checker&#xA;sudo kvm-ok&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you receive an error from &lt;code&gt;kvm-ok&lt;/code&gt; indicating that KVM acceleration can&#39;t be used, check your BIOS settings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I assign an individual IP address to the container?&lt;/h3&gt; &lt;p&gt;By default, the container uses bridge networking, which shares the IP address with the host.&lt;/p&gt; &lt;p&gt;If you want to assign an individual IP address to the container, you can create a macvlan network as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create -d macvlan \&#xA;    --subnet=192.168.0.0/24 \&#xA;    --gateway=192.168.0.1 \&#xA;    --ip-range=192.168.0.100/28 \&#xA;    -o parent=eth0 vdsm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Be sure to modify these values to match your local subnet.&lt;/p&gt; &lt;p&gt;Once you have created the network, change your compose file to look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;    dsm:&#xA;        container_name: dsm&#xA;        ..&amp;lt;snip&amp;gt;..&#xA;        networks:&#xA;            vdsm:             &#xA;                ipv4_address: 192.168.0.100&#xA;&#xA;networks:&#xA;    vdsm:&#xA;        external: true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;An added benefit of this approach is that you won&#39;t have to perform any port mapping anymore since all ports will be exposed by default.&lt;/p&gt; &lt;p&gt;Please note that this IP address won&#39;t be accessible from the Docker host due to the design of macvlan, which doesn&#39;t permit communication between the two. If this is a concern, you need to create a &lt;a href=&#34;https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/#host-access&#34;&gt;second macvlan&lt;/a&gt; as a workaround.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How can the container acquire an IP address from my router?&lt;/h3&gt; &lt;p&gt;After configuring the container for macvlan (see above), it is possible for DSM to become part of your home network by requesting an IP from your router, just like your other devices.&lt;/p&gt; &lt;p&gt;To enable this feature, add the following lines to your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;    DHCP: &#34;Y&#34;&#xA;devices:&#xA;    - /dev/vhost-net&#xA;device_cgroup_rules:&#xA;    - &#39;c *:* rwm&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Please note that even if you don&#39;t need DHCP, it&#39;s still recommended to enable this feature as it prevents NAT issues and increases performance by using a &lt;code&gt;macvtap&lt;/code&gt; interface.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I install a specific version of vDSM?&lt;/h3&gt; &lt;p&gt;By default, version 7.2 will be installed, but if you prefer an older version, you can add its URL to your compose file as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;    URL: &#34;https://global.synologydownload.com/download/DSM/release/7.0.1/42218/DSM_VirtualDSM_42218.pat&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With this method, you are able to switch between different versions while keeping your file data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the differences compared to the standard DSM?&lt;/h3&gt; &lt;p&gt;There are only two minor differences: the Virtual Machine Manager package is not provided, and Surveillance Station doesn&#39;t include any free licenses.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is this project legal?&lt;/h3&gt; &lt;p&gt;Yes, this project contains only open-source code and does not distribute any copyrighted material. Neither does it try to circumvent any copyright protection measures. So under all applicable laws, this project would be considered legal.&lt;/p&gt; &lt;p&gt;However, by installing Synology&#39;s Virtual DSM, you must accept their end-user license agreement, which does not permit installation on non-Synology hardware. So only run this project on an official Synology NAS via the Container Manager package, as any other use will be a violation of their terms and conditions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Only run this container on Synology hardware, any other use is not permitted by their EULA. The product names, logos, brands, and other trademarks referred to within this project are the property of their respective trademark holders. This project is not affiliated, sponsored, or endorsed by Synology, Inc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Jeevan-kumar-Raj/Grokking-System-Design</title>
    <updated>2023-07-02T02:05:13Z</updated>
    <id>tag:github.com,2023-07-02:/Jeevan-kumar-Raj/Grokking-System-Design</id>
    <link href="https://github.com/Jeevan-kumar-Raj/Grokking-System-Design" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Systems design is the process of defining the architecture, modules, interfaces, and data for a system to satisfy specified requirements. Systems design could be seen as the application of systems theory to product development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.educative.io/collection/5668639101419520/5649050225344512&#34;&gt;Grokking System Design Interview&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://www.educative.io&#34;&gt;educative&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Interview Process&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scope the problem &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Don’t make assumptions.&lt;/li&gt; &#xA;   &lt;li&gt;Ask clarifying questions to understand the constraints and use cases.&lt;/li&gt; &#xA;   &lt;li&gt;Steps &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Requirements clarifications&lt;/li&gt; &#xA;     &lt;li&gt;System interface definition&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sketch up an abstract design &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Building blocks of the system&lt;/li&gt; &#xA;   &lt;li&gt;Relationships between them&lt;/li&gt; &#xA;   &lt;li&gt;Steps &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Back-of-the-envelope estimation&lt;/li&gt; &#xA;     &lt;li&gt;Defining data model&lt;/li&gt; &#xA;     &lt;li&gt;High-level design&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Identify and address the bottlenecks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use the fundamental principles of scalable system design&lt;/li&gt; &#xA;   &lt;li&gt;Steps &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Detailed design&lt;/li&gt; &#xA;     &lt;li&gt;Identifying and resolving bottlenecks&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Distributed System Design Basics&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/key-characteristics.md&#34;&gt;Key Characterics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/load-balancing.md&#34;&gt;Load balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/caching.md&#34;&gt;Caching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/sharding.md&#34;&gt;Sharding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/indexes.md&#34;&gt;Indexes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/proxies.md&#34;&gt;Proxies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/queues.md&#34;&gt;Queues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/redundancy.md&#34;&gt;Redundancy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/sql-vs-nosql.md&#34;&gt;SQL vs. NoSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/cap-theorem.md&#34;&gt;CAP Theorem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/consistent-hashing.md&#34;&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/basics/client-server-communication.md&#34;&gt;Client Server Communication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Designs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/short-url.md&#34;&gt;Short URL Service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/pastebin.md&#34;&gt;Pastebin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/instagram.md&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/dropbox.md&#34;&gt;Dropbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/twitter.md&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/youtube.md&#34;&gt;Youtube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/twitter-search.md&#34;&gt;Twitter Search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/web-crawler.md&#34;&gt;Web Crawler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/facebook-newsfeed.md&#34;&gt;Facebook Newsfeed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/yelp.md&#34;&gt;Yelp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/uber-backend.md&#34;&gt;Uber Backend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/designs/ticketmaster.md&#34;&gt;Ticketmaster&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System Design Interviews: A step by step guide&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;SYSTEM DESIGN PREPARATION&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to prepare for and answer system design questions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Objective&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Learning about and implementing large-scale distributed system is not easy. I do not want to give the impression that it&#39;s something that can be learnt in a month.&lt;/em&gt; What this repository aims to achieve, is for software engineers and students to get a rough idea of how the thought process of designing a large scale works and how big companies have managed to solve really hard problems. Along with that, there is a recent trend for companies to have an open-ended interview with system design questions, which is at times hard for engineers of all levels if they haven&#39;t gotten the opportunity to work on such systems themselves.&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of links/documents for the following use cases: a) Prepare for a system design or open-ended rounds. b) Learn more about how large-scale systems work and thought process of designing a new system.&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#start&#34;&gt;Starting point&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#basics&#34;&gt;basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#howtoans&#34;&gt;How to answer in interviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#myapproach&#34;&gt;Steps how I approach the system design questions in interviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#designques&#34;&gt;Common Design questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#architecture&#34;&gt;architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#blog&#34;&gt;company engineering blog links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Jeevan-kumar-Raj/Grokking-System-Design/master/#tldr&#34;&gt;Low on time ?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;start&#34;&gt; Starting point &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For a very broad overview please go through these lectures, really useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX&#34;&gt;Gaurav Sen&#39;s system design series&lt;/a&gt; Starts from simple stuff like load balancing and message queues, then moves to building full systems like Whatsapp and Tinder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-W9F__D3oY4&amp;amp;list=PLmhRNZyYVpDmLpaVQm3mK5PY5KB_4hLjE&amp;amp;index=10&#34;&gt;david malans cs75 scalability talk&lt;/a&gt; Feel free to go through other lectures if needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.udacity.com/course/web-development--cs253&#34;&gt;david huffman&#39;s talk , scaling up talk&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=pjNTgULVVf4&amp;amp;list=PLVi1LmRuKQ0NINQfjKLVen7J2lZFL35wP&amp;amp;index=1&#34;&gt;Youtube link&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.lecloud.net/tagged/scalability&#34;&gt;scalability for dummies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;&#34;&gt;Designing data intensive appliations&lt;/a&gt; This is by far one of the best books about large-scale systems and the practical challenges encountered during building them. It&#39;s focussed more on data-oriented applications though.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These talks should give you a starting point on how to think about such problems.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;basics&#34;&gt; Basics &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;But before you begin, here are some topics(in no particular order) which in my opinion you should have a decent idea of before proceeding.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Operating system basics: how a file system, virtual memory, paging, instruction execution cycle etc work (For starters silbershatz should be enough. If you already have decent knowledge try stallings book on OS)&lt;/li&gt; &#xA; &lt;li&gt;Networking basics: Should know the TCP/IP stack, basics of how Internet, HTTP, TCP/IP work at the minimum. cs75 on youtube (1st lecture) should give a broad overview. I personally love &lt;a href=&#34;http://www.amazon.com/Computer-Networking-Top-Down-Approach-Edition/dp/0132856204&#34;&gt;networking-a top down approach&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Concurrency basics: threads, processes, threading in the language you know. Locks , mutex etc.&lt;/li&gt; &#xA; &lt;li&gt;DB basics: types of DB&#39;s (SQL vs noSQL etc ), hashing and indexing, EAV based databases, Sharding, caching for databases, master-slave etc&lt;/li&gt; &#xA; &lt;li&gt;A basic idea of how a basic web architecture is: say load balancers, proxy, servers, Database servers, caching servers, precompute, logging big data etc. Just know broadly what is each layer for.&lt;/li&gt; &#xA; &lt;li&gt;very basic summary of what the &lt;a href=&#34;http://robertgreiner.com/2014/08/cap-theorem-revisited/&#34;&gt;CAP theorem&lt;/a&gt; is (Have never been asked about the theorem itself, but knowing it will help you in designing large-scale systems.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;howtoans&#34;&gt; How to answer in interviews &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;I found &lt;a href=&#34;http://www.hiredintech.com/system-design&#34;&gt;hiredintech&lt;/a&gt; videos an excellent place to start with. The way how to approach a design question as given in the link is really useful. It goes into how we start with clearing the use-cases of the system, then thinking in the abstract manner of the various component and the interactions. Think about the bottlenecks of the system and what is more critical for your system (eg latency vs reliability vs uptime etc) Address those giving the tradeoff of your approach.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.flipkart.com/cracking-coding-interview-150-programming-questions-solutions-english-5th/p/itmdz4pvzbhcv6uv&#34;&gt;system design in crack the coding interview&lt;/a&gt;: good approach on how to begin attacking a problem by first solving for a small usecase then expanding the system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The best way to prepare for such questions is do mock interviews, pick any topic (given below) try to come up with a design and then go and see how and why it is designed in that manner. There is absolutely no alternative to practice!! Whiteboarding a system design question is similar to actually writing code and testing it! Just reading will only take you so far.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;myapproach&#34;&gt;Steps how I approach the system design questions in interviews&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;These are the steps I go through mentally in the interviews, followed by actual interview experiences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a) &lt;strong&gt;Be absolutely sure you understand the problem being asked&lt;/strong&gt;, clarify on the onset rather than assuming anything&lt;/li&gt; &#xA; &lt;li&gt;b) &lt;strong&gt;Use-cases&lt;/strong&gt;. This is critical, you MUST know what is the system going to be used for, what is the scale it is going to be used for. Also, constraints like requests per second, requests types, data written per second, data read per second.&lt;/li&gt; &#xA; &lt;li&gt;c) Solve the problem for a &lt;strong&gt;very small set&lt;/strong&gt;, say, 100 users. This will broadly help you figure out the data structures, components, abstract design of the overall model.&lt;/li&gt; &#xA; &lt;li&gt;d) Write down the various components figured out so far and how will they interact with each other.&lt;/li&gt; &#xA; &lt;li&gt;e) As a rule of thumb remember at least these :&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;processing and servers&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;storage&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;3&#34;&gt; &#xA;   &lt;li&gt;caching&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;4&#34;&gt; &#xA;   &lt;li&gt;concurrency and communication&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;5&#34;&gt; &#xA;   &lt;li&gt;security&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;6&#34;&gt; &#xA;   &lt;li&gt;load balancing and proxy&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;7&#34;&gt; &#xA;   &lt;li&gt;CDN&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ol start=&#34;8&#34;&gt; &#xA;   &lt;li&gt;Monetization: if relevant, how will you monetize? eg. What kind of DB (Is Postgres enough, if not why?), do you need caching and how much, is security a prime concern?&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;f) &lt;strong&gt;Special cases&lt;/strong&gt; for the question asked. Say designing a system for storing thumbnails, will a file system be enough? What if you have to scale for facebook or google? Will a nosql based database work?&lt;/li&gt; &#xA; &lt;li&gt;g) After I have my components in place, what I generally try to do is look for minor optimization in various places according to the use-cases, various tradeoffs that will help in better scaling in 99% cases.&lt;/li&gt; &#xA; &lt;li&gt;h) [Scaling out or up] (&lt;a href=&#34;http://highscalability.com/blog/2014/5/12/4-architecture-issues-when-scaling-web-applications-bottlene.html&#34;&gt;http://highscalability.com/blog/2014/5/12/4-architecture-issues-when-scaling-web-applications-bottlene.html&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;i) Check with the interviewer is there any other special case he is looking to solve? Also, it really helps if you know about the company you are interviewing with, what its architecture is, what will the interviewer have more interest in based on the company and what he works on?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;designques&#34;&gt; Common Design questions &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;It generally depends what you are and you will be working on. Also what your level is but these are some of the more frequent interview questions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Design amazon&#39;s frequently viewed product page (eg. which shows the last 5 items you saw)&lt;/li&gt; &#xA; &lt;li&gt;Design an online poker game for multiplayer. Solve for persistence, concurrency, scale. Draw the ER diagram for this&lt;/li&gt; &#xA; &lt;li&gt;Design a [url compression system] (&lt;a href=&#34;http://www.hiredintech.com/system-design/the-system-design-process/&#34;&gt;http://www.hiredintech.com/system-design/the-system-design-process/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://infolab.stanford.edu/~backrub/google.html&#34;&gt;Search engine&lt;/a&gt; (generally asked with people who have some domain knowledge): basic crawling, collection, hashing etc. Depends on your expertise on this topic&lt;/li&gt; &#xA; &lt;li&gt;Design dropbox&#39;s architecture. &lt;a href=&#34;https://www.youtube.com/watch?v=PE4gwstWhmc&#34;&gt;good talk on this&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Design a &lt;a href=&#34;http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html&#34;&gt;picture sharing website&lt;/a&gt;. How will you store thumbnails, photos? Usage of CDNS? caching at various layers etc.&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Design a news feed (eg. Facebook , Twitter): &lt;a href=&#34;http://www.quora.com/Software-Engineering-Best-Practices/What-are-best-practices-for-building-something-like-a-News-Feed&#34;&gt;news feed&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Design a product based on maps, eg hotel / ATM finder given a location.&lt;/li&gt; &#xA; &lt;li&gt;Design malloc, free and &lt;a href=&#34;http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf&#34;&gt;garbage collection system&lt;/a&gt;. What data structures to use? decorator pattern over malloc etc.&lt;/li&gt; &#xA; &lt;li&gt;Design a site like &lt;a href=&#34;http://www.junglee.com/&#34;&gt;junglee.com&lt;/a&gt; i.e price comparision, availability on e-commerce websites. When and will you cache, how much to query, how to crawl efficiently over e-commerce sites, sharding of databases, basic database design&lt;/li&gt; &#xA; &lt;li&gt;A web application for instant messaging, eg &lt;a href=&#34;http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html&#34;&gt;whatsapp&lt;/a&gt;, facebook chat. Issues of each, scaling problems, status and availability notification etc.&lt;/li&gt; &#xA; &lt;li&gt;Design a system for collaborating over a document simultaneously (eg &lt;a href=&#34;https://neil.fraser.name/writing/sync/&#34;&gt;google docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;(very common:) top &#39;n&#39; or most frequent items of a running stream of data&lt;/li&gt; &#xA; &lt;li&gt;Design election commission architecture : Let&#39;s say we work with the Election Commission. On Counting day, we want to collate the votes received at the lakhs of voting booths all over the country. Each booth has a voting machine, which, when connected to the network, returns an array of the form {[party_id, num_votes],[party_id_2, num_votes_2],...}. We want to collect these and get the current scores in real time. The report we need continuously is how many seats is each party leading in. Please design a system for this.&lt;/li&gt; &#xA; &lt;li&gt;Design a logging system (For web applications, it is common to have a large number of servers running the same application, with a load balancer in front to distribute the incoming requests. In this scenario, we want to check and alarm in case an exception is thrown in any of the servers. We want a system that checks for the appearance of specific words, &#34;Exception&#34;, &#34;Disk Full&#34; etc. in the logs of any of the servers. How would you design this system?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;architecture&#34;&gt;Architectures :&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Personally I looked into the following architectures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://infolab.stanford.edu/~backrub/google.html&#34;&gt;Basics of google search&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Basics of messaging frameworks like Kafka , queuing architectures like rabbitmq.&lt;/li&gt; &#xA; &lt;li&gt;Broad overview and advantages of Redis , mongodb , cassandra.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf&#34;&gt;Google file system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Google architecture] (&lt;a href=&#34;http://highscalability.com/google-architecture&#34;&gt;http://highscalability.com/google-architecture&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances&#34;&gt;Instagram&lt;/a&gt; and other image based social networks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf&#34;&gt;Memcache scaling by facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=z8LU0Cj6BOU&#34;&gt;Twitter scaling&lt;/a&gt; and facebook feeds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf&#34;&gt;facebook graph api&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf&#34;&gt;facebook haystack needle architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZW5_eEKEC28&#34;&gt;youtube architecture and optimizations for video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;blog&#34;&gt;Company engineering blog links &lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;courtesy &lt;a href=&#34;https://github.com/checkcheckzz/system-design-interview#toc&#34;&gt;checkcheckzz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depending on where you are interviewing, go through the company blog. VERY USEFUL IN INTERVIEWS! It really helps if you have an idea of the architecture, as the questions asked will generally be of that domain and your prior knowledge will help out here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nerds.airbnb.com/&#34;&gt;Airbnb Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.amazon.com/blogs&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/&#34;&gt;Amazon AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://bandcamptech.wordpress.com/&#34;&gt;Bandcamp Tech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.simple.com/engineering/&#34;&gt;BankSimple Simple Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://word.bitly.com/&#34;&gt;Bitly Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.cloudera.com/blog/&#34;&gt;Cloudera Developer Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.dropbox.com/&#34;&gt;Dropbox Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.quora.com/&#34;&gt;Engineering at Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codeascraft.com/&#34;&gt;Etsy Code as Craft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Engineering&#34;&gt;Facebook Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://code.flickr.net/&#34;&gt;Flickr Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.foursquare.com/&#34;&gt;Foursquare Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://googleresearch.blogspot.com/&#34;&gt;Google Research Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.groupon.com/&#34;&gt;Groupn Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/&#34;&gt;High Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/&#34;&gt;Instagram Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.linkedin.com/blog&#34;&gt;LinkedIn Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tech.oyster.com/&#34;&gt;Oyster Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.pinterest.com/&#34;&gt;Pinterest Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://devblog.songkick.com/&#34;&gt;Songkick Technology Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.soundcloud.com/blog/&#34;&gt;SoundCloud Backstage Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://corner.squareup.com/&#34;&gt;Square The Corner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.redditblog.com/&#34;&gt;THE REDDIT BLOG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blog/category/engineering&#34;&gt;The GitHub Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://techblog.netflix.com/&#34;&gt;The Netflix Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.twilio.com/engineering&#34;&gt;Twilio Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.twitter.com/&#34;&gt;Twitter Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eng.uber.com/&#34;&gt;Uber Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/walmartlabs&#34;&gt;Walmart Labs Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.webengage.com/&#34;&gt;WebEngage Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://eng.yammer.com/blog/&#34;&gt;Yammer Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineeringblog.yelp.com/&#34;&gt;Yelp Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://smarketshq.com/&#34;&gt;Smarkets Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;tldr&#34;&gt;Low on time ?&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;I would HIGHLY recommend you do not take a shortcut unless you have a week or so for an interview. System design is best learnt by practising, shortcuts might help you in the short term, but would recommend coming back to this link for an in-depth understanding after the interview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a) Go through cs76 and Udacity&#39;s links given above for scaling systems.&lt;/li&gt; &#xA; &lt;li&gt;b) Go through the engineering blog of the company you are interviewing in (or if its a startup go through the link of the company closest to yours)&lt;/li&gt; &#xA; &lt;li&gt;c) See this talk: &lt;a href=&#34;http://www.hiredintech.com/system-design/the-system-design-process/&#34;&gt;http://www.hiredintech.com/system-design/the-system-design-process/&lt;/a&gt; and develop a process for how to answer such questions.&lt;/li&gt; &#xA; &lt;li&gt;d) Remember these terms, just roll over them in your interview in your mind, and if relevant mention it in the interview&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;processing and servers&lt;/li&gt; &#xA; &lt;li&gt;storage&lt;/li&gt; &#xA; &lt;li&gt;caching&lt;/li&gt; &#xA; &lt;li&gt;concurrency and communication&lt;/li&gt; &#xA; &lt;li&gt;security&lt;/li&gt; &#xA; &lt;li&gt;load balancing and proxy&lt;/li&gt; &#xA; &lt;li&gt;CDN&lt;/li&gt; &#xA; &lt;li&gt;Monetization&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Best of luck &lt;span&gt;👍&lt;/span&gt;, feel free to send pull requests to add more content to this git!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hestiacp/hestiacp</title>
    <updated>2023-07-02T02:05:13Z</updated>
    <id>tag:github.com,2023-07-02:/hestiacp/hestiacp</id>
    <link href="https://github.com/hestiacp/hestiacp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hestia Control Panel | A lightweight and powerful control panel for the modern web.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.hestiacp.com/&#34;&gt;Hestia Control Panel&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.hestiacp.com/hestiascreen.png&#34; alt=&#34;Hestia screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Lightweight and powerful control panel for the modern web&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;Latest stable release:&lt;/strong&gt; Version 1.7.7 | &lt;a href=&#34;https://github.com/hestiacp/hestiacp/raw/release/CHANGELOG.md&#34;&gt;View Changelog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.hestiacp.com/&#34;&gt;HestiaCP.com&lt;/a&gt; | &lt;a href=&#34;https://hestiacp.com/docs/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://forum.hestiacp.com/&#34;&gt;Forum&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/nXRUZch&#34;&gt;Discord&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://drone.hestiacp.com/hestiacp/hestiacp&#34;&gt; &lt;img src=&#34;https://drone.hestiacp.com/api/badges/hestiacp/hestiacp/status.svg?ref=refs/heads/main&#34; alt=&#34;Drone Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/hestiacp/hestiacp/actions/workflows/lint.yml&#34;&gt; &lt;img src=&#34;https://github.com/hestiacp/hestiacp/actions/workflows/lint.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint Status&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Welcome!&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Hestia Control Panel is designed to provide administrators an easy to use web and command line interface, enabling them to quickly deploy and manage web domains, mail accounts, DNS zones, and databases from one central dashboard without the hassle of manually deploying and configuring individual components or services.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ST87LQH2CHGLA&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt; Bitcoin : bc1q48jt5wg5jaj8g9zy7c3j03cv57j2m2u5anlutu&lt;br&gt; Ethereum : 0xfF3Dd2c889bd0Ff73d8085B84A314FC7c88e5D51&lt;br&gt; Binance: bnb1l4ywvw5ejfmsgjdcx8jn5lxj7zsun8ktfu7rh8&lt;br&gt; Smart Chain: 0xfF3Dd2c889bd0Ff73d8085B84A314FC7c88e5D51&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features and Services&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache2 and NGINX with PHP-FPM&lt;/li&gt; &#xA; &lt;li&gt;Multiple PHP versions (5.6 - 8.2, 8.0 as default)&lt;/li&gt; &#xA; &lt;li&gt;DNS Server (Bind) with clustering capabilities&lt;/li&gt; &#xA; &lt;li&gt;POP/IMAP/SMTP mail services with Anti-Virus, Anti-Spam, and Webmail (ClamAV, SpamAssassin, Sieve, Roundcube)&lt;/li&gt; &#xA; &lt;li&gt;MariaDB/MySQL and/or PostgreSQL databases&lt;/li&gt; &#xA; &lt;li&gt;Let&#39;s Encrypt SSL support with wildcard certificates&lt;/li&gt; &#xA; &lt;li&gt;Firewall with brute-force attack detection and IP lists (iptables, fail2ban, and ipset).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported platforms and operating systems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Hestia Control Panel does not support 32 bit operating systems!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Debian:&lt;/strong&gt; 11 or 10&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ubuntu:&lt;/strong&gt; 22.04LTS, 20.04 LTS&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Hestia Control Panel in combination with OpenVZ 7 or lower might have issue Bind9 server not starting or issues with Firewall. If you use a Virtual Private Server we strongly advice you to use something based on KVM or LXC!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing Hestia Control Panel&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Hestia Control Panel must be installed on top of a fresh operating system installation to ensure proper functionality.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While we have taken every effort to make the installation process and the control panel interface as friendly as possible (even for new users), it is assumed that you will have some prior knowledge and understanding in the basics how to set up a Linux server before continuing.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1: Log in&lt;/h3&gt; &#xA;&lt;p&gt;To start the installation, you will need to be logged in as &lt;strong&gt;root&lt;/strong&gt; or a user with super-user privileges. You can perform the installation either directly from the command line console or remotely via SSH:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh root@your.server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2: Download&lt;/h3&gt; &#xA;&lt;p&gt;Download the installation script for the latest release:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/hestiacp/hestiacp/release/install/hst-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the download fails due to an SSL validation error, please be sure you&#39;ve installed the ca-certificate package on your system - you can do this with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get update &amp;amp;&amp;amp; apt-get install ca-certificates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3: Run&lt;/h3&gt; &#xA;&lt;p&gt;To begin the installation process, simply run the script and follow the on-screen prompts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash hst-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will receive a welcome email at the address specified during installation (if applicable) and on-screen instructions after the installation is completed to log in and access your server.&lt;/p&gt; &#xA;&lt;h3&gt;Custom installation&lt;/h3&gt; &#xA;&lt;p&gt;You may specify a number of various flags during installation to only install the features in which you need. To view a list of available options, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash hst-install.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, You can use &lt;a href=&#34;https://hestiacp.com/install.html&#34;&gt;https://hestiacp.com/install.html&lt;/a&gt; which allows you to easily generate the installation command via GUI.&lt;/p&gt; &#xA;&lt;h2&gt;How to upgrade an existing installation&lt;/h2&gt; &#xA;&lt;p&gt;Automatic Updates are enabled by default on new installations of Hestia Control Panel and can be managed from &lt;strong&gt;Server Settings &amp;gt; Updates&lt;/strong&gt;. To manually check for and install available updates, use the apt package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get update&#xA;apt-get upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Issues &amp;amp; Support Requests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you encounter a general problem while using Hestia Control Panel and need help, please &lt;a href=&#34;https://forum.hestiacp.com/&#34;&gt;visit our forum&lt;/a&gt; to search for potential solutions or post a new thread where community members can assist.&lt;/li&gt; &#xA; &lt;li&gt;Bugs and other reproducible issues should be filed via GitHub by &lt;a href=&#34;https://github.com/hestiacp/hestiacp/issues&#34;&gt;creating a new issue report&lt;/a&gt; so that our developers can investigate further. Please note that requests for support will be redirected to our forum.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT: We &lt;em&gt;cannot&lt;/em&gt; provide support for requests that do not describe the troubleshooting steps that have already been performed, or for third-party applications not related to Hestia Control Panel (such as WordPress). Please make sure that you include as much information as possible in your forum posts or issue reports!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute to the project, please &lt;a href=&#34;https://github.com/hestiacp/hestiacp/raw/release/CONTRIBUTING.md&#34;&gt;read our Contribution Guidelines&lt;/a&gt; for a brief overview of our development process and standards.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;&#34;Hestia Control Panel&#34;, &#34;HestiaCP&#34;, and the Hestia logo are original copyright of hestiacp.com and the following restrictions apply:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You are allowed to:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use the names &#34;Hestia Control Panel&#34;, &#34;HestiaCP&#34;, or the Hestia logo in any context directly related to the application or the project. This includes the application itself, local communities and news or blog posts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;You are not allowed to:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;sell or redistribute the application under the name &#34;Hestia Control Panel&#34;, &#34;HestiaCP&#34;, or similar derivatives, including the use of the Hestia logo in any brand or marketing materials related to revenue generating activities,&lt;/li&gt; &#xA; &lt;li&gt;use the names &#34;Hestia Control Panel&#34;, &#34;HestiaCP&#34;, or the Hestia logo in any context that is not related to the project,&lt;/li&gt; &#xA; &lt;li&gt;alter the name &#34;Hestia Control Panel&#34;, &#34;HestiaCP&#34;, or the Hestia logo in any way.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Hestia Control Panel is licensed under &lt;a href=&#34;https://github.com/hestiacp/hestiacp/raw/release/LICENSE&#34;&gt;GPL v3&lt;/a&gt; license, and is based on the &lt;a href=&#34;https://vestacp.com/&#34;&gt;VestaCP&lt;/a&gt; project.&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
</feed>