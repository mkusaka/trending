<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-29T02:02:07Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>remote-android/redroid-doc</title>
    <updated>2023-10-29T02:02:07Z</updated>
    <id>tag:github.com,2023-10-29:/remote-android/redroid-doc</id>
    <link href="https://github.com/remote-android/redroid-doc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;redroid (Remote-Android) is a multi-arch, GPU enabled, Android in Cloud solution. Track issues / docs here&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/README.zh-cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#native-bridge-support&#34;&gt;Native Bridge Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#gms-support&#34;&gt;GMS Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#webrtc-streaming&#34;&gt;WebRTC Streaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#how-to-build&#34;&gt;How To Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#contact-me&#34;&gt;Contact Me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;redroid&lt;/em&gt; (&lt;em&gt;Re&lt;/em&gt;mote an&lt;em&gt;Droid&lt;/em&gt;) is a GPU accelerated AIC (Android In Cloud) solution. You can boot many instances in Linux host (&lt;code&gt;Docker&lt;/code&gt;, &lt;code&gt;podman&lt;/code&gt;, &lt;code&gt;k8s&lt;/code&gt; etc.). &lt;em&gt;redroid&lt;/em&gt; supports both &lt;code&gt;arm64&lt;/code&gt; and &lt;code&gt;amd64&lt;/code&gt; architectures. &lt;em&gt;redroid&lt;/em&gt; is suitable for Cloud Gaming, Virtualise Phones, Automation Test and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/assets/redroid11.png&#34; alt=&#34;Screenshot of redroid 11&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android 14 (&lt;code&gt;redroid/redroid:14.0.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 14 64bit only (&lt;code&gt;redroid/redroid:14.0.0_64only-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 13 (&lt;code&gt;redroid/redroid:13.0.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 13 64bit only (&lt;code&gt;redroid/redroid:13.0.0_64only-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 12 (&lt;code&gt;redroid/redroid:12.0.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 12 64bit only (&lt;code&gt;redroid/redroid:12.0.0_64only-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 11 (&lt;code&gt;redroid/redroid:11.0.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 10 (&lt;code&gt;redroid/redroid:10.0.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 9 (&lt;code&gt;redroid/redroid:9.0.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 8.1 (&lt;code&gt;redroid/redroid:8.1.0-latest&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;redroid&lt;/em&gt; should capabale running on any linux (with some kernel features enabled).&lt;/p&gt; &#xA;&lt;p&gt;Quick start on &lt;em&gt;Ubuntu 20.04&lt;/em&gt; here; Check &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/deploy/README.md&#34;&gt;deploy section&lt;/a&gt; for other distros.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## install docker https://docs.docker.com/engine/install/#server&#xA;&#xA;## install required kernel modules&#xA;apt install linux-modules-extra-`uname -r`&#xA;modprobe binder_linux devices=&#34;binder,hwbinder,vndbinder&#34;&#xA;modprobe ashmem_linux&#xA;&#xA;&#xA;## running redroid&#xA;docker run -itd --rm --privileged \&#xA;    --pull always \&#xA;    -v ~/data:/data \&#xA;    -p 5555:5555 \&#xA;    redroid/redroid:11.0.0-latest&#xA;&#xA;### Explanation:&#xA;###   --pull always    -- use latest image&#xA;###   -v ~/data:/data  -- mount data partition&#xA;###   -p 5555:5555     -- expose adb port&#xA;&#xA;&#xA;## install adb https://developer.android.com/studio#downloads&#xA;adb connect localhost:5555&#xA;### NOTE: change localhost to IP if running redroid remotely&#xA;&#xA;## view redroid screen&#xA;## install scrcpy https://github.com/Genymobile/scrcpy/blob/master/README.md#get-the-app&#xA;scrcpy -s localhost:5555&#xA;### NOTE: change localhost to IP if running redroid remotely&#xA;###     typically running scrcpy on your local PC&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;## running redroid with custom settings (custom display for example)&#xA;docker run -itd --rm --privileged \&#xA;    --pull always \&#xA;    -v ~/data:/data \&#xA;    -p 5555:5555 \&#xA;    redroid/redroid:11.0.0-latest \&#xA;    androidboot.redroid_width=1080 \&#xA;    androidboot.redroid_height=1920 \&#xA;    androidboot.redroid_dpi=480 \&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_width&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;display width&lt;/td&gt; &#xA;   &lt;td&gt;720&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_height&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;display height&lt;/td&gt; &#xA;   &lt;td&gt;1280&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_fps&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;display FPS&lt;/td&gt; &#xA;   &lt;td&gt;30(GPU enabled)&lt;br&gt; 15 (GPU not enabled)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_dpi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;display DPI&lt;/td&gt; &#xA;   &lt;td&gt;320&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.use_memfd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;use &lt;code&gt;memfd&lt;/code&gt; to replace deprecated &lt;code&gt;ashmem&lt;/code&gt;&lt;br&gt;plan to enable by default&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.use_redroid_overlayfs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;use &lt;code&gt;overlayfs&lt;/code&gt; to share &lt;code&gt;data&lt;/code&gt; partition&lt;br&gt;&lt;code&gt;/data-base&lt;/code&gt;: shared &lt;code&gt;data&lt;/code&gt; partition&lt;br&gt;&lt;code&gt;/data-diff&lt;/code&gt;: private data&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_ndns&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number of DNS server, &lt;code&gt;8.8.8.8&lt;/code&gt; will be used if no DNS server specified&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_dns&amp;lt;1..N&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DNS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_proxy_type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proxy type; choose from: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;pac&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;unassigned&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_proxy_host&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_proxy_port&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3128&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_proxy_exclude_list&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;comma seperated list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_net_proxy_pac&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_gpu_mode&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;choose from: &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;guest&lt;/code&gt;;&lt;br&gt;&lt;code&gt;guest&lt;/code&gt;: use software rendering;&lt;br&gt;&lt;code&gt;host&lt;/code&gt;: use GPU accelerated rendering;&lt;br&gt;&lt;code&gt;auto&lt;/code&gt;: auto detect&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;androidboot.redroid_gpu_node&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;auto-detect&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ro.xxx&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEBUG&lt;/strong&gt; purpose, allow override &lt;code&gt;ro.xxx&lt;/code&gt; prop; For example, set &lt;code&gt;ro.secure=0&lt;/code&gt;, then root adb shell provided by default&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Native Bridge Support&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to run &lt;code&gt;arm&lt;/code&gt; Apps in &lt;code&gt;x86&lt;/code&gt; &lt;em&gt;redroid&lt;/em&gt; instance via &lt;code&gt;libhoudini&lt;/code&gt;, &lt;code&gt;libndk_translation&lt;/code&gt; or &lt;code&gt;QEMU translator&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/zhouziyang/libndk_translation&#34;&gt;@zhouziyang/libndk_translation&lt;/a&gt; for prebuilt &lt;code&gt;libndk_translation&lt;/code&gt;. Published &lt;code&gt;redroid&lt;/code&gt; images already got &lt;code&gt;libndk_translation&lt;/code&gt; included.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# example structure, be careful the file owner and mode&#xA;&#xA;system/&#xA;├── bin&#xA;│&amp;nbsp;&amp;nbsp; ├── arm&#xA;│&amp;nbsp;&amp;nbsp; └── arm64&#xA;├── etc&#xA;│&amp;nbsp;&amp;nbsp; ├── binfmt_misc&#xA;│&amp;nbsp;&amp;nbsp; └── init&#xA;├── lib&#xA;│&amp;nbsp;&amp;nbsp; ├── arm&#xA;│&amp;nbsp;&amp;nbsp; └── libnb.so&#xA;└── lib64&#xA;    ├── arm64&#xA;    └── libnb.so&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# Dockerfile&#xA;FROM redroid/redroid:11.0.0-latest&#xA;&#xA;ADD native-bridge.tar /&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# build docker image&#xA;docker build . -t redroid:11.0.0-nb&#xA;&#xA;# running&#xA;docker run -itd --rm --privileged \&#xA;    -v ~/data11-nb:/data \&#xA;    -p 5555:5555 \&#xA;    redroid:11.0.0-nb \&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GMS Support&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to add GMS (Google Mobile Service) support in &lt;em&gt;redroid&lt;/em&gt; via &lt;a href=&#34;https://opengapps.org/&#34;&gt;Open GApps&lt;/a&gt;, &lt;a href=&#34;https://microg.org/&#34;&gt;MicroG&lt;/a&gt; or &lt;a href=&#34;https://gitlab.com/MindTheGapps/vendor_gapps&#34;&gt;MindTheGapps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/android-builder-docker&#34;&gt;android-builder-docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;WebRTC Streaming&lt;/h2&gt; &#xA;&lt;p&gt;Plan to port &lt;code&gt;WebRTC&lt;/code&gt; solutions from &lt;code&gt;cuttlefish&lt;/code&gt;, including frontend (HTML5), backend and many virtual HALs.&lt;/p&gt; &#xA;&lt;h2&gt;How To Build&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s Same as AOSP building process. But I suggest to use &lt;code&gt;docker&lt;/code&gt; to build.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/android-builder-docker&#34;&gt;android-builder-docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to collect debug blobs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;curl -fsSL https://raw.githubusercontent.com/remote-android/redroid-doc/master/debug.sh | sudo bash -s -- [CONTAINER]&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;omit &lt;em&gt;CONTAINER&lt;/em&gt; if not exist any more&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Container disappeared immediately&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;make sure the required kernel modules are installed; run &lt;code&gt;dmesg -T&lt;/code&gt; for detailed logs&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Container running, but adb cannot connect (device offline etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;run &lt;code&gt;docker exec -it &amp;lt;container&amp;gt; sh&lt;/code&gt;, then check &lt;code&gt;ps -A&lt;/code&gt; and &lt;code&gt;logcat&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;try &lt;code&gt;dmesg -T&lt;/code&gt; if cannot get a container shell&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;remote-android.slack.com (invite link: &lt;a href=&#34;https://join.slack.com/t/remote-android/shared_invite/zt-q40byk2o-YHUgWXmNIUC1nweQj0L9gA&#34;&gt;https://join.slack.com/t/remote-android/shared_invite/zt-q40byk2o-YHUgWXmNIUC1nweQj0L9gA&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:ziyang.zhou@outlook.com&#34;&gt;ziyang.zhou@outlook.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;redroid&lt;/em&gt; itself is under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License&lt;/a&gt;, since &lt;em&gt;redroid&lt;/em&gt; includes many 3rd party modules, you may need to examine license carefully.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;redroid&lt;/em&gt; kernel modules are under &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;GPL v2&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>233boy/Xray</title>
    <updated>2023-10-29T02:02:07Z</updated>
    <id>tag:github.com,2023-10-29:/233boy/Xray</id>
    <link href="https://github.com/233boy/Xray" rel="alternate"></link>
    <summary type="html">&lt;p&gt;最好用的 Xray 一键安装脚本 &amp; 管理脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;介绍&lt;/h1&gt; &#xA;&lt;p&gt;最好用的 Xray 一键安装脚本 &amp;amp; 管理脚本&lt;/p&gt; &#xA;&lt;h1&gt;特点&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;快速安装&lt;/li&gt; &#xA; &lt;li&gt;无敌好用&lt;/li&gt; &#xA; &lt;li&gt;零学习成本&lt;/li&gt; &#xA; &lt;li&gt;自动化 TLS&lt;/li&gt; &#xA; &lt;li&gt;简化所有流程&lt;/li&gt; &#xA; &lt;li&gt;屏蔽 BT&lt;/li&gt; &#xA; &lt;li&gt;屏蔽中国 IP&lt;/li&gt; &#xA; &lt;li&gt;使用 API 操作&lt;/li&gt; &#xA; &lt;li&gt;兼容 Xray 命令&lt;/li&gt; &#xA; &lt;li&gt;强大的快捷参数&lt;/li&gt; &#xA; &lt;li&gt;支持所有常用协议&lt;/li&gt; &#xA; &lt;li&gt;一键添加 Shadowsocks 2022&lt;/li&gt; &#xA; &lt;li&gt;一键添加 VMess-(TCP/mKCP/QUIC)&lt;/li&gt; &#xA; &lt;li&gt;一键添加 VMess-(WS/H2/gRPC)-TLS&lt;/li&gt; &#xA; &lt;li&gt;一键添加 VLESS-(WS/H2/gRPC)-TLS&lt;/li&gt; &#xA; &lt;li&gt;一键添加 Trojan-(WS/H2/gRPC)-TLS&lt;/li&gt; &#xA; &lt;li&gt;一键添加 VLESS-XTLS-uTLS-REALITY&lt;/li&gt; &#xA; &lt;li&gt;一键添加 VMess-(TCP/mKCP/QUIC) 动态端口&lt;/li&gt; &#xA; &lt;li&gt;一键启用 BBR&lt;/li&gt; &#xA; &lt;li&gt;一键更改伪装网站&lt;/li&gt; &#xA; &lt;li&gt;一键更改 (端口/UUID/密码/域名/路径/加密方式/SNI/动态端口/等...)&lt;/li&gt; &#xA; &lt;li&gt;还有更多...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;设计理念&lt;/h1&gt; &#xA;&lt;p&gt;设计理念为：&lt;strong&gt;高效率，超快速，极易用&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;脚本基于作者的自身使用需求，以 &lt;strong&gt;多配置同时运行&lt;/strong&gt; 为核心设计&lt;/p&gt; &#xA;&lt;p&gt;并且专门优化了，添加、更改、查看、删除、这四项常用功能&lt;/p&gt; &#xA;&lt;p&gt;你只需要一条命令即可完成 添加、更改、查看、删除、等操作&lt;/p&gt; &#xA;&lt;p&gt;例如，添加一个配置仅需不到 1 秒！瞬间完成添加！其他操作亦是如此！&lt;/p&gt; &#xA;&lt;p&gt;脚本的参数非常高效率并且超级易用，请掌握参数的使用&lt;/p&gt; &#xA;&lt;h1&gt;文档&lt;/h1&gt; &#xA;&lt;p&gt;安装及使用：&lt;a href=&#34;https://233boy.com/xray/xray-script/&#34;&gt;https://233boy.com/xray/xray-script/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;帮助&lt;/h1&gt; &#xA;&lt;p&gt;使用：&lt;code&gt;xray help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Xray script v1.0 by 233boy&#xA;Usage: xray [options]... [args]...&#xA;&#xA;基本:&#xA;   v, version                                      显示当前版本&#xA;   ip                                              返回当前主机的 IP&#xA;   pbk                                             同等于 xray x25519&#xA;   get-port                                        返回一个可用的端口&#xA;   ss2022                                          返回一个可用于 Shadowsocks 2022 的密码&#xA;&#xA;一般:&#xA;   a, add [protocol] [args... | auto]              添加配置&#xA;   c, change [name] [option] [args... | auto]      更改配置&#xA;   d, del [name]                                   删除配置**&#xA;   i, info [name]                                  查看配置&#xA;   qr [name]                                       二维码信息&#xA;   url [name]                                      URL 信息&#xA;   log                                             查看日志&#xA;   logerr                                          查看错误日志&#xA;&#xA;更改:&#xA;   dp, dynamicport [name] [start | auto] [end]     更改动态端口&#xA;   full [name] [...]                               更改多个参数&#xA;   id [name] [uuid | auto]                         更改 UUID&#xA;   host [name] [domain]                            更改域名&#xA;   port [name] [port | auto]                       更改端口&#xA;   path [name] [path | auto]                       更改路径&#xA;   passwd [name] [password | auto]                 更改密码&#xA;   key [name] [Private key | atuo] [Public key]    更改密钥&#xA;   type [name] [type | auto]                       更改伪装类型&#xA;   method [name] [method | auto]                   更改加密方式&#xA;   sni [name] [ ip | domain]                       更改 serverName&#xA;   seed [name] [seed | auto]                       更改 mKCP seed&#xA;   new [name] [...]                                更改协议&#xA;   web [name] [domain]                             更改伪装网站&#xA;&#xA;进阶:&#xA;   dd, ddel [name...]                              删除多个配置**&#xA;   fix [name]                                      修复一个配置&#xA;   fix-all                                         修复全部配置&#xA;   fix-caddyfile                                   修复 Caddyfile&#xA;   fix-config.json                                 修复 config.json&#xA;&#xA;管理:&#xA;   un, uninstall                                   卸载&#xA;   u, update [core | sh | caddy] [ver]             更新&#xA;   U, update.sh                                    更新脚本&#xA;   s, status                                       运行状态&#xA;   start, stop, restart [caddy]                    启动, 停止, 重启&#xA;   t, test                                         测试运行&#xA;   reinstall                                       重装脚本&#xA;&#xA;测试:&#xA;   client, genc [name]                             显示用于客户端 JSON, 仅供参考&#xA;   debug [name]                                    显示一些 debug 信息, 仅供参考&#xA;   gen [...]                                       同等于 add, 但只显示 JSON 内容, 不创建文件, 测试使用&#xA;   no-auto-tls [...]                               同等于 add, 但禁止自动配置 TLS, 可用于 *TLS 相关协议&#xA;   xapi [...]                                      同等于 xray api, 但 API 后端使用当前运行的 Xray 服务&#xA;&#xA;其他:&#xA;   bbr                                             启用 BBR, 如果支持&#xA;   bin [...]                                       运行 Xray 命令, 例如: xray bin help&#xA;   api, x25519, tls, run, uuid  [...]              兼容 Xray 命令&#xA;   h, help                                         显示此帮助界面&#xA;&#xA;谨慎使用 del, ddel, 此选项会直接删除配置; 无需确认&#xA;反馈问题) https://github.com/233boy/xray/issues&#xA;文档(doc) https://233boy.com/xray/xray-script/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>n0mi1k/apk2url</title>
    <updated>2023-10-29T02:02:07Z</updated>
    <id>tag:github.com,2023-10-29:/n0mi1k/apk2url</id>
    <link href="https://github.com/n0mi1k/apk2url" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool to quickly extract IP and URL endpoints from APKs by disassembling and decompiling&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;apk2url&lt;/h1&gt; &#xA;&lt;p&gt;apk2url easily extracts URL and IP endpoints from an APK file to a .txt output. This is suitable for information gathering by the red team, penetration testers and developers to quickly identify endpoints associated with an application.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: Why use apk2url?&lt;/strong&gt; When compared with APKleaks, MobSF and AppInfoScanner, apk2url identifies a significantly higher number of endpoints.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Inspired by &lt;a href=&#34;https://github.com/s0md3v/Diggy&#34;&gt;diggy&lt;/a&gt;, apk2url is rewritten and upgraded with IP support, stronger regex, auto filtering and Jadx decompilation.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running apk2url&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/n0mi1k/apk2url&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./apk2url.sh /path/to/apk/file.apk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also install directly for easy access by running &lt;code&gt;./install.sh&lt;/code&gt;.&lt;br&gt; After that you can run apk2url anywhere:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apk2url /path/to/apk/file.apk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default there are 2 output files in the &#34;endpoints&#34; directory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&amp;lt;apkname&amp;gt;_endpoints.txt - &lt;strong&gt;Contains endpoints with full URL paths&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&amp;lt;apkname&amp;gt;_uniqurls.txt - &lt;strong&gt;Contains unique endpoint domains and IPs&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, the program does not log the APK file path where endpoints are discovered.&lt;br&gt; To enable logging, run as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apk2url /path/to/apk/file.apk log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;*&lt;em&gt;Tested on Kali 2023.2 and Ubuntu 22.04&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;apt&lt;/code&gt; for easy installation of these tools required by apk2url:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apktool&lt;/li&gt; &#xA; &lt;li&gt;Jadx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demonstration&lt;/h2&gt; &#xA;&lt;img width=&#34;628&#34; alt=&#34;image&#34; src=&#34;https://github.com/n0mi1k/apk2url/assets/28621928/7a251297-c1e5-49ba-abe2-6aba67c9fee7&#34;&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This tool is for educational and testing purposes only. Do not use it to exploit the vulnerability on any system that you do not own or have permission to test. The authors of this script are not responsible for any misuse or damage caused by its use.&lt;/p&gt;</summary>
  </entry>
</feed>