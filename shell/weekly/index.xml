<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-14T02:06:39Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>snakem982/proxypool</title>
    <updated>2024-01-14T02:06:39Z</updated>
    <id>tag:github.com,2024-01-14:/snakem982/proxypool</id>
    <link href="https://github.com/snakem982/proxypool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free Proxies，Free Nodes，免费节点，白嫖节点，免费vpn，免费v2ray，免费Trojan，免费SS，免费clash，每日更新，Free VPN，Free v2ray，Free Trojan，Free SS，Free Clash，Updated daily&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;proxypool&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/ss%7Cssr%7Cvmess%7Cvless%7Ctrojan-free-orange&#34; alt=&#34;Static Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/w/snakem982/proxypool?color=DC52FC&#34; alt=&#34;GitHub commit activity (branch)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;超级clash节点池聚合. 蛋痒了就更新。 欢迎star，共享免费节点。 &lt;br&gt; Super clash node pool aggregation. Update when I have time. Welcome to star and share free nodes.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;font color=&#34;red&#34;&gt;说在前面&lt;br&gt;Friendly Reminder&lt;/font&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;节点来自公开在互联网上的信息，不保证财产信息安全和稳定性。不建议长期使用！！！&lt;br&gt; Nodes come from information published on the Internet, which does not guarantee the security and stability of property information. Long-term use is not recommended! ! !&lt;/font&gt;&lt;br&gt; 若要持续、稳定、安全、高速的节点请自建，下面是高性价比服务器推荐：&lt;br&gt; If you want a continuous, stable, safe, and high-speed node, please build it yourself. The following is a self-built node cost-effective server recommendation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://my.racknerd.com/aff.php?aff=8613&amp;amp;pid=826&#34; title=&#34;2024美国RackNerd促销&#34;&gt;1500G/月Month 网速1Gbps 1vCPU 1G RAM $11.49/年Year 2024美国RackNerd促销&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://my.racknerd.com/aff.php?aff=8613&amp;amp;pid=827&#34; title=&#34;2024美国RackNerd促销&#34;&gt;2500G/月Month 网速1Gbps 1vCPU 2G RAM $17.38/年Year 2024美国RackNerd促销&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://my.racknerd.com/aff.php?aff=8613&amp;amp;pid=828&#34; title=&#34;2024美国RackNerd促销&#34;&gt;5000G/月Month 网速1Gbps 2vCPU 3G RAM $27.98/年Year 2024美国RackNerd促销&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://my.racknerd.com/aff.php?aff=8613&amp;amp;pid=829&#34; title=&#34;2024美国RackNerd促销&#34;&gt;8000G/月Month 网速1Gbps 2vCPU 4G RAM $37.38/年Year 2024美国RackNerd促销&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;订阅地址，六个小时更新一次。&lt;br&gt;Subscription url, updated every six hours.&lt;/h2&gt; &#xA;&lt;h3&gt;mihomo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/snakem982/proxypool/main/mihomo4a06d.yaml&#34;&gt;https://raw.githubusercontent.com/snakem982/proxypool/main/mihomo4a06d.yaml&lt;/a&gt; (需要魔法 Need Proxy) &lt;a href=&#34;https://ghproxy.com/https://raw.githubusercontent.com/snakem982/proxypool/main/mihomo4a06d.yaml&#34;&gt;https://ghproxy.com/https://raw.githubusercontent.com/snakem982/proxypool/main/mihomo4a06d.yaml&lt;/a&gt; &lt;a href=&#34;https://github.moeyy.xyz/https://raw.githubusercontent.com/snakem982/proxypool/main/mihomo4a06d.yaml&#34;&gt;https://github.moeyy.xyz/https://raw.githubusercontent.com/snakem982/proxypool/main/mihomo4a06d.yaml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;clash&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/snakem982/proxypool/main/clash4a06d.yaml&#34;&gt;https://raw.githubusercontent.com/snakem982/proxypool/main/clash4a06d.yaml&lt;/a&gt; (需要魔法 Need Proxy) &lt;a href=&#34;https://ghproxy.com/https://raw.githubusercontent.com/snakem982/proxypool/main/clash4a06d.yaml&#34;&gt;https://ghproxy.com/https://raw.githubusercontent.com/snakem982/proxypool/main/clash4a06d.yaml&lt;/a&gt; &lt;a href=&#34;https://github.moeyy.xyz/https://raw.githubusercontent.com/snakem982/proxypool/main/clash4a06d.yaml&#34;&gt;https://github.moeyy.xyz/https://raw.githubusercontent.com/snakem982/proxypool/main/clash4a06d.yaml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;v2ray&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/snakem982/proxypool/main/v2ray4a06d.txt&#34;&gt;https://raw.githubusercontent.com/snakem982/proxypool/main/v2ray4a06d.txt&lt;/a&gt; (需要魔法 Need Proxy) &lt;a href=&#34;https://ghproxy.com/https://raw.githubusercontent.com/snakem982/proxypool/main/v2ray4a06d.txt&#34;&gt;https://ghproxy.com/https://raw.githubusercontent.com/snakem982/proxypool/main/v2ray4a06d.txt&lt;/a&gt; &lt;a href=&#34;https://github.moeyy.xyz/https://raw.githubusercontent.com/snakem982/proxypool/main/v2ray4a06d.txt&#34;&gt;https://github.moeyy.xyz/https://raw.githubusercontent.com/snakem982/proxypool/main/v2ray4a06d.txt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;免责声明 &lt;br&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;该项目仅供个人和教育用途。 使用本项目时请遵守相关法律法规。 项目所有者对内容的使用不承担任何责任。 &lt;br&gt; This project is meant for personal and educational uses only. Please follow relevant laws and regulations when using this project. Project owner is not responsible or liable in any manner for the use of the content.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MegaManSec/SSH-Snake</title>
    <updated>2024-01-14T02:06:39Z</updated>
    <id>tag:github.com,2024-01-14:/MegaManSec/SSH-Snake</id>
    <link href="https://github.com/MegaManSec/SSH-Snake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SSH-Snake is a self-propagating, self-replicating, file-less script that automates the post-exploitation task of SSH private key and host discovery.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SSH-Snake: Automated SSH-Based Network Traversal&lt;/h1&gt; &#xA;&lt;p&gt;🐍 SSH-Snake is a powerful tool designed to perform automatic network traversal using SSH private keys discovered on systems, with the objective of creating a comprehensive map of a network and its dependencies, identifying to what extent a network can be compromised using SSH and SSH private keys starting from a particular system.&lt;/p&gt; &#xA;&lt;p&gt;SSH-Snake can automatically reveal the relationship between systems which are connected via SSH, which would normally take a tremendous amount of time and effort to perform manually.&lt;/p&gt; &#xA;&lt;p&gt;In other words, SSH-Snake performs the following tasks automatically and recursively:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On the current system, find any SSH private keys,&lt;/li&gt; &#xA; &lt;li&gt;On the current system, find any hosts or destinations (&lt;code&gt;user@host&lt;/code&gt;) that the private keys may be accepted,&lt;/li&gt; &#xA; &lt;li&gt;Attempt to SSH into all of the destinations using all of the private keys discovered,&lt;/li&gt; &#xA; &lt;li&gt;If a destination is successfully connected to, repeats steps #1 - #4 on the connected-to system.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It&#39;s completely self-replicating and self-propagating -- and completely fileless. In many ways, SSH-Snake is actually a &lt;a href=&#34;https://en.wikipedia.org/wiki/Computer_worm&#34;&gt;worm&lt;/a&gt;: It replicates itself and spreads itself from one system to another as far as it can.&lt;/p&gt; &#xA;&lt;p&gt;Instead of manually jumping between systems with SSH keys like it&#39;s a Super Mario game, let SSH-Snake do the work for you.&lt;/p&gt; &#xA;&lt;p&gt;Although this tool is intended for hacking purposes, sysadmins can also use it to better understand their infrastructure and network. If you want to disable the printing of private keys discovered, &lt;a href=&#34;https://github.com/MegaManSec/SSH-Snake/raw/7ae7ef0afe0e067a1b96f69e508df52831a08b8b/Snake.sh#L964&#34;&gt;comment out this line of code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An in-depth look at how this script actually works, technical details, interesting discoveries, design decisions, benchmarking, and lessons learnt, check out &lt;a href=&#34;https://joshua.hu/ssh-snake-ssh-network-traversal-discover-ssh-private-keys-network-graph&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/tools/SSH-Snake-Screenshot.png&#34; alt=&#34;&#34;&gt;A reduced screenshot from the output of SSH-Snake in a very small network.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/tools/SSH-Snake-CytoScape.svg?sanitize=true&#34; alt=&#34;A graph visualizing the relation between systems using SSH&#34;&gt;The blue nodes indicate the &lt;em&gt;destination&lt;/em&gt; can connect to itself (user@host&amp;lt;--&amp;gt;user@host). The red edges indicate that the connection is bi-directional (user1@host1&amp;lt;--&amp;gt;user2@host2).&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/tools/SSH-Snake-Gephi.svg?sanitize=true&#34; alt=&#34;A graph visualizing the relation between systems using SSH&#34;&gt;The green nodes indicate a &lt;em&gt;host&lt;/em&gt; (without a username) that can connect to itself (host1&amp;lt;--&amp;gt;host1). The green edges indicate that the connection is bi-directional (host1&amp;lt;--&amp;gt;host2). The gray host in the top right corner is the host that the script was initially executed on.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/tools/SSH-Snake-dot-circo.png&#34; alt=&#34;A graph visualizing the relation between systems using SSH&#34;&gt;The blue nodes indicate the &lt;em&gt;destination&lt;/em&gt; can connect to itself (user@host&amp;lt;--&amp;gt;user@host). The red edges indicate that the connection is bi-directional (user1@host1&amp;lt;--&amp;gt;user2@host2).&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Using and Running SSH-Snake&lt;/h1&gt; &#xA;&lt;p&gt;SSH-Snake can either be downloaded or piped into bash:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/Snake.nocomments.sh&#xA;bash ./Snake.nocomments.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/Snake.nocomments.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;About SSH-Snake&lt;/h1&gt; &#xA;&lt;p&gt;SSH-Snake seamlessly emulates what a human adversary would do to discover SSH private keys and destinations where they can be used to connect to. Written entirely in Bash, it operates with a minimal set of dependencies commonly available on major Linux (and MacOS) systems: &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;coreutils&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;code&gt;uniq&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;tr&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, and &lt;code&gt;cat&lt;/code&gt;. &lt;code&gt;getent&lt;/code&gt; OR &lt;code&gt;dscacheutil&lt;/code&gt; is required. &lt;code&gt;sed&lt;/code&gt; is required for only the very first system. Likewise, &lt;code&gt;sudo&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;, &lt;code&gt;arp&lt;/code&gt;, &lt;code&gt;ifconfig&lt;/code&gt;, &lt;code&gt;ipconfig&lt;/code&gt;, and &lt;code&gt;xargs&lt;/code&gt; may also be used, but they are not required (and the script gracefully handles cases where they are not present). If a system is discovered without any of the required packages, it gracefully fails, alerting the user that the scan could not continue on that particular system (and backtracks, continuing from the previous system.)&lt;/p&gt; &#xA;&lt;p&gt;SSH-Snake is completely fileless: after the user runs the script, it is passed to destinations&#39; bash via stdin and bash arguments (via SSH). No material evidence of the script exists on any of the systems scanned: the only evidence of the script running is in the process tree, and the substantial amount of invalid SSH attempts which will inevitably occur.&lt;/p&gt; &#xA;&lt;p&gt;SSH-Snake takes a &lt;a href=&#34;https://en.wikipedia.org/wiki/Depth-first_search&#34;&gt;depth-first approach&lt;/a&gt; to discovery: once it connects to one system, it tries to connect further from that system before backtracking.&lt;/p&gt; &#xA;&lt;p&gt;The name SSH-Snake comes from the fact that the output of the script looks like a snake slithering up and down the network. However unlike the game Snake, SSH-Snake will not die when it bites its own tail (connects to a systems it has already scanned or is currently scanning): it will simply print how it connected there as normal, but return and not re-scan the destination (in order to avoid infinite recursion).&lt;/p&gt; &#xA;&lt;p&gt;SSH-Snake has been tested on various flavors of Linux, and MacOS (with Homebrew Bash installed). If you encounter a Linux-based OS it isn&#39;t compatible with, please submit a report.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Recursively SSH from one system to another using local SSH private keys,&lt;/li&gt; &#xA; &lt;li&gt;Fileless traversal and propogation/replication of the SSH-Snake script using only stdin and bash arguments to remote systems,&lt;/li&gt; &#xA; &lt;li&gt;Automatic elevation of privileges to root using sudo if possible,&lt;/li&gt; &#xA; &lt;li&gt;Discover SSH private key files from &lt;code&gt;.bash_history&lt;/code&gt; entries,&lt;/li&gt; &#xA; &lt;li&gt;Discover SSH private keys from commonly used files and folders,&lt;/li&gt; &#xA; &lt;li&gt;Exfiltration SSH private keys as output of the script,&lt;/li&gt; &#xA; &lt;li&gt;Configurable custom command execution on each system,&lt;/li&gt; &#xA; &lt;li&gt;Plug-and-play modular system to discover private keys and systems,&lt;/li&gt; &#xA; &lt;li&gt;Detect hosts from IP ranges, last logins, known hosts, SSH config files, and more,&lt;/li&gt; &#xA; &lt;li&gt;Ability to detect when a system has already been scanned or is in the process of being scanned such that a network like A-&amp;gt;B-&amp;gt;C is able to also discover C-&amp;gt;A but does not regress to A-&amp;gt;B-&amp;gt;C-A-&amp;gt;B-&amp;gt;C-&amp;gt;A-&amp;gt;B-&amp;gt;....,&lt;/li&gt; &#xA; &lt;li&gt;Ability to generate graphical visulizations of a network from the output of the script,&lt;/li&gt; &#xA; &lt;li&gt;... and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Settings&lt;/h1&gt; &#xA;&lt;p&gt;SSH-Snake comes with some general settings that can be configured. These settings are documented in &lt;a href=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/SETTINGS.md#general-settings&#34;&gt;SETTINGS.md#general-settings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;SSH-Snake also comes with a variety configurable/plug-and-play strategies (functions) which can be used to discover SSH private keys on a system and discover hosts and destinations to attempt to connect to. Sane defaults have been provided, however if you want to perform a scan as thoroughly as possible, then enabling more discovery techniques can help. If a scan is taking a long time, disabling some discovery techniques can help. With the exception of one strategy (&lt;code&gt;find_ssh_keys&lt;/code&gt;), each of the strategies can be toggled off/on. These are documented in &lt;a href=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/SETTINGS.md#configurable-discovery-strategies&#34;&gt;SETTINGS.md#configurable-discovery-strategies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Understanding Output&lt;/h1&gt; &#xA;&lt;p&gt;The raw output of SSH-Snake contains a mix of infomation about discovered private keys, destinations, and error messages.&lt;/p&gt; &#xA;&lt;p&gt;A detailed explanation on the full output of SSH-Snake can be found in &lt;a href=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/OUTPUT.md&#34;&gt;OUTPUT.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Visualizing System Relationships&lt;/h1&gt; &#xA;&lt;p&gt;The output of SSH-Snake can be used to create graphs/visualizations of the network that the script traverses.&lt;/p&gt; &#xA;&lt;p&gt;A detailed explanation on how to create and interpret images/visualizations from the output of SSH-Snake can be found in &lt;a href=&#34;https://raw.githubusercontent.com/MegaManSec/SSH-Snake/main/GRAPHICS.md&#34;&gt;GRAPHICS.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Other Tools&lt;/h1&gt; &#xA;&lt;p&gt;In addition to the ability to create visualizations of the network that SSH-Snake traverses, three other tools are provided. Namely:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;forward-lookup-host.py&lt;/code&gt;: Given a source host or destination, determine all of the systems that can be accessed either directly or indirectly (i.e. through a tertiary system).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reverse-lookup-host.py&lt;/code&gt;: Given a destination host or destination, determine all of the systems that can either directly or indirectly access it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;shortest-path-create-chain.py&lt;/code&gt;: Given host or destination A and B, determine the shortest path connecting the two.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The third tool also generates a command that can be used to connect from destination A to destination B. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python3 tools/shortest-path-create-chain.py --file output.log --src &#39;jrogers@10.2.3.4&#39; --dest &#39;root@10.25.49.1&#39;&#xA;&#xA;Shortest path from jrogers@10.2.3.4 to root@10.25.49.1: jrogers@10.2.3.4-&amp;gt;user@10.44.39.21-&amp;gt;user@10.19.29.54-&amp;gt;root@10.25.49.1&#xA;&#xA;[..]&#xA;&#xA;ssh -i &#34;/home/jrogers/.ssh/key&#34; user@10.44.39.21 &#39;sudo ssh -i &#34;/root/.ssh/id_rsa&#34; user@10.19.29.54 &#39;ssh -i &#34;/tmp/key&#34; root@10.25.49.1&#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Snake.sh vs Snake.nocomments.sh&lt;/h1&gt; &#xA;&lt;p&gt;Since the script is quite large, loading the script into a here-document (which it does automatically because the script it actually &lt;a href=&#34;https://en.wikipedia.org/wiki/Quine_(computing)&#34;&gt;a Quine&lt;/a&gt;) &lt;a href=&#34;https://joshua.hu/more-fun-with-bash-ssh-and-ssh-keygen-version-differences&#34;&gt;causes bash to write to a temporary file&lt;/a&gt; (as it is greater than 65535-bytes).&lt;/p&gt; &#xA;&lt;p&gt;To cut down on the size such that it remains 100% fileless, Snake.nocomments.sh has a version with all comments, unnecessary white-spaces, and blank lines removed. This cuts the file&#39;s size down such that the temporary file is not created by bash.&lt;/p&gt; &#xA;&lt;h1&gt;Bugs / Issues&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter any bugs or issues related to the script, please report them as a GitHub issue. Please include your configuration setings.&lt;/p&gt; &#xA;&lt;p&gt;I am particually interested in any interesting &lt;code&gt;[line]&lt;/code&gt; outputs associated with errors that haven&#39;t been caught by the script.&lt;/p&gt; &#xA;&lt;h1&gt;Limitations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;IPv4 Only: Like all of the best programs, the script does not support IPv6. I can&#39;t imagine there will be support for this anytime soon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Port 22 Only: There is a general assumption that SSH is running on port 22.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GNU coreutils: The script relies heavily on GNU coreutils. I have not determined how much (if any) GNU-ism is used in the script.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The script does not currently look for SSH agent sockets.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>antonbabenko/pre-commit-terraform</title>
    <updated>2024-01-14T02:06:39Z</updated>
    <id>tag:github.com,2024-01-14:/antonbabenko/pre-commit-terraform</id>
    <link href="https://github.com/antonbabenko/pre-commit-terraform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;pre-commit git hooks to take care of Terraform configurations 🇺🇦&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Collection of git hooks for Terraform to be used with &lt;a href=&#34;http://pre-commit.com/&#34;&gt;pre-commit framework&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/antonbabenko/pre-commit-terraform.svg?sanitize=true&#34; alt=&#34;Github tag&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/maintenance/yes/2023.svg?sanitize=true&#34; alt=&#34;maintenance status&#34;&gt; &lt;a href=&#34;https://www.codetriage.com/antonbabenko/pre-commit-terraform&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/antonbabenko/pre-commit-terraform/badges/users.svg?sanitize=true&#34; alt=&#34;Help Contribute to Open Source&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vshymanskyy/StandWithUkraine/raw/main/docs/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg?sanitize=true&#34; alt=&#34;SWUbanner&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to contribute? Check &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues?q=label%3A%22good+first+issue%22+is%3Aopen+sort%3Aupdated-desc&#34;&gt;open issues&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/.github/CONTRIBUTING.md&#34;&gt;contributing notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.env0.com/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/env0.png&#34; alt=&#34;env0&#34; width=&#34;180&#34; height=&#34;44&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.env0.com/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;Automated provisioning of Terraform workflows and Infrastructure as Code.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://www.infracost.io/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/infracost.png&#34; alt=&#34;infracost&#34; width=&#34;200&#34; height=&#34;38&#34;&gt; &#xA; &lt;!-- markdownlint-enable no-inline-html --&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.infracost.io/?utm_campaign=pre-commit-terraform&amp;amp;utm_source=sponsorship&amp;amp;utm_medium=social&#34;&gt;Cloud cost estimates for Terraform.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;pre-commit-terraform&lt;/code&gt; already or want to support its development and &lt;a href=&#34;https://github.com/antonbabenko/terraform-aws-devops&#34;&gt;many other open-source projects&lt;/a&gt;, please become a &lt;a href=&#34;https://github.com/sponsors/antonbabenko&#34;&gt;GitHub Sponsor&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#table-of-content&#34;&gt;Table of content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#how-to-install&#34;&gt;How to install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&#34;&gt;1. Install dependencies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#2-install-the-pre-commit-hook-globally&#34;&gt;2. Install the pre-commit hook globally&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#3-add-configs-and-hooks&#34;&gt;3. Add configs and hooks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&#34;&gt;4. Run&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#available-hooks&#34;&gt;Available Hooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#hooks-usage-notes-and-examples&#34;&gt;Hooks usage notes and examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#known-limitations&#34;&gt;Known limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-usage-of-environment-variables-in---args&#34;&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-set-env-vars-inside-hook-at-runtime&#34;&gt;All hooks: Set env vars inside hook at runtime&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#all-hooks-disable-color-output&#34;&gt;All hooks: Disable color output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&#34;&gt;checkov (deprecated) and terraform_checkov&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&#34;&gt;infracost_breakdown&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;terraform_docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&#34;&gt;terraform_docs_replace (deprecated)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&#34;&gt;terraform_fmt&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;terraform_providers_lock&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&#34;&gt;terraform_tflint&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec-deprecated&#34;&gt;terraform_tfsec (deprecated)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&#34;&gt;terraform_trivy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&#34;&gt;terraform_wrapper_module_for_each&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&#34;&gt;terrascan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&#34;&gt;tfupdate&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#docker-usage&#34;&gt;Docker Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#file-permissions&#34;&gt;File Permissions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#download-terraform-modules-from-private-github-repositories&#34;&gt;Download Terraform modules from private GitHub repositories&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#license&#34;&gt;License&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#additional-information-for-users-from-russia-and-belarus&#34;&gt;Additional information for users from Russia and Belarus&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install dependencies&lt;/h3&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pre-commit.com/#install&#34;&gt;&lt;code&gt;pre-commit&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;&lt;code&gt;terraform&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;, &lt;sub&gt;&lt;sup&gt;POSIX compatible shell, &lt;sub&gt;&lt;sup&gt;Internet connection (on first run), &lt;sub&gt;&lt;sup&gt;x86_64 or arm64 compatible operation system, &lt;sub&gt;&lt;sup&gt;Some hardware where this OS will run, &lt;sub&gt;&lt;sup&gt;Electricity for hardware and internet connection, &lt;sub&gt;&lt;sup&gt;Some basic physical laws, &lt;sub&gt;&lt;sup&gt;Hope that it all will work. &lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_checkov&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terraform-docs/terraform-docs&#34;&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_docs&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://terragrunt.gruntwork.io/docs/getting-started/install/&#34;&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terragrunt_validate&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tenable/terrascan&#34;&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terrascan&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;&lt;code&gt;TFLint&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tflint&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liamg/tfsec&#34;&gt;&lt;code&gt;TFSec&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_tfsec&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;&lt;code&gt;Trivy&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_trivy&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/infracost/infracost&#34;&gt;&lt;code&gt;infracost&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_validate&lt;/code&gt; with &lt;code&gt;--retry-once-with-cleanup&lt;/code&gt; flag, and for &lt;code&gt;infracost_breakdown&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minamijoyo/tfupdate&#34;&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;tfupdate&lt;/code&gt; hook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/minamijoyo/hcledit&#34;&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/a&gt; required for &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Docker&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;strong&gt;Pull docker image with all hooks&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker pull ghcr.io/antonbabenko/pre-commit-terraform:$TAG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;All available tags &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Build from scratch&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: To build image you need to have &lt;a href=&#34;https://docs.docker.com/build/install-buildx/&#34;&gt;&lt;code&gt;docker buildx&lt;/code&gt;&lt;/a&gt; enabled as default builder.&lt;br&gt; Otherwise - provide &lt;code&gt;TARGETOS&lt;/code&gt; and &lt;code&gt;TARGETARCH&lt;/code&gt; as additional &lt;code&gt;--build-arg&lt;/code&gt;&#39;s to &lt;code&gt;docker build&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;When hooks-related &lt;code&gt;--build-arg&lt;/code&gt;s are not specified, only the latest version of &lt;code&gt;pre-commit&lt;/code&gt; and &lt;code&gt;terraform&lt;/code&gt; will be installed.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:antonbabenko/pre-commit-terraform.git&#xA;cd pre-commit-terraform&#xA;# Install the latest versions of all the tools&#xA;docker build -t pre-commit-terraform --build-arg INSTALL_ALL=true .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To install a specific version of individual tools, define it using &lt;code&gt;--build-arg&lt;/code&gt; arguments or set it to &lt;code&gt;latest&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t pre-commit-terraform \&#xA;    --build-arg PRE_COMMIT_VERSION=latest \&#xA;    --build-arg TERRAFORM_VERSION=latest \&#xA;    --build-arg CHECKOV_VERSION=2.0.405 \&#xA;    --build-arg INFRACOST_VERSION=latest \&#xA;    --build-arg TERRAFORM_DOCS_VERSION=0.15.0 \&#xA;    --build-arg TERRAGRUNT_VERSION=latest \&#xA;    --build-arg TERRASCAN_VERSION=1.10.0 \&#xA;    --build-arg TFLINT_VERSION=0.31.0 \&#xA;    --build-arg TFSEC_VERSION=latest \&#xA;    --build-arg TRIVY_VERSION=latest \&#xA;    --build-arg TFUPDATE_VERSION=latest \&#xA;    --build-arg HCLEDIT_VERSION=latest \&#xA;    .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Set &lt;code&gt;-e PRE_COMMIT_COLOR=never&lt;/code&gt; to disable the color output in &lt;code&gt;pre-commit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install pre-commit terraform-docs tflint tfsec trivy checkov terrascan infracost tfupdate minamijoyo/hcledit/hcledit jq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Ubuntu 18.04&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install -y unzip software-properties-common&#xA;sudo add-apt-repository ppa:deadsnakes/ppa&#xA;sudo apt install -y python3.7 python3-pip&#xA;python3 -m pip install --upgrade pip&#xA;pip3 install --no-cache-dir pre-commit&#xA;python3.7 -m pip install -U checkov&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.zip&#34;)&#34; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &#34;https://.+?tfsec-linux-amd64&#34;)&#34; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 &#34;https://.+?/trivy_.+?_Linux-64bit.tar.gz&#34;)&#34; &amp;gt; trivy.tar.gz &amp;amp;&amp;amp; tar -xzf trivy.tar.gz trivy &amp;amp;&amp;amp; rm trivy.tar.gz &amp;amp;&amp;amp; sudo mv trivy /usr/bin&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &#34;https://.+?_Linux_x86_64.tar.gz&#34;)&#34; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init&#xA;sudo apt install -y jq &amp;amp;&amp;amp; \&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost register&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Ubuntu 20.04&lt;/b&gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install -y unzip software-properties-common python3 python3-pip&#xA;python3 -m pip install --upgrade pip&#xA;pip3 install --no-cache-dir pre-commit&#xA;pip3 install --no-cache-dir checkov&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; terraform-docs.tgz &amp;amp;&amp;amp; tar -xzf terraform-docs.tgz terraform-docs &amp;amp;&amp;amp; rm terraform-docs.tgz &amp;amp;&amp;amp; chmod +x terraform-docs &amp;amp;&amp;amp; sudo mv terraform-docs /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 &#34;https://.+?_Linux_x86_64.tar.gz&#34;)&#34; &amp;gt; terrascan.tar.gz &amp;amp;&amp;amp; tar -xzf terrascan.tar.gz terrascan &amp;amp;&amp;amp; rm terrascan.tar.gz &amp;amp;&amp;amp; sudo mv terrascan /usr/bin/ &amp;amp;&amp;amp; terrascan init&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.zip&#34;)&#34; &amp;gt; tflint.zip &amp;amp;&amp;amp; unzip tflint.zip &amp;amp;&amp;amp; rm tflint.zip &amp;amp;&amp;amp; sudo mv tflint /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 &#34;https://.+?tfsec-linux-amd64&#34;)&#34; &amp;gt; tfsec &amp;amp;&amp;amp; chmod +x tfsec &amp;amp;&amp;amp; sudo mv tfsec /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 &#34;https://.+?/trivy_.+?_Linux-64bit.tar.gz&#34;)&#34; &amp;gt; trivy.tar.gz &amp;amp;&amp;amp; tar -xzf trivy.tar.gz trivy &amp;amp;&amp;amp; rm trivy.tar.gz &amp;amp;&amp;amp; sudo mv trivy /usr/bin&#xA;sudo apt install -y jq &amp;amp;&amp;amp; \&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 &#34;https://.+?-linux-amd64.tar.gz&#34;)&#34; &amp;gt; infracost.tgz &amp;amp;&amp;amp; tar -xzf infracost.tgz &amp;amp;&amp;amp; rm infracost.tgz &amp;amp;&amp;amp; sudo mv infracost-linux-amd64 /usr/bin/infracost &amp;amp;&amp;amp; infracost register&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; tfupdate.tar.gz &amp;amp;&amp;amp; tar -xzf tfupdate.tar.gz tfupdate &amp;amp;&amp;amp; rm tfupdate.tar.gz &amp;amp;&amp;amp; sudo mv tfupdate /usr/bin/&#xA;curl -L &#34;$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 &#34;https://.+?_linux_amd64.tar.gz&#34;)&#34; &amp;gt; hcledit.tar.gz &amp;amp;&amp;amp; tar -xzf hcledit.tar.gz hcledit &amp;amp;&amp;amp; rm hcledit.tar.gz &amp;amp;&amp;amp; sudo mv hcledit /usr/bin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;Windows 10/11&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;We highly recommend using &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL/WSL2&lt;/a&gt; with Ubuntu and following the Ubuntu installation guide. Or use Docker.&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We won&#39;t be able to help with issues that can&#39;t be reproduced in Linux/Mac. So, try to find a working solution and send PR before open an issue.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;Otherwise, you can follow &lt;a href=&#34;https://gist.github.com/etiennejeanneaurevolve/1ed387dc73c5d4cb53ab313049587d09&#34;&gt;this gist&lt;/a&gt;:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;&lt;code&gt;gitbash&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Install all prerequisites needed (see above)&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Ensure your PATH environment variable looks for &lt;code&gt;bash.exe&lt;/code&gt; in &lt;code&gt;C:\Program Files\Git\bin&lt;/code&gt; (the one present in &lt;code&gt;C:\Windows\System32\bash.exe&lt;/code&gt; does not work with &lt;code&gt;pre-commit.exe&lt;/code&gt;)&lt;/p&gt; &#xA; &lt;p&gt;For &lt;code&gt;checkov&lt;/code&gt;, you may need to also set your &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable with the path to your Python modules.&lt;br&gt; E.g. &lt;code&gt;C:\Users\USERNAME\AppData\Local\Programs\Python\Python39\Lib\site-packages&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- markdownlint-enable no-inline-html --&gt; &#xA;&lt;h3&gt;2. Install the pre-commit hook globally&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: not needed if you use the Docker image&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;DIR=~/.git-template&#xA;git config --global init.templateDir ${DIR}&#xA;pre-commit init-templatedir -t pre-commit ${DIR}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Add configs and hooks&lt;/h3&gt; &#xA;&lt;p&gt;Step into the repository you want to have the pre-commit hooks installed and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init&#xA;cat &amp;lt;&amp;lt;EOF &amp;gt; .pre-commit-config.yaml&#xA;repos:&#xA;- repo: https://github.com/antonbabenko/pre-commit-terraform&#xA;  rev: &amp;lt;VERSION&amp;gt; # Get the latest from: https://github.com/antonbabenko/pre-commit-terraform/releases&#xA;  hooks:&#xA;    - id: terraform_fmt&#xA;    - id: terraform_docs&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Run&lt;/h3&gt; &#xA;&lt;p&gt;Execute this command to run &lt;code&gt;pre-commit&lt;/code&gt; on all files in the repository (not only changed files):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, using Docker (&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions&#34;&gt;available tags&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This command uses your user id and group id for the docker container to use to access the local files. If the files are owned by another user, update the &lt;code&gt;USERID&lt;/code&gt; environment variable. See &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#file-permissions&#34;&gt;File Permissions section&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run -e &#34;USERID=$(id -u):$(id -g)&#34; -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute this command to list the versions of the tools in Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run --rm --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Hooks&lt;/h2&gt; &#xA;&lt;p&gt;There are several &lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt; hooks to keep Terraform configurations (both &lt;code&gt;*.tf&lt;/code&gt; and &lt;code&gt;*.tfvars&lt;/code&gt;) and Terragrunt configurations (&lt;code&gt;*.hcl&lt;/code&gt;) in a good shape:&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hook name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Dependencies&lt;br&gt;&lt;sup&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#1-install-dependencies&#34;&gt;Install instructions here&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt; and &lt;code&gt;terraform_checkov&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bridgecrewio/checkov&#34;&gt;checkov&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#checkov-deprecated-and-terraform_checkov&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;checkov&lt;/code&gt;&lt;br&gt;Ubuntu deps: &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;python3-pip&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check how much your infra costs with &lt;a href=&#34;https://github.com/infracost/infracost&#34;&gt;infracost&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#infracost_breakdown&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;infracost&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;, &lt;a href=&#34;https://www.infracost.io/docs/#2-get-api-key&#34;&gt;Infracost API key&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt;. Recommended. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;code&gt;terraform-docs&lt;/code&gt; and pipes the output directly to README.md. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, see &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/248&#34;&gt;#248&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs_replace-deprecated&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_docs_without_&lt;/code&gt;&lt;br&gt;&lt;code&gt;aggregate_type_defaults&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inserts input and output documentation into &lt;code&gt;README.md&lt;/code&gt; without aggregate type defaults. Hook notes same as for &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;terraform_docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-docs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reformat all Terraform configuration files to a canonical format. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_fmt&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Updates provider signatures in &lt;a href=&#34;https://www.terraform.io/docs/cli/commands/providers/lock.html&#34;&gt;dependency lock files&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_providers_lock&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_tflint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all Terraform configuration files with &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;TFLint&lt;/a&gt;. &lt;a href=&#34;https://github.com/terraform-linters/tflint/tree/master/docs/rules#rules&#34;&gt;Available TFLint rules&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tflint&#34;&gt;Hook notes&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tflint&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aquasecurity/tfsec&#34;&gt;TFSec&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;strong&gt;DEPRECATED&lt;/strong&gt;, use &lt;code&gt;terraform_trivy&lt;/code&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_tfsec-deprecated&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfsec&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_trivy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;Trivy&lt;/a&gt; static analysis of terraform templates to spot potential security issues. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;trivy&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all Terraform configuration files. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jq&lt;/code&gt;, only for &lt;code&gt;--retry-once-with-cleanup&lt;/code&gt; flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_fmt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reformat all &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;) to a canonical format.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt_validate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validates all &lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;Terragrunt&lt;/a&gt; configuration files (&lt;code&gt;*.hcl&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terragrunt&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generates Terraform wrappers with &lt;code&gt;for_each&lt;/code&gt; in module. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_wrapper_module_for_each&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hcledit&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tenable/terrascan&#34;&gt;terrascan&lt;/a&gt; Detect compliance and security violations. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terrascan&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/minamijoyo/tfupdate&#34;&gt;tfupdate&lt;/a&gt; Update version constraints of Terraform core, providers, and modules. &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#tfupdate&#34;&gt;Hook notes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tfupdate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable no-inline-html --&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/raw/master/.pre-commit-hooks.yaml&#34;&gt;source file&lt;/a&gt; to know arguments used for each hook.&lt;/p&gt; &#xA;&lt;h2&gt;Hooks usage notes and examples&lt;/h2&gt; &#xA;&lt;h3&gt;Known limitations&lt;/h3&gt; &#xA;&lt;p&gt;Terraform operates on a per-dir basis, while &lt;code&gt;pre-commit&lt;/code&gt; framework only supports files and files that exist. This means if you only remove the TF-related file without any other changes in the same dir, checks will be skipped. Example and details &lt;a href=&#34;https://github.com/pre-commit/pre-commit/issues/3048&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;All hooks: Usage of environment variables in &lt;code&gt;--args&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can use environment variables for the &lt;code&gt;--args&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: You &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;${ENV_VAR}&lt;/code&gt; definition, &lt;code&gt;$ENV_VAR&lt;/code&gt; will not expand.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Config example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;  - --args=--config=${CONFIG_NAME}.${CONFIG_EXT}&#xA;  - --args=--module&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If for config above set up &lt;code&gt;export CONFIG_NAME=.tflint; export CONFIG_EXT=hcl&lt;/code&gt; before &lt;code&gt;pre-commit run&lt;/code&gt;, args will be expanded to &lt;code&gt;--config=.tflint.hcl --module&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;All hooks: Set env vars inside hook at runtime&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can specify environment variables that will be passed to the hook at runtime.&lt;/p&gt; &#xA;&lt;p&gt;Config example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --env-vars=AWS_DEFAULT_REGION=&#34;us-west-2&#34;&#xA;    - --env-vars=AWS_ACCESS_KEY_ID=&#34;anaccesskey&#34;&#xA;    - --env-vars=AWS_SECRET_ACCESS_KEY=&#34;asecretkey&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;All hooks: Disable color output&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;All, except deprecated hooks: &lt;code&gt;checkov&lt;/code&gt;, &lt;code&gt;terraform_docs_replace&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To disable color output for all hooks, set &lt;code&gt;PRE_COMMIT_COLOR=never&lt;/code&gt; var. Eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PRE_COMMIT_COLOR=never pre-commit run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;checkov (deprecated) and terraform_checkov&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;checkov&lt;/code&gt; hook is deprecated, please use &lt;code&gt;terraform_checkov&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;terraform_checkov&lt;/code&gt; runs recursively during &lt;code&gt;-d .&lt;/code&gt; usage. That means, for example, if you change &lt;code&gt;.tf&lt;/code&gt; file in repo root, all existing &lt;code&gt;.tf&lt;/code&gt; files in the repo will be checked.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You can specify custom arguments. E.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_checkov&#xA;  args:&#xA;    - --args=--quiet&#xA;    - --args=--skip-check CKV2_AWS_8&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Check all available arguments &lt;a href=&#34;https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For deprecated hook you need to specify each argument separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: checkov&#xA;  args: [&#xA;    &#34;-d&#34;, &#34;.&#34;,&#xA;    &#34;--skip-check&#34;, &#34;CKV2_AWS_8&#34;,&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;terraform_checkov&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_checkov&lt;/code&gt; hooks with the Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_checkov&#xA;  args:&#xA;    - --args=--config-file __GIT_WORKING_DIR__/.checkov.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;infracost_breakdown&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; executes &lt;code&gt;infracost breakdown&lt;/code&gt; command and compare the estimated costs with those specified in the hook-config. &lt;code&gt;infracost breakdown&lt;/code&gt; parses Terraform HCL code, and calls Infracost Cloud Pricing API (remote version or &lt;a href=&#34;https://www.infracost.io/docs/cloud_pricing_api/self_hosted&#34;&gt;self-hosted version&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Unlike most other hooks, this hook triggers once if there are any changed files in the repository.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;infracost_breakdown&lt;/code&gt; supports all &lt;code&gt;infracost breakdown&lt;/code&gt; arguments (run &lt;code&gt;infracost breakdown --help&lt;/code&gt; to see them). The following example only shows costs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;  verbose: true # Always show costs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Output&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Running in &#34;env/dev&#34;&#xA;&#xA;Summary: {&#xA;&#34;unsupportedResourceCounts&#34;: {&#xA;    &#34;aws_sns_topic_subscription&#34;: 1&#xA;  }&#xA;}&#xA;&#xA;Total Monthly Cost:        86.83 USD&#xA;Total Monthly Cost (diff): 86.83 USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note that spaces are not allowed in &lt;code&gt;--args&lt;/code&gt;, so you need to split it, like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;    - --args=--terraform-var-file=&#34;terraform.tfvars&#34;&#xA;    - --args=--terraform-var-file=&#34;../terraform.tfvars&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optionally) Define &lt;code&gt;cost constraints&lt;/code&gt; the hook should evaluate successfully in order to pass:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: infracost_breakdown&#xA;  args:&#xA;    - --args=--path=./env/dev&#xA;    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 0.1&#39;&#xA;    - --hook-config=&#39;.totalHourlyCost|tonumber &amp;gt; 1&#39;&#xA;    - --hook-config=&#39;.projects[].diff.totalMonthlyCost|tonumber != 10000&#39;&#xA;    - --hook-config=&#39;.currency == &#34;USD&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Output&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Running in &#34;env/dev&#34;&#xA;Passed: .totalHourlyCost|tonumber &amp;gt; 0.1         0.11894520547945205 &amp;gt;  0.1&#xA;Failed: .totalHourlyCost|tonumber &amp;gt; 1           0.11894520547945205 &amp;gt;  1&#xA;Passed: .projects[].diff.totalMonthlyCost|tonumber !=10000              86.83 != 10000&#xA;Passed: .currency == &#34;USD&#34;              &#34;USD&#34; == &#34;USD&#34;&#xA;&#xA;Summary: {&#xA;&#34;unsupportedResourceCounts&#34;: {&#xA;    &#34;aws_sns_topic_subscription&#34;: 1&#xA;  }&#xA;}&#xA;&#xA;Total Monthly Cost:        86.83 USD&#xA;Total Monthly Cost (diff): 86.83 USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;!-- markdownlint-disable-next-line no-inline-html --&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only one path per one hook (&lt;code&gt;- id: infracost_breakdown&lt;/code&gt;) is allowed.&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;verbose: true&lt;/code&gt; to see cost even when the checks are passed.&lt;/li&gt; &#xA;   &lt;li&gt;Hook uses &lt;code&gt;jq&lt;/code&gt; to process the cost estimation report returned by &lt;code&gt;infracost breakdown&lt;/code&gt; command&lt;/li&gt; &#xA;   &lt;li&gt;Expressions defined as &lt;code&gt;--hook-config&lt;/code&gt; argument should be in a jq-compatible format (e.g. &lt;code&gt;.totalHourlyCost&lt;/code&gt;, &lt;code&gt;.totalMonthlyCost&lt;/code&gt;) To study json output produced by &lt;code&gt;infracost&lt;/code&gt;, run the command &lt;code&gt;infracost breakdown -p PATH_TO_TF_DIR --format json&lt;/code&gt;, and explore it on &lt;a href=&#34;https://jqplay.org/&#34;&gt;jqplay.org&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Supported comparison operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Most useful paths and checks: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;.totalHourlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalHourlyCost&lt;/code&gt;) - show total hourly infra cost&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.totalMonthlyCost&lt;/code&gt; (same as &lt;code&gt;.projects[].breakdown.totalMonthlyCost&lt;/code&gt;) - show total monthly infra cost&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.projects[].diff.totalHourlyCost&lt;/code&gt; - show the difference in hourly cost for the existing infra and tf plan&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.projects[].diff.totalMonthlyCost&lt;/code&gt; - show the difference in monthly cost for the existing infra and tf plan&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;.diffTotalHourlyCost&lt;/code&gt; (for Infracost version 0.9.12 or newer) or &lt;code&gt;[.projects[].diff.totalMonthlyCost | select (.!=null) | tonumber] | add&lt;/code&gt; (for Infracost older than 0.9.12)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker usage&lt;/strong&gt;. In &lt;code&gt;docker build&lt;/code&gt; or &lt;code&gt;docker run&lt;/code&gt; command:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You need to provide &lt;a href=&#34;https://www.infracost.io/docs/integrations/environment_variables/#infracost_api_key&#34;&gt;Infracost API key&lt;/a&gt; via &lt;code&gt;-e INFRACOST_API_KEY=&amp;lt;your token&amp;gt;&lt;/code&gt;. By default, it is saved in &lt;code&gt;~/.config/infracost/credentials.yml&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;-e INFRACOST_SKIP_UPDATE_CHECK=true&lt;/code&gt; to &lt;a href=&#34;https://www.infracost.io/docs/integrations/environment_variables/#infracost_skip_update_check&#34;&gt;skip the Infracost update check&lt;/a&gt; if you use this hook as part of your CI/CD pipeline.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_docs&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt; will insert/update documentation generated by &lt;a href=&#34;https://github.com/terraform-docs/terraform-docs&#34;&gt;terraform-docs&lt;/a&gt; framed by markers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;&amp;lt;!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK --&amp;gt;&#xA;&#xA;&amp;lt;!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;if they are present in &lt;code&gt;README.md&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is possible to pass additional arguments to shell scripts when using &lt;code&gt;terraform_docs&lt;/code&gt; and &lt;code&gt;terraform_docs_without_aggregate_type_defaults&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is possible to automatically:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;create a documentation file&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;extend existing documentation file by appending markers to the end of the file (see item 1 above)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;use different filename for the documentation (default is &lt;code&gt;README.md&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;use the same insertion markers as &lt;code&gt;terraform-docs&lt;/code&gt; by default. It will be default in &lt;code&gt;v2.0&lt;/code&gt;.&lt;br&gt; To migrate to &lt;code&gt;terraform-docs&lt;/code&gt; insertion markers, run in repo root:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;grep -rl &#39;BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK&#39; . | xargs sed -i &#39;s/BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK/BEGIN_TF_DOCS/g&#39;&#xA;grep -rl &#39;END OF PRE-COMMIT-TERRAFORM DOCS HOOK&#39; . | xargs sed -i &#39;s/END OF PRE-COMMIT-TERRAFORM DOCS HOOK/END_TF_DOCS/g&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - --hook-config=--path-to-file=README.md        # Valid UNIX path. I.e. ../TFDOC.md or docs/README.md etc.&#xA;    - --hook-config=--add-to-existing-file=true     # Boolean. true or false&#xA;    - --hook-config=--create-file-if-not-exist=true # Boolean. true or false&#xA;    - --hook-config=--use-standard-markers=true     # Boolean. Defaults in v1.x to false. Set to true for compatibility with terraform-docs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can provide &lt;a href=&#34;https://terraform-docs.io/user-guide/configuration/&#34;&gt;any configuration available in &lt;code&gt;terraform-docs&lt;/code&gt;&lt;/a&gt; as an argument to &lt;code&gt;terraform_doc&lt;/code&gt; hook, for example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - --args=--config=.terraform-docs.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Avoid use &lt;code&gt;recursive.enabled: true&lt;/code&gt; in config file, that can cause unexpected behavior.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you need some exotic settings, it can be done too. I.e. this one generates HCL files:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;  args:&#xA;    - tfvars hcl --output-file terraform.tfvars.model .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_docs_replace (deprecated)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. Will be merged in &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_docs&#34;&gt;&lt;code&gt;terraform_docs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;terraform_docs_replace&lt;/code&gt; replaces the entire &lt;code&gt;README.md&lt;/code&gt; rather than doing string replacement between markers. Put your additional documentation at the top of your &lt;code&gt;main.tf&lt;/code&gt; for it to be pulled in.&lt;/p&gt; &#xA;&lt;p&gt;To replicate functionality in &lt;code&gt;terraform_docs&lt;/code&gt; hook:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.terraform-docs.yml&lt;/code&gt; in the repo root with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;formatter: &#34;markdown&#34;&#xA;&#xA;output:&#xA;file: &#34;README.md&#34;&#xA;mode: replace&#xA;template: |-&#xA;    {{/** End of file fixer */}}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace &lt;code&gt;terraform_docs_replace&lt;/code&gt; hook config in &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_docs&#xA;args:&#xA;    - --args=--config=.terraform-docs.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_fmt&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_fmt&lt;/code&gt; supports custom arguments so you can pass &lt;a href=&#34;https://www.terraform.io/docs/cli/commands/fmt.html#usage&#34;&gt;supported flags&lt;/a&gt;. Eg:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_fmt&#xA;   args:&#xA;     - --args=-no-color&#xA;     - --args=-diff&#xA;     - --args=-write=false&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_providers_lock&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The hook requires Terraform 0.14 or later.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The hook can invoke &lt;code&gt;terraform providers lock&lt;/code&gt; that can be really slow and requires fetching metadata from remote Terraform registries - not all of that metadata is currently being cached by Terraform.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;details&gt;&#xA;  &lt;summary&gt;&lt;b&gt;Note&lt;/b&gt;: Read this if you used this hook before v1.80.0 | Planned breaking changes in v2.0&lt;/summary&gt; We introduced &#39;--mode&#39; flag for this hook. If you&#39;d like to continue using this hook as before, please: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Specify &lt;code&gt;--hook-config=--mode=always-regenerate-lockfile&lt;/code&gt; in &lt;code&gt;args:&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Before &lt;code&gt;terraform_providers_lock&lt;/code&gt;, add &lt;code&gt;terraform_validate&lt;/code&gt; hook with &lt;code&gt;--hook-config=--retry-once-with-cleanup=true&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move &lt;code&gt;--tf-init-args=&lt;/code&gt; to &lt;code&gt;terraform_validate&lt;/code&gt; hook&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;p&gt;In the end, you should get config like this:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true&#xA;    # - --tf-init-args=-upgrade&#xA;&#xA;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=always-regenerate-lockfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;Why? When v2.x will be introduced - the default mode will be changed, probably, to &lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;p&gt;You can check available modes for hook below.&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The hook can work in a few different modes: &lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; with and without &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate hook&lt;/a&gt; and &lt;code&gt;always-regenerate-lockfile&lt;/code&gt; - only with terraform_validate hook.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; without terraform_validate - only checks that lockfile has all required SHAs for all providers already added to lockfile.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=only-check-is-current-lockfile-cross-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;only-check-is-current-lockfile-cross-platform&lt;/code&gt; with &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate hook&lt;/a&gt; - make up-to-date lockfile by adding/removing providers and only then check that lockfile has all required SHAs.&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Next &lt;code&gt;terraform_validate&lt;/code&gt; flag requires additional dependency to be installed: &lt;code&gt;jq&lt;/code&gt;. Also, it could run another slow and time consuming command - &lt;code&gt;terraform init&lt;/code&gt;&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true&#xA;&#xA;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=only-check-is-current-lockfile-cross-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;always-regenerate-lockfile&lt;/code&gt; only with &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;terraform_validate hook&lt;/a&gt; - regenerate lockfile from scratch. Can be useful for upgrading providers in lockfile to latest versions&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true&#xA;    - --tf-init-args=-upgrade&#xA;&#xA;- id: terraform_providers_lock&#xA;  args:&#xA;  - --hook-config=--mode=always-regenerate-lockfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; supports custom arguments:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_providers_lock&#xA;   args:&#xA;      - --args=-platform=windows_amd64&#xA;      - --args=-platform=darwin_amd64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&#xA;function rm_terraform {&#xA;    find . \( -iname &#34;.terraform*&#34; ! -iname &#34;.terraform-docs*&#34; \) -print0 | xargs -0 rm -r&#xA;}&#xA;&#34; &amp;gt;&amp;gt;~/.bashrc&#xA;&#xA;# Reload shell and use `rm_terraform` command in the repo root&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; hook will try to reinitialize directories before running the &lt;code&gt;terraform providers lock&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_providers_lock&lt;/code&gt; support passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; - DEPRECATION NOTICE: This is available only in &lt;code&gt;no-mode&lt;/code&gt; mode, which will be removed in v2.0. Please provide this keys to &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_validate&#34;&gt;&lt;code&gt;terraform_validate&lt;/code&gt;&lt;/a&gt; hook, which, to take effect, should be called before &lt;code&gt;terraform_providers_lock&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_providers_lock&#xA;  args:&#xA;    - --tf-init-args=-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_tflint&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tflint&lt;/code&gt; supports custom arguments so you can enable module inspection, enable / disable rules, etc.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;    - --args=--module&#xA;    - --args=--enable-rule=terraform_documented_variables&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tflint&lt;/code&gt; in all of them and share a single config file, it is impractical to hard-code the path to the &lt;code&gt;.tflint.hcl&lt;/code&gt; file. The solution is to use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder which will be replaced by &lt;code&gt;terraform_tflint&lt;/code&gt; hooks with the Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;  args:&#xA;    - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;By default, pre-commit-terraform performs directory switching into the terraform modules for you. If you want to delgate the directory changing to the binary - this will allow tflint to determine the full paths for error/warning messages, rather than just module relative paths. &lt;em&gt;Note: this requires &lt;code&gt;tflint&amp;gt;=0.44.0&lt;/code&gt;.&lt;/em&gt; For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tflint&#xA;      args:&#xA;        - --hook-config=--delegate-chdir&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_tfsec (deprecated)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt;. &lt;a href=&#34;https://github.com/aquasecurity/tfsec/discussions/1994&#34;&gt;tfsec was replaced by trivy&lt;/a&gt;, so please use &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#terraform_trivy&#34;&gt;&lt;code&gt;terraform_trivy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&#34;https://pre-commit.com/#config-files&#34;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  files: ^prd-infra/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;tfsec&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&#34;https://github.com/aquasecurity/tfsec#ignoring-warnings&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;resource &#34;aws_security_group_rule&#34; &#34;my-rule&#34; {&#xA;    type = &#34;ingress&#34;&#xA;    cidr_blocks = [&#34;0.0.0.0/0&#34;] #tfsec:ignore:AWS006&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_tfsec&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--no-color&lt;/code&gt; or &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;-e&lt;/code&gt; (exclude checks) flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_tfsec&#xA;   args:&#xA;     - &amp;gt;&#xA;       --args=--format json&#xA;       --no-color&#xA;       -e aws-s3-enable-bucket-logging,aws-s3-specify-public-access-block&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you have multiple directories and want to run &lt;code&gt;tfsec&lt;/code&gt; in all of them and share a single config file - use the &lt;code&gt;__GIT_WORKING_DIR__&lt;/code&gt; placeholder. It will be replaced by &lt;code&gt;terraform_tfsec&lt;/code&gt; hooks with Git working directory (repo root) at run time. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  args:&#xA;    - --args=--config-file=__GIT_WORKING_DIR__/.tfsec.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Otherwise, will be used files that located in sub-folders:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_tfsec&#xA;  args:&#xA;    - --args=--config-file=.tfsec.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_trivy&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_trivy&lt;/code&gt; will consume modified files that pre-commit passes to it, so you can perform whitelisting of directories or files to run against via &lt;a href=&#34;https://pre-commit.com/#config-files&#34;&gt;files&lt;/a&gt; pre-commit flag&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_trivy&#xA;  files: ^prd-infra/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above will tell pre-commit to pass down files from the &lt;code&gt;prd-infra/&lt;/code&gt; folder only such that the underlying &lt;code&gt;trivy&lt;/code&gt; tool can run against changed files in this directory, ignoring any other folders at the root level&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To ignore specific warnings, follow the convention from the &lt;a href=&#34;https://aquasecurity.github.io/trivy/latest/docs/configuration/filtering/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-hcl&#34;&gt;#trivy:ignore:AVD-AWS-0107&#xA;#trivy:ignore:AVD-AWS-0124&#xA;resource &#34;aws_security_group_rule&#34; &#34;my-rule&#34; {&#xA;    type = &#34;ingress&#34;&#xA;    cidr_blocks = [&#34;0.0.0.0/0&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_trivy&lt;/code&gt; supports custom arguments, so you can pass supported &lt;code&gt;--format&lt;/code&gt; (output), &lt;code&gt;--skip-dirs&lt;/code&gt; (exclude directories) and other flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_trivy&#xA;   args:&#xA;     - &amp;gt;&#xA;       --args=--format json&#xA;       --skip-dirs=&#34;**/.terragrunt-cache&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_validate&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; supports custom arguments so you can pass supported &lt;code&gt;-no-color&lt;/code&gt; or &lt;code&gt;-json&lt;/code&gt; flags:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - id: terraform_validate&#xA;   args:&#xA;     - --args=-json&#xA;     - --args=-no-color&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; also supports passing custom arguments to its &lt;code&gt;terraform init&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --tf-init-args=-upgrade&#xA;    - --tf-init-args=-lockfile=readonly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may happen that Terraform working directory (&lt;code&gt;.terraform&lt;/code&gt;) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can delete broken &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  args:&#xA;    - --hook-config=--retry-once-with-cleanup=true     # Boolean. true or false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The flag requires additional dependency to be installed: &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Reinit can be very slow and require downloading data from remote Terraform registries, and not all of that downloaded data or meta-data is currently being cached by Terraform.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;When &lt;code&gt;--retry-once-with-cleanup=true&lt;/code&gt;, in each failed directory the cached modules and providers from the &lt;code&gt;.terraform&lt;/code&gt; directory will be deleted, before retrying once more. To avoid unnecessary deletion of this directory, the cleanup and retry will only happen if Terraform produces any of the following error messages:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#34;Missing or corrupted provider plugins&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Module source has changed&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Module version requirements have changed&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Module not installed&#34;&lt;/li&gt; &#xA;   &lt;li&gt;&#34;Could not load plugin&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: When using &lt;code&gt;--retry-once-with-cleanup=true&lt;/code&gt;, problematic &lt;code&gt;.terraform/modules/&lt;/code&gt; and &lt;code&gt;.terraform/providers/&lt;/code&gt; directories will be recursively deleted without prompting for consent. Other files and directories will not be affected, such as the &lt;code&gt;.terraform/environment&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 2&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;An alternative solution is to find and delete all &lt;code&gt;.terraform&lt;/code&gt; directories in your repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;&#xA;function rm_terraform {&#xA;    find . \( -iname &#34;.terraform*&#34; ! -iname &#34;.terraform-docs*&#34; \) -print0 | xargs -0 rm -r&#xA;}&#xA;&#34; &amp;gt;&amp;gt;~/.bashrc&#xA;&#xA;# Reload shell and use `rm_terraform` command in the repo root&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; hook will try to reinitialize them before running the &lt;code&gt;terraform validate&lt;/code&gt; command.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: If you use Terraform workspaces, DO NOT use this option (&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/203#issuecomment-918791847&#34;&gt;details&lt;/a&gt;). Consider the first option, or wait for &lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/issues/224&#34;&gt;&lt;code&gt;force-init&lt;/code&gt;&lt;/a&gt; option implementation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terraform_validate&lt;/code&gt; in a repo with Terraform module, written using Terraform 0.15+ and which uses provider &lt;code&gt;configuration_aliases&lt;/code&gt; (&lt;a href=&#34;https://www.terraform.io/language/modules/develop/providers#provider-aliases-within-modules&#34;&gt;Provider Aliases Within Modules&lt;/a&gt;), errors out.&lt;/p&gt; &lt;p&gt;When running the hook against Terraform code where you have provider &lt;code&gt;configuration_aliases&lt;/code&gt; defined in a &lt;code&gt;required_providers&lt;/code&gt; configuration block, terraform will throw an error like:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Error: Provider configuration not present To work with &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt; its original provider configuration at provider &lt;code&gt;[&#34;registry.terraform.io/hashicorp/aws&#34;].&amp;lt;provider_alias&amp;gt;&lt;/code&gt; is required, but it has been removed. This occurs when a provider configuration is removed while objects created by that provider still exist in the state. Re-add the provider configuration to destroy &lt;code&gt;&amp;lt;resource&amp;gt;&lt;/code&gt;, after which you can remove the provider configuration again.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;This is a &lt;a href=&#34;https://github.com/hashicorp/terraform/issues/28490&#34;&gt;known issue&lt;/a&gt; with Terraform and how providers are initialized in Terraform 0.15 and later. To work around this you can add an &lt;code&gt;exclude&lt;/code&gt; parameter to the configuration of &lt;code&gt;terraform_validate&lt;/code&gt; hook like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_validate&#xA;  exclude: &#39;^[^/]+$&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will exclude the root directory from being processed by this hook. Then add a subdirectory like &#34;examples&#34; or &#34;tests&#34; and put an example implementation in place that defines the providers with the proper aliases, and this will give you validation of your module through the example. If instead you are using this with multiple modules in one repository you&#39;ll want to set the path prefix in the regular expression, such as &lt;code&gt;exclude: modules/offendingmodule/[^/]+$&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Alternately, you can use &lt;a href=&#34;https://github.com/hashicorp/terraform-config-inspect&#34;&gt;terraform-config-inspect&lt;/a&gt; and use a variant of &lt;a href=&#34;https://github.com/bendrucker/terraform-configuration-aliases-action/raw/main/providers.sh&#34;&gt;this script&lt;/a&gt; to generate a providers file at runtime:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;terraform-config-inspect --json . | jq -r &#39;&#xA;  [.required_providers[].aliases]&#xA;  | flatten&#xA;  | del(.[] | select(. == null))&#xA;  | reduce .[] as $entry (&#xA;    {};&#xA;    .provider[$entry.name] //= [] | .provider[$entry.name] += [{&#34;alias&#34;: $entry.alias}]&#xA;  )&#xA;&#39; | tee aliased-providers.tf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Save it as &lt;code&gt;.generate-providers.sh&lt;/code&gt; in the root of your repository and add a &lt;code&gt;pre-commit&lt;/code&gt; hook to run it before all other hooks, like so:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- repos:&#xA;  - repo: local&#xA;    hooks:&#xA;      - id: generate-terraform-providers&#xA;         name: generate-terraform-providers&#xA;         require_serial: true&#xA;         entry: .generate-providers.sh&#xA;         language: script&#xA;         files: \.tf(vars)?$&#xA;         pass_filenames: false&#xA;&#xA;  - repo: https://github.com/pre-commit/pre-commit-hooks&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: The latter method will leave an &#34;aliased-providers.tf.json&#34; file in your repo. You will either want to automate a way to clean this up or add it to your &lt;code&gt;.gitignore&lt;/code&gt; or both.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;terraform_wrapper_module_for_each&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; generates module wrappers for Terraform modules (useful for Terragrunt where &lt;code&gt;for_each&lt;/code&gt; is not supported). When using this hook without arguments it will create wrappers for the root module and all modules available in &#34;modules&#34; directory.&lt;/p&gt; &#xA;&lt;p&gt;You may want to customize some of the options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-dir=...&lt;/code&gt; - Specify a single directory to process. Values: &#34;.&#34; (means just root module), &#34;modules/iam-user&#34; (a single module), or empty (means include all submodules found in &#34;modules/*&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-org=...&lt;/code&gt; - Module repository organization (e.g. &#34;terraform-aws-modules&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-shortname=...&lt;/code&gt; - Short name of the repository (e.g. &#34;s3-bucket&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--module-repo-provider=...&lt;/code&gt; - Name of the repository provider (e.g. &#34;aws&#34; or &#34;google&#34;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Sample configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_wrapper_module_for_each&#xA;  args:&#xA;    - --args=--module-dir=.   # Process only root module&#xA;    - --args=--dry-run        # No files will be created/updated&#xA;    - --args=--verbose        # Verbose output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you use hook inside Docker:&lt;/strong&gt;&lt;br&gt; The &lt;code&gt;terraform_wrapper_module_for_each&lt;/code&gt; hook attempts to determine the module&#39;s short name to be inserted into the generated &lt;code&gt;README.md&lt;/code&gt; files for the &lt;code&gt;source&lt;/code&gt; URLs. Since the container uses a bind mount at a static location, it can cause this short name to be incorrect.&lt;br&gt; If the generated name is incorrect, set them by providing the &lt;code&gt;module-repo-shortname&lt;/code&gt; option to the hook:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terraform_wrapper_module_for_each&#xA;  args:&#xA;    - &#39;--args=--module-repo-shortname=ec2-instance&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;terrascan&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;terrascan&lt;/code&gt; supports custom arguments so you can pass supported flags like &lt;code&gt;--non-recursive&lt;/code&gt; and &lt;code&gt;--policy-type&lt;/code&gt; to disable recursive inspection and set the policy type respectively:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: terrascan&#xA;  args:&#xA;    - --args=--non-recursive # avoids scan errors on subdirectories without Terraform config files&#xA;    - --args=--policy-type=azure&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;See the &lt;code&gt;terrascan run -h&lt;/code&gt; command line help for available options.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;--args=--verbose&lt;/code&gt; parameter to see the rule ID in the scanning output. Useful to skip validations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;--skip-rules=&#34;ruleID1,ruleID2&#34;&lt;/code&gt; parameter to skip one or more rules globally while scanning (e.g.: &lt;code&gt;--args=--skip-rules=&#34;ruleID1,ruleID2&#34;&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the syntax &lt;code&gt;#ts:skip=RuleID optional_comment&lt;/code&gt; inside a resource to skip the rule for that resource.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;tfupdate&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Out of the box &lt;code&gt;tfupdate&lt;/code&gt; will pin the terraform version:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: tfupdate&#xA;  name: Autoupdate Terraform versions&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;d like to pin providers, etc., use custom arguments, i.e &lt;code&gt;provider=PROVIDER_NAME&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- id: tfupdate&#xA;  name: Autoupdate AWS provider versions&#xA;  args:&#xA;    - --args=provider aws # Will be pined to latest version&#xA;&#xA;- id: tfupdate&#xA;  name: Autoupdate Helm provider versions&#xA;  args:&#xA;    - --args=provider helm&#xA;    - --args=--version 2.5.0 # Will be pined to specified version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/minamijoyo/tfupdate#usage&#34;&gt;&lt;code&gt;tfupdate&lt;/code&gt; usage instructions&lt;/a&gt; for other available options and usage examples.&lt;br&gt; No need to pass &lt;code&gt;--recursive .&lt;/code&gt; as it is added automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Usage&lt;/h2&gt; &#xA;&lt;h3&gt;File Permissions&lt;/h3&gt; &#xA;&lt;p&gt;A mismatch between the Docker container&#39;s user and the local repository file ownership can cause permission issues in the repository where &lt;code&gt;pre-commit&lt;/code&gt; is run. The container runs as the &lt;code&gt;root&lt;/code&gt; user by default, and uses a &lt;code&gt;tools/entrypoint.sh&lt;/code&gt; script to assume a user ID and group ID if specified by the environment variable &lt;code&gt;USERID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/#4-run&#34;&gt;recommended command&lt;/a&gt; to run the Docker container is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAG=latest&#xA;docker run -e &#34;USERID=$(id -u):$(id -g)&#34; -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which uses your current session&#39;s user ID and group ID to set the variable in the run command. Without this setting, you may find files and directories owned by &lt;code&gt;root&lt;/code&gt; in your local repository.&lt;/p&gt; &#xA;&lt;p&gt;If the local repository is using a different user or group for permissions, you can modify the &lt;code&gt;USERID&lt;/code&gt; to the user ID and group ID needed. &lt;strong&gt;Do not use the username or groupname in the environment variable, as it has no meaning in the container.&lt;/strong&gt; You can get the current directory&#39;s owner user ID and group ID from the 3rd (user) and 4th (group) columns in &lt;code&gt;ls&lt;/code&gt; output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls -aldn .&#xA;drwxr-xr-x 9 1000 1000 4096 Sep  1 16:23 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download Terraform modules from private GitHub repositories&lt;/h3&gt; &#xA;&lt;p&gt;If you use a private Git repository as your Terraform module source, you are required to authenticate to GitHub using a &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;Personal Access Token&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When running pre-commit on Docker, both locally or on CI, you need to configure the &lt;a href=&#34;https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html&#34;&gt;~/.netrc&lt;/a&gt; file, which contains login and initialization information used by the auto-login process.&lt;/p&gt; &#xA;&lt;p&gt;This can be achieved by firstly creating the &lt;code&gt;~/.netrc&lt;/code&gt; file including your &lt;code&gt;GITHUB_PAT&lt;/code&gt; and &lt;code&gt;GITHUB_SERVER_HOSTNAME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set GH values (replace with your own values)&#xA;GITHUB_PAT=ghp_bl481aBlabl481aBla&#xA;GITHUB_SERVER_HOSTNAME=github.com&#xA;&#xA;# create .netrc file&#xA;echo -e &#34;machine $GITHUB_SERVER_HOSTNAME\n\tlogin $GITHUB_PAT&#34; &amp;gt;&amp;gt; ~/.netrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;~/.netrc&lt;/code&gt; file will look similar to the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;machine github.com&#xA;  login ghp_bl481aBlabl481aBla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The value of &lt;code&gt;GITHUB_SERVER_HOSTNAME&lt;/code&gt; can also refer to a GitHub Enterprise server (i.e. &lt;code&gt;github.my-enterprise.com&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Finally, you can execute &lt;code&gt;docker run&lt;/code&gt; with an additional volume mount so that the &lt;code&gt;~/.netrc&lt;/code&gt; is accessible within the container&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run pre-commit-terraform with docker&#xA;# adding volume for .netrc file&#xA;# .netrc needs to be in /root/ dir&#xA;docker run --rm -e &#34;USERID=$(id -u):$(id -g)&#34; -v ~/.netrc:/root/.netrc -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:latest run -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;This repository is managed by &lt;a href=&#34;https://github.com/antonbabenko&#34;&gt;Anton Babenko&lt;/a&gt; with help from these awesome contributors:&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable no-inline-html --&gt; &#xA;&lt;a href=&#34;https://github.com/antonbabenko/pre-commit-terraform/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=antonbabenko/pre-commit-terraform&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://star-history.com/#antonbabenko/pre-commit-terraform&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;!-- markdownlint-enable no-inline-html --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT licensed. See &lt;a href=&#34;https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;h3&gt;Additional information for users from Russia and Belarus&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Russia has &lt;a href=&#34;https://en.wikipedia.org/wiki/Annexation_of_Crimea_by_the_Russian_Federation&#34;&gt;illegally annexed Crimea in 2014&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/War_in_Donbas&#34;&gt;brought the war in Donbas&lt;/a&gt; followed by &lt;a href=&#34;https://en.wikipedia.org/wiki/2022_Russian_invasion_of_Ukraine&#34;&gt;full-scale invasion of Ukraine in 2022&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Russia has brought sorrow and devastations to millions of Ukrainians, killed hundreds of innocent people, damaged thousands of buildings, and forced several million people to flee.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Putin_khuylo!&#34;&gt;Putin khuylo!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>