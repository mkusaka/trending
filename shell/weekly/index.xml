<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-08T02:01:59Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Guilouz/Creality-K1-and-K1-Max</title>
    <updated>2023-10-08T02:01:59Z</updated>
    <id>tag:github.com,2023-10-08:/Guilouz/Creality-K1-and-K1-Max</id>
    <link href="https://github.com/Guilouz/Creality-K1-and-K1-Max" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Installation Helper Script for Creality K1 Series&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Installation Helper Script for Creality K1 Series&lt;/h1&gt; &#xA;&lt;img width=&#34;1102&#34; alt=&#34;Capture d’écran 2023-08-03 à 21 37 06&#34; src=&#34;https://github.com/Guilouz/Creality-K1-and-K1-Max/assets/12702322/c0815e43-74c2-45ce-bf22-3827034d51cb&#34;&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This guide explains the whole process to root Creality K1 and K1 Max and add good stuffs to your printer.&lt;/p&gt; &#xA;&lt;p&gt;The advantage is to have full access to the firmware and configuration files in order to be able to make changes to them.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t know what you&#39;re doing, I don&#39;t recommend following this guide.&lt;/p&gt; &#xA;&lt;p&gt;&lt;u&gt;Note:&lt;/u&gt; Some of the firmwares were provided by Creality but have not yet been released publicly.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;Guide is available here: &lt;a href=&#34;https://github.com/Guilouz/Creality-K1-and-K1-Max/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Credits are available here: &lt;a href=&#34;https://github.com/Guilouz/Creality-K1-and-K1-Max/wiki/Special-Thanks&#34;&gt;Special Thanks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>bats-core/bats-core</title>
    <updated>2023-10-08T02:01:59Z</updated>
    <id>tag:github.com,2023-10-08:/bats-core/bats-core</id>
    <link href="https://github.com/bats-core/bats-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bash Automated Testing System&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bats-core: Bash Automated Testing System&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bats-core/bats-core/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/bats-core/bats-core.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/bats&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/bats.svg?sanitize=true&#34; alt=&#34;npm package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bats-core/bats-core/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bats-core/bats-core/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/bats-core/bats-core/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Continuous integration status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bats-core.readthedocs.io&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/bats-core/badge/&#34; alt=&#34;Read the docs status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/bats-core/bats-core&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/bats-core/bats-core.svg?sanitize=true&#34; alt=&#34;Join the chat in bats-core/bats-core on gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bats is a &lt;a href=&#34;https://testanything.org/&#34;&gt;TAP&lt;/a&gt;-compliant testing framework for Bash. It provides a simple way to verify that the UNIX programs you write behave as expected.&lt;/p&gt; &#xA;&lt;p&gt;A Bats test file is a Bash script with special syntax for defining test cases. Under the hood, each test case is just a function with a description.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bats&#xA;&#xA;@test &#34;addition using bc&#34; {&#xA;  result=&#34;$(echo 2+2 | bc)&#34;&#xA;  [ &#34;$result&#34; -eq 4 ]&#xA;}&#xA;&#xA;@test &#34;addition using dc&#34; {&#xA;  result=&#34;$(echo 2 2+p | dc)&#34;&#xA;  [ &#34;$result&#34; -eq 4 ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bats is most useful when testing software written in Bash, but you can use it to test any UNIX program.&lt;/p&gt; &#xA;&lt;p&gt;Test cases consist of standard shell commands. Bats makes use of Bash&#39;s &lt;code&gt;errexit&lt;/code&gt; (&lt;code&gt;set -e&lt;/code&gt;) option when running test cases. If every command in the test case exits with a &lt;code&gt;0&lt;/code&gt; status code (success), the test passes. In this way, each line is an assertion of truth.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The documentation has moved to &lt;a href=&#34;https://bats-core.readthedocs.io&#34;&gt;https://bats-core.readthedocs.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#version-history&#34;&gt;Version history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#background&#34;&gt;Background&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#whats-the-plan-and-why&#34;&gt;What&#39;s the plan and why?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#why-was-this-fork-created&#34;&gt;Why was this fork created?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/#copyright&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bin/bats --tap test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/.github/workflows/tests.yml&#34;&gt;CI&lt;/a&gt; settings for the current test environment and scripts.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The Bats source code repository is &lt;a href=&#34;https://github.com/bats-core/bats-core&#34;&gt;hosted on GitHub&lt;/a&gt;. There you can file bugs on the issue tracker or submit tested pull requests for review.&lt;/p&gt; &#xA;&lt;p&gt;For real-world examples from open-source projects using Bats, see &lt;a href=&#34;https://github.com/bats-core/bats-core/wiki/Projects-Using-Bats&#34;&gt;Projects Using Bats&lt;/a&gt; on the wiki.&lt;/p&gt; &#xA;&lt;p&gt;To learn how to set up your editor for Bats syntax highlighting, see &lt;a href=&#34;https://github.com/bats-core/bats-core/wiki/Syntax-Highlighting&#34;&gt;Syntax Highlighting&lt;/a&gt; on the wiki.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For now see the &lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/docs&#34;&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; folder for project guides, work with us on the wiki or look at the other communication channels.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can find and chat with us on our &lt;a href=&#34;https://gitter.im/bats-core/bats-core&#34;&gt;Gitter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version history&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;docs/CHANGELOG.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable MD026 --&gt; &#xA;&lt;h3&gt;What&#39;s the plan and why?&lt;/h3&gt; &#xA;&lt;!-- markdownlint-enable MD026 --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tuesday, September 19, 2017:&lt;/strong&gt; This was forked from &lt;a href=&#34;https://github.com/sstephenson/bats&#34;&gt;Bats&lt;/a&gt; at commit &lt;a href=&#34;https://github.com/sstephenson/bats/commit/03608115df2071fff4eaaff1605768c275e5f81f&#34;&gt;0360811&lt;/a&gt;. It was created via &lt;code&gt;git clone --bare&lt;/code&gt; and &lt;code&gt;git push --mirror&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://github.com/bats-core/bats-core&#34;&gt;bats-core repo&lt;/a&gt; is the community-maintained Bats project.&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable MD026 --&gt; &#xA;&lt;h3&gt;Why was this fork created?&lt;/h3&gt; &#xA;&lt;!-- markdownlint-enable MD026 --&gt; &#xA;&lt;p&gt;There was an initial &lt;a href=&#34;https://github.com/sstephenson/bats/issues/150&#34;&gt;call for maintainers&lt;/a&gt; for the original Bats repository, but write access to it could not be obtained. With development activity stalled, this fork allowed ongoing maintenance and forward progress for Bats.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;© 2017-2022 bats-core organization&lt;/p&gt; &#xA;&lt;p&gt;© 2011-2016 Sam Stephenson&lt;/p&gt; &#xA;&lt;p&gt;Bats is released under an MIT-style license; see &lt;code&gt;LICENSE.md&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/bats-core&#34;&gt;parent project&lt;/a&gt; at GitHub or the &lt;a href=&#34;https://raw.githubusercontent.com/bats-core/bats-core/master/AUTHORS&#34;&gt;AUTHORS&lt;/a&gt; file for the current project maintainer team.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wolfi-dev/os</title>
    <updated>2023-10-08T02:01:59Z</updated>
    <id>tag:github.com,2023-10-08:/wolfi-dev/os</id>
    <link href="https://github.com/wolfi-dev/os" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Main package repository for production Wolfi images&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/wolfi-dev/.github/raw/main/profile/wolfi-logo-dark-mode.svg#gh-dark-mode-only&#34; alt=&#34;wolfi logo&#34;&gt; &lt;img src=&#34;https://github.com/wolfi-dev/.github/raw/main/profile/wolfi-logo-light-mode.svg#gh-light-mode-only&#34; alt=&#34;wolfi logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Wolfi&lt;/h1&gt; &#xA;&lt;p&gt;This is the main package repository for the Wolfi project.&lt;/p&gt; &#xA;&lt;p&gt;Named after the &lt;a href=&#34;https://en.wikipedia.org/wiki/Octopus_wolfi&#34;&gt;smallest octopus&lt;/a&gt;, &lt;a href=&#34;https://wolfi.dev&#34;&gt;Wolfi&lt;/a&gt; is a lightweight GNU software distribution which is designed around minimalism, making it well-suited for containerized environments built with &lt;a href=&#34;https://github.com/chainguard-dev/apko&#34;&gt;apko&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is built using &lt;a href=&#34;https://github.com/chainguard-dev/melange&#34;&gt;melange&lt;/a&gt;, and is sponsored by &lt;a href=&#34;https://chainguard.dev/&#34;&gt;Chainguard&lt;/a&gt;, which uses it to provide &lt;a href=&#34;https://chainguard.dev/chainguard-images&#34;&gt;lightweight GNU/Linux runtime images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Wolfi APK package repository is located at &lt;a href=&#34;https://packages.wolfi.dev/os&#34;&gt;https://packages.wolfi.dev/os&lt;/a&gt; and the signing public key is at &lt;a href=&#34;https://packages.wolfi.dev/os/wolfi-signing.rsa.pub&#34;&gt;https://packages.wolfi.dev/os/wolfi-signing.rsa.pub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;A full guide is available on the &lt;a href=&#34;https://github.com/wolfi-dev&#34;&gt;org page&lt;/a&gt;, but the quickest way to try out Wolfi is with the &lt;a href=&#34;https://github.com/chainguard-images/images/tree/main/images/wolfi-base&#34;&gt;wolfi-base image&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it cgr.dev/chainguard/wolfi-base&#xA;52aace776b20:/# uname -a&#xA;Linux 52aace776b20 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 aarch64 Linux&#xA;52aace776b20:/# cat /etc/os-release&#xA;ID=wolfi&#xA;NAME=&#34;Wolfi&#34;&#xA;PRETTY_NAME=&#34;Wolfi&#34;&#xA;VERSION_ID=&#34;20230201&#34;&#xA;HOME_URL=&#34;https://wolfi.dev&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mixing packages with other distributions&lt;/h2&gt; &#xA;&lt;p&gt;Mixing packages with other distributions is not supported and can create security problems. Although both Wolfi and Alpine use the apk package manager, packages are not compatible with each other.&lt;/p&gt; &#xA;&lt;h2&gt;If Wolfi is missing a package you require&lt;/h2&gt; &#xA;&lt;p&gt;Wolfi is not currently intended to be a general purpose desktop operating system. Our priority is to provide packages that enable containerized and embedded system workflows. Please keep this in mind when proposing adding packages to Wolfi. Also note that some packages may not be appropriately licensed for inclusion. FSF or OSI approved &lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;licenses&lt;/a&gt; are ideal.&lt;/p&gt; &#xA;&lt;p&gt;Wolfi also aims to keep its package set as up-to-date with security patches as possible. It is a requirement that any package/version contributed to Wolfi has an actively maintained upstream.&lt;/p&gt; &#xA;&lt;p&gt;To request inclusion of a package into Wolfi please use our &lt;a href=&#34;https://wolfi.dev/os/issues/new/choose&#34;&gt;New Package Request Template&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>