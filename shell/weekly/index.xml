<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-20T01:46:32Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ComplianceAsCode/content</title>
    <updated>2025-04-20T01:46:32Z</updated>
    <id>tag:github.com,2025-04-20:/ComplianceAsCode/content</id>
    <link href="https://github.com/ComplianceAsCode/content" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Security automation content in SCAP, Bash, Ansible, and other formats&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://complianceascode.readthedocs.io/en/latest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/readthedocs/complianceascode&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ComplianceAsCode/content/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/ComplianceAsCode/content.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nightly.link/ComplianceAsCode/content/workflows/nightly_build/master/Nightly%20Build.zip&#34;&gt;&lt;img src=&#34;https://github.com/ComplianceAsCode/content/actions/workflows/nightly_build.yml/badge.svg?sanitize=true&#34; alt=&#34;Nightly ZIP Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/ComplianceAsCode/content/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/62c1f8d8064b2163db3e/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://complianceascode.github.io/content-pages/&#34;&gt;&lt;img src=&#34;https://github.com/ComplianceAsCode/content/actions/workflows/gh-pages.yaml/badge.svg?sanitize=true&#34; alt=&#34;Stats, Guides, Tables&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Compliance-As-Code-The/content?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Compliance-As-Code-The/content.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/Compliance-As-Code-The/content&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this project is to create &lt;em&gt;security policy content&lt;/em&gt; for various platforms — &lt;em&gt;Red Hat Enterprise Linux&lt;/em&gt;, &lt;em&gt;Fedora&lt;/em&gt;, &lt;em&gt;Ubuntu&lt;/em&gt;, &lt;em&gt;Debian&lt;/em&gt;, &lt;em&gt;SUSE Linux Enterprise Server (SLES)&lt;/em&gt;,... — as well as products — &lt;em&gt;Firefox&lt;/em&gt;, &lt;em&gt;Chromium&lt;/em&gt;, ... We aim to make it as easy as possible to write new and maintain existing security content in all the commonly used formats.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://complianceascode.readthedocs.io/&#34;&gt;ComplianceAsCode Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://complianceascode.github.io/&#34;&gt;ComplianceAsCode Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/workshop/README.adoc&#34;&gt;Online Workshops&lt;/a&gt; - Perfect as a starting point&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://complianceascode.github.io/content-pages/guides/index.html&#34;&gt;Profiles in ComplianceAsCode&lt;/a&gt; - online HTML guides for each profile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;We build security content in various formats&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/readme_images/nist_logo.svg?sanitize=true&#34; alt=&#34;NIST logo&#34; title=&#34;NIST logo&#34;&gt; &amp;nbsp; &amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/readme_images/ansible_logo.svg?sanitize=true&#34; alt=&#34;Ansible logo&#34; title=&#34;Ansible logo&#34;&gt; &amp;nbsp; &amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/readme_images/bash_logo.png&#34; alt=&#34;Bash logo&#34; title=&#34;Bash logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&#34;SCAP content&#34;&lt;/em&gt; refers to documents in the &lt;em&gt;XCCDF&lt;/em&gt;, &lt;em&gt;OVAL&lt;/em&gt; and &lt;em&gt;SCAP source data stream&lt;/em&gt; formats. These documents can be presented in different forms and by different organizations to meet their security automation and technical implementation needs. For general use, we recommend &lt;em&gt;SCAP source data streams&lt;/em&gt; because they contain all the data you need to evaluate and put machines into compliance. The data streams are part of our release ZIP archives.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&#34;Ansible content&#34;&lt;/em&gt; refers to Ansible playbooks generated from security profiles. These can be used both in check-mode to evaluate compliance, as well as run-mode to put machines into compliance. We publish these on &lt;em&gt;Ansible Galaxy&lt;/em&gt; as well as in release ZIP archives.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&#34;Bash fix files&#34;&lt;/em&gt; refers to &lt;em&gt;Bash&lt;/em&gt; scripts generated from security profiles. These are meant to be run on machines to put them into compliance. We recommend using other formats but understand that for some deployment scenarios bash is the only option.&lt;/p&gt; &#xA;&lt;h3&gt;Why?&lt;/h3&gt; &#xA;&lt;p&gt;We want multiple organizations to be able to efficiently develop security content. By taking advantage of the powerful build system of this project, we avoid as much redundancy as possible.&lt;/p&gt; &#xA;&lt;p&gt;The build system combines the easy-to-edit YAML rule files with OVAL checks, Ansible task snippets, Bash fixes, and other files. Templating is provided at every step to avoid boilerplate. Security identifiers (CCE, NIST ID, STIG, ...) appear in all of our output formats but are all sourced from the YAML rule files.&lt;/p&gt; &#xA;&lt;p&gt;We understand that depending on your organization&#39;s needs you may need to use a specific security content format. We let you choose.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/readme_images/build_schema.svg?sanitize=true&#34; alt=&#34;Build system schema&#34; title=&#34;Build system schema&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;We use an OpenControl-inspired YAML rule format for input. Write once and generate security content in XCCDF, Ansible, and others.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;title: &#39;Configure The Number of Allowed Simultaneous Requests&#39;&#xA;&#xA;description: |-&#xA;    The &amp;lt;tt&amp;gt;MaxKeepAliveRequests&amp;lt;/tt&amp;gt; directive should be set and configured to&#xA;    &amp;lt;sub idref=&#34;var_max_keepalive_requests&#34; /&amp;gt; or greater by setting the following&#xA;    in &amp;lt;tt&amp;gt;/etc/httpd/conf/httpd.conf&amp;lt;/tt&amp;gt;:&#xA;    &amp;lt;pre&amp;gt;MaxKeepAliveRequests {{{ xccdf_value(&#34;var_max_keepalive_requests&#34;) }}}&amp;lt;/pre&amp;gt;&#xA;&#xA;rationale: |-&#xA;    Resource exhaustion can occur when an unlimited number of concurrent requests&#xA;    are allowed on a web site, facilitating a denial of service attack. Mitigating&#xA;    this kind of attack will include limiting the number of concurrent HTTP/HTTPS&#xA;    requests per IP address and may include, where feasible, limiting parameter&#xA;    values associated with keepalive, (i.e., a parameter used to limit the amount of&#xA;    time a connection may be inactive).&#xA;&#xA;severity: medium&#xA;&#xA;identifiers:&#xA;    cce: &#34;80551-5&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scan targets&lt;/h3&gt; &#xA;&lt;p&gt;Our security content can be used to scan bare-metal machines, virtual machines, virtual machine images (qcow2 and others), containers (including Docker), and container images.&lt;/p&gt; &#xA;&lt;p&gt;We use platform checks to detect whether we should or should not evaluate some of the rules. For example: separate partition checks make perfect sense on bare-metal machines but go against recommended practices on containers.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;From packages&lt;/h3&gt; &#xA;&lt;p&gt;The preferred method of installation is via the package manager of your distribution. On &lt;em&gt;Red Hat Enterprise Linux&lt;/em&gt; and &lt;em&gt;Fedora&lt;/em&gt; you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install scap-security-guide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Debian (sid), you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt install ssg-debian  # for Debian guides&#xA;apt install ssg-debderived  # for Debian-based distributions (e.g. Ubuntu) guides&#xA;apt install ssg-nondebian  # for other distributions guides (RHEL, Fedora, etc.)&#xA;apt install ssg-applications  # for application-oriented guides (Firefox, JBoss, etc.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From release ZIP files&lt;/h3&gt; &#xA;&lt;p&gt;Download pre-built SSG zip archive from &lt;a href=&#34;https://github.com/ComplianceAsCode/content/releases/latest&#34;&gt;the release page&lt;/a&gt;. Each zip file is an archive with ready-made SCAP source data streams.&lt;/p&gt; &#xA;&lt;h3&gt;From source&lt;/h3&gt; &#xA;&lt;p&gt;If ComplianceAsCode is not packaged in your distribution (it may be present there as &lt;code&gt;scap-security-guide&lt;/code&gt; package), or if the version that is packaged is too old, you need to build the content yourself and install it via &lt;code&gt;make install&lt;/code&gt;. Please see the &lt;a href=&#34;https://complianceascode.readthedocs.io/en/latest/manual/developer/02_building_complianceascode.html&#34;&gt;Developer Guide&lt;/a&gt; document for more info. We also recommend opening an issue on that distributions bug tracker to voice interest.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;We assume you have installed ComplianceAsCode system-wide into a standard location from current upstream sources as instructed in the previous section.&lt;/p&gt; &#xA;&lt;p&gt;There are several ways to consume ComplianceAsCode content, we will only go through a few of them here.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;oscap&lt;/code&gt; tool&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;oscap&lt;/code&gt; tool is a low-level command line interface that comes from the OpenSCAP project. It can be used to scan the local machine.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_ospp --results-arf arf.xml --report report.html --oval-results /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/readme_images/report_sample.png&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/docs/readme_images/report_sample.png&#34; alt=&#34;Evaluation report sample&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After evaluation, the &lt;code&gt;arf.xml&lt;/code&gt; file will contain all results in a reusable &lt;em&gt;result data stream&lt;/em&gt; (ARF) format, &lt;code&gt;report.html&lt;/code&gt; will contain a human-readable report that can be opened in a browser.&lt;/p&gt; &#xA;&lt;p&gt;Replace the profile with other profile of your choice, you can display all possible choices using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oscap info /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://www.open-scap.org/&#34;&gt;OpenSCAP&lt;/a&gt; website for more information.&lt;/p&gt; &#xA;&lt;h3&gt;SCAP Workbench&lt;/h3&gt; &#xA;&lt;p&gt;The SCAP Workbench is a graphical user interface for SCAP evaluation and customization. It is suitable for scanning a single machine, either local or remote (via SSH). New versions of SCAP Workbench have SSG integration and will automatically offer it when the application is started.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://www.open-scap.org/tools/scap-workbench/&#34;&gt;SCAP Workbench&lt;/a&gt; website for more information.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;oscap-ssh&lt;/code&gt; tool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;oscap-ssh&lt;/code&gt; comes bundled with OpenSCAP 1.2.3 and later. It allows scanning a remote machine via SSH with an interface resembling the &lt;code&gt;oscap&lt;/code&gt; tool.&lt;/p&gt; &#xA;&lt;p&gt;The following command evaluates a machine with IP &lt;code&gt;192.168.1.123&lt;/code&gt; with content stored on the local machine. Keep in mind that &lt;code&gt;oscap&lt;/code&gt; has to be installed on the remote machine but the SSG content doesn&#39;t need to be.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;oscap-ssh root@192.168.1.123 22 xccdf eval --profile xccdf_org.ssgproject.content_profile_standard --results-arf arf.xml --report report.html /usr/share/xml/scap/ssg/content/ssg-fedora-ds.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ansible&lt;/h3&gt; &#xA;&lt;p&gt;To see a list of available Ansible Playbooks, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /usr/share/scap-security-guide/ansible/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These Ansible Playbooks are generated from &lt;em&gt;SCAP&lt;/em&gt; profiles available for the products.&lt;/p&gt; &#xA;&lt;p&gt;To apply the playbook on your local machine run: (&lt;em&gt;THIS WILL CHANGE CONFIGURATION OF THE MACHINE!&lt;/em&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible-playbook -i &#34;localhost,&#34; -c local /usr/share/scap-security-guide/ansible/rhel9-playbook-ospp.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each of the Ansible Playbooks contains instructions on how to deploy them. Here is a snippet of the instructions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;...&#xA;# This file was generated by OpenSCAP 1.2.16 using:&#xA;#   $ oscap xccdf generate fix --profile rht-ccp --fix-type ansible sds.xml&#xA;#&#xA;# This script is generated from an OpenSCAP profile without preliminary evaluation.&#xA;# It attempts to fix every selected rule, even if the system is already compliant.&#xA;#&#xA;# How to apply this remediation role:&#xA;# $ ansible-playbook -i &#34;192.168.1.155,&#34; playbook.yml&#xA;# $ ansible-playbook -i inventory.ini playbook.yml&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bash&lt;/h3&gt; &#xA;&lt;p&gt;To see a list of available Bash scripts, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ls /usr/share/scap-security-guide/bash/&#xA;...&#xA;rhel8-script-hipaa.sh&#xA;rhel8-script-ospp.sh&#xA;rhel8-script-pci-dss.sh&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These Bash scripts are generated from &lt;em&gt;SCAP&lt;/em&gt; profiles available for the products. Similar to Ansible Playbooks, each of the Bash scripts contain instructions on how to deploy them.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The SSG mailing list can be found at &lt;a href=&#34;https://lists.fedorahosted.org/mailman/listinfo/scap-security-guide&#34;&gt;https://lists.fedorahosted.org/mailman/listinfo/scap-security-guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you encounter issues with OpenSCAP or SCAP Workbench, use &lt;a href=&#34;https://www.redhat.com/mailman/listinfo/open-scap-list&#34;&gt;https://www.redhat.com/mailman/listinfo/open-scap-list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you prefer more interactive contact with the community, you can join us on Gitter and IRC:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gitter: &lt;a href=&#34;https://gitter.im/Compliance-As-Code-The/content&#34;&gt;https://gitter.im/Compliance-As-Code-The/content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IRC: join the &lt;code&gt;#openscap&lt;/code&gt; IRC channel on &lt;code&gt;libera.chat&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;A little bit of history&lt;/h2&gt; &#xA;&lt;p&gt;This project started in 2011 as a collaboration between United States Government agencies and commercial operating system vendors. The original name was SCAP Security Guide, commonly abbreviated as SSG. The original scope was to create SCAP data streams. Over time, it grew into the biggest open-source beyond-SCAP content project.&lt;/p&gt; &#xA;&lt;p&gt;The next few years saw the introduction of not just government-specific security profiles but also commercial, such as PCI-DSS and CIS.&lt;/p&gt; &#xA;&lt;p&gt;Later, the industry starts moving towards different security content formats, such as Ansible, Puppet, and Chef InSpec. The community reacted by evolving the tooling and helped transform SSG into a more general-purpose security content project. This change happened over time in 2017 and 2018. In September 2018, we decided to change the name of the project to &lt;code&gt;ComplianceAsCode&lt;/code&gt;, in order to avoid confusion.&lt;/p&gt; &#xA;&lt;p&gt;We envision that the future will be format-agnostic. That&#39;s why opted for an abstraction instead of using XCCDF for the input format.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project is welcome to new contributors. We are continually trying to remove the complexities to make contributions easier and more enjoyable for everyone. This is a nice project and a friendly community.&lt;/p&gt; &#xA;&lt;p&gt;There are many ways to contribute. Check the documentation for more details: &lt;a href=&#34;https://complianceascode.readthedocs.io/en/latest/manual/developer/01_introduction.html&#34;&gt;https://complianceascode.readthedocs.io/en/latest/manual/developer/01_introduction.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check the updated list of &lt;a href=&#34;https://raw.githubusercontent.com/ComplianceAsCode/content/master/Contributors.md&#34;&gt;Contributors&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>