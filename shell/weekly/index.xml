<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T02:02:59Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>missuo/OpenAI-Checker</title>
    <updated>2023-04-23T02:02:59Z</updated>
    <id>tag:github.com,2023-04-23:/missuo/OpenAI-Checker</id>
    <link href="https://github.com/missuo/OpenAI-Checker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Used to check if your IP can access OpenAI services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI-Checker&lt;/h1&gt; &#xA;&lt;p&gt;Used to check if your IP can access OpenAI services.&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;I have only created this script, and any other websites and programs for OpenAI service availability checking are not my responsibility, so please judge the accuracy by yourself. Theoretically, it is not possible to make accurate judgments through the web side, so it is recommended that you do so through a shell.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Detection method&lt;/h2&gt; &#xA;&lt;p&gt;Our detection results come from &lt;strong&gt;Cloudflare&lt;/strong&gt; and the accuracy is independent of this script.&lt;/p&gt; &#xA;&lt;p&gt;At present, there are 163 countries supported, and I will continue to update the countries and regions newly supported by OpenAI. (April 5, 2023)&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bash &amp;lt;(curl -Ls https://cdn.jsdelivr.net/gh/missuo/OpenAI-Checker/openai.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;The following short link is temporarily unavailable due to an expired domain. I am in urgent communication with the domain registrar.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bash &amp;lt;(curl -Ls https://cpp.li/openai)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Result&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; bash &amp;lt;(curl -Ls https://cpp.li/openai)&#xA;OpenAI Access Checker. Made by Vincent&#xA;https://github.com/missuo/OpenAI-Checker&#xA;-------------------------------------&#xA;[IPv4]&#xA;Your IPv4: 205.185.1.1 - FranTech Solutions&#xA;Your IP supports access to OpenAI. Region: US&#xA;-------------------------------------&#xA;[IPv6]&#xA;Your IPv6: 2401:95c0:f001::1 - Vincent Yang&#xA;Your IP supports access to OpenAI. Region: TW&#xA;-------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Hill-98&#34;&gt;Hill-98&lt;/a&gt;: Improved the Loc Code that can support access to OpenAI. &lt;a href=&#34;https://github.com/missuo/OpenAI-Checker/issues/1&#34;&gt;#1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;OpenAI-Checker&lt;/strong&gt; Â© &lt;a href=&#34;https://github.com/missuo&#34;&gt;Vincent Young&lt;/a&gt;, Released under the &lt;a href=&#34;https://raw.githubusercontent.com/missuo/OpenAI-Checker/main/LICENSE&#34;&gt;MIT&lt;/a&gt; License.&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thuml/Time-Series-Library</title>
    <updated>2023-04-23T02:02:59Z</updated>
    <id>tag:github.com,2023-04-23:/thuml/Time-Series-Library</id>
    <link href="https://github.com/thuml/Time-Series-Library" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Library for Advanced Deep Time Series Models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Time Series Library (TSlib)&lt;/h1&gt; &#xA;&lt;p&gt;TSlib is an open-source library for deep learning researchers, especially deep time series analysis.&lt;/p&gt; &#xA;&lt;p&gt;We provide a neat code base to evaluate advanced deep time series models or develop your own model, which covers five mainstream tasks: &lt;strong&gt;long- and short-term forecasting, imputation, anomaly detection, and classification.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Leaderboard for Time Series Analysis&lt;/h2&gt; &#xA;&lt;p&gt;Till February 2023, the top three models for five different tasks are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;br&gt;Ranking&lt;/th&gt; &#xA;   &lt;th&gt;Long-term&lt;br&gt;Forecasting&lt;/th&gt; &#xA;   &lt;th&gt;Short-term&lt;br&gt;Forecasting&lt;/th&gt; &#xA;   &lt;th&gt;Imputation&lt;/th&gt; &#xA;   &lt;th&gt;Anomaly&lt;br&gt;Detection&lt;/th&gt; &#xA;   &lt;th&gt;Classification&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ðŸ¥‡ 1st&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2210.02186&#34;&gt;TimesNet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2210.02186&#34;&gt;TimesNet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2210.02186&#34;&gt;TimesNet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2210.02186&#34;&gt;TimesNet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arxiv.org/abs/2210.02186&#34;&gt;TimesNet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ðŸ¥ˆ 2nd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cure-lab/LTSF-Linear&#34;&gt;DLinear&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thuml/Nonstationary_Transformers&#34;&gt;Non-stationary&lt;br&gt;Transformer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thuml/Nonstationary_Transformers&#34;&gt;Non-stationary&lt;br&gt;Transformer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thuml/Nonstationary_Transformers&#34;&gt;Non-stationary&lt;br&gt;Transformer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MAZiqing/FEDformer&#34;&gt;FEDformer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ðŸ¥‰ 3rd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thuml/Nonstationary_Transformers&#34;&gt;Non-stationary&lt;br&gt;Transformer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MAZiqing/FEDformer&#34;&gt;FEDformer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thuml/Autoformer&#34;&gt;Autoformer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zhouhaoyi/Informer2020&#34;&gt;Informer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/thuml/Autoformer&#34;&gt;Autoformer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: We will keep updating this leaderborad.&lt;/strong&gt; If you have proposed advanced and awesome models, welcome to send your paper/code link to us or raise a pull request. We will add them to this repo and update the leaderborad as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Compared models of this leaderboard.&lt;/strong&gt; â˜‘ means that their codes have already been included in this repo.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;TimesNet&lt;/strong&gt; - TimesNet: Temporal 2D-Variation Modeling for General Time Series Analysis &lt;a href=&#34;https://openreview.net/pdf?id=ju_Uqw384Oq&#34;&gt;[ICLR 2023]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/TimesNet.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;DLinear&lt;/strong&gt; - Are Transformers Effective for Time Series Forecasting? &lt;a href=&#34;https://arxiv.org/pdf/2205.13504.pdf&#34;&gt;[AAAI 2023]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/DLinear.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;LightTS&lt;/strong&gt; - Less Is More: Fast Multivariate Time Series Forecasting with Light Sampling-oriented MLP Structures &lt;a href=&#34;https://arxiv.org/abs/2207.01186&#34;&gt;[arXiv 2022]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/LightTS.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;ETSformer&lt;/strong&gt; - ETSformer: Exponential Smoothing Transformers for Time-series Forecasting &lt;a href=&#34;https://arxiv.org/abs/2202.01381&#34;&gt;[arXiv 2022]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/ETSformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Non-stationary Transformer&lt;/strong&gt; - Non-stationary Transformers: Exploring the Stationarity in Time Series Forecasting &lt;a href=&#34;https://openreview.net/pdf?id=ucNDIDRNjjv&#34;&gt;[NeurIPS 2022]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Nonstationary_Transformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;FEDformer&lt;/strong&gt; - FEDformer: Frequency Enhanced Decomposed Transformer for Long-term Series Forecasting &lt;a href=&#34;https://proceedings.mlr.press/v162/zhou22g.html&#34;&gt;[ICML 2022]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/FEDformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Pyraformer&lt;/strong&gt; - Pyraformer: Low-complexity Pyramidal Attention for Long-range Time Series Modeling and Forecasting &lt;a href=&#34;https://openreview.net/pdf?id=0EXmFzUn5I&#34;&gt;[ICLR 2022]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Pyraformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Autoformer&lt;/strong&gt; - Autoformer: Decomposition Transformers with Auto-Correlation for Long-Term Series Forecasting &lt;a href=&#34;https://openreview.net/pdf?id=I55UqU-M11y&#34;&gt;[NeurIPS 2021]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Autoformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Informer&lt;/strong&gt; - Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting &lt;a href=&#34;https://ojs.aaai.org/index.php/AAAI/article/view/17325/17132&#34;&gt;[AAAI 2021]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Informer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Reformer&lt;/strong&gt; - Reformer: The Efficient Transformer &lt;a href=&#34;https://openreview.net/forum?id=rkgNKkHtvB&#34;&gt;[ICLR 2020]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Reformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Transformer&lt;/strong&gt; - Attention is All You Need &lt;a href=&#34;https://proceedings.neurips.cc/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf&#34;&gt;[NeurIPS 2017]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Transformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See our latest paper &lt;a href=&#34;https://arxiv.org/abs/2210.02186&#34;&gt;[TimesNet]&lt;/a&gt; for the comprehensive benchmark. We will release a real-time updated online version in March.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Newly added baselines.&lt;/strong&gt; We will add them into the leaderboard after a comprehensive evaluation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;FiLM&lt;/strong&gt; - FiLM: Frequency improved Legendre Memory Model for Long-term Time Series Forecasting &lt;a href=&#34;https://openreview.net/forum?id=zTQdHSQUQWc&#34;&gt;[NeurIPS 2022]&lt;/a&gt;&lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/FiLM.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;PatchTST&lt;/strong&gt; - A Time Series is Worth 64 Words: Long-term Forecasting with Transformers. &lt;a href=&#34;https://openreview.net/pdf?id=Jbdc0vTOcol&#34;&gt;[ICLR 2023]&lt;/a&gt; &lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/PatchTST.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;MICN&lt;/strong&gt; - MICN: Multi-scale Local and Global Context Modeling for Long-term Series Forecasting &lt;a href=&#34;https://openreview.net/pdf?id=zt53IDUR1U&#34;&gt;[ICLR 2023]&lt;/a&gt;&lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/MICN.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Crossformer&lt;/strong&gt; - Crossformer: Transformer Utilizing Cross-Dimension Dependency for Multivariate Time Series Forecasting &lt;a href=&#34;https://openreview.net/pdf?id=vSVLM2j9eie&#34;&gt;[ICLR 2023]&lt;/a&gt;&lt;a href=&#34;https://github.com/thuml/Time-Series-Library/raw/main/models/Crossformer.py&#34;&gt;[Code]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Python 3.8. For convenience, execute the following command.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Prepare Data. You can obtained the well pre-processed datasets from &lt;a href=&#34;https://drive.google.com/drive/folders/13Cg1KYOlzM5C7K8gK8NfC-F3EYxkM3D2?usp=sharing&#34;&gt;[Google Drive]&lt;/a&gt;, &lt;a href=&#34;https://cloud.tsinghua.edu.cn/f/84fbc752d0e94980a610/&#34;&gt;[Tsinghua Cloud]&lt;/a&gt; or &lt;a href=&#34;https://pan.baidu.com/s/1r3KhGd0Q9PJIUZdfEYoymg?pwd=i9iy&#34;&gt;[Baidu Drive]&lt;/a&gt;. Then place the downloaded data under the folder &lt;code&gt;./dataset&lt;/code&gt;. Here is a summary of supported datasets.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;.\pic\dataset.png&#34; height=&#34;200&#34; alt=&#34;&#34; align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Train and evaluate model. We provide the experiment scripts of all benchmarks under the folder &lt;code&gt;./scripts/&lt;/code&gt;. You can reproduce the experiment results as the following examples:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# long-term forecast&#xA;bash ./scripts/long_term_forecast/ETT_script/TimesNet_ETTh1.sh&#xA;# short-term forecast&#xA;bash ./scripts/short_term_forecast/TimesNet_M4.sh&#xA;# imputation&#xA;bash ./scripts/imputation/ETT_script/TimesNet_ETTh1.sh&#xA;# anomaly detection&#xA;bash ./scripts/anomaly_detection/PSM/TimesNet.sh&#xA;# classification&#xA;bash ./scripts/classification/TimesNet.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Develop your own model.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the model file to the folder &lt;code&gt;./models&lt;/code&gt;. You can follow the &lt;code&gt;./models/Transformer.py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Include the newly added model in the &lt;code&gt;Exp_Basic.model_dict&lt;/code&gt; of &lt;code&gt;./exp/exp_basic.py&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create the corresponding scripts under the folder &lt;code&gt;./scripts&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you find this repo useful, please cite our paper.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{wu2023timesnet,&#xA;  title={TimesNet: Temporal 2D-Variation Modeling for General Time Series Analysis},&#xA;  author={Haixu Wu and Tengge Hu and Yong Liu and Hang Zhou and Jianmin Wang and Mingsheng Long},&#xA;  booktitle={International Conference on Learning Representations},&#xA;  year={2023},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or suggestions, feel free to contact:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Haixu Wu (&lt;a href=&#34;mailto:whx20@mails.tsinghua.edu.cn&#34;&gt;whx20@mails.tsinghua.edu.cn&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Tengge Hu (&lt;a href=&#34;mailto:htg21@mails.tsinghua.edu.cn&#34;&gt;htg21@mails.tsinghua.edu.cn&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Haoran Zhang (&lt;a href=&#34;mailto:z-hr20@mails.tsinghua.edu.cn&#34;&gt;z-hr20@mails.tsinghua.edu.cn&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;or describe it in Issues.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;This library is constructed based on the following repos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Forecasting: &lt;a href=&#34;https://github.com/thuml/Autoformer&#34;&gt;https://github.com/thuml/Autoformer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Anomaly Detection: &lt;a href=&#34;https://github.com/thuml/Anomaly-Transformer&#34;&gt;https://github.com/thuml/Anomaly-Transformer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Classification: &lt;a href=&#34;https://github.com/thuml/Flowformer&#34;&gt;https://github.com/thuml/Flowformer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All the experiment datasets are public and we obtain them from the following links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Long-term Forecasting and Imputation: &lt;a href=&#34;https://github.com/thuml/Autoformer&#34;&gt;https://github.com/thuml/Autoformer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Short-term Forecasting: &lt;a href=&#34;https://github.com/ServiceNow/N-BEATS&#34;&gt;https://github.com/ServiceNow/N-BEATS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Anomaly Detection: &lt;a href=&#34;https://github.com/thuml/Anomaly-Transformer&#34;&gt;https://github.com/thuml/Anomaly-Transformer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Classification: &lt;a href=&#34;https://www.timeseriesclassification.com/&#34;&gt;https://www.timeseriesclassification.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>aws/aws-mwaa-local-runner</title>
    <updated>2023-04-23T02:02:59Z</updated>
    <id>tag:github.com,2023-04-23:/aws/aws-mwaa-local-runner</id>
    <link href="https://github.com/aws/aws-mwaa-local-runner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository provides a command line interface (CLI) utility that replicates an Amazon Managed Workflows for Apache Airflow (MWAA) environment locally.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About aws-mwaa-local-runner&lt;/h1&gt; &#xA;&lt;p&gt;This repository provides a command line interface (CLI) utility that replicates an Amazon Managed Workflows for Apache Airflow (MWAA) environment locally.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note: MWAA/AWS/DAG/Plugin issues should be raised through AWS Support or the Airflow Slack #airflow-aws channel. Issues here should be focused on this local-runner repository.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About the CLI&lt;/h2&gt; &#xA;&lt;p&gt;The CLI builds a Docker container image locally thatâ€™s similar to a MWAA production image. This allows you to run a local Apache Airflow environment to develop and test DAGs, custom plugins, and dependencies before deploying to MWAA.&lt;/p&gt; &#xA;&lt;h2&gt;What this repo contains&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;dags/&#xA;  example_lambda.py&#xA;  example_dag_with_taskflow_api.py    &#xA;  example_redshift_data_execute_sql.py&#xA;docker/&#xA;  config/&#xA;    airflow.cfg&#xA;    constraints.txt&#xA;    mwaa-base-providers-requirements.txt&#xA;    webserver_config.py&#xA;    .env.localrunner&#xA;  script/&#xA;    bootstrap.sh&#xA;    entrypoint.sh&#xA;    systemlibs.sh&#xA;    generate_key.sh&#xA;  docker-compose-local.yml&#xA;  docker-compose-resetdb.yml&#xA;  docker-compose-sequential.yml&#xA;  Dockerfile&#xA;plugins/&#xA;  README.md&#xA;requirements/  &#xA;  requirements.txt&#xA;.gitignore&#xA;CODE_OF_CONDUCT.md&#xA;CONTRIBUTING.md&#xA;LICENSE&#xA;mwaa-local-env&#xA;README.md&#xA;VERSION&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href=&#34;https://docs.docker.com/desktop/&#34;&gt;Install Docker Desktop&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux/Ubuntu&lt;/strong&gt;: &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Install Docker Compose&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker Engine&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Windows Subsystem for Linux (WSL) to run the bash based command &lt;code&gt;mwaa-local-env&lt;/code&gt;. Please follow &lt;a href=&#34;https://docs.docker.com/docker-for-windows/wsl/&#34;&gt;Windows Subsystem for Linux Installation (WSL)&lt;/a&gt; and &lt;a href=&#34;https://code.visualstudio.com/blogs/2020/03/02/docker-in-wsl2&#34;&gt;Using Docker in WSL 2&lt;/a&gt;, to get started.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aws/aws-mwaa-local-runner.git&#xA;cd aws-mwaa-local-runner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step one: Building the Docker image&lt;/h3&gt; &#xA;&lt;p&gt;Build the Docker container image using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mwaa-local-env build-image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: it takes several minutes to build the Docker image locally.&lt;/p&gt; &#xA;&lt;h3&gt;Step two: Running Apache Airflow&lt;/h3&gt; &#xA;&lt;h4&gt;Local runner&lt;/h4&gt; &#xA;&lt;p&gt;Runs a local Apache Airflow environment that is a close representation of MWAA by configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mwaa-local-env start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To stop the local environment, Ctrl+C on the terminal and wait till the local runner and the postgres containers are stopped.&lt;/p&gt; &#xA;&lt;h3&gt;Step three: Accessing the Airflow UI&lt;/h3&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;bootstrap.sh&lt;/code&gt; script creates a username and password for your local Airflow environment.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Username: &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: &lt;code&gt;test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Airflow UI&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the Apache Airlfow UI: &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step four: Add DAGs and supporting files&lt;/h3&gt; &#xA;&lt;p&gt;The following section describes where to add your DAG code and supporting files. We recommend creating a directory structure similar to your MWAA environment.&lt;/p&gt; &#xA;&lt;h4&gt;DAGs&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add DAG code to the &lt;code&gt;dags/&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;To run the sample code in this repository, see the &lt;code&gt;example_dag_with_taskflow_api.py&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Requirements.txt&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add Python dependencies to &lt;code&gt;requirements/requirements.txt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To test a requirements.txt without running Apache Airflow, use the following script:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mwaa-local-env test-requirements&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s say you add &lt;code&gt;aws-batch==0.6&lt;/code&gt; to your &lt;code&gt;requirements/requirements.txt&lt;/code&gt; file. You should see an output similar to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Installing requirements.txt&#xA;Collecting aws-batch (from -r /usr/local/airflow/dags/requirements.txt (line 1))&#xA;  Downloading https://files.pythonhosted.org/packages/5d/11/3aedc6e150d2df6f3d422d7107ac9eba5b50261cf57ab813bb00d8299a34/aws_batch-0.6.tar.gz&#xA;Collecting awscli (from aws-batch-&amp;gt;-r /usr/local/airflow/dags/requirements.txt (line 1))&#xA;  Downloading https://files.pythonhosted.org/packages/07/4a/d054884c2ef4eb3c237e1f4007d3ece5c46e286e4258288f0116724af009/awscli-1.19.21-py2.py3-none-any.whl (3.6MB)&#xA;    100% |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 3.6MB 365kB/s &#xA;...&#xA;...&#xA;...&#xA;Installing collected packages: botocore, docutils, pyasn1, rsa, awscli, aws-batch&#xA;  Running setup.py install for aws-batch ... done&#xA;Successfully installed aws-batch-0.6 awscli-1.19.21 botocore-1.20.21 docutils-0.15.2 pyasn1-0.4.8 rsa-4.7.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;To package the necessary WHL files for your requirements.txt without running Apache Airflow, use the following script:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mwaa-local-env package-requirements&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example usage see &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/best-practices-dependencies.html#best-practices-dependencies-python-wheels&#34;&gt;Installing Python dependencies using PyPi.org Requirements File Format Option two: Python wheels (.whl)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Custom plugins&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is a directory at the root of this repository called plugins.&lt;/li&gt; &#xA; &lt;li&gt;In this directory, create a file for your new custom plugin.&lt;/li&gt; &#xA; &lt;li&gt;Add any Python dependencies to &lt;code&gt;requirements/requirements.txt&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this step assumes you have a DAG that corresponds to the custom plugin. For example usage &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/sample-code.html&#34;&gt;MWAA Code Examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Startup script&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is a sample shell script &lt;code&gt;startup.sh&lt;/code&gt; located in a directory at the root of this repository called &lt;code&gt;startup_script&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If there is a need to run additional setup (e.g. install system libraries, setting up environment variables), please modify the &lt;code&gt;startup.sh&lt;/code&gt; script.&lt;/li&gt; &#xA; &lt;li&gt;To test a &lt;code&gt;startup.sh&lt;/code&gt; without running Apache Airflow, use the following script:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mwaa-local-env test-startup-script&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What&#39;s next?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn how to upload the requirements.txt file to your Amazon S3 bucket in &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html&#34;&gt;Installing Python dependencies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Learn how to upload the DAG code to the dags folder in your Amazon S3 bucket in &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html&#34;&gt;Adding or updating DAGs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Learn more about how to upload the plugins.zip file to your Amazon S3 bucket in &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html&#34;&gt;Installing custom plugins&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;p&gt;The following section contains common questions and answers you may encounter when using your Docker container image.&lt;/p&gt; &#xA;&lt;h3&gt;Can I test execution role permissions using this repository?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can setup the local Airflow&#39;s boto with the intended execution role to test your DAGs with AWS operators before uploading to your Amazon S3 bucket. To setup aws connection for Airflow locally see &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/connections/aws.html&#34;&gt;Airflow | AWS Connection&lt;/a&gt; To learn more, see &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html&#34;&gt;Amazon MWAA Execution Role&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can set AWS credentials via environment variables set in the &lt;code&gt;docker/config/.env.localrunner&lt;/code&gt; env file. To learn more about AWS environment variables, see &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html&#34;&gt;Environment variables to configure the AWS CLI&lt;/a&gt; and &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html#using-temp-creds-sdk-cli&#34;&gt;Using temporary security credentials with the AWS CLI&lt;/a&gt;. Simply set the relevant environment variables in &lt;code&gt;.env.localrunner&lt;/code&gt; and &lt;code&gt;./mwaa-local-env start&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How do I add libraries to requirements.txt and test install?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;code&gt;requirements.txt&lt;/code&gt; file is included in the &lt;code&gt;/requirements&lt;/code&gt; folder of your local Docker container image. We recommend adding libraries to this file, and running locally.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What if a library is not available on PyPi.org?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If a library is not available in the Python Package Index (PyPi.org), add the &lt;code&gt;--index-url&lt;/code&gt; flag to the package in your &lt;code&gt;requirements/requirements.txt&lt;/code&gt; file. To learn more, see &lt;a href=&#34;https://docs.aws.amazon.com/mwaa/latest/userguide/best-practices-dependencies.html&#34;&gt;Managing Python dependencies in requirements.txt&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;The following section contains errors you may encounter when using the Docker container image in this repository.&lt;/p&gt; &#xA;&lt;h3&gt;My environment is not starting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you encountered &lt;a href=&#34;https://issues.apache.org/jira/browse/AIRFLOW-3678&#34;&gt;the following error&lt;/a&gt;: &lt;code&gt;process fails with &#34;dag_stats_table already exists&#34;&lt;/code&gt;, you&#39;ll need to reset your database using the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mwaa-local-env reset-db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you are moving from an older version of local-runner you may need to run the above reset-db command, or delete your &lt;code&gt;./db-data&lt;/code&gt; folder. Note, too, that newer Airflow versions have newer provider packages, which may require updating your DAG code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fernet Key InvalidToken&lt;/h3&gt; &#xA;&lt;p&gt;A Fernet Key is generated during image build (&lt;code&gt;./mwaa-local-env build-image&lt;/code&gt;) and is durable throughout all containers started from that image. This key is used to &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/security/secrets/fernet.html&#34;&gt;encrypt connection passwords in the Airflow DB&lt;/a&gt;. If changes are made to the image and it is rebuilt, you may get a new key that will not match the key used when the Airflow DB was initialized, in this case you will need to reset the DB (&lt;code&gt;./mwaa-local-env reset-db&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-mwaa-local-runner/v2.5.1/CONTRIBUTING.md#security-issue-notifications&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is licensed under the MIT-0 License. See the LICENSE file.&lt;/p&gt;</summary>
  </entry>
</feed>