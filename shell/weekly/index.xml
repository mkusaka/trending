<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-16T02:04:54Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kubernetes-sigs/nfs-subdir-external-provisioner</title>
    <updated>2023-04-16T02:04:54Z</updated>
    <id>tag:github.com,2023-04-16:/kubernetes-sigs/nfs-subdir-external-provisioner</id>
    <link href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dynamic sub-dir volume provisioner on a remote NFS server.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes NFS Subdir External Provisioner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NFS subdir external provisioner&lt;/strong&gt; is an automatic provisioner that use your &lt;em&gt;existing and already configured&lt;/em&gt; NFS server to support dynamic provisioning of Kubernetes Persistent Volumes via Persistent Volume Claims. Persistent volumes are provisioned as &lt;code&gt;${namespace}-${pvcName}-${pvName}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: This repository is migrated from &lt;a href=&#34;https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client&#34;&gt;https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client&lt;/a&gt;. As part of the migration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The container image name and repository has changed to &lt;code&gt;registry.k8s.io/sig-storage&lt;/code&gt; and &lt;code&gt;nfs-subdir-external-provisioner&lt;/code&gt; respectively.&lt;/li&gt; &#xA; &lt;li&gt;To maintain backward compatibility with earlier deployment files, the naming of NFS Client Provisioner is retained as &lt;code&gt;nfs-client-provisioner&lt;/code&gt; in the deployment YAMLs.&lt;/li&gt; &#xA; &lt;li&gt;One of the pending areas for development on this repository is to add automated e2e tests. If you would like to contribute, please raise an issue or reach us on the Kubernetes slack #sig-storage channel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to deploy NFS Subdir External Provisioner to your cluster&lt;/h2&gt; &#xA;&lt;p&gt;To note again, you must &lt;em&gt;already&lt;/em&gt; have an NFS Server.&lt;/p&gt; &#xA;&lt;h3&gt;With Helm&lt;/h3&gt; &#xA;&lt;p&gt;Follow the instructions from the helm chart &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/charts/nfs-subdir-external-provisioner/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The tl;dr is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/&#xA;$ helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \&#xA;    --set nfs.server=x.x.x.x \&#xA;    --set nfs.path=/exported/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With Kustomize&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1: Get connection information for your NFS server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure your NFS server is accessible from your Kubernetes cluster and get the information you need to connect to it. At a minimum you will need its hostname and exported share path.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2: Add the base resource&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;kustomization.yaml&lt;/code&gt; file in a directory of your choice, and add the &lt;a href=&#34;https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/tree/master/deploy&#34;&gt;deploy&lt;/a&gt; directory as a base. This will use the kustomization file within that directory as our base.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;namespace: nfs-provisioner&#xA;bases:&#xA;  - github.com/kubernetes-sigs/nfs-subdir-external-provisioner//deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3: Create namespace resource&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a file with your namespace resource. The name can be anything as it will get overwritten by the namespace in your kustomization file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# namespace.yaml&#xA;apiVersion: v1&#xA;kind: Namespace&#xA;metadata:&#xA;  name: nfs-provisioner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4: Configure deployment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To configure the deployment, you will need to patch it&#39;s container variables with the connection information for your NFS Server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# patch_nfs_details.yaml&#xA;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  labels:&#xA;    app: nfs-client-provisioner&#xA;  name: nfs-client-provisioner&#xA;spec:&#xA;  template:&#xA;    spec:&#xA;      containers:&#xA;        - name: nfs-client-provisioner&#xA;          env:&#xA;            - name: NFS_SERVER&#xA;              value: &amp;lt;YOUR_NFS_SERVER_IP&amp;gt;&#xA;            - name: NFS_PATH&#xA;              value: &amp;lt;YOUR_NFS_SERVER_SHARE&amp;gt;&#xA;      volumes:&#xA;        - name: nfs-client-root&#xA;          nfs:&#xA;            server: &amp;lt;YOUR_NFS_SERVER_IP&amp;gt;&#xA;            path: &amp;lt;YOUR_NFS_SERVER_SHARE&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace occurrences of &lt;code&gt;&amp;lt;YOUR_NFS_SERVER_IP&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR_NFS_SERVER_SHARE&amp;gt;&lt;/code&gt; with your connection information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 5: Add resources and deploy&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the namespace resource and patch you created in earlier steps.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;namespace: nfs-provisioner&#xA;bases:&#xA;  - github.com/kubernetes-sigs/nfs-subdir-external-provisioner//deploy&#xA;resources:&#xA;  - namespace.yaml&#xA;patchesStrategicMerge:&#xA;  - patch_nfs_details.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deploy (run inside directory with your kustomization file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl apply -k .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 6: Finally, test your environment!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now we&#39;ll test your NFS subdir external provisioner by creating a persistent volume claim and a pod that writes a test file to the volume. This will make sure that the provisioner is provisioning and that the NFS server is reachable and writable.&lt;/p&gt; &#xA;&lt;p&gt;Deploy the test resources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ kubectl create -f https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/deploy/test-claim.yaml -f https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/deploy/test-pod.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now check your NFS Server for the &lt;code&gt;SUCCESS&lt;/code&gt; inside the PVC&#39;s directory.&lt;/p&gt; &#xA;&lt;p&gt;Delete the test resources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ kubectl delete -f https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/deploy/test-claim.yaml -f https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/deploy/test-pod.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now check the PVC&#39;s directory has been deleted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 7: Deploying your own PersistentVolumeClaims&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To deploy your own PVC, make sure that you have the correct &lt;code&gt;storageClassName&lt;/code&gt; (by default &lt;code&gt;nfs-client&lt;/code&gt;). You can also patch the StorageClass resource to change it, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# kustomization.yaml&#xA;namespace: nfs-provisioner&#xA;resources:&#xA;  - github.com/kubernetes-sigs/nfs-subdir-external-provisioner//deploy&#xA;  - namespace.yaml&#xA;patches:&#xA;- target:&#xA;    kind: StorageClass&#xA;    name: nfs-client&#xA;  patch: |-&#xA;    - op: replace&#xA;      path: /metadata/name&#xA;      value: &amp;lt;YOUR-STORAGECLASS-NAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1: Get connection information for your NFS server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure your NFS server is accessible from your Kubernetes cluster and get the information you need to connect to it. At a minimum you will need its hostname.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2: Get the NFS Subdir External Provisioner files&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To setup the provisioner you will download a set of YAML files, edit them to add your NFS server&#39;s connection information and then apply each with the &lt;code&gt;kubectl&lt;/code&gt; / &lt;code&gt;oc&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Get all of the files in the &lt;a href=&#34;https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/tree/master/deploy&#34;&gt;deploy&lt;/a&gt; directory of this repository. These instructions assume that you have cloned the &lt;a href=&#34;https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/&#34;&gt;kubernetes-sigs/nfs-subdir-external-provisioner&lt;/a&gt; repository and have a bash-shell open in the root directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3: Setup authorization&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If your cluster has RBAC enabled or you are running OpenShift you must authorize the provisioner. If you are in a namespace/project other than &#34;default&#34; edit &lt;code&gt;deploy/rbac.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kubernetes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Set the subject of the RBAC objects to the current namespace where the provisioner is being deployed&#xA;$ NS=$(kubectl config get-contexts|grep -e &#34;^\*&#34; |awk &#39;{print $5}&#39;)&#xA;$ NAMESPACE=${NS:-default}&#xA;$ sed -i&#39;&#39; &#34;s/namespace:.*/namespace: $NAMESPACE/g&#34; ./deploy/rbac.yaml ./deploy/deployment.yaml&#xA;$ kubectl create -f deploy/rbac.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;OpenShift:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;On some installations of OpenShift the default admin user does not have cluster-admin permissions. If these commands fail refer to the OpenShift documentation for &lt;strong&gt;User and Role Management&lt;/strong&gt; or contact your OpenShift provider to help you grant the right permissions to your admin user. On OpenShift the service account used to bind volumes does not have the necessary permissions required to use the &lt;code&gt;hostmount-anyuid&lt;/code&gt; SCC. See also &lt;a href=&#34;https://docs.openshift.com/container-platform/4.4/authentication/managing-security-context-constraints.html#role-based-access-to-ssc_configuring-internal-oauth&#34;&gt;Role based access to SCC&lt;/a&gt; for more information. If these commands fail refer to the OpenShift documentation for &lt;strong&gt;User and Role Management&lt;/strong&gt; or contact your OpenShift provider to help you grant the right permissions to your admin user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Set the subject of the RBAC objects to the current namespace where the provisioner is being deployed&#xA;$ NAMESPACE=`oc project -q`&#xA;$ sed -i&#39;&#39; &#34;s/namespace:.*/namespace: $NAMESPACE/g&#34; ./deploy/rbac.yaml ./deploy/deployment.yaml&#xA;$ oc create -f deploy/rbac.yaml&#xA;$ oc adm policy add-scc-to-user hostmount-anyuid system:serviceaccount:$NAMESPACE:nfs-client-provisioner&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4: Configure the NFS subdir external provisioner&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to use a custom built nfs-subdir-external-provisioner image, you must edit the provisioner&#39;s deployment file to specify the correct location of your &lt;code&gt;nfs-client-provisioner&lt;/code&gt; container image.&lt;/p&gt; &#xA;&lt;p&gt;Next you must edit the provisioner&#39;s deployment file to add connection information for your NFS server. Edit &lt;code&gt;deploy/deployment.yaml&lt;/code&gt; and replace the two occurences of &#xA; &lt;your nfs server hostname&gt;&#xA;   with your server&#39;s hostname.&#xA; &lt;/your&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: Deployment&#xA;apiVersion: apps/v1&#xA;metadata:&#xA;  name: nfs-client-provisioner&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      app: nfs-client-provisioner&#xA;  strategy:&#xA;    type: Recreate&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app: nfs-client-provisioner&#xA;    spec:&#xA;      serviceAccountName: nfs-client-provisioner&#xA;      containers:&#xA;        - name: nfs-client-provisioner&#xA;          image: registry.k8s.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2&#xA;          volumeMounts:&#xA;            - name: nfs-client-root&#xA;              mountPath: /persistentvolumes&#xA;          env:&#xA;            - name: PROVISIONER_NAME&#xA;              value: k8s-sigs.io/nfs-subdir-external-provisioner&#xA;            - name: NFS_SERVER&#xA;              value: &amp;lt;YOUR NFS SERVER HOSTNAME&amp;gt;&#xA;            - name: NFS_PATH&#xA;              value: /var/nfs&#xA;      volumes:&#xA;        - name: nfs-client-root&#xA;          nfs:&#xA;            server: &amp;lt;YOUR NFS SERVER HOSTNAME&amp;gt;&#xA;            path: /var/nfs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If you want to change the PROVISIONER_NAME above from &lt;code&gt;k8s-sigs.io/nfs-subdir-external-provisioner&lt;/code&gt; to something else like &lt;code&gt;myorg/nfs-storage&lt;/code&gt;, remember to also change the PROVISIONER_NAME in the storage class definition below.&lt;/p&gt; &#xA;&lt;p&gt;To disable leader election, define an env variable named ENABLE_LEADER_ELECTION and set its value to false.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 5: Deploying your storage class&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Parameters:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onDelete&lt;/td&gt; &#xA;   &lt;td&gt;If it exists and has a delete value, delete the directory, if it exists and has a retain value, save the directory.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;will be archived with name on the share: &lt;code&gt;archived-&amp;lt;volume.Name&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;archiveOnDelete&lt;/td&gt; &#xA;   &lt;td&gt;If it exists and has a false value, delete the directory. if &lt;code&gt;onDelete&lt;/code&gt; exists, &lt;code&gt;archiveOnDelete&lt;/code&gt; will be ignored.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;will be archived with name on the share: &lt;code&gt;archived-&amp;lt;volume.Name&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pathPattern&lt;/td&gt; &#xA;   &lt;td&gt;Specifies a template for creating a directory path via PVC metadata&#39;s such as labels, annotations, name or namespace. To specify metadata use &lt;code&gt;${.PVC.&amp;lt;metadata&amp;gt;}&lt;/code&gt;. Example: If folder should be named like &lt;code&gt;&amp;lt;pvc-namespace&amp;gt;-&amp;lt;pvc-name&amp;gt;&lt;/code&gt;, use &lt;code&gt;${.PVC.namespace}-${.PVC.name}&lt;/code&gt; as pathPattern.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n/a&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This is &lt;code&gt;deploy/class.yaml&lt;/code&gt; which defines the NFS subdir external provisioner&#39;s Kubernetes Storage Class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: storage.k8s.io/v1&#xA;kind: StorageClass&#xA;metadata:&#xA;  name: nfs-client&#xA;provisioner: k8s-sigs.io/nfs-subdir-external-provisioner # or choose another name, must match deployment&#39;s env PROVISIONER_NAME&#39;&#xA;parameters:&#xA;  pathPattern: &#34;${.PVC.namespace}/${.PVC.annotations.nfs.io/storage-path}&#34; # waits for nfs.io/storage-path annotation, if not specified will accept as empty string.&#xA;  onDelete: delete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 6: Finally, test your environment!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now we&#39;ll test your NFS subdir external provisioner.&lt;/p&gt; &#xA;&lt;p&gt;Deploy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ kubectl create -f deploy/test-claim.yaml -f deploy/test-pod.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now check your NFS Server for the file &lt;code&gt;SUCCESS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl delete -f deploy/test-pod.yaml -f deploy/test-claim.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now check the folder has been deleted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 7: Deploying your own PersistentVolumeClaims&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To deploy your own PVC, make sure that you have the correct &lt;code&gt;storageClassName&lt;/code&gt; as indicated by your &lt;code&gt;deploy/class.yaml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kind: PersistentVolumeClaim&#xA;apiVersion: v1&#xA;metadata:&#xA;  name: test-claim&#xA;  annotations:&#xA;    nfs.io/storage-path: &#34;test-path&#34; # not required, depending on whether this annotation was shown in the storage class description&#xA;spec:&#xA;  storageClassName: nfs-client&#xA;  accessModes:&#xA;    - ReadWriteMany&#xA;  resources:&#xA;    requests:&#xA;      storage: 1Mi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Build and publish your own container image&lt;/h1&gt; &#xA;&lt;p&gt;To build your own custom container image from this repository, you will have to build and push the nfs-subdir-external-provisioner image using the following instructions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make build&#xA;make container&#xA;# `nfs-subdir-external-provisioner:latest` will be created.&#xA;# Note: This will build a single-arch image that matches the machine on which container is built.&#xA;# To upload this to your custom registry, say `quay.io/myorg` and arch as amd64, you can use&#xA;# docker tag nfs-subdir-external-provisioner:latest quay.io/myorg/nfs-subdir-external-provisioner-amd64:latest&#xA;# docker push quay.io/myorg/nfs-subdir-external-provisioner-amd64:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Build and publish with GitHub Actions&lt;/h1&gt; &#xA;&lt;p&gt;In a forked repository you can use GitHub Actions pipeline defined in &lt;a href=&#34;https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/.github/workflows/release.yml&#34;&gt;.github/workflows/release.yml&lt;/a&gt;. The pipeline builds Docker images for &lt;code&gt;linux/amd64&lt;/code&gt;, &lt;code&gt;linux/arm64&lt;/code&gt;, and &lt;code&gt;linux/arm/v7&lt;/code&gt; platforms and publishes them using a multi-arch manifest. The pipeline is triggered when you add a tag like &lt;code&gt;gh-v{major}.{minor}.{patch}&lt;/code&gt; to your commit and push it to GitHub. The tag is used for generating Docker image tags: &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;{major}&lt;/code&gt;, &lt;code&gt;{major}:{minor}&lt;/code&gt;, &lt;code&gt;{major}:{minor}:{patch}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The pipeline adds several labels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.title=${{ github.event.repository.name }}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.description=${{ github.event.repository.description }}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.url=${{ github.event.repository.html_url }}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.source=${{ github.event.repository.clone_url }}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.created=${{ steps.prep.outputs.created }}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.revision=${{ github.sha }}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The pipeline performs the docker login command using &lt;code&gt;REGISTRY_USERNAME&lt;/code&gt; and &lt;code&gt;REGISTRY_TOKEN&lt;/code&gt; secrets, which have to be provided.&lt;/li&gt; &#xA; &lt;li&gt;You also need to provide the &lt;code&gt;DOCKER_IMAGE&lt;/code&gt; secret specifying your Docker image name, e.g., &lt;code&gt;quay.io/[username]/nfs-subdir-external-provisioner&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;NFS provisioner limitations/pitfalls&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The provisioned storage is not guaranteed. You may allocate more than the NFS share&#39;s total size. The share may also not have enough storage space left to actually accommodate the request.&lt;/li&gt; &#xA; &lt;li&gt;The provisioned storage limit is not enforced. The application can expand to use all the available storage regardless of the provisioned size.&lt;/li&gt; &#xA; &lt;li&gt;Storage resize/expansion operations are not presently supported in any form. You will end up in an error state: &lt;code&gt;Ignoring the PVC: didn&#39;t find a plugin capable of expanding the volume; waiting for an external controller to process this PVC.&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>P3TERX/warp.sh</title>
    <updated>2023-04-16T02:04:54Z</updated>
    <id>tag:github.com,2023-04-16:/P3TERX/warp.sh</id>
    <link href="https://github.com/P3TERX/warp.sh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloudflare WARP Installer | WARP 一键安装脚本&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&#34;https://p3terx.com/archives/cloudflare-warp-configuration-script.html&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Cloudflare WARP Installer&lt;/h1&gt; &#xA;&lt;p&gt;A Bash script that automatically installs and configures CloudFlare WARP in Linux, connects to WARP networks with WARP official client or WireGuard.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically install CloudFlare WARP Official Linux Client&lt;/li&gt; &#xA; &lt;li&gt;Quickly enable WARP Proxy Mode, access WARP network with SOCKS5&lt;/li&gt; &#xA; &lt;li&gt;Automatically install WireGuard related components&lt;/li&gt; &#xA; &lt;li&gt;Configuration WARP IPv4 Network interface (with WireGuard)&lt;/li&gt; &#xA; &lt;li&gt;Configuration WARP IPv6 Network interface (with WireGuard)&lt;/li&gt; &#xA; &lt;li&gt;Configuration WARP Dual Stack Network interface (with WireGuard)&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;These are the requirements for WireGuard, see the &lt;a href=&#34;https://pkg.cloudflareclient.com/packages/cloudflare-warp&#34;&gt;official page&lt;/a&gt; for the CloudFlare WARP client requirements.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supported distributions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian &amp;gt;= 10&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu &amp;gt;= 16.04&lt;/li&gt; &#xA; &lt;li&gt;Fedora&lt;/li&gt; &#xA; &lt;li&gt;CentOS&lt;/li&gt; &#xA; &lt;li&gt;Oracle Linux&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux&lt;/li&gt; &#xA; &lt;li&gt;Other similar distributions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported platform architecture:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;x86(i386)&lt;/li&gt; &#xA; &lt;li&gt;x86_64(amd64)&lt;/li&gt; &#xA; &lt;li&gt;ARMv8(aarch64)&lt;/li&gt; &#xA; &lt;li&gt;ARMv7(armhf)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(curl -fsSL git.io/warp.sh) [SUBCOMMAND]&#xA;# or&#xA;wget git.io/warp.sh&#xA;bash warp.sh [SUBCOMMAND]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Subcommands&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;install         Install Cloudflare WARP Official Linux Client&#xA;uninstall       uninstall Cloudflare WARP Official Linux Client&#xA;restart         Restart Cloudflare WARP Official Linux Client&#xA;proxy           Enable WARP Client Proxy Mode (default SOCKS5 port: 40000)&#xA;unproxy         Disable WARP Client Proxy Mode&#xA;wg              Install WireGuard and related components&#xA;wg4             Configuration WARP IPv4 Global Network (with WireGuard), all IPv4 outbound data over the WARP network&#xA;wg6             Configuration WARP IPv6 Global Network (with WireGuard), all IPv6 outbound data over the WARP network&#xA;wgd             Configuration WARP Dual Stack Global Network (with WireGuard), all outbound data over the WARP network&#xA;wgx             Configuration WARP Non-Global Network (with WireGuard), set fwmark or interface IP Address to use the WARP network&#xA;rwg             Restart WARP WireGuard service&#xA;dwg             Disable WARP WireGuard service&#xA;status          Prints status information&#xA;version         Prints version information&#xA;help            Prints this message or the help of the given subcommand(s)&#xA;menu            Chinese special features menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install and automatically configure the Proxy Mode feature of the WARP client, enable the local loopback port 40000, and use an application that supports SOCKS5 to connect to this port.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -fsSL git.io/warp.sh) proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install and automatically configure WARP IPv6 Network (with WireGuard)，Giving your Linux server access to IPv6 networks.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -fsSL git.io/warp.sh) wg6&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This Bash script is also a good WireGuard installer.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -fsSL git.io/warp.sh) wg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://1.1.1.1/&#34;&gt;Cloudflare WARP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ViRb3/wgcf&#34;&gt;ViRb3/wgcf&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/P3TERX/warp.sh/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt; © &lt;strong&gt;&lt;a href=&#34;https://p3terx.com/&#34;&gt;P3TERX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice of Non-Affiliation and Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with Cloudflare, or any of its subsidiaries or its affiliates. The official Cloudflare website can be found at &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;https://www.cloudflare.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The names Cloudflare Warp and Cloudflare as well as related names, marks, emblems and images are registered trademarks of their respective owners.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MustardChef/WSABuilds</title>
    <updated>2023-04-16T02:04:54Z</updated>
    <id>tag:github.com,2023-04-16:/MustardChef/WSABuilds</id>
    <link href="https://github.com/MustardChef/WSABuilds" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Windows Subsystem For Android on your Windows 10 and Windows 11 PC using prebuilt binaries with Google Play Store (OpenGApps/ MindTheGapps) and/or Magisk or KernelSU (root solutions) built in.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WSABuilds &amp;nbsp; &amp;nbsp; &lt;a href=&#34;https://github.com/MustardChef/WSABuilds#downloads&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/MustardChef/WSABuilds/total?label=Total%20Downloads&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://forum.xda-developers.com/t/wsabuilds-latest-windows-subsystem-for-android-wsa-builds-for-windows-10-and-11-with-magisk-and-google-play-store.4545087/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/XDA%20Developers-WSABuilds-EA7100?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=XDA-Developers&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;MagiskOnWSA (For Windows™ 10 and 11) &lt;a href=&#34;https://discord.gg/2thee7zzHZ&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://invidget.switchblade.xyz/2thee7zzHZ&#34; style=&#34;width: 400px;&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Windows Subsystem For Android™ (WSA) with Google Play Services and (or) Magisk&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/N4N0K08AC&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h4&gt; &amp;nbsp; ⚠️ Forking Information ⚠️&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;span&gt;❗&lt;/span&gt; &lt;strong&gt;Important:&lt;/strong&gt; &amp;nbsp; &lt;code&gt;⚠️DO NOT FORK⚠️&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;This repository is designed specifically not to be forked. MagiskOnWSA and some of the various forks and clones that have sprung up on the platform (&lt;em&gt;&lt;strong&gt;potentially&lt;/strong&gt;&lt;/em&gt;) violate GitHub&#39;s Terms of Service due to abuse of GitHub Actions and have been ultimately warned, disabled or banned.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;We would like to say one thing: We respect the Terms and Conditions set out by Github to its users. MagiskOnWSA Builds are built using the MagiskOnWSALocal script, patched in the case of Windows 10 Builds and uploaded onto Github and hence do not rely on the use of Github Actions.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Therefore, don&#39;t fork this repository unless you&#39;re a developer and want to modify the code itself and/or want to contribute to this Github repository.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Language/语言&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/README_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/README.md&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Want to contribute to the translation of this repo? Feel free to open a pull request. &lt;br&gt; 如果您想为该版本的翻译工作做出贡献，请随时打开一个拉动请求。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt; &amp;nbsp; ℹ️Download Disclaimer &lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;h3&gt;&lt;span&gt;❗&lt;/span&gt; &lt;strong&gt;Important:&lt;/strong&gt;&lt;/h3&gt; &#xA;  &lt;h3&gt;Prebuilt Windows Subsystem For Android™ Builds for Windows™ 11 in &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases&#34;&gt;Releases&lt;/a&gt; HAVE NOT been modified in anyway prior and subsequent to running the MagiskOnWSA script and upload to Github.&lt;/h3&gt; &#xA;  &lt;h3&gt;Prebuilt Windows Subsystem For Android™ Builds for Windows™ 10 in &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases&#34;&gt;Releases&lt;/a&gt; ONLY have had AppxManifest.xml, icu.dll and WsaPatch.dll patched according to the WSAPatch guide before upload to Github.&lt;/h3&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;h3&gt;I will move to a more transparent method of building MagiskOnWSA builds soon, due to the overarching concerns with safety, transparancy and build integrity&lt;/h3&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;h4&gt;The same level of scrutiny should be applied with the Windows Subsystem For Android™ builds as with any other program that you download from the internet&lt;/h4&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt; &amp;nbsp; ❓Want to build your own custom build❓ &lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;span&gt;❗&lt;/span&gt; &lt;strong&gt;Important:&lt;/strong&gt; &amp;nbsp; &lt;code&gt;⚠️DO NOT FORK⚠️&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;The repository shown in this is designed specifically not to be forked. MagiskOnWSA and some of the various forks and clones that have sprung up on the platform (&lt;em&gt;&lt;strong&gt;potentially&lt;/strong&gt;&lt;/em&gt;) violate GitHub&#39;s Terms of Service due to abuse of GitHub Actions and have been ultimately warned, disabled or banned.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Therefore, don&#39;t fork this repository unless you&#39;re a developer and want to modify the code itself and/or want to contribute to the Github repository.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;If you want to create your Custom Build, please follow the instructions set out clearly, to avoid the repo from being taken down as a result of a misuse of Github Actions due to the large number of forks.&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;1. Star this repos (I will happy if you do that)&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;2. Check the version from &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases&#34;&gt;Releases&lt;/a&gt; first. If it does not have the version you want, continue to follow this guide. If it does, then feel free to use those prebuild WSA builds&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;3. Log into your Github Account (this is necessary) and in the home page, click on the button (shown below) and select &#34;import a repository&#34; or go to &lt;a href=&#34;https://github.com/new/import&#34;&gt;this page directly&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/68516357/221636520-78d0716a-247b-4034-aa9d-bdbe2277950c.png&#34; style=&#34;width: 350px;&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/221641202-e3ef4deb-f2dd-46e6-82c8-fb4767f82e99.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;4. &lt;a href=&#34;https://github.com/WellCodeIsDelicious/WSA-Script&#34;&gt;Copy the URL of this Repo&lt;/a&gt; and paste it into the the text box below and press &#34;Import&#34;&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/221643582-72d71f68-8f53-48d9-a940-692a54d42098.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;5. Go to the &lt;strong&gt;Setting&lt;/strong&gt; tab in your newly imported repo and enable &#34;Github Actions&#34;&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222214308-b52b1c6f-a60b-44ef-9ce0-bc335087e3a2.png&#34; alt=&#34;Settings&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222215598-30d68ad3-9700-4061-bba4-815b3befcb10.png&#34; alt=&#34;MRq9WD3SO2&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;6. Open &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;this link&lt;/a&gt; in new tab, then follow the step below. FINALLY, SCROLL DOWN AND CLICK GENERATE TOKEN&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/70064328/231184720-0d3b4ce7-0b82-4b1f-b337-5f0fd0ceb632.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;7. The key will appear. Then click the copy button at right side of the key.&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/70064328/231189492-cf3b407e-708b-4224-ba4e-11f3e27012a1.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;8. Now, back to your repository &lt;strong&gt;Setting&lt;/strong&gt; tab, and open Secret and Variable, then click Action. Next click &lt;strong&gt;New reporistory secret&lt;/strong&gt; button&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/70064328/231191605-1e3c4b53-6d17-49f5-8e7f-c752ae12aee8.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;9. In the name boxes, type PAT. Next, paste your copied Secret key to Secret boxes, then click &lt;strong&gt;Add Secrets&lt;/strong&gt; button&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/70064328/231192376-16aa194c-07ae-4262-857f-d9d86701a110.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA; &lt;h4&gt;&lt;strong&gt;10. Now, Go to the &lt;strong&gt;Action&lt;/strong&gt; tab&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222221960-f48ab9c3-eb77-4cb0-b932-5cd343381048.png&#34; alt=&#34;CvYhP0B0CI&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;11. In the left sidebar, click the &lt;strong&gt;Custom Build&lt;/strong&gt; workflow.&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222221307-8a4571d2-ac3e-410b-b999-0eb62b14d8d5.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;12. Above the list of workflow runs, select &lt;strong&gt;Run workflow&lt;/strong&gt;&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222222850-f991890c-5a80-4cc2-b83d-0ef35c24a79e.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;13. Select your desired options such as &lt;em&gt;&lt;strong&gt;Magisk Version&lt;/strong&gt;&lt;/em&gt;, &lt;em&gt;&lt;strong&gt;WSA Release Channel + WSA Archetecture&lt;/strong&gt;&lt;/em&gt; , &lt;em&gt;&lt;strong&gt;GApps Varient&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;Compression Format&lt;/strong&gt;&lt;/em&gt; then click &lt;strong&gt;Run workflow&lt;/strong&gt;&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222224185-abcfa0cf-c8c6-46e3-bc38-871c968b86f2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;14. Wait for the action to complete and download the artifact&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;p&gt;&lt;strong&gt;DO NOT download it via multithread downloaders like IDM&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/68516357/222224469-5748b78a-158e-46ff-9f65-317dbb519aac.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h4&gt;&lt;strong&gt;15. Install like normal using &lt;a href=&#34;https://github.com/YT-Advanced/WSA-Script#--installation&#34;&gt;the instructions&lt;/a&gt; in this repository&lt;/strong&gt; and most important of all....&lt;/h4&gt; &#xA; &lt;br&gt; &#xA; &lt;h3&gt;&lt;strong&gt;Enjoy!&lt;/strong&gt;&lt;/h3&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt; &amp;nbsp; ❓Want to request a prebuilt custom build❓ &lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; &lt;br&gt; To request: &lt;br&gt; - A newer build &lt;br&gt; - A build with a different version of GApps (Google Play Services) or Magisk (root) &lt;br&gt; - A build without Magisk (root) or GApps (Google Play Services) &lt;br&gt; Feel free to open an issue in the &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/issues&#34;&gt;Issues page&lt;/a&gt;. &lt;br&gt;&lt;br&gt; Requested (Custom) Builds can be in the &#34;Custom Builds&#34; section below.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;&lt;strong&gt;Operating System&lt;/strong&gt;&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;&lt;strong&gt;Download Page&lt;/strong&gt;&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;&lt;strong&gt;Download Mirrors&lt;/strong&gt;&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/e/e6/Windows_11_logo.svg?sanitize=true&#34; style=&#34;width: 200px;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases/tag/Windows_11_2303.40000.3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Download%20Latest%20Build-Windows%2011%20x64-blue?style=for-the-badge&amp;amp;logo=windows11&#34; alt=&#34;win11down&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases/tag/Windows_11_2303.40000.3.0_arm64&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Download%20Latest%20Build-Windows%2011%20arm64-blue?style=for-the-badge&amp;amp;logo=windows11&#34; alt=&#34;win11down&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://x6cgr-my.sharepoint.com/:f:/g/personal/mcdt_x6cgr_onmicrosoft_com/Em6UayhwqPtPkesw4Y3gLkEBuZdCiTYe7UF6NNzC-2obCA?e=s0diFJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OneDrive-white?style=for-the-badge&amp;amp;logo=Microsoft%20OneDrive&amp;amp;logoColor=0078D4&#34; style=&#34;width: 150px;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/0/05/Windows_10_Logo.svg?sanitize=true&#34; style=&#34;width: 200px;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases/tag/Windows_10_2303.40000.3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Download%20Latest%20Build-Windows%2010%20x64-blue?style=for-the-badge&amp;amp;logo=windows&#34; alt=&#34;win10down&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://x6cgr-my.sharepoint.com/:f:/g/personal/mcdt_x6cgr_onmicrosoft_com/EnZZfPtP1SZJknDASBylfMkBohGWsntMcV_t4IaQRuFTSw?e=xiFdca&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OneDrive-white?style=for-the-badge&amp;amp;logo=Microsoft%20OneDrive&amp;amp;logoColor=0078D4&#34; style=&#34;width: 150px;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.icons8.com/color/240/null/windows-11.png&#34; style=&#34;width: 50px;&#34;&gt; &lt;img src=&#34;https://img.icons8.com/color/240/null/windows-10.png&#34; style=&#34;width: 50px;&#34;&gt;&lt;/p&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/OldBuilds.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Windows%2010%2F11-Older%20Builds-red?style=for-the-badge&#34; alt=&#34;windownold&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://x6cgr-my.sharepoint.com/:f:/g/personal/mcdt_x6cgr_onmicrosoft_com/EgNsfSstHBtIuAZgiNVkanYBTwu0kKVC_QvOiW7i0IojdQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OneDrive-white?style=for-the-badge&amp;amp;logo=Microsoft%20OneDrive&amp;amp;logoColor=0078D4&#34; style=&#34;width: 150px;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.icons8.com/color/240/null/windows-11.png&#34; style=&#34;width: 50px;&#34;&gt; &lt;img src=&#34;https://img.icons8.com/color/240/null/windows-10.png&#34; style=&#34;width: 50px;&#34;&gt;&lt;/p&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;h4&gt;Custom Builds:&lt;/h4&gt;&lt;h4&gt; &lt;a href=&#34;https://github.com/MustardChef/WSAMagiskDelta&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Windows%2010%2F11-Magisk%20Delta-382bef?style=for-the-badge&#34; alt=&#34;windownmagikdelta&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;p align=&#34;center&#34;&gt;&lt;img align=&#34;centre;&#34; src=&#34;https://user-images.githubusercontent.com/68516357/216452358-8137df76-875f-4b59-b77d-ca34c8a2d6d3.png&#34; style=&#34;width: 80px;&#34;&gt;&lt;/p&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MustardChef/WSAPackages&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Download-.msix%20Sources-3A6B35?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://x6cgr-my.sharepoint.com/:f:/g/personal/mcdt_x6cgr_onmicrosoft_com/EgSWYr5JLjFNkSmNydPNFKsBJAlCKj61c6BbbbVGPglASA?e=weIk7y&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OneDrive-white?style=for-the-badge&amp;amp;logo=Microsoft%20OneDrive&amp;amp;logoColor=0078D4&#34; style=&#34;width: 150px;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/e/e6/Windows_11_logo.svg?sanitize=true&#34; style=&#34;width: 200px;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/0/05/Windows_10_Logo.svg?sanitize=true&#34; style=&#34;width: 200px;&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/fluency/96/null/windows-update--v1.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;Windows Build Number&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows™ 11: Build 22000.526 or higher.&lt;/td&gt; &#xA;   &lt;td&gt;Windows™ 10: 22H2 10.0.19045.2311 or higher. &lt;br&gt; &lt;br&gt; &lt;strong&gt;From WSA version 2301.40000.7.0 and higher in this repo, there is Unofficial support for Windows™ 10: 20H1 10.0.19041.264 or higher&lt;/strong&gt;. You must install &lt;a href=&#34;https://www.catalog.update.microsoft.com/Search.aspx?q=KB5014032&#34;&gt;KB5014032&lt;/a&gt; then install &lt;a href=&#34;https://www.catalog.update.microsoft.com/Search.aspx?q=KB5022834&#34;&gt;KB5022834&lt;/a&gt; to use WSA on these older Windows 10 builds &lt;br&gt; &lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/external-smashingstocks-flat-smashing-stocks/66/null/external-RAM-technology-and-devices-smashingstocks-flat-smashing-stocks.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;RAM&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;6 GB (not recommended), 8 GB (minimum) and 16 GB (recommended).&lt;/td&gt; &#xA;   &lt;td&gt;6 GB (not recommended), 8 GB (minimum) and 16 GB (recommended).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/3d-fluency/94/null/electronics.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;Processor&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Your PC should meet the basic Windows™ 11 requirements i.e Core i3 8th Gen, Ryzen 3000, Snapdragon 8c, or above.&lt;/td&gt; &#xA;   &lt;td&gt;N/A &lt;br&gt;&lt;br&gt; This is a bit of a hit or miss, but it is highly recommended that your processor is listed in the &lt;a href=&#34;https://learn.microsoft.com/en-gb/windows-hardware/design/minimum/windows-processor-requirements&#34;&gt;supported CPU lists for Windows 11 requirements&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;h4&gt;Processor type&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;x64 or ARM64.&lt;/td&gt; &#xA;   &lt;td&gt;x64 or ARM64.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/3d-fluency/94/null/video-card.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;GPU&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Any compatible Intel, AMD or Nvidia GPU. &lt;br&gt; GPU Performance may vary depending on its compatibility with Windows Subsystem For Android™ &lt;br&gt;&lt;br&gt;&lt;h3&gt; &lt;strong&gt;Users with Intel HD Graphics 530 and older&lt;/strong&gt; &lt;/h3&gt;&lt;h3&gt;&lt;br&gt;&lt;/h3&gt;&lt;h5&gt; WSA may not start or graphical glitches will occur when Intel HD Graphics 530 and Older iGPUs are used. This is a known issue, but unfortunately there are no fixes that I currently know, plus, these GPUs are too old and do not meet Windows 11 requirements and hence are not offical supported. &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/ChangingGPU.md&#34;&gt;Follow this guide&lt;/a&gt; to switch to another iGPU/dGPU/eGPU that you may have or Microsoft Basic Renderer &lt;/h5&gt;&lt;h5&gt; &lt;br&gt;&lt;br&gt; &lt;/h5&gt;&lt;h3&gt; &lt;strong&gt;Users with Nvidia GPUs&lt;/strong&gt; &lt;/h3&gt;&lt;h3&gt;&lt;br&gt;&lt;/h3&gt;&lt;h5&gt; Nvidia GPUs are known to cause problems. If Windows Subsystem For Android™ does not start or there are graphical glitches when an Nvidia GPU is used, &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/ChangingGPU.md&#34;&gt;follow this guide&lt;/a&gt; to switch to another iGPU/dGPU/eGPU that you may have or Microsoft Basic Renderer &lt;/h5&gt;&lt;h5&gt;&lt;/h5&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Any compatible Intel, AMD or Nvidia GPU. &lt;br&gt; GPU Performance may vary depending on its compatibility with Windows Subsystem For Android™ &lt;br&gt;&lt;br&gt;&lt;h3&gt; &lt;strong&gt;Users with Intel HD Graphics 530 and older&lt;/strong&gt; &lt;/h3&gt;&lt;h3&gt;&lt;br&gt;&lt;/h3&gt;&lt;h5&gt; WSA may not start or graphical glitches will occur when Intel HD Graphics 530 and Older iGPUs are used. This is a known issue, but unfortunately there are no fixes that I currently know, plus, these GPUs are too old and do not meet Windows 11 requirements and hence are not offical supported. &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/ChangingGPU.md&#34;&gt;Follow this guide&lt;/a&gt; to switch to another iGPU/dGPU/eGPU that you may have or Microsoft Basic Renderer &lt;/h5&gt;&lt;h5&gt; &lt;br&gt;&lt;br&gt; &lt;/h5&gt;&lt;h3&gt; &lt;strong&gt;Users with Nvidia GPUs&lt;/strong&gt; &lt;/h3&gt;&lt;h3&gt;&lt;br&gt;&lt;/h3&gt;&lt;h5&gt; Nvidia GPUs are known to cause problems. If Windows Subsystem For Android™ does not start or there are graphical glitches when an Nvidia GPU is used, &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/ChangingGPU.md&#34;&gt;follow this guide&lt;/a&gt; to switch to another iGPU/dGPU/eGPU that you may have or Microsoft Basic Renderer &lt;/h5&gt;&lt;h5&gt;&lt;/h5&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/3d-fluency/94/null/ssd.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;Storage&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Solid-state drive (SSD) &lt;br&gt; - Hard Disk Drive (HDD) (NOT RECOMMENDED).&lt;/td&gt; &#xA;   &lt;td&gt;Solid-state drive (SSD) &lt;br&gt; - Hard Disk Drive (HDD) (NOT RECOMMENDED).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/stickers/100/null/storage.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;Partition&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NTFS &lt;br&gt; Windows Subsystem For Android™ can only be installed on a NTFS partition, not on an exFAT partition&lt;/td&gt; &#xA;   &lt;td&gt;NTFS &lt;br&gt; Windows Subsystem For Android™ can only be installed on a NTFS partition, not on an exFAT partition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: left;&#34; src=&#34;https://user-images.githubusercontent.com/68516357/230764789-ad8f7361-4a3b-49a8-a8e9-24fdc87d5781.png&#34; width=&#34;66&#34; height=&#34;58&#34;&gt;&lt;h4&gt;Windows Features Needed&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;- Virtual Machine Platform Enabled &lt;br&gt; - Windows Hypervisor Platform Enabled &lt;br&gt; - Hyper V Enabled (Optional)&lt;br&gt; - Windows Subsystem For Linux™ Enabled (Optional) &lt;br&gt;&lt;br&gt; These optional settings are for virtualization and provide components that are needed to run WSA. You can enable these settings from Control Panel/ Optional Features.&lt;/td&gt; &#xA;   &lt;td&gt;- Virtual Machine Platform Enabled &lt;br&gt; - Windows Hypervisor Platform Enabled &lt;br&gt; - Hyper V Enabled (Optional)&lt;br&gt; - Windows Subsystem For Linux™ Enabled (Optional) &lt;br&gt;&lt;br&gt; These optional settings are for virtualization and provide components that are needed to run WSA. You can enable these settings from Control Panel/ Optional Features.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img style=&#34;float: right;&#34; src=&#34;https://user-images.githubusercontent.com/68516357/230759907-5d11950e-1b17-4811-8f4e-a0f82e598079.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&lt;h4&gt;Virtualization&lt;/h4&gt;&lt;h4&gt;&lt;/h4&gt;&lt;/td&gt; &#xA;   &lt;td&gt;- The Computer must support virtualization and be enabled in BIOS/UEFI and Optional Features. &lt;a href=&#34;https://support.microsoft.com/en-us/windows/enable-virtualization-on-windows-11-pcs-c5578302-6e43-4b4b-a449-8ced115f58e1&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;- The Computer must support virtualization and be enabled in BIOS/UEFI and Optional Features. &lt;a href=&#34;https://support.microsoft.com/en-us/windows/enable-virtualization-on-windows-11-pcs-c5578302-6e43-4b4b-a449-8ced115f58e1&#34;&gt;Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/color/96/null/software-installer.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; Installation&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : If you have the official Windows Subsystem For Android™ installed, you must &lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/#uninstallation&#34;&gt;completely uninstall&lt;/a&gt; it to use MagiskOnWSA.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;In case you want to preserve your data from the previous installation (official or MagiskOnWSA), you can backup %LOCALAPPDATA%\Packages\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalCache\userdata.vhdx before uninstallation and restore it after installation.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Go to the &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases/latest&#34;&gt;Releases page&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;In the latest release, go to the Assets section and download the Windows Subsystem For Android™ version of your choosing (do not download &#34;Source code&#34;)&lt;/li&gt; &#xA;  &lt;li&gt;Extract the zip file&lt;/li&gt; &#xA;  &lt;li&gt;Delete the zip file&lt;/li&gt; &#xA;  &lt;li&gt;Move the newly extracted folder to a suitable location (Documents folder is a good choice), as you will need to keep the folder on your PC to use MagiskOnWSA&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; :&lt;br&gt; If you&#39;re updating WSA, merge the folders and replace the files for all items when asked&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ol start=&#34;6&#34;&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open the Windows Subsystem For Android™ folder: Search for and double-click &lt;code&gt;Run.bat&lt;/code&gt;&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;If you previously have a MagiskOnWSA installation, it will automatically uninstall the previous one while preserving all user data and install the new one, so don&#39;t worry about your data.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;If the popup windows disappear without asking administrative permission and Windows Subsystem For Android™ is not installed successfully, you should manually run Install.ps1 as administrator:&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;Press Win+x and select Windows™ Terminal (Admin)&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Input the command below and press enter, replacing {X:\path\to\your\extracted\folder} including the {} with the path of the extracted folder&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;cd &#34;{X:\path\to\your\extracted\folder}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;Input the command below and press enter&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;PowerShell.exe -ExecutionPolicy Bypass -File .\Install.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;The script will run and Windows Subsystem For Android™ will be installed&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;If this workaround does not work, your PC is not supported for WSA&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Once the installation process completes, Windows Subsystem For Android™ will launch (if this is a first-time install, a window asking for consent to diagnositic information will be shown instead. Sometimes two identical windows will show, this is fine and nothing bad happens if you click OK in both windows)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Click on the PowerShell window, then press any key on the keyboard, the PowerShell window should close&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Close File Explorer&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enjoy&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA; &lt;h3&gt;Notice (Applicable for both Windows 10 and 11):&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;You can NOT delete the Windows Subsystem For Android™ installation folder. What &lt;code&gt;Add-AppxPackage -Register .\AppxManifest.xml&lt;/code&gt; does is to register an appx package with some existing unpackaged files, so you need to keep them as long as you want to use Windows Subsystem For Android™. Check &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/module/appx/add-appxpackage?view=windowsserver2022-ps&#34;&gt;https://learn.microsoft.com/en-us/powershell/module/appx/add-appxpackage?view=windowsserver2022-ps&lt;/a&gt; for more details.&lt;/li&gt; &#xA;  &lt;li&gt;You need to register your Windows Subsystem For Android™ appx package before you can run Windows Subsystem For Android™. For &lt;a href=&#34;https://github.com/MustardChef/WSABuilds&#34;&gt;WSABuilds&lt;/a&gt; and &lt;a href=&#34;https://github.com/LSPosed/MagiskOnWSALocal&#34;&gt;MagiskOnWSALocal&lt;/a&gt; users, you need to run &lt;code&gt;Run.bat&lt;/code&gt; in the extracted dir. If the script fails, you can take the following steps for diagnosis (admin privilege required): &#xA;   &lt;ol&gt; &#xA;    &lt;li&gt; &lt;p&gt;Open a PowerShell window and change working directory to your Windows Subsystem For Android™ directory.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Run the command below in PowerShell. This should fail with an ActivityID, which is a UUID required for the next step.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;Add-AppxPackage -ForceApplicationShutdown -ForceUpdateFromAnyVersion -Register .\AppxManifest.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Run the command below in PowerShell. This should print the log of the failed operation.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Powershell&#34;&gt;Get-AppPackageLog -ActivityID &amp;lt;UUID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Check the log for the reason of failure and fix it.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/external-flaticons-flat-flat-icons/64/null/external-updating-tools-and-material-ecommerce-flaticons-flat-flat-icons.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; Updating&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;h3&gt;How do I update without losing any of my apps and data on Windows Subsystem for Android (WSA)&lt;/h3&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds#downloads&#34;&gt;Download the latest build&lt;/a&gt; (that you want to update to)&lt;/li&gt; &#xA;  &lt;li&gt;Make sure Windows Subsystem For Android is not running (Click on &#34;Turn off&#34; in the WSA Settings and wait for the spinning loader to disappear)&lt;/li&gt; &#xA;  &lt;li&gt;Using 7-Zip, WinRAR or any other tool of choice, open the .zip file&lt;/li&gt; &#xA;  &lt;li&gt;Within the .zip archive open the subfolder (Example: WSA_2xxx.xxxxx.xx.x_xx_Release-Nightly-with-magisk-xxxxxxx-MindTheGapps-xx.x-RemovedAmazon)&lt;/li&gt; &#xA;  &lt;li&gt;Select all the files that are within this subfolder and extract them to the current folder where the file for Windows Subsystem For Android are (the folder you extracted, and installed WSA from)&lt;/li&gt; &#xA;  &lt;li&gt;When prompted to replace folders, select &#34;Do this for all current items&#34; and click on &#34;Yes&#34;&lt;/li&gt; &#xA;  &lt;li&gt;When prompted to replace files, click on &#34;Replace the files in the destination&#34;&lt;/li&gt; &#xA;  &lt;li&gt;Run the &lt;code&gt;Run.bat&lt;/code&gt; file&lt;/li&gt; &#xA;  &lt;li&gt;Launch Windows Subsystem For Android Settings app and go to the &lt;code&gt;About&lt;/code&gt; tab using the sidebar&lt;/li&gt; &#xA;  &lt;li&gt;Check if the WSA version matches the latest version/ the version number that you want to update to&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;&lt;strong&gt;Join the Discord if you are having any difficulties&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/color/96/null/uninstall-programs.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; Uninstallation&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA; &lt;h3&gt;New CLI and GUI Uninstall Tool Coming Soon! Join the Discord for announcements and updates.&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;p&gt;If you want to preseve your data, make a backup of the &lt;code&gt;%LOCALAPPDATA%\Packages\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalCache\userdata.vhdx&lt;/code&gt; file. After uninstalling, copy the VHDX file back to the &lt;code&gt;%LOCALAPPDATA%\Package\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalCache&lt;/code&gt; folder.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;To remove WSA installed through WSABuild:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;1.)&lt;/strong&gt; Make sure that Windows Subsystem For Android™ is not running&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;2.)&lt;/strong&gt; Search for &lt;code&gt;Windows Subsystem For Android™ Settings&lt;/code&gt; using the built-in Windows Search, or through Add and Remove Programs and press uninstall&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;3.)&lt;/strong&gt; Delete the WSA folder that extracted you extracted and Run.bat was run from to install WSA (MagiskOnWSA folder)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;4.)&lt;/strong&gt; Go to &lt;code&gt;%LOCALAPPDATA%/Packages/&lt;/code&gt; and delete the folder named &lt;code&gt;MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe&lt;/code&gt;&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;If you get an error that states that the file(s) could not be deleted, make sure that WSA is turned off&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;To remove WSA installed from the Microsoft Store:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;1.)&lt;/strong&gt; Search for &lt;code&gt;Windows Subsystem For Android™ Settings&lt;/code&gt; using the built-in Windows Search, or through Add and Remove Programs and press uninstall&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/3d-fluency/94/null/help.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; FAQ&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&amp;nbsp; &lt;strong&gt;Help me, I am having problems with the MagiskOnWSA Builds&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Open an &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/issues&#34;&gt;issue in Github&lt;/a&gt; or &lt;a href=&#34;https://github.com/MustardChef/WSABuilds#join-the-discord&#34;&gt;join the Discord&lt;/a&gt; and describe the issue with sufficent detail&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Help me, I am having problems with installing Windows Subsystem For Android™ on Windows™ 10&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;I am not working on the patch, and nor claim to. Open an issue in the Discord or Github, and I will try to assist you with the problem if possible. For full support visit the project homepage and open an issue there: &lt;a href=&#34;https://github.com/cinit/WSAPatch/issues/&#34;&gt;https://github.com/cinit/WSAPatch/issues/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;How do I get a logcat?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;There are two ways:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;adb logcat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Location in Windows ---&amp;gt; &lt;br&gt; &lt;code&gt;%LOCALAPPDATA%\Packages\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalState\diagnostics\logcat&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Can I delete the installed folder?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;How can I update Windows Subsystem For Android™ to a new version?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;As Explained &lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/#installation&#34;&gt;Installation instructions&lt;/a&gt;. Download the &lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/#downloads&#34;&gt;latest Windows Subsystem For Android™ Version&lt;/a&gt; and replace the content of your previous installation and rerun Install.ps1. Don&#39;t worry, your data will be preserved&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;How do I update Magisk?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Do the same as updating Windows Subsystem For Android™. Wait for a new MagiskOnWSA release that includes the newer Magisk version, then follow the &lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/#installation&#34;&gt;Installation instructions&lt;/a&gt; to update&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Can I pass SafetyNet/Play Integrity?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No. Virtual machines like Windows Subsystem For Android™ cannot pass these mechanisms on their own due to the lack of signing by Google. Passing requires more exotic (and untested) solutions like: &lt;a href=&#34;https://github.com/kdrag0n/safetynet-fix/discussions/145#discussioncomment-2170917&#34;&gt;https://github.com/kdrag0n/safetynet-fix/discussions/145#discussioncomment-2170917&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;What is virtualization?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Virtualization is required to run virtual machines like Windows Subsystem For Android™. &lt;code&gt;Run.bat&lt;/code&gt; helps you enable it. After rebooting, re-run &lt;code&gt;Run.bat&lt;/code&gt; to install Windows Subsystem For Android™. If it&#39;s still not working, you have to enable virtualization in your BIOS/UEFI. Instructions vary by PC vendor, look for help online&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Can I remount system partition as read-write?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No. Windows Subsystem For Android™ is mounted as read-only by Hyper-V. You can, however, modify the system partition by creating a Magisk module, or by directly modifying the system.img file&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;I cannot adb connect localhost:58526&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Make sure developer mode is enabled. If the issue persists, check the IP address of Windows Subsystem For Android™ on the Settings ---&amp;gt; Developer page and try&lt;/p&gt; &lt;pre&gt;&lt;code&gt;adb connect ip:5555&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Magisk online module list is empty?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Magisk actively removes the online module repository. You can install the module locally or by&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;adb push module.zip /data/local/tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;adb shell su -c magisk --install-module /data/local/tmp/module.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;How do I uninstall Magisk?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Request, using &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/issues&#34;&gt;Issues&lt;/a&gt;, a Windows Subsystem For Android™ version that doesn&#39;t include Magisk from the &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/releases/latest&#34;&gt;Releases page&lt;/a&gt;. Then follow the &lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/#installation&#34;&gt;Installation instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Can I switch between OpenGApps and MindTheGapps?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No. GApps will no longer function. Do a &lt;a href=&#34;https://raw.githubusercontent.com/MustardChef/WSABuilds/master/#uninstallation&#34;&gt;complete uninstallation&lt;/a&gt; before switching&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;How do I install custom Magisk or GApps?&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;To request a build with custom Magisk or GApps, feel free to open an issue in the &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/issues.&#34;&gt;Issues page&lt;/a&gt; You can also achieve this by using the &lt;a href=&#34;https://github.com/LSPosed/MagiskOnWSALocal&#34;&gt;MagiskOnWSALocal&lt;/a&gt; Script and following the provided instructions located in the repo.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/external-xnimrodx-lineal-color-xnimrodx/96/null/external-guide-education-xnimrodx-lineal-color-xnimrodx.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; Usage Guides&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA; &lt;h3&gt;GPU Guide:&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/ChangingGPU.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-How%20to%20Change%20the%20GPU%20Used-474154?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Sideload Guide:&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/Sideloading.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-How%20to%20Sideload%20apps-474154?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Moving WSA to another drive or partition:&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/MoveToExtDrive.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-How%20to%20Move%20WSA%20to%20another%20drive%20or%20partition-474154?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Installing KernelSU&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/KernelSU.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-How%20to%20install%20KernelSU-474154?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Installing BusyBox&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Guides/BusyBox.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-How%20to%20install%20BusyBox-474154?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/external-soft-fill-juicy-fish/96/null/external-bug-coding-and-development-soft-fill-soft-fill-juicy-fish-2.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; Having Issues?&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;h3&gt;Common Issues:&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/FixInstallps1.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Install.ps1%20Issue-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/FixVirtError.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix Virtualization and Virtual Machine Platform Error-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/FixInternet.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Internet%20Issues-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/Fix%20Error%200x80073CFD.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Error%200x80073CFD-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/Fix%20Error%200x80073CF6.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Error%200x80073CF6-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/Fix%20Error%200x80073CF9.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Error%200x80073CF9-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/Fix%20Error%200x80073D10.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Error%200x80073D10-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/NamedResource%20Not%20Found%20-%20Fix%20Error%200x80073B17.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-NamedResource%20Not%20Found:%20Fix%20Error%200x80073B17-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/FixPathTooLong.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Path%20Too%20Long-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/MissingIcons.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Missing%20Icons%20Issue-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/Fixes/TargetMachineActivelyRefusedConnection.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Fix%20Target%20Machine%20Actively%20Refused%20Connection-%23EF2D5E?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&#xA;  &lt;picture&gt;&#xA;   &lt;img style=&#34;float: right;&#34; src=&#34;https://img.icons8.com/external-flaticons-lineal-color-flat-icons/64/null/external-credits-movie-theater-flaticons-lineal-color-flat-icons.png&#34; width=&#34;60&#34; height=&#34;60&#34;&gt;&#xA;  &lt;/picture&gt;&lt;h1&gt; &amp;nbsp; Credits&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://apps.microsoft.com/store/detail/windows-subsystem-for-android%E2%84%A2-with-amazon-appstore/9P3395VX91NR&#34;&gt;Microsoft&lt;/a&gt;: For providing Windows Subsystem For Android™ and related files. Windows Subsystem For Android™, Windows Subsystem For Android™ Logo, Windows™ 10 and Windows™ 11 Logos are trademarks of Microsoft Corporation. Microsoft Corporation reserves all rights to these trademarks. By downloading and installing Windows Subsystem For Android™, you agree to the &lt;a href=&#34;https://support.microsoft.com/en-gb/windows/microsoft-software-license-terms-microsoft-windows-subsystem-for-android-cf8dfb03-ba62-4daa-b7f3-e2cb18f968ad&#34;&gt;Terms and Conditions&lt;/a&gt; and &lt;a href=&#34;https://privacy.microsoft.com/en-gb/privacystatement&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/YT-Advanced/WSA-Script&#34;&gt;YT-Advanced&lt;/a&gt;: For providing and continuing the development of the script made by LSPosed, the Github Action workflow guide is based on his Github Repo. I do not claim his work and the work of the many contributers as my own and nor intend to do so.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/cinit/WSAPatch&#34;&gt;Cinit and the WSAPatch Guide&lt;/a&gt;: Many thanks for the comprehensive guide, files and support provided by Cinit and the contributers at the WSAPatch repository. Windows™ 10 Builds in this repo rely on the hard work of this project and hence credit is given where due&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/StoreDev/StoreLib&#34;&gt;StoreLib&lt;/a&gt;: API for downloading WSA&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;Magisk&lt;/a&gt;: The Magic Mask for Android&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://opengapps.org&#34;&gt;The Open Google Apps Project&lt;/a&gt;: Script the automatic generation of up-to-date Google Apps packages&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/LSPosed/WSA-Kernel-SU&#34;&gt;WSA-Kernel-SU&lt;/a&gt;: A kernel module to provide /system/xbin/su to Android Kernel&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://git.zx2c4.com/kernel-assisted-superuser&#34;&gt;Kernel Assisted Superuser&lt;/a&gt;: Kernel assisted means of gaining a root shell for Android&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ADeltaX/WSAGAScript&#34;&gt;WSAGAScript&lt;/a&gt;: The first GApps integration script for WSA&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/LSPosed/MagiskOnWSA&#34;&gt;MagiskOnWSA&lt;/a&gt;: &lt;code&gt;Deprecated&lt;/code&gt; Integrate Magisk root and Google Apps into WSA&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/LSPosed/MagiskOnWSALocal&#34;&gt;MagiskOnWSALocal&lt;/a&gt;: Integrate Magisk root and Google Apps into WSA&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://icons8.com/icons/&#34;&gt;Icons8&lt;/a&gt;: Icons used in this repo were obtained from Icon8. To view the links to the specific icons used in this Markdown, &lt;a href=&#34;https://github.com/MustardChef/WSABuilds/raw/master/README.md?plain=1&#34;&gt;press here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;The repository is provided as a utility.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Android is a trademark of Google LLC. Windows™ is a trademark of Microsoft LLC.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>