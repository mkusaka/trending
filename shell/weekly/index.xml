<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-17T01:42:58Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xzhih/one-key-hidpi</title>
    <updated>2024-11-17T01:42:58Z</updated>
    <id>tag:github.com,2024-11-17:/xzhih/one-key-hidpi</id>
    <link href="https://github.com/xzhih/one-key-hidpi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enable macOS HiDPI and have a native setting.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Enable macOS HiDPI&lt;/h1&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/README-zh.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt; This script can simulate macOS HiDPI on a non-retina display, and have a &#34;Native&#34; Scaled in System Preferences.&lt;/p&gt; &#xA;&lt;p&gt;Some device have wake-up issue, script&#39;s second option may help, it inject a patched EDID, but another problem may exists here.&lt;/p&gt; &#xA;&lt;p&gt;Logo scaling up may not be resolved, cuz the higher resolution is faked.&lt;/p&gt; &#xA;&lt;p&gt;System Preferences&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/img/preferences.jpg&#34; alt=&#34;Preferences&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/img/hidpi.gif&#34; alt=&#34;Preferences&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;1.Remote Mode: Run this script in Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.Local Mode: Download ZIP, decompressing it, and double click &lt;code&gt;hidpi.command&lt;/code&gt; to run&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/img/run.jpg&#34; alt=&#34;RUN&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Recovery&lt;/h2&gt; &#xA;&lt;h3&gt;Normal&lt;/h3&gt; &#xA;&lt;p&gt;Still running the script in the terminal, but choose option 3&lt;/p&gt; &#xA;&lt;h3&gt;Recovery mode&lt;/h3&gt; &#xA;&lt;p&gt;If you cant boot into system, or get any another issues, you can boot into macOS Recovery mode, and use the Terminal.app&lt;/p&gt; &#xA;&lt;p&gt;There are two ways to close it. It is recommended to choose the first one&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /Volumes/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can see all Disk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /Volumes/&#34;Your System Disk Part&#34;/Users/&#xA;&#xA;ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can see user home directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &#34;user name&#34;&#xA;&#xA;./.hidpi-disable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Remove all injected display&#39;s DisplayVendorID folder under &lt;code&gt;Library/Displays/Contents/Resources/Overrides&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /Volumes/&#xA;rm -rf /Volumes/&#34;Your System Disk Part&#34;/Library/Displays/Contents/Resources/Overrides&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inspired&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tonymacx86.com/threads/solved-black-screen-with-gtx-1070-lg-ultrafine-5k-sierra-10-12-4.219872/page-4#post-1644805&#34;&gt;https://www.tonymacx86.com/threads/solved-black-screen-with-gtx-1070-lg-ultrafine-5k-sierra-10-12-4.219872/page-4#post-1644805&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/syscl/Enable-HiDPI-OSX&#34;&gt;https://github.com/syscl/Enable-HiDPI-OSX&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skywind3000/awesome-cheatsheets</title>
    <updated>2024-11-17T01:42:58Z</updated>
    <id>tag:github.com,2024-11-17:/skywind3000/awesome-cheatsheets</id>
    <link href="https://github.com/skywind3000/awesome-cheatsheets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;超级速查表 - 编程语言、框架和开发工具的速查表，单个文件包含一切你需要知道的东西 ⚡&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;超级速查表 - 编程语言、框架和开发工具的速查表，单个文件包含一切你需要知道的东西 &lt;span&gt;⚡&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/skywind3000/awesome-cheatsheets&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skywind3000/awesome-cheatsheets/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/skywind3000/awesome-cheatsheets&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/awesome.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt; ​&lt;/p&gt; &#xA;&lt;h2&gt;最好用的中文速查表（Cheatsheet）&lt;/h2&gt; &#xA;&lt;p&gt;当年学习 Linux 时就是靠着一张常用命令小卡片，敲啥命令忘记了，经常拿起来看看，后来知道这玩意儿叫做速查表（Cheatsheet），于是开始有意识收集和整理各种常用的速查表。对于很多工具来说，看书和大篇大篇的文章都太浪费时间了，其实大部分时候，你只需要一张小巧的表格就够了。&lt;/p&gt; &#xA;&lt;p&gt;最近看 LeCoupa 的 &lt;a href=&#34;https://github.com/LeCoupa/awesome-cheatsheets&#34;&gt;LeCoupa/awesome-cheatsheets&lt;/a&gt; 项目有所启发，感于网上中文资料匮乏，且质量参差不齐，决定做一个中文的 Cheatsheet 项目，收集整理常用的：编程语言、框架和开发工具的 Cheatsheet 进行收集和整理。数量不求多，但每个表都得做好做透，让你不用再网上漫无目标的搜索文章，一个简单的 Cheatsheet 文件就彻底满足你。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚡&lt;/span&gt;内容索引&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;📃&lt;/span&gt;编程语言&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/bash.sh&#34;&gt;Bash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/javascript.md&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/golang.go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/php.php&#34;&gt;PHP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/vimscript.md&#34;&gt;VimScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/python.md&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/languages/lua.lua&#34;&gt;Lua&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;🔧&lt;/span&gt;开发工具&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/tools/gdb.txt&#34;&gt;Gdb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/tools/adb.txt&#34;&gt;Adb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/tools/tmux.txt&#34;&gt;Tmux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/tools/git.txt&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/tools/ffmpeg.sh&#34;&gt;FFmpeg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;📝&lt;/span&gt;文本编辑&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/editors/vim.txt&#34;&gt;VIM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/editors/nano.txt&#34;&gt;Nano&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/editors/emacs.txt&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skywind3000/awesome-cheatsheets/master/editors/org.org&#34;&gt;Org Mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;⭐&lt;/span&gt;欢迎关注&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我的博客：&lt;a href=&#34;https://skywind.me/blog&#34;&gt;https://skywind.me/blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;个人推特：&lt;a href=&#34;https://x.com/skywind3000&#34;&gt;https://x.com/skywind3000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🙏&lt;/span&gt;感谢贡献&lt;/h2&gt; &#xA;&lt;p&gt;本项目的存在，离不开参与贡献的网友们，感谢：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/skywind3000/awesome-cheatsheets/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;希望把你的名字和头像列在这里么？欢迎把你熟悉的编程语言、框架和工具的常用知识点做成 cheatsheet 用 PR 发过来。&lt;/p&gt; &#xA;&lt;!--&#xA;&#xA;### 支持者们&#xA;&#xA;感谢支持者 🙏 [[成为支持者](https://opencollective.com/awesome-cheatsheets#backer)]&#xA;&#xA;&lt;a href=&#34;https://opencollective.com/awesome-cheatsheets#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/backers.svg?width=890&#34;&gt;&lt;/a&gt;&#xA;&#xA;--&gt; &#xA;&lt;p&gt;支持本项目，除了贡献代码，还能成为一名 sponsor，你的图标会显示在这里，点击可以跳转到你的主页 [&lt;a href=&#34;https://opencollective.com/awesome-cheatsheets#sponsor&#34;&gt;成为赞助者&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/awesome-cheatsheets/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>docker/docker-bench-security</title>
    <updated>2024-11-17T01:42:58Z</updated>
    <id>tag:github.com,2024-11-17:/docker/docker-bench-security</id>
    <link href="https://github.com/docker/docker-bench-security" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Docker Bench for Security is a script that checks for dozens of common best-practices around deploying Docker containers in production.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker Bench for Security&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/docker/docker-bench-security/master/img/benchmark_log.png&#34; alt=&#34;Docker Bench for Security running&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Docker Bench for Security is a script that checks for dozens of common best-practices around deploying Docker containers in production. The tests are all automated, and are based on the &lt;a href=&#34;https://www.cisecurity.org/benchmark/docker/&#34;&gt;CIS Docker Benchmark v1.6.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We are making this available as an open-source utility so the Docker community can have an easy way to self-assess their hosts and Docker containers against this benchmark.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CIS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.6.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.6.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.5.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.5.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.3.6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.3.5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.3.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.3.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.13.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Running Docker Bench for Security&lt;/h2&gt; &#xA;&lt;h3&gt;Run from your base host&lt;/h3&gt; &#xA;&lt;p&gt;You can simply run this script from your base host by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/docker/docker-bench-security.git&#xA;cd docker-bench-security&#xA;sudo sh docker-bench-security.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: &lt;a href=&#34;https://jqlang.github.io/jq/&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; is an optional but recommended dependency.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Run with Docker&lt;/h3&gt; &#xA;&lt;h4&gt;Building Docker image&lt;/h4&gt; &#xA;&lt;p&gt;You have two options if you wish to build and run this container yourself:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Docker Build:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/docker/docker-bench-security.git&#xA;cd docker-bench-security&#xA;docker build --no-cache -t docker-bench-security .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Followed by an appropriate &lt;code&gt;docker run&lt;/code&gt; command as stated below.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Use Docker Compose:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/docker/docker-bench-security.git&#xA;cd docker-bench-security&#xA;docker-compose run --rm docker-bench-security&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note that the &lt;code&gt;docker/docker-bench-security&lt;/code&gt; image is out-of-date and and a manual build is required. See &lt;a href=&#34;https://github.com/docker/docker-bench-security/issues/405&#34;&gt;#405&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that this container is being run with a &lt;em&gt;lot&lt;/em&gt; of privilege -- sharing the host&#39;s filesystem, pid and network namespaces, due to portions of the benchmark applying to the running host.&lt;/p&gt; &#xA;&lt;h3&gt;Using the container&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm --net host --pid host --userns host --cap-add audit_control \&#xA;    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \&#xA;    -v /etc:/etc:ro \&#xA;    -v /usr/bin/containerd:/usr/bin/containerd:ro \&#xA;    -v /usr/bin/runc:/usr/bin/runc:ro \&#xA;    -v /usr/lib/systemd:/usr/lib/systemd:ro \&#xA;    -v /var/lib:/var/lib:ro \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock:ro \&#xA;    --label docker_bench_security \&#xA;    docker-bench-security&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to adjust the shared volumes according to your operating system. Some examples are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On Ubuntu the &lt;code&gt;docker.service&lt;/code&gt; and &lt;code&gt;docker.secret&lt;/code&gt; files are located in &lt;code&gt;/lib/systemd/system&lt;/code&gt; folder by default.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm --net host --pid host --userns host --cap-add audit_control \&#xA;    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \&#xA;    -v /etc:/etc:ro \&#xA;    -v /lib/systemd/system:/lib/systemd/system:ro \&#xA;    -v /usr/bin/containerd:/usr/bin/containerd:ro \&#xA;    -v /usr/bin/runc:/usr/bin/runc:ro \&#xA;    -v /usr/lib/systemd:/usr/lib/systemd:ro \&#xA;    -v /var/lib:/var/lib:ro \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock:ro \&#xA;    --label docker_bench_security \&#xA;    docker-bench-security&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;The /etc/hostname file is missing on macOS, so it will need to be created first. Also, &lt;code&gt;Docker Desktop&lt;/code&gt; on macOS doesn&#39;t have &lt;code&gt;/usr/lib/systemd&lt;/code&gt; or the above Docker binaries.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo touch /etc/hostname&#xA;&#xA;docker run --rm --net host --pid host --userns host --cap-add audit_control \&#xA;    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \&#xA;    -v /etc:/etc \&#xA;    -v /var/lib:/var/lib:ro \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock:ro \&#xA;    --label docker_bench_security \&#xA;    docker-bench-security&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Note&lt;/h3&gt; &#xA;&lt;p&gt;Docker bench requires Docker 1.13.0 or later in order to run.&lt;/p&gt; &#xA;&lt;p&gt;Note that when distributions don&#39;t contain &lt;code&gt;auditctl&lt;/code&gt;, the audit tests will check &lt;code&gt;/etc/audit/audit.rules&lt;/code&gt; to see if a rule is present instead.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Bench for Security options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;  -b           optional  Do not print colors&#xA;  -h           optional  Print this help message&#xA;  -l FILE      optional  Log output in FILE, inside container if run using docker&#xA;  -u USERS     optional  Comma delimited list of trusted docker user(s)&#xA;  -c CHECK     optional  Comma delimited list of specific check(s) id&#xA;  -e CHECK     optional  Comma delimited list of specific check(s) id to exclude&#xA;  -i INCLUDE   optional  Comma delimited list of patterns within a container or image name to check&#xA;  -x EXCLUDE   optional  Comma delimited list of patterns within a container or image name to exclude from check&#xA;  -t LABEL     optional  Comma delimited list of labels within a container or image to check&#xA;  -n LIMIT     optional  In JSON output, when reporting lists of items (containers, images, etc.), limit the number of reported items to LIMIT. Default 0 (no limit).&#xA;  -p PRINT     optional  Disable the printing of remediation measures. Default: print remediation measures.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default the Docker Bench for Security script will run all available CIS tests and produce logs in the log folder from current directory, named &lt;code&gt;docker-bench-security.log.json&lt;/code&gt; and &lt;code&gt;docker-bench-security.log&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the docker container is used then the log files will be created inside the container in location &lt;code&gt;/usr/local/bin/log/&lt;/code&gt;. If you wish to access them from the host after the container has been run you will need to mount a volume for storing them in.&lt;/p&gt; &#xA;&lt;p&gt;The CIS based checks are named &lt;code&gt;check_&amp;lt;section&amp;gt;_&amp;lt;number&amp;gt;&lt;/code&gt;, e.g. &lt;code&gt;check_2_6&lt;/code&gt; and community contributed checks are named &lt;code&gt;check_c_&amp;lt;number&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh docker-bench-security.sh -c check_2_2&lt;/code&gt; will only run check &lt;code&gt;2.2 Ensure the logging level is set to &#39;info&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh docker-bench-security.sh -e check_2_2&lt;/code&gt; will run all available checks except &lt;code&gt;2.2 Ensure the logging level is set to &#39;info&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh docker-bench-security.sh -e docker_enterprise_configuration&lt;/code&gt; will run all available checks except the docker_enterprise_configuration group&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh docker-bench-security.sh -e docker_enterprise_configuration,check_2_2&lt;/code&gt; will run all available checks except the docker_enterprise_configuration group and &lt;code&gt;2.2 Ensure the logging level is set to &#39;info&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh docker-bench-security.sh -c container_images,container_runtime&lt;/code&gt; will run just the container_images and container_runtime checks&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh docker-bench-security.sh -c container_images -e check_4_5&lt;/code&gt; will run just the container_images checks except &lt;code&gt;4.5 Ensure Content trust for Docker is Enabled&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that when submitting checks, provide information why it is a reasonable test to add and please include some kind of official documentation verifying that information.&lt;/p&gt;</summary>
  </entry>
</feed>