<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:53:31Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dockur/windows-arm</title>
    <updated>2024-03-17T01:53:31Z</updated>
    <id>tag:github.com,2024-03-17:/dockur/windows-arm</id>
    <link href="https://github.com/dockur/windows-arm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows for ARM in a Docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Windows ARM64&lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/dockur/windows-arm&#34;&gt;&lt;img src=&#34;https://github.com/dockur/windows-arm/raw/master/.github/logo.png&#34; title=&#34;Logo&#34; style=&#34;max-width:100%;&#34; width=&#34;128&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://github.com/dockur/windows-arm/&#34;&gt;&lt;img src=&#34;https://github.com/dockur/windows-arm/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows-arm/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/dockurr/windows-arm/latest?arch=amd64&amp;amp;sort=semver&amp;amp;color=066da5&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows-arm/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/dockurr/windows-arm/latest?color=066da5&amp;amp;label=size&#34; alt=&#34;Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dockurr/windows-arm/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dockurr/windows-arm.svg?style=flat&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Windows for ARM in a Docker container.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ISO downloader&lt;/li&gt; &#xA; &lt;li&gt;KVM acceleration&lt;/li&gt; &#xA; &lt;li&gt;Web-based viewer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  windows:&#xA;    container_name: windows&#xA;    image: dockurr/windows-arm&#xA;    devices:&#xA;      - /dev/kvm&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    ports:&#xA;      - 8006:8006&#xA;      - 3389:3389/tcp&#xA;      - 3389:3389/udp&#xA;    stop_grace_period: 2m&#xA;    restart: on-failure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Via &lt;code&gt;docker run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm --name windows -p 8006:8006 --device=/dev/kvm --cap-add NET_ADMIN --stop-timeout 120 dockurr/windows-arm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I use it?&lt;/h3&gt; &lt;p&gt;Very simple! These are the steps:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Start the container and connect to &lt;a href=&#34;http://localhost:8006&#34;&gt;port 8006&lt;/a&gt; using your web browser.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Sit back and relax while the magic happens, the whole installation will be performed fully automatic.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once you see the desktop, your Windows installation is ready for use.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Enjoy your brand new machine, and don&#39;t forget to star this repo!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I select the Windows version?&lt;/h3&gt; &lt;p&gt;By default, Windows 11 will be installed. But you can add the &lt;code&gt;VERSION&lt;/code&gt; environment variable to your compose file, in order to specify an alternative Windows version to be downloaded:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  VERSION: &#34;win11&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Select from the values below:&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Value&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Platform&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Size&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;win11&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 11 Pro&lt;/td&gt; &#xA;     &lt;td&gt;ARM64&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;4.6 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;code&gt;win10&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Windows 10 Pro&lt;/td&gt; &#xA;     &lt;td&gt;ARM64&lt;/td&gt; &#xA;     &lt;td&gt;Microsoft&lt;/td&gt; &#xA;     &lt;td&gt;3.9 GB&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;p&gt;To install x86 or x64 versions of Windows use &lt;a href=&#34;https://github.com/dockur/windows/&#34;&gt;dockur/windows&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I connect using RDP?&lt;/h3&gt; &lt;p&gt;The web-viewer is mainly meant to be used during installation, as its picture quality is low, and it has no audio or clipboard for example.&lt;/p&gt; &lt;p&gt;So for a better experience you can connect using any Microsoft Remote Desktop client to the IP of the container, using the username &lt;code&gt;docker&lt;/code&gt; and by leaving the password empty.&lt;/p&gt; &lt;p&gt;There is a good RDP client for &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.microsoft.rdc.androidx&#34;&gt;Android&lt;/a&gt; available from the Play Store and one for &lt;a href=&#34;https://apps.apple.com/nl/app/microsoft-remote-desktop/id714464092?l=en-GB&#34;&gt;iOS&lt;/a&gt; in the Apple Store. For Linux you can use &lt;a href=&#34;https://www.freerdp.com/&#34;&gt;FreeRDP&lt;/a&gt; and on Windows just type &lt;code&gt;mstsc&lt;/code&gt; in the search box.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I increase the amount of CPU or RAM?&lt;/h3&gt; &lt;p&gt;By default, 2 CPU cores and 4 GB of RAM are allocated to the container, as those are the minimum requirements of Windows 11.&lt;/p&gt; &lt;p&gt;To increase this, add the following environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  RAM_SIZE: &#34;8G&#34;&#xA;  CPU_CORES: &#34;4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the size of the disk?&lt;/h3&gt; &lt;p&gt;To expand the default size of 64 GB, add the &lt;code&gt;DISK_SIZE&lt;/code&gt; setting to your compose file and set it to your preferred capacity:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DISK_SIZE: &#34;256G&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can also be used to resize the existing disk to a larger capacity without any data loss.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I change the storage location?&lt;/h3&gt; &lt;p&gt;To change the storage location, include the following bind mount in your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;volumes:&#xA;  - /var/win:/storage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Replace the example path &lt;code&gt;/var/win&lt;/code&gt; with the desired storage folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I share files with the host?&lt;/h3&gt; &lt;p&gt;Open File Explorer and click on the Network section, you will see a computer called &lt;code&gt;host.lan&lt;/code&gt;, double-click it and it will show a folder called &lt;code&gt;Data&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Inside this folder you can access any files that are placed in &lt;code&gt;/storage/shared&lt;/code&gt; (see above) on the host.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I install a custom image?&lt;/h3&gt; &lt;p&gt;In order to download a custom ISO image, start a clean container with the URL of the ISO specified in the &lt;code&gt;VERSION&lt;/code&gt; environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  VERSION: &#34;https://example.com/win.iso&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Alternatively, you can also rename a local file to &lt;code&gt;custom.iso&lt;/code&gt; and place it in an empty &lt;code&gt;/storage&lt;/code&gt; folder to skip the download.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I assign an individual IP address to the container?&lt;/h3&gt; &lt;p&gt;By default, the container uses bridge networking, which shares the IP address with the host.&lt;/p&gt; &lt;p&gt;If you want to assign an individual IP address to the container, you can create a macvlan network as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create -d macvlan \&#xA;    --subnet=192.168.0.0/24 \&#xA;    --gateway=192.168.0.1 \&#xA;    --ip-range=192.168.0.100/28 \&#xA;    -o parent=eth0 vlan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Be sure to modify these values to match your local subnet.&lt;/p&gt; &lt;p&gt;Once you have created the network, change your compose file to look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  windows:&#xA;    container_name: windows&#xA;    ..&amp;lt;snip&amp;gt;..&#xA;    networks:&#xA;      vlan:&#xA;        ipv4_address: 192.168.0.100&#xA;&#xA;networks:&#xA;  vlan:&#xA;    external: true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;An added benefit of this approach is that you won&#39;t have to perform any port mapping anymore, since all ports will be exposed by default.&lt;/p&gt; &lt;p&gt;Please note that this IP address won&#39;t be accessible from the Docker host due to the design of macvlan, which doesn&#39;t permit communication between the two. If this is a concern, you need to create a &lt;a href=&#34;https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/#host-access&#34;&gt;second macvlan&lt;/a&gt; as a workaround.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How can Windows acquire an IP address from my router?&lt;/h3&gt; &lt;p&gt;After configuring the container for macvlan (see above), it is possible for Windows to become part of your home network by requesting an IP from your router, just like a real PC.&lt;/p&gt; &lt;p&gt;To enable this mode, add the following lines to your compose file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DHCP: &#34;Y&#34;&#xA;devices:&#xA;  - /dev/vhost-net&#xA;device_cgroup_rules:&#xA;  - &#39;c *:* rwm&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Please note that in this mode, the container and Windows will each have their own separate IPs. The container will keep the macvlan IP, and Windows will use the DHCP IP.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I pass-through a disk?&lt;/h3&gt; &lt;p&gt;It is possible to pass-through disk devices directly by adding them to your compose file in this way:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  DEVICE: &#34;/dev/sda&#34;&#xA;  DEVICE2: &#34;/dev/sdb&#34;&#xA;devices:&#xA;  - /dev/sda&#xA;  - /dev/sdb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Use &lt;code&gt;DEVICE&lt;/code&gt; if you want it to become your main drive, and use &lt;code&gt;DEVICE2&lt;/code&gt; and higher to add them as secondary drives.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I pass-through a USB device?&lt;/h3&gt; &lt;p&gt;To pass-through a USB device, first lookup its vendor and product id via the &lt;code&gt;lsusb&lt;/code&gt; command, then add them to your compose file like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  ARGUMENTS: &#34;-device usb-host,vendorid=0x1234,productid=0x1234&#34;&#xA;devices:&#xA;  - /dev/bus/usb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do I verify if my system supports KVM?&lt;/h3&gt; &lt;p&gt;To verify if your system supports KVM, run the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cpu-checker&#xA;sudo kvm-ok&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you receive an error from &lt;code&gt;kvm-ok&lt;/code&gt; indicating that KVM acceleration can&#39;t be used, check the virtualization settings in the BIOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is this project legal?&lt;/h3&gt; &lt;p&gt;Yes, this project contains only open-source code and does not distribute any copyrighted material. Any product keys found in the code are just generic placeholders provided by Microsoft for trial purposes. So under all applicable laws, this project would be considered legal.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stars&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/dockur/windows-arm&#34;&gt;&lt;img src=&#34;https://starchart.cc/dockur/windows-arm.svg?variant=adaptive&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The product names, logos, brands, and other trademarks referred to within this project are the property of their respective trademark holders. This project is not affiliated, sponsored, or endorsed by Microsoft Corporation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Mzdyl/LiteLoaderQQNT_Install</title>
    <updated>2024-03-17T01:53:31Z</updated>
    <id>tag:github.com,2024-03-17:/Mzdyl/LiteLoaderQQNT_Install</id>
    <link href="https://github.com/Mzdyl/LiteLoaderQQNT_Install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;针对 LiteLoaderQQNT 的安装脚本&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LiteLoaderQQNT_Install&lt;/h1&gt; &#xA;&lt;p&gt;针对 &lt;a href=&#34;https://liteloaderqqnt.github.io&#34;&gt;LiteLoaderQQNT&lt;/a&gt; 的安装脚本&lt;/p&gt; &#xA;&lt;p&gt;同时安装 eee 大佬编写的&lt;a href=&#34;https://github.com/Night-stars-1/LiteLoaderQQNT-Plugin-Plugin-Store/releases&#34;&gt;插件商店&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;安装方法&lt;/h2&gt; &#xA;&lt;p&gt;windows 运行对应 exe 即可&lt;/p&gt; &#xA;&lt;p&gt;mac/linux 终端运行对应脚本即可&lt;/p&gt; &#xA;&lt;h3&gt;测试版&lt;/h3&gt; &#xA;&lt;p&gt;Win 用户可以通过 &lt;a href=&#34;https://github.com/Mzdyl/LiteLoaderQQNT_Install/actions&#34;&gt;Github Action&lt;/a&gt; 下载最新测试版本&lt;/p&gt; &#xA;&lt;h2&gt;版本支持&lt;/h2&gt; &#xA;&lt;p&gt;理论支持 QQNT 桌面端 全架构 全版本&lt;/p&gt; &#xA;&lt;h2&gt;升级更新&lt;/h2&gt; &#xA;&lt;p&gt;若 LiteLoaderQQNT 更新版本一样可以使用 脚本/exe 升级&lt;/p&gt; &#xA;&lt;h2&gt;针对仓库内其他文件的附加说明&lt;/h2&gt; &#xA;&lt;p&gt;install_mac_launchd.sh 是给 macOS 写的设定环境变量的版本&lt;/p&gt; &#xA;&lt;p&gt;但是由于 macOS 严格的软件沙盒限制，会遇到大量权限问题，&lt;strong&gt;无法正常使用&lt;/strong&gt;，仅作为后续研究用&lt;/p&gt; &#xA;&lt;p&gt;普通用户还请使用 install_mac.sh&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows 插件安装后无法读取：删除掉环境变量目录下的config.json&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows 用户请确保使用 已管理员身份运行。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS 遇到 Operation not permitted 请检查是否给予 终端 完全磁盘访问权限 或者 允许 终端想访问其他App的数据。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LiteLoaderQQNT 安装后无法使用插件请自行检测原因或加群交流，本脚本仅负责安装，同时步骤完全遵循官网指南&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;如有&lt;a href=&#34;https://github.com/Mzdyl/LiteLoaderQQNT_Install/issues/20&#34;&gt;报毒&lt;/a&gt;请自行判断，本代码完全开源，同时发布的exe均由 GitHub Actions 通过 pyinstaller 构建，代码公开可以自行审查&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;软件目前使用 GitHub Action 自动化验证脚本效果&lt;/p&gt; &#xA;&lt;p&gt;如仍有其他问题或者 bug 欢迎友好反馈&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;反馈群 : &lt;a href=&#34;https://t.me/+EKoVlfEI7Ow4MzJl&#34;&gt;Telegram&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;特别鸣谢：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LiteLoaderQQNT/LiteLoaderQQNT&#34;&gt;LiteLoaderQQNT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;windows脚本借用&lt;a href=&#34;https://github.com/LiteLoaderQQNT/QQNTFileVerifyPatch&#34;&gt;QQNTFileVerifyPatch&lt;/a&gt;项目代码实现修补&lt;/p&gt; &#xA;&lt;p&gt;附加安装的&lt;a href=&#34;https://github.com/Night-stars-1/LiteLoaderQQNT-Plugin-Plugin-Store/releases&#34;&gt;插件商店&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hwdsl2/wireguard-install</title>
    <updated>2024-03-17T01:53:31Z</updated>
    <id>tag:github.com,2024-03-17:/hwdsl2/wireguard-install</id>
    <link href="https://github.com/hwdsl2/wireguard-install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WireGuard VPN server installer for Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Raspberry Pi OS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/wireguard-install/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/wireguard-install/master/README-zh.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/watch?v=99qtaJU2E2k&#34;&gt;Vídeo en Español&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WireGuard VPN Server Auto Setup Script&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hwdsl2/wireguard-install/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/hwdsl2/wireguard-install/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/wireguard-install/master/docs/images/license.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;WireGuard VPN server installer for Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Raspberry Pi OS.&lt;/p&gt; &#xA;&lt;p&gt;This script will let you set up your own VPN server in just a few minutes, even if you haven&#39;t used WireGuard before. &lt;a href=&#34;https://www.wireguard.com&#34;&gt;WireGuard&lt;/a&gt; is a fast and modern VPN designed with the goals of ease of use and high performance.&lt;/p&gt; &#xA;&lt;p&gt;See also: &lt;a href=&#34;https://github.com/hwdsl2/openvpn-install&#34;&gt;OpenVPN&lt;/a&gt; and &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn&#34;&gt;IPsec VPN&lt;/a&gt; server auto setup scripts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://books2read.com/vpnguide?store=amazon&#34;&gt;» &lt;span&gt;📖&lt;/span&gt; Book: Build Your Own VPN Server: A Step by Step Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully automated WireGuard VPN server setup, no user input needed&lt;/li&gt; &#xA; &lt;li&gt;Supports interactive install using custom options&lt;/li&gt; &#xA; &lt;li&gt;Generates VPN profiles to auto-configure Windows, macOS, iOS and Android devices&lt;/li&gt; &#xA; &lt;li&gt;Supports managing WireGuard VPN users&lt;/li&gt; &#xA; &lt;li&gt;Optimizes &lt;code&gt;sysctl&lt;/code&gt; settings for improved VPN performance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First, download the script on your Linux server*:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -O wireguard.sh https://get.vpnsetup.net/wg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt; Auto install WireGuard using default options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash wireguard.sh --auto&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; See the script in action (terminal recording). &lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This recording is for demo purposes only.&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hwdsl2/wireguard-install/master/docs/images/demo1.svg?sanitize=true&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;For servers with an external firewall (e.g. &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html&#34;&gt;EC2&lt;/a&gt;/&lt;a href=&#34;https://cloud.google.com/firewall/docs/firewalls&#34;&gt;GCE&lt;/a&gt;), open UDP port 51820 for the VPN.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt; Interactive install using custom options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash wireguard.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can customize the following options: VPN server&#39;s DNS name, UDP port, DNS server for VPN clients and name of the first client.&lt;/p&gt; &#xA;&lt;p&gt;For servers with an external firewall, open your selected UDP port for the VPN.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Click here if you are unable to download. &lt;/summary&gt; &#xA; &lt;p&gt;You may also use &lt;code&gt;curl&lt;/code&gt; to download:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fL -o wireguard.sh https://get.vpnsetup.net/wg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then follow the instructions above to install.&lt;/p&gt; &#xA; &lt;p&gt;Alternative setup URLs:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://github.com/hwdsl2/wireguard-install/raw/master/wireguard-install.sh&#xA;https://gitlab.com/hwdsl2/wireguard-install/-/raw/master/wireguard-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you are unable to download, open &lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/wireguard-install/master/wireguard-install.sh&#34;&gt;wireguard-install.sh&lt;/a&gt;, then click the &lt;code&gt;Raw&lt;/code&gt; button on the right. Press &lt;code&gt;Ctrl/Cmd+A&lt;/code&gt; to select all, &lt;code&gt;Ctrl/Cmd+C&lt;/code&gt; to copy, then paste into your favorite editor.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Advanced: Auto install using custom options. &lt;/summary&gt; &#xA; &lt;p&gt;Advanced users can auto install WireGuard using custom options, by providing a Bash &#34;here document&#34; as input to the setup script. This method can also be used to provide input to manage users after install.&lt;/p&gt; &#xA; &lt;p&gt;First, install WireGuard interactively using custom options, and write down all your inputs to the script.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash wireguard.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you need to remove WireGuard, run the script again and select the appropriate option.&lt;/p&gt; &#xA; &lt;p&gt;Next, create the custom install command using your inputs. Example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash wireguard.sh &amp;lt;&amp;lt;ANSWERS&#xA;n&#xA;51820&#xA;client&#xA;2&#xA;y&#xA;ANSWERS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The install options may change in future versions of the script.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;* A cloud server, virtual private server (VPS) or dedicated server.&lt;/p&gt; &#xA;&lt;h2&gt;Next steps&lt;/h2&gt; &#xA;&lt;p&gt;After setup, you can run the script again to manage users or uninstall WireGuard.&lt;/p&gt; &#xA;&lt;p&gt;Get your computer or device to use the VPN. Please refer to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hwdsl2/wireguard-install/master/docs/clients.md&#34;&gt;Configure WireGuard VPN Clients&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read &lt;a href=&#34;https://ko-fi.com/post/Support-this-project-and-get-access-to-supporter-o-O5O7FVF8J&#34;&gt;&lt;span&gt;📖&lt;/span&gt; VPN book&lt;/a&gt; to access &lt;a href=&#34;https://ko-fi.com/post/Support-this-project-and-get-access-to-supporter-o-O5O7FVF8J&#34;&gt;extra content&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enjoy your very own VPN! &lt;span&gt;✨&lt;/span&gt;&lt;span&gt;🎉&lt;/span&gt;&lt;span&gt;🚀&lt;/span&gt;&lt;span&gt;✨&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This script is based on the great work of &lt;a href=&#34;https://github.com/Nyr/wireguard-install&#34;&gt;Nyr and contributors&lt;/a&gt;, with enhancements and changes for compatibility with the &lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn&#34;&gt;Setup IPsec VPN&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; List of enhancements over Nyr/wireguard-install. &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Improved compatibility with Setup IPsec VPN&lt;/li&gt; &#xA;  &lt;li&gt;Improved script reliability, user input and output&lt;/li&gt; &#xA;  &lt;li&gt;Supports auto install using default options&lt;/li&gt; &#xA;  &lt;li&gt;Supports using a DNS name as server address&lt;/li&gt; &#xA;  &lt;li&gt;Added support for openSUSE Linux&lt;/li&gt; &#xA;  &lt;li&gt;Supports listing existing VPN clients&lt;/li&gt; &#xA;  &lt;li&gt;Supports custom DNS server(s) for VPN clients&lt;/li&gt; &#xA;  &lt;li&gt;Optimizes &lt;code&gt;sysctl&lt;/code&gt; settings for improved VPN performance&lt;/li&gt; &#xA;  &lt;li&gt;Improved creation of client config files when using &lt;code&gt;sudo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;...and more!&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>