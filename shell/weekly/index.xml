<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-24T01:43:14Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xubiaolin/docker-zerotier-planet</title>
    <updated>2024-11-24T01:43:14Z</updated>
    <id>tag:github.com,2024-11-24:/xubiaolin/docker-zerotier-planet</id>
    <link href="https://github.com/xubiaolin/docker-zerotier-planet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一分钟私有部署zerotier-planet服务&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;交流群&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Telegram&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TG交流群：&lt;a href=&#34;https://t.me/+JduuWfhSEPdlNDk1&#34;&gt;https://t.me/+JduuWfhSEPdlNDk1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;QQ Group&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1群（已满）：692635772&lt;/li&gt; &#xA; &lt;li&gt;2群（已满）：785620313&lt;/li&gt; &#xA; &lt;li&gt;3群：316239544&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;功能特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ 支持 Linux/AMD64、Linux/ARM64 架构&lt;/li&gt; &#xA; &lt;li&gt;🐳 Docker 容器化部署&lt;/li&gt; &#xA; &lt;li&gt;📥 支持 URL 下载 planet、moon 配置&lt;/li&gt; &#xA; &lt;li&gt;🌐 可作为 Moon 或 Planet 服务器搭建&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#0-%E5%B9%BF%E5%91%8A&#34;&gt;0: 广告&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#1zerotier-%E4%BB%8B%E7%BB%8D&#34;&gt;1：ZeroTier 介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#2%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%87%AA%E5%BB%BAplanet-%E6%9C%8D%E5%8A%A1%E5%99%A8&#34;&gt;2：为什么要自建PLANET 服务器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#3%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85&#34;&gt;3：开始安装&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#31%E5%87%86%E5%A4%87%E6%9D%A1%E4%BB%B6&#34;&gt;3.1：准备条件&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#311-%E5%AE%89%E8%A3%85git&#34;&gt;3.1.1 安装git&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#312-%E5%AE%89%E8%A3%85docker&#34;&gt;3.1.2 安装docker&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#313-%E5%90%AF%E5%8A%A8docker&#34;&gt;3.1.3 启动docker&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#314-%E9%85%8D%E7%BD%AEdocker%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F%E5%8F%AF%E9%80%89%E4%B8%8D%E9%85%8D%E4%B9%9F%E5%8F%AF%E4%BB%A5&#34;&gt;3.1.4 配置docker加速镜像（可选，不配也可以）&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#32%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE%E6%BA%90%E7%A0%81&#34;&gt;3.2：下载项目源码&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#33%E6%89%A7%E8%A1%8C%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC&#34;&gt;3.3：执行安装脚本&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#34-%E4%B8%8B%E8%BD%BD-planet-%E6%96%87%E4%BB%B6&#34;&gt;3.4 下载 &lt;code&gt;planet&lt;/code&gt; 文件&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#35-%E6%96%B0%E5%BB%BA%E7%BD%91%E7%BB%9C&#34;&gt;3.5 新建网络&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#351-%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C&#34;&gt;3.5.1 创建网络&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#352-%E5%88%86%E9%85%8D%E7%BD%91%E7%BB%9Cip&#34;&gt;3.5.2 分配网络IP:&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#4%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE&#34;&gt;4.客户端配置&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#41-windows-%E9%85%8D%E7%BD%AE&#34;&gt;4.1 Windows 配置&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#42-%E5%8A%A0%E5%85%A5%E7%BD%91%E7%BB%9C&#34;&gt;4.2 加入网络&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#42-linux-%E5%AE%A2%E6%88%B7%E7%AB%AF&#34;&gt;4.2 Linux 客户端&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#43-%E5%AE%89%E5%8D%93%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE&#34;&gt;4.3 安卓客户端配置&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#44-macos-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE&#34;&gt;4.4 MacOS 客户端配置&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#45-openwrt-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE&#34;&gt;4.5 OpenWRT 客户端配置&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5&#34;&gt;参考链接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#5-%E7%AE%A1%E7%90%86%E9%9D%A2%E6%9D%BFssl%E9%85%8D%E7%BD%AE&#34;&gt;5. 管理面板SSL配置&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#6-%E5%8D%B8%E8%BD%BD&#34;&gt;6. 卸载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#7-qa&#34;&gt;7: Q&amp;amp;A：&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91ping%E4%B8%8D%E9%80%9A%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8&#34;&gt;1. 为什么我ping不通目标机器？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#2-ios%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%80%8E%E4%B9%88%E7%94%A8&#34;&gt;2. IOS客户端怎么用？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#3-%E4%B8%BA%E4%BB%80%E4%B9%88%E7%9C%8B%E4%B8%8D%E5%88%B0%E5%AE%98%E6%96%B9%E7%9A%84planet&#34;&gt;3. 为什么看不到官方的Planet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#4-%E6%88%91%E6%9B%B4%E6%8D%A2%E4%BA%86ip%E9%9C%80%E8%A6%81%E6%80%8E%E4%B9%88%E5%A4%84%E7%90%86&#34;&gt;4. 我更换了IP需要怎么处理？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#5-pve-lxc-%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89%E5%88%9B%E5%BB%BA%E7%BD%91%E5%8D%A1&#34;&gt;5. PVE lxc 容器没有创建网卡&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#6-%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E6%80%8E%E4%B9%88%E5%8A%9E&#34;&gt;6. 管理后台忘记密码怎么办：&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#7-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%9E%E4%B8%8D%E4%B8%8Aplanet&#34;&gt;7. 为什么连不上planet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#8-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%98%AF%E7%9B%B4%E8%BF%9E%E8%BF%98%E6%98%AF%E4%B8%AD%E8%BD%AC&#34;&gt;8. 如何判断是直连还是中转&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#9-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E7%9A%84zerotier%E4%BC%A0%E8%BE%93%E4%B8%8D%E7%A8%B3%E5%AE%9A&#34;&gt;9. 为什么我的zerotier传输不稳定&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#10%E6%94%AF%E6%8C%81%E5%9F%9F%E5%90%8D%E5%90%97&#34;&gt;10.支持域名吗？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#11-arm%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%AF%E4%BB%A5%E6%90%AD%E5%BB%BA%E5%90%97&#34;&gt;11. ARM服务器可以搭建吗&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#12-%E6%94%AF%E6%8C%81docker-compose%E5%90%AF%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%90%97&#34;&gt;12. 支持docker-compose启动部署吗&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#%E5%BC%80%E5%8F%91%E8%AE%A1%E5%88%92&#34;&gt;开发计划&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#%E9%A3%8E%E9%99%A9%E5%A3%B0%E6%98%8E&#34;&gt;风险声明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#%E7%B1%BB%E4%BC%BC%E9%A1%B9%E7%9B%AE&#34;&gt;类似项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#%E6%8D%90%E5%8A%A9%E5%92%8C%E6%94%AF%E6%8C%81&#34;&gt;捐助和支持&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/#%E9%B8%A3%E8%B0%A2&#34;&gt;鸣谢&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;0: 广告&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;寻找便捷的解决方案？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;我们提供专业的托管服务：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;免费试用3天&lt;/li&gt; &#xA; &lt;li&gt;年费仅需99￥&lt;/li&gt; &#xA; &lt;li&gt;高速带宽：300Mbit&lt;/li&gt; &#xA; &lt;li&gt;流量政策： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;每月100G转发流量&lt;/li&gt; &#xA;   &lt;li&gt;P2P连接后不计流量&lt;/li&gt; &#xA;   &lt;li&gt;超出后每10元100G&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;优质线路：宁波电信机房&lt;/li&gt; &#xA; &lt;li&gt;联系方式： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Telegram：&lt;a href=&#34;https://t.me/uxkram&#34;&gt;https://t.me/uxkram&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;或加入QQ群咨询群主&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;测速图如下：&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/nb-speed-test.png&#34; width=&#34;800&#34; height=&#34;&#34; alt=&#34;图片名称&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;微信公众号：欢迎关注公众号获取最新动态和技术分享&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/wx_qrcode_pub.jpg&#34; width=&#34;300&#34; height=&#34;&#34; alt=&#34;图片名称&#34; align=&#34;center&#34;&gt; &#xA;&lt;h1&gt;1：ZeroTier 介绍&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ZeroTier&lt;/code&gt; 是一款强大的 P2P VPN 工具，它能让你在互联网上搭建属于自己的虚拟局域网。通过它，你可以轻松实现远程访问家中设备的需求 - 比如在公司用手机直接访问家里的 NAS。最重要的是，设备之间是点对点直连的，无需经过中转服务器，既保证了速度，又提升了安全性。&lt;/p&gt; &#xA;&lt;p&gt;它的工作原理是这样的：通过 &lt;code&gt;ZeroTier One&lt;/code&gt; 客户端，在不同设备（如笔记本、手机、服务器等）之间建立 P2P 连接，即使这些设备都在 NAT 后面也没问题。它使用了 STUN 等技术，可以穿透大多数类型的 NAT，实现设备间的直接通信。如果实在无法直连，才会通过中转服务器进行通信。&lt;/p&gt; &#xA;&lt;p&gt;简单来说，&lt;code&gt;ZeroTier&lt;/code&gt; 就像是一个跨越互联网的&#34;虚拟交换机&#34;，让分布在世界各地的设备，都能像在同一个局域网内一样方便地相互访问。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/zerotier-network.png&#34; alt=&#34;zerotier&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ZeroTier 网络中的关键概念&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PLANET&lt;/code&gt;（行星服务器）：ZeroTier 网络的核心根服务器，负责网络发现和初始连接。相当于整个网络的&#34;中枢&#34;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;MOON&lt;/code&gt;（卫星服务器）：用户可以自建的私有根服务器。它可以作为区域性的代理节点,帮助就近的设备更快地建立连接,提升网络性能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;LEAF&lt;/code&gt;（叶子节点）：所有接入 ZeroTier 网络的终端设备,如电脑、手机、服务器等。这些设备通过 PLANET 和 MOON 的协调来相互发现和通信。&lt;/p&gt; &#xA;&lt;p&gt;本教程将指导您搭建一个私有的 PLANET 服务器,让您完全掌控自己的 ZeroTier 网络。&lt;/p&gt; &#xA;&lt;h1&gt;2：为什么要自建PLANET 服务器&lt;/h1&gt; &#xA;&lt;p&gt;自建 PLANET 服务器有以下几个重要原因：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;提升网络稳定性：官方服务器位于海外，国内用户访问延迟高且不稳定。自建服务器可以大幅提升连接质量。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;加快连接速度：本地化的 PLANET 服务器可以更快地帮助设备建立 P2P 连接。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;增强网络控制：自建服务器让您完全掌控网络配置，可以根据需求进行优化调整。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提高安全性：私有化部署意味着网络流量不经过第三方服务器，更加安全可靠。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;降低依赖：避免因官方服务器故障或网络波动影响您的业务正常运行。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;3：开始安装&lt;/h1&gt; &#xA;&lt;h2&gt;3.1：环境准备&lt;/h2&gt; &#xA;&lt;p&gt;在开始安装之前，请确保您的服务器满足以下条件:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;服务器要求:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;拥有公网IP地址&lt;/li&gt; &#xA;   &lt;li&gt;需开放以下端口: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;3443/tcp (管理面板，根据实际情况调整)&lt;/li&gt; &#xA;     &lt;li&gt;9994/tcp (ZeroTier通信，根据实际情况调整)&lt;/li&gt; &#xA;     &lt;li&gt;9994/udp (ZeroTier通信，根据实际情况调整)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;软件依赖:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Docker (容器运行环境)&lt;/li&gt; &#xA;   &lt;li&gt;Git (获取项目代码)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;系统要求:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;推荐使用较新的Linux发行版: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Debian 12&lt;/li&gt; &#xA;     &lt;li&gt;Ubuntu 20.04+&lt;/li&gt; &#xA;     &lt;li&gt;Rocky Linux&lt;/li&gt; &#xA;     &lt;li&gt;其他同类系统&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.1.1 安装git&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#debian/ubuntu等&#xA;apt update &amp;amp;&amp;amp; apt install git -y &#xA;&#xA;#centos等&#xA;yum update &amp;amp;&amp;amp; yum install git -y &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.1.2 安装docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://get.docker.com |bash &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果网络问题，导致无法安装，可以使用国内镜像安装：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -fsSL get.docker.com -o get-docker.sh&#xA;sudo sh get-docker.sh --mirror Aliyun&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.1.3 启动docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;service docker start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.1.4 配置docker加速镜像（可选，不配也可以）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt;EOF&#xA;{&#xA;    &#34;registry-mirrors&#34;: [&#xA;        &#34;https://docker.mirrors.aster.edu.pl&#34;,&#xA;        &#34;https://docker.mirrors.imoyuapp.win&#34;&#xA;    ]&#xA;}&#xA;EOF&#xA;&#xA;sudo systemctl daemon-reload&#xA;sudo systemctl restart docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3.2：下载项目源码&lt;/h2&gt; &#xA;&lt;p&gt;官方地址&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/xubiaolin/docker-zerotier-planet.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;加速地址&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://ghproxy.imoyuapp.win/https://github.com/xubiaolin/docker-zerotier-planet.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3.3：执行安装脚本&lt;/h2&gt; &#xA;&lt;p&gt;进入项目目录&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd docker-zerotier-planet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;运行 &lt;code&gt;deploy.sh&lt;/code&gt; 脚本&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./deploy.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;根据提示来选择即可，操作完成后会自动部署&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;欢迎使用zerotier-planet脚本，请选择需要执行的操作：&#xA;1. 安装&#xA;2. 卸载&#xA;3. 更新&#xA;4. 查看信息&#xA;5. 退出&#xA;请输入数字：&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;整个脚本预计需要 1-3 分钟,具体需要看网络与机型&lt;/p&gt; &#xA;&lt;p&gt;当您看到类似如下字样时，表示安装成功&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/install_finish.png&#34; alt=&#34;install-finish&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3.4 下载 &lt;code&gt;planet&lt;/code&gt; 文件&lt;/h2&gt; &#xA;&lt;p&gt;脚本运行完成后，会在 &lt;code&gt;./data/zerotier/dist&lt;/code&gt; 目录下生成 &lt;code&gt;planet&lt;/code&gt; 和 &lt;code&gt;moon&lt;/code&gt; 配置文件。&lt;/p&gt; &#xA;&lt;p&gt;您可以通过以下两种方式获取这些文件:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;通过安装完成后提供的URL直接下载&lt;/li&gt; &#xA; &lt;li&gt;使用scp或其他文件传输工具从服务器下载&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;请妥善保存这些文件,后续配置客户端时会用到。&lt;/p&gt; &#xA;&lt;h2&gt;3.5 新建网络&lt;/h2&gt; &#xA;&lt;p&gt;访问 &lt;code&gt;http://ip:3443&lt;/code&gt; 进入controller页面&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/ztncui.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;使用默认账号为:&lt;code&gt;admin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;默认密码为:&lt;code&gt;password&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3.5.1 创建网络&lt;/h3&gt; &#xA;&lt;p&gt;登录后点击&#34;Networks&#34;菜单，然后点击&#34;Add Network&#34;按钮创建新网络。&lt;/p&gt; &#xA;&lt;p&gt;在创建网络页面中，输入一个便于识别的网络名称，其他选项可保持默认。点击&#34;Create Network&#34;按钮完成创建。&lt;/p&gt; &#xA;&lt;p&gt;创建成功后系统会自动生成一个网络ID，这个ID在后续客户端配置时会用到，请记录下来。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/ztncui_create_net.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;得到网络 &lt;code&gt;id&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/ztncui_net_id.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3.5.2 分配网络IP:&lt;/h3&gt; &#xA;&lt;p&gt;选中easy setup &lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/easy_setup.png&#34; alt=&#34;assign_id&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;生成ip范围 &lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/network_addr.png&#34; alt=&#34;ip_addr&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;4.客户端配置&lt;/h1&gt; &#xA;&lt;p&gt;ZeroTier 支持多种主流操作系统的客户端，包括:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4.1 Windows 配置&lt;/h2&gt; &#xA;&lt;p&gt;首先去zerotier官网下载一个zerotier客户端&lt;/p&gt; &#xA;&lt;p&gt;将 &lt;code&gt;planet&lt;/code&gt; 文件覆盖粘贴到&lt;code&gt;C:\ProgramData\ZeroTier\One&lt;/code&gt;中(这个目录是个隐藏目录，需要运允许查看隐藏目录才行)&lt;/p&gt; &#xA;&lt;p&gt;Win+S 搜索 &lt;code&gt;服务&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/service.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;找到ZeroTier One，并且重启服务&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/restart_service.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4.2 加入网络&lt;/h3&gt; &#xA;&lt;p&gt;使用管理员身份打开PowerShell&lt;/p&gt; &#xA;&lt;p&gt;执行如下命令，看到join ok字样就成功了&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Windows\system32&amp;gt; zerotier-cli.bat join 网络id(就是在网页里面创建的那个网络)&#xA;200 join OK&#xA;PS C:\Windows\system32&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;登录管理后台可以看到有个个新的客户端，勾选&lt;code&gt;Authorized&lt;/code&gt;就行&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/join_net.png&#34; alt=&#34;ui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;IP assignment 里面会出现zerotier的内网ip&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/allow_devices.png&#34; alt=&#34;ip&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;执行如下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PS C:\Windows\system32&amp;gt; zerotier-cli.bat peers&#xA;200 peers&#xA;&amp;lt;ztaddr&amp;gt;   &amp;lt;ver&amp;gt;  &amp;lt;role&amp;gt; &amp;lt;lat&amp;gt; &amp;lt;link&amp;gt; &amp;lt;lastTX&amp;gt; &amp;lt;lastRX&amp;gt; &amp;lt;path&amp;gt;&#xA;fcbaeb9b6c 1.8.7  PLANET    52 DIRECT 16       8994     1.1.1.1/9993&#xA;fe92971aad 1.8.7  LEAF      14 DIRECT -1       4150     2.2.2.2/9993&#xA;PS C:\Windows\system32&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可以看到有一个 PLANTET 和 LEAF 角色，连接方式均为 DIRECT(直连)&lt;/p&gt; &#xA;&lt;p&gt;到这里就加入网络成功了&lt;/p&gt; &#xA;&lt;h2&gt;4.2 Linux 客户端&lt;/h2&gt; &#xA;&lt;p&gt;步骤如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装linux客户端软件&lt;/li&gt; &#xA; &lt;li&gt;进入目录 &lt;code&gt;/var/lib/zerotier-one&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;替换目录下的 &lt;code&gt;planet&lt;/code&gt; 文件&lt;/li&gt; &#xA; &lt;li&gt;重启 &lt;code&gt;zerotier-one&lt;/code&gt; 服务(&lt;code&gt;service zerotier-one restart&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;加入网络 &lt;code&gt;zerotier-cli join&lt;/code&gt; 网络 &lt;code&gt;id&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;管理后台同意加入请求&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zerotier-cli peers&lt;/code&gt; 可以看到&lt;code&gt; planet&lt;/code&gt; 角色&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;4.3 安卓客户端配置&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kaaass/ZerotierFix&#34;&gt;Zerotier 非官方安卓客户端&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;4.4 MacOS 客户端配置&lt;/h2&gt; &#xA;&lt;p&gt;步骤如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;进入 &lt;code&gt;/Library/Application\ Support/ZeroTier/One/&lt;/code&gt; 目录，并替换目录下的 &lt;code&gt;planet&lt;/code&gt; 文件&lt;/li&gt; &#xA; &lt;li&gt;重启 ZeroTier-One：&lt;code&gt;cat /Library/Application\ Support/ZeroTier/One/zerotier-one.pid | sudo xargs kill&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;加入网络 &lt;code&gt;zerotier-cli join&lt;/code&gt; 网络 &lt;code&gt;id&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;管理后台同意加入请求&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zerotier-cli peers&lt;/code&gt; 可以看到&lt;code&gt; planet&lt;/code&gt; 角色&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;4.5 OpenWRT 客户端配置&lt;/h2&gt; &#xA;&lt;p&gt;步骤如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装zerotier客户端&lt;/li&gt; &#xA; &lt;li&gt;进入目录 &lt;code&gt;/etc/config/zero/planet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;替换目录下的 &lt;code&gt;planet&lt;/code&gt; 文件&lt;/li&gt; &#xA; &lt;li&gt;在openwrt网页后台重启zerotier服务&lt;/li&gt; &#xA; &lt;li&gt;在openwrt网页后台加入网络&lt;/li&gt; &#xA; &lt;li&gt;管理后台同意加入请求&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zerotier-cli peers&lt;/code&gt; 可以看到&lt;code&gt; planet&lt;/code&gt; 角色&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;4.6 iOS 客户端配置&lt;/h2&gt; &#xA;&lt;p&gt;方案一： 越狱后安装ZeroTie，然后替换&lt;code&gt;planet&lt;/code&gt;文件&lt;/p&gt; &#xA;&lt;p&gt;方案二： 使用Wireguard接入到ZeroTier网络&lt;/p&gt; &#xA;&lt;h1&gt;5. 管理面板SSL配置&lt;/h1&gt; &#xA;&lt;p&gt;管理面板的SSL支持需要自行配置，参考Nginx配置如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;upstream zerotier {&#xA;  server 127.0.0.1:3443;&#xA;}&#xA;&#xA;server {&#xA;&#xA;  listen 443 ssl;&#xA;&#xA;  server_name {CUSTOME_DOMAIN}; #替换自己的域名&#xA;&#xA;  # ssl证书地址&#xA;  ssl_certificate    pem和或者crt文件的路径;&#xA;  ssl_certificate_key key文件的路径;&#xA;&#xA;  # ssl验证相关配置&#xA;  ssl_session_timeout  5m;    #缓存有效期&#xA;  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法&#xA;  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议&#xA;  ssl_prefer_server_ciphers on;   #使用服务器端的首选算法&#xA;&#xA;&#xA;  location / {&#xA;    proxy_pass http://zerotier;&#xA;    proxy_set_header HOST $host;&#xA;    proxy_set_header X-Forwarded-Proto $scheme;&#xA;    proxy_set_header X-Real-IP $remote_addr;&#xA;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;    }&#xA;}&#xA;&#xA;server {&#xA;    listen       80;&#xA;    server_name  {CUSTOME_DOMAIN}; #替换自己的域名&#xA;    return 301 https://$server_name$request_uri;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;6. 卸载&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker rm -f zerotier-planet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;7: Q&amp;amp;A：&lt;/h1&gt; &#xA;&lt;h2&gt;1. 为什么我ping不通目标机器？&lt;/h2&gt; &#xA;&lt;p&gt;请检查防火墙设置，&lt;code&gt;Windows&lt;/code&gt; 系统需要允许 &lt;code&gt;ICMP&lt;/code&gt; 入站，&lt;code&gt;Linux&lt;/code&gt; 同理&lt;/p&gt; &#xA;&lt;h2&gt;2. IOS客户端怎么用？&lt;/h2&gt; &#xA;&lt;p&gt;iOS 客户端插件在这里，设备需要越狱： &lt;a href=&#34;https://github.com/lemon4ex/ZeroTieriOSFix&#34;&gt;https://github.com/lemon4ex/ZeroTieriOSFix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3. 为什么看不到官方的Planet&lt;/h2&gt; &#xA;&lt;p&gt;该项目剔除了官方服务器，只保留了自定义的Planet节点&lt;/p&gt; &#xA;&lt;h2&gt;4. 我更换了IP需要怎么处理？&lt;/h2&gt; &#xA;&lt;p&gt;如果IP更换了，则需要重新部署，相当于全新部署&lt;/p&gt; &#xA;&lt;h2&gt;5. PVE lxc 容器没有创建网卡&lt;/h2&gt; &#xA;&lt;p&gt;需要修改lxc容器的配置，同时lxc容器需要取消勾选&lt;code&gt;无特权&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;配置文件位置在&lt;code&gt;/etc/pve/lxc/{ID}.conf&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;在Proxmox7.0之前的版本添加以下内容：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lxc.cgroup.devices.allow: c 10:200 rwm&#xA;lxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在Proxmox7.0之后的版本添加以下内容：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;lxc.cgroup2.devices.allow: c 10:200 rwm&#xA;lxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;6. 管理后台忘记密码怎么办：&lt;/h2&gt; &#xA;&lt;p&gt;执行&lt;code&gt;./deploy.sh&lt;/code&gt;，选择重置密码即可&lt;/p&gt; &#xA;&lt;h2&gt;7. 为什么连不上planet&lt;/h2&gt; &#xA;&lt;p&gt;请检查防火墙，如果是阿里云、腾讯云用户，需要在对应平台后台防火墙放行端口。linux机器上也要放行，如果安装了ufw等防火墙工具。&lt;/p&gt; &#xA;&lt;h2&gt;8. 如何判断是直连还是中转&lt;/h2&gt; &#xA;&lt;p&gt;管理员权限执行终端，运行&lt;code&gt;zerotier-cli peers&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;ztaddr&amp;gt;   &amp;lt;ver&amp;gt;  &amp;lt;role&amp;gt; &amp;lt;lat&amp;gt; &amp;lt;link&amp;gt;   &amp;lt;lastTX&amp;gt; &amp;lt;lastRX&amp;gt; &amp;lt;path&amp;gt;&#xA;69c0d507d0 -      LEAF      -1 RELAY&#xA;93caa675b0 1.12.2 PLANET  -894 DIRECT   4142     4068     110.42.99.46/9994&#xA;ab403e2074 1.10.2 LEAF      -1 RELAY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果你的ztaddr是REPLAY, 就说明是中转&lt;/p&gt; &#xA;&lt;h2&gt;9. 为什么我的zerotier传输不稳定&lt;/h2&gt; &#xA;&lt;p&gt;由于zerotier使用的是udp协议，部分地区可能对udp进行了qos, 可以考虑使用openvpn。&lt;/p&gt; &#xA;&lt;h2&gt;10.支持域名吗？&lt;/h2&gt; &#xA;&lt;p&gt;暂不支持&lt;/p&gt; &#xA;&lt;h2&gt;11. ARM服务器可以搭建吗&lt;/h2&gt; &#xA;&lt;p&gt;可以&lt;/p&gt; &#xA;&lt;h2&gt;12. 支持docker-compose启动部署吗&lt;/h2&gt; &#xA;&lt;p&gt;参考docker-compose文件如下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  myztplanet:&#xA;    image: xubiaolin/zerotier-planet:latest&#xA;    container_name: ztplanet&#xA;    ports:&#xA;      - 9994:9994&#xA;      - 9994:9994/udp&#xA;      - 3443:3443&#xA;      - 3000:3000&#xA;    environment:&#xA;      - IP_ADDR4=[IPV4IP ADDRESS]&#xA;      - IP_ADDR6=&#xA;      - ZT_PORT=9994&#xA;      - API_PORT=3443&#xA;      - FILE_SERVER_PORT=3000&#xA;    volumes:&#xA;      - ./data/zerotier/dist:/app/dist&#xA;      - ./data/zerotier/ztncui:/app/ztncui&#xA;      - ./data/zerotier/one:/var/lib/zerotier-one&#xA;      - ./data/zerotier/config:/app/config&#xA;    restart: unless-stopped&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;开发计划&lt;/h1&gt; &#xA;&lt;p&gt;🥰您的捐助可以让开发计划的速度更快🥰&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 多planet支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3443端口自定义支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; planet和controller分离部署&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;风险声明&lt;/h1&gt; &#xA;&lt;p&gt;本项目仅供学习和研究使用，不鼓励用于商业用途。我们不对任何因使用本项目而导致的任何损失负责。&lt;/p&gt; &#xA;&lt;h1&gt;类似项目&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xubiaolin/wireguard-onekey&#34;&gt;wireguard一键脚本&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;捐助和支持&lt;/h1&gt; &#xA;&lt;p&gt;如果觉得本项目对您有帮助，欢迎通过扫描下方赞赏码捐助项目 :)&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xubiaolin/docker-zerotier-planet/master/asserts/donate.png&#34; alt=&#34;donate&#34; width=&#34;400&#34; height=&#34;400&#34;&gt; &#xA;&lt;h1&gt;鸣谢&lt;/h1&gt; &#xA;&lt;p&gt;感谢以下网友投喂，你们的支持和鼓励是我不懈更新的动力&lt;/p&gt; &#xA;&lt;p&gt;按时间顺序排序：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;随性&lt;/li&gt; &#xA; &lt;li&gt;我&lt;/li&gt; &#xA; &lt;li&gt;你好&lt;/li&gt; &#xA; &lt;li&gt;Calvin&lt;/li&gt; &#xA; &lt;li&gt;小猪猪的饲养员&lt;/li&gt; &#xA; &lt;li&gt;情若犹在&lt;/li&gt; &#xA; &lt;li&gt;天天星期天&lt;/li&gt; &#xA; &lt;li&gt;啊乐&lt;/li&gt; &#xA; &lt;li&gt;夏末秋至&lt;/li&gt; &#xA; &lt;li&gt;**忠&lt;/li&gt; &#xA; &lt;li&gt;岸芷汀兰&lt;/li&gt; &#xA; &lt;li&gt;Kimi Chen&lt;/li&gt; &#xA; &lt;li&gt;匿名&lt;/li&gt; &#xA; &lt;li&gt;阳光报告旷课&lt;/li&gt; &#xA; &lt;li&gt;濂溪先生&lt;/li&gt; &#xA; &lt;li&gt;Water&lt;/li&gt; &#xA; &lt;li&gt;匿名&lt;/li&gt; &#xA; &lt;li&gt;匿名&lt;/li&gt; &#xA; &lt;li&gt;陆&lt;/li&gt; &#xA; &lt;li&gt;精钢葫芦娃&lt;/li&gt; &#xA; &lt;li&gt;唯&lt;/li&gt; &#xA; &lt;li&gt;王小新&lt;/li&gt; &#xA; &lt;li&gt;匿名&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;参考链接&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.glimmer.ltd/2021/3299983056/&#34;&gt;ZeroTier-虚拟局域网详解&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://v2ex.com/t/799623&#34;&gt;五分钟自建 ZeroTier 的 Planet/Controller&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taigaio/taiga-docker</title>
    <updated>2024-11-24T01:43:14Z</updated>
    <id>tag:github.com,2024-11-24:/taigaio/taiga-docker</id>
    <link href="https://github.com/taigaio/taiga-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Taiga Docker&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;ℹ&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;If you&#39;re already using taiga-docker, follow this &lt;a href=&#34;https://docs.taiga.io/upgrades-docker-migrate.html&#34;&gt;migration guide&lt;/a&gt; to use the new &lt;code&gt;.env&lt;/code&gt; based deployment.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can access the &lt;a href=&#34;https://docs.taiga.io/setup-production.old.html#setup-prod-with-docker-old&#34;&gt;older docker installation guide&lt;/a&gt; for documentation purposes, intended just for earlier versions of Taiga (prior to ver. 6.6.0)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This section intends to explain how to get Taiga up and running in a simple two steps, using &lt;strong&gt;docker&lt;/strong&gt; and &lt;strong&gt;docker compose&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have docker installed, please follow installation instructions from &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;docker.com&lt;/a&gt; (&lt;strong&gt;version 19.03.0+&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Additionally, it&#39;s necessary to have familiarity with Docker, docker compose and Docker repositories.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; branch &lt;code&gt;stable&lt;/code&gt; should be used to deploy Taiga in production and &lt;code&gt;main&lt;/code&gt; branch for development purposes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Start the application&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./launch-taiga.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After some instants, when the application is started you can proceed to create the superuser with the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./taiga-manage.sh createsuperuser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;taiga-manage.sh&lt;/code&gt; script lets launch manage.py commands on the back instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./taiga-manage.sh [COMMAND]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re testing it in your own machine, you can access the application in &lt;strong&gt;&lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;&lt;/strong&gt;. If you&#39;re deploying in a server, you&#39;ll need to configure hosts and nginx as described later.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/taigaio/taiga-docker/main/imgs/taiga.jpg&#34; alt=&#34;Taiga screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Currently, we have authored three main documentation hubs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.taiga.io/api.html&#34;&gt;API&lt;/a&gt;&lt;/strong&gt;: Our API documentation and reference for developing from Taiga API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.taiga.io/&#34;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;: If you need to install Taiga on your own server, this is the place to find some guides.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://community.taiga.io/&#34;&gt;Taiga Community&lt;/a&gt;&lt;/strong&gt;: This page is intended to be the support reference page for the users.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;If you &lt;strong&gt;find a bug&lt;/strong&gt; in Taiga you can always report it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in &lt;a href=&#34;https://tree.taiga.io/project/taiga/issues&#34;&gt;Taiga issues&lt;/a&gt;. &lt;strong&gt;This is the preferred way&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;in &lt;a href=&#34;https://github.com/taigaio/taiga-docker/issues&#34;&gt;Github issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;send us a mail to &lt;a href=&#34;mailto:support@taiga.io&#34;&gt;support@taiga.io&lt;/a&gt; if is a bug related to &lt;a href=&#34;https://tree.taiga.io&#34;&gt;tree.taiga.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;send us a mail to &lt;a href=&#34;mailto:security@taiga.io&#34;&gt;security@taiga.io&lt;/a&gt; if is a &lt;strong&gt;security bug&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One of our fellow Taiga developers will search, find and hunt it as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Please, before reporting a bug, write down how can we reproduce it, your operating system, your browser and version, and if it&#39;s possible, a screenshot. Sometimes it takes less time to fix a bug if the developer knows how to find it.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;If you &lt;strong&gt;need help to setup Taiga&lt;/strong&gt;, want to &lt;strong&gt;talk about some cool enhancemnt&lt;/strong&gt; or you have &lt;strong&gt;some questions&lt;/strong&gt;, please go to &lt;a href=&#34;https://community.taiga.io/&#34;&gt;Taiga community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to be up to date about announcements of releases, important changes and so on, you can subscribe to our newsletter (you will find it by scrolling down at &lt;a href=&#34;https://www.taiga.io/&#34;&gt;https://taiga.io&lt;/a&gt;) and follow &lt;a href=&#34;https://twitter.com/taigaio&#34;&gt;@taigaio&lt;/a&gt; on Twitter.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to Taiga&lt;/h2&gt; &#xA;&lt;p&gt;There are many different ways to contribute to Taiga&#39;s platform, from patches, to documentation and UI enhancements, just find the one that best fits with your skills. Check out our detailed &lt;a href=&#34;https://community.taiga.io/t/how-can-i-contribute/159#code-patches-enhacements-3&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Help us keep the Taiga Community open and inclusive. Please read and follow our &lt;a href=&#34;https://github.com/taigaio/code-of-conduct/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Every code patch accepted in Taiga codebase is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/taigaio/taiga-docker/main/LICENSE&#34;&gt;MPL 2.0&lt;/a&gt;. You must be careful to not include any code that can not be licensed under this license.&lt;/p&gt; &#xA;&lt;p&gt;Please read carefully &lt;a href=&#34;https://raw.githubusercontent.com/taigaio/taiga-docker/main/LICENSE&#34;&gt;our license&lt;/a&gt; and ask us if you have any questions as well as the &lt;a href=&#34;https://github.com/taigaio/taiga-docker/raw/main/CONTRIBUTING.md&#34;&gt;Contribution policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve exposed the &lt;strong&gt;Basic configuration&lt;/strong&gt; settings in Taiga to an &lt;code&gt;.env&lt;/code&gt; file. We strongly recommend you to change it, or at least review its content, to avoid using the default values.&lt;/p&gt; &#xA;&lt;p&gt;Both &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;docker-compose-inits.yml&lt;/code&gt; will read from this file to populate their environment variables, so, initially you don&#39;t need to change them. Edit these files just in case you require to enable &lt;strong&gt;Additional customization&lt;/strong&gt;, or an &lt;strong&gt;Advanced configuration&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Refer to these sections for further information.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You will find basic &lt;strong&gt;configuration variables&lt;/strong&gt; in the &lt;code&gt;.env&lt;/code&gt; file. As stated before, we encourage you to edit these values, especially those affecting the security.&lt;/p&gt; &#xA;&lt;h3&gt;Database settings&lt;/h3&gt; &#xA;&lt;p&gt;These vars are used to create the database for Taiga and connect to it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;POSTGRES_USER=taiga  # user to connect to PostgreSQL&#xA;POSTGRES_PASSWORD=taiga  # database user&#39;s password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;URLs settings&lt;/h3&gt; &#xA;&lt;p&gt;These vars set where your Taiga instance should be served, and the security protocols to use in the communication layer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAIGA_SCHEME=http  # serve Taiga using &#34;http&#34; or &#34;https&#34; (secured) connection&#xA;TAIGA_DOMAIN=localhost:9000  # Taiga&#39;s base URL&#xA;SUBPATH=&#34;&#34;  # it&#39;ll be appended to the TAIGA_DOMAIN (use either &#34;&#34; or a &#34;/subpath&#34;)&#xA;WEBSOCKETS_SCHEME=ws  # events connection protocol (use either &#34;ws&#34; or &#34;wss&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default configuration assumes Taiga is being served in a &lt;strong&gt;subdomain&lt;/strong&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAIGA_SCHEME=https&#xA;TAIGA_DOMAIN=taiga.mycompany.com&#xA;SUBPATH=&#34;&#34;&#xA;WEBSOCKETS_SCHEME=wss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If Taiga is being served in a &lt;strong&gt;subpath&lt;/strong&gt;, instead of a subdomain, the configuration should be something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TAIGA_SCHEME=https&#xA;TAIGA_DOMAIN=mycompany.com&#xA;SUBPATH=&#34;/taiga&#34;&#xA;WEBSOCKETS_SCHEME=wss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Secret Key settings&lt;/h3&gt; &#xA;&lt;p&gt;This variable allows you to set the secret key in Taiga, used in the cryptographic signing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SECRET_KEY=&#34;taiga-secret-key&#34;  # Please, change it to an unpredictable value!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Email Settings&lt;/h3&gt; &#xA;&lt;p&gt;By default, emails will be printed in the standard output (&lt;code&gt;EMAIL_BACKEND=console&lt;/code&gt;). If you have your own SMTP service, change it to &lt;code&gt;EMAIL_BACKEND=smtp&lt;/code&gt; and configure the rest of these variables with the values supplied by your SMTP provider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;EMAIL_BACKEND=console  # use an SMTP server or display the emails in the console (either &#34;smtp&#34; or &#34;console&#34;)&#xA;EMAIL_HOST=smtp.host.example.com  # SMTP server address&#xA;EMAIL_PORT=587   # default SMTP port&#xA;EMAIL_HOST_USER=user  # user to connect the SMTP server&#xA;EMAIL_HOST_PASSWORD=password  # SMTP user&#39;s password&#xA;EMAIL_DEFAULT_FROM=changeme@example.com  # email address for the automated emails&#xA;&#xA;# EMAIL_USE_TLS/EMAIL_USE_SSL are mutually exclusive (only set one of those to True)&#xA;EMAIL_USE_TLS=True  # use TLS (secure) connection with the SMTP server&#xA;EMAIL_USE_SSL=False  # use implicit TLS (secure) connection with the SMTP server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Queue manager settings&lt;/h3&gt; &#xA;&lt;p&gt;These variables are used to leave messages in the rabbitmq services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RABBITMQ_USER=taiga  # user to connect to RabbitMQ&#xA;RABBITMQ_PASS=taiga  # RabbitMQ user&#39;s password&#xA;RABBITMQ_VHOST=taiga  # RabbitMQ container name&#xA;RABBITMQ_ERLANG_COOKIE=secret-erlang-cookie  # unique value shared by any connected instance of RabbitMQ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Attachments settings&lt;/h3&gt; &#xA;&lt;p&gt;You can configure how long the attachments will be accessible by changing the token expiration timer. After that amount of seconds the token will expire, but you can always get a new attachment url with an active token.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ATTACHMENTS_MAX_AGE=360  # token expiration date (in seconds)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Telemetry Settings&lt;/h3&gt; &#xA;&lt;p&gt;Telemetry anonymous data is collected in order to learn about the use of Taiga and improve the platform based on real scenarios. You may want to enable this to help us shape future Taiga.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ENABLE_TELEMETRY=True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can opt out by setting this variable to False. By default, it&#39;s True.&lt;/p&gt; &#xA;&lt;h2&gt;Additional customization&lt;/h2&gt; &#xA;&lt;p&gt;All these customization options are by default disabled and require you to edit &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should add the corresponding environment variables in the proper services (or in &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; group) with a valid value in order to enable them. Please, do not modify it unless you know what you’re doing.&lt;/p&gt; &#xA;&lt;h3&gt;Session cookies in Django Admin&lt;/h3&gt; &#xA;&lt;p&gt;Taiga doesn&#39;t use session cookies in its API as it stateless. However, the Django Admin (&lt;code&gt;/admin/&lt;/code&gt;) uses session cookie for authentication. By default, Taiga is configured to work behind HTTPS. If you&#39;re using HTTP (despite the strong recommendations against it), you&#39;ll need to configure the following environment variables so you can access the Admin:&lt;/p&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;SESSION_COOKIE_SECURE: &#34;False&#34;&#xA;CSRF_COOKIE_SECURE: &#34;False&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More info about those variables can be found &lt;a href=&#34;https://docs.djangoproject.com/en/3.1/ref/settings/#csrf-cookie-secure&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Public registration&lt;/h3&gt; &#xA;&lt;p&gt;Public registration is disabled by default. If you want to allow a public register, you have to enable public registration on both, frontend and backend.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;PUBLIC_REGISTER_ENABLED: &#34;True&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;PUBLIC_REGISTER_ENABLED: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;p&gt;Taiga (in its default configuration) disables both Gitlab or Github oauth buttons whenever the public registration option hasn&#39;t been activated. To be able to use Github/Gitlab login/registration, make sure you have public registration activated on your Taiga instance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;GitHub OAuth login&lt;/h3&gt; &#xA;&lt;p&gt;Used for login with Github. This feature is disabled by default.&lt;/p&gt; &#xA;&lt;p&gt;Follow the documentation (&lt;a href=&#34;https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/creating-an-oauth-app&#34;&gt;GitHub - Creating an OAuth App&lt;/a&gt;) in Github, when save application Github displays the ID and Secret.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; &lt;code&gt;GITHUB_API_CLIENT_ID / GITHUB_CLIENT_ID&lt;/code&gt; should have the same value.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_GITHUB_AUTH: &#34;True&#34;&#xA;GITHUB_API_CLIENT_ID: &#34;github-client-id&#34;&#xA;GITHUB_API_CLIENT_SECRET: &#34;github-client-secret&#34;&#xA;PUBLIC_REGISTER_ENABLED: &#34;True&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_GITHUB_AUTH: &#34;true&#34;&#xA;GITHUB_CLIENT_ID: &#34;github-client-id&#34;&#xA;PUBLIC_REGISTER_ENABLED: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gitlab OAuth login&lt;/h3&gt; &#xA;&lt;p&gt;Used for login with GitLab. This feature is disabled by default.&lt;/p&gt; &#xA;&lt;p&gt;Follow the documentation (&lt;a href=&#34;https://docs.gitlab.com/ee/integration/oauth_provider.html&#34;&gt;Configure GitLab as an OAuth 2.0 authentication identity provider&lt;/a&gt;) in Gitlab to get the &lt;em&gt;gitlab-client-id&lt;/em&gt; and the &lt;em&gt;gitlab-client-secret&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; &lt;code&gt;GITLAB_API_CLIENT_ID / GITLAB_CLIENT_ID&lt;/code&gt; and &lt;code&gt;GITLAB_URL&lt;/code&gt; should have the same value.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_GITLAB_AUTH: &#34;True&#34;&#xA;GITLAB_API_CLIENT_ID: &#34;gitlab-client-id&#34;&#xA;GITLAB_API_CLIENT_SECRET: &#34;gitlab-client-secret&#34;&#xA;GITLAB_URL: &#34;gitlab-url&#34;&#xA;PUBLIC_REGISTER_ENABLED: &#34;True&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_GITLAB_AUTH: &#34;true&#34;&#xA;GITLAB_CLIENT_ID: &#34;gitlab-client-id&#34;&#xA;GITLAB_URL: &#34;gitlab-url&#34;&#xA;PUBLIC_REGISTER_ENABLED: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Slack integration&lt;/h3&gt; &#xA;&lt;p&gt;Enable Slack integration in your Taiga instance. This feature is disabled by default.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_SLACK: &#34;True&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_SLACK: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GitHub importer&lt;/h3&gt; &#xA;&lt;p&gt;Activating this feature, you will be able to import projects from GitHub.&lt;/p&gt; &#xA;&lt;p&gt;Follow this documentation (&lt;a href=&#34;https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/creating-an-oauth-app&#34;&gt;GitHub - Creating an OAuth App&lt;/a&gt;) to obtain the &lt;em&gt;client id&lt;/em&gt; and the &lt;em&gt;client secret&lt;/em&gt; from GitHun.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_GITHUB_IMPORTER: &#34;True&#34;&#xA;GITHUB_IMPORTER_CLIENT_ID: &#34;client-id-from-github&#34;&#xA;GITHUB_IMPORTER_CLIENT_SECRET: &#34;client-secret-from-github&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_GITHUB_IMPORTER: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Jira Importer&lt;/h3&gt; &#xA;&lt;p&gt;Activating this feature, you will be able to import projects from Jira.&lt;/p&gt; &#xA;&lt;p&gt;Follow this documentation (&lt;a href=&#34;https://developer.atlassian.com/cloud/jira/platform/jira-rest-api-oauth-authentication/&#34;&gt;Jira - OAuth 1.0a for REST APIs&lt;/a&gt;) to obtain the &lt;em&gt;consumer key&lt;/em&gt; and the &lt;em&gt;public/private certificate key&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_JIRA_IMPORTER: &#34;True&#34;&#xA;JIRA_IMPORTER_CONSUMER_KEY: &#34;consumer-key-from-jira&#34;&#xA;JIRA_IMPORTER_CERT: &#34;cert-from-jira&#34;&#xA;JIRA_IMPORTER_PUB_CERT: &#34;pub-cert-from-jira&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_JIRA_IMPORTER: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Trello importer&lt;/h3&gt; &#xA;&lt;p&gt;Activating this feature, you will be able to import projects from Trello.&lt;/p&gt; &#xA;&lt;p&gt;For configure Trello, you have two options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;go to &lt;a href=&#34;https://trello.com/app-key&#34;&gt;https://trello.com/app-key&lt;/a&gt; (you must login first) and obtaing your development &lt;em&gt;API key&lt;/em&gt; and your &lt;em&gt;secret key&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;or with the new method, &lt;a href=&#34;https://developer.atlassian.com/cloud/trello/guides/rest-api/api-introduction/#managing-your-api-key&#34;&gt;create a new Power-Up&lt;/a&gt; and generate an &lt;em&gt;API key&lt;/em&gt; and a &lt;em&gt;secret key&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Be careful with the upper and lower case in these settiings. We will use &#39;True&#39; for the backend and &#39;true&#39; for the frontend (this is not a typo, otherwise it won&#39;t work).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;&amp;amp;default-back-environment&lt;/code&gt; environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_TRELLO_IMPORTER: &#34;True&#34;&#xA;TRELLO_IMPORTER_API_KEY: &#34;api-key-from-trello&#34;&#xA;TRELLO_IMPORTER_SECRET_KEY: &#34;secret-key-from-trello&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add to &lt;code&gt;taiga-front&lt;/code&gt; service environments&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;ENABLE_TRELLO_IMPORTER: &#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advanced configuration&lt;/h2&gt; &#xA;&lt;p&gt;The advanced configuration &lt;strong&gt;will ignore&lt;/strong&gt; the environment variables in &lt;code&gt;docker-compose.yml&lt;/code&gt; or &lt;code&gt;docker-compose-inits.yml&lt;/code&gt;. Skip this section if you&#39;re using env vars.&lt;/p&gt; &#xA;&lt;p&gt;It requires you to map the configuration files of &lt;code&gt;taiga-back&lt;/code&gt; and &lt;code&gt;taiga-front&lt;/code&gt; services to local files in order to unlock further configuration options.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Map a &lt;code&gt;config.py&lt;/code&gt; file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://github.com/taigaio/taiga-back&#34;&gt;taiga-back&lt;/a&gt; download the file &lt;code&gt;settings/config.py.prod.example&lt;/code&gt; and rename it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv settings/config.py.prod.example settings/config.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;config.py&lt;/code&gt; with your own configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Taiga secret key: &lt;strong&gt;it&#39;s important&lt;/strong&gt; to change it. It must have the same value as the secret key in &lt;code&gt;taiga-events&lt;/code&gt; and &lt;code&gt;taiga-protected&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Taiga urls: configure where Taiga would be served using &lt;code&gt;TAIGA_URL&lt;/code&gt;, &lt;code&gt;SITES&lt;/code&gt; and &lt;code&gt;FORCE_SCRIPT_NAME&lt;/code&gt; (see examples below)&lt;/li&gt; &#xA; &lt;li&gt;Connection to PostgreSQL; check &lt;code&gt;DATABASES&lt;/code&gt; section in the file&lt;/li&gt; &#xA; &lt;li&gt;Connection to RabbitMQ for &lt;code&gt;taiga-events&lt;/code&gt;; check &#34;EVENTS&#34; section in the file&lt;/li&gt; &#xA; &lt;li&gt;Connection to RabbitMQ for &lt;code&gt;taiga-async&lt;/code&gt;; check &#34;TAIGA ASYNC&#34; section in the file&lt;/li&gt; &#xA; &lt;li&gt;Credentials for email; check &#34;EMAIL&#34; section in the file&lt;/li&gt; &#xA; &lt;li&gt;Enable/disable anonymous telemetry; check &#34;TELEMETRY&#34; section in the file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example to configure Taiga in &lt;strong&gt;subdomain&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;TAIGA_SITES_SCHEME = &#34;https&#34;&#xA;TAIGA_SITES_DOMAIN = &#34;taiga.mycompany.com&#34;&#xA;FORCE_SCRIPT_NAME = &#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example to configure Taiga in &lt;strong&gt;subpath&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;TAIGA_SITES_SCHEME = &#34;https&#34;&#xA;TAIGA_SITES_DOMAIN = &#34;taiga.mycompany.com&#34;&#xA;FORCE_SCRIPT_NAME = &#34;/taiga&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check as well the rest of the configuration if you need to enable some advanced features.&lt;/p&gt; &#xA;&lt;p&gt;Map the file into &lt;code&gt;/taiga-back/settings/config.py&lt;/code&gt;. Have in mind that you have to map it both in &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;docker-compose-inits.yml&lt;/code&gt;. You can check the &lt;code&gt;x-volumes&lt;/code&gt; section in docker-compose.yml with an example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Map a &lt;code&gt;conf.json&lt;/code&gt; file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://github.com/taigaio/taiga-front&#34;&gt;taiga-front&lt;/a&gt; download the file &lt;code&gt;dist/conf.example.json&lt;/code&gt; and rename it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv dist/conf.example.json dist/conf.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit it with your own configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Taiga urls: configure where Taiga would be served using &lt;code&gt;api&lt;/code&gt;, &lt;code&gt;eventsUrl&lt;/code&gt; and &lt;code&gt;baseHref&lt;/code&gt; (see examples below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example of &lt;code&gt;conf.json&lt;/code&gt; to serve Taiga in a &lt;strong&gt;subdomain&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;api&#34;: &#34;https://taiga.mycompany.com/api/v1/&#34;,&#xA;    &#34;eventsUrl&#34;: &#34;wss://taiga.mycompany.com/events&#34;,&#xA;    &#34;baseHref&#34;: &#34;/&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example of &lt;code&gt;conf.json&lt;/code&gt; to serve Taiga in &lt;strong&gt;subpath&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;api&#34;: &#34;https://mycompany.com/taiga/api/v1/&#34;,&#xA;    &#34;eventsUrl&#34;: &#34;wss://mycompany.com/taiga/events&#34;,&#xA;    &#34;baseHref&#34;: &#34;/taiga/&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check as well the rest of the configuration if you need to enable some advanced features.&lt;/p&gt; &#xA;&lt;p&gt;Map the file into &lt;code&gt;/taiga-front/dist/config.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configure an admin user&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose up -d&#xA;&#xA;$ docker compose -f docker-compose.yml -f docker-compose-inits.yml run --rm taiga-manage createsuperuser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Up and running&lt;/h2&gt; &#xA;&lt;p&gt;Once everything has been installed, launch all the services and check the result:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configure the proxy&lt;/h2&gt; &#xA;&lt;p&gt;Your host configuration needs to make a proxy to &lt;code&gt;http://localhost:9000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If Taiga is being served in a &lt;strong&gt;subdomain&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  server {&#xA;      server_name taiga.mycompany.com;&#xA;&#xA;      location / {&#xA;        proxy_set_header Host $http_host;&#xA;        proxy_set_header X-Real-IP $remote_addr;&#xA;        proxy_set_header X-Scheme $scheme;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_redirect off;&#xA;        proxy_pass http://localhost:9000/;&#xA;      }&#xA;&#xA;      # Events&#xA;      location /events {&#xA;        proxy_pass http://localhost:9000/events;&#xA;        proxy_http_version 1.1;&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection &#34;upgrade&#34;;&#xA;        proxy_set_header Host $host;&#xA;        proxy_connect_timeout 7d;&#xA;        proxy_send_timeout 7d;&#xA;        proxy_read_timeout 7d;&#xA;      }&#xA;&#xA;      # TLS: Configure your TLS following the best practices inside your company&#xA;      # Logs and other configurations&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If Taiga is being served in a &lt;strong&gt;subpath&lt;/strong&gt; instead of a subdomain, the configuration should be something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;  server_name mycompany.com;&#xA;&#xA;  location /taiga/ {&#xA;    proxy_set_header Host $http_host;&#xA;    proxy_set_header X-Real-IP $remote_addr;&#xA;    proxy_set_header X-Scheme $scheme;&#xA;    proxy_set_header X-Forwarded-Proto $scheme;&#xA;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;    proxy_redirect off;&#xA;    proxy_pass http://localhost:9000/;&#xA;  }&#xA;&#xA;  # Events&#xA;  location /taiga/events {&#xA;    proxy_pass http://localhost:9000/events;&#xA;    proxy_http_version 1.1;&#xA;    proxy_set_header Upgrade $http_upgrade;&#xA;    proxy_set_header Connection &#34;upgrade&#34;;&#xA;    proxy_set_header Host $host;&#xA;    proxy_connect_timeout 7d;&#xA;    proxy_send_timeout 7d;&#xA;    proxy_read_timeout 7d;&#xA;  }&#xA;&#xA;  # TLS: Configure your TLS following the best practices inside your company&#xA;  # Logs and other configurations&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change between subpath and subdomain&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re changing Taiga configuration from default subdomain (&lt;a href=&#34;https://taiga.mycompany.com&#34;&gt;https://taiga.mycompany.com&lt;/a&gt;) to subpath (&lt;a href=&#34;http://mycompany.com/subpath&#34;&gt;http://mycompany.com/subpath&lt;/a&gt;) or vice versa, on top of adjusting the configuration as said above, you should consider changing the TAIGA_SECRET_KEY so the refresh works properly for the end user.&lt;/p&gt;</summary>
  </entry>
</feed>