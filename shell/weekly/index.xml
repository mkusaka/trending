<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-04T02:00:09Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>A1RM4X/HowTo-Palworld</title>
    <updated>2024-02-04T02:00:09Z</updated>
    <id>tag:github.com,2024-02-04:/A1RM4X/HowTo-Palworld</id>
    <link href="https://github.com/A1RM4X/HowTo-Palworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Set up a Palworld dedicated server on Linux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Set up a Palworld dedicated server on Linux&lt;/h1&gt; &#xA;&lt;h2&gt;More details videos below:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/0TjFLk_lP6c&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/0TjFLk_lP6c/0.jpg&#34; width=&#34;45%&#34; height=&#34;45%&#34; alt=&#34;Setup a dedicated server with A1RM4X - Part 1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtu.be/bjC081ERYcQ&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/bjC081ERYcQ/0.jpg&#34; width=&#34;45%&#34; height=&#34;45%&#34; alt=&#34;Setup a dedicated server with A1RM4X - Part 2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtu.be/XCTHfe82ZmI&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/XCTHfe82ZmI/0.jpg&#34; width=&#34;45%&#34; height=&#34;45%&#34; alt=&#34;Setup a dedicated server with A1RM4X - Part 3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtube.com/live/NEpZny7_7E8&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/NEpZny7_7E8/0.jpg&#34; width=&#34;45%&#34; height=&#34;45%&#34; alt=&#34;Setup a dedicated server with A1RM4X - Part 4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] This script is going to be updated, make sure to watch the youtube videos above to be up to date to the last scripts / tutorial.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;This script is based on Debian 12 and Ubuntu 23.10, it might work with other distros it might not, please don´t come to my discord for support, I won´t have time to adapt this script for all the distros out there.&lt;/li&gt; &#xA;  &lt;li&gt;The game is in ealry access, this script will help you install your own dedicated server on Linux but it will not solve all the problems related to the game itself.&lt;/li&gt; &#xA;  &lt;li&gt;I try to simplify the execution of the tasks / commands, however you might need to be a little bit familiar with Linux in general to run this script.&lt;/li&gt; &#xA;  &lt;li&gt;I also won´t cover any problems related to networking, you are on your own when it comes to open the ports of your router or make sure you don´t have any firewall blocking you to connect on your own server. Google is your friend for fixing those common issues.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Tutorial&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Make sure you have a fresh Debian 12 / Ubuntu 23.10 server up and running with a SSH access.&lt;/p&gt; &#xA;&lt;p&gt;Update and upgrade everything:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt update &amp;amp;&amp;amp; apt dist-upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Debian, install SteamCMD with all the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt install software-properties-common &amp;amp;&amp;amp; apt-add-repository non-free &amp;amp;&amp;amp; dpkg --add-architecture i386 &amp;amp;&amp;amp; apt update &amp;amp;&amp;amp; apt install steamcmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu, install SteamCMD with all the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt install software-properties-common &amp;amp;&amp;amp; apt-add-repository main universe restricted multiverse &amp;amp;&amp;amp; dpkg --add-architecture i386 &amp;amp;&amp;amp; apt update &amp;amp;&amp;amp; apt install steamcmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install sudo and create a new user steam:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt install sudo &amp;amp;&amp;amp; useradd -m steam &amp;amp;&amp;amp; passwd steam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Log in as steam:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo -u steam -s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go in the steam home folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /home/steam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the Palworld dedicated server via SteamCMD:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/games/steamcmd +login anonymous +app_update 2394010 validate +quit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Testing your steam folder structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if test -d /home/steam/.steam ; then clear ; echo &#34;You have a .steam folder - FOLLOW THE SCRIPT&#34;; else clear ; echo &#34;YOU DONT HAVE A .steam FOLDER, PLEASE USE THE SPECIFIC SCRIPT&#34;; fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;If you don´t have a .steam folder in /home/steam/, please switch to this specific &lt;a href=&#34;https://github.com/A1RM4X/HowTo-Palworld/raw/main/README-no.steam.md&#34;&gt;tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Fix server log errors by creating symlinks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/.steam &amp;amp;&amp;amp; ln -s steam/steamcmd/linux32 sdk32 &amp;amp;&amp;amp; ln -s steam/steamcmd/linux64 sdk64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Launch server for creating configuration files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/.steam/steam/steamapps/common/PalServer &amp;amp;&amp;amp; ./PalServer.sh -useperfthreads -NoAsyncLoadingThread -UseMultithreadForDS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy server settings file in the right directory then edit the settings as you wish (details in YouTube video):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp DefaultPalWorldSettings.ini Pal/Saved/Config/LinuxServer/PalWorldSettings.ini &amp;amp;&amp;amp; nano Pal/Saved/Config/LinuxServer/PalWorldSettings.ini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup a service to automize the management of the server&lt;/h2&gt; &#xA;&lt;p&gt;Make sure all the command below are executed as root.&lt;/p&gt; &#xA;&lt;h3&gt;1. Setup the maintenance script for server backups and updates (watch the videos for more details).&lt;/h3&gt; &#xA;&lt;p&gt;Create the maintenance script, make it executable and give it the right user permissions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/A1RM4X/HowTo-Palworld/main/palworld-maintenance.sh -P /home/steam/ &amp;amp;&amp;amp; chmod +x /home/steam/palworld-maintenance.sh &amp;amp;&amp;amp; chown steam:steam /home/steam/palworld-maintenance.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create the backup folder and give it the right permissions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /home/steam/Palworld_backups &amp;amp;&amp;amp; chown steam:steam /home/steam/Palworld_backups&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download the Palworld service file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/A1RM4X/HowTo-Palworld/main/palworld.service -P /etc/systemd/system/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enable and start the service file (watch the videos for more details):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl enable palworld.service &amp;amp;&amp;amp; systemctl daemon-reload &amp;amp;&amp;amp; systemctl start palworld.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Backing up and restoring server data localy&lt;/h3&gt; &#xA;&lt;p&gt;Stop the palworld server before restoring the backup&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl stop palworld.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Delete the previous server data! ATTENTION! Make sure you have a backup before doing this!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;test -d /home/steam/.steam/steam/steamapps/common/PalServer/Pal/Saved &amp;amp;&amp;amp; rm -rf /home/steam/.steam/steam/steamapps/common/PalServer/Pal/Saved&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Select the backup you want to restore (check video on YouTube for details) and extract it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar -xzvf /home/steam/Palworld_backups/Palworld_MODIFY-DATE-HERE.tar.gz -C /&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify all went well&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if test -d /home/steam/.steam/steam/steamapps/common/PalServer/Pal/Saved ; then clear ; echo &#34;RESTORATION SUCCESS&#34; ; else clear ; echo &#34;RESTORATION FAILED&#34; ; fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;1. Manual Restart / Backup / Stop the palworld server&lt;/h3&gt; &#xA;&lt;p&gt;Restart, backup &amp;amp; update the server by using this command &lt;code&gt;systemctl restart palworld.service&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stop the server by using this command &lt;code&gt;systemctl stop palworld.service&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Transferring / copying server configuration files from a server to another server&lt;/h3&gt; &#xA;&lt;p&gt;Log in the new server and make sure you have executed the whole tutorial for having a server up and running.&lt;/p&gt; &#xA;&lt;p&gt;Log in root in the old server, then SCP transfer the file in the new server (more details in the youTube video):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scp /home/steam/Palworld_backups/Palworld_MODIFY-DATE-HERE.tar.gz IP_ADRESS_NEW_SERVER:/home/steam/Palworld_backups/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then follow the Backing up and restoring server data localy &lt;a href=&#34;https://github.com/A1RM4X/HowTo-Palworld/tree/main#2-backing-up-and-restoring-server-data-localy&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;2.1 Migrating from Windows to Linux Server&lt;/h4&gt; &#xA;&lt;p&gt;Currently (as of this writing), if you want to move your save file from a windows server to a linux server (or vice versa), players will get assigned new &lt;code&gt;GUID&lt;/code&gt; (global UIDs) upon connecting. So to get the old save file working, the files have to be edited, replacing old &lt;code&gt;GUID&lt;/code&gt; with the new ones.&lt;/p&gt; &#xA;&lt;p&gt;To fix this, please refer to &lt;a href=&#34;https://github.com/xNul/palworld-host-save-fix&#34;&gt;this&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h3&gt;3. No .steam folder on my debian server&lt;/h3&gt; &#xA;&lt;p&gt;Some users reported not having the same folder structure on their Debian/Ubuntu installation. To fix the issue, use this &lt;a href=&#34;https://github.com/A1RM4X/HowTo-Palworld/raw/main/README-no.steam.md&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>syno-community/arpl-i18n</title>
    <updated>2024-02-04T02:00:09Z</updated>
    <id>tag:github.com,2024-02-04:/syno-community/arpl-i18n</id>
    <link href="https://github.com/syno-community/arpl-i18n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated Redpill Loader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Automated Redpill Loader (i18n)&lt;/h1&gt; &#xA;&lt;p&gt;本库为 arpl i18n (多语言优化版):&lt;/p&gt; &#xA;&lt;h3&gt;原版：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/syno-community/arpl&#34;&gt;https://github.com/syno-community/arpl&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syno-community/arpl-i18n/main/arpl-README-En.md&#34;&gt;作者说明(En)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/syno-community/arpl-i18n/main/arpl-README-Zh.md&#34;&gt;作者说明(Zh)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;汉化：&lt;/h3&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wjz304/arpl-zh_CN&#34;&gt;https://github.com/wjz304/arpl-zh_CN&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;仅同步汉化原版, 所以功能与原版保持一致.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;i18n:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/syno-community/arpl-i18n&#34;&gt;https://github.com/syno-community/arpl-i18n&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多语言支持.&lt;/li&gt; &#xA; &lt;li&gt;包含我的修改.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1T84y1P7Kq&#34;&gt;命令输入方法演示&lt;/a&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV1T84y1P7Kq&#34;&gt;https://www.bilibili.com/video/BV1T84y1P7Kq&lt;/a&gt;&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt;arpl各版本间切换(菜单更新, 增量): &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# shell 下输入以下命令修改更新 repo. &#xA;# 如果要切换原版修改第二条命令中的 syno-community/arpl-i18n 为 fbelavenuto/arpl&#xA;# 如果切换中文版修改第二条命令中的 syno-community/arpl-i18n 为 wjz304/arpl-zh_CN&#xA;CURREPO=`grep &#34;github.com.*update&#34; menu.sh | sed -r &#39;s/.*com\/(.*)\/releases.*/\1/&#39;`&#xA;sed -i &#34;s|${CURREPO}|syno-community/arpl-i18n|g; s|ACTUALVERSION=\&#34;v\${ARPL_VERSION}\&#34;|ACTUALVERSION=\&#34;v0.0\&#34;|g&#34; /opt/arpl/menu.sh&#xA;# 进入设置菜单执行更新arpl操作即可.&#xA;# 更新后请重启.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;arpl各版本间切换(手动方式, 全量): &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# shell 下下载需要的版本或者手动上传到/opt/arpl/下&#xA;curl -kL https://github.com/fbelavenuto/arpl/releases/download/v1.1-beta2a/arpl-1.1-beta2a.img.zip -o /opt/arpl/arpl.zip&#xA;# 解压&#xA;unzip /opt/arpl/arpl.zip&#xA;# 挂载 img&#xA;losetup /dev/loop0 /opt/arpl/arpl.img&#xA;# 复制 p1 p3 分区&#xA;mkdir -p /mnt/loop0p1; mount /dev/loop0p1 /mnt/loop0p1; cp -r /mnt/loop0p1/* /mnt/p1/; umount /mnt/loop0p1&#xA;mkdir -p /mnt/loop0p3; mount /dev/loop0p3 /mnt/loop0p2; cp -r /mnt/loop0p3/* /mnt/p3/; umount /mnt/loop0p3&#xA;# 卸载 img&#xA;losetup -d /dev/loop0&#xA;# 如果安装的版本中无你当前安装的DSM请尽量删除 /mnt/p1/user-config.yml, /mnt/p3/*-dsm, /mnt/p2/*&#xA;rm -rf /mnt/p1/user-config.yml /mnt/p3/*-dsm /mnt/p2/*&#xA;# 重启&#xA;reboot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;翻译&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt install gettext&#xA;git clone https://github.com/syno-community/arpl-i18n.git&#xA;cd arpl-i18n/files/board/arpl/overlayfs/opt/arpl&#xA;xgettext -L Shell --keyword=TEXT *.sh -o lang/arpl.pot&#xA;sed -i &#39;s/charset=CHARSET/charset=UTF-8/&#39; lang/arpl.pot    # The above process has been completed.&#xA;msginit -i lang/arpl.pot -l zh_CN.UTF-8 -o lang/zh_CN.po    # Replace the language you need.&#xA;# translate the lang/zh_CN.po.&#xA;msgfmt lang/zh_CN.po -o lang/zh_CN.mo    # This process will be automatically processed during packaging.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;打赏一下&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/wjz304/wjz304/master/my/20220908134226.jpg&#34; width=&#34;400&#34;&gt;</summary>
  </entry>
  <entry>
    <title>quickemu-project/quickemu</title>
    <updated>2024-02-04T02:00:09Z</updated>
    <id>tag:github.com,2024-02-04:/quickemu-project/quickemu</id>
    <link href="https://github.com/quickemu-project/quickemu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quickly create and run optimised Windows, macOS and Linux desktop virtual machines.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/quickemu-project/quickemu/master/.github/logo.png&#34; alt=&#34;Quickemu&#34; width=&#34;256&#34;&gt; &lt;br&gt; Quickemu &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;Quickly create and run optimised Windows, macOS and Linux desktop virtual machines.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/quickemu-project/quickemu/master/.github/screenshot.png&#34; alt=&#34;Quickemu Screenshot&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Made with 💝 for &lt;img src=&#34;https://raw.githubusercontent.com/quickemu-project/quickemu/master/.github/tux.png&#34; align=&#34;top&#34; width=&#34;18&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Quickly create and run highly optimised desktop virtual machines for Linux, macOS and Windows; with just two commands. You decide what operating system you want to run and Quickemu will figure out the best way to do it for you. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget ubuntu-mate 22.04&#xA;quickemu --vm ubuntu-mate-22.04.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The original objective of the project was to enable quick testing of Linux distributions where the virtual machine configurations can be stored anywhere, such as external USB storage or your home directory, and no elevated permissions are required to run the virtual machines. &lt;strong&gt;Quickemu now also includes comprehensive support for macOS and Windows&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt; Monterey, Big Sur, Catalina, Mojave &amp;amp; High Sierra&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; 10 and 11 including TPM 2.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ubuntu.com/desktop&#34;&gt;Ubuntu&lt;/a&gt; and all the &lt;strong&gt;&lt;a href=&#34;https://ubuntu.com/download/flavours&#34;&gt;official Ubuntu flavours&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Over 360 operating system editions are supported!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full SPICE support including host/guest clipboard sharing&lt;/li&gt; &#xA; &lt;li&gt;VirtIO-webdavd file sharing for Linux and Windows guests&lt;/li&gt; &#xA; &lt;li&gt;VirtIO-9p file sharing for Linux and macOS guests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.qemu.org/Features/GuestAgent&#34;&gt;QEMU Guest Agent support&lt;/a&gt;; provides access to a system-level agent via standard QMP commands&lt;/li&gt; &#xA; &lt;li&gt;Samba file sharing for Linux, macOS and Windows guests (&lt;em&gt;if &lt;code&gt;smbd&lt;/code&gt; is installed on the host&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;VirGL acceleration&lt;/li&gt; &#xA; &lt;li&gt;USB device pass-through&lt;/li&gt; &#xA; &lt;li&gt;Smartcard pass-through&lt;/li&gt; &#xA; &lt;li&gt;Automatic SSH port forwarding to guests&lt;/li&gt; &#xA; &lt;li&gt;Network port forwarding&lt;/li&gt; &#xA; &lt;li&gt;Full duplex audio&lt;/li&gt; &#xA; &lt;li&gt;Braille support&lt;/li&gt; &#xA; &lt;li&gt;EFI (with or without SecureBoot) and Legacy BIOS boot&lt;/li&gt; &#xA; &lt;li&gt;Graphical user interfaces available&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Quickemu is a wrapper for the excellent &lt;a href=&#34;https://www.qemu.org/&#34;&gt;QEMU&lt;/a&gt; that attempts to automatically &lt;em&gt;&#34;do the right thing&#34;&lt;/em&gt;, rather than expose exhaustive configuration options.&lt;/p&gt; &#xA;&lt;p&gt;We have a Discord for this project: &lt;a href=&#34;https://discord.gg/sNmz3uw&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/712850672223125565?color=0C306A&amp;amp;label=WimpysWorld%20Discord&amp;amp;logo=Discord&amp;amp;logoColor=ffffff&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See this (old) video where I explain some of my motivations for creating Quickemu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AOTYWEgw0hI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/AOTYWEgw0hI/0.jpg&#34; alt=&#34;Replace VirtualBox with Bash &amp;amp; QEMU&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qemu.org/&#34;&gt;QEMU&lt;/a&gt; (&lt;em&gt;6.0.0 or newer&lt;/em&gt;) &lt;strong&gt;with GTK, SDL, SPICE &amp;amp; VirtFS support&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;bash&lt;/a&gt; (&lt;em&gt;4.0 or newer&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/coreutils/&#34;&gt;Coreutils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tianocore/edk2&#34;&gt;EDK II&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/grep/&#34;&gt;grep&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.linuxfoundation.org/lsb/start&#34;&gt;LSB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/procps-ng/procps&#34;&gt;procps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;python3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg/tree/master/Utilities/macrecovery&#34;&gt;macrecovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cdrtools.sourceforge.net/private/cdrecord.html&#34;&gt;mkisofs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gregkh/usbutils&#34;&gt;usbutils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/karelzak/util-linux&#34;&gt;util-linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/sed/&#34;&gt;sed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.dest-unreach.org/socat/&#34;&gt;socat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/spice/spice-gtk&#34;&gt;spicy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stefanberger/swtpm&#34;&gt;swtpm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/wget/&#34;&gt;Wget&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/xdg-user-dirs/&#34;&gt;xdg-user-dirs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/xorg/app/xrandr&#34;&gt;xrandr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://zsync.moria.org.uk/&#34;&gt;zsync&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.info-zip.org/UnZip.html&#34;&gt;unzip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Requirements&lt;/h3&gt; &#xA;&lt;p&gt;For Ubuntu, Arch and nixos systems the &lt;a href=&#34;https://launchpad.net/~flexiondotorg/+archive/ubuntu/quickemu&#34;&gt;ppa&lt;/a&gt;, &lt;a href=&#34;https://aur.archlinux.org/packages/quickemu&#34;&gt;AUR&lt;/a&gt; or &lt;a href=&#34;https://github.com/NixOS/nixpkgs/tree/master/pkgs/development/quickemu&#34;&gt;nix&lt;/a&gt; packaging will take care of the dependencies. For other host distributions or operating systems it will be necessary to install the above requirements or their equivalents.&lt;/p&gt; &#xA;&lt;p&gt;These examples may save a little typing&lt;/p&gt; &#xA;&lt;p&gt;Debian (and direct derivatives such as MX Linux):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install qemu bash coreutils ovmf grep jq lsb-base procps python3 genisoimage usbutils util-linux sed spice-client-gtk libtss2-tcti-swtpm0 wget xdg-user-dirs zsync unzip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install qemu bash coreutils edk2-tools grep jq lsb procps python3 genisoimage usbutils util-linux sed spice-gtk-tools swtpm wget xdg-user-dirs xrandr unzip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MacOS:&lt;/p&gt; &#xA;&lt;p&gt;This is a work in progress (see &lt;a href=&#34;https://github.com/quickemu-project/quickemu/issues/248&#34;&gt;issue 248&lt;/a&gt; for other steps and changes that may enable running on MacOS)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install qemu bash coreutils grep jq python@3.10 cdrtools gnu-sed spice-gtk wget zsync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Graphical User Interfaces&lt;/h2&gt; &#xA;&lt;p&gt;While &lt;code&gt;quickemu&lt;/code&gt; and &lt;code&gt;quickget&lt;/code&gt; are designed for the terminal, a graphical user interface is also available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/quickgui/quickgui&#34;&gt;Quickgui&lt;/a&gt;&lt;/strong&gt; by &lt;a href=&#34;https://github.com/marxjohnson&#34;&gt;Mark Johnson&lt;/a&gt; and &lt;a href=&#34;https://github.com/ymauray&#34;&gt;Yannick Mauray&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many thanks to &lt;a href=&#34;https://github.com/Lukewh&#34;&gt;Luke Wesley-Holley&lt;/a&gt; and &lt;a href=&#34;https://github.com/daPhipz&#34;&gt;Philipp Kiemle&lt;/a&gt; for creating the &lt;strong&gt;&lt;a href=&#34;https://github.com/Lukewh/quickemu-icons&#34;&gt;Quickemu icons&lt;/a&gt;&lt;/strong&gt; 🎨&lt;/p&gt; &#xA;&lt;h3&gt;Quickgui for Ubuntu&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:yannick-mauray/quickgui&#xA;sudo apt update&#xA;sudo apt install quickgui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;quickemu quickget X terminal project&lt;/h3&gt; &#xA;&lt;p&gt;From Nov 2023, there is also a multi option desktop integrated text interface, with lots of unique tools and utilities to help you make light work of installations, snapshots and disk management&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/TuxVinyards/qqX&#34;&gt;qqX&lt;/a&gt;&lt;/strong&gt; is independently curated by &lt;a href=&#34;https://github.com/TuxVinyards&#34;&gt;Alex Genovese&lt;/a&gt; (see the github pages)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/TuxVinyards/qqX/assets/3956806/18e5c495-8072-49a5-8b9c-e1302549efcf&#34; alt=&#34;qqX-vmm&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Install Quickemu&lt;/h1&gt; &#xA;&lt;h2&gt;Arch&lt;/h2&gt; &#xA;&lt;p&gt;Quickemu is available from the AUR (Arch user repository), and can be installed via any AUR helper. Assuming your AUR helper is yay, Run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -Sy quickemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Ubuntu&lt;/h2&gt; &#xA;&lt;p&gt;Quickemu is available from a PPA for Ubuntu users. The Quickemu PPA also includes a back port of QEMU 6.0.0 for 20.04 (Focal) and 21.04 (Hirsute). To install Quickemu and all the dependencies run the following in a terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-add-repository ppa:flexiondotorg/quickemu&#xA;sudo apt update&#xA;sudo apt install quickemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Other Linux&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --filter=blob:none https://github.com/wimpysworld/quickemu&#xA;cd quickemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now install all the &lt;strong&gt;Requirements&lt;/strong&gt; documented above.&lt;/p&gt; &#xA;&lt;h3&gt;Other sources&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/&#34;&gt;Repology.org&lt;/a&gt; found the following releases have been packaged.&lt;/p&gt; &#xA;&lt;h4&gt;Quickemu&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/quickemu/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/quickemu.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Quickgui&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/quickgui/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/quickgui.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ubuntu Guest&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; will automatically download an Ubuntu release and create the virtual machine configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget ubuntu 22.04&#xA;quickemu --vm ubuntu-22.04.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete the installation as normal.&lt;/li&gt; &#xA; &lt;li&gt;Post-install: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the SPICE agent (&lt;code&gt;spice-vdagent&lt;/code&gt;) in the guest to enable copy/paste and USB redirection &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;sudo apt install spice-vdagent&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Install the SPICE WebDAV agent (&lt;code&gt;spice-webdavd&lt;/code&gt;) in the guest to enable file sharing. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;sudo apt install spice-webdavd&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ubuntu devel (daily-live) images&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; can also download/refresh devel images via &lt;code&gt;zsync&lt;/code&gt; for Ubuntu developers and testers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget ubuntu devel&#xA;quickemu --vm ubuntu-devel.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;quickget ubuntu devel&lt;/code&gt; to refresh your daily development image as often as you like, it will even automatically switch to a new series.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu Flavours&lt;/h3&gt; &#xA;&lt;p&gt;All the official Ubuntu flavours are supported, just replace &lt;code&gt;ubuntu&lt;/code&gt; with your preferred flavour.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;edubuntu&lt;/code&gt; (Edubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubuntu&lt;/code&gt; (Kubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lubuntu&lt;/code&gt; (Lubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu-budgie&lt;/code&gt; (Ubuntu Budgie)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntucinnamon&lt;/code&gt; (Ubuntu Cinnamon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntukylin&lt;/code&gt; (Ubuntu Kylin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu-mate&lt;/code&gt; (Ubuntu MATE)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu-server&lt;/code&gt; (Ubuntu Server)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntustudio&lt;/code&gt; (Ubuntu Studio)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu&lt;/code&gt; (Ubuntu)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ubuntu-unity&lt;/code&gt; (Ubuntu Unity)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xubuntu&lt;/code&gt; (Xubuntu)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;quickget&lt;/code&gt; with options to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    # show an OS ISO download URL for {os} {release} [edition] &#xA;    quickget --show-iso-url fedora 38 Silverblue   &#xA;    # test if and OS ISO is available for {os} {release} [edition]&#xA;    quickget --test-iso-url nixos 23.05 plasma5&#xA;    # open an OS distribution homepage in a browser&#xA;    quickget --open-distro-homepage  ubuntu-mate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;--show-iso-url&lt;/code&gt; and &lt;code&gt;--test-iso-url&lt;/code&gt; options &lt;strong&gt;do not&lt;/strong&gt; work for &lt;code&gt;Windows&lt;/code&gt; (&lt;code&gt;quickget&lt;/code&gt; will begin downloading the requested release and edition of windows)&lt;/p&gt; &#xA;&lt;h2&gt;Other Operating Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; also supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;alma&lt;/code&gt; (Alma Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alpine&lt;/code&gt; (Alpine Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;android&lt;/code&gt; (Android x86)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;antix&lt;/code&gt; (Antix)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;archcraft&lt;/code&gt; (Archcraft)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;archlinux&lt;/code&gt; (Arch Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arcolinux&lt;/code&gt; (Arco Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;batocera&lt;/code&gt; (Batocera)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;blendos&lt;/code&gt; (BlendOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bodhi&lt;/code&gt; (Bodhi)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bunsenlabs&lt;/code&gt; (Bunsenlabs)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cachyos&lt;/code&gt; (CachyOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;centos-stream&lt;/code&gt; (CentOS Stream)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debian&lt;/code&gt; (Debian)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;deepin&lt;/code&gt; (Deepin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;devuan&lt;/code&gt; (Devuan)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dragonflybsd&lt;/code&gt; (DragonFlyBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;elementary&lt;/code&gt; (elementary OS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;endeavouros&lt;/code&gt; (EndeavourOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;endless&lt;/code&gt; (Endless OS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fedora&lt;/code&gt; (Fedora)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;freebsd&lt;/code&gt; (FreeBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;freedos&lt;/code&gt; (FreeDOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;garuda&lt;/code&gt; (Garuda Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gentoo&lt;/code&gt; (Gentoo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ghostbsd&lt;/code&gt; (GhostBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;haiku&lt;/code&gt; (Haiku)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;holoiso&lt;/code&gt; (SteamOS HoloISO)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kali&lt;/code&gt; (Kali)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kdeneon&lt;/code&gt; (KDE Neon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kolibrios&lt;/code&gt; (KolibriOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;linuxlite&lt;/code&gt; (Linux Lite)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;linuxmint&lt;/code&gt; (Linux Mint)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lmde&lt;/code&gt; (Linux Mint Debian Edition)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mageia&lt;/code&gt; (Mageia)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;manjaro&lt;/code&gt; (Manjaro)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mxlinux&lt;/code&gt; (MX Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;netboot&lt;/code&gt; (netboot.xyz)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;netbsd&lt;/code&gt; (NetBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nixos&lt;/code&gt; (NixOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openbsd&lt;/code&gt; (OpenBSD)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openindiana&lt;/code&gt; (OpenIndiana)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opensuse&lt;/code&gt; (openSUSE)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;oraclelinux&lt;/code&gt; (Oracle Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;peppermint&lt;/code&gt; (PeppermintOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;popos&lt;/code&gt; (Pop!_OS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;porteus&lt;/code&gt; (Porteus)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reactos&lt;/code&gt; (ReactOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rebornos&lt;/code&gt; (RebornOS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rockylinux&lt;/code&gt; (Rocky Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;siduction&lt;/code&gt; (Siduction)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;slackware&lt;/code&gt; (Slackware)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;solus&lt;/code&gt; (Solus)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;spiral&lt;/code&gt; (Spiral)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tails&lt;/code&gt; (Tails)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tinycore&lt;/code&gt; (Tiny Core Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;trisquel&lt;/code&gt; (Trisquel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;truenas-core&lt;/code&gt; (TrueNAS Core)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;truenas-scale&lt;/code&gt; (TrueNAS Scale)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vanillaos&lt;/code&gt; (Vanilla OS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;void&lt;/code&gt; (Void Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vxlinux&lt;/code&gt; (VX Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xerolinux&lt;/code&gt; (XeroLinux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zorin&lt;/code&gt; (Zorin OS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or you can download a Linux image and manually create a VM configuration.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download a .iso image of a Linux distribution&lt;/li&gt; &#xA; &lt;li&gt;Create a VM configuration file; for example &lt;code&gt;debian-bullseye.conf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guest_os=&#34;linux&#34;&#xA;disk_img=&#34;debian-bullseye/disk.qcow2&#34;&#xA;iso=&#34;debian-bullseye/firmware-11.0.0-amd64-DVD-1.iso&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;quickemu&lt;/code&gt; to start the virtual machine:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm debian-bullseye.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete the installation as normal.&lt;/li&gt; &#xA; &lt;li&gt;Post-install: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the SPICE agent (&lt;code&gt;spice-vdagent&lt;/code&gt;) in the guest to enable copy/paste and USB redirection.&lt;/li&gt; &#xA;   &lt;li&gt;Install the SPICE WebDAV agent (&lt;code&gt;spice-webdavd&lt;/code&gt;) in the guest to enable file sharing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;macOS Guest&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; automatically downloads a macOS recovery image and creates a virtual machine configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget macos catalina&#xA;quickemu --vm macos-catalina.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;macOS &lt;code&gt;high-sierra&lt;/code&gt;, &lt;code&gt;mojave&lt;/code&gt;, &lt;code&gt;catalina&lt;/code&gt;, &lt;code&gt;big-sur&lt;/code&gt;, &lt;code&gt;monterey&lt;/code&gt; and &lt;code&gt;ventura&lt;/code&gt; are supported.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use cursor keys and enter key to select the &lt;strong&gt;macOS Base System&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;From &lt;strong&gt;macOS Utilities&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Disk Utility&lt;/strong&gt; and &lt;strong&gt;Continue&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Select &lt;code&gt;QEMU HARDDISK Media&lt;/code&gt; (~103.08GB) from the list (on Big Sur and above use &lt;code&gt;Apple Inc. VirtIO Block Device&lt;/code&gt;) and click &lt;strong&gt;Erase&lt;/strong&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Enter a &lt;code&gt;Name:&lt;/code&gt; for the disk&lt;/li&gt; &#xA;     &lt;li&gt;If you are installing macOS Mojave or later (Catalina, Big Sur, Monterey and Ventura), choose any of the APFS options as the filesystem. MacOS Extended may not work.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Erase&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Done&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Close Disk Utility&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;From &lt;strong&gt;macOS Utilities&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Reinstall macOS&lt;/strong&gt; and &lt;strong&gt;Continue&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Complete the installation as you normally would. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On the first reboot use cursor keys and enter key to select &lt;strong&gt;macOS Installer&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;On the subsequent reboots use cursor keys and enter key to select the disk you named&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Once you have finished installing macOS you will be presented with an the out-of-the-box first-start wizard to configure various options and set up your username and password&lt;/li&gt; &#xA; &lt;li&gt;OPTIONAL: After you have concluded the out-of-the-box wizard, you may want to enable the TRIM feature that the computer industry created for SSD disks. This feature in our macOS installation will allow QuickEmu to compact (shrink) your macOS disk image whenever you delete files inside the Virtual Machine. Without this step your macOS disk image will only ever get larger and will not shrink even when you delete lots of data inside macOS. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To enable TRIM, open the Terminal application and type the following command followed by pressing command on the hard disk when files are deleted:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo trimforce enable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will be prompted to enter your account&#39;s password to gain the privilege needed. Once you&#39;ve entered your password and pressed in the form of two questions that require you to type response as though you said &#34;no&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;IMPORTANT NOTICE: This tool force-enables TRIM for all relevant attached devices, even though such devices may not have been validated for data integrity while using TRIM. Use of this tool to enable TRIM may result in unintended data loss or data corruption. It should not be used in a commercial operating environment or with important data. Before using this tool, you should back up all of your data and regularly back up data while TRIM is enabled. This tool is provided on an &#34;as is&#34; basis. APPLE MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, REGARDING THIS TOOL OR ITS USE ALONE OR IN COMBINATION WITH YOUR DEVICES, SYSTEMS, OR SERVICES. BY USING THIS TOOL TO ENABLE TRIM, YOU AGREE THAT, TO THE EXTENT PERMITTED BY APPLICABLE LAW, USE OF THE TOOL IS AT YOUR SOLE RISK AND THAT THE ENTIRE RISK AS TO SATISFACTORY QUALITY, PERFORMANCE, ACCURACY AND EFFORT IS WITH YOU.&#xA;Are you sure you with to proceed (y/N)?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And a second confirmation once you&#39;ve confirmed the previous one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;Your system will immediately reboot when this is complete.&#xA;Is this OK (y/N)?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As the last message states, your system will automatically reboot as soon as the command completes.&lt;/p&gt; &#xA;&lt;p&gt;The default macOS configuration looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guest_os=&#34;macos&#34;&#xA;img=&#34;macos-catalina/RecoveryImage.img&#34;&#xA;disk_img=&#34;macos-catalina/disk.qcow2&#34;&#xA;macos_release=&#34;catalina&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;guest_os=&#34;macos&#34;&lt;/code&gt; instructs Quickemu to optimise for macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macos_release=&#34;catalina&#34;&lt;/code&gt; instructs Quickemu to optimise for a particular macOS release. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example VirtIO Network and Memory Ballooning are available in Big Sur and newer, but not previous releases.&lt;/li&gt; &#xA;   &lt;li&gt;And VirtIO Block Media (disks) are supported/stable in Catalina and newer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS compatibility&lt;/h3&gt; &#xA;&lt;p&gt;There are some considerations when running macOS via Quickemu.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported macOS releases: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;High Sierra&lt;/li&gt; &#xA;   &lt;li&gt;Mojave&lt;/li&gt; &#xA;   &lt;li&gt;Catalina &lt;strong&gt;(Recommended)&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Big Sur&lt;/li&gt; &#xA;   &lt;li&gt;Monterey&lt;/li&gt; &#xA;   &lt;li&gt;Ventura&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quickemu&lt;/code&gt; will automatically download the required &lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg&#34;&gt;OpenCore&lt;/a&gt; bootloader and OVMF firmware from &lt;a href=&#34;https://github.com/kholia/OSX-KVM&#34;&gt;OSX-KVM&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Optimised by default, but no GPU acceleration is available. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Host CPU vendor is detected and guest CPU is optimised accordingly.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2019/06/macos-qemu-guest/&#34;&gt;VirtIO Block Media&lt;/a&gt; is used for the system disk where supported.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://philjordan.eu/osx-virt/&#34;&gt;VirtIO &lt;code&gt;usb-tablet&lt;/code&gt;&lt;/a&gt; is used for the mouse.&lt;/li&gt; &#xA;   &lt;li&gt;VirtIO Network (&lt;code&gt;virtio-net&lt;/code&gt;) is supported and enabled on macOS Big Sur and newer but previous releases use &lt;code&gt;vmxnet3&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;VirtIO Memory Ballooning is supported and enabled on macOS Big Sur and newer but disabled for other support macOS releases.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;USB host and SPICE pass-through is: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UHCI (USB 2.0) on macOS Catalina and earlier.&lt;/li&gt; &#xA;   &lt;li&gt;XHCI (USB 3.0) on macOS Big Sur and newer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Display resolution can only be changed via macOS System Preferences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full Duplex audio requires &lt;a href=&#34;https://github.com/chris1111/VoodooHDA-OC&#34;&gt;VoodooHDA OC&lt;/a&gt; or pass-through a USB audio-device to the macOS guest VM&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;NOTE! &lt;a href=&#34;https://disable-gatekeeper.github.io/&#34;&gt;Gatekeeper&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection&#34;&gt;System Integrity Protection (SIP)&lt;/a&gt; need to be disabled to install VoodooHDA OC&lt;/li&gt; &#xA; &lt;li&gt;File sharing between guest and host is available via &lt;a href=&#34;https://wiki.qemu.org/Documentation/9psetup&#34;&gt;virtio-9p&lt;/a&gt; and &lt;a href=&#34;https://gitlab.gnome.org/GNOME/phodav/-/merge_requests/24&#34;&gt;SPICE webdavd&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy/paste via SPICE agent is &lt;strong&gt;not available on macOS&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS App Store&lt;/h3&gt; &#xA;&lt;p&gt;If you see &lt;em&gt;&#34;Your device or computer could not be verified&#34;&lt;/em&gt; when you try to login to the App Store, make sure that your wired ethernet device is &lt;code&gt;en0&lt;/code&gt;. Use &lt;code&gt;ifconfig&lt;/code&gt; in a terminal to verify this.&lt;/p&gt; &#xA;&lt;p&gt;If the wired ethernet device is not &lt;code&gt;en0&lt;/code&gt;, then then go to &lt;em&gt;System Preferences&lt;/em&gt; -&amp;gt; &lt;em&gt;Network&lt;/em&gt;, delete all the network devices and apply the changes. Next, open a terminal and run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo rm /Library/Preferences/SystemConfiguration/NetworkInterfaces.plist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now reboot, and the App Store should work.&lt;/p&gt; &#xA;&lt;h2&gt;Windows 8, 10 &amp;amp; 11 Guests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quickget&lt;/code&gt; can download &lt;a href=&#34;https://www.microsoft.com/software-download/windows10&#34;&gt;Windows10&lt;/a&gt; and &lt;a href=&#34;https://www.microsoft.com/software-download/windows11&#34;&gt;Windows 11&lt;/a&gt; automatically and create an optimised virtual machine configuration. This configuration also includes the &lt;a href=&#34;https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/&#34;&gt;VirtIO drivers for Windows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Windows 8.1 is also supported but doesn&#39;t feature any automated installation or driver optimisation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickget windows 11&#xA;quickemu --vm windows-11.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete the installation as you normally would.&lt;/li&gt; &#xA; &lt;li&gt;All relevant drivers and services should be installed automatically.&lt;/li&gt; &#xA; &lt;li&gt;A local administrator user account is automatically created, with these credentials: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Username: &lt;code&gt;Quickemu&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Password: &lt;code&gt;quickemu&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The default Windows 11 configuration looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guest_os=&#34;windows&#34;&#xA;disk_img=&#34;windows-11/disk.qcow2&#34;&#xA;iso=&#34;windows-11/windows-11.iso&#34;&#xA;fixed_iso=&#34;windows-11/virtio-win.iso&#34;&#xA;tpm=&#34;on&#34;&#xA;secureboot=&#34;off&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;guest_os=&#34;windows&#34;&lt;/code&gt; instructs &lt;code&gt;quickemu&lt;/code&gt; to optimise for Windows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fixed_iso=&lt;/code&gt; specifies the ISO image that provides VirtIO drivers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tpm=&#34;on&#34;&lt;/code&gt; instructs &lt;code&gt;quickemu&lt;/code&gt; to create a software emulated TPM device using &lt;code&gt;swtpm&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;SPICE&lt;/h1&gt; &#xA;&lt;p&gt;The following features are available while using the SPICE protocol:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy/paste between the guest and host&lt;/li&gt; &#xA; &lt;li&gt;Host file sharing to the guest&lt;/li&gt; &#xA; &lt;li&gt;USB device redirection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use SPICE add &lt;code&gt;--display spice&lt;/code&gt; to the Quickemu invocation, this requires that the &lt;code&gt;spicy&lt;/code&gt; client is installed, available from the &lt;code&gt;spice-client-gtk&lt;/code&gt; package in Debian/Ubuntu.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04.conf --display spice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable copy/paste with a Windows guest, install &lt;a href=&#34;https://www.spice-space.org/download.html&#34;&gt;SPICE Windows guest tools&lt;/a&gt; in the guest VM.&lt;/p&gt; &#xA;&lt;h2&gt;Headless&lt;/h2&gt; &#xA;&lt;p&gt;To start a VM with SPICE enabled, but no display attached use &lt;code&gt;--display none&lt;/code&gt;. This requires that the &lt;code&gt;spicy&lt;/code&gt; client is installed, available from the &lt;code&gt;spice-client-gtk&lt;/code&gt; package in Debian/Ubuntu to connect to the running VM&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04.conf --display none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;.ports&lt;/code&gt; file in the VM directory to lookup what SSH and SPICE ports the VM is connected to.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat ubuntu-22.04/ubuntu-22.04.ports&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If, for example, the SSH port is set to 22220, and assuming your VM has a started SSH service (details vary by OS), you can typically SSH into it from the host as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh -p 22220 your_vm_user@localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Accessibility&lt;/h1&gt; &#xA;&lt;p&gt;Qemu provides support for using BrlAPI to display braille output on a real or fake device.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04.conf --braille --display sdl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;BIOS and EFI&lt;/h1&gt; &#xA;&lt;p&gt;Since Quickemu 2.1.0 &lt;code&gt;efi&lt;/code&gt; is the default boot option. If you want to override this behaviour then add the following line to you VM configuration to enable legacy BIOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;boot=&#34;legacy&#34;&lt;/code&gt; - Enable Legacy BIOS boot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tuning CPU cores, RAM &amp;amp; disks&lt;/h1&gt; &#xA;&lt;p&gt;By default, Quickemu will calculate the number of CPUs cores and RAM to allocate to a VM based on the specifications of your host computer. You can override this default behaviour and tune the VM configuration to your liking.&lt;/p&gt; &#xA;&lt;p&gt;Add additional lines to your virtual machine configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cpu_cores=&#34;4&#34;&lt;/code&gt; - Specify the number of CPU cores allocated to the VM&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ram=&#34;4G&#34;&lt;/code&gt; - Specify the amount of RAM to allocate to the VM&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disk_size=&#34;16G&#34;&lt;/code&gt; - Specify the size of the virtual disk allocated to the VM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disk preallocation&lt;/h2&gt; &#xA;&lt;p&gt;Preallocation mode (allowed values: &lt;code&gt;off&lt;/code&gt; (default), &lt;code&gt;metadata&lt;/code&gt;, &lt;code&gt;falloc&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;). An image with preallocated metadata is initially larger but can improve performance when the image needs to grow.&lt;/p&gt; &#xA;&lt;p&gt;Specify what disk preallocation should be used, if any, when creating the system disk image by adding a line like this to your VM configuration.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;preallocation=&#34;metadata&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CD-ROM disks&lt;/h2&gt; &#xA;&lt;p&gt;If you want to expose an ISO image from the host to guest add the following line to the VM configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fixed_iso=&#34;/path/to/image.iso&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Floppy disks&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re like &lt;a href=&#34;https://popey.com&#34;&gt;Alan Pope&lt;/a&gt; you&#39;ll probably want to mount a floppy disk image in the guest. To do so add the following line to the VM configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;floppy=&#34;/path/to/floppy.img&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;File Sharing&lt;/h1&gt; &#xA;&lt;p&gt;All File Sharing options will only expose &lt;code&gt;~/Public&lt;/code&gt; (or localised variations) for the current user to the guest VMs.&lt;/p&gt; &#xA;&lt;h2&gt;Samba 🐧 🍏 🪟&lt;/h2&gt; &#xA;&lt;p&gt;If &lt;code&gt;smbd&lt;/code&gt; is available on the host, Quickemu will automatically enable the built-in QEMU support for exposing a Samba share from the host to the guest.&lt;/p&gt; &#xA;&lt;p&gt;You can install the minimal Samba components on Ubuntu using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install --no-install-recommends samba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything is set up correctly, the &lt;code&gt;smbd&lt;/code&gt; address will be printed when the virtual machine is started. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; - smbd:     On guest: smb://10.0.2.4/qemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using a Windows guest, right-click on &#34;This PC&#34;, click &#34;Add a network location&#34;, and paste this address, removing &lt;code&gt;smb:&lt;/code&gt; and replacing forward slashes with backslashes (in this example &lt;code&gt;\\10.0.2.4\qemu&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;SPICE WebDAV 🐧 🪟&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;VirtIO-9P 🐧 🍏&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Network port forwarding&lt;/h1&gt; &#xA;&lt;p&gt;Add an additional line to your virtual machine configuration. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;port_forwards=(&#34;8123:8123&#34; &#34;8888:80&#34;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the example above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Port 8123 on the host is forwarded to port 8123 on the guest.&lt;/li&gt; &#xA; &lt;li&gt;Port 8888 on the host is forwarded to port 80 on the guest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Disable networking&lt;/h1&gt; &#xA;&lt;p&gt;To completely disable all network interfaces in a guest VM add this additional line to your virtual machine configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;network=&#34;none&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Restricted networking&lt;/h1&gt; &#xA;&lt;p&gt;You can isolate the guest from the host (and broader network) using the restrict option, which will restrict networking to just the guest and any virtual devices.&lt;/p&gt; &#xA;&lt;p&gt;This can be used to prevent software running inside the guest from phoning home while still providing a network inside the guest. Add this additional line to your virtual machine configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;network=&#34;restrict&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Bridged networking&lt;/h1&gt; &#xA;&lt;p&gt;Connect your virtual machine to a preconfigured network bridge. Add an additional line to your virtual machine configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;network=&#34;br0&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to have a persistent MAC address for your bridged network interface in the guest VM you can add &lt;code&gt;macaddr&lt;/code&gt; to the virtual machine configuration. QEMU requires that the MAC address is in the range: &lt;strong&gt;52:54:00:AB:00:00 - 52:54:00:AB:FF:FF&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;So you can generate your own MAC addresses with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;macaddr=&#34;52:54:00:AB:51:AE&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;USB redirection&lt;/h1&gt; &#xA;&lt;p&gt;Quickemu supports USB redirection via SPICE pass-through and host pass-through.&lt;/p&gt; &#xA;&lt;h2&gt;SPICE redirection (recommended)&lt;/h2&gt; &#xA;&lt;p&gt;Using SPICE for USB pass-through is easiest as it doesn&#39;t require any elevated permission, start Quickemu with &lt;code&gt;--display spice&lt;/code&gt; and then select &lt;code&gt;Input&lt;/code&gt; -&amp;gt; &lt;code&gt;Select USB Device for redirection&lt;/code&gt; from the menu to choose which device(s) you want to attach to the guest.&lt;/p&gt; &#xA;&lt;h2&gt;Host redirection &lt;strong&gt;NOT Recommended&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;USB host redirection is not recommended&lt;/strong&gt;, it is provided purely for backwards compatibility to older versions of Quickemu. Using SPICE is preferred, see above.&lt;/p&gt; &#xA;&lt;p&gt;Add an additional line to your virtual machine configuration. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;usb_devices=(&#34;046d:082d&#34; &#34;046d:085e&#34;)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the example above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The USB device with vendor_id 046d and product_id 082d will be exposed to the guest.&lt;/li&gt; &#xA; &lt;li&gt;The USB device with vendor_id 046d and product_id 085e will be exposed to the guest.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the USB devices are not writable, &lt;code&gt;quickemu&lt;/code&gt; will display the appropriate commands to modify the USB device(s) access permissions, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; - USB:      Host pass-through requested:&#xA;              - Sennheiser Communications EPOS GTW 270 on bus 001 device 005 needs permission changes:&#xA;                sudo chown -v root:user /dev/bus/usb/001/005&#xA;                ERROR! USB permission changes are required 👆&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;TPM&lt;/h1&gt; &#xA;&lt;p&gt;Since Quickemu 2.2.0 a software emulated TPM device can be added to guest virtual machines. Just add &lt;code&gt;tpm=&#34;on&#34;&lt;/code&gt; to your VM configuration. &lt;code&gt;quickget&lt;/code&gt; will automatically add this line to Windows 11 virtual machines.&lt;/p&gt; &#xA;&lt;h1&gt;All the options&lt;/h1&gt; &#xA;&lt;p&gt;Here are the usage instructions:&lt;/p&gt; &#xA;&lt;!-- [[[cog&#xA;import subprocess&#xA;&#xA;import cog&#xA;# cannot use check_result() because of non-zero return&#xA;result=subprocess.run([&#34;./quickemu&#34;, &#34;--help&#34;], capture_output=True, text=True)&#xA;help=result.stdout&#xA;cog.out(f&#34;\n```\n{help}\n```\n&#34;)&#xA;]]] --&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Usage&#xA;  quickemu --vm ubuntu.conf&#xA;&#xA;You can also pass optional parameters&#xA;  --access                          : Enable remote spice access support. &#39;local&#39; (default), &#39;remote&#39;, &#39;clientipaddress&#39;&#xA;  --braille                         : Enable braille support. Requires SDL.&#xA;  --delete-disk                     : Delete the disk image and EFI variables&#xA;  --delete-vm                       : Delete the entire VM and it&#39;s configuration&#xA;  --display                         : Select display backend. &#39;sdl&#39; (default), &#39;gtk&#39;, &#39;none&#39;, &#39;spice&#39; or &#39;spice-app&#39;&#xA;  --fullscreen                      : Starts VM in full screen mode (Ctl+Alt+f to exit)&#xA;  --ignore-msrs-always              : Configure KVM to always ignore unhandled machine-specific registers&#xA;  --screen &amp;lt;screen&amp;gt;                 : Use specified screen to determine the window size.&#xA;  --screenpct &amp;lt;percent&amp;gt;             : Percent of fullscreen for VM if --fullscreen is not specified.&#xA;  --shortcut                        : Create a desktop shortcut&#xA;  --snapshot apply &amp;lt;tag&amp;gt;            : Apply/restore a snapshot.&#xA;  --snapshot create &amp;lt;tag&amp;gt;           : Create a snapshot.&#xA;  --snapshot delete &amp;lt;tag&amp;gt;           : Delete a snapshot.&#xA;  --snapshot info                   : Show disk/snapshot info.&#xA;  --status-quo                      : Do not commit any changes to disk/snapshot.&#xA;  --viewer &amp;lt;viewer&amp;gt;                 : Choose an alternative viewer. @Options: &#39;spicy&#39; (default), &#39;remote-viewer&#39;, &#39;none&#39;&#xA;  --ssh-port &amp;lt;port&amp;gt;                 : Set ssh-port manually&#xA;  --spice-port &amp;lt;port&amp;gt;               : Set spice-port manually&#xA;  --public-dir &amp;lt;path&amp;gt;               : Expose share directory. @Options: &#39;&#39; (default: xdg-user-dir PUBLICSHARE), &#39;&amp;lt;directory&amp;gt;&#39;, &#39;none&#39;&#xA;  --monitor &amp;lt;type&amp;gt;                  : Set monitor connection type. @Options: &#39;socket&#39; (default), &#39;telnet&#39;, &#39;none&#39;&#xA;  --monitor-telnet-host &amp;lt;ip/host&amp;gt;   : Set telnet host for monitor. (default: &#39;localhost&#39;)&#xA;  --monitor-telnet-port &amp;lt;port&amp;gt;      : Set telnet port for monitor. (default: &#39;4440&#39;)&#xA;  --monitor-cmd &amp;lt;cmd&amp;gt;               : Send command to monitor if available. (Example: system_powerdown)&#xA;  --serial &amp;lt;type&amp;gt;                   : Set serial connection type. @Options: &#39;socket&#39; (default), &#39;telnet&#39;, &#39;none&#39;&#xA;  --serial-telnet-host &amp;lt;ip/host&amp;gt;    : Set telnet host for serial. (default: &#39;localhost&#39;)&#xA;  --serial-telnet-port &amp;lt;port&amp;gt;       : Set telnet port for serial. (default: &#39;6660&#39;)&#xA;  --keyboard &amp;lt;type&amp;gt;                 : Set keyboard. @Options: &#39;usb&#39; (default), &#39;ps2&#39;, &#39;virtio&#39;&#xA;  --keyboard_layout &amp;lt;layout&amp;gt;        : Set keyboard layout.&#xA;  --mouse &amp;lt;type&amp;gt;                    : Set mouse. @Options: &#39;tablet&#39; (default), &#39;ps2&#39;, &#39;usb&#39;, &#39;virtio&#39;&#xA;  --usb-controller &amp;lt;type&amp;gt;           : Set usb-controller. @Options: &#39;ehci&#39; (default), &#39;xhci&#39;, &#39;none&#39;&#xA;  --sound-card &amp;lt;type&amp;gt;               : Set sound card. @Options: &#39;intel-hda&#39; (default), &#39;ac97&#39;, &#39;es1370&#39;, &#39;sb16&#39;, &#39;none&#39;&#xA;  --extra_args &amp;lt;arguments&amp;gt;          : Pass additional arguments to qemu&#xA;  --version                         : Print version&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- [[[end]]] --&gt; &#xA;&lt;h2&gt;Desktop shortcuts&lt;/h2&gt; &#xA;&lt;p&gt;Desktop shortcuts can be created for a VM, the shortcuts are saved in &lt;code&gt;~/.local/share/applications&lt;/code&gt;. Here is an example of how to create a shortcut.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm ubuntu-22.04-desktop.conf --shortcut&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Screen and window size (Linux guests only)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;qemu&lt;/code&gt; will always default to the primary monitor to display the VM&#39;s window.&lt;/p&gt; &#xA;&lt;p&gt;Without the &lt;code&gt;--screen&lt;/code&gt; option, &lt;code&gt;quickemu&lt;/code&gt; will look for the size of the smallest monitor, and use a size that fits on said monitor.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--screen&lt;/code&gt; option forces &lt;code&gt;quickemu&lt;/code&gt; to use the size of the given monitor to compute the size of the window. &lt;strong&gt;It won&#39;t use that monitor to display the VM&#39;s window if it&#39;s not the primary monitor&lt;/strong&gt;. This is useful if the primary monitor if not the smallest one, and if the VM&#39;s window doesn&#39;t need to be moved around.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--screen&lt;/code&gt; option is also useful with the &lt;code&gt;--fullscreen&lt;/code&gt; option, again because &lt;code&gt;qemu&lt;/code&gt; will always use the primary monitor. In order for the fullscreen mode to work properly, the resolution of the VM&#39;s window must match the resolution of the screen.&lt;/p&gt; &#xA;&lt;p&gt;To know which screen to use, type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xrandr --listmonitors | grep -v Monitors&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command will output something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; 0: +*HDMI-0 2560/597x1440/336+1920+0  HDMI-0&#xA; 1: +DVI-D-0 1920/527x1080/296+0+0  DVI-D-0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first number is what needs to be passed to the &lt;code&gt;--screen&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quickemu --vm vm.conf --screen 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above uses the 2560x1440 screen to compute the size of the window, which Quickemu sizes to 2048x1152. Without the &lt;code&gt;--screen&lt;/code&gt; option, Quickemu would have used the 1920x1080 monitor which results in a window size of 1664x936.&lt;/p&gt; &#xA;&lt;p&gt;The &#39;--screenpct&#39; is an optional integer value between 25 &amp;lt;= pct &amp;lt; 100 which will override system default screen sizes. The VM size will be &#39;pct&#39; of the chosen screen. &lt;strong&gt;If --fullscreen is chosen screen will be fullsize instead of being scaled down by --screenpct value.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;p&gt;Useful reference that assisted the development of Quickemu.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;General &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://qemu.readthedocs.io/en/latest/&#34;&gt;QEMU&#39;s documentation!&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines&#34;&gt;https://pve.proxmox.com/wiki/Qemu/KVM_Virtual_Machines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2020/01/qemu-sound-audiodev/&#34;&gt;https://www.kraxel.org/blog/2020/01/qemu-sound-audiodev/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;macOS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nicksherlock.com/2020/06/installing-macos-big-sur-on-proxmox/&#34;&gt;https://www.nicksherlock.com/2020/06/installing-macos-big-sur-on-proxmox/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://passthroughpo.st/mac-os-adds-early-support-for-virtio-qemu/&#34;&gt;https://passthroughpo.st/mac-os-adds-early-support-for-virtio-qemu/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/kholia/OSX-KVM&#34;&gt;https://github.com/kholia/OSX-KVM&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/thenickdude/KVM-Opencore&#34;&gt;https://github.com/thenickdude/KVM-Opencore&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg/tree/master/Utilities/macrecovery&#34;&gt;https://github.com/acidanthera/OpenCorePkg/tree/master/Utilities/macrecovery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2017/09/running-macos-as-guest-in-kvm/&#34;&gt;https://www.kraxel.org/blog/2017/09/running-macos-as-guest-in-kvm/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nicksherlock.com/2017/10/passthrough-of-advanced-cpu-features-for-macos-high-sierra-guests/&#34;&gt;https://www.nicksherlock.com/2017/10/passthrough-of-advanced-cpu-features-for-macos-high-sierra-guests/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://philjordan.eu/osx-virt/&#34;&gt;http://philjordan.eu/osx-virt/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Dids/clover-builder&#34;&gt;https://github.com/Dids/clover-builder&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mackie100projects.altervista.org&#34;&gt;OpenCore Configurator&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.heiko-sieger.info/running-windows-10-on-linux-using-kvm-with-vga-passthrough/&#34;&gt;https://www.heiko-sieger.info/running-windows-10-on-linux-using-kvm-with-vga-passthrough/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://leduccc.medium.com/improving-the-performance-of-a-windows-10-guest-on-qemu-a5b3f54d9cf5&#34;&gt;https://leduccc.medium.com/improving-the-performance-of-a-windows-10-guest-on-qemu-a5b3f54d9cf5&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://frontpagelinux.com/tutorials/how-to-use-linux-kvm-to-optimize-your-windows-10-virtual-machine/&#34;&gt;https://frontpagelinux.com/tutorials/how-to-use-linux-kvm-to-optimize-your-windows-10-virtual-machine/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://turlucode.com/qemu-command-line-args/&#34;&gt;https://turlucode.com/qemu-command-line-args/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pbatard/Fido&#34;&gt;https://github.com/pbatard/Fido&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.catapultsystems.com/blogs/create-zero-touch-windows-10-iso/&#34;&gt;https://www.catapultsystems.com/blogs/create-zero-touch-windows-10-iso/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;TPM &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://qemu-project.gitlab.io/qemu/specs/tpm.html&#34;&gt;https://qemu-project.gitlab.io/qemu/specs/tpm.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.tecklyfe.com/how-to-create-a-windows-11-virtual-machine-in-qemu/&#34;&gt;https://www.tecklyfe.com/how-to-create-a-windows-11-virtual-machine-in-qemu/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;9p &amp;amp; virtiofs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.qemu.org/Documentation/9p&#34;&gt;https://wiki.qemu.org/Documentation/9p&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.qemu.org/Documentation/9psetup&#34;&gt;https://wiki.qemu.org/Documentation/9psetup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.kraxel.org/blog/2019/06/macos-qemu-guest/&#34;&gt;https://www.kraxel.org/blog/2019/06/macos-qemu-guest/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/628169/how-to-share-a-directory-with-the-host-without-networking-in-qemu&#34;&gt;https://superuser.com/questions/628169/how-to-share-a-directory-with-the-host-without-networking-in-qemu&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://virtio-fs.gitlab.io/&#34;&gt;https://virtio-fs.gitlab.io/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>