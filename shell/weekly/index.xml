<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-26T02:02:36Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NoName-exe/revanced-extended</title>
    <updated>2023-03-26T02:02:36Z</updated>
    <id>tag:github.com,2023-03-26:/NoName-exe/revanced-extended</id>
    <link href="https://github.com/NoName-exe/revanced-extended" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ReVanced eXtended YT and YT-M for both root and non-root users.&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;⚠️ Do not download modules from 3rd party sources like random websites you found on Google. Only use this repository. I am not responsible for anything they may contain.&lt;/h4&gt; &#xA;&lt;h1&gt;ReVanced eXtended&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NoName-exe/revanced-extended/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/NoName-exe/revanced-extended/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Modules&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/NoName-exe/revanced-extended/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/NoName-exe/revanced-extended/actions/workflows/ci.yml/badge.svg?event=schedule&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get the &lt;a href=&#34;https://github.com/NoName-exe/revanced-extended/releases/latest&#34;&gt;latest CI release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Updated with the latest versions of patches.&lt;/li&gt; &#xA; &lt;li&gt;Cleans APKs from unneeded libs to make them smaller.&lt;/li&gt; &#xA; &lt;li&gt;Fully open-source, every binary or APK is compiled without human intervention.&lt;/li&gt; &#xA; &lt;li&gt;Modules: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Recompile invalidated odex for YouTube and YouTube-Music for faster usage.&lt;/li&gt; &#xA;   &lt;li&gt;Receive updates from Magisk app.&lt;/li&gt; &#xA;   &lt;li&gt;Should not break safetynet or trigger root detections used by certain apps.&lt;/li&gt; &#xA;   &lt;li&gt;Handle installation of the correct version of the stock app and all that.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YouTube Magisk Module is installed as a system app and requires a reboot to install/update.&lt;/li&gt; &#xA; &lt;li&gt;YouTube-Music Magisk Module is installed as a user app and does not require a reboot to install/update.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/j-hc/mindetach-magisk&#34;&gt;mindetach&lt;/a&gt; to block Play Store from updating YouTube and YouTube-Music.&lt;/li&gt; &#xA; &lt;li&gt;Non-root versions of YouTube and YouTube-Music require &lt;a href=&#34;https://github.com/inotia00/VancedMicroG/releases/latest&#34;&gt;Vanced MicroG&lt;/a&gt; to work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/j-hc&#34;&gt;j-hc&lt;/a&gt; for &lt;a href=&#34;https://github.com/j-hc/mindetach-magisk&#34;&gt;mindetach&lt;/a&gt; and the &lt;a href=&#34;https://github.com/j-hc/revanced-magisk-module&#34;&gt;script on which this is based on&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HuskyDG&#34;&gt;HuskyDG&lt;/a&gt; for his &lt;a href=&#34;https://github.com/HuskyDG/revanced-build-ci&#34;&gt;Magisk Module Template&lt;/a&gt; that installs YouTube as a system app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/inotia00&#34;&gt;inotia00&lt;/a&gt; for &lt;a href=&#34;https://github.com/inotia00/revanced-patches/tree/revanced-extended&#34;&gt;revanced-extended patches&lt;/a&gt; and &lt;a href=&#34;https://github.com/inotia00/VancedMicroG&#34;&gt;Vanced MicroG&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gnadgnaoh&#34;&gt;Gnad Gnaoh&lt;/a&gt; for helping me figure some stuff out.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GloriousEggroll/wine-ge-custom</title>
    <updated>2023-03-26T02:02:36Z</updated>
    <id>tag:github.com,2023-03-26:/GloriousEggroll/wine-ge-custom</id>
    <link href="https://github.com/GloriousEggroll/wine-ge-custom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My custom build of wine, made to use with lutris. Built with lutris&#39;s buildbot.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wine-ge-custom&lt;/h1&gt; &#xA;&lt;p&gt;This is my build of WINE based on/forked from the most recent bleeding-edge proton experimental wine repo. This is meant to be used with non-steam games outside of Steam.&lt;/p&gt; &#xA;&lt;p&gt;For Steam games, I provide Proton-GE for usage with Lutris, found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gloriouseggroll/proton-ge-custom&#34;&gt;https://github.com/gloriouseggroll/proton-ge-custom&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Occasionally, I also release League of Legends builds -- These builds will specifically have &#39;lol&#39; or &#39;LoL&#39; in the name. Please note these &#39;LoL&#39; builds are for specific use with League of Legends, and NO other games.&lt;/h2&gt; &#xA;&lt;h2&gt;If you have an issue that happens with my Wine-GE or Wine-LoL-GE builds, provided FROM this repository, please contact me on Discord about the issue:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/6y3BdzC&#34;&gt;https://discord.gg/6y3BdzC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#overview&#34;&gt;Overview&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#media-foundation-fixes-fully-working-or-playable&#34;&gt;Media Foundation Fixes (fully working or playable)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#modification&#34;&gt;Modification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#credits&#34;&gt;Credits&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#tkg-etienne-juvigny&#34;&gt;TKG (Etienne Juvigny)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#guy1524-derek-lesho&#34;&gt;Guy1524 (Derek Lesho)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#joshie-joshua-ashton&#34;&gt;Joshie (Joshua Ashton)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#doitsujin%E3%83%89%E3%82%A4%E3%83%84%E4%BA%BA-philip-rebohle&#34;&gt;doitsujin/ドイツ人 (Philip Rebohle)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#hanskristianthemaister-hans-kristian-arntzen&#34;&gt;HansKristian/themaister (Hans-Kristian Arntzen)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#flibitijibibo-ethan-lee&#34;&gt;flibitijibibo (Ethan Lee)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#simmons-public-chris-simmons&#34;&gt;simmons-public (Chris Simmons)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#sporif-amine-hassane&#34;&gt;Sporif (Amine Hassane)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#wine-staging-maintainers&#34;&gt;wine-staging maintainers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#reporters&#34;&gt;Reporters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#patrons&#34;&gt;Patrons&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GloriousEggroll/wine-ge-custom/master/#donations&#34;&gt;Donations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Things it contains that Valve&#39;s proton does not:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additional media foundation patches for better video playback support&lt;/li&gt; &#xA; &lt;li&gt;AMD FSR patches added directly to fullscreen hack that can be toggled with WINE_FULLSCREEN_FSR=1&lt;/li&gt; &#xA; &lt;li&gt;FSR Fake resolution patch (details here: &lt;a href=&#34;https://github.com/GloriousEggroll/proton-ge-custom/pull/52&#34;&gt;https://github.com/GloriousEggroll/proton-ge-custom/pull/52&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Nvidia CUDA support for phsyx and nvapi&lt;/li&gt; &#xA; &lt;li&gt;Raw input mouse support&lt;/li&gt; &#xA; &lt;li&gt;fix for Mech Warrior Online&lt;/li&gt; &#xA; &lt;li&gt;fix for Asseto Corsa HUD&lt;/li&gt; &#xA; &lt;li&gt;fix for MK11 crash in single player&lt;/li&gt; &#xA; &lt;li&gt;fix for Killer Instinct Vulkan related crash&lt;/li&gt; &#xA; &lt;li&gt;fix for Cities XXL patches&lt;/li&gt; &#xA; &lt;li&gt;various upstream WINE patches backported&lt;/li&gt; &#xA; &lt;li&gt;various wine-staging patches applied as they become needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Media Foundation fixes (Fully working or playable)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spyro Reignited Trilogy&lt;/li&gt; &#xA; &lt;li&gt;Mortal Kombat 11&lt;/li&gt; &#xA; &lt;li&gt;Injustice 2&lt;/li&gt; &#xA; &lt;li&gt;Power Rangers: Battle for the Grid&lt;/li&gt; &#xA; &lt;li&gt;Borderlands 3&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 0&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 2 Remastered&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 3 Remastered&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 5&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 6&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 7&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil 8&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil Revalations&lt;/li&gt; &#xA; &lt;li&gt;Resident Evil Revalations 2&lt;/li&gt; &#xA; &lt;li&gt;Persona 4 Golden&lt;/li&gt; &#xA; &lt;li&gt;PC Building Simulator&lt;/li&gt; &#xA; &lt;li&gt;Dangonronpa V3&lt;/li&gt; &#xA; &lt;li&gt;Super Lucky&#39;s Tale&lt;/li&gt; &#xA; &lt;li&gt;Remnant: From the Ashes&lt;/li&gt; &#xA; &lt;li&gt;BlazBlue Centralfiction&lt;/li&gt; &#xA; &lt;li&gt;Bloodstained: Ritual of the Night&lt;/li&gt; &#xA; &lt;li&gt;Crazy Machines 3&lt;/li&gt; &#xA; &lt;li&gt;Devil May Cry 5&lt;/li&gt; &#xA; &lt;li&gt;Wasteland 3&lt;/li&gt; &#xA; &lt;li&gt;Mutant Year Zero&lt;/li&gt; &#xA; &lt;li&gt;Ultimate Marvel Vs. Capcom 3&lt;/li&gt; &#xA; &lt;li&gt;Industry of Titan&lt;/li&gt; &#xA; &lt;li&gt;Call of Duty Black Ops III&lt;/li&gt; &#xA; &lt;li&gt;Tokyo Xanadu eX+&lt;/li&gt; &#xA; &lt;li&gt;Haven&lt;/li&gt; &#xA; &lt;li&gt;Nier Replicant&lt;/li&gt; &#xA; &lt;li&gt;Scrap Mechanic&lt;/li&gt; &#xA; &lt;li&gt;Aven Colony&lt;/li&gt; &#xA; &lt;li&gt;American Fugitive&lt;/li&gt; &#xA; &lt;li&gt;Asrtonner&lt;/li&gt; &#xA; &lt;li&gt;Soul Caliber VI&lt;/li&gt; &#xA; &lt;li&gt;Monster Hunter Rise&lt;/li&gt; &#xA; &lt;li&gt;Seven: Days Gone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Warframe is problematic with VSync. Turn it off or on in game, do not set to &lt;code&gt;Auto&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Warframe needs a set a frame limit in game. Unlimited framerate can cause slowdowns&lt;/li&gt; &#xA; &lt;li&gt;Warframe on Nvidia: you may need to disable GPU Particles in game otherwise the game can freeze randomly. On AMD they work fine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;PLEASE NOTE: There are prerequisites for using this version of wine:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You must have wine installed on your system&lt;/li&gt; &#xA; &lt;li&gt;You must have winetricks installed on your system&lt;/li&gt; &#xA; &lt;li&gt;You must have wine dependencies installed on your system. See &lt;a href=&#34;https://www.gloriouseggroll.tv/how-to-get-out-of-wine-dependency-hell/&#34;&gt;https://www.gloriouseggroll.tv/how-to-get-out-of-wine-dependency-hell/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You must have vulkan gpu drivers/packages installed properly on your system. See &lt;a href=&#34;https://github.com/lutris/docs/raw/master/InstallingDrivers.md&#34;&gt;https://github.com/lutris/docs/blob/master/InstallingDrivers.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;p&gt;This section is for manual installation of wine-ge for usage with Lutris.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Extract &lt;code&gt;wine-name-branch-x86_64.tar.gz&lt;/code&gt; to &lt;code&gt;/home/USERNAME/.local/share/lutris/runners/wine/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart lutris. You can now choose &lt;code&gt;wine-name-branch-x86_64&lt;/code&gt; from the runners list in configuration options for any game.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Vagrant with sshfs plugin&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Most distros include the vagrant sshfs plugin as it&#39;s own package. You will need to install this package as the default that vagrant tries to install internally usually causes conflicts/failures.&lt;/li&gt; &#xA; &lt;li&gt;Example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ubuntu:&lt;br&gt; &lt;code&gt;# apt install vagrant vagrant-sshfs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fedora:&lt;br&gt; &lt;code&gt;# dnf install vagrant vagrant-sshfs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;VirtualBox installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Notes:__&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This differs per distro. You will need to find instructions for your distro.&lt;/li&gt; &#xA; &lt;li&gt;Please note that virtualbox is -required-. Libvirt will not work. Specifically libvirt causes segfaults when installing packages in the lxc 32 bit container. Why? who knows.__&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional notes:__&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It is important to note that the wine, wine-staging and patches repos/folders are here for my personal use. The build bot does -NOT- pull from any of these folders directly.__&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is recommended to:__&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;replace the wine repository with a clone of your own wine repository,__&lt;/li&gt; &#xA;   &lt;li&gt;then run &lt;code&gt;./patches/protonprep.sh&lt;/code&gt; to apply my changes to your own wine repository,__&lt;/li&gt; &#xA;   &lt;li&gt;then commit + push those changes to a separate branch on your -own- repository.__&lt;/li&gt; &#xA;   &lt;li&gt;THEN follow the instructions below, using your own repository URL and branch.__&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instructions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone --recurse-submodules https://github.com/gloriouseggroll/wine-ge-custom  &#xA;$ cd wine-ge-custom  &#xA;$ VAGRANT_DEFAULT_PROVIDER=virtualbox vagrant up  &#xA;$ ./makebuild.sh name winerepo branch  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;./makebuild.sh lutris http://github.com/gloriouseggroll/wine ge-5.2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Final build will be placed in &lt;code&gt;wine-ge-custom/vagrant_share/ with name format wine-name-branch-x86_64.tar.gz&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;wine-lutris-ge-5.2-x86_64.tar.xz&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Modification&lt;/h2&gt; &#xA;&lt;p&gt;Environment variable options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Compat config string&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;tt&gt;WINE_FULLSCREEN_FSR&lt;/tt&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enable AMD FidelityFX Super Resolution (FSR), use in conjunction with &lt;code&gt;WINE_FULLSCREEN_FSR_STRENGTH&lt;/code&gt; Only works in vulkan games (dxvk and vkd3d-proton included).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;tt&gt;WINE_FULLSCREEN_FSR_STRENGTH&lt;/tt&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AMD FidelityFX Super Resolution (FSR), the default sharpening of 5 is enough without needing modification, but can be changed with 0-5 if wanted. 0 is the maximum sharpness, higher values mean less sharpening. 2 is the AMD recommended default and is set by proton-ge&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;As many of you may or may not already know, there is a Credits section in the README for this Git repository. My proton-ge project contains some of my personal tweaks to Proton, but a large amount of the patches, rebases and fixes come from numerous people&#39;s projects. While I tend to get credited for my builds, a lot of the work that goes into it are from other people as well. I&#39;d like to take some time to point a few of these people out of recognition. In future builds, I plan to make clearer and more informative Git commits, as well as attempt to give these people further crediting, as my README may not be sufficient in doing so.&lt;/p&gt; &#xA;&lt;h3&gt;TKG (Etienne Juvigny)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/tkglitch&#34;&gt;https://www.patreon.com/tkglitch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Frogging-Family/wine-tkg-git&#34;&gt;https://github.com/Frogging-Family/wine-tkg-git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I and many others owe TKG. In regards to both WINE and Proton. He has dedicated a lot of time (2+ years at least) to rebasing WINE and Proton patches, as well as making his own contributions. Before he came along, I did some rebasing work, and mainly only released things for Arch. These days he almost always beats me to rebasing, and it saves myself and others a &lt;strong&gt;lot&lt;/strong&gt; of work.&lt;/p&gt; &#xA;&lt;h3&gt;Guy1524 (Derek Lesho)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Guy1524&#34;&gt;https://github.com/Guy1524&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Derek was responsible for the original rawinput patches, as well as several various game fixes in the past, just to name a few: MK11, FFXV, MHW, Steep, AC Odyssey FS fix. He has also done a massive amount of work on media foundation/mfplat, which should be hopefully working very soon.&lt;/p&gt; &#xA;&lt;h3&gt;Joshie (Joshua Ashton)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Joshua-Ashton/d9vk&#34;&gt;https://github.com/Joshua-Ashton/d9vk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Joshua is the creator of D9VK and also a huge contributor of DXVK. He is also known for his recent DOOM Eternal WINE fixes and also many of the Vulkan tweaks and fixes used, such as FS hack interger scaling.&lt;/p&gt; &#xA;&lt;h3&gt;doitsujin/ドイツ人 (Philip Rebohle)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doitsujin/dxvk&#34;&gt;https://github.com/doitsujin/dxvk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Philip is the creator of DXVK and a heavy contributor of VKD3D. He also put up a lot of my bug reporting for Warframe years ago, when DXVK started.&lt;/p&gt; &#xA;&lt;h3&gt;HansKristian/themaister (Hans-Kristian Arntzen)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HansKristian-Work&#34;&gt;https://github.com/HansKristian-Work&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hans-Kristian is a heavy contributor of VKD3D and he also created a lot of WINE patches that allowed WoW to work.&lt;/p&gt; &#xA;&lt;h3&gt;flibitijibibo (Ethan Lee)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/flibitijibibo&#34;&gt;https://github.com/sponsors/flibitijibibo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fna-xna.github.io/&#34;&gt;https://fna-xna.github.io/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ethan is the creator of FAudio, and he also listened to my Warframe bug reports years ago.&lt;/p&gt; &#xA;&lt;h3&gt;simmons-public (Chris Simmons)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simons-public&#34;&gt;https://github.com/simons-public&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Chris is the creator of the original Protonfixes project. The portions of Protonfixes I&#39;ve imported are what allow customizations to be made to prefixes for various Proton games. without Proton fixes many games would still be broken and/or require manual prefix modification. Huge thanks to Chris.&lt;/p&gt; &#xA;&lt;h3&gt;Sporif (Amine Hassane)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sporif&#34;&gt;https://github.com/Sporif&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Amine is the current maintainer of dxvk-async. This is a feature that was originally removed from dxvk as it happened around the same time a few overwatch bans happened. It was thought, but never confirmed whether or not this feature caused the bans, so the feature was removed as a safety precaution. It is still safe to use in many single player games, and games that do not have competitive anti-cheats. It has also been confirmed to work safely in Warframe and Path of Exile.&lt;/p&gt; &#xA;&lt;h3&gt;wine-staging maintainers&lt;/h3&gt; &#xA;&lt;p&gt;I also of course need to thank my fellow wine-staging maintainers: Alistair Leslie-Hughes, Zebediah Figura and Paul Gofman&lt;/p&gt; &#xA;&lt;p&gt;They have contributed MANY patches to staging, far beyond what I have done, as well as kept up with regular rebasing. A lot of times when bug reports come to me, if it has to do with staging I end up testing and relaying information to these guys in order to get issues resolved.&lt;/p&gt; &#xA;&lt;h3&gt;Reporters&lt;/h3&gt; &#xA;&lt;p&gt;Additionally, a thank you is owed to Andrew Aeikum (aeikum), and kisak (kisak-valve) for regularly keeping me in the loop with Proton and fsync patches, as well as accepting PRs I&#39;ve made to fix Proton build system issues, or listening to bug reports on early Proton patches before they reach Proton release.&lt;/p&gt; &#xA;&lt;h3&gt;Patrons&lt;/h3&gt; &#xA;&lt;p&gt;And finally - To all of my patrons that have supported me, thank you so much. It&#39;s because of you that I&#39;ve been able to keep this project going, getting bug fixes reported, getting Proton/WINE issues fixed, getting various hardware and/or game fixes handled, and so on. Thanks to you, I have been able to use the spare budget in order to both help support the other people that make my project possible, as well as get things necessary for testing such as new game releases or specific hardware that hits odd issues. It&#39;s had a huge effect not just for this project, but a large trickle down effect.&lt;/p&gt; &#xA;&lt;p&gt;My wine-staging co-maintainers are often able to ask me for testing games, or testing on different hardware if they don&#39;t have access to it. This also trickles into both Proton bug reporting AND Lutris bug reporting, as I&#39;m able to provide bug testing and feedback and custom builds and upgrades to them as well. I&#39;m also able to test driver related issues for things such as mesa and getting things reported + patched. This in turn leads to early patches for Mesa, the kernel, VKD3D, and other packages on my copr repos as well. The trickle down effect is just one gigantic awesome rabbit hole for getting things fixed. Thank you once again.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;For anyone else interested, my Patreon can be found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/gloriouseggroll&#34;&gt;https://www.patreon.com/gloriouseggroll&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>0xacx/chatGPT-shell-cli</title>
    <updated>2023-03-26T02:02:36Z</updated>
    <id>tag:github.com,2023-03-26:/0xacx/chatGPT-shell-cli</id>
    <link href="https://github.com/0xacx/chatGPT-shell-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple shell script to use OpenAI&#39;s ChatGPT and DALL-E from the terminal. No Python or JS required.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/99351112/207697723-a3fabc0b-f067-4f83-96fd-1f7225a0bb38.svg?sanitize=true&#34; alt=&#34;shell&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;chatGPT-shell-cli&lt;/h1&gt; &#xA;&lt;p&gt;A simple, lightweight shell script to use OpenAI&#39;s chatGPT and DALL-E from the terminal without installing python or node.js. The script uses the official ChatGPT model &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; with the OpenAI API endpoint &lt;code&gt;/chat/completions&lt;/code&gt;. You can also use the new &lt;code&gt;gpt-4&lt;/code&gt; model, if you have access.&lt;br&gt; The script allows the use of all other OpenAI models with the &lt;code&gt;completions&lt;/code&gt; endpoint and the &lt;code&gt;images/generations&lt;/code&gt; endpoint for generating images.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#use-the-official-chatgpt-model&#34;&gt;Chat&lt;/a&gt; with the ✨ &lt;a href=&#34;https://openai.com/blog/introducing-chatgpt-and-whisper-apis&#34;&gt;official ChatGPT API&lt;/a&gt; ✨ from the terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#commands&#34;&gt;Generate images&lt;/a&gt; from a text prompt&lt;/li&gt; &#xA; &lt;li&gt;View your &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#commands&#34;&gt;chat history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#chat-context&#34;&gt;Chat context&lt;/a&gt;, GPT remembers previous chat questions and answers&lt;/li&gt; &#xA; &lt;li&gt;Pass the input prompt with &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#pipe-mode&#34;&gt;pipe&lt;/a&gt;, as a &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#script-parameters&#34;&gt;script parameter&lt;/a&gt; or normal &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#chat-mode&#34;&gt;chat mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;List all available &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#commands&#34;&gt;OpenAI models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set OpenAI &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#set-request-parameters&#34;&gt;request parameters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate a &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#commands&#34;&gt;command&lt;/a&gt; and run it in terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/99351112/212061157-bc92e221-ad29-46b7-a0a8-c2735a09449d.png&#34; alt=&#34;Screenshot 2023-01-12 at 13 59 08&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/99351112/212346562-ea568cce-2ca2-4b03-9ebc-ece8902c923d.png&#34; alt=&#34;Screenshot 2023-01-13 at 16 39 27&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#chat-mode&#34;&gt;Chat mode&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ chatgpt&#xA;Welcome to chatgpt. You can quit with &#39;exit&#39;.&#xA;&#xA;Enter a prompt:&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Chat mode with &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#set-chat-initial-prompt&#34;&gt;initial prompt&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ chatgpt -i &#34;You are Rick, from Rick and Morty. Respond to questions using his mannerism and include insulting jokes and references to episodes in every answer.&#34;&#xA;Welcome to chatgpt. You can quit with &#39;exit&#39;.&#xA;&#xA;Enter a prompt:&#xA;Explain in simple terms how GPT3 works&#xA;&#xA;chatgpt  Ah, you want me to explain GPT3 in simple terms? Well, it&#39;s basically a computer program that can predict what you&#39;re gonna say next based on the words you&#39;ve already said. Kind of like how I can predict that you&#39;re gonna make some stupid comment about an episode of Rick and Morty after I&#39;m done answering this question.&#xA;&#xA;Enter a prompt:&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#pipe-mode&#34;&gt;pipe&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo &#34;How to view running processes on Ubuntu?&#34; | chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/#script-parameters&#34;&gt;script parameters&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;chatgpt -p &#34;What is the regex to match an email address?&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;This script relies on curl for the requests to the api and jq to parse the json response.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.curl.se&#34;&gt;curl&lt;/a&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install curl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install jq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;An OpenAI API key. Create an account and get a free API Key at &lt;a href=&#34;https://beta.openai.com/account/api-keys&#34;&gt;OpenAI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To install, run this in your terminal and provide your OpenAI API key when asked.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sS https://raw.githubusercontent.com/0xacx/chatGPT-shell-cli/main/install.sh | sudo -E bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ArchLinux&lt;/h4&gt; &#xA;&lt;p&gt;If you are using ArchLinux you can install the &lt;a href=&#34;https://aur.archlinux.org/packages/chatgpt-shell-cli&#34;&gt;AUR package&lt;/a&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paru -S chatgpt-shell-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install it manually, all you have to do is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;code&gt;chatgpt.sh&lt;/code&gt; file in a directory you want&lt;/li&gt; &#xA; &lt;li&gt;Add the path of &lt;code&gt;chatgpt.sh&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;. You do that by adding this line to your shell profile: &lt;code&gt;export PATH=$PATH:/path/to/chatgpt.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the OpenAI API key to your shell profile by adding this line &lt;code&gt;export OPENAI_KEY=your_key_here&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are using iTerm and want to view images in terminal, install &lt;a href=&#34;https://iterm2.com/utilities/imgcat&#34;&gt;imgcat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Start&lt;/h3&gt; &#xA;&lt;h4&gt;Chat Mode&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the script by using the &lt;code&gt;chatgpt&lt;/code&gt; command anywhere. By default the script uses the &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; model.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Pipe Mode&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can also use it in pipe mode &lt;code&gt;echo &#34;What is the command to get all pdf files created yesterday?&#34; | chatgpt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Script Parameters&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can also pass the prompt as a command line argument &lt;code&gt;chatgpt -p &#34;What is the regex to match an email address?&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;image:&lt;/code&gt; To generate images, start a prompt with &lt;code&gt;image:&lt;/code&gt; If you are using iTerm, you can view the image directly in the terminal. Otherwise the script will ask to open the image in your browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;history&lt;/code&gt; To view your chat history, type &lt;code&gt;history&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;models&lt;/code&gt; To get a list of the models available at OpenAI API, type &lt;code&gt;models&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;model:&lt;/code&gt; To view all the information on a specific model, start a prompt with &lt;code&gt;model:&lt;/code&gt; and the model &lt;code&gt;id&lt;/code&gt; as it appears in the list of models. For example: &lt;code&gt;model:text-babbage:001&lt;/code&gt; will get you all the fields for &lt;code&gt;text-babbage:001&lt;/code&gt; model&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;command:&lt;/code&gt; To get a command with the specified functionality and run it, just type &lt;code&gt;command:&lt;/code&gt; and explain what you want to achieve. The script will always ask you if you want to execute the command. i.e. &lt;code&gt;command: show me all files in this directory that have more than 150 lines of code&lt;/code&gt; &lt;em&gt;If a command modifies your file system or dowloads external files the script will show a warning before executing.&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Chat context&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For models other than &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; and &lt;code&gt;gpt-4&lt;/code&gt; where the chat context is not supported by the OpenAI api, you can use the chat context build in this script. You can enable chat context mode for the model to remember your previous chat questions and answers. This way you can ask follow-up questions. In chat context the model gets a prompt to act as ChatGPT and is aware of today&#39;s date and that it&#39;s trained with data up until 2021. To enable this mode start the script with &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--chat-context&lt;/code&gt;. i.e. &lt;code&gt;chatgpt --chat-context&lt;/code&gt; and start to chat.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Set chat initial prompt&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can set your own initial chat prompt to use in chat context mode. The initial prompt will be sent on every request along with your regular prompt so that the OpenAI model will &#34;stay in character&#34;. To set your own custom initial chat prompt use &lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;--init-prompt&lt;/code&gt; followed by your initial prompt i.e. &lt;code&gt;chatgpt -i &#34;You are Rick from Rick and Morty, reply with references to episodes.&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can also set an initial chat prompt from a file with &lt;code&gt;--init-prompt-from-file&lt;/code&gt; i.e. &lt;code&gt;chatgpt --init-prompt-from-file myprompt.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*When you set an initial prompt you don&#39;t need to enable the chat context.&lt;/p&gt; &#xA;&lt;h3&gt;Use the official ChatGPT model&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default model used when starting the script is &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use GPT4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have access to the GPT4 model you can use it by setting the model to &lt;code&gt;gpt-4&lt;/code&gt;, i.e. &lt;code&gt;chatgpt --model gpt-4&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Set request parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To set request parameters you can start the script like this: &lt;code&gt;chatgpt --temperature 0.9 --model text-babbage:001 --max-tokens 100 --size 1024x1024&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The available parameters are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;temperature, &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--temperature&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;model, &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--model&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;max number of tokens, &lt;code&gt;--max-tokens&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;image size, &lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--size&lt;/code&gt; (The sizes that are accepted by the OpenAI API are 256x256, 512x512, 1024x1024)&lt;/li&gt; &#xA;   &lt;li&gt;prompt, &lt;code&gt;-p&lt;/code&gt; or &lt;code&gt;--prompt&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;prompt from a file in your file system, &lt;code&gt;--prompt-from-file&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;To learn more about these parameters you can view the &lt;a href=&#34;https://platform.openai.com/docs/api-reference/completions/create&#34;&gt;API documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;🙏&lt;/span&gt; Thanks to all the people who used, tested, submitted issues, PRs and proposed changes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.github.com/pfr-dev&#34;&gt;pfr-dev&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/jordantrizz&#34;&gt;jordantrizz&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/se7en-x230&#34;&gt;se7en-x230&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/mountaineerbr&#34;&gt;mountaineerbr&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/oligeo&#34;&gt;oligeo&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/biaocy&#34;&gt;biaocy&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/dmd&#34;&gt;dmd&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/goosegit11&#34;&gt;goosegit11&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/dilatedpupils&#34;&gt;dilatedpupils&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/direster&#34;&gt;direster&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/rxaviers&#34;&gt;rxaviers&lt;/a&gt;, &lt;a href=&#34;https://www.github.com/Zeioth&#34;&gt;Zeioth&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>