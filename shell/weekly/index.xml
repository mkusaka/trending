<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T02:21:54Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MichaelCade/90DaysOfDevOps</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/MichaelCade/90DaysOfDevOps</id>
    <link href="https://github.com/MichaelCade/90DaysOfDevOps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is my documenting repository for learning the world of DevOps. I started this journey on the 1st January 2022 and I plan to run to March 31st for a complete 90-day romp on spending an hour a day including weekends to get a foundational knowledge across a lot of different areas that make up DevOps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;90DaysOfDevOps&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/logo.png?raw=true&#34; alt=&#34;90DaysOfDevOps Logo&#34; width=&#34;50%&#34; height=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;English Version | &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/zh_cn/README.md&#34;&gt;中文版本&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/zh_tw/README.md&#34;&gt;繁體中文版本&lt;/a&gt;| &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/ja/README.md&#34;&gt;日本語版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is used to document my journey on getting a better foundational knowledge of &#34;DevOps&#34;. I will be starting this journey on the 1st January 2022 but the idea is that we take 90 days which just so happens to be January 1st to March 31st.&lt;/p&gt; &#xA;&lt;p&gt;The reason for documenting these days is so that others can take something from it and also hopefully enhance the resources.&lt;/p&gt; &#xA;&lt;p&gt;The goal is to take 90 days, 1 hour each a day, to tackle over 13 areas of &#34;DevOps&#34; to a foundational knowledge.&lt;/p&gt; &#xA;&lt;p&gt;This will &lt;strong&gt;not cover all things&lt;/strong&gt; &#34;DevOps&#34; but it will cover the areas that I feel will benefit my learning and understanding overall.&lt;/p&gt; &#xA;&lt;p&gt;The quickest way to get in touch is going to be via Twitter, my handle is &lt;a href=&#34;https://twitter.com/MichaelCade1&#34;&gt;@MichaelCade1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ♾️ 1 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day01.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What is and why do we use DevOps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ♾️ 2 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day02.md&#34;&gt;Responsibilities of a DevOps Engineer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 3 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day03.md&#34;&gt;DevOps Lifecycle - Application Focused&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 4 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day04.md&#34;&gt;DevOps &amp;amp; Agile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 5 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day05.md&#34;&gt;Plan &amp;gt; Code &amp;gt; Build &amp;gt; Testing &amp;gt; Release &amp;gt; Deploy &amp;gt; Operate &amp;gt; Monitor &amp;gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ♾️ 6 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day06.md&#34;&gt;DevOps - The real stories&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learning a Programming Language&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 7 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day07.md&#34;&gt;The Big Picture: DevOps &amp;amp; Learning a Programming Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 8 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day08.md&#34;&gt;Setting up your DevOps environment for Go &amp;amp; Hello World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 9 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day09.md&#34;&gt;Let&#39;s explain the Hello World code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 10 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day10.md&#34;&gt;The Go Workspace &amp;amp; Compiling &amp;amp; running code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 11 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day11.md&#34;&gt;Variables, Constants &amp;amp; Data Types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 12 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day12.md&#34;&gt;Getting user input with Pointers and a finished program&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ⌨️ 13 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day13.md&#34;&gt;Tweet your progress with our new App&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Knowing Linux Basics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🐧 14 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day14.md&#34;&gt;The Big Picture: DevOps and Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 15 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day15.md&#34;&gt;Linux Commands for DevOps (Actually everyone)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 16 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day16.md&#34;&gt;Managing your Linux System, Filesystem &amp;amp; Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 17 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day17.md&#34;&gt;Text Editors - nano vs vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 18 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day18.md&#34;&gt;SSH &amp;amp; Web Server(LAMP)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 19 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day19.md&#34;&gt;Automate tasks with bash scripts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🐧 20 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day20.md&#34;&gt;Dev workstation setup - All the pretty things&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Understand Networking&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🌐 21 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day21.md&#34;&gt;The Big Picture: DevOps and Networking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 22 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day22.md&#34;&gt;The OSI Model - The 7 Layers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 23 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day23.md&#34;&gt;Network Protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 24 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day24.md&#34;&gt;Network Automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 25 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day25.md&#34;&gt;Python for Network Automation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 26 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day26.md&#34;&gt;Building our Lab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🌐 27 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day27.md&#34;&gt;Getting Hands-On with Python &amp;amp; Network&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stick to one Cloud Provider&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ☁️ 28 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day28.md&#34;&gt;The Big Picture: DevOps &amp;amp; The Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 29 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day29.md&#34;&gt;Microsoft Azure Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 30 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day30.md&#34;&gt;Microsoft Azure Security Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 31 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day31.md&#34;&gt;Microsoft Azure Compute Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 32 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day32.md&#34;&gt;Microsoft Azure Storage &amp;amp; Database Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 33 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day33.md&#34;&gt;Microsoft Azure Networking Models + Azure Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☁️ 34 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day34.md&#34;&gt;Microsoft Azure Hands-On Scenarios&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Git Effectively&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📚 35 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day35.md&#34;&gt;The Big Picture: Git - Version Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 36 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day36.md&#34;&gt;Installing &amp;amp; Configuring Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 37 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day37.md&#34;&gt;Gitting to know Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 38 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day38.md&#34;&gt;Staging &amp;amp; Changing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 39 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day39.md&#34;&gt;Viewing, unstaging, discarding &amp;amp; restoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 40 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day40.md&#34;&gt;Social Network for code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📚 41 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day41.md&#34;&gt;The Open Source Workflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 42 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day42.md&#34;&gt;The Big Picture: Containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 43 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day43.md&#34;&gt;What is Docker &amp;amp; Getting installed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 44 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day44.md&#34;&gt;Docker Images &amp;amp; Hands-On with Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 45 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day45.md&#34;&gt;The anatomy of a Docker Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 46 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day46.md&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 47 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day47.md&#34;&gt;Docker Networking &amp;amp; Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🏗️ 48 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day48.md&#34;&gt;Alternatives to Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] ☸ 49 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day49.md&#34;&gt;The Big Picture: Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 50 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day50.md&#34;&gt;Choosing your Kubernetes platform &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 51 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day51.md&#34;&gt;Deploying your first Kubernetes Cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 52 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day52.md&#34;&gt;Setting up a multinode Kubernetes Cluster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 53 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day53.md&#34;&gt;Rancher Overview - Hands On&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 54 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day54.md&#34;&gt;Kubernetes Application Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] ☸ 55 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day55.md&#34;&gt;State and Ingress in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learn Infrastructure as Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🤖 56 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day56.md&#34;&gt;The Big Picture: IaC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 57 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day57.md&#34;&gt;An intro to Terraform &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 58 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day58.md&#34;&gt;HashiCorp Configuration Language (HCL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 59 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day59.md&#34;&gt;Create a VM with Terraform &amp;amp; Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 60 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day60.md&#34;&gt;Docker Containers, Provisioners &amp;amp; Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 61 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day61.md&#34;&gt;Kubernetes &amp;amp; Multiple Environments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🤖 62 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day62.md&#34;&gt;Testing, Tools &amp;amp; Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Automate Configuration Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📜 63 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day63.md&#34;&gt;The Big Picture: Configuration Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 64 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day64.md&#34;&gt;Ansible: Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 65 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day65.md&#34;&gt;Ansible Playbooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 66 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day66.md&#34;&gt;Ansible Playbooks Continued...&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 67 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day67.md&#34;&gt;Using Roles &amp;amp; Deploying a Loadbalancer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 68 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day68.md&#34;&gt;Tags, Variables, Inventory &amp;amp; Database Server config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📜 69 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day69.md&#34;&gt;All other things Ansible - Automation Controller, AWX, Vault&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Create CI/CD Pipelines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🔄 70 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day70.md&#34;&gt;The Big Picture: CI/CD Pipelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 71 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day71.md&#34;&gt;What is Jenkins?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 72 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day72.md&#34;&gt;Getting hands on with Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 73 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day73.md&#34;&gt;Building a Jenkins pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 74 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day74.md&#34;&gt;Hello World - Jenkinsfile App Pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 75 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day75.md&#34;&gt;GitHub Actions Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🔄 76 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day76.md&#34;&gt;ArgoCD Overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring, Log Management, and Data Visualisation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 📈 77 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day77.md&#34;&gt;The Big Picture: Monitoring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 78 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day78.md&#34;&gt;Hands-On Monitoring Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 79 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day79.md&#34;&gt;The Big Picture: Log Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 80 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day80.md&#34;&gt;ELK Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 81 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day81.md&#34;&gt;Fluentd &amp;amp; FluentBit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 82 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day82.md&#34;&gt;EFK Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 📈 83 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day83.md&#34;&gt;Data Visualisation - Grafana&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Store &amp;amp; Protect Your Data&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 84 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day84.md&#34;&gt;The Big Picture: Data Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 85 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day85.md&#34;&gt;Data Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 86 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day86.md&#34;&gt;Backup all the platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 87 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day87.md&#34;&gt;Hands-On Backup &amp;amp; Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 88 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day88.md&#34;&gt;Application Focused Backups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 89 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day89.md&#34;&gt;Disaster Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[✔️] 🗃️ 90 &amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/Days/day90.md&#34;&gt;Data &amp;amp; Application Mobility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Shield: &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg?sanitize=true&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png&#34; alt=&#34;CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#MichaelCade/90DaysOfDevOps&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=MichaelCade/90DaysOfDevOps&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kj89/testnet_manuals</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/kj89/testnet_manuals</id>
    <link href="https://github.com/kj89/testnet_manuals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;This page contain tutorials on how to deploy various crypto project servers&lt;/h3&gt; &#xA;&lt;p style=&#34;font-size:14px&#34; align=&#34;center&#34;&gt; Join our telegram &lt;a href=&#34;https://t.me/kjnotes&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/50621007/168689534-796f181e-3e4c-43a5-8183-9888fc92cfa7.png&#34; width=&#34;30&#34;&gt;&lt;/a&gt; Visit our website &lt;a href=&#34;https://kjnodes.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/50621007/168689709-7e537ca6-b6b8-4adc-9bd0-186ea4ea4aed.png&#34; width=&#34;30&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>termux/termux-packages</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/termux/termux-packages</id>
    <link href="https://github.com/termux/termux-packages" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A build system and primary set of packages for Termux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Termux packages&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/termux/termux-packages&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;a href=&#34;https://github.com/termux/termux-packages/actions&#34;&gt;&lt;img src=&#34;https://github.com/termux/termux-packages/workflows/Packages/badge.svg?sanitize=true&#34; alt=&#34;Packages last build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/termux/package-builder&#34;&gt;&lt;img src=&#34;https://github.com/termux/termux-packages/workflows/Docker%20image/badge.svg?sanitize=true&#34; alt=&#34;Docker image status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/repository/termux&#34;&gt;&lt;img src=&#34;https://github.com/termux/repology-metadata/workflows/Repology%20metadata/badge.svg?sanitize=true&#34; alt=&#34;Repology metadata&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/termux/termux&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/termux/termux.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/termux/termux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/HXpF69X&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/641256914684084234.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2&#34; alt=&#34;Join the Termux discord server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/termux/termux-packages/master/.github/static/powered-by-fosshost.png&#34; alt=&#34;Powered by FossHost&#34; width=&#34;128px&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project contains scripts and patches to build packages for the &lt;a href=&#34;https://github.com/termux/termux-app&#34;&gt;Termux&lt;/a&gt; Android application.&lt;/p&gt; &#xA;&lt;p&gt;Quick how-to about Termux package management is available at &lt;a href=&#34;https://github.com/termux/termux-packages/wiki/Package-Management&#34;&gt;Package Management&lt;/a&gt;. It also has info on how to fix &lt;strong&gt;&lt;code&gt;repository is under maintenance or down&lt;/code&gt;&lt;/strong&gt; errors when running &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pkg&lt;/code&gt; commands.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/termux/termux-packages/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&#34;https://github.com/termux/termux-packages/wiki&#34;&gt;Developer&#39;s Wiki&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;General mailing list: &lt;a href=&#34;https://groups.io/g/termux&#34;&gt;https://groups.io/g/termux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Developer mailing list: &lt;a href=&#34;https://groups.io/g/termux-dev&#34;&gt;https://groups.io/g/termux-dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;General chat: &lt;a href=&#34;https://gitter.im/termux/termux&#34;&gt;https://gitter.im/termux/termux&lt;/a&gt; or #termux on IRC/libera.chat.&lt;/p&gt; &#xA;&lt;p&gt;Developer chat: &lt;a href=&#34;https://gitter.im/termux/dev&#34;&gt;https://gitter.im/termux/dev&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SeleniumHQ/docker-selenium</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/SeleniumHQ/docker-selenium</id>
    <link href="https://github.com/SeleniumHQ/docker-selenium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images for Selenium Grid&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/workflows/Build%20&amp;amp;%20test/badge.svg?branch=trunk&#34; alt=&#34;Build &amp;amp; test&#34;&gt; &lt;img src=&#34;https://github.com/SeleniumHQ/docker-selenium/workflows/Deploys/badge.svg?sanitize=true&#34; alt=&#34;Deployments&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Docker images for the Selenium Grid Server&lt;/h1&gt; &#xA;&lt;p&gt;The project is made possible by volunteer contributors who have put in thousands of hours of their own time, and made the source code freely available under the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/LICENSE.md&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These Docker images come with a handful of tags to simplify its usage, have a look at them in one of our &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/releases/tag/4.2.0-20220527&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get notifications of new releases, add yourself as a &#34;Releases only&#34; watcher.&lt;/p&gt; &#xA;&lt;p&gt;These images are published to the Docker Hub registry at &lt;a href=&#34;https://hub.docker.com/u/selenium&#34;&gt;Selenium Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Do you need help to use these Docker images? Talk to us at &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;https://www.selenium.dev/support/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#experimental-mult-arch-aarch64armhfamd64-images&#34;&gt;Experimental Mult-Arch aarch64/armhf/amd64 Images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-modes&#34;&gt;Execution modes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#standalone&#34;&gt;Standalone&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#hub-and-nodes&#34;&gt;Hub and Nodes&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#docker-networking&#34;&gt;Docker networking&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-different-machinesvms&#34;&gt;Using different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#fully-distributed-mode---router-queue-distributor-eventbus-sessionmap-and-nodes&#34;&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording&#34;&gt;Video recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#dynamic-grid&#34;&gt;Dynamic Grid&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuration-example&#34;&gt;Configuration example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-hub--node-roles&#34;&gt;Execution with Hub &amp;amp; Node roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-standalone-roles&#34;&gt;Execution with Standalone roles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#using-dynamic-grid-in-different-machinesvms&#34;&gt;Using Dynamic Grid in different machines/VMs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#execution-with-docker-compose&#34;&gt;Execution with Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#video-recording-screen-resolution-and-time-zones-in-a-dynamic-grid&#34;&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#deploying-to-kubernetes&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#configuring-the-containers&#34;&gt;Configuring the containers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#se_opts-selenium-configuration-options&#34;&gt;SE_OPTS Selenium Configuration Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#java_opts-java-environment-options&#34;&gt;JAVA_OPTS Java Environment Options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#node-configuration-options&#34;&gt;Node configuration options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#setting-screen-resolution&#34;&gt;Setting Screen Resolution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#grid-url-and-session-timeout&#34;&gt;Grid Url and Session Timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#session-request-timeout&#34;&gt;Session request timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#increasing-session-concurrency-per-container&#34;&gt;Increasing session concurrency per container&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#running-in-headless-mode&#34;&gt;Running in Headless mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#building-the-images&#34;&gt;Building the images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#waiting-for-the-grid-to-be-ready&#34;&gt;Waiting for the Grid to be ready&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start a Docker container with Firefox&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Point your WebDriver tests to &lt;a href=&#34;http://localhost:4444&#34;&gt;http://localhost:4444&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;That&#39;s it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(Optional) To see what is happening inside the container, head to &lt;a href=&#34;http://localhost:7900&#34;&gt;http://localhost:7900&lt;/a&gt; (password is &lt;code&gt;secret&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;More details about visualising the container activity, check the &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/#debugging&#34;&gt;Debugging&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; When executing &lt;code&gt;docker run&lt;/code&gt; for an image that contains a browser please use the flag &lt;code&gt;--shm-size=2g&lt;/code&gt; to use the host&#39;s shared memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;☝&lt;/span&gt; Always use a Docker image with a full tag to pin a specific browser and Grid version. See &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/wiki/Tagging-Convention&#34;&gt;Tagging Conventions&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Experimental Mult-Arch aarch64/armhf/amd64 Images&lt;/h2&gt; &#xA;&lt;p&gt;For experimental docker container images, which run on platforms such as the Mac M1 or Raspberry Pi, see the community driven repository hosted at &lt;a href=&#34;https://github.com/seleniumhq-community/docker-seleniarm&#34;&gt;seleniumhq-community/docker-seleniarm&lt;/a&gt;. These images are built for three separate architectures: linux/arm64 (aarch64), linux/arm/v7 (armhf), and linux/amd64.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, these experimental container images are published on &lt;a href=&#34;https://hub.docker.com/u/seleniarm&#34;&gt;Seleniarm Docker Hub&lt;/a&gt; registry.&lt;/p&gt; &#xA;&lt;p&gt;See issue &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1076&#34;&gt;#1076&lt;/a&gt; for more information on these images.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re working on an Intel or AMD64 architecture, we recommend using the container images in &lt;em&gt;this&lt;/em&gt; repository (SeleniumHQ/docker-selenium) instead of the experimental ones.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Execution modes&lt;/h2&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_24x24.png&#34; alt=&#34;Firefox&#34;&gt; Firefox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_24x24.png&#34; alt=&#34;Chrome&#34;&gt; Chrome&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_24x24.png&#34; alt=&#34;Edge&#34;&gt; Edge&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Only one Standalone container can run on port&lt;/em&gt; &lt;code&gt;4444&lt;/code&gt; &lt;em&gt;at the same time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Hub and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;There are different ways to run the images and create a Grid with a Hub and Nodes, check the following options.&lt;/p&gt; &#xA;&lt;h4&gt;Docker networking&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created in the same network and they will recognize each other by their container name. A Docker &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_create/&#34;&gt;network&lt;/a&gt; needs to be created as a first step.&lt;/p&gt; &#xA;&lt;h5&gt;macOS/Linux&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-chrome:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-edge:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    selenium/node-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows PowerShell&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-chrome:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-edge:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    selenium/node-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using different machines/VMs&lt;/h4&gt; &#xA;&lt;p&gt;The Hub and Nodes will be created on different machines/VMs, they need to know each other&#39;s IPs to communicate properly. If more than one node will be running on the same Machine/VM, they must be configured to expose different ports.&lt;/p&gt; &#xA;&lt;h5&gt;Hub - Machine/VM 1&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 2&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; \&#xA;    selenium/node-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-2&amp;gt; `&#xA;    selenium/node-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Edge - Machine/VM 3&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; \&#xA;    selenium/node-edge:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-3&amp;gt; `&#xA;    selenium/node-edge:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Firefox - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    selenium/node-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    selenium/node-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Node Chrome - Machine/VM 4&lt;/h5&gt; &#xA;&lt;h6&gt;macOS/Linux&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5556:5556 \&#xA;    --shm-size=&#34;2g&#34; \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; \&#xA;    -e SE_NODE_PORT=5556 \&#xA;    selenium/node-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Windows PowerShell&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker run -d -p 5556:5556 `&#xA;    --shm-size=&#34;2g&#34; `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -e SE_NODE_HOST=&amp;lt;ip-from-machine-4&amp;gt; `&#xA;    -e SE_NODE_PORT=5556 `&#xA;    selenium/node-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Compose&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; is the simplest way to start a Grid. Use the linked resources below, save them locally, and check the execution instructions on top of each file.&lt;/p&gt; &#xA;&lt;h5&gt;Version 2&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v2.yml&#34;&gt;&lt;code&gt;docker-compose-v2.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Version 3&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3.yml&#34;&gt;&lt;code&gt;docker-compose-v3.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To stop the Grid and cleanup the created containers, run &lt;code&gt;docker-compose down&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Version 3 with Swarm support&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-swarm.yml&#34;&gt;&lt;code&gt;docker-compose-v3-swarm.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Fully distributed mode - Router, Queue, Distributor, EventBus, SessionMap and Nodes&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to start a Selenium Grid with all its components apart. For simplicity, only an example with docker-compose will be provided. Save the file locally, and check the execution instructions on top of it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-full-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-full-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Video recording&lt;/h2&gt; &#xA;&lt;p&gt;Tests execution can be recorded by using the &lt;code&gt;selenium/video:ffmpeg-4.3.1-20220527&lt;/code&gt; Docker image. One container is needed per each container where a browser is running. This means if you are running 5 Nodes/Standalone containers, you will need 5 video containers, the mapping is 1-1.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the only way to do this mapping is manually (either starting the containers manually, or through &lt;code&gt;docker-compose&lt;/code&gt;). We are iterating on this process and probably this setup will be more simple in the future.&lt;/p&gt; &#xA;&lt;p&gt;The video Docker image we provide is based on the ffmpeg Ubuntu image provided by the &lt;a href=&#34;https://github.com/jrottenberg/ffmpeg&#34;&gt;jrottenberg/ffmpeg&lt;/a&gt; project, thank you for providing this image and simplifying our work &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have questions or feedback, please use the community contact points shown &lt;a href=&#34;https://www.selenium.dev/support/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please report any bugs through GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/new/choose&#34;&gt;issues&lt;/a&gt;, and provide all the information requested on the template.&lt;/li&gt; &#xA; &lt;li&gt;Video recording for headless browsers is not supported.&lt;/li&gt; &#xA; &lt;li&gt;Video recording tends to use considerable amounts of CPU. Normally you should estimate 1CPU per video container, and 1 CPU per browser container.&lt;/li&gt; &#xA; &lt;li&gt;Videos are stored in the &lt;code&gt;/videos&lt;/code&gt; directory inside the video container. Map a local directory to get the videos.&lt;/li&gt; &#xA; &lt;li&gt;If you are running more than one video container, be sure to overwrite the video file name through the &lt;code&gt;FILE_NAME&lt;/code&gt; environment variable to avoid unexpected results.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This example shows how to start the containers manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4444:4444 -p 6900:5900 --net grid --name selenium --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.0-20220527&#xA;$ docker run -d --net grid --name video -v /tmp/videos:/videos selenium/video:ffmpeg-4.3.1-20220527&#xA;# Run your tests&#xA;$ docker stop video &amp;amp;&amp;amp; docker rm video&#xA;$ docker stop selenium &amp;amp;&amp;amp; docker rm selenium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the containers are stopped and removed, you should see a video file on your machine&#39;s &lt;code&gt;/tmp/videos&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a few Nodes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-video.yml&#34;&gt;&lt;code&gt;docker-compose-v3-video.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dynamic Grid&lt;/h2&gt; &#xA;&lt;p&gt;Grid 4 has the ability to start Docker containers on demand, this means that it starts a Docker container in the background for each new session request, the test gets executed there, and when the test completes, the container gets thrown away.&lt;/p&gt; &#xA;&lt;p&gt;This execution mode can be used either in the Standalone or Node roles. The &#34;dynamic&#34; execution mode needs to be told what Docker images to use when the containers get started. Additionally, the Grid needs to know the URI of the Docker daemon.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration example&lt;/h3&gt; &#xA;&lt;p&gt;You can save this file locally and name it, for example, &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.2.0-20220527&#34;, &#34;{\&#34;browserName\&#34;: \&#34;firefox\&#34;}&#34;,&#xA;    &#34;selenium/standalone-chrome:4.2.0-20220527&#34;, &#34;{\&#34;browserName\&#34;: \&#34;chrome\&#34;}&#34;,&#xA;    &#34;selenium/standalone-edge:4.2.0-20220527&#34;, &#34;{\&#34;browserName\&#34;: \&#34;MicrosoftEdge\&#34;}&#34;&#xA;    ]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-4.3.1-20220527&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;#[server]&#xA;#host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;#port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Hub &amp;amp; Node roles&lt;/h3&gt; &#xA;&lt;p&gt;This can be expanded to a full Grid deployment, all components deployed individually. The overall idea is to have the Hub in one virtual machine, and each of the Nodes in separate and more powerful virtual machines.&lt;/p&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.2.0-20220527&#xA;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you are done using the Grid, and the containers have exited, the network can be removed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Removes the grid network&#xA;$ docker network rm grid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution with Standalone roles&lt;/h3&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/standalone-docker:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --name selenium-docker -p 4444:4444 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/standalone-docker:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Dynamic Grid in different machines/VMs&lt;/h3&gt; &#xA;&lt;h4&gt;Hub - Machine/VM 1&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Node Chrome - Machine/VM 2&lt;/h4&gt; &#xA;&lt;h4&gt;macOS/Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 \&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; \&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml \&#xA;    -v ${PWD}/assets:/opt/selenium/assets \&#xA;    -v /var/run/docker.sock:/var/run/docker.sock \&#xA;    selenium/node-docker:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows PowerShell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 5555:5555 `&#xA;    -e SE_EVENT_BUS_HOST=&amp;lt;ip-from-machine-1&amp;gt; `&#xA;    -e SE_EVENT_BUS_PUBLISH_PORT=4442 `&#xA;    -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 `&#xA;    -v ${PWD}/config.toml:/opt/bin/config.toml `&#xA;    -v ${PWD}/assets:/opt/selenium/assets `&#xA;    -v /var/run/docker.sock:/var/run/docker.sock `&#xA;    selenium/node-docker:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Complete the &lt;code&gt;[server]&lt;/code&gt; section in the &lt;code&gt;config.toml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[docker]&#xA;# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to&#xA;# start a container with the given image.&#xA;configs = [&#xA;    &#34;selenium/standalone-firefox:4.2.0-20220527&#34;, &#34;{\&#34;browserName\&#34;: \&#34;firefox\&#34;}&#34;,&#xA;    &#34;selenium/standalone-chrome:4.2.0-20220527&#34;, &#34;{\&#34;browserName\&#34;: \&#34;chrome\&#34;}&#34;,&#xA;    &#34;selenium/standalone-edge:4.2.0-20220527&#34;, &#34;{\&#34;browserName\&#34;: \&#34;MicrosoftEdge\&#34;}&#34;&#xA;    ]&#xA;&#xA;# URL for connecting to the docker daemon&#xA;# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.&#xA;# 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted &#xA;# If var/run/docker.sock is not mounted: &#xA;# Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.&#xA;# macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,&#xA;# then use http://host.docker.internal:2375.&#xA;# Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.&#xA;url = &#34;http://127.0.0.1:2375&#34;&#xA;# Docker image used for video recording&#xA;video-image = &#34;selenium/video:ffmpeg-4.3.1-20220527&#34;&#xA;&#xA;# Uncomment the following section if you are running the node on a separate VM&#xA;# Fill out the placeholders with appropriate values&#xA;[server]&#xA;host = &amp;lt;ip-from-node-machine&amp;gt;&#xA;port = &amp;lt;port-from-node-machine&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have the assets saved on your host, please mount your host path to &lt;code&gt;/opt/selenium/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Execution with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Here is an example using a Hub and a Node:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/docker-compose-v3-dynamic-grid.yml&#34;&gt;&lt;code&gt;docker-compose-v3-dynamic-grid.yml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Video recording, screen resolution, and time zones in a Dynamic Grid&lt;/h3&gt; &#xA;&lt;p&gt;To record your WebDriver session, you need to add a &lt;code&gt;se:recordVideo&lt;/code&gt; field set to &lt;code&gt;true&lt;/code&gt;. You can also set a time zone and a screen resolution, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;browserName&#34;: &#34;firefox&#34;,&#xA;  &#34;platformName&#34;: &#34;linux&#34;,&#xA;  &#34;se:recordVideo&#34;: &#34;true&#34;,&#xA;  &#34;se:timeZone&#34;: &#34;US/Pacific&#34;,&#xA;  &#34;se:screenResolution&#34;: &#34;1920x1080&#34;  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running a test, check the path you mounted to the Docker container, (&lt;code&gt;${PWD}/assets&lt;/code&gt;), and you should see videos and session information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploying to Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;We offer a Helm chart to deploy these Docker images to Kubernetes. Read more details at the Helm &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/charts/selenium-grid/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Configuring the containers&lt;/h2&gt; &#xA;&lt;h3&gt;SE_OPTS Selenium Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;SE_OPTS&lt;/code&gt; variable with additional commandline parameters for starting a hub or a node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e SE_OPTS=&#34;--log-level FINE&#34; --name selenium-hub selenium/hub:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JAVA_OPTS Java Environment Options&lt;/h3&gt; &#xA;&lt;p&gt;You can pass &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable to java process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -e JAVA_OPTS=-Xmx512m --name selenium-hub selenium/hub:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Node configuration options&lt;/h3&gt; &#xA;&lt;p&gt;The Nodes register themselves through the Event Bus. When the Grid is started in its typical Hub/Node setup, the Hub will be the one acting as the Event Bus, and when the Grid is started with all its five elements apart, the Event Bus will be running on its own.&lt;/p&gt; &#xA;&lt;p&gt;In both cases, it is necessary to tell the Node where the Event Bus is, so it can register itself. That is the purpose of the &lt;code&gt;SE_EVENT_BUS_HOST&lt;/code&gt;, &lt;code&gt;SE_EVENT_BUS_PUBLISH_PORT&lt;/code&gt; and &lt;code&gt;SE_EVENT_BUS_SUBSCRIBE_PORT&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the default values of these environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -e SE_EVENT_BUS_HOST=&amp;lt;event_bus_ip|event_bus_name&amp;gt; -e SE_EVENT_BUS_PUBLISH_PORT=4442 \ &#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 --shm-size=&#34;2g&#34; selenium/node-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Screen Resolution&lt;/h3&gt; &#xA;&lt;p&gt;By default, nodes start with a screen resolution of 1360 x 1020 with a color depth of 24 bits and a dpi of 96. These settings can be adjusted by specifying &lt;code&gt;SCREEN_WIDTH&lt;/code&gt;, &lt;code&gt;SCREEN_HEIGHT&lt;/code&gt;, &lt;code&gt;SCREEN_DEPTH&lt;/code&gt;, and/or &lt;code&gt;SCREEN_DPI&lt;/code&gt; environmental variables when starting the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -e SCREEN_WIDTH=1366 -e SCREEN_HEIGHT=768 -e SCREEN_DEPTH=24 -e SCREEN_DPI=74 selenium/standalone-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Grid Url and Session Timeout&lt;/h3&gt; &#xA;&lt;p&gt;In some use cases you might need to set the Grid url to the Node, for example if you&#39;d like to access the BiDi/CDP endpoint. This is also needed when you want to use the new &lt;code&gt;RemoteWebDriver.builder()&lt;/code&gt; or &lt;code&gt;Augmenter()&lt;/code&gt; present in Selenium 4 (since they setup the BiDi/CDP connection implicitly). You can do that through the &lt;code&gt;SE_NODE_GRID_URL&lt;/code&gt; environment variable. Setting this env var is needed if you want to see the live view while sessions are executing.&lt;/p&gt; &#xA;&lt;p&gt;Grid has a default session timeout of 300 seconds, where the session can be on a stale state until it is killed. You can use &lt;code&gt;SE_NODE_SESSION_TIMEOUT&lt;/code&gt; to overwrite that value in seconds.&lt;/p&gt; &#xA;&lt;h3&gt;Session request timeout&lt;/h3&gt; &#xA;&lt;p&gt;A new session request is placed in the Session Queue before it is processed, and the request sits in the queue until a matching slot is found across the registered Nodes. However, the new session request might timeout if no slot was found. By default, a request will stay in the queue up to 300 seconds before it a timeout is reached. In addition, an attempt to process the request is done every 5 seconds (by default).&lt;/p&gt; &#xA;&lt;p&gt;It is possible to override those values through environment variables in the Hub and the SessionQueue (&lt;code&gt;SE_SESSION_REQUEST_TIMEOUT&lt;/code&gt; and &lt;code&gt;SE_SESSION_RETRY_INTERVAL&lt;/code&gt;). For example, a timeout of 500 seconds would be &lt;code&gt;SE_SESSION_REQUEST_TIMEOUT=500&lt;/code&gt; and a retry interval of 2 seconds would be &lt;code&gt;SE_SESSION_RETRY_INTERVAL=2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Increasing session concurrency per container&lt;/h3&gt; &#xA;&lt;p&gt;By default, only one session is configured to run per container through the &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; environment variable. It is possible to increase that number up to the maximum available processors, this is because more stability is achieved when one container/browser has 1 CPU to run.&lt;/p&gt; &#xA;&lt;p&gt;However, if you have measured performance and based on that, you think more sessions can be executed in each container, you can override the maximum limit by setting both &lt;code&gt;SE_NODE_MAX_SESSIONS&lt;/code&gt; to a desired number and &lt;code&gt;SE_NODE_OVERRIDE_MAX_SESSIONS&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Nevertheless, running more browser sessions than the available processors is not recommended since you will be overloading the resources.&lt;/p&gt; &#xA;&lt;p&gt;Overriding this setting has a undesired side effect when video recording is enabled, since more than one browser session might be captured in the same video.&lt;/p&gt; &#xA;&lt;h3&gt;Running in Headless mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/web/updates/2017/04/headless-chrome&#34;&gt;Chrome&lt;/a&gt;, When using headless mode, there&#39;s no need for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Xvfb&#34;&gt;Xvfb&lt;/a&gt; server to be started.&lt;/p&gt; &#xA;&lt;p&gt;To avoid starting the server you can set the &lt;code&gt;START_XVFB&lt;/code&gt; environment variable to &lt;code&gt;false&lt;/code&gt; (or any other value than &lt;code&gt;true&lt;/code&gt;), for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 \&#xA;  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 -e START_XVFB=false --shm-size=&#34;2g&#34; selenium/node-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see this GitHub &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/567&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stopping the Node/Standalone after N sessions have been executed&lt;/h3&gt; &#xA;&lt;p&gt;In some environments, like Docker Swarm or Kubernetes, it is useful to shut down the Node or Standalone container after N tests have been executed. For example, this can be used in Kubernetes to terminate the pod and then scale a new one after N sessions. Set the environment variable &lt;code&gt;DRAIN_AFTER_SESSION_COUNT&lt;/code&gt; to a value higher than zero to enable this behaviour.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -e DRAIN_AFTER_SESSION_COUNT=5 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the previous command, the Standalone container will shutdown after 5 sessions have been executed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Building the images&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo and from the project directory root you can build everything by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ VERSION=local make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to configure environment variable in order to build the image (http proxy for instance), simply set an environment variable &lt;code&gt;BUILD_ARGS&lt;/code&gt; that contains the additional variables to pass to the docker context (this will only work with docker &amp;gt;= 1.9)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ BUILD_ARGS=&#34;--build-arg http_proxy=http://acme:3128 --build-arg https_proxy=http://acme:3128&#34; make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Omitting&lt;/em&gt; &lt;code&gt;VERSION=local&lt;/code&gt; &lt;em&gt;will build the images with the released version but replacing the date for the current one.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Waiting for the Grid to be ready&lt;/h2&gt; &#xA;&lt;p&gt;It is a good practice to check first if the Grid is up and ready to receive requests, this can be done by checking the &lt;code&gt;/wd/hub/status&lt;/code&gt; endpoint.&lt;/p&gt; &#xA;&lt;p&gt;A Grid that is ready, composed by a hub and two nodes, could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;value&#34;: {&#xA;    &#34;ready&#34;: true,&#xA;    &#34;message&#34;: &#34;Selenium Grid ready.&#34;,&#xA;    &#34;nodes&#34;: [&#xA;      {&#xA;        &#34;id&#34;: &#34;6c0a2c59-7e99-469d-bbfc-313dc638797c&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.3:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;firefox&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      },&#xA;      {&#xA;        &#34;id&#34;: &#34;26af3363-a0d8-4bd6-a854-2c7497ed64a4&#34;,&#xA;        &#34;uri&#34;: &#34;http:\u002f\u002f172.19.0.4:5555&#34;,&#xA;        &#34;maxSessions&#34;: 4,&#xA;        &#34;stereotypes&#34;: [&#xA;          {&#xA;            &#34;capabilities&#34;: {&#xA;              &#34;browserName&#34;: &#34;chrome&#34;&#xA;            },&#xA;            &#34;count&#34;: 4&#xA;          }&#xA;        ],&#xA;        &#34;sessions&#34;: [&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;&#34;ready&#34;: true&lt;/code&gt; value indicates that the Grid is ready to receive requests. This status can be polled through a script before running any test, or it can be added as a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; when the docker container is started.&lt;/p&gt; &#xA;&lt;h3&gt;Adding a &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#healthcheck&#34;&gt;HEALTHCHECK&lt;/a&gt; to the Grid&lt;/h3&gt; &#xA;&lt;p&gt;The script &lt;a href=&#34;https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/Base/check-grid.sh&#34;&gt;check-grid.sh&lt;/a&gt;, which is included in the images, can be used to poll the Grid status.&lt;/p&gt; &#xA;&lt;p&gt;This example checks the status of the Grid every 15 seconds, it has a timeout of 30 seconds when the check is done, and it retries up to 5 times until the container is marked as unhealthy. Please use adjusted values to fit your needs, (if needed) replace the &lt;code&gt;--host&lt;/code&gt; and &lt;code&gt;--port&lt;/code&gt; parameters for the ones used in your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker network create grid&#xA;$ docker run -d -p 4444:4444 --net grid --name selenium-hub \&#xA;    --health-cmd=&#39;/opt/bin/check-grid.sh --host 0.0.0.0 --port 4444&#39; \&#xA;    --health-interval=15s --health-timeout=30s --health-retries=5 \&#xA;    selenium/hub:4.2.0-20220527&#xA;$ docker run -d --net grid -e HUB_HOST=selenium-hub --shm-size=&#34;2g&#34; selenium/node-chrome:4.2.0-20220527&#xA;$ docker run -d --net grid -e HUB_HOST=selenium-hub --shm-size=&#34;2g&#34; selenium/node-edge:4.2.0-20220527&#xA;$ docker run -d --net grid -e HUB_HOST=selenium-hub --shm-size=&#34;2g&#34; selenium/node-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;\&lt;/code&gt; line delimiter won&#39;t work on Windows based terminals, try either &lt;code&gt;^&lt;/code&gt; or a backtick.&lt;/p&gt; &#xA;&lt;p&gt;The container health status can be checked by doing &lt;code&gt;docker ps&lt;/code&gt; and verifying the &lt;code&gt;(healthy)|(unhealthy)&lt;/code&gt; status or by inspecting it in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker inspect --format=&#39;{{json .State.Health.Status}}&#39; selenium-hub&#xA;&#34;healthy&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a bash script to wait for the Grid&lt;/h3&gt; &#xA;&lt;p&gt;A common problem known in docker is that a running container does not always mean that the application inside it is ready. A simple way to tackle this is by using a &#34;wait-for-it&#34; script, more information can be seen &lt;a href=&#34;https://docs.docker.com/compose/startup-order/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following script is an example of how this can be done using bash, but the same principle applies if you want to do this with the programming language used to write the tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;# wait-for-grid.sh&#xA;&#xA;set -e&#xA;&#xA;cmd=&#34;$@&#34;&#xA;&#xA;while ! curl -sSL &#34;http://localhost:4444/wd/hub/status&#34; 2&amp;gt;&amp;amp;1 \&#xA;        | jq -r &#39;.value.ready&#39; 2&amp;gt;&amp;amp;1 | grep &#34;true&#34; &amp;gt;/dev/null; do&#xA;    echo &#39;Waiting for the Grid&#39;&#xA;    sleep 1&#xA;done&#xA;&#xA;&amp;gt;&amp;amp;2 echo &#34;Selenium Grid is up - executing tests&#34;&#xA;exec $cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Will require &lt;code&gt;jq&lt;/code&gt; installed via &lt;code&gt;apt-get&lt;/code&gt;, else the script will keep printing &lt;code&gt;Waiting&lt;/code&gt; without completing the execution.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If needed, replace &lt;code&gt;localhost&lt;/code&gt; and &lt;code&gt;4444&lt;/code&gt; for the correct values in your environment. Also, this script is polling indefinitely, you might want to tweak it and establish a timeout.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s say that the normal command to execute your tests is &lt;code&gt;mvn clean test&lt;/code&gt;. Here is a way to use the above script and execute your tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./wait-for-grid.sh mvn clean test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like this, the script will poll until the Grid is ready, and then your tests will start.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/LibVNC/x11vnc&#34;&gt;x11vnc&lt;/a&gt; as VNC server to allow users inspect what is happening inside the container. Users can connect to this server in two ways:&lt;/p&gt; &#xA;&lt;h3&gt;Using a VNC client&lt;/h3&gt; &#xA;&lt;p&gt;The VNC server is listening to port 5900, you can use a VNC client and connect to it. Feel free to map port 5900 to any free external port that you wish.&lt;/p&gt; &#xA;&lt;p&gt;The internal 5900 port remains the same because that is the configured port for the VNC server running inside the container. You can override it with the &lt;code&gt;VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 5900:5900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.0-20220527&#xA;$ docker run -d -p 4445:4444 -p 5901:5900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.2.0-20220527&#xA;$ docker run -d -p 4446:4444 -p 5902:5900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your VNC client:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Port 5900 to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;Port 5901 to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;Port 5902 to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;. If you wish to change this, you should either change it in the &lt;code&gt;/NodeBase/Dockerfile&lt;/code&gt; and build the images yourself, or you can define a Docker image that derives from the posted ones which reconfigures it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;#FROM selenium/node-chrome:4.2.0-20220527&#xA;#FROM selenium/node-edge:4.2.0-20220527&#xA;#FROM selenium/node-firefox:4.2.0-20220527&#xA;#Choose the FROM statement that works for you.&#xA;&#xA;RUN x11vnc -storepasswd &amp;lt;your-password-here&amp;gt; /home/seluser/.vnc/passwd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to run VNC without password authentication you can set the environment variable &lt;code&gt;VNC_NO_PASSWORD=1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run VNC in view-only mode you can set the environment variable &lt;code&gt;VNC_VIEW_ONLY=1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using your browser (no VNC client is needed)&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/novnc/noVNC&#34;&gt;noVNC&lt;/a&gt; to allow users inspect visually container activity with their browser. This might come handy if you cannot install a VNC client on your machine. Port 7900 is used to start noVNC, so you will need to connect to that port with your browser.&lt;/p&gt; &#xA;&lt;p&gt;Similarly to the previous section, feel free to map port 7900 to any free external port that you wish. You can also override it with the &lt;code&gt;NO_VNC_PORT&lt;/code&gt; environment variable in case you want to use &lt;code&gt;--net=host&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example with the standalone images, the same concept applies to the node images.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&#34;2g&#34; selenium/standalone-chrome:4.2.0-20220527&#xA;$ docker run -d -p 4445:4444 -p 7901:7900 --shm-size=&#34;2g&#34; selenium/standalone-edge:4.2.0-20220527&#xA;$ docker run -d -p 4446:4444 -p 7902:7900 --shm-size=&#34;2g&#34; selenium/standalone-firefox:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you would use in your browser:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7900/&#34;&gt;http://localhost:7900/&lt;/a&gt; to connect to the Chrome container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7901/&#34;&gt;http://localhost:7901/&lt;/a&gt; to connect to the Edge container&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:7902/&#34;&gt;http://localhost:7902/&lt;/a&gt; to connect to the Firefox container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you get a prompt asking for a password, it is: &lt;code&gt;secret&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;All output gets sent to stdout, so it can be inspected by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker logs -f &amp;lt;container-id|container-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can increase the log output by passing environment variable to the containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SE_OPTS=&#34;--log-level FINE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;--shm-size=&#34;2g&#34;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Why is &lt;code&gt;--shm-size 2g&lt;/code&gt; necessary?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is a known workaround to avoid the browser crashing inside a docker container, here are the documented issues for &lt;a href=&#34;https://code.google.com/p/chromium/issues/detail?id=519952&#34;&gt;Chrome&lt;/a&gt; and &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1338771#c10&#34;&gt;Firefox&lt;/a&gt;. The shm size of 2gb is arbitrary but known to work well, your specific use case might need a different value, it is recommended to tune this value according to your needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Headless&lt;/h3&gt; &#xA;&lt;p&gt;If you see the following selenium exceptions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: invalid argument: can&#39;t kill an exited process&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Message: unknown error: Chrome failed to start: exited abnormally&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The reason &lt;em&gt;might&lt;/em&gt; be that you&#39;ve set the &lt;code&gt;START_XVFB&lt;/code&gt; environment variable to &#34;false&#34;, but forgot to actually run Firefox, Chrome or Edge in headless mode.&lt;/p&gt; &#xA;&lt;h3&gt;Mounting volumes to retrieve downloaded files&lt;/h3&gt; &#xA;&lt;p&gt;A common scenario is mounting a volume to the browser container in order to retrieve downloaded files. This works well in Windows and macOS but not without workarounds in Linux. For more details, check this well documented &lt;a href=&#34;https://github.com/SeleniumHQ/docker-selenium/issues/1095&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, while using Linux, you might be starting a container in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 4444:4444 --shm-size=&#34;2g&#34; \&#xA;  -v /home/ubuntu/files:/home/seluser/files \&#xA;  selenium/standalone-chrome:4.2.0-20220527&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will mount the host &lt;code&gt;/home/ubuntu/files&lt;/code&gt; directory to the &lt;code&gt;/home/seluser/files&lt;/code&gt; inside the container. The problem happens because the volume will be mounted as &lt;code&gt;root&lt;/code&gt;, and therefore the browser cannot write a file to that directory because it is running under the user &lt;code&gt;seluser&lt;/code&gt;. This happens because that is how Docker mounts volumes in Linux, more details in this &lt;a href=&#34;https://github.com/moby/moby/issues/2259&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A workaround for this is to create the directory on the host and change its permissions &lt;strong&gt;before mounting the volume&lt;/strong&gt;. Depending on your user permissions, you might need to use &lt;code&gt;sudo&lt;/code&gt; for some of these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /home/ubuntu/files&#xA;chown 1200:1201 /home/ubuntu/files&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After doing this, you should be able to download files to the mounted directory. If you have a better workaround, please send us a pull request!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/SeleniumHQ/docker-selenium&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>233boy/v2ray</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/233boy/v2ray</id>
    <link href="https://github.com/233boy/v2ray" rel="alternate"></link>
    <summary type="html">&lt;p&gt;最好用的 V2Ray 一键安装脚本 &amp; 管理脚本&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Removed&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-dev-containers</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/microsoft/vscode-dev-containers</id>
    <link href="https://github.com/microsoft/vscode-dev-containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository of development container definitions for the VS Code Remote - Containers extension and GitHub Codespaces&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VS Code Remote / GitHub Codespaces Container Definitions&lt;/h1&gt; &#xA;&lt;table style=&#34;width: 100%; border-style: none;&#34;&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td style=&#34;width: 140px; text-align: center;&#34;&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/download/extension&#34;&gt;&lt;img width=&#34;128px&#34; src=&#34;https://microsoft.github.io/vscode-remote-release/images/remote-extensionpack.png&#34; alt=&#34;Visual Studio Code logo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Visual Studio Code Remote Development and GitHub Codespaces&lt;/strong&gt;&lt;br&gt; &lt;i&gt;Open your code in the cloud, in a local container, on a remote machine, or in WSL and take advantage of VS Code&#39;s full feature set. &lt;/i&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. The &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;VS Code Remote - Containers&lt;/a&gt; extension and &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; allow you to open or clone code in a local or cloud-hosted dev container and take advantage of VS Code&#39;s full development feature set.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains a set of &lt;strong&gt;dev container definitions&lt;/strong&gt; to help get you up and running with a containerized environment. The definitions describe the appropriate container image, runtime arguments for starting the container, and VS Code extensions that should be installed. Each provides a container configuration file (&lt;code&gt;devcontainer.json&lt;/code&gt;) and other needed files that you can drop into any existing folder as a starting point for containerizing your project. You can use the the &lt;strong&gt;Add Development Container Configuration Files...&lt;/strong&gt; command to add one to your project or codespace.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; repositories may also be of interest if you are looking for complete sample projects.&lt;/p&gt; &#xA;&lt;h2&gt;Adding a definition to a project or codespace&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Either &lt;a href=&#34;https://aka.ms/ghcs-open-codespace&#34;&gt;create a codespace for your repository&lt;/a&gt; or &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;set up your local machine&lt;/a&gt; for use with the Remote - Containers extension, start VS Code, and open your project folder.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt;, and select the &lt;strong&gt;Add Development Container Configuration Files...&lt;/strong&gt; command for &lt;strong&gt;Remote-Containers&lt;/strong&gt; or &lt;strong&gt;Codespaces&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Pick one of the recommended definitions from the list or select &lt;strong&gt;Show All Definitions...&lt;/strong&gt; to see all of them. You may need to choose the &lt;strong&gt;From a predefined container configuration definition...&lt;/strong&gt; option if your project has an existing Dockerfile or Docker Compose file. Answer any questions that appear.&lt;/li&gt; &#xA; &lt;li&gt;See the definition&#39;s &lt;code&gt;README&lt;/code&gt; for configuration options. A link is available in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file added to your folder.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;strong&gt;Remote-Containers: Reopen in Container&lt;/strong&gt; to use it locally, or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; from within a codespace.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding a definition to a repository&lt;/h3&gt; &#xA;&lt;p&gt;You can share a customized dev container definition for your project by adding the files under &lt;code&gt;.devcontainer&lt;/code&gt; to source control.&lt;/p&gt; &#xA;&lt;p&gt;Anyone who then opens a local copy of your repo in VS Code will be prompted to reopen the folder in a container, provided they have the &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;Remote - Containers&lt;/a&gt; extension installed. Additionally, this will be used whenever someone creates a codespace in &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; for the repository.&lt;/p&gt; &#xA;&lt;p&gt;Your team now has a consistent environment and tool-chain and new contributors or team members can be productive quickly. First-time contributors will require less guidance and there will be fewer issues related to environment setup.&lt;/p&gt; &#xA;&lt;h2&gt;Sample projects&lt;/h2&gt; &#xA;&lt;p&gt;If you want to try a sample project which already has a dev container, check out one of the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-node&#34;&gt;Node Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-python&#34;&gt;Python Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-go&#34;&gt;Go Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-java&#34;&gt;Java Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vscode-remote-try-dotnetcore&#34;&gt;.NET Core Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-rust&#34;&gt;Rust Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-cpp&#34;&gt;C++ Sample&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-php&#34;&gt;PHP Sample&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/containers&#34;&gt;&lt;code&gt;containers&lt;/code&gt;&lt;/a&gt; - Contains reusable dev container definitions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library&#34;&gt;&lt;code&gt;script-library&lt;/code&gt;&lt;/a&gt; - Includes scripts used in this repository to install things. Also useful in your own Dockerfiles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/container-templates&#34;&gt;&lt;code&gt;container-templates&lt;/code&gt;&lt;/a&gt; - Contains templates for creating your own container definitions or to &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#contributing-dev-container-definitions&#34;&gt;contribute back&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Common Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Can I just reuse an existing container image or Docker / Docker Compose configuration?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! If you have a Dockerfile or Docker Compose file in your project/repository, follow the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/#adding&#34;&gt;same steps to add a definition&lt;/a&gt; and you&#39;ll be prompted to select a Dockerfile or Docker Compose file and customize from there. If you then commit these files to a Git repository, you can use it with &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; as well. If you prefer, you can also start up the container manually and &lt;a href=&#34;https://aka.ms/vscode-remote/containers/attach&#34;&gt;attach to it&lt;/a&gt;. However, note that many images will be missing things like &lt;code&gt;git&lt;/code&gt; that you will want to use. There are scripts in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library&#34;&gt;script-library&lt;/a&gt; like the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library/docs/common.md&#34;&gt;common script&lt;/a&gt; that can help adding these to your existing Dockerfile or image.&lt;/p&gt; &#xA;&lt;h3&gt;What is the goal of &lt;code&gt;devcontainer.json&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;devcontainer.json&lt;/code&gt; file is similar to &lt;code&gt;launch.json&lt;/code&gt; for debugging, but designed to launch (or attach to) a development container instead. At its simplest, all you need is a &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file in your project that references an image, &lt;code&gt;Dockerfile&lt;/code&gt;, or &lt;code&gt;docker-compose.yml&lt;/code&gt;, and a few properties. You can &lt;a href=&#34;https://aka.ms/vscode-remote/containers/folder-setup&#34;&gt;adapt it for use&lt;/a&gt; in a wide variety of situations.&lt;/p&gt; &#xA;&lt;h3&gt;Why do Dockerfiles in this repo use &lt;code&gt;RUN&lt;/code&gt; statements with commands separated by &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;Each &lt;code&gt;RUN&lt;/code&gt; statement creates a Docker image &#34;layer&#34;. If one &lt;code&gt;RUN&lt;/code&gt; statement adds temporary contents, these contents remain in this layer in the image even if they are deleted in a subsequent &lt;code&gt;RUN&lt;/code&gt;. This means the image takes more storage locally and results in slower image download times if you publish the image to a registry. You can resolve this problem by using a &lt;code&gt;RUN&lt;/code&gt; statement that includes any clean up steps (separated by &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) after a given operation. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#why-do-dockerfiles-in-this-repository-use-run-statements-with-commands-separated-by-&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more tips.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing and feedback&lt;/h2&gt; &#xA;&lt;p&gt;Have a question or feedback?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contribute or provide feedback for the &lt;a href=&#34;https://github.com/Microsoft/vscode-remote-release/raw/main/CONTRIBUTING.md&#34;&gt;VS Code Remote&lt;/a&gt; extensions or &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/codespaces-feedback&#34;&gt;GitHub Codespaces&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Search &lt;a href=&#34;https://github.com/Microsoft/vscode-dev-containers/issues&#34;&gt;existing issues&lt;/a&gt; with dev container definitions or &lt;a href=&#34;https://github.com/Microsoft/vscode-dev-containers/issues/new&#34;&gt;report a problem&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Contribute a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/CONTRIBUTING.md#contributing-dev-container-definitions&#34;&gt;development container definition&lt;/a&gt; to the repository.&lt;/li&gt; &#xA; &lt;li&gt;Review and file issues to shape the direction of development containers and the dev container CLI in the &lt;a href=&#34;https://github.com/microsoft/dev-container-spec&#34;&gt;dev container spec repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved. &lt;br&gt; Licensed under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For images generated from this repository, see &lt;a href=&#34;https://github.com/microsoft/containerregistry/raw/main/legal/Container-Images-Legal-Notice.md&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/NOTICE.txt&#34;&gt;NOTICE.txt&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nvm-sh/nvm</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/nvm-sh/nvm</id>
    <link href="https://github.com/nvm-sh/nvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nvm-sh/logos&#34;&gt;&lt;img alt=&#34;nvm project logo&#34; src=&#34;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-color.svg?sanitize=true&#34; height=&#34;50&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Node Version Manager &lt;a href=&#34;https://travis-ci.org/nvm-sh/nvm&#34;&gt;&lt;img src=&#34;https://travis-ci.org/nvm-sh/nvm.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nvm-sh/nvm/releases/tag/v0.39.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-v0.39.1-yellow.svg?sanitize=true&#34; alt=&#34;nvm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/684&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/684/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;!-- To update this table of contents, ensure you have run `npm install` then `npm run doctoc` --&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-and-updating&#34;&gt;Installing and Updating&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#install--update-script&#34;&gt;Install &amp;amp; Update Script&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#additional-notes&#34;&gt;Additional Notes&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-linux&#34;&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-macos&#34;&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#ansible&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#verify-installation&#34;&gt;Verify Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#important-notes&#34;&gt;Important Notes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#git-install&#34;&gt;Git Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&#34;&gt;Manual Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-upgrade&#34;&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#long-term-support&#34;&gt;Long-term Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#migrating-global-packages-while-installing&#34;&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#default-global-packages-from-file-while-installing&#34;&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#iojs&#34;&gt;io.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#system-version-of-node&#34;&gt;System Version of Node&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#listing-versions&#34;&gt;Listing Versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#setting-custom-colors&#34;&gt;Setting Custom Colors&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#persisting-custom-colors&#34;&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#suppressing-colorized-output&#34;&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#restoring-path&#34;&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#set-default-node-version&#34;&gt;Set default node version&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#use-a-mirror-of-node-binaries&#34;&gt;Use a mirror of node binaries&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#nvmrc&#34;&gt;.nvmrc&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#deeper-shell-integration&#34;&gt;Deeper Shell Integration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash&#34;&gt;bash&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#automatically-call-nvm-use&#34;&gt;Automatically call &lt;code&gt;nvm use&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#zsh&#34;&gt;zsh&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file&#34;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#fish&#34;&gt;fish&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file-1&#34;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#running-tests&#34;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#environment-variables&#34;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash-completion&#34;&gt;Bash Completion&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage-1&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#compatibility-issues&#34;&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-nvm-on-alpine-linux&#34;&gt;Installing nvm on Alpine Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#uninstalling--removal&#34;&gt;Uninstalling / Removal&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-uninstall&#34;&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#docker-for-development-environment&#34;&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#problems&#34;&gt;Problems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#macos-troubleshooting&#34;&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#copyright-notice&#34;&gt;Copyright notice&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different versions of node via the command line.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm use 16&#xA;Now using node v16.9.1 (npm v7.21.1)&#xA;$ node -v&#xA;v16.9.1&#xA;$ nvm use 14&#xA;Now using node v14.18.0 (npm v6.14.15)&#xA;$ node -v&#xA;v14.18.0&#xA;$ nvm install 12&#xA;Now using node v12.22.6 (npm v6.14.5)&#xA;$ node -v&#xA;v12.22.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Simple as that!&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;nvm is a version manager for &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt;, designed to be installed per-user, and invoked per-shell. &lt;code&gt;nvm&lt;/code&gt; works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and &lt;a href=&#34;https://github.com/nvm-sh/nvm#important-notes&#34;&gt;windows WSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;installation-and-update&#34;&gt;&lt;/a&gt; &lt;a id=&#34;install-script&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing and Updating&lt;/h2&gt; &#xA;&lt;h3&gt;Install &amp;amp; Update Script&lt;/h3&gt; &#xA;&lt;p&gt;To &lt;strong&gt;install&lt;/strong&gt; or &lt;strong&gt;update&lt;/strong&gt; nvm, you should run the &lt;a href=&#34;https://github.com/nvm-sh/nvm/raw/v0.39.1/install.sh&#34;&gt;install script&lt;/a&gt;. To do that, you may either download and run the script manually, or use the following cURL or Wget command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running either of the above commands downloads a script and runs it. The script clones the nvm repository to &lt;code&gt;~/.nvm&lt;/code&gt;, and attempts to add the source lines from the snippet below to the correct profile file (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;profile_snippet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$([ -z &#34;${XDG_CONFIG_HOME-}&#34; ] &amp;amp;&amp;amp; printf %s &#34;${HOME}/.nvm&#34; || printf %s &#34;${XDG_CONFIG_HOME}/nvm&#34;)&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Additional Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If the environment variable &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is present, it will place the &lt;code&gt;nvm&lt;/code&gt; files there.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;--no-use&lt;/code&gt; to the end of the above script (...&lt;code&gt;nvm.sh --no-use&lt;/code&gt;) to postpone using &lt;code&gt;nvm&lt;/code&gt; until you manually &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&#34;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can customize the install source, directory, profile, and version using the &lt;code&gt;NVM_SOURCE&lt;/code&gt;, &lt;code&gt;NVM_DIR&lt;/code&gt;, &lt;code&gt;PROFILE&lt;/code&gt;, and &lt;code&gt;NODE_VERSION&lt;/code&gt; variables. Eg: &lt;code&gt;curl ... | NVM_DIR=&#34;path/to/nvm&#34;&lt;/code&gt;. Ensure that the &lt;code&gt;NVM_DIR&lt;/code&gt; does not contain a trailing slash.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The installer can use &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;wget&lt;/code&gt; to download &lt;code&gt;nvm&lt;/code&gt;, whichever is available.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Troubleshooting on Linux&lt;/h4&gt; &#xA;&lt;p&gt;On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;bash&lt;/em&gt;: &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;zsh&lt;/em&gt;: &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt;: &lt;code&gt;. ~/.profile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;These should pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h4&gt;Troubleshooting on macOS&lt;/h4&gt; &#xA;&lt;p&gt;Since OS X 10.9, &lt;code&gt;/usr/bin/git&lt;/code&gt; has been preset by Xcode command line tools, which means we can&#39;t properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it&#39;ll fail. (see &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/1782&#34;&gt;#1782&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;If you get &lt;code&gt;nvm: command not found&lt;/code&gt; after running the install script, one of the following might be the reason:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Since macOS 10.15, the default shell is &lt;code&gt;zsh&lt;/code&gt; and nvm will look for &lt;code&gt;.zshrc&lt;/code&gt; to update, none is installed by default. Create one with &lt;code&gt;touch ~/.zshrc&lt;/code&gt; and run the install script again.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use bash, the previous default shell, your system may not have a &lt;code&gt;.bash_profile&lt;/code&gt; file where the command is set up. Create one with &lt;code&gt;touch ~/.bash_profile&lt;/code&gt; and run the install script again. Then, run &lt;code&gt;source ~/.bash_profile&lt;/code&gt; to pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You have previously used &lt;code&gt;bash&lt;/code&gt;, but you have &lt;code&gt;zsh&lt;/code&gt; installed. You need to manually add &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&#34;&gt;these lines&lt;/a&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; and run &lt;code&gt;. ~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You might need to restart your terminal instance or run &lt;code&gt;. ~/.nvm/nvm.sh&lt;/code&gt;. Restarting your terminal/opening a new tab/window, or running the source command will load the command and the new configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the above didn&#39;t help, you might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the above doesn&#39;t fix the problem, you may try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use bash, it may be that your &lt;code&gt;.bash_profile&lt;/code&gt; (or &lt;code&gt;~/.profile&lt;/code&gt;) does not source your &lt;code&gt;~/.bashrc&lt;/code&gt; properly. You could fix this by adding &lt;code&gt;source ~/&amp;lt;your_profile_file&amp;gt;&lt;/code&gt; to it or follow the next step below.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try adding &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/#profile_snippet&#34;&gt;the snippet from the install section&lt;/a&gt;, that finds the correct nvm directory and loads nvm, to your usual profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For more information about this issue and possible workarounds, please &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/576&#34;&gt;refer here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For Macs with the M1 chip, node started providing &lt;strong&gt;arm64&lt;/strong&gt; arch darwin packages since v16.0.0. For earlier versions, there were only &lt;strong&gt;darwin_x64&lt;/strong&gt; packages available but no &lt;strong&gt;darwin_arm64&lt;/strong&gt;. If you are facing issues installing node using &lt;code&gt;nvm&lt;/code&gt;, you may want to update to v16 or later.&lt;/p&gt; &#xA;&lt;h4&gt;Ansible&lt;/h4&gt; &#xA;&lt;p&gt;You can use a task:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: nvm&#xA;  shell: &amp;gt;&#xA;    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;  args:&#xA;    creates: &#34;{{ ansible_env.HOME }}/.nvm/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verify Installation&lt;/h3&gt; &#xA;&lt;p&gt;To verify that nvm has been installed, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;command -v nvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which should output &lt;code&gt;nvm&lt;/code&gt; if the installation was successful. Please note that &lt;code&gt;which nvm&lt;/code&gt; will not work, since &lt;code&gt;nvm&lt;/code&gt; is a sourced shell function, not an executable binary.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again.&lt;/p&gt; &#xA;&lt;h3&gt;Important Notes&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re running a system without prepackaged binary available, which means you&#39;re going to install nodejs or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the &lt;code&gt;build-essential&lt;/code&gt; and &lt;code&gt;libssl-dev&lt;/code&gt; packages work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; also support Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;GitBash&lt;/a&gt; (MSYS) or &lt;a href=&#34;https://cygwin.com&#34;&gt;Cygwin&lt;/a&gt;. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coreybutler/nvm-windows&#34;&gt;nvm-windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marcelklehr/nodist&#34;&gt;nodist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jasongin/nvs&#34;&gt;nvs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; does not support &lt;a href=&#34;https://fishshell.com&#34;&gt;Fish&lt;/a&gt; either (see &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/303&#34;&gt;#303&lt;/a&gt;). Alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edc/bass&#34;&gt;bass&lt;/a&gt; allows you to use utilities written for Bash in fish shell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brigand/fast-nvm-fish&#34;&gt;fast-nvm-fish&lt;/a&gt; only works with version numbers (not aliases) but doesn&#39;t significantly slow your shell startup&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/derekstavis/plugin-nvm&#34;&gt;plugin-nvm&lt;/a&gt; plugin for &lt;a href=&#34;https://github.com/oh-my-fish/oh-my-fish&#34;&gt;Oh My Fish&lt;/a&gt;, which makes nvm and its completions available in fish shell&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fisherman/fnm&#34;&gt;fnm&lt;/a&gt; - &lt;a href=&#34;https://github.com/fisherman/fisherman&#34;&gt;fisherman&lt;/a&gt;-based version manager for fish&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FabioAntunes/fish-nvm&#34;&gt;fish-nvm&lt;/a&gt; - Wrapper around nvm for fish, delays sourcing nvm until it&#39;s actually used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need &lt;a href=&#34;https://www.freshports.org/www/node/files/patch-deps_v8_src_base_platform_platform-posix.cc&#34;&gt;patches&lt;/a&gt;; see the issue ticket:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/900&#34;&gt;[#900] [Bug] nodejs on FreeBSD may need to be patched&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nodejs/node/issues/3716&#34;&gt;nodejs/node#3716&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the &lt;code&gt;Command Line Tools&lt;/code&gt;. You can check out this blog post on how to just that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/&#34;&gt;How to Install Command Line Tools in OS X Mavericks &amp;amp; Yosemite (Without Xcode)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you have/had a &#34;system&#34; node installed and want to install modules globally, keep in mind that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using &lt;code&gt;nvm&lt;/code&gt; you do not need &lt;code&gt;sudo&lt;/code&gt; to globally install a module with &lt;code&gt;npm -g&lt;/code&gt;, so instead of doing &lt;code&gt;sudo npm install -g grunt&lt;/code&gt;, do instead &lt;code&gt;npm install -g grunt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you have an &lt;code&gt;~/.npmrc&lt;/code&gt; file, make sure it does not contain any &lt;code&gt;prefix&lt;/code&gt; settings (which is not compatible with &lt;code&gt;nvm&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;You can (but should not?) keep your previous &#34;system&#34; node install, but &lt;code&gt;nvm&lt;/code&gt; will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using &lt;code&gt;/usr/local/lib/node_modules/*&lt;/code&gt; VS your user account using &lt;code&gt;~/.nvm/versions/node/vX.X.X/lib/node_modules/*&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Homebrew installation is not supported. If you have issues with homebrew-installed &lt;code&gt;nvm&lt;/code&gt;, please &lt;code&gt;brew uninstall&lt;/code&gt; it, and install it using the instructions below, before filing an issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re using &lt;code&gt;zsh&lt;/code&gt; you can easily install &lt;code&gt;nvm&lt;/code&gt; as a zsh plugin. Install &lt;a href=&#34;https://github.com/lukechilds/zsh-nvm&#34;&gt;&lt;code&gt;zsh-nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm upgrade&lt;/code&gt; to upgrade.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Git versions before v1.7 may face a problem of cloning &lt;code&gt;nvm&lt;/code&gt; source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to &lt;a href=&#34;https://github.com/git/git/commit/5a7d5b683f869d3e3884a89775241afa515da9e7&#34;&gt;v1.17.10&lt;/a&gt; can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub&#39;s &lt;a href=&#34;https://help.github.com/articles/https-cloning-errors/&#34;&gt;HTTPS cloning errors&lt;/a&gt; article.&lt;/p&gt; &#xA;&lt;h3&gt;Git Install&lt;/h3&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt; installed (requires git v1.7.10+):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone this repo in the root of your user profile&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cd ~/&lt;/code&gt; from anywhere then &lt;code&gt;git clone https://github.com/nvm-sh/nvm.git .nvm&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;cd ~/.nvm&lt;/code&gt; and check out the latest version with &lt;code&gt;git checkout v0.39.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;activate &lt;code&gt;nvm&lt;/code&gt; by sourcing it from your shell: &lt;code&gt;. ./nvm.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34;  # This loads nvm&#xA;[ -s &#34;$NVM_DIR/bash_completion&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/bash_completion&#34;  # This loads nvm bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Install&lt;/h3&gt; &#xA;&lt;p&gt;For a fully manual install, execute the following lines to first clone the &lt;code&gt;nvm&lt;/code&gt; repository into &lt;code&gt;$HOME/.nvm&lt;/code&gt;, and then load &lt;code&gt;nvm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34; &amp;amp;&amp;amp; (&#xA;  git clone https://github.com/nvm-sh/nvm.git &#34;$NVM_DIR&#34;&#xA;  cd &#34;$NVM_DIR&#34;&#xA;  git checkout `git describe --abbrev=0 --tags --match &#34;v[0-9]*&#34; $(git rev-list --tags --max-count=1)`&#xA;) &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;[ -s &#34;$NVM_DIR/bash_completion&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/bash_completion&#34;  # This loads nvm bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Upgrade&lt;/h3&gt; &#xA;&lt;p&gt;For manual upgrade with &lt;code&gt;git&lt;/code&gt; (requires git v1.7.10+):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;change to the &lt;code&gt;$NVM_DIR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;pull down the latest changes&lt;/li&gt; &#xA; &lt;li&gt;check out the latest version&lt;/li&gt; &#xA; &lt;li&gt;activate the new version&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;(&#xA;  cd &#34;$NVM_DIR&#34;&#xA;  git fetch --tags origin&#xA;  git checkout `git describe --abbrev=0 --tags --match &#34;v[0-9]*&#34; $(git rev-list --tags --max-count=1)`&#xA;) &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To download, compile, and install the latest release of node, do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install node # &#34;node&#34; is an alias for the latest version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install a specific version of node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install 14.7.0 # or 16.3.0, 12.22.1, etc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first version installed becomes the default. New shells will start with the default version of node (e.g., &lt;code&gt;nvm alias default&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can list available versions using &lt;code&gt;ls-remote&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls-remote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then in any new shell just use the installed version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm use node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can just run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm run node --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can run any arbitrary command in a subshell with the desired version of node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm exec 4.2 node --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also get the path to the executable to where it was installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm which 12.22&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In place of a version pointer like &#34;14.7&#34; or &#34;16.3&#34; or &#34;12.22.1&#34;, you can use the following special default aliases with &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm which&lt;/code&gt;, etc:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: this installs the latest version of &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iojs&lt;/code&gt;: this installs the latest version of &lt;a href=&#34;https://iojs.org/en/&#34;&gt;&lt;code&gt;io.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: this alias is deprecated, and only truly applies to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.12&lt;/code&gt; and earlier. Currently, this is an alias for &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unstable&lt;/code&gt;: this alias points to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.11&lt;/code&gt; - the last &#34;unstable&#34; node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Long-term Support&lt;/h3&gt; &#xA;&lt;p&gt;Node has a &lt;a href=&#34;https://github.com/nodejs/Release#release-schedule&#34;&gt;schedule&lt;/a&gt; for long-term support (LTS) You can reference LTS versions in aliases and &lt;code&gt;.nvmrc&lt;/code&gt; files with the notation &lt;code&gt;lts/*&lt;/code&gt; for the latest LTS, and &lt;code&gt;lts/argon&lt;/code&gt; for LTS releases from the &#34;argon&#34; line, for example. In addition, the following commands support LTS arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm install --lts&lt;/code&gt; / &lt;code&gt;nvm install --lts=argon&lt;/code&gt; / &lt;code&gt;nvm install &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm install lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm uninstall --lts&lt;/code&gt; / &lt;code&gt;nvm uninstall --lts=argon&lt;/code&gt; / &lt;code&gt;nvm uninstall &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm uninstall lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm use --lts&lt;/code&gt; / &lt;code&gt;nvm use --lts=argon&lt;/code&gt; / &lt;code&gt;nvm use &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm use lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm exec --lts&lt;/code&gt; / &lt;code&gt;nvm exec --lts=argon&lt;/code&gt; / &lt;code&gt;nvm exec &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm exec lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm run --lts&lt;/code&gt; / &lt;code&gt;nvm run --lts=argon&lt;/code&gt; / &lt;code&gt;nvm run &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm run lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm ls-remote --lts&lt;/code&gt; / &lt;code&gt;nvm ls-remote --lts=argon&lt;/code&gt; &lt;code&gt;nvm ls-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm ls-remote lts/argon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvm version-remote --lts&lt;/code&gt; / &lt;code&gt;nvm version-remote --lts=argon&lt;/code&gt; / &lt;code&gt;nvm version-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm version-remote lts/argon&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Any time your local copy of &lt;code&gt;nvm&lt;/code&gt; connects to &lt;a href=&#34;https://nodejs.org&#34;&gt;https://nodejs.org&lt;/a&gt;, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under &lt;code&gt;$NVM_DIR/alias/lts&lt;/code&gt;), are managed by &lt;code&gt;nvm&lt;/code&gt;, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.&lt;/p&gt; &#xA;&lt;p&gt;To get the latest LTS version of node and migrate your existing installed packages, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install &#39;lts/*&#39; --reinstall-packages-from=current&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Migrating Global Packages While Installing&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install a new version of Node.js and migrate npm packages from a previous version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install node --reinstall-packages-from=node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will first use &#34;nvm version node&#34; to identify the current version you&#39;re migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs &#34;nvm reinstall-packages&#34; to reinstall the npm packages from your prior version of Node to the new one.&lt;/p&gt; &#xA;&lt;p&gt;You can also install and migrate npm packages from specific versions of Node like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install 6 --reinstall-packages-from=5&#xA;nvm install v4.2 --reinstall-packages-from=iojs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that reinstalling packages &lt;em&gt;explicitly does not update the npm version&lt;/em&gt; — this is to ensure that npm isn&#39;t accidentally upgraded to a broken version for the new node version.&lt;/p&gt; &#xA;&lt;p&gt;To update npm at the same time add the &lt;code&gt;--latest-npm&lt;/code&gt; flag, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install &#39;lts/*&#39; --reinstall-packages-from=default --latest-npm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, you can at any time run the following command to get the latest supported npm version on the current node version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install-latest-npm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve already gotten an error to the effect of &#34;npm does not support Node.js&#34;, you&#39;ll need to (1) revert to a previous node version (&lt;code&gt;nvm ls&lt;/code&gt; &amp;amp; &lt;code&gt;nvm use &amp;lt;your latest _working_ version from the ls&amp;gt;&lt;/code&gt;, (2) delete the newly created node version (&lt;code&gt;nvm uninstall &amp;lt;your _broken_ version of node from the ls&amp;gt;&lt;/code&gt;), then (3) rerun your &lt;code&gt;nvm install&lt;/code&gt; with the &lt;code&gt;--latest-npm&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h3&gt;Default Global Packages From File While Installing&lt;/h3&gt; &#xA;&lt;p&gt;If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file &lt;code&gt;$NVM_DIR/default-packages&lt;/code&gt;. You can add anything npm would accept as a package argument on the command line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# $NVM_DIR/default-packages&#xA;&#xA;rimraf&#xA;object-inspect@1.0.2&#xA;stevemao/left-pad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;io.js&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install &lt;a href=&#34;https://github.com/iojs/io.js/&#34;&gt;io.js&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install iojs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install a new version of io.js and migrate npm packages from a previous version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install iojs --reinstall-packages-from=iojs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same guidelines mentioned for migrating npm packages in node are applicable to io.js.&lt;/p&gt; &#xA;&lt;h3&gt;System Version of Node&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use the system-installed version of node, you can use the special default alias &#34;system&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm use system&#xA;nvm run system --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Listing Versions&lt;/h3&gt; &#xA;&lt;p&gt;If you want to see what versions are installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see what versions are available to install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls-remote&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting Custom Colors&lt;/h3&gt; &#xA;&lt;p&gt;You can set five colors that will be used to display version and alias information. These colors replace the default colors. Initial colors are: g b y r e&lt;/p&gt; &#xA;&lt;p&gt;Color codes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;r/R = red / bold red&#xA;&#xA;g/G = green / bold green&#xA;&#xA;b/B = blue / bold blue&#xA;&#xA;c/C = cyan / bold cyan&#xA;&#xA;m/M = magenta / bold magenta&#xA;&#xA;y/Y = yellow / bold yellow&#xA;&#xA;k/K = black / bold black&#xA;&#xA;e/W = light grey / white&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm set-colors rgBcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Persisting custom colors&lt;/h4&gt; &#xA;&lt;p&gt;If you want the custom colors to persist after terminating the shell, export the &lt;code&gt;NVM_COLORS&lt;/code&gt; variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_COLORS=&#39;cmgRY&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Suppressing colorized output&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm help (or -h or --help)&lt;/code&gt;, &lt;code&gt;nvm ls&lt;/code&gt;, &lt;code&gt;nvm ls-remote&lt;/code&gt; and &lt;code&gt;nvm alias&lt;/code&gt; usually produce colorized output. You can disable colors with the &lt;code&gt;--no-colors&lt;/code&gt; option (or by setting the environment variable &lt;code&gt;TERM=dumb&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm ls --no-colors&#xA;nvm help --no-colors&#xA;TERM=dumb nvm ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Restoring PATH&lt;/h4&gt; &#xA;&lt;p&gt;To restore your PATH, you can deactivate it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm deactivate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Set default node version&lt;/h4&gt; &#xA;&lt;p&gt;To set a default Node version to be used in any new shell, use the alias &#39;default&#39;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm alias default node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use a mirror of node binaries&lt;/h4&gt; &#xA;&lt;p&gt;To use a mirror of the node binaries, set &lt;code&gt;$NVM_NODEJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist&#xA;nvm install node&#xA;&#xA;NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a mirror of the io.js binaries, set &lt;code&gt;$NVM_IOJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist&#xA;nvm install iojs-v1.0.3&#xA;&#xA;NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; will not, by default, create a &#34;current&#34; symlink. Set &lt;code&gt;$NVM_SYMLINK_CURRENT&lt;/code&gt; to &#34;true&#34; to enable this behavior, which is sometimes useful for IDEs. Note that using &lt;code&gt;nvm&lt;/code&gt; in multiple shell tabs with this environment variable enabled can cause race conditions.&lt;/p&gt; &#xA;&lt;h3&gt;.nvmrc&lt;/h3&gt; &#xA;&lt;p&gt;You can create a &lt;code&gt;.nvmrc&lt;/code&gt; file containing a node version number (or any other string that &lt;code&gt;nvm&lt;/code&gt; understands; see &lt;code&gt;nvm --help&lt;/code&gt; for details) in the project root directory (or any parent directory). Afterwards, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, and &lt;code&gt;nvm which&lt;/code&gt; will use the version specified in the &lt;code&gt;.nvmrc&lt;/code&gt; file if no version is supplied on the command line.&lt;/p&gt; &#xA;&lt;p&gt;For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ echo &#34;5.9&#34; &amp;gt; .nvmrc&#xA;&#xA;$ echo &#34;lts/*&#34; &amp;gt; .nvmrc # to default to the latest LTS version&#xA;&#xA;$ echo &#34;node&#34; &amp;gt; .nvmrc # to default to the latest version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[NB these examples assume a POSIX-compliant shell version of &lt;code&gt;echo&lt;/code&gt;. If you use a Windows &lt;code&gt;cmd&lt;/code&gt; development environment, eg the &lt;code&gt;.nvmrc&lt;/code&gt; file is used to configure a remote Linux deployment, then keep in mind the &lt;code&gt;&#34;&lt;/code&gt;s will be copied leading to an invalid file. Remove them.]&lt;/p&gt; &#xA;&lt;p&gt;Then when you run nvm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm use&#xA;Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;&#xA;Now using node v5.9.1 (npm v3.7.3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; et. al. will traverse directory structure upwards from the current directory looking for the &lt;code&gt;.nvmrc&lt;/code&gt; file. In other words, running &lt;code&gt;nvm use&lt;/code&gt; et. al. in any subdirectory of a directory with an &lt;code&gt;.nvmrc&lt;/code&gt; will result in that &lt;code&gt;.nvmrc&lt;/code&gt; being utilized.&lt;/p&gt; &#xA;&lt;p&gt;The contents of a &lt;code&gt;.nvmrc&lt;/code&gt; file &lt;strong&gt;must&lt;/strong&gt; be the &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; (as described by &lt;code&gt;nvm --help&lt;/code&gt;) followed by a newline. No trailing spaces are allowed, and the trailing newline is required.&lt;/p&gt; &#xA;&lt;h3&gt;Deeper Shell Integration&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://github.com/wbyoung/avn&#34;&gt;&lt;code&gt;avn&lt;/code&gt;&lt;/a&gt; to deeply integrate into your shell and automatically invoke &lt;code&gt;nvm&lt;/code&gt; when changing directories. &lt;code&gt;avn&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. Please &lt;a href=&#34;https://github.com/wbyoung/avn/issues/new&#34;&gt;report issues to the &lt;code&gt;avn&lt;/code&gt; team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer a lighter-weight solution, the recipes below have been contributed by &lt;code&gt;nvm&lt;/code&gt; users. They are &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. We are, however, accepting pull requests for more examples.&lt;/p&gt; &#xA;&lt;h4&gt;bash&lt;/h4&gt; &#xA;&lt;h5&gt;Automatically call &lt;code&gt;nvm use&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;Put the following at the end of your &lt;code&gt;$HOME/.bashrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cdnvm() {&#xA;    command cd &#34;$@&#34;;&#xA;    nvm_path=$(nvm_find_up .nvmrc | tr -d &#39;\n&#39;)&#xA;&#xA;    # If there are no .nvmrc file, use the default nvm version&#xA;    if [[ ! $nvm_path = *[^[:space:]]* ]]; then&#xA;&#xA;        declare default_version;&#xA;        default_version=$(nvm version default);&#xA;&#xA;        # If there is no default version, set it to `node`&#xA;        # This will use the latest version on your machine&#xA;        if [[ $default_version == &#34;N/A&#34; ]]; then&#xA;            nvm alias default node;&#xA;            default_version=$(nvm version default);&#xA;        fi&#xA;&#xA;        # If the current version is not the default version, set it to use the default version&#xA;        if [[ $(nvm current) != &#34;$default_version&#34; ]]; then&#xA;            nvm use default;&#xA;        fi&#xA;&#xA;    elif [[ -s $nvm_path/.nvmrc &amp;amp;&amp;amp; -r $nvm_path/.nvmrc ]]; then&#xA;        declare nvm_version&#xA;        nvm_version=$(&amp;lt;&#34;$nvm_path&#34;/.nvmrc)&#xA;&#xA;        declare locally_resolved_nvm_version&#xA;        # `nvm ls` will check all locally-available versions&#xA;        # If there are multiple matching versions, take the latest one&#xA;        # Remove the `-&amp;gt;` and `*` characters and spaces&#xA;        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found&#xA;        locally_resolved_nvm_version=$(nvm ls --no-colors &#34;$nvm_version&#34; | tail -1 | tr -d &#39;\-&amp;gt;*&#39; | tr -d &#39;[:space:]&#39;)&#xA;&#xA;        # If it is not already installed, install it&#xA;        # `nvm install` will implicitly use the newly-installed version&#xA;        if [[ &#34;$locally_resolved_nvm_version&#34; == &#34;N/A&#34; ]]; then&#xA;            nvm install &#34;$nvm_version&#34;;&#xA;        elif [[ $(nvm current) != &#34;$locally_resolved_nvm_version&#34; ]]; then&#xA;            nvm use &#34;$nvm_version&#34;;&#xA;        fi&#xA;    fi&#xA;}&#xA;alias cd=&#39;cdnvm&#39;&#xA;cd &#34;$PWD&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This alias would search &#39;up&#39; from your current directory in order to detect a &lt;code&gt;.nvmrc&lt;/code&gt; file. If it finds it, it will switch to that version; if not, it will use the default version.&lt;/p&gt; &#xA;&lt;h4&gt;zsh&lt;/h4&gt; &#xA;&lt;h5&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h5&gt; &#xA;&lt;p&gt;Put this into your &lt;code&gt;$HOME/.zshrc&lt;/code&gt; to call &lt;code&gt;nvm use&lt;/code&gt; automatically whenever you enter a directory that contains an &lt;code&gt;.nvmrc&lt;/code&gt; file with a string telling nvm which node to &lt;code&gt;use&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;# place this after nvm initialization!&#xA;autoload -U add-zsh-hook&#xA;load-nvmrc() {&#xA;  local node_version=&#34;$(nvm version)&#34;&#xA;  local nvmrc_path=&#34;$(nvm_find_nvmrc)&#34;&#xA;&#xA;  if [ -n &#34;$nvmrc_path&#34; ]; then&#xA;    local nvmrc_node_version=$(nvm version &#34;$(cat &#34;${nvmrc_path}&#34;)&#34;)&#xA;&#xA;    if [ &#34;$nvmrc_node_version&#34; = &#34;N/A&#34; ]; then&#xA;      nvm install&#xA;    elif [ &#34;$nvmrc_node_version&#34; != &#34;$node_version&#34; ]; then&#xA;      nvm use&#xA;    fi&#xA;  elif [ &#34;$node_version&#34; != &#34;$(nvm version default)&#34; ]; then&#xA;    echo &#34;Reverting to nvm default version&#34;&#xA;    nvm use default&#xA;  fi&#xA;}&#xA;add-zsh-hook chpwd load-nvmrc&#xA;load-nvmrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;fish&lt;/h4&gt; &#xA;&lt;h5&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h5&gt; &#xA;&lt;p&gt;This requires that you have &lt;a href=&#34;https://github.com/edc/bass&#34;&gt;bass&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;# ~/.config/fish/functions/nvm.fish&#xA;function nvm&#xA;  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm $argv&#xA;end&#xA;&#xA;# ~/.config/fish/functions/nvm_find_nvmrc.fish&#xA;function nvm_find_nvmrc&#xA;  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm_find_nvmrc&#xA;end&#xA;&#xA;# ~/.config/fish/functions/load_nvm.fish&#xA;function load_nvm --on-variable=&#34;PWD&#34;&#xA;  set -l default_node_version (nvm version default)&#xA;  set -l node_version (nvm version)&#xA;  set -l nvmrc_path (nvm_find_nvmrc)&#xA;  if test -n &#34;$nvmrc_path&#34;&#xA;    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))&#xA;    if test &#34;$nvmrc_node_version&#34; = &#34;N/A&#34;&#xA;      nvm install (cat $nvmrc_path)&#xA;    else if test &#34;$nvmrc_node_version&#34; != &#34;$node_version&#34;&#xA;      nvm use $nvmrc_node_version&#xA;    end&#xA;  else if test &#34;$node_version&#34; != &#34;$default_node_version&#34;&#xA;    echo &#34;Reverting to default Node version&#34;&#xA;    nvm use default&#xA;  end&#xA;end&#xA;&#xA;# ~/.config/fish/config.fish&#xA;# You must call it on initialization or listening to directory switching won&#39;t work&#xA;load_nvm &amp;gt; /dev/stderr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;Tests are written in &lt;a href=&#34;https://github.com/scraperwiki/urchin&#34;&gt;Urchin&lt;/a&gt;. Install Urchin (and other dependencies) like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are slow tests and fast tests. The slow tests do things like install node and check that the right versions are used. The fast tests fake this to test things like aliases and uninstalling. From the root of the nvm git repository, run the fast tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test/fast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the slow tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test/slow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run all of the tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Nota bene: Avoid running nvm while the tests are running.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;nvm exposes the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_DIR&lt;/code&gt; - nvm&#39;s installation directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_BIN&lt;/code&gt; - where node, npm, and global packages for the active version of node are installed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_INC&lt;/code&gt; - node&#39;s include file directory (useful for building C/C++ addons for node).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_CD_FLAGS&lt;/code&gt; - used to maintain compatibility with zsh.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NVM_RC_VERSION&lt;/code&gt; - version from .nvmrc file if being used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, nvm modifies &lt;code&gt;PATH&lt;/code&gt;, and, if present, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;NODE_PATH&lt;/code&gt; when changing versions.&lt;/p&gt; &#xA;&lt;h2&gt;Bash Completion&lt;/h2&gt; &#xA;&lt;p&gt;To activate, you need to source &lt;code&gt;bash_completion&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Put the above sourcing line just below the sourcing line for nvm in your profile (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;nvm:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias               deactivate          install             list-remote         reinstall-packages  uninstall           version&#xA;cache               exec                install-latest-npm  ls                  run                 unload              version-remote&#xA;current             help                list                ls-remote           unalias             use                 which&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;nvm alias:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;default      iojs         lts/*        lts/argon    lts/boron    lts/carbon   lts/dubnium  lts/erbium   node         stable       unstable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm alias my_alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;v10.22.0       v12.18.3      v14.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;nvm use:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm use&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;nvm uninstall:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;$ nvm uninstall&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compatibility Issues&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; will encounter some issues if you have some non-default settings set. (see &lt;a href=&#34;https://github.com/creationix/nvm/issues/606&#34;&gt;#606&lt;/a&gt;) The following are known to cause issues:&lt;/p&gt; &#xA;&lt;p&gt;Inside &lt;code&gt;~/.npmrc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;prefix=&#39;some/path&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Environment Variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$NPM_CONFIG_PREFIX&#xA;$PREFIX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Shell settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing nvm on Alpine Linux&lt;/h2&gt; &#xA;&lt;p&gt;In order to provide the best performance (and other optimizations), nvm will download and install pre-compiled binaries for Node (and npm) when you run &lt;code&gt;nvm install X&lt;/code&gt;. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).&lt;/p&gt; &#xA;&lt;p&gt;Alpine Linux, unlike mainstream/traditional Linux distributions, is based on &lt;a href=&#34;https://www.busybox.net/&#34;&gt;BusyBox&lt;/a&gt;, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - &lt;a href=&#34;https://www.musl-libc.org/&#34;&gt;musl&lt;/a&gt;. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply &lt;code&gt;nvm install X&lt;/code&gt; on Alpine Linux and expect the downloaded binary to run correctly - you&#39;ll likely see &#34;...does not exist&#34; errors if you try that.&lt;/p&gt; &#xA;&lt;p&gt;There is a &lt;code&gt;-s&lt;/code&gt; flag for &lt;code&gt;nvm install&lt;/code&gt; which requests nvm download Node source and compile it locally.&lt;/p&gt; &#xA;&lt;p&gt;If installing nvm on Alpine Linux &lt;em&gt;is&lt;/em&gt; still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils&#xA;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.&lt;/p&gt; &#xA;&lt;p&gt;As a potential alternative, @mhart (a Node contributor) has some &lt;a href=&#34;https://github.com/mhart/alpine-node&#34;&gt;Docker images for Alpine Linux with Node and optionally, npm, pre-installed&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;removal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling / Removal&lt;/h2&gt; &#xA;&lt;h3&gt;Manual Uninstall&lt;/h3&gt; &#xA;&lt;p&gt;To remove &lt;code&gt;nvm&lt;/code&gt; manually, execute the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rm -rf &#34;$NVM_DIR&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; (or other shell resource config) and remove the lines below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker For Development Environment&lt;/h2&gt; &#xA;&lt;p&gt;To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 18.04 base image, prepared with essential and useful tools for &lt;code&gt;nvm&lt;/code&gt; development, to build the docker image of the environment, run the docker command at the root of &lt;code&gt;nvm&lt;/code&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker build -t nvm-dev .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will package your current nvm repository with our pre-defined development environment into a docker image named &lt;code&gt;nvm-dev&lt;/code&gt;, once it&#39;s built with success, validate your image via &lt;code&gt;docker images&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker images&#xA;&#xA;REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE&#xA;nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you got no error message, now you can easily involve in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run -h nvm-dev -it nvm-dev&#xA;&#xA;nvm@nvm-dev:~/.nvm$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that it&#39;ll take about 8 minutes to build the image and the image size would be about 650MB, so it&#39;s not suitable for production usage.&lt;/p&gt; &#xA;&lt;p&gt;For more information and documentation about docker, please refer to its official website:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Problems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you try to install a node version and the installation fails, be sure to run &lt;code&gt;nvm cache clear&lt;/code&gt; to delete cached node downloads, or you might get an error like the following:&lt;/p&gt; &lt;p&gt;curl: (33) HTTP server doesn&#39;t seem to support byte ranges. Cannot resume.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Where&#39;s my &lt;code&gt;sudo node&lt;/code&gt;? Check out &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/43&#34;&gt;#43&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don&#39;t work due to incompatibility of shared libs. In such cases, use &lt;code&gt;-s&lt;/code&gt; option to force install from source:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvm install -s 0.8.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If setting the &lt;code&gt;default&lt;/code&gt; alias does not establish the node version in new shells (i.e. &lt;code&gt;nvm current&lt;/code&gt; yields &lt;code&gt;system&lt;/code&gt;), ensure that the system&#39;s node &lt;code&gt;PATH&lt;/code&gt; is set before the &lt;code&gt;nvm.sh&lt;/code&gt; source line in your shell profile (see &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/658&#34;&gt;#658&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;macOS Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;nvm node version not found in vim shell&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you set node version to a version other than your system node version &lt;code&gt;nvm use 6.2.1&lt;/code&gt; and open vim and run &lt;code&gt;:!node -v&lt;/code&gt; you should see &lt;code&gt;v6.2.1&lt;/code&gt; if you see your system version &lt;code&gt;v0.12.7&lt;/code&gt;. You need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo chmod ugo-x /usr/libexec/path_helper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More on this issue in &lt;a href=&#34;https://github.com/dotphiles/dotzsh#mac-os-x&#34;&gt;dotphiles/dotzsh&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nvm is not compatible with the npm config &#34;prefix&#34; option&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some solutions for this issue can be found &lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/1245&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is one more edge case causing this issue, and that&#39;s a &lt;strong&gt;mismatch between the &lt;code&gt;$HOME&lt;/code&gt; path and the user&#39;s home directory&#39;s actual name&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You have to make sure that the user directory name in &lt;code&gt;$HOME&lt;/code&gt; and the user directory name you&#39;d see from running &lt;code&gt;ls /Users/&lt;/code&gt; &lt;strong&gt;are capitalized the same way&lt;/strong&gt; (&lt;a href=&#34;https://github.com/nvm-sh/nvm/issues/2261&#34;&gt;See this issue&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To change the user directory and/or account name follow the instructions &lt;a href=&#34;https://support.apple.com/en-us/HT201548&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Homebrew makes zsh directories unsecure&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;zsh compinit: insecure directories, run compaudit for list.&#xA;Ignore insecure directories and continue [y] or abort compinit [n]? y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Homebrew causes insecure directories like &lt;code&gt;/usr/local/share/zsh/site-functions&lt;/code&gt; and &lt;code&gt;/usr/local/share/zsh&lt;/code&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an &lt;code&gt;nvm&lt;/code&gt; problem - it is a homebrew problem. Refer &lt;a href=&#34;https://github.com/zsh-users/zsh-completions/issues/680&#34;&gt;here&lt;/a&gt; for some solutions related to the issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Macs with M1 chip&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Experimental support for the M1 architecture was added in node.js v15.3 and full support was added in v16.0. Because of this, if you try to install older versions of node as usual, you will probably experience either compilation errors when installing node or out-of-memory errors while running your code.&lt;/p&gt; &#xA;&lt;p&gt;So, if you want to run a version prior to v16.0 on an M1 Mac, it may be best to compile node targeting the &lt;code&gt;x86_64&lt;/code&gt; Intel architecture so that Rosetta 2 can translate the &lt;code&gt;x86_64&lt;/code&gt; processor instructions to ARM-based Apple Silicon instructions. Here&#39;s what you will need to do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Rosetta, if you haven&#39;t already done so&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ softwareupdate --install-rosetta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You might wonder, &#34;how will my M1 Mac know to use Rosetta for a version of node compiled for an Intel chip?&#34;. If an executable contains only Intel instructions, macOS will automatically use Rosetta to translate the instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a shell that&#39;s running using Rosetta&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ arch -x86_64 zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same thing can also be accomplished by finding the Terminal or iTerm App in Finder, right clicking, selecting &#34;Get Info&#34;, and then checking the box labeled &#34;Open using Rosetta&#34;.&lt;/p&gt; &lt;p&gt;Note: This terminal session is now running in &lt;code&gt;zsh&lt;/code&gt;. If &lt;code&gt;zsh&lt;/code&gt; is not the shell you typically use, &lt;code&gt;nvm&lt;/code&gt; may not be &lt;code&gt;source&lt;/code&gt;&#39;d automatically like it probably is for your usual shell through your dotfiles. If that&#39;s the case, make sure to source &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ source &#34;${NVM_DIR}/nvm.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install whatever older version of node you are interested in. Let&#39;s use 12.22.1 as an example. This will fetch the node source code and compile it, which will take several minutes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nvm install v12.22.1 --shared-zlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You&#39;re probably curious why &lt;code&gt;--shared-zlib&lt;/code&gt; is included. There&#39;s a bug in recent versions of Apple&#39;s system &lt;code&gt;clang&lt;/code&gt; compiler. If one of these broken versions is installed on your system, the above step will likely still succeed even if you didn&#39;t include the &lt;code&gt;--shared-zlib&lt;/code&gt; flag. However, later, when you attempt to &lt;code&gt;npm install&lt;/code&gt; something using your old version of node.js, you will see &lt;code&gt;incorrect data check&lt;/code&gt; errors. If you want to avoid the possible hassle of dealing with this, include that flag. For more details, see &lt;a href=&#34;https://github.com/nodejs/node/issues/39313&#34;&gt;this issue&lt;/a&gt; and &lt;a href=&#34;https://github.com/nodejs/node/issues/39313#issuecomment-902395576&#34;&gt;this comment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Exit back to your native shell.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ exit&#xA;$ arch&#xA;arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: If you selected the box labeled &#34;Open using Rosetta&#34; rather than running the CLI command in the second step, you will see &lt;code&gt;i386&lt;/code&gt; here. Unless you have another reason to have that box selected, you can deselect it now.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check to make sure the architecture is correct. &lt;code&gt;x64&lt;/code&gt; is the abbreviation for &lt;code&gt;x86_64&lt;/code&gt;, which is what you want to see.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ node -p process.arch&#xA;x64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now you should be able to use node as usual.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Currently, the sole maintainer is &lt;a href=&#34;https://github.com/ljharb&#34;&gt;@ljharb&lt;/a&gt; - more maintainers are quite welcome, and we hope to add folks to the team over time. &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/GOVERNANCE.md&#34;&gt;Governance&lt;/a&gt; will be re-evaluated as the project evolves.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nvm-sh/nvm/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright notice&lt;/h2&gt; &#xA;&lt;p&gt;Copyright &lt;a href=&#34;https://openjsf.org&#34;&gt;OpenJS Foundation&lt;/a&gt; and &lt;code&gt;nvm&lt;/code&gt; contributors. All rights reserved. The &lt;a href=&#34;https://openjsf.org&#34;&gt;OpenJS Foundation&lt;/a&gt; has registered trademarks and uses trademarks. For a list of trademarks of the &lt;a href=&#34;https://openjsf.org&#34;&gt;OpenJS Foundation&lt;/a&gt;, please see our &lt;a href=&#34;https://trademark-policy.openjsf.org/&#34;&gt;Trademark Policy&lt;/a&gt; and &lt;a href=&#34;https://trademark-list.openjsf.org/&#34;&gt;Trademark List&lt;/a&gt;. Node.js is a trademark of Joyent, Inc. and is used with its permission. Trademarks and logos not indicated on the &lt;a href=&#34;https://trademark-list.openjsf.org&#34;&gt;list of OpenJS Foundation trademarks&lt;/a&gt; are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openjsf.org/&#34;&gt;The OpenJS Foundation&lt;/a&gt; | &lt;a href=&#34;https://terms-of-use.openjsf.org/&#34;&gt;Terms of Use&lt;/a&gt; | &lt;a href=&#34;https://privacy-policy.openjsf.org/&#34;&gt;Privacy Policy&lt;/a&gt; | &lt;a href=&#34;https://bylaws.openjsf.org/&#34;&gt;OpenJS Foundation Bylaws&lt;/a&gt; | &lt;a href=&#34;https://trademark-policy.openjsf.org/&#34;&gt;Trademark Policy&lt;/a&gt; | &lt;a href=&#34;https://trademark-list.openjsf.org/&#34;&gt;Trademark List&lt;/a&gt; | &lt;a href=&#34;https://www.linuxfoundation.org/cookies/&#34;&gt;Cookie Policy&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>boostchicken-dev/udm-utilities</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/boostchicken-dev/udm-utilities</id>
    <link href="https://github.com/boostchicken-dev/udm-utilities" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of things I have made to make the Unifi Dream Machine more useful&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;udm-utilities &lt;a href=&#34;https://discord.gg/8zqrQJFghg&#34;&gt;&lt;img src=&#34;https://img.shields.io:/discord/939817841107034172?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34; title=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmp.yml&#34;&gt;&lt;img src=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmp.yml/badge.svg?sanitize=true&#34; alt=&#34;UDM-Pro Podman&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmse.yml&#34;&gt;&lt;img src=&#34;https://github.com/boostchicken-dev/udm-utilities/actions/workflows/podman-udmse.yml/badge.svg?branch=master&#34; alt=&#34;UDM-SE Podman&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A collection of things to enhance the capabilities of your Unifi Dream Machine or Dream Machine Pro.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull Requests welcome! If you use this functionality to do new cool stuff to your UDM/P please send a PR and share it with the community!&lt;/p&gt; &#xA;&lt;h2&gt;Custom Kernel&lt;/h2&gt; &#xA;&lt;p&gt;If you want to do a custom kernel with wireguard support, multicast, multipath routing that is now a possiblity. Please see the repo and please use at your own risk. This a much larger change than anything in this repo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fabianishere/udm-kernel-tools&#34;&gt;udm-kernel-tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Custom Podman Builds for UDM-SE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/actions&#34;&gt;https://github.com/boostchicken-dev/udm-utilities/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Extract the zip to the root of your device! Look at the assets on the Podman workflow.&lt;/p&gt; &#xA;&lt;h2&gt;General Tools&lt;/h2&gt; &#xA;&lt;h3&gt;on-boot-script&lt;/h3&gt; &#xA;&lt;p&gt;Do this first. Enables &lt;code&gt;init.d&lt;/code&gt; style scripts to run on every boot of your UDM. Includes examples to run &lt;code&gt;wpa-supplicant/eap-proxy&lt;/code&gt; and/or &lt;code&gt;ntop-ng&lt;/code&gt; on startup. Follow this &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/raw/master/on-boot-script/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;It enables complete customization of your UDM/P and fills the gap that config.gateway.json left behind.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;podman-update&lt;/h3&gt; &#xA;&lt;p&gt;Updates Podman, conmon, and runc to a recent version. This allows docker-compose usage as well.&lt;/p&gt; &#xA;&lt;h3&gt;container-common&lt;/h3&gt; &#xA;&lt;p&gt;Apply this after on-boot-script. Updates container defaults to maintain &lt;strong&gt;stable disk usage footprint&lt;/strong&gt; of custom containers. &lt;strong&gt;Prevents logs filling up UDM storage full&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;python&lt;/h3&gt; &#xA;&lt;p&gt;If you need python3 on your UDM, generally not recommended, can always use it in unifi-os container.&lt;/p&gt; &#xA;&lt;h3&gt;UDMP Persistence SSH Keys Script&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDMP-Persistence-SSH-Keys&#34;&gt;https://github.com/fire1ce/UDMP-Persistence-SSH-Keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Script to presist ssh keys after reboot&lt;/p&gt; &#xA;&lt;h2&gt;VPN Servers / Clients&lt;/h2&gt; &#xA;&lt;h3&gt;wireguard-go&lt;/h3&gt; &#xA;&lt;p&gt;Run a Wireguard client/server on your UDM/P. Utilizes wireguard-go, not linux kernel modules. The performance will take a hit due to that.&lt;/p&gt; &#xA;&lt;h3&gt;WireGuard kernel module for UDM/P&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tusc/wireguard-kmod&#34;&gt;https://github.com/tusc/wireguard-kmod&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Uses a prebuilt linux kernel module, without the need to move to a custom kernel.&lt;/p&gt; &#xA;&lt;h3&gt;OpenConnect VPN&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shuguet/openconnect-udm&#34;&gt;https://github.com/shuguet/openconnect-udm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenConnect VPN Client for the UniFi Dream Machine Pro (Unofficial).&lt;/p&gt; &#xA;&lt;h3&gt;split-vpn&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/peacey/split-vpn&#34;&gt;https://github.com/peacey/split-vpn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A split tunnel VPN script for the UDM with policy based routing. This helper script can be used on your UDM to route select VLANs, clients, or even domains through a VPN connection. It supports OpenVPN, WireGuard, and OpenConnect (Cisco AnyConnect) clients running directly on your UDM, and external VPN clients running on other servers on your network.&lt;/p&gt; &#xA;&lt;h2&gt;DNS Providers&lt;/h2&gt; &#xA;&lt;p&gt;Install a DNS server that functions as a network-wide ad and tracker blocker, and which can also securely proxy encrypted DNS requests to an upstream DNS provider. Begin by following the instructions to setup &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/tree/master/on-boot-script&#34;&gt;on-boot-script&lt;/a&gt; and &lt;a href=&#34;https://github.com/boostchicken-dev/udm-utilities/tree/master/dns-common/on_boot.d&#34;&gt;dns-common&lt;/a&gt;. Then, follow the guides below to setup either Pi-Hole, NextDNS, or AdGuard Home.&lt;/p&gt; &#xA;&lt;h3&gt;dns-common&lt;/h3&gt; &#xA;&lt;p&gt;Base configuration for DNS server containers, both IPv4 and IPv6. Utilizes MacVLAN CNI plugins to completely isolate the network stack.&lt;/p&gt; &#xA;&lt;h3&gt;run-pihole&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PiHole w/ DoH Image. Run Pi-hole on your UDM with podman. Also contains custom image for Pi-hole with &lt;code&gt;cloudflared&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;PiHole with DoTe&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/u/boostchicken&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/boostchicken/pihole-dote.svg?color=green&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;!Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Desigened by: &lt;a href=&#34;https://github.com/chrisstaite/DoTe/&#34;&gt;https://github.com/chrisstaite/DoTe/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternative to mine which uses DoTe&lt;/p&gt; &#xA;&lt;h3&gt;AdguardHome&lt;/h3&gt; &#xA;&lt;p&gt;Run AdguardHome on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;Cloudflare DDNS&lt;/h3&gt; &#xA;&lt;p&gt;Update your cloudflare domains from your UDM with podman.&lt;/p&gt; &#xA;&lt;h2&gt;Cool projects you can use with this&lt;/h2&gt; &#xA;&lt;h3&gt;multicast-relay&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/multicast-relay&#34;&gt;https://hub.docker.com/r/scyto/multicast-relay&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/alsmith/multicast-relay&#34;&gt;https://github.com/alsmith/multicast-relay&lt;/a&gt; to provide mDNS and SSDP on a unifi dream machine. It will likely work on any multi homed host.&lt;/p&gt; &#xA;&lt;h3&gt;mqtt-mosquitto&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/eclipse-mosquitto&#34;&gt;https://hub.docker.com/_/eclipse-mosquitto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Eclipse Mosquitto is an open source message broker which implements MQTT version 5, 3.1.1 and 3.1.&lt;/p&gt; &#xA;&lt;h3&gt;ntopng&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tusc/ntopng-udm&#34;&gt;https://github.com/tusc/ntopng-udm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Much better network stats for your UDM/P! Install this docker container and create an on_boot script to make sure it&#39;s always running.&lt;/p&gt; &#xA;&lt;h3&gt;LetsEncrypt SSL Certs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kchristensen/udm-le&#34;&gt;https://github.com/kchristensen/udm-le&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provision and renew LetsEncrypt SSL certs from your UDM/P.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alxwolf/ubios-cert&#34;&gt;https://github.com/alxwolf/ubios-cert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Similar to &lt;code&gt;udm-le&lt;/code&gt;, adding different providers for SSL/TLS certificates (LE, ZeroSSL, BuyPass) and DNS API (all-inkl.com) currently not supported by &lt;a href=&#34;https://go-acme.github.io/lego/dns/&#34;&gt;LEGO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unifi API Browser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/scyto/unifibrowser&#34;&gt;https://hub.docker.com/r/scyto/unifibrowser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a docker container that implements &lt;a href=&#34;https://github.com/Art-of-WiFi/UniFi-API-browser&#34;&gt;https://github.com/Art-of-WiFi/UniFi-API-browser&lt;/a&gt; to provide a graphical tool to inspect the data structures available via the unifi API. Great if you are using the REST API for your own purposes and want to explore. Works with multiple controller versions.&lt;/p&gt; &#xA;&lt;h3&gt;Unifi UDM-Pro auto fan speed&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/renedis/ubnt-auto-fan-speed&#34;&gt;https://github.com/renedis/ubnt-auto-fan-speed&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A shell script with the goal to make the UDM-Pro silenced while still having good thermal values. It stops the build in service that monitors the thermal values, fan speed and connection of a HDD/SSD. After that it sets the thermal/fan chip (adt7475) to automatic mode. Once that is done it changes the thermal and fan values specified in the script.&lt;/p&gt; &#xA;&lt;h3&gt;rclone&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rclone.org/&#34;&gt;https://rclone.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run rclone container with Web GUI for offsite backups.&lt;/p&gt; &#xA;&lt;h3&gt;Telegram-Notifications On WAN Failorver&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fire1ce/UDMP-Failover-Telegram-Notifications&#34;&gt;https://github.com/fire1ce/UDMP-Failover-Telegram-Notifications&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use telegram bot to be notified of a wan failover with local account&lt;/p&gt; &#xA;&lt;h3&gt;udm-proxy&lt;/h3&gt; &#xA;&lt;p&gt;Run a reverse proxy (using caddy in vlan) on the udm-pro.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xpherism/udm-proxy&#34;&gt;https://github.com/xpherism/udm-proxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Unsupported / No longer maintained&lt;/h2&gt; &#xA;&lt;h3&gt;nextdns&lt;/h3&gt; &#xA;&lt;p&gt;Run NextDNS on your UDM with podman.&lt;/p&gt; &#xA;&lt;h3&gt;suricata&lt;/h3&gt; &#xA;&lt;p&gt;Updates suricata to a recent version.&lt;/p&gt; &#xA;&lt;h3&gt;Jumbo Frames&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kalenarndt/udmp-jumbo-frames&#34;&gt;https://github.com/kalenarndt/udmp-jumbo-frames&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; native jumbo frame support for the UDM and UDM-Pro is added in the 1.12.13 EA firmware, support for the UDM-SE is not yet announced.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>walidshaari/Kubernetes-Certified-Administrator</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/walidshaari/Kubernetes-Certified-Administrator</id>
    <link href="https://github.com/walidshaari/Kubernetes-Certified-Administrator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Online resources that will help you prepare for taking the CNCF CKA 2020 &#34;Kubernetes Certified Administrator&#34; Certification exam. with time, This is not likely the comprehensive up to date list - please make a pull request if there something that should be added here.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-sa/4.0/80x15.png&#34; alt=&#34;License: CC BY-SA 4.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kubernetes Certified Administration&lt;/h1&gt; &#xA;&lt;p&gt;Online resources that will help you prepare for taking the Kubernetes Certified Administrator Certification exam.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This is not likely a comprehensive list as the exam will be a moving target with the fast pace of k8s development - please make a pull request if there something wrong, should be added, or updated.&lt;/p&gt; &#xA;&lt;p&gt;I tried to restrict the cross references of resources to &lt;a href=&#34;https://raw.githubusercontent.com/walidshaari/Kubernetes-Certified-Administrator/main/kubernetes.io&#34;&gt;kubernetes.io&lt;/a&gt;. Youtube videos and other blog resources are optional; however, I still found them useful in my k8s learning journey.&lt;/p&gt; &#xA;&lt;p&gt;Ensure you have the right version of Kubernetes documentation selected (e.g. v1.21 as of June 2021 exam) especially for API objects and annotations.&lt;/p&gt; &#xA;&lt;p&gt;LDR: &lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Other CK exams:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/walidshaari/Certified-Kubernetes-Secuirty-Specialist&#34;&gt;Certified Kubernetes Security Specialist CKS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgkanatsios/CKAD-exercises&#34;&gt;Certified Kubernetes Application Developer CKAD&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CKA 2021 Exam Objectives&lt;/h2&gt; &#xA;&lt;p&gt;These are the exam objectives you review and understand in order to pass the test.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cncf/curriculum&#34;&gt;CNCF Exam Curriculum repository &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://youtu.be/vS-wXo2qbPs&#34;&gt; Cluster Architecture, Installation, and Configuration&lt;/a&gt; 25%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Manage role based access control&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/@HoussemDellai/rbac-with-kubernetes-in-minikube-4deed658ea7b&#34;&gt;Lab: RBAC with Kubernetes in Minikube&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/&#34;&gt;Use kubeadm to install a basic cluster&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://phoenixnap.com/kb/install-kubernetes-on-ubuntu&#34;&gt;Lab: Install Kubernetes On Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/&#34;&gt;Manage a highly available Kubernetes cluster&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/&#34;&gt;Options for Highly Available topology&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.weave.works/blog/running-highly-available-clusters-with-kubeadm&#34;&gt;Weaveworks Kubeadm HA cluster&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&#34;&gt;Provision underlying infrastructure to deploy Kubernetes cluster&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-upgrade/&#34;&gt;Peform a version upgrade on Kubernetes cluster using kubeadm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster&#34;&gt;implment etcd backup and restore&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/DhsFfNSIrQ4&#34;&gt;Kubecon Europe 2020: Kubeadm deep dive&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; sample commands used during backup/restore/update of nodes &lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code&gt;#etcd backup and restore brief&#xA;export ETCDCTL_API=3  # needed to specify etcd api versions, not sure if it is needed anylonger with k8s 1.19+ &#xA;etcdctl snapshot save -h   #find save options&#xA;etcdctl snapshot restore -h  #find restore options&#xA;&#xA;## possible example of save, options will change depending on cluster context, as TLS is used need to give ca,crt, and key paths&#xA;etcdctl snapshot save /backup/snapshot.db  --cert=/etc/kubernetes/pki/etcd/server.crt  --key=/etc/kubernetes/pki/etcd/server.key --      cacert=/etc/kubernetes/pki/etcd/ca.crt&#xA;&#xA;&#xA;# evicting pods/nodes and bringing back node back to cluster&#xA;kubectl drain  &amp;lt;node&amp;gt;# to drain a node&#xA;kubectl uncordon  &amp;lt;node&amp;gt; # to return a node after updates back to the cluster from unscheduled state to Ready&#xA;kubectl cordon  &amp;lt;node&amp;gt;   # to not schedule new pods on a node&#xA;&#xA;#backup/restore the cluster (e.g. the state of the cluster in etcd)&#xA;&#xA;&#xA;# upgrade kubernetes worker node&#xA;kubectl drain &amp;lt;node&amp;gt;&#xA;apt-get upgrade -y kubeadm=&amp;lt;k8s-version-to-upgrade&amp;gt;&#xA;apt-get upgrade -y kubelet=&amp;lt;k8s-version-to-upgrade&amp;gt;&#xA;kubeadm upgrade node config --kubelet-version &amp;lt;k8s-version-to-upgrade&amp;gt;&#xA;systemctl restart kubelet&#xA;kubectl uncordon &amp;lt;node&amp;gt;&#xA;&#xA;&#xA;#kubeadm upgrade steps&#xA;kubeadm upgrade plan&#xA;kubeadm upgrade apply&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Workloads &amp;amp; Scheduling – 15%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;Understand deployments and how to perform rolling update and rollbacks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/configmap/&#34;&gt;ConfigMaps&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/secret/&#34;&gt;Secrets&lt;/a&gt; to configure applications&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/&#34;&gt;configure a pod with a configmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/&#34;&gt;configure a pod with a secret&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Know how to &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#scaling-a-deployment&#34;&gt;scale applications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/run-application/scale-stateful-set/&#34;&gt;scaling a statefulset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/#scaling-a-replicaset&#34;&gt;scaling a replicaset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Understand the primitives used to create robust, self-healing, application deployments&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/&#34;&gt;Replicaset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;Deployments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/&#34;&gt;Statefulsets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/&#34;&gt;Daemonset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#how-pods-with-resource-requests-are-scheduled&#34;&gt;how resource limits can affect Pod scheduling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Awareness of manifest management and common templating tools&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/&#34;&gt;Kustomize&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/blog/2018/05/29/introducing-kustomize-template-free-configuration-customization-for-kubernetes/&#34;&gt;Kustomize Blog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/manage-kubernetes-objects/&#34;&gt;manage kubernetes objects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/service-catalog/install-service-catalog-using-helm/&#34;&gt;Install service catalog using helm&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Non-k8s.io resource: CNCF Kubecon video: &lt;a href=&#34;https://youtu.be/x2w6T0sE50w?list=PLj6h78yzYM2O1wlsM-Ma-RYhfT5LKq0XC&#34;&gt;An introduction to Helm - Bridget Kromhout, Microsoft &amp;amp; Marc Khouzam, City of Montreal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Non-k8s.io resource: External resource: &lt;a href=&#34;https://learnk8s.io/templating-yaml-with-code&#34;&gt;templating-yaml-with-code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Services &amp;amp; Networking – 20%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/networking/&#34;&gt;host networking configuration on the cluster nodes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Understand connectivity between Pods&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/#pod-networking&#34;&gt;The concept of Pods networking&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Understand ClusterIP, NodePort, LoadBalancer service types and endpoints&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34;&gt;service&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Know how to use &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/&#34;&gt;Ingress controllers&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource&#34;&gt;Ingress resources&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/walidshaari/Kubernetes-Certified-Administrator/main/(https://kubernetes.io/docs/concepts/services-networking/ingress/)&#34;&gt;Ingress concepts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/&#34;&gt;Know how to configure and use CoreDNS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network&#34;&gt;Choose an appropriate container network interface plugin&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/tq9ng_Nz9j8&#34;&gt;Kubernetes Networking Intro and Deep-Dive - Bowei Du &amp;amp; Tim Hockin, Google&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/xB190-yyJnY?t=241&#34;&gt;Kubernetes and Networks: why is this so dang hard?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://youtu.be/InZVNuKY5GY?list=PLj6h78yzYM2O1wlsM-Ma-RYhfT5LKq0XC&#34;&gt;Kubecon Eu 2020 Tutorial: Communication Is Key - Understanding Kubernetes Networking - Jeff Poole, Vivint Smart Home&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Storage – 10%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/storage-classes/&#34;&gt;storage classes&lt;/a&gt;, &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/&#34;&gt;persistent volumes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#volume-mode&#34;&gt;volume mode&lt;/a&gt;, &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes&#34;&gt;access modes&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#reclaim-policy&#34;&gt;reclaim policies&lt;/a&gt; for volumes&lt;/li&gt; &#xA; &lt;li&gt;Understand &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims&#34;&gt;persistent volume claims&lt;/a&gt; primitive&lt;/li&gt; &#xA; &lt;li&gt;Know how to &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/&#34;&gt;configure applications with persistent storage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; StorageClass, PersistentVolume, and PersitentVolumeClaim examples &lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code&gt;#### Storage Class example&#xA;#&#xA;&#xA;#### Persistent Volume Claim example&#xA;#&#xA;kind: PersistentVolumeClaim&#xA;apiVersion: v1&#xA;metadata:&#xA;  name: local-pvc&#xA;spec:&#xA;  accessModes:&#xA;  - ReadWriteOnce&#xA;  storageClassName: local-storage-sc&#xA;  resources:&#xA;    requests:&#xA;      storage: 100Mi&#xA;&#xA;## Persistent Volume example&#xA;#&#xA;apiVersion: v1&#xA;kind: PersistentVolume&#xA;metadata:&#xA;  name: local-pv&#xA;spec:&#xA;  accessModes:&#xA;  - ReadWriteOnce&#xA;  capacity:&#xA;    storage: 200Mi&#xA;  local:&#xA;    path: /data/pv/disk021&#xA;  persistentVolumeReclaimPolicy: Retain&#xA;  storageClassName: local-storage-sc&#xA;  volumeMode: Filesystem&#xA;&#xA;###  Pod using the pvc&#xA;#&#xA;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: nginx&#xA;  labels:&#xA;    name: nginx&#xA;spec:&#xA;  containers:&#xA;  - name: nginx&#xA;    image: nginx&#xA;    volumeMounts:&#xA;      - name: local-persistent-storage&#xA;        mountPath: /var/www/html&#xA;  volumes:&#xA;    - name: local-persistent-storage&#xA;      persistentVolumeClaim:&#xA;        claimName: local-pvc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Troubleshooting – 30%&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/logging/&#34;&gt;Evaluate cluster and node logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/resource-usage-monitoring/&#34;&gt;Understand how to monitor applications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/logging/#logging-at-the-node-level&#34;&gt;Manage container stdout &amp;amp; stderr logs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/debug-application/&#34;&gt;Troubleshoot application failure&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#troubleshooting&#34;&gt;Pending or termintated pods&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/debug-cluster/&#34;&gt;Troubleshoot cluster component failure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/debug-cluster/&#34;&gt;Troubleshoot networking&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/&#34;&gt;DNS troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Tips:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt; &lt;strong&gt;practice&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get familiar with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Familiarize yourself with the documentation, initially &lt;a href=&#34;https://kubernetes.io/docs/concepts/&#34;&gt;concepts&lt;/a&gt; and mostly &lt;a href=&#34;https://kubernetes.io/docs/tasks/&#34;&gt;tasks&lt;/a&gt;, &lt;strong&gt;kubectl explain&lt;/strong&gt; command, &lt;a href=&#34;https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/&#34;&gt;kubectl cheatsheet&lt;/a&gt;, and &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;kubectl commands reference&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/&#34;&gt;https://kubernetes.io/docs/concepts/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/&#34;&gt;https://kubernetes.io/docs/tasks/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/&#34;&gt;https://kubernetes.io/docs/user-guide/kubectl-cheatsheet/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&#34;&gt;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;kubectl api-versions&lt;/code&gt; and &lt;code&gt;kubectl api-resources&lt;/code&gt; wih &lt;code&gt;grep&lt;/code&gt; for a specific resoruce e.g. pv, pvc, deployment, storageclass, ..etc can help figure out the &lt;strong&gt;apiVersion&lt;/strong&gt;, and &lt;strong&gt;kind&lt;/strong&gt; combined with explain below will help in constructing the yaml manifest&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.heptio.com/kubectl-explain-heptioprotip-ee883992a243&#34;&gt;kubectl explain --recurisve&lt;/a&gt; to construct out any yaml manifest you need and find its specd and details&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When using kubectl for investigations and troubleshooting utilize the wide output it gives your more details&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;     $kubectl get pods -o wide  --show-labels  --all-namespaces&#xA;     or&#xA;     $kubectl get pods -o wide  --show-labels  -A     # -A is quicker than --all-namespaces&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;kubectl&lt;/code&gt; utilizie &lt;code&gt;--all-namespaces or better -A&lt;/code&gt; to ensure deployments, pods, objects are on the right name space, and right desired state&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;for events and troubleshooting utilize kubectl describe if its pod/resource related and logs if it is application issue related&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;     $kubectl describe pods &amp;lt;PODID&amp;gt;   # for pod, deployment, other k8s resource issues/events&#xA;     $kubectl logs &amp;lt;PODID&amp;gt;            # for container/application issues like crash loops&#xA;     &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/faun/be-fast-with-kubectl-1-18-ckad-cka-31be00acc443&#34;&gt;fast with kubectl&lt;/a&gt; e.g. the &#39;-o yaml&#39; in conjuction with &lt;code&gt;--dry-run=client&lt;/code&gt; allows you to create a manifest template from an imperative spec, combined with &lt;code&gt;--edit&lt;/code&gt; it allows you to modify the object before creation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl create service clusterip my-svc -o yaml --dry-run=client &amp;gt; /tmp/srv.yaml&#xA;kubectl create --edit -f /tmp/srv.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use kubectl &lt;a href=&#34;https://github.com/ahmetb/kubectl-aliases&#34;&gt;aliases&lt;/a&gt; to speed up and reduce typo errors, practice these alaises early at your work and study for the exam. some example aliases:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias k=&#39;kubectl&#39;&#xA;alias kg=&#39;kubectl get&#39;&#xA;alias kgpo=&#39;kubectl get pod&#39;&#xA;alias kcpyd=&#39;kubectl create pod -o yaml --dry-run=client&#39;&#xA;alias ksysgpo=&#39;kubectl --namespace=kube-system get pod&#39;&#xA;&#xA;alias kd=&#39;kubectl delete&#39;&#xA;alias kdf=&#39;kubectl delete -f&#39;&#xA;## for quick deletes you can add --force --grace-period=0  **Not sure if it is a good idea if you are in a production cluster**&#xA;alias krmgf=&#39;kubectl delete --grace-period 0 --force&#39;&#xA;alias kgsvcoyaml=&#39;kubectl get service -o=yaml&#39;&#xA;alias kgsvcwn=&#39;watch kubectl get service --namespace&#39;&#xA;alias kgsvcslwn=&#39;watch kubectl get service --show-labels --namespace&#39;&#xA;&#xA;#example usage of aliases&#xA;krmgf nginx-8jk71    # kill pod nginx-8jk71 using grace period 0 and force&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/cheatsheet/#bash&#34;&gt;kubectl autocomplete&lt;/a&gt;. Autocomplete is the life saviour in any timebound exam as well as our day to day work (e.g. If autocomplete enabled &lt;code&gt;k -n [Press Tab]&lt;/code&gt; will suggest available namespaces). Example command to enable autocomplete is available at official &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/cheatsheet/#bash&#34;&gt;kubectl Cheat Sheet&lt;/a&gt; page, you don&#39;t have to remember anything.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;source &amp;lt;(kubectl completion bash) # setup autocomplete in bash into the current shell, bash-completion package should be installed first.&#xA;echo &#34;source &amp;lt;(kubectl completion bash)&#34; &amp;gt;&amp;gt; ~/.bashrc # add autocomplete permanently to your bash shell.&#xA;&#xA;alias k=kubectl&#xA;complete -F __start_kubectl k&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Miscellaneous (resources not allowed during exam):&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ContainerSolutions/kubernetes-examples&#34;&gt;Troubleshooting use cases by Ian/Container solutions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Popular training and practice sites:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Double check if the course is uptodate with the latest exam information (e.g. api, or curicuilim)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/&#34;&gt;Mumshad CKA with practice tests and mock exams&lt;/a&gt; - Highly recommended&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://killer.sh/cka&#34;&gt;Killer.sh CKA simulator&lt;/a&gt; ⟹ use code &lt;strong&gt;walidshaari&lt;/strong&gt; for &lt;strong&gt;20%&lt;/strong&gt; discount - they update frequently&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.techworld-with-nana.com/kubernetes-administrator-cka&#34;&gt;AWS Container hero NANA CKA course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kube.academy/courses/how-to-prepare-for-the-cka-exam&#34;&gt;Kube Academy free How to prepare for the CKA exam training&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acloud.guru/overview/certified-kubernetes-administrator&#34;&gt;A Cloud Guru - Certified Kubernetes Administrator (CKA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/paths/certified-kubernetes-administrator&#34;&gt;Pluralsight CKA course&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/nocentino&#34;&gt;Anthony E. Nocentino &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acloud.guru/learn/7f5137aa-2d26-4b19-8d8c-025b22667e76&#34;&gt;LinuxAcademy/ACloudGuru CKA course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rx-m.com/cka-online-training/&#34;&gt;rx-m online CKA course&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Duffie Cooly &lt;a href=&#34;https://k8s.work/cka-lab.mp4&#34;&gt;hands-on CKA video&lt;/a&gt; using KinD and accompanying &lt;a href=&#34;https://hackmd.io/@mauilion/cka-lab&#34;&gt;notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/stilian-stoilov-379972a9/&#34;&gt;Stilian Stoilov&lt;/a&gt; &lt;a href=&#34;https://github.com/StenlyTU/K8s-training-official&#34;&gt;practice questions&lt;/a&gt; - 50+ tasks with increasing difficulty.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick review material&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adnan Rashisd CKA notes: can be found at &lt;a href=&#34;https://adnan.study/&#34;&gt;https://adnan.study/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What&#39;s Next:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn more about Kubernetes core components from &lt;a href=&#34;https://twitter.com/mauilion&#34;&gt;Duffie Cooly&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/playlist?list=PL7bmigfV0EqS6WxgWlH-p4dhkfuwcZ6-E&#34;&gt;TGIK Grokking playlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cncf.io/certification/ckad/&#34;&gt;CKAD Certified Kubernetes Application Developer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/walidshaari/Certified-Kubernetes-Secuirty-Specialist&#34;&gt;CKS Certified Kubernetes Security Specialist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Klustered: live youtube series of advanced level of internals troubleshooting. fun and interesting to watch &lt;a href=&#34;https://www.youtube.com/playlist?list=PLz0t90fOInA5IyhoT96WhycPV8Km-WICj&#34;&gt;Klustered&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>lewagon/dotfiles</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/lewagon/dotfiles</id>
    <link href="https://github.com/lewagon/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Default configuration for Le Wagon&#39;s students&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This repository is used by &lt;a href=&#34;https://www.lewagon.com&#34;&gt;Le Wagon&lt;/a&gt; students.&lt;/p&gt; &#xA;&lt;h2&gt;Toolset&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ohmyz.sh/&#34;&gt;oh-my-zsh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>kaldi-asr/kaldi</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/kaldi-asr/kaldi</id>
    <link href="https://github.com/kaldi-asr/kaldi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;kaldi-asr/kaldi is the official location of the Kaldi project.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://travis-ci.com/kaldi-asr/kaldi&#34;&gt;&lt;img src=&#34;https://travis-ci.com/kaldi-asr/kaldi.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/kaldi-asr/kaldi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt; Kaldi Speech Recognition Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;To build the toolkit: see &lt;code&gt;./INSTALL&lt;/code&gt;. These instructions are valid for UNIX systems including various flavors of Linux; Darwin; and Cygwin (has not been tested on more &#34;exotic&#34; varieties of UNIX). For Windows installation instructions (excluding Cygwin), see &lt;code&gt;windows/INSTALL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run the example system builds, see &lt;code&gt;egs/README.txt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you encounter problems (and you probably will), please do not hesitate to contact the developers (see below). In addition to specific questions, please let us know if there are specific aspects of the project that you feel could be improved, that you find confusing, etc., and which missing features you most wish it had.&lt;/p&gt; &#xA;&lt;h2&gt;Kaldi information channels&lt;/h2&gt; &#xA;&lt;p&gt;For HOT news about Kaldi see &lt;a href=&#34;http://kaldi-asr.org/&#34;&gt;the project site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kaldi-asr.org/doc/&#34;&gt;Documentation of Kaldi&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Info about the project, description of techniques, tutorial for C++ coding.&lt;/li&gt; &#xA; &lt;li&gt;Doxygen reference of the C++ code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kaldi-asr.org/forums.html&#34;&gt;Kaldi forums and mailing lists&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;We have two different lists&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User list kaldi-help&lt;/li&gt; &#xA; &lt;li&gt;Developer list kaldi-developers:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To sign up to any of those mailing lists, go to &lt;a href=&#34;http://kaldi-asr.org/forums.html&#34;&gt;http://kaldi-asr.org/forums.html&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;h2&gt;Development pattern for contributors&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/fork-a-repo/&#34;&gt;Create a personal fork&lt;/a&gt; of the &lt;a href=&#34;https://github.com/kaldi-asr/kaldi&#34;&gt;main Kaldi repository&lt;/a&gt; in GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Make your changes in a named branch different from &lt;code&gt;master&lt;/code&gt;, e.g. you create a branch &lt;code&gt;my-awesome-feature&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/creating-a-pull-request/&#34;&gt;Generate a pull request&lt;/a&gt; through the Web interface of GitHub.&lt;/li&gt; &#xA; &lt;li&gt;As a general rule, please follow &lt;a href=&#34;https://google.github.io/styleguide/cppguide.html&#34;&gt;Google C++ Style Guide&lt;/a&gt;. There are a &lt;a href=&#34;http://kaldi-asr.org/doc/style.html&#34;&gt;few exceptions in Kaldi&lt;/a&gt;. You can use the &lt;a href=&#34;https://raw.githubusercontent.com/google/styleguide/gh-pages/cpplint/cpplint.py&#34;&gt;Google&#39;s cpplint.py&lt;/a&gt; to verify that your code is free of basic mistakes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Platform specific notes&lt;/h2&gt; &#xA;&lt;h3&gt;PowerPC 64bits little-endian (ppc64le)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kaldi is expected to work out of the box in RHEL &amp;gt;= 7 and Ubuntu &amp;gt;= 16.04 with OpenBLAS, ATLAS, or CUDA.&lt;/li&gt; &#xA; &lt;li&gt;CUDA drivers for ppc64le can be found at &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;https://developer.nvidia.com/cuda-downloads&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://www.redbooks.ibm.com/abstracts/redp5169.html&#34;&gt;IBM Redbook&lt;/a&gt; is available as a guide to install and configure CUDA.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kaldi supports cross compiling for Android using Android NDK, clang++ and OpenBLAS.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;http://jcsilva.github.io/2017/03/18/compile-kaldi-android/&#34;&gt;this blog post&lt;/a&gt; for details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web Assembly&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kaldi supports cross compiling for Web Assembly for in-browser execution using &lt;a href=&#34;https://emscripten.org/&#34;&gt;emscripten&lt;/a&gt; and CLAPACK.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://gitlab.inria.fr/kaldi.web/kaldi-wasm/-/wikis/build_details.md&#34;&gt;this post&lt;/a&gt; for a step-by-step description of the build process.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-quickstart-templates</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/Azure/azure-quickstart-templates</id>
    <link href="https://github.com/Azure/azure-quickstart-templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Azure Quickstart Templates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure Resource Manager QuickStart Templates&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains all currently available Azure Resource Manager templates contributed by the community. A searchable template index is maintained at &lt;a href=&#34;https://azure.microsoft.com/en-us/documentation/templates&#34;&gt;azure.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/1-CONTRIBUTION-GUIDE/README.md#contribution-guide&#34;&gt;&lt;strong&gt;Contribution guide&lt;/strong&gt;&lt;/a&gt; for how to use or contribute to this repo.&lt;/p&gt; &#xA;&lt;h2&gt;NOTE&lt;/h2&gt; &#xA;&lt;p&gt;We have finished migration of the samples to subfolders, see &lt;a href=&#34;https://azure.microsoft.com/en-us/documentation/templates&#34;&gt;azure.com&lt;/a&gt; if you need help finding a sample. A few obsolete samples were removed in the migration.&lt;/p&gt; &#xA;&lt;h3&gt;Final Note&lt;/h3&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jgraph/drawio-desktop</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/jgraph/drawio-desktop</id>
    <link href="https://github.com/jgraph/drawio-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official electron build of diagrams.net&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;drawio-desktop&lt;/strong&gt; is a diagramming and whiteboarding desktop app based on &lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt; that wraps the &lt;a href=&#34;https://github.com/jgraph/drawio&#34;&gt;core draw.io editor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download built binaries from the &lt;a href=&#34;https://github.com/jgraph/drawio-desktop/releases&#34;&gt;releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import.&lt;/p&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;draw.io&lt;/strong&gt; is a git submodule of &lt;strong&gt;drawio-desktop&lt;/strong&gt;. To get both you need to clone recursively:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/jgraph/drawio-desktop.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the root directory of this repo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (in the drawio directory of this repo &lt;code&gt;drawio/src/main/webapp&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;export DRAWIO_ENV=dev if you want to develop/debug in dev mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; &lt;em&gt;in the root directory of this repo&lt;/em&gt; runs the app. For debugging, use &lt;code&gt;npm start --enable-logging&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To release:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Update the draw.io sub-module and push the change. Add version tag before pushing to origin.&lt;/li&gt; &#xA; &lt;li&gt;Wait for the builds to complete (&lt;a href=&#34;https://travis-ci.org/jgraph/drawio-desktop&#34;&gt;https://travis-ci.org/jgraph/drawio-desktop&lt;/a&gt; and &lt;a href=&#34;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&#34;&gt;https://ci.appveyor.com/project/davidjgraph/drawio-desktop&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/jgraph/drawio-desktop/releases&#34;&gt;https://github.com/jgraph/drawio-desktop/releases&lt;/a&gt;, edit the preview release.&lt;/li&gt; &#xA; &lt;li&gt;Download the windows exe and windows portable, sign them using &lt;code&gt;signtool sign /a /tr http://rfc3161timestamp.globalsign.com/advanced /td SHA256 c:/path/to/your/file.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Re-upload signed file as &lt;code&gt;draw.io-windows-installer-x.y.z.exe&lt;/code&gt; and &lt;code&gt;draw.io-windows-no-installer-x.y.z.exe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add release notes&lt;/li&gt; &#xA; &lt;li&gt;Publish release&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them.&lt;/p&gt; &#xA;&lt;h2&gt;Open-source, not open-contribution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.sqlite.org/copyright.html&#34;&gt;Similar to SQLite&lt;/a&gt;, diagrams.net is open source but closed to contributions.&lt;/p&gt; &#xA;&lt;p&gt;The level of complexity of this project means that even simple changes can break a &lt;em&gt;lot&lt;/em&gt; of other moving parts. The amount of testing required is far more than it first seems. If we were to receive a PR, we&#39;d have to basically throw it away and write it how we want it to be implemented.&lt;/p&gt; &#xA;&lt;p&gt;We are grateful for community involvement, bug reports, &amp;amp; feature requests. We do not wish to come off as anything but welcoming, however, we&#39;ve made the decision to keep this project closed to contributions for the long term viability of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/super-linter</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/github/super-linter</id>
    <link href="https://github.com/github/super-linter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Combination of multiple linters to install as a GitHub Action&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Super-Linter&lt;/h1&gt; &#xA;&lt;p&gt;This repository is for the &lt;strong&gt;GitHub Action&lt;/strong&gt; to run a &lt;strong&gt;Super-Linter&lt;/strong&gt;. It is a simple combination of various linters, written in &lt;code&gt;bash&lt;/code&gt;, to help validate your source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codacy.com/gh/github/super-linter/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=github/super-linter&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/51071879604e4f319859d4daf91c68f5&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The end goal of this tool:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prevent broken code from being uploaded to the default branch (&lt;em&gt;Usually&lt;/em&gt; &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;main&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Help establish coding best practices across multiple languages&lt;/li&gt; &#xA; &lt;li&gt;Build guidelines for code layout and format&lt;/li&gt; &#xA; &lt;li&gt;Automate the process to help streamline code reviews&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#super-linter&#34;&gt;Super-Linter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-it-works&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#supported-linters&#34;&gt;Supported Linters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-to-use&#34;&gt;How to use&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#example-connecting-github-action-workflow&#34;&gt;Example connecting GitHub Action Workflow&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#add-super-linter-badge-in-your-repository-readme&#34;&gt;Add Super-Linter badge in your repository README&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#images&#34;&gt;Images&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#standard-image&#34;&gt;Standard Image&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#slim-image&#34;&gt;Slim Image&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#environment-variables&#34;&gt;Environment variables&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#template-rules-files&#34;&gt;Template rules files&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#using-your-own-rules-files&#34;&gt;Using your own rules files&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#disabling-rules&#34;&gt;Disabling rules&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#using-your-own-ssh-key&#34;&gt;Using your own SSH key&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#filter-linted-files&#34;&gt;Filter linted files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#docker-hub&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#run-super-linter-outside-github-actions&#34;&gt;Run Super-Linter outside GitHub Actions&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#local-troubleshootingdebuggingenhancements&#34;&gt;Local (troubleshooting/debugging/enhancements)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#azure&#34;&gt;Azure&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#gitlab&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#ssl-certs&#34;&gt;SSL Certs&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#community-activity&#34;&gt;Community Activity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;The super-linter finds issues and reports them to the console output. Fixes are suggested in the console output but not automatically fixed, and a status check will show up as failed on the pull request.&lt;/p&gt; &#xA;&lt;p&gt;The design of the &lt;strong&gt;Super-Linter&lt;/strong&gt; is currently to allow linting to occur in &lt;strong&gt;GitHub Actions&lt;/strong&gt; as a part of continuous integration occurring on pull requests as the commits get pushed. It works best when commits are being pushed early and often to a branch with an open or draft pull request. There is some desire to move this closer to local development for faster feedback on linting errors but this is not yet supported.&lt;/p&gt; &#xA;&lt;h3&gt;Repository Visualization&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://super-linter.s3.us-west-2.amazonaws.com/diagram.svg?sanitize=true&#34; alt=&#34;Visualization of the codebase&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Linters&lt;/h2&gt; &#xA;&lt;p&gt;Developers on &lt;strong&gt;GitHub&lt;/strong&gt; can call the &lt;strong&gt;GitHub Action&lt;/strong&gt; to lint their codebase with the following list of linters:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;em&gt;Language&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;em&gt;Linter&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ansible&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ansible/ansible-lint&#34;&gt;ansible-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AWS CloudFormation templates&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/aws-cloudformation/cfn-python-lint/&#34;&gt;cfn-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Azure Resource Manager (Bicep)(ARM)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/azure/arm-ttk&#34;&gt;arm-ttk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cpplint/cpplint&#34;&gt;cpp-lint&lt;/a&gt; / &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotnet/format&#34;&gt;dotnet-format&lt;/a&gt; / &lt;a href=&#34;https://clang.llvm.org/docs/ClangFormatStyleOptions.html&#34;&gt;clang-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://stylelint.io/&#34;&gt;stylelint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/borkdude/clj-kondo&#34;&gt;clj-kondo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CoffeeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://coffeelint.github.io/&#34;&gt;coffeelint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Copy/paste detection&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kucherenko/jscpd&#34;&gt;jscpd&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dart&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dart.dev/guides/language/analysis-options&#34;&gt;dartanalyzer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;hadolint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EditorConfig&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/editorconfig-checker/editorconfig-checker&#34;&gt;editorconfig-checker&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ENV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dotenv-linter/dotenv-linter&#34;&gt;dotenv-linter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Gherkin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vsiakka/gherkin-lint&#34;&gt;gherkin-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GitHub Actions&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rhysd/actionlint&#34;&gt;actionlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Golang&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;&gt;golangci-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Groovy&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvuillam/npm-groovy-lint&#34;&gt;npm-groovy-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/htmlhint/HTMLHint&#34;&gt;HTMLHint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://checkstyle.org&#34;&gt;checkstyle&lt;/a&gt; / &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;google-java-format&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; / &lt;a href=&#34;https://standardjs.com/&#34;&gt;standard js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-json&#34;&gt;eslint-plugin-json&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSONC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-jsonc&#34;&gt;eslint-plugin-jsonc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kubeval&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/instrumenta/kubeval&#34;&gt;kubeval&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LaTeX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nongnu.org/chktex/&#34;&gt;ChkTex&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Lua&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/luarocks/luacheck&#34;&gt;luacheck&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#readme&#34;&gt;markdownlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Natural language&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://textlint.github.io/&#34;&gt;textlint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;OpenAPI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/stoplightio/spectral&#34;&gt;spectral&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://metacpan.org/pod/Perl::Critic&#34;&gt;perlcritic&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.php.net/&#34;&gt;PHP built-in linter&lt;/a&gt; / &lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP CodeSniffer&lt;/a&gt; / &lt;a href=&#34;https://phpstan.org/&#34;&gt;PHPStan&lt;/a&gt; / &lt;a href=&#34;https://psalm.dev/&#34;&gt;Psalm&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PowerShell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PowerShell/Psscriptanalyzer&#34;&gt;PSScriptAnalyzer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Protocol Buffers&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yoheimuta/protolint&#34;&gt;protolint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pylint.org/&#34;&gt;pylint&lt;/a&gt; / &lt;a href=&#34;https://flake8.pycqa.org/en/latest/&#34;&gt;flake8&lt;/a&gt; / &lt;a href=&#34;https://github.com/psf/black&#34;&gt;black&lt;/a&gt; / &lt;a href=&#34;https://pypi.org/project/isort/&#34;&gt;isort&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jimhester/lintr&#34;&gt;lintr&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Raku&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raku.org&#34;&gt;Raku&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rubocop-hq/rubocop&#34;&gt;RuboCop&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rust-lang/rustfmt&#34;&gt;Rustfmt&lt;/a&gt; / &lt;a href=&#34;https://github.com/rust-lang/rust-clippy&#34;&gt;Clippy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Scala&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/scalameta/scalafmt&#34;&gt;scalafmt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zricethezav/gitleaks&#34;&gt;GitLeaks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Shell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;Shellcheck&lt;/a&gt; / [executable bit check] / &lt;a href=&#34;https://github.com/mvdan/sh&#34;&gt;shfmt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Snakemake&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/snakemake/snakefmt/&#34;&gt;snakefmt&lt;/a&gt; / &lt;a href=&#34;https://snakemake.readthedocs.io/en/stable/snakefiles/writing_snakefiles.html#best-practices&#34;&gt;snakemake --lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/joereynolds/sql-lint&#34;&gt;sql-lint&lt;/a&gt; / &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff&#34;&gt;sqlfluff&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Tekton&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/IBM/tekton-lint&#34;&gt;tekton-lint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;tflint&lt;/a&gt; / &lt;a href=&#34;https://github.com/accurics/terrascan&#34;&gt;terrascan&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Terragrunt&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gruntwork-io/terragrunt&#34;&gt;terragrunt&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; / &lt;a href=&#34;https://standardjs.com/&#34;&gt;standard js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://xmlsoft.org/&#34;&gt;LibXML&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/adrienverge/yamllint&#34;&gt;YamlLint&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;More in-depth &lt;a href=&#34;https://www.youtube.com/watch?v=EDAmFKO4Zt0&amp;amp;t=118s&#34;&gt;tutorial&lt;/a&gt; available&lt;/p&gt; &#xA;&lt;p&gt;To use this &lt;strong&gt;GitHub&lt;/strong&gt; Action you will need to complete the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new file in your repository called &lt;code&gt;.github/workflows/linter.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the example workflow from below into that new file, no extra configuration required&lt;/li&gt; &#xA; &lt;li&gt;Commit that file to a new branch&lt;/li&gt; &#xA; &lt;li&gt;Open up a pull request and observe the action working&lt;/li&gt; &#xA; &lt;li&gt;Enjoy your more &lt;em&gt;stable&lt;/em&gt;, and &lt;em&gt;cleaner&lt;/em&gt; codebase&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://github.com/github/super-linter/wiki&#34;&gt;Wiki&lt;/a&gt; for customization options&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you pass the &lt;em&gt;Environment&lt;/em&gt; variable &lt;code&gt;GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&lt;/code&gt; in your workflow, then the &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt; will mark the status of each individual linter run in the Checks section of a pull request. Without this you will only see the overall status of the full run. There is no need to set the &lt;strong&gt;GitHub&lt;/strong&gt; Secret as it is automatically set by GitHub, it only needs to be passed to the action.&lt;/p&gt; &#xA;&lt;h3&gt;Example connecting GitHub Action Workflow&lt;/h3&gt; &#xA;&lt;p&gt;In your repository you should have a &lt;code&gt;.github/workflows&lt;/code&gt; folder with &lt;strong&gt;GitHub&lt;/strong&gt; Action similar to below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.github/workflows/linter.yml&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example file can be found at &lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/TEMPLATES/linter.yml&#34;&gt;&lt;code&gt;TEMPLATES/linter.yml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This file should have the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;---&#xA;#################################&#xA;#################################&#xA;## Super Linter GitHub Actions ##&#xA;#################################&#xA;#################################&#xA;name: Lint Code Base&#xA;&#xA;#&#xA;# Documentation:&#xA;# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions&#xA;#&#xA;&#xA;#############################&#xA;# Start the job on all push #&#xA;#############################&#xA;on:&#xA;  push:&#xA;    branches-ignore: [master, main]&#xA;    # Remove the line above to run when pushing to master&#xA;  pull_request:&#xA;    branches: [master, main]&#xA;&#xA;###############&#xA;# Set the Job #&#xA;###############&#xA;jobs:&#xA;  build:&#xA;    # Name the Job&#xA;    name: Lint Code Base&#xA;    # Set the agent to run on&#xA;    runs-on: ubuntu-latest&#xA;&#xA;    ##################&#xA;    # Load all steps #&#xA;    ##################&#xA;    steps:&#xA;      ##########################&#xA;      # Checkout the code base #&#xA;      ##########################&#xA;      - name: Checkout Code&#xA;        uses: actions/checkout@v3&#xA;        with:&#xA;          # Full git history is needed to get a proper list of changed files within `super-linter`&#xA;          fetch-depth: 0&#xA;&#xA;      ################################&#xA;      # Run Linter against code base #&#xA;      ################################&#xA;      - name: Lint Code Base&#xA;        uses: github/super-linter@v4&#xA;        env:&#xA;          VALIDATE_ALL_CODEBASE: false&#xA;          DEFAULT_BRANCH: master&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add Super-Linter badge in your repository README&lt;/h3&gt; &#xA;&lt;p&gt;You can show Super-Linter status with a badge in your repository README&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/marketplace/actions/super-linter&#34;&gt;&lt;img src=&#34;https://github.com/nvuillam/npm-groovy-lint/workflows/Lint%20Code%20Base/badge.svg?sanitize=true&#34; alt=&#34;GitHub Super-Linter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![GitHub Super-Linter](https://github.com/&amp;lt;OWNER&amp;gt;/&amp;lt;REPOSITORY&amp;gt;/workflows/Lint%20Code%20Base/badge.svg)](https://github.com/marketplace/actions/super-linter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![GitHub Super-Linter](https://github.com/nvuillam/npm-groovy-lint/workflows/Lint%20Code%20Base/badge.svg)](https://github.com/marketplace/actions/super-linter)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; IF you did not use &lt;code&gt;Lint Code Base&lt;/code&gt; as GitHub Action name, please read &lt;a href=&#34;https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/adding-a-workflow-status-badge&#34;&gt;GitHub Actions Badges documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Images&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt; now builds and supports &lt;code&gt;multiple&lt;/code&gt; images. We have found as we added more linters, the image size expanded drastically. After further investigation, we were able to see that a few linters were very disk heavy. We removed those linters and created the &lt;code&gt;slim&lt;/code&gt; image. This allows users to choose which &lt;strong&gt;Super-Linter&lt;/strong&gt; they want to run and potentially speed up their build time. The available images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;github/super-linter:v4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;github/super-linter:slim-v4&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Standard Image&lt;/h4&gt; &#xA;&lt;p&gt;The standard &lt;code&gt;github/super-linter:v4&lt;/code&gt; comes with all supported linters. Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;################################&#xA;# Run Linter against code base #&#xA;################################&#xA;- name: Lint Code Base&#xA;  uses: github/super-linter@v4&#xA;  env:&#xA;    VALIDATE_ALL_CODEBASE: false&#xA;    DEFAULT_BRANCH: master&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Slim Image&lt;/h4&gt; &#xA;&lt;p&gt;The slim &lt;code&gt;github/super-linter:slim-v4&lt;/code&gt; comes with all supported linters but removes the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rust&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dotenv&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;armttk&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pwsh&lt;/code&gt; linters&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;c#&lt;/code&gt; linters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By removing these linters, we were able to bring the image size down by &lt;code&gt;2gb&lt;/code&gt; and drastically speed up the build and download time. The behavior will be the same for non-supported languages, and will skip languages at run time. Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;################################&#xA;# Run Linter against code base #&#xA;################################&#xA;- name: Lint Code Base&#xA;  uses: github/super-linter/slim@v4&#xA;  env:&#xA;    VALIDATE_ALL_CODEBASE: false&#xA;    DEFAULT_BRANCH: master&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;The super-linter allows you to pass the following &lt;code&gt;ENV&lt;/code&gt; variables to be able to trigger different functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; All the &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables behave in a very specific way:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If none of them are passed, then they all default to true.&lt;/li&gt; &#xA; &lt;li&gt;If any one of the variables are set to true, we default to leaving any unset variable to false (only validate those languages).&lt;/li&gt; &#xA; &lt;li&gt;If any one of the variables are set to false, we default to leaving any unset variable to true (only exclude those languages).&lt;/li&gt; &#xA; &lt;li&gt;If there are &lt;code&gt;VALIDATE_[LANGUAGE]&lt;/code&gt; variables set to both true and false. It will fail.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This means that if you run the linter &#34;out of the box&#34;, all languages will be checked. But if you wish to select or exclude specific linters, we give you full control to choose which linters are run, and won&#39;t run anything unexpected.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;ENV VAR&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Default Value&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ACTIONS_RUNNER_DEBUG&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable additional information about the linter, versions, and additional output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ansible-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://ansible-lint.readthedocs.io/en/latest/configuring.html#configuration-file&#34;&gt;Ansible-lint configuration&lt;/a&gt; (ex: &lt;code&gt;.ansible-lint&lt;/code&gt;, &lt;code&gt;.ansible-lint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_DIRECTORY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/ansible&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the root directory for Ansible file location(s), relative to &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;. Set to &lt;code&gt;.&lt;/code&gt; to use the top-level of the &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ANSIBLE_ROLES_PATH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;${ANSIBLE_DIRECTORY}/roles&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the Ansible roles directory.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CSS_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.stylelintrc.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/stylelint/stylelint&#34;&gt;Stylelint configuration&lt;/a&gt; (ex: &lt;code&gt;.stylelintrc.yml&lt;/code&gt;, &lt;code&gt;.stylelintrc.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEFAULT_BRANCH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The name of the repository default branch.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEFAULT_WORKSPACE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/tmp/lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The location containing files to lint if you are running locally.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DISABLE_ERRORS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to have the linter complete with exit code 0 even if errors were detected.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DOCKERFILE_HADOLINT_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.hadolint.yaml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/hadolint/hadolint&#34;&gt;hadolint configuration&lt;/a&gt; (ex: &lt;code&gt;.hadolintlintrc.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EDITORCONFIG_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ecrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/editorconfig-checker/editorconfig-checker&#34;&gt;editorconfig-checker configuration&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ERROR_ON_MISSING_EXEC_BIT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;bash-exec&lt;/code&gt; linter will report a warning if a shell script is not executable. If set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;bash-exec&lt;/code&gt; linter will report an error instead.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FILTER_REGEX_EXCLUDE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regular expression defining which files will be excluded from linting (ex: &lt;code&gt;.*src/test.*&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FILTER_REGEX_INCLUDE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regular expression defining which files will be processed by linters (ex: &lt;code&gt;.*src/.*&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_ACTIONS_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;actionlint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/rhysd/actionlint/raw/main/docs/config.md&#34;&gt;Actionlint configuration&lt;/a&gt; (ex: &lt;code&gt;actionlint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_CUSTOM_API_URL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.github.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub API URL in case GitHub Enterprise is used: e.g. &lt;code&gt;https://github.myenterprise.com/api/v3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITHUB_DOMAIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;github.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a custom GitHub domain in case GitHub Enterprise is used: e.g. &lt;code&gt;github.myenterprise.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GITLEAKS_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.gitleaks.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/zricethezav/gitleaks#configuration&#34;&gt;GitLeaks configuration&lt;/a&gt; (ex: &lt;code&gt;.geatleaks.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IGNORE_GENERATED_FILES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will ignore all the files with &lt;code&gt;@generated&lt;/code&gt; marker but without &lt;code&gt;@not-generated&lt;/code&gt; marker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IGNORE_GITIGNORED_FILES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, super-linter will ignore all the files that are ignored by Git.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVA_FILE_NAME&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sun_checks.xml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://checkstyle.sourceforge.io/config.html&#34;&gt;Checkstyle configuration&lt;/a&gt; (ex: &lt;code&gt;checkstyle.xml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVASCRIPT_DEFAULT_STYLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;standard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the default style of JavaScript. Available options: &lt;strong&gt;standard&lt;/strong&gt;/&lt;strong&gt;prettier&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JAVASCRIPT_ES_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.eslintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring#configuration-file-formats&#34;&gt;ESLint configuration&lt;/a&gt; (ex: &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;JSCPD_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.jscpd.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for JSCPD configuration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;KUBERNETES_KUBEVAL_OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments to pass to the command-line when running &lt;strong&gt;Kubernetes Kubeval&lt;/strong&gt; (Example: --ignore-missing-schemas)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LINTER_RULES_PATH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.github/linters&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directory for all linter configuration rules.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LOG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;super-linter.log&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The filename for outputting logs. All output is sent to the log file regardless of &lt;code&gt;LOG_LEVEL&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LOG_LEVEL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;VERBOSE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How much output the script will generate to the console. One of &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;NOTICE&lt;/code&gt;, &lt;code&gt;VERBOSE&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt; or &lt;code&gt;TRACE&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MARKDOWN_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.markdown-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/DavidAnson/markdownlint#optionsconfig&#34;&gt;Markdownlint configuration&lt;/a&gt; (ex: &lt;code&gt;.markdown-lint.yml&lt;/code&gt;, &lt;code&gt;.markdownlint.json&lt;/code&gt;, &lt;code&gt;.markdownlint.yaml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MARKDOWN_CUSTOM_RULE_GLOBS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.markdown-lint/rules,rules/**&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated list of &lt;a href=&#34;https://github.com/igorshubovych/markdownlint-cli#globbing&#34;&gt;file globs&lt;/a&gt; matching &lt;a href=&#34;https://github.com/DavidAnson/markdownlint/raw/main/doc/CustomRules.md&#34;&gt;custom Markdownlint rule files&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MULTI_STATUS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A status API is made for each language that is linted to make visual parsing easier.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;NATURAL_LANGUAGE_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.textlintrc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://textlint.github.io/docs/getting-started.html#configuration&#34;&gt;textlint configuration&lt;/a&gt; (ex: &lt;code&gt;.textlintrc&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PERL_PERLCRITIC_OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional arguments to pass to the command-line when running &lt;strong&gt;perlcritic&lt;/strong&gt; (Example: --theme community)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PHP_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;php.ini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://www.php.net/manual/en/configuration.file.php&#34;&gt;PHP Configuration&lt;/a&gt; (ex: &lt;code&gt;php.ini&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PROTOBUF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.protolintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/yoheimuta/protolint/raw/master/_example/config/.protolint.yaml&#34;&gt;protolint configuration&lt;/a&gt; (ex: &lt;code&gt;.protolintrc.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_BLACK_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.python-black&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/psf/black/raw/main/docs/guides/using_black_with_other_tools.md#black-compatible-configurations&#34;&gt;black configuration&lt;/a&gt; (ex: &lt;code&gt;.isort.cfg&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_FLAKE8_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.flake8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://flake8.pycqa.org/en/latest/user/configuration.html&#34;&gt;flake8 configuration&lt;/a&gt; (ex: &lt;code&gt;.flake8&lt;/code&gt;, &lt;code&gt;tox.ini&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_ISORT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.isort.cfg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://pycqa.github.io/isort/docs/configuration/config_files.html&#34;&gt;isort configuration&lt;/a&gt; (ex: &lt;code&gt;.isort.cfg&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_MYPY_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.mypy.ini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/config_file.html&#34;&gt;mypy configuration&lt;/a&gt; (ex: &lt;code&gt;.mypi.ini&lt;/code&gt;, &lt;code&gt;setup.config&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PYTHON_PYLINT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.python-lint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://pylint.pycqa.org/en/latest/user_guide/run.html?highlight=rcfile#command-line-options&#34;&gt;pylint configuration&lt;/a&gt; (ex: &lt;code&gt;.python-lint&lt;/code&gt;, &lt;code&gt;.pylintrc&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;RUBY_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.ruby-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.rubocop.org/rubocop/configuration.html&#34;&gt;rubocop configuration&lt;/a&gt; (ex: &lt;code&gt;.ruby-lint.yml&lt;/code&gt;, &lt;code&gt;.rubocop.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SCALAFMT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.scalafmt.conf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://scalameta.org/scalafmt/docs/configuration.html&#34;&gt;scalafmt configuration&lt;/a&gt; (ex: &lt;code&gt;.scalafmt.conf&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SNAKEMAKE_SNAKEFMT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.snakefmt.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/snakemake/snakefmt#configuration&#34;&gt;Snakemake configuration&lt;/a&gt; (ex: &lt;code&gt;pyproject.toml&lt;/code&gt;, &lt;code&gt;.snakefmt.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSL_CERT_SECRET&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL cert to add to the &lt;strong&gt;Super-Linter&lt;/strong&gt; trust store. This is needed for users on &lt;code&gt;self-hosted&lt;/code&gt; runners or need to inject the cert for security standards (ex. ${{ secrets.SSL_CERT }})&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_KEY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSH key that has access to your private repositories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_SETUP_GITHUB&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, adds the &lt;code&gt;github.com&lt;/code&gt; SSH key to &lt;code&gt;known_hosts&lt;/code&gt;. This is ignored if &lt;code&gt;SSH_KEY&lt;/code&gt; is provided - i.e. the &lt;code&gt;github.com&lt;/code&gt; SSH key is always added if &lt;code&gt;SSH_KEY&lt;/code&gt; is provided&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SSH_INSECURE_NO_VERIFY_GITHUB_KEY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;INSECURE -&lt;/strong&gt; If set to &lt;code&gt;true&lt;/code&gt;, does not verify the fingerprint of the github.com SSH key before adding this. This is not recommended!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQL_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.sql-config.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://sql-lint.readthedocs.io/en/latest/files/configuration.html&#34;&gt;SQL-Lint configuration&lt;/a&gt; (ex: &lt;code&gt;sql-config.json&lt;/code&gt; , &lt;code&gt;.config.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SQLFLUFF_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/.sqlfluff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/configuration.html&#34;&gt;SQLFLUFF configuration&lt;/a&gt; (ex: &lt;code&gt;/.sqlfluff&lt;/code&gt;, &lt;code&gt;pyproject.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPPRESS_FILE_TYPE_WARN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will hide warning messages about files without their proper extensions. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SUPPRESS_POSSUM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will hide the ASCII possum at top of log output. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TERRAFORM_TERRASCAN_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terrascan.toml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/accurics/terrascan&#34;&gt;terrascan configuration&lt;/a&gt; (ex: &lt;code&gt;terrascan.toml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TERRAFORM_TFLINT_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.tflint.hcl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://github.com/terraform-linters/tflint&#34;&gt;tfLint configuration&lt;/a&gt; (ex: &lt;code&gt;.tflint.hcl&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_DEFAULT_STYLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ts-standard&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to set the default style of TypeScript. Available options: &lt;strong&gt;ts-standard&lt;/strong&gt;/&lt;strong&gt;prettier&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_ES_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.eslintrc.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://eslint.org/docs/user-guide/configuring#configuration-file-formats&#34;&gt;ESLint configuration&lt;/a&gt; (ex: &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TYPESCRIPT_STANDARD_TSCONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&#34;&gt;TypeScript configuration&lt;/a&gt; in &lt;a href=&#34;https://github.com/standard/ts-standard&#34;&gt;ts-standard&lt;/a&gt; (ex: &lt;code&gt;tsconfig.json&lt;/code&gt;, &lt;code&gt;tsconfig.eslint.json&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;USE_FIND_ALGORITHM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;By default, we use &lt;code&gt;git diff&lt;/code&gt; to find all files in the workspace and what has been updated, this would enable the Linux &lt;code&gt;find&lt;/code&gt; method instead to find all files to lint&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ALL_CODEBASE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Will parse the entire repository and find all files to validate across all types. &lt;strong&gt;NOTE:&lt;/strong&gt; When set to &lt;code&gt;false&lt;/code&gt;, only &lt;strong&gt;new&lt;/strong&gt; or &lt;strong&gt;edited&lt;/strong&gt; files will be parsed for validation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSCPD_ALL_CODEBASE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, will lint the whole codebase with JSCPD. If set to &lt;code&gt;false&lt;/code&gt;, JSCPD will only lint files one by one.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ANSIBLE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Ansible language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ARM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the ARM language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_BASH&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Bash language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_BASH_EXEC&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Bash language to validate if file is stored as executable.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CPP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C++ language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLANG_FORMAT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C++/C language with clang-format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLOJURE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Clojure language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CLOUDFORMATION&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the AWS Cloud Formation language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_COFFEESCRIPT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Coffeescript language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CSHARP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the C# language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_CSS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the CSS language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_DART&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Dart language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_DOCKERFILE_HADOLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Docker language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_EDITORCONFIG&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process with the EditorConfig.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_ENV&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the ENV language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GHERKIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Gherkin language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GITHUB_ACTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the GitHub Actions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GITLEAKS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the secrets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GO&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Golang language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GOOGLE_JAVA_FORMAT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Java language. (Utilizing: google-java-format)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_GROOVY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_HTML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the HTML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Java language. (Utilizing: checkstyle)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVASCRIPT_ES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JavaScript language. (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JAVASCRIPT_STANDARD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JavaScript language. (Utilizing: standard)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSCPD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the JSCPD.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the JSON language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_JSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for jsx files (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KOTLIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Kotlin language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KOTLIN_ANDROID&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Kotlin language. (Utilizing: &lt;code&gt;ktlint --android&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_KUBERNETES_KUBEVAL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Kubernetes descriptors with Kubeval&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_LATEX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the LaTeX language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_LUA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_MARKDOWN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Markdown language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_NATURAL_LANGUAGE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the natural language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_OPENAPI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the OpenAPI language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PERL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Perl language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter) (keep for backward compatibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_BUILTIN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PHPCS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP CodeSniffer)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PHPSTAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PHPStan)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PHP_PSALM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the PHP language. (Utilizing: PSalm)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_POWERSHELL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Powershell language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PROTOBUF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Protobuf language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: pylint) (keep for backward compatibility)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_BLACK&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: black)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_FLAKE8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: flake8)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_ISORT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: isort)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_MYPY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: mypy)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_PYTHON_PYLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Python language. (Utilizing: pylint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_R&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the R language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RAKU&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Raku language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUBY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Ruby language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2015&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Rust language. (edition: 2015)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2018&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Rust language. (edition: 2018)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_2021&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Rust language. (edition: 2021)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_RUST_CLIPPY&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the clippy linting process of Rust language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SCALAFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Scala language. (Utilizing: scalafmt --test)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SHELL_SHFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Shell scripts. (Utilizing: shfmt)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SNAKEMAKE_LINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakemake --lint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SNAKEMAKE_SNAKEFMT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakefmt)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_STATES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for AWS States Language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SQL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the SQL language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_SQLFLUFF&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the SQL language. (Utilizing: sqlfuff)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TEKTON&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Tekton language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_TERRASCAN&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Terraform language for security related issues.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAFORM_TFLINT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the Terraform language. (Utilizing tflint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TERRAGRUNT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for Terragrunt files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process for tsx files (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TYPESCRIPT_ES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the TypeScript language. (Utilizing: eslint)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_TYPESCRIPT_STANDARD&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ts-standard)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_XML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the XML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;VALIDATE_YAML&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the linting process of the YAML language.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML_CONFIG_FILE&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;.yaml-lint.yml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filename for &lt;a href=&#34;https://yamllint.readthedocs.io/en/stable/configuration.html&#34;&gt;Yamllint configuration&lt;/a&gt; (ex: &lt;code&gt;.yaml-lint.yml&lt;/code&gt;, &lt;code&gt;.yamllint.yml&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;YAML_ERROR_ON_WARNING&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Flag to enable or disable the error on warning for Yamllint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Template rules files&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;strong&gt;GitHub&lt;/strong&gt; &lt;strong&gt;Super-Linter&lt;/strong&gt; &lt;em&gt;with&lt;/em&gt; or &lt;em&gt;without&lt;/em&gt; your own personal rules sets. This allows for greater flexibility for each individual codebase. The Template rules all try to follow the standards we believe should be enabled at the basic level.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy &lt;strong&gt;any&lt;/strong&gt; or &lt;strong&gt;all&lt;/strong&gt; template rules files from &lt;code&gt;TEMPLATES/&lt;/code&gt; into the &lt;code&gt;.github/linters/&lt;/code&gt; directory of your repository, and modify them to suit your needs. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The rules files in &lt;a href=&#34;https://github.com/github/super-linter/tree/main/TEMPLATES&#34;&gt;this repository&#39;s &lt;code&gt;TEMPLATE&lt;/code&gt; folder&lt;/a&gt; will be used as defaults should any be omitted.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using your own rules files&lt;/h3&gt; &#xA;&lt;p&gt;If your repository contains your own rules files that live outside of a &lt;code&gt;.github/linters/&lt;/code&gt; directory, you will have to tell Super-Linter where your rules files are located in your repository, and what their filenames are. To learn more, see &lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/docs/using-rules-files.md&#34;&gt;Using your own rules files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Disabling rules&lt;/h3&gt; &#xA;&lt;p&gt;If you need to disable certain &lt;em&gt;rules&lt;/em&gt; and &lt;em&gt;functionality&lt;/em&gt;, you can view &lt;a href=&#34;https://github.com/github/super-linter/raw/main/docs/disabling-linters.md&#34;&gt;Disable Rules&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using your own SSH key&lt;/h3&gt; &#xA;&lt;p&gt;If you need to add your own SSH key to the linter because of private dependencies, you can use the &lt;code&gt;SSH_KEY&lt;/code&gt; environment variable. The value of that environment variable should be an SSH private key that has access to your private repositories.&lt;/p&gt; &#xA;&lt;p&gt;You should add this key as an &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;Encrypted Secret&lt;/a&gt; and access it with the &lt;code&gt;secrets&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;p&gt;Example workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;---&#xA;#################################&#xA;#################################&#xA;## Super Linter GitHub Actions ##&#xA;#################################&#xA;#################################&#xA;name: Lint Code Base&#xA;&#xA;#&#xA;# Documentation:&#xA;# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions&#xA;#&#xA;&#xA;#############################&#xA;# Start the job on all push #&#xA;#############################&#xA;on:&#xA;  push:&#xA;    branches-ignore: [master, main]&#xA;    # Remove the line above to run when pushing to master&#xA;  pull_request:&#xA;    branches: [master, main]&#xA;&#xA;###############&#xA;# Set the Job #&#xA;###############&#xA;jobs:&#xA;  build:&#xA;    # Name the Job&#xA;    name: Lint Code Base&#xA;    # Set the agent to run on&#xA;    runs-on: ubuntu-latest&#xA;&#xA;    ##################&#xA;    # Load all steps #&#xA;    ##################&#xA;    steps:&#xA;      ##########################&#xA;      # Checkout the code base #&#xA;      ##########################&#xA;      - name: Checkout Code&#xA;        uses: actions/checkout@v2&#xA;        with:&#xA;          # Full git history is needed to get a proper list of changed files within `super-linter`&#xA;          fetch-depth: 0&#xA;&#xA;      ################################&#xA;      # Run Linter against code base #&#xA;      ################################&#xA;      - name: Lint Code Base&#xA;        uses: github/super-linter@v4&#xA;        env:&#xA;          VALIDATE_ALL_CODEBASE: false&#xA;          DEFAULT_BRANCH: master&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Filter linted files&lt;/h2&gt; &#xA;&lt;p&gt;If you need to lint only a folder or exclude some files from linting, you can use optional environment parameters &lt;code&gt;FILTER_REGEX_INCLUDE&lt;/code&gt; and &lt;code&gt;FILTER_REGEX_EXCLUDE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lint only src folder: &lt;code&gt;FILTER_REGEX_INCLUDE: .*src/.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not lint files inside test folder: &lt;code&gt;FILTER_REGEX_EXCLUDE: .*test/.*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do not lint JavaScript files inside test folder: &lt;code&gt;FILTER_REGEX_EXCLUDE: .*test/.*.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- This `README.md` has both markers in the text, so it is considered not generated. --&gt; &#xA;&lt;p&gt;Additionally when &lt;code&gt;IGNORE_GENERATED_FILES=true&lt;/code&gt;, super-linter ignores any file with &lt;code&gt;@generated&lt;/code&gt; marker in it unless the file also has &lt;code&gt;@not-generated&lt;/code&gt; marker. &lt;code&gt;@generated&lt;/code&gt; marker is &lt;a href=&#34;https://engineering.fb.com/2015/08/20/open-source/writing-code-that-writes-code-with-hack-codegen/&#34;&gt;used by Facebook&lt;/a&gt; and some other projects to mark generated files. For example, this file is considered generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh&#xA;echo &#34;@generated&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And this file is considered not generated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh&#xA;echo &#34;@generated&#34; # @not-generated&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Hub&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Docker&lt;/strong&gt; container that is built from this repository is located at &lt;a href=&#34;https://hub.docker.com/r/github/super-linter&#34;&gt;github/super-linter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run Super-Linter outside GitHub Actions&lt;/h2&gt; &#xA;&lt;h3&gt;Local (troubleshooting/debugging/enhancements)&lt;/h3&gt; &#xA;&lt;p&gt;If you find that you need to run super-linter locally, you can follow the documentation at &lt;a href=&#34;https://github.com/github/super-linter/raw/main/docs/run-linter-locally.md&#34;&gt;Running super-linter locally&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/github/super-linter/main/#how-it-works&#34;&gt;note&lt;/a&gt; in &lt;strong&gt;How it Works&lt;/strong&gt; to understand more about the &lt;strong&gt;Super-Linter&lt;/strong&gt; linting locally versus via continuous integration.&lt;/p&gt; &#xA;&lt;h3&gt;Azure&lt;/h3&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://blog.tyang.org/2020/06/27/use-github-super-linter-in-azure-pipelines/&#34;&gt;article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GitLab&lt;/h3&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://gitlab.com/snippets/1988376&#34;&gt;snippet&lt;/a&gt; and this Guided Exploration: &lt;a href=&#34;https://gitlab.com/guided-explorations/ci-cd-plugin-extensions/ci-cd-plugin-extension-github-action-super-linter&#34;&gt;GitLab CI CD Extension for Super-Linter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;You can checkout this repository using &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;Container Remote Development&lt;/a&gt;, and debug the linter using the &lt;code&gt;Test Linter&lt;/code&gt; task. &lt;img src=&#34;https://user-images.githubusercontent.com/15258962/85165778-2d2ce700-b21b-11ea-803e-3f6709d8e609.gif&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We will also support &lt;a href=&#34;https://github.com/features/codespaces/&#34;&gt;GitHub Codespaces&lt;/a&gt; once it becomes available&lt;/p&gt; &#xA;&lt;h3&gt;SSL Certs&lt;/h3&gt; &#xA;&lt;p&gt;If you need to inject a SSL cert into the trust store, you will need to first copy the cert to &lt;strong&gt;GitHub Secrets&lt;/strong&gt; Once you have copied the plain text certificate into &lt;strong&gt;GitHub Secrets&lt;/strong&gt;, you can use the variable &lt;code&gt;SSL_CERT_SECRET&lt;/code&gt; to point the &lt;strong&gt;Super-Linter&lt;/strong&gt; to the files contents. Once found, it will load the certificate contents to a file, and to the trust store.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Example workflow:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;- name: Lint Code Base&#xA;  uses: github/super-linter@v4&#xA;  env:&#xA;    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;    SSL_CERT_SECRET: ${{ secrets.ROOT_CA }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cauldron.io/project/2083/stats.svg?sanitize=true&#34; alt=&#34;super-linter stats&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Below are a list of the known limitations for the &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Due to being completely packaged at run time, you will not be able to update dependencies or change versions of the enclosed linters and binaries&lt;/li&gt; &#xA; &lt;li&gt;Additional details from &lt;code&gt;package.json&lt;/code&gt; are not read by the &lt;strong&gt;GitHub Super-Linter&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Downloading additional codebases as dependencies from private repositories will fail due to lack of permissions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to help contribute to this &lt;strong&gt;GitHub&lt;/strong&gt; Action, please see &lt;a href=&#34;https://github.com/github/super-linter/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/super-linter/raw/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microverseinc/linters-config</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/microverseinc/linters-config</id>
    <link href="https://github.com/microverseinc/linters-config" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linters Config&lt;/h1&gt; &#xA;&lt;h2&gt;How to use this repo? 🤔&lt;/h2&gt; &#xA;&lt;p&gt;Each directory listed below contains config files specific to one programming language and README file with detailed instructions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/html-css&#34;&gt;html&amp;amp;css&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/html-css-js&#34;&gt;html&amp;amp;css + javascript&lt;/a&gt; (for projects that require you to use both JavaScript and HTML &amp;amp; CSS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/ruby&#34;&gt;ruby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/ror&#34;&gt;ror&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/javascript&#34;&gt;javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/react-redux&#34;&gt;react&amp;amp;redux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Follow those instructions in order to set up linters or validators in your repo.&lt;/p&gt; &#xA;&lt;p&gt;In order to get to know more about linters and GitHub Actions read the recap below.&lt;/p&gt; &#xA;&lt;h2&gt;Linters&lt;/h2&gt; &#xA;&lt;p&gt;A linter is a tool that analyzes your source code to flag programming errors, bugs, stylistic errors, and suspicious constructs(source: &lt;a href=&#34;https://en.wikipedia.org/wiki/Lint_(software)&#34;&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;There are a few reasons for using linters:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Catching syntax errors is more efficient. There is no need to debug simple mistakes like typos - the linter does it for you.&lt;/li&gt; &#xA; &lt;li&gt;The entire codebase looks like written by one person.&lt;/li&gt; &#xA; &lt;li&gt;Programmers can focus on solving problems, instead of cleaning up the code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;You can find linters for most of the programming languages, e.g. Rubocop for Ruby or ESLint for JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;Also, there are many ways you can integrate a linter in your workflow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;text editor plugin&lt;/li&gt; &#xA; &lt;li&gt;GitHub Actions&lt;/li&gt; &#xA; &lt;li&gt;GitHub apps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://help.github.com/en/actions&#34;&gt;Github Actions&lt;/a&gt; is a &lt;a href=&#34;https://codilime.com/what-is-ci-cd-all-you-need-to-know/&#34;&gt;CI/CD&lt;/a&gt; service offered by GitHub. It allows you to automate your workflow by letting GitHub take care of a number of tasks which can be triggered by &lt;a href=&#34;https://help.github.com/en/actions/reference/events-that-trigger-workflows&#34;&gt;different of events&lt;/a&gt; on the platform.&lt;/p&gt; &#xA;&lt;p&gt;🐛 &lt;strong&gt;What to do if GitHub Actions does not work?&lt;/strong&gt; Check &lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;p&gt;You can automate tasks by creating &lt;strong&gt;workflows&lt;/strong&gt; in your GitHub repository. GitHub will look for &lt;a href=&#34;https://en.wikipedia.org/wiki/YAML&#34;&gt;YAML&lt;/a&gt; files inside of the &lt;code&gt;.github/workflows&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Depending on the configuration of your GitHub credentials, you may have an error like this when trying to create a new GitHub Actions workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;! [remote rejected] master -&amp;gt; master (refusing to allow an OAuth App to create or update workflow `.github/workflows/file.yml` without `workflow` scope)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The problem is that you may be using a credentials app like &lt;a href=&#34;https://github.com/gitextensions/gitextensions/issues/4916#issuecomment-557509451&#34;&gt;Credential Manager in Windows&lt;/a&gt; or OSX Keychain. In that case, you should &lt;a href=&#34;https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line&#34;&gt;setup a personal access token&lt;/a&gt; and configure it in your credentials app. Make sure to check the &lt;code&gt;workflow&lt;/code&gt; permissions when you setup your personal access token.&lt;/p&gt; &#xA;&lt;p&gt;If you had a different problem related to a specific tool, please check detailed instructions for each linter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/html-css#troubleshooting&#34;&gt;html&amp;amp;css&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/ruby#troubleshooting&#34;&gt;ruby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/ror#troubleshooting&#34;&gt;ror&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/javascript#troubleshooting&#34;&gt;javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/react-redux#troubleshooting&#34;&gt;react&amp;amp;redux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Validation&lt;/h2&gt; &#xA;&lt;p&gt;Do not make any changes in config files - they represent style guidelines that you share with your team - which is a group of all Microverse students.&lt;/p&gt; &#xA;&lt;p&gt;TSEs will validate that you are using the same configuration files provided here. You can check if your linter configuration is correct using the &lt;a href=&#34;https://raw.githubusercontent.com/microverseinc/linters-config/master/scripts&#34;&gt;&lt;code&gt;check-linters-config&lt;/code&gt;&lt;/a&gt; script.&lt;/p&gt; &#xA;&lt;h2&gt;Stickler&lt;/h2&gt; &#xA;&lt;p&gt;This is the &lt;strong&gt;GitHub Actions configuration&lt;/strong&gt;. If you are looking for the &lt;strong&gt;Stickler configuration&lt;/strong&gt;, you can find it &lt;a href=&#34;https://github.com/microverseinc/linters-config/tree/Stickler&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Everybody is welcome to suggest changes in linters config files.&lt;/p&gt; &#xA;&lt;p&gt;In order to do it, fork this repository, create a new branch and open a Pull Request from your branch. A detailed description of this process: &lt;a href=&#34;https://codeburst.io/a-step-by-step-guide-to-making-your-first-github-contribution-5302260a2940&#34;&gt;A Step by Step Guide to Making Your First GitHub Contribution by Roshan Jossey&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mathiasbynens/dotfiles</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/mathiasbynens/dotfiles</id>
    <link href="https://github.com/mathiasbynens/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔧 .files, including ~/.macos — sensible hacker defaults for macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mathias’s dotfiles&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/EkEtphC.png&#34; alt=&#34;Screenshot of my shell prompt&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If you want to give these dotfiles a try, you should first fork this repository, review the code, and remove things you don’t want or need. Don’t blindly use my settings unless you know what that entails. Use at your own risk!&lt;/p&gt; &#xA;&lt;h3&gt;Using Git and the bootstrap script&lt;/h3&gt; &#xA;&lt;p&gt;You can clone the repository wherever you want. (I like to keep it in &lt;code&gt;~/Projects/dotfiles&lt;/code&gt;, with &lt;code&gt;~/dotfiles&lt;/code&gt; as a symlink.) The bootstrapper script will pull in the latest version and copy the files to your home folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mathiasbynens/dotfiles.git &amp;amp;&amp;amp; cd dotfiles &amp;amp;&amp;amp; source bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update, &lt;code&gt;cd&lt;/code&gt; into your local &lt;code&gt;dotfiles&lt;/code&gt; repository and then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, to update while avoiding the confirmation prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set -- -f; source bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Git-free install&lt;/h3&gt; &#xA;&lt;p&gt;To install these dotfiles without Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd; curl -#L https://github.com/mathiasbynens/dotfiles/tarball/main | tar -xzv --strip-components 1 --exclude={README.md,bootstrap.sh,.osx,LICENSE-MIT.txt}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update later on, just run that command again.&lt;/p&gt; &#xA;&lt;h3&gt;Specify the &lt;code&gt;$PATH&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If &lt;code&gt;~/.path&lt;/code&gt; exists, it will be sourced along with the other files, before any feature testing (such as &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/raw/aff769fd75225d8f2e481185a71d5e05b76002dc/.aliases#L21-L26&#34;&gt;detecting which version of &lt;code&gt;ls&lt;/code&gt; is being used&lt;/a&gt;) takes place.&lt;/p&gt; &#xA;&lt;p&gt;Here’s an example &lt;code&gt;~/.path&lt;/code&gt; file that adds &lt;code&gt;/usr/local/bin&lt;/code&gt; to the &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=&#34;/usr/local/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add custom commands without creating a new fork&lt;/h3&gt; &#xA;&lt;p&gt;If &lt;code&gt;~/.extra&lt;/code&gt; exists, it will be sourced along with the other files. You can use this to add a few custom commands without the need to fork this entire repository, or to add commands you don’t want to commit to a public repository.&lt;/p&gt; &#xA;&lt;p&gt;My &lt;code&gt;~/.extra&lt;/code&gt; looks something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Git credentials&#xA;# Not in the repository, to prevent people from accidentally committing under my name&#xA;GIT_AUTHOR_NAME=&#34;Mathias Bynens&#34;&#xA;GIT_COMMITTER_NAME=&#34;$GIT_AUTHOR_NAME&#34;&#xA;git config --global user.name &#34;$GIT_AUTHOR_NAME&#34;&#xA;GIT_AUTHOR_EMAIL=&#34;mathias@mailinator.com&#34;&#xA;GIT_COMMITTER_EMAIL=&#34;$GIT_AUTHOR_EMAIL&#34;&#xA;git config --global user.email &#34;$GIT_AUTHOR_EMAIL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could also use &lt;code&gt;~/.extra&lt;/code&gt; to override settings, functions and aliases from my dotfiles repository. It’s probably better to &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/fork&#34;&gt;fork this repository&lt;/a&gt; instead, though.&lt;/p&gt; &#xA;&lt;h3&gt;Sensible macOS defaults&lt;/h3&gt; &#xA;&lt;p&gt;When setting up a new Mac, you may want to set some sensible macOS defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./.macos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Homebrew formulae&lt;/h3&gt; &#xA;&lt;p&gt;When setting up a new Mac, you may want to install some common &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; formulae (after installing Homebrew, of course):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./brew.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some of the functionality of these dotfiles depends on formulae installed by &lt;code&gt;brew.sh&lt;/code&gt;. If you don’t plan to run &lt;code&gt;brew.sh&lt;/code&gt;, you should look carefully through the script and manually install any particularly important ones. A good example is Bash/Git completion: the dotfiles use a special version from Homebrew.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Suggestions/improvements &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/issues&#34;&gt;welcome&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://twitter.com/mathias&#34; title=&#34;Follow @mathias on Twitter&#34;&gt;&lt;img src=&#34;http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70&#34; alt=&#34;twitter/mathias&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mathiasbynens.be/&#34;&gt;Mathias Bynens&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Thanks to…&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@ptb and &lt;a href=&#34;https://github.com/ptb/mac-setup&#34;&gt;his &lt;em&gt;macOS Setup&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://benalman.com/&#34;&gt;Ben Alman&lt;/a&gt; and his &lt;a href=&#34;https://github.com/cowboy/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alrra&#34;&gt;Cătălin Mariș&lt;/a&gt; and his &lt;a href=&#34;https://github.com/alrra/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://butt.zone/&#34;&gt;Gianni Chiappetta&lt;/a&gt; for sharing his &lt;a href=&#34;https://github.com/gf3/dotfiles&#34;&gt;amazing collection of dotfiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jan.moesen.nu/&#34;&gt;Jan Moesen&lt;/a&gt; and his &lt;a href=&#34;https://gist.github.com/1156154&#34;&gt;ancient &lt;code&gt;.bash_profile&lt;/code&gt;&lt;/a&gt; + &lt;a href=&#34;https://github.com/janmoesen/tilde&#34;&gt;shiny &lt;em&gt;tilde&lt;/em&gt; repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lauri ‘Lri’ Ranta for sharing &lt;a href=&#34;https://web.archive.org/web/20161104144204/http://osxnotes.net/defaults.html&#34;&gt;loads of hidden preferences&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://matijs.brinkhu.is/&#34;&gt;Matijs Brinkhuis&lt;/a&gt; and his &lt;a href=&#34;https://github.com/matijs/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nicolasgallagher.com/&#34;&gt;Nicolas Gallagher&lt;/a&gt; and his &lt;a href=&#34;https://github.com/necolas/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sindresorhus.com/&#34;&gt;Sindre Sorhus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sanctum.geek.nz/&#34;&gt;Tom Ryder&lt;/a&gt; and his &lt;a href=&#34;https://sanctum.geek.nz/cgit/dotfiles.git/about&#34;&gt;dotfiles repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kevinsuttle.com/&#34;&gt;Kevin Suttle&lt;/a&gt; and his &lt;a href=&#34;https://github.com/kevinSuttle/dotfiles&#34;&gt;dotfiles repository&lt;/a&gt; and &lt;a href=&#34;https://github.com/kevinSuttle/macOS-Defaults&#34;&gt;macOS-Defaults project&lt;/a&gt;, which aims to provide better documentation for &lt;a href=&#34;https://mths.be/macos&#34;&gt;&lt;code&gt;~/.macos&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hkdobrev.com/&#34;&gt;Haralan Dobrev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Anyone who &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/contributors&#34;&gt;contributed a patch&lt;/a&gt; or &lt;a href=&#34;https://github.com/mathiasbynens/dotfiles/issues&#34;&gt;made a helpful suggestion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mishakorzik/AllHackingTools</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/mishakorzik/AllHackingTools</id>
    <link href="https://github.com/mishakorzik/AllHackingTools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All-in-One Hacking Tools For Hackers! And more hacking tools! For termux.&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;99.9%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/Logo/IMG-cd518796cb4b0527368a1b9dd67a8889-V.jpg&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools&#34;&gt;&lt;img title=&#34;Version&#34; src=&#34;https://img.shields.io/badge/Version-2.7.4-yellow?style=for-the-badge&amp;amp;logo=&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/LICENSE&#34;&gt;&lt;img title=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-GNU-brightgreen?style=for-the-badge&amp;amp;logo=gnu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img title=&#34;Python&#34; src=&#34;https://img.shields.io/badge/Python-3.8-red?style=for-the-badge&amp;amp;logo=python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik&#34;&gt;&lt;img title=&#34;Report&#34; src=&#34;https://img.shields.io/badge/Copyring-2021-red?style=for-the-badge&amp;amp;logo=github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik&#34;&gt;&lt;img title=&#34;Autor&#34; src=&#34;https://img.shields.io/badge/Author-mishakorzik-blue?style=for-the-badge&amp;amp;logo=github&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; • &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/LICENSE&#34;&gt;License&lt;/a&gt; • &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/issues&#34;&gt;Issues&lt;/a&gt; • &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/projects&#34;&gt;Project&lt;/a&gt; • &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/wiki&#34;&gt;Wikipedia&lt;/a&gt; • &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;AllHackingTools: is a system designed to automate the download process and install various tools for penetration testing.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Hi, if you want to set up a termux quickly, here you are! More Hacking tools with one tool!&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Я не несу ответственности за ваши действия. Скачивая программное обеспечение из этого репозитория, вы соглашаетесь с &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/LICENSE&#34;&gt;лицензией&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Supported systems&lt;/h2&gt; &#xA;&lt;h4&gt;will download 5-20 minutes&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mishakorzik&#34;&gt;&lt;img title=&#34;Termux&#34; src=&#34;https://img.shields.io/badge/Supported-Termux-blue?style=for-the-badge&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Here on these systems works AllHackingTools&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tool tested on:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mishakorzik&#34;&gt;&lt;img title=&#34;Termux&#34; src=&#34;https://img.shields.io/badge/Tested on-Termux-blue?style=for-the-badge&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you do not understand anything then there is a &lt;a href=&#34;https://raw.githubusercontent.com/mishakorzik/AllHackingTools/main/#Translate&#34;&gt;translate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;New features: &lt;img width=&#34;2.1%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/code-slash.svg?sanitize=true&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1) New Tools And functions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New tools for penetration testing. And many new opportunities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2) Castomization and desing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now a new customization for the terminal has been added, and a new design has been added.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;3) New Desing And functions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The AllHackingTools installer has been updated it has got a new design and many features to check packages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;4) New design for download and update&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Now added the ability to quickly update AllHackingTools and new design, download, and update AllHackingTools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;5) Fixed More Bugs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed many bugs in the system, now AllHackingTools works faster and more stable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;6) Run Tools&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The user can now run the tools directly from AllHackingTools, even though they are already installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;7) Restart AllHackingTools&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;And when you run a tool and exit it, AllHackingTools automatically restarts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a id=&#34;installing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing &lt;img width=&#34;2.5%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/download.svg?sanitize=true&#34;&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;#Upgrade all &amp;amp; full packages&#xA;apt update&#xA;apt upgrade&#xA;&#xA;#Add your termux permision&#xA;termux-setup-storage&#xA;&#xA;#Install package git&#xA;apt install git&#xA;&#xA;#clone this repository&#xA;git clone https://github.com/mishakorzik/AllHackingTools&#xA;&#xA;#cd to directory allhackingtools&#xA;cd AllHackingTools&#xA;&#xA;#Start script to install system&#xA;bash Install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;if the error and the command does not work: cd AllHackingTools &amp;amp;&amp;amp; bash fix.sh&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;And when he writes a big rainbow button: Done, everything is ready! Wait until you can write to the terminal.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#Free Ngrok authtokens:&#xA;26bDGGPyD3XWVtyzK3dfK401oIq_74Wi1m84A7rv9bP5YnihG&#xA;26bDzEjjfPls5kLHWGnG3K3voA7_69wkMBqUUExRHoA8v3gEL&#xA;26bESCvhbagWfGrHSv4NpTnSCpI_92oE8UFimPxU4nBNMK5T&#xA;26bEfSIlR1IcEEayMpRQlj0ttGw_3hrWetKnHZ4FMXc9hDt3Q&#xA;26p3rvZocfT7VzraejQNoCjPNN6_6UqEGG1izGcbE8ewtBchT&#xA;26p4VZpnXIjsiDq9YizXvkk6UAK_4ZyVi8D2Q63yWCap4LBbF&#xA;26p5O1vfFGLsdf9f8D3dzHAcmUv_454E7DaBz26mgs9yVkzQi&#xA;26t7bQBRJiFnK74z35eLcPYJPXI_2cyAyXVcEAnMTV9eAaYZw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#configure ngrok&#xA;ngrok authtoken &amp;lt;↖️sеlеct free authtoken&amp;gt;&#xA;&#xA;#start ngrok&#xA;ngrok http 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a id=&#34;viewmenu&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Run command to start AllHackingTools: msdconsole&lt;/h4&gt; &#xA;&lt;h2&gt;AllHackingTool Menu: &lt;img width=&#34;2.1%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/aspect-ratio-fill.svg?sanitize=true&#34;&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Information Gathering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Exploitation Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Sniffing and Spoofing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Web Attack Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Cam Hacking Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Remote Trojan RAT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;SQL Injection Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;SocialMedia Bruteforce&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;SocialMedia Finder&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;DDOS Attack Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Phishing Attack Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Hash Cracking Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Worldlist Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;XSS Attack Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Web Crawling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Wireless attack Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Other Tools&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Free Proxy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/TOOLS.md&#34;&gt;Mix Tools&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details id=&#34;missing-code-coverage&#34;&gt; &#xA; &lt;summary&gt;New Commands&lt;/summary&gt; &#xA; &lt;h5&gt;AllHackingTools adds new commands for the terminal! All commands below&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;msdconsole : start AllHackingTools&#xA;msdServer  : Check AllHackingTools server&#xA;msdc       : start AllHackingTools &#xA;Theme      : Select Termux Theme&#xA;Standart   : Select default keys&#xA;edit       : Select nano keys&#xA;&#xA;Others commands:&#xA;&#xA;system : View My System&#xA;sys    : View My System&#xA;&#xA;Fonts Commands:&#xA;&#xA;figlet -f puffy  AND  toilet -f puffy&#xA;figlet -f poison  AND  toilet -f poison&#xA;figlet -f avatar   AND  toilet -f avatar&#xA;figlet -f modular  AND  toilet -f modular&#xA;figlet -f crazy   AND  toilet -f crazy&#xA;figlet -f bloody  AND  toilet -f bloody&#xA;figlet -f rusto   AND  toilet -f rusto&#xA;figlet -f real   AND  toilet -f real&#xA;figlet -f pagga  AND  toilet -f pagga&#xA;figlet -f block  AND  toilet -f block&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; system desing&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mix Tools&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; technical support&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; In a real break-in&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; multi terminal&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; terminal customization&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; selection of editions&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; multifunctional settings&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; fast download i system&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatic&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details id=&#34;missing-code-coverage&#34;&gt; &#xA; &lt;summary&gt;qiq more commands&lt;/summary&gt; &#xA; &lt;h5&gt;Now when you write the qiq command in the terminal. Many other teams will show you&lt;/h5&gt; &#xA; &lt;h5&gt;The main commands should be written without a space, with a drawing, for example: qiq-install&lt;/h5&gt; &#xA; &lt;h5&gt;When you write qiq-install, it will write to you Enter module name to install and write the name of the module you want to download, for example: git, python, wget&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; qiq-help      :view more qiq info&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-update    :update qiq&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-version   :view qiq version&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-author    :view qiq author&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-install   :install packages&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-remove    :remove packages&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-reinstall :reinstall packages&#xA;┐─┐┐ ┬┐─┐┌┐┐┬─┐┌┌┐  ┌─┐┌─┐┌┌┐┌┌┐┬─┐┌┐┐┬─┐┐─┐&#xA;└─┐└┌┘└─┐ │ ├─ │││  │  │ ││││││││─┤││││ │└─┐&#xA;──┘ ┆ ──┘ ┆ ┴─┘┘ ┆  └─┘┘─┘┘ ┆┘ ┆┘ ┆┆└┘┆─┘──┘&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-proces    :view system process&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-smalltext :create small logo&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-bigtext   :create big logo&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-rgb       :create medium colored logo&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-rcolor    :create medium rainbow logo&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-mysystem  :view my system&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-home      :cd to derictory&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-usr       :cd to derictory&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-bin       :cd to derictory&#xA;┬─┐o┌─┐┬  ┬─┐┌┐┐  ┌┐┐┬─┐┐ ┬  ┌─┐┌─┐┌┌┐┌┌┐┬─┐┌┐┐┬─┐┐─┐&#xA;├─ ││ ┬│  ├─  │    │││├─ │││  │  │ ││││││││─┤││││ │└─┐&#xA;┆  ┆┆─┘┆─┘┴─┘ ┆   ┆└┘┴─┘└┴┆  └─┘┘─┘┘ ┆┘ ┆┘ ┆┆└┘┆─┘──┘&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Puffy   :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Bloody  :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Poison  :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Block   :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Avatar  :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Crazy   :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Modular :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Basic   :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Rusto   :no description&#xA;&amp;gt;&amp;gt;&amp;gt; figlet -f Pagga   :no description&#xA;┌─┐┌┐┐┬ ┬┬─┐┬─┐  ┌─┐┌─┐┌┌┐┌┌┐┬─┐┌┐┐┬─┐┐─┐&#xA;│ │ │ │─┤├─ │┬┘  │  │ ││││││││─┤││││ │└─┐&#xA;┘─┘ ┆ ┆ ┴┴─┘┆└┘  └─┘┘─┘┘ ┆┘ ┆┘ ┆┆└┘┆─┘──┘&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-AllHackingTools :Install AllHackingTools&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-FreeProxy       :Install Free-Proxy&#xA;&amp;gt;&amp;gt;&amp;gt; qiq-AdminHack       :Install AdminHack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;When prompted for the download type: Default/Coded&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Choose which installation is more convenient for you&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;If you can&#39;t download Default then choose: Coded&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;It is recommended to choose: Default&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;details id=&#34;missing-code-coverage&#34;&gt; &#xA; &lt;summary&gt;Need Help&lt;/summary&gt; &#xA; &lt;h4&gt;Do you need help? Write me on: &lt;a href=&#34;mailto:developer.mishakorzhik@gmail.com&#34;&gt;developer.mishakorzhik@gmail.com&lt;/a&gt; &lt;img width=&#34;2.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/envelope-fill.svg?sanitize=true&#34;&gt;&lt;/h4&gt; &#xA; &lt;h4&gt;And I will consider your letter and problem!&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Emails:&#xA; developer.mishakorzhik@gmail.com&#xA;&#xA;Developers:&#xA; mishakorzhik&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Bug?&lt;/h2&gt; &#xA; &lt;p&gt;If the tool fails, follow these steps:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Take a screenshot and see the error in detail&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Contact me through the following email: &lt;a href=&#34;mailto:developer.mishakorzhik@gmail.com&#34;&gt;developer.mishakorzhik@gmail.com&lt;/a&gt; &lt;img width=&#34;2.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/envelope-fill.svg?sanitize=true&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Submit the screenshot and explain your problem with that error&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details id=&#34;missing-code-coverage&#34;&gt; &#xA; &lt;summary&gt;Versions&lt;/summary&gt; &#xA; &lt;h3&gt;Version 2.6.3&lt;/h3&gt; &#xA; &lt;h5&gt;below is a list added in version 2.6&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;&#xA;Desing:&#xA; Many bugs have been fixed&#xA;&#xA;Tools:&#xA; Added new tools!&#xA;&#xA;#Thanks for reviewing the update list. &#xA;#Bye bye Have a nice day!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Version 2.5.1&lt;/h3&gt; &#xA; &lt;h5&gt;below is a list added in version 2.5&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;&#xA;Desing:&#xA; Many bugs have been fixed&#xA; Added New Castomization&#xA; New Loading animation&#xA; Added checking for ping&#xA;&#xA;Build:&#xA; Added new optimization&#xA; Added stabilization&#xA; Added new programming code PHP&#xA;&#xA;#Thanks for reviewing the update list. &#xA;#Bye bye Have a nice day!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Version 2.4&lt;/h3&gt; &#xA; &lt;h5&gt;below is a list added in version 2.4&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;&#xA;Tools:&#xA; Many new utilities have been added&#xA;&#xA;Desing:&#xA; Many bugs have been fixed&#xA; Added New Castomization&#xA; Added Castomization for loading&#xA;&#xA;#Thanks for reviewing the update list. &#xA;#Bye bye Have a nice day!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Version 2.3&lt;/h3&gt; &#xA; &lt;h5&gt;below is a list added in version 2.3&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code&gt;&#xA;Tools:&#xA; Many new utilities have been added&#xA;&#xA;Desing:&#xA; Many bugs have been fixed&#xA; Added New Commands&#xA; Added New Castomization&#xA;&#xA;#Thanks for reviewing the update list. &#xA;#Bye bye Have a nice day!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Version 2.2&lt;/h3&gt; &#xA; &lt;h5&gt;below is a list added in version 2.2&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;Tools:&#xA; Many new utilities have been added&#xA;&#xA;Desing:&#xA; Many bugs have been fixed&#xA; New logo designs were added&#xA; New Menu desings were added&#xA; New AllHackingTools download design &#xA;&#xA;#Thanks for reviewing the update list. &#xA;#Bye bye Have a nice day!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Version 2.1&lt;/h3&gt; &#xA; &lt;h5&gt;below is a list added in version 2.1&lt;/h5&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;Tools:&#xA; Two new menu options have been added&#xA; Many new utilities have been added&#xA;&#xA;Desing:&#xA; Many bugs have been fixed&#xA; Two new logo designs were added&#xA;&#xA;#Thanks for reviewing the update list. &#xA;#Bye bye Have a nice day!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;img src=&#34;http://ForTheBadge.com/images/badges/made-with-python.svg?sanitize=true&#34; alt=&#34;forthebadge made-with-python&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a id=&#34;depencies&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;h4&gt;If all this is then you can download!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Root : NO ROOT&lt;/strong&gt; &lt;img width=&#34;2.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/terminal-fill.svg?sanitize=true&#34;&gt; &lt;br&gt; &lt;strong&gt;Storage : 2200 MB&lt;/strong&gt; &lt;img width=&#34;2.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/download.svg?sanitize=true&#34;&gt; &lt;br&gt; &lt;strong&gt;Internet : must be&lt;/strong&gt; &lt;img width=&#34;2.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/wifi.svg?sanitize=true&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Okay let&#39;s go installing! If it shows Are you rooted? Then ignore it!&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What does it download?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt; &lt;code&gt;python&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wget&lt;/code&gt; &lt;code&gt;curl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openssh&lt;/code&gt; &lt;code&gt;php&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;toilet&lt;/code&gt; &lt;code&gt;colorama&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jq&lt;/code&gt; &lt;code&gt;apache2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ruby&lt;/code&gt; &lt;code&gt;ssl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;w3m&lt;/code&gt; &lt;code&gt;figlet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zip&lt;/code&gt; &lt;code&gt;lolcat&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pv&lt;/code&gt; &lt;code&gt;neofetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zsh&lt;/code&gt; &lt;code&gt;ngrok&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;And more packages!&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to donate, click on the button&lt;/strong&gt; &lt;a href=&#34;https://www.buymeacoffee.com/misakorzik&#34;&gt;&lt;img title=&#34;Donate&#34; src=&#34;https://img.shields.io/badge/Donate-AllHackingTools-yellow?style=for-the-badge&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Screanshot &lt;img width=&#34;2.1%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/other/card-image.svg?sanitize=true&#34;&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;view a screanshot for AllHackingTools&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;49.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/AllHackingToolsImg/img/IMG_20210630_212422.jpg&#34;&gt; &lt;img width=&#34;49.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/AllHackingToolsImg/img/IMG_20210720_144718.jpg&#34;&gt; &lt;img width=&#34;49.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/AllHackingToolsImg/img/IMG_20210630_212448.jpg&#34;&gt; &lt;img width=&#34;49.0%&#34; src=&#34;https://raw.githubusercontent.com/mishakorzik/mishakorzik.menu.io/master/img/AllHackingToolsImg/img/IMG_20210720_144658.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Download more utility for hacking!&lt;/h2&gt; &#xA;&lt;h4&gt;uninstall AllHackingTools&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bash Uninstall/Uninstall.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;It downloads packages and utilities and configures the utilities.&lt;/h4&gt; &#xA;&lt;p&gt;• &lt;a href=&#34;https://raw.githubusercontent.com/mishakorzik/AllHackingTools/main/#depencies&#34;&gt;Dependencies&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/mishakorzik/AllHackingTools/main/#installing&#34;&gt;Installing&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/mishakorzik/AllHackingTools/main/#viewmenu&#34;&gt;Options&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;Translate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/README_Ukraine.md&#34;&gt;&lt;img title=&#34;Unkraine&#34; src=&#34;https://img.shields.io/badge/Translate%20to-Ukraine-inactive?style=for-the-badge&amp;amp;logo=google-translate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/README_Russia.md&#34;&gt;&lt;img title=&#34;Russian&#34; src=&#34;https://img.shields.io/badge/Translate%20to-Russian-inactive?style=for-the-badge&amp;amp;logo=google-translate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/raw/main/.github/README_Spanish.md&#34;&gt;&lt;img title=&#34;Spanish&#34; src=&#34;https://img.shields.io/badge/Translate%20to-Spanish-inactive?style=for-the-badge&amp;amp;logo=google-translate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Find Me&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/u/Necessary_Mammoth368?utm_medium=android_app&amp;amp;utm_source=share&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reddit-MishaKorzhik-red?style=for-the-badge&amp;amp;logo=reddit&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/MishaKorzhikTelegram&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TELEGRAM-MishaKorzhik-orange?style=for-the-badge&amp;amp;logo=telegram&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-MishaKorzhik-yellow?style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/MishaKorzhik&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-MishaKorzhik-blue?style=for-the-badge&amp;amp;logo=twitter&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ce2XKTJ7h9&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-He1Zen-blue?style=for-the-badge&amp;amp;logo=discord&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;I recommend watching&lt;/h2&gt; &#xA;&lt;p&gt;1.&lt;a href=&#34;https://github.com/mishakorzik/qiq&#34;&gt;qiq - Useful batch installer&lt;/a&gt; &lt;br&gt; 2.&lt;a href=&#34;https://github.com/mishakorzik/Gmail-Hack&#34;&gt;Gmail-Hack - Easy email hacking&lt;/a&gt; &lt;br&gt; 3.&lt;a href=&#34;https://github.com/mishakorzik/AdminHack&#34;&gt;AdminHack - Hacking bad sites&lt;/a&gt; &lt;br&gt; 4.&lt;a href=&#34;https://github.com/mishakorzik/Infect&#34;&gt;Infect - Easy virus creation&lt;/a&gt; &lt;br&gt; 5.&lt;a href=&#34;https://github.com/mishakorzik/Free-Proxy&#34;&gt;Free-Proxy - Lots of free proxy servers&lt;/a&gt; &lt;br&gt; 6.&lt;a href=&#34;https://github.com/mishakorzik/IpHack&#34;&gt;IpHack - Easy Tracking smartphones&lt;/a&gt; &lt;br&gt; 7.&lt;a href=&#34;https://github.com/mishakorzik/UserFinder&#34;&gt;UserFinder - Find users in social&lt;/a&gt; &lt;br&gt; 8.&lt;a href=&#34;https://github.com/mishakorzik/Ultra-DDos&#34;&gt;Ultra-DDos - Hing ddos bad sites&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Here are the repositories that I recommend you look at. below are people who liked and forked the repository&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=mishakorzik&amp;amp;show_icons=true&amp;amp;theme=default&amp;amp;line_height=25&amp;amp;layout=compact&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Статья носит исследовательский характер. Она адресована специалистам по безопасности и тем, кто собирается ими стать. При ее написании использовались общедоступные базы данных. Ни редакция, ни автор не несут ответственности за неэтичное использование любых упомянутых здесь сведений. Team: He1Zen&lt;/h6&gt; &#xA;&lt;h2&gt;Supporters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/mishakorzik/AllHackingTools&#34; alt=&#34;Stargazers repo roster for @mishakorzik/AllHackingTools&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mishakorzik/AllHackingTools/members&#34;&gt;&lt;img src=&#34;https://reporoster.com/forks/mishakorzik/AllHackingTools&#34; alt=&#34;Forkers repo roster for @mishakorzik/AllHackingTools&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bitnami/bitnami-docker-kafka</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/bitnami/bitnami-docker-kafka</id>
    <link href="https://github.com/bitnami/bitnami-docker-kafka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bitnami Docker Image for Kafka&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Kafka packaged by Bitnami&lt;/h1&gt; &#xA;&lt;h2&gt;What is Apache Kafka?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Apache Kafka is a distributed streaming platform designed to build real-time pipelines and can be used as a message broker or as a replacement for a log aggregation solution for big data applications.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kafka.apache.org/&#34;&gt;Overview of Apache Kafka&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trademarks: This software listing is packaged by Bitnami. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.&lt;/p&gt; &#xA;&lt;h2&gt;TL;DR&lt;/h2&gt; &#xA;&lt;h2&gt;Run the application using Docker Compose&lt;/h2&gt; &#xA;&lt;p&gt;The main folder of this repository contains a functional &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file. Run the application using it as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -sSL https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/docker-compose.yml &amp;gt; docker-compose.yml&#xA;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why use Bitnami Images?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bitnami closely tracks upstream source changes and promptly publishes new versions of this image using our automated systems.&lt;/li&gt; &#xA; &lt;li&gt;With Bitnami images the latest bug fixes and features are available as soon as possible.&lt;/li&gt; &#xA; &lt;li&gt;Bitnami containers, virtual machines and cloud images use the same components and configuration approach - making it easy to switch between formats based on your project needs.&lt;/li&gt; &#xA; &lt;li&gt;All our images are based on &lt;a href=&#34;https://github.com/bitnami/minideb&#34;&gt;minideb&lt;/a&gt; a minimalist Debian based container image which gives you a small base container image and the familiarity of a leading Linux distribution.&lt;/li&gt; &#xA; &lt;li&gt;All Bitnami images available in Docker Hub are signed with &lt;a href=&#34;https://docs.docker.com/engine/security/trust/content_trust/&#34;&gt;Docker Content Trust (DCT)&lt;/a&gt;. You can use &lt;code&gt;DOCKER_CONTENT_TRUST=1&lt;/code&gt; to verify the integrity of the images.&lt;/li&gt; &#xA; &lt;li&gt;Bitnami container images are released daily with the latest distribution packages available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to deploy Apache Kafka in Kubernetes?&lt;/h2&gt; &#xA;&lt;p&gt;Deploying Bitnami applications as Helm Charts is the easiest way to get started with our applications on Kubernetes. Read more about the installation in the &lt;a href=&#34;https://github.com/bitnami/charts/tree/master/bitnami/kafka&#34;&gt;Bitnami Apache Kafka Chart GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bitnami containers can be used with &lt;a href=&#34;https://kubeapps.com/&#34;&gt;Kubeapps&lt;/a&gt; for deployment and management of Helm Charts in clusters.&lt;/p&gt; &#xA;&lt;h2&gt;Why use a non-root container?&lt;/h2&gt; &#xA;&lt;p&gt;Non-root container images add an extra layer of security and are generally recommended for production environments. However, because they run as a non-root user, privileged tasks are typically off-limits. Learn more about non-root containers &lt;a href=&#34;https://docs.bitnami.com/tutorials/work-with-non-root-containers/&#34;&gt;in our docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported tags and respective &lt;code&gt;Dockerfile&lt;/code&gt; links&lt;/h2&gt; &#xA;&lt;p&gt;Learn more about the Bitnami tagging policy and the difference between rolling tags and immutable tags &lt;a href=&#34;https://docs.bitnami.com/tutorials/understand-rolling-tags-containers/&#34;&gt;in our documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/3.2.0-debian-10-r8/3.2/debian-10/Dockerfile&#34;&gt;&lt;code&gt;3.2&lt;/code&gt;, &lt;code&gt;3.2-debian-10&lt;/code&gt;, &lt;code&gt;3.2.0&lt;/code&gt;, &lt;code&gt;3.2.0-debian-10-r8&lt;/code&gt;, &lt;code&gt;latest&lt;/code&gt; (3.2/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/3.1.1-debian-10-r14/3.1/debian-10/Dockerfile&#34;&gt;&lt;code&gt;3.1&lt;/code&gt;, &lt;code&gt;3.1-debian-10&lt;/code&gt;, &lt;code&gt;3.1.1&lt;/code&gt;, &lt;code&gt;3.1.1-debian-10-r14&lt;/code&gt; (3.1/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/3.0.1-debian-10-r67/3.0/debian-10/Dockerfile&#34;&gt;&lt;code&gt;3.0&lt;/code&gt;, &lt;code&gt;3.0-debian-10&lt;/code&gt;, &lt;code&gt;3.0.1&lt;/code&gt;, &lt;code&gt;3.0.1-debian-10-r67&lt;/code&gt; (3.0/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/2.8.1-debian-10-r233/2.8/debian-10/Dockerfile&#34;&gt;&lt;code&gt;2.8&lt;/code&gt;, &lt;code&gt;2.8-debian-10&lt;/code&gt;, &lt;code&gt;2.8.1&lt;/code&gt;, &lt;code&gt;2.8.1-debian-10-r233&lt;/code&gt; (2.8/debian-10/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Subscribe to project updates by watching the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka&#34;&gt;bitnami/kafka GitHub repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get this image&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to get the Bitnami Apache Kafka Docker Image is to pull the prebuilt image from the &lt;a href=&#34;https://hub.docker.com/r/bitnami/kafka&#34;&gt;Docker Hub Registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a specific version, you can pull a versioned tag. You can view the &lt;a href=&#34;https://hub.docker.com/r/bitnami/kafka/tags/&#34;&gt;list of available versions&lt;/a&gt; in the Docker Hub Registry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/kafka:[TAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish, you can also build the image yourself.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker build -t bitnami/kafka:latest &#39;https://github.com/bitnami/bitnami-docker-kafka.git#master:3.2/debian-10&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Persisting your data&lt;/h2&gt; &#xA;&lt;p&gt;If you remove the container all your data and configurations will be lost, and the next time you run the image the database will be reinitialized. To avoid this loss of data, you should mount a volume that will persist even after the container is removed.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you have already started using your database, follow the steps on &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#backing-up-your-container&#34;&gt;backing up&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#restoring-a-backup&#34;&gt;restoring&lt;/a&gt; to pull the data from your running container down to your host.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The image exposes a volume at &lt;code&gt;/bitnami/kafka&lt;/code&gt; for the Apache Kafka data. For persistence you can mount a directory at this location from your host. If the mounted directory is empty, it will be initialized on the first run.&lt;/p&gt; &#xA;&lt;p&gt;Using Docker Compose:&lt;/p&gt; &#xA;&lt;p&gt;This requires a minor change to the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kafka:&#xA;  ...&#xA;  volumes:&#xA;    - /path/to/kafka-persistence:/bitnami/kafka&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: As this is a non-root container, the mounted files and directories must have the proper permissions for the UID &lt;code&gt;1001&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Connecting to other containers&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://docs.docker.com/engine/userguide/networking/&#34;&gt;Docker container networking&lt;/a&gt;, a Apache Kafka server running inside a container can easily be accessed by your application containers.&lt;/p&gt; &#xA;&lt;p&gt;Containers attached to the same network can communicate with each other using the container name as the hostname.&lt;/p&gt; &#xA;&lt;h3&gt;Using the Command Line&lt;/h3&gt; &#xA;&lt;p&gt;In this example, we will create a Apache Kafka client instance that will connect to the server instance that is running on the same docker network as the client.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Create a network&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker network create app-tier --driver bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Launch the Zookeeper server instance&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--network app-tier&lt;/code&gt; argument to the &lt;code&gt;docker run&lt;/code&gt; command to attach the Zookeeper container to the &lt;code&gt;app-tier&lt;/code&gt; network.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -d --name zookeeper-server \&#xA;    --network app-tier \&#xA;    -e ALLOW_ANONYMOUS_LOGIN=yes \&#xA;    bitnami/zookeeper:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Launch the Apache Kafka server instance&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--network app-tier&lt;/code&gt; argument to the &lt;code&gt;docker run&lt;/code&gt; command to attach the Apache Kafka container to the &lt;code&gt;app-tier&lt;/code&gt; network.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -d --name kafka-server \&#xA;    --network app-tier \&#xA;    -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;    -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 \&#xA;    bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 3: Launch your Apache Kafka client instance&lt;/h4&gt; &#xA;&lt;p&gt;Finally we create a new container instance to launch the Apache Kafka client and connect to the server created in the previous step:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --rm \&#xA;    --network app-tier \&#xA;    -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 \&#xA;    bitnami/kafka:latest kafka-topics.sh --list  --bootstrap-server kafka-server:9092&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;When not specified, Docker Compose automatically sets up a new network and attaches all deployed services to that network. However, we will explicitly define a new &lt;code&gt;bridge&lt;/code&gt; network named &lt;code&gt;app-tier&lt;/code&gt;. In this example we assume that you want to connect to the Apache Kafka server from your own custom application image which is identified in the following snippet by the service name &lt;code&gt;myapp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;networks:&#xA;  app-tier:&#xA;    driver: bridge&#xA;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    networks:&#xA;      - app-tier&#xA;  kafka:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    networks:&#xA;      - app-tier&#xA;  myapp:&#xA;    image: &#39;YOUR_APPLICATION_IMAGE&#39;&#xA;    networks:&#xA;      - app-tier&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Please update the &lt;code&gt;YOUR_APPLICATION_IMAGE&lt;/code&gt; placeholder in the above snippet with your application image&lt;/li&gt; &#xA;  &lt;li&gt;Configure Apache Kafka and ZooKeeper persistence, and configure them either via environment variables or by &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#full-configuration&#34;&gt;mounting configuration files&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;In your application container, use the hostname &lt;code&gt;kafka&lt;/code&gt; to connect to the Apache Kafka server&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Launch the containers using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The configuration can easily be setup with the Bitnami Apache Kafka Docker image using the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_PLAINTEXT_LISTENER&lt;/code&gt;: Allow to use the PLAINTEXT listener. Default: &lt;strong&gt;no&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_USER&lt;/code&gt;: Apache Kafka inter broker communication user. Default: admin. Default: &lt;strong&gt;user&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_PASSWORD&lt;/code&gt;: Apache Kafka inter broker communication password. Default: &lt;strong&gt;bitnami&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CERTIFICATE_PASSWORD&lt;/code&gt;: Password for certificates. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_HEAP_OPTS&lt;/code&gt;: Apache Kafka&#39;s Java Heap size. Default: &lt;strong&gt;-Xmx1024m -Xms1024m&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: Authentication protocol for Zookeeper connections. Allowed protocols: &lt;strong&gt;PLAINTEXT&lt;/strong&gt;, &lt;strong&gt;SASL&lt;/strong&gt;, &lt;strong&gt;SSL&lt;/strong&gt;, and &lt;strong&gt;SASL_SSL&lt;/strong&gt;. Defaults: &lt;strong&gt;PLAINTEXT&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_USER&lt;/code&gt;: Apache Kafka Zookeeper user for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper user password for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper keystore file password and key password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper truststore file password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME&lt;/code&gt;: Verify Zookeeper hostname on TLS certificates. Defaults: &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_SASL_ENABLED_MECHANISMS&lt;/code&gt;: Allowed mechanism when using SASL either for clients, inter broker, or zookeeper comunications. Allowed values: &lt;code&gt;PLAIN&lt;/code&gt;, &lt;code&gt;SCRAM-SHA-256&lt;/code&gt;, &lt;code&gt;SCRAM-SHA-512&lt;/code&gt; or a comma separated combination of those values. Default: &lt;strong&gt;PLAIN,SCRAM-SHA-256,SCRAM-SHA-512&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL&lt;/code&gt;: SASL mechanism to use for inter broker communications. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TLS_CLIENT_AUTH&lt;/code&gt;: Configures kafka brokers to request client authentication. Allowed values: &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;requested&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;. Defaults: &lt;strong&gt;required&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;: Users that will be created into Zookeeper when using SASL for client communications. Separated by commas. Default: &lt;strong&gt;user&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;: Passwords for the users specified at&lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;. Separated by commas. Default: &lt;strong&gt;bitnami&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_MAX_PARTITION_FETCH_BYTES&lt;/code&gt;: The maximum amount of data per-partition the server will return. Default: &lt;strong&gt;1048576&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_MAX_REQUEST_SIZE&lt;/code&gt;: The maximum size of a request in bytes. Default: &lt;strong&gt;1048576&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ENABLE_KRAFT&lt;/code&gt;: Whether to enable Kafka Raft (KRaft) mode. Default: &lt;strong&gt;no&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_KRAFT_CLUSTER_ID&lt;/code&gt;: Kafka cluster ID when using Kafka Raft (KRaft). No defaults.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, any environment variable beginning with &lt;code&gt;KAFKA_CFG_&lt;/code&gt; will be mapped to its corresponding Apache Kafka key. For example, use &lt;code&gt;KAFKA_CFG_BACKGROUND_THREADS&lt;/code&gt; in order to set &lt;code&gt;background.threads&lt;/code&gt; or &lt;code&gt;KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE&lt;/code&gt; in order to configure &lt;code&gt;auto.create.topics.enable&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or by modifying the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kafka:&#xA;  ...&#xA;  environment:&#xA;    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Apache Kafka development setup example&lt;/h3&gt; &#xA;&lt;p&gt;To use Apache Kafka in a development setup, create the following &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    ports:&#xA;      - &#39;2181:2181&#39;&#xA;    environment:&#xA;      - ALLOW_ANONYMOUS_LOGIN=yes&#xA;  kafka:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092:9092&#39;&#xA;    environment:&#xA;      - KAFKA_BROKER_ID=1&#xA;      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092&#xA;      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;    depends_on:&#xA;      - zookeeper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To deploy it, run the following command in the directory where the &lt;code&gt;docker-compose.yml&lt;/code&gt; file is located:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kafka without Zookeeper (KRaft)&lt;/h3&gt; &#xA;&lt;p&gt;Apache Kafka Raft (KRaft) makes use of a new quorum controller service in Kafka which replaces the previous controller and makes use of an event-based variant of the Raft consensus protocol. This greatly simplifies Kafka’s architecture by consolidating responsibility for metadata into Kafka itself, rather than splitting it between two different systems: ZooKeeper and Kafka.&lt;/p&gt; &#xA;&lt;p&gt;More Info can be found here: &lt;a href=&#34;https://developer.confluent.io/learn/kraft/&#34;&gt;https://developer.confluent.io/learn/kraft/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; KRaft is in early access and should be used in development only. It is not suitable for production.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Configuration here has been crafted from the &lt;a href=&#34;https://github.com/apache/kafka/tree/trunk/config/kraft&#34;&gt;Kraft Repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;version: &#34;3&#34;&#xA;services:&#xA;-  zookeeper:&#xA;-    image: &#39;bitnami/zookeeper:latest&#39;&#xA;-    ports:&#xA;-      - &#39;2181:2181&#39;&#xA;-    environment:&#xA;-      - ALLOW_ANONYMOUS_LOGIN=yes&#xA;   kafka:&#xA;     image: &#39;bitnami/kafka:latest&#39;&#xA;     ports:&#xA;       - &#39;9092:9092&#39;&#xA;     environment:&#xA;+      - KAFKA_ENABLE_KRAFT=yes&#xA;+      - KAFKA_CFG_PROCESS_ROLES=broker,controller&#xA;+      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER&#xA;-      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092&#xA;+      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093&#xA;+      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT&#xA;       - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092&#xA;       - KAFKA_BROKER_ID=1&#xA;+      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093&#xA;-      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;       - ALLOW_PLAINTEXT_LISTENER=yes&#xA;-    depends_on:&#xA;-      - zookeeper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Accessing Apache Kafka with internal and external clients&lt;/h3&gt; &#xA;&lt;p&gt;In order to use internal and external clients to access Apache Kafka brokers you need to configure one listener for each kind of clients.&lt;/p&gt; &#xA;&lt;p&gt;To do so, add the following environment variables to your docker-compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;+     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT&#xA;+     - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093&#xA;+     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093&#xA;+     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And expose the external port:&lt;/p&gt; &#xA;&lt;p&gt;(the internal, client one can still be used within the docker network)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;    ports:&#xA;-     - &#39;9092:9092&#39;&#xA;+     - &#39;9093:9093&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: To connect from an external machine, change &lt;code&gt;localhost&lt;/code&gt; above to your host&#39;s external IP/hostname and include &lt;code&gt;EXTERNAL://0.0.0.0:9093&lt;/code&gt; in &lt;code&gt;KAFKA_CFG_LISTENERS&lt;/code&gt; to allow for remote connections.&lt;/p&gt; &#xA;&lt;h4&gt;Producer and consumer using external client&lt;/h4&gt; &#xA;&lt;p&gt;These clients, from the same host, will use &lt;code&gt;localhost&lt;/code&gt; to connect to Apache Kafka.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kafka-console-producer.sh --broker-list 127.0.0.1:9093 --topic test&#xA;kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9093 --topic test --from-beginning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If running these commands from another machine, change the address accordingly.&lt;/p&gt; &#xA;&lt;h4&gt;Producer and consumer using internal client&lt;/h4&gt; &#xA;&lt;p&gt;These clients, from other containers on the same Docker network, will use the kafka container service hostname to connect to Apache Kafka.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;kafka-console-producer.sh --broker-list kafka:9092 --topic test&#xA;kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic test --from-beginning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Similarly, application code will need to use &lt;code&gt;bootstrap.servers=kafka:9092&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;More info about Apache Kafka listeners can be found in &lt;a href=&#34;https://rmoff.net/2018/08/02/kafka-listeners-explained/&#34;&gt;this great article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;The Bitnami Apache Kafka docker image disables the PLAINTEXT listener for security reasons. You can enable the PLAINTEXT listener by adding the next environment variable, but remember that this configuration is not recommended for production.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;ALLOW_PLAINTEXT_LISTENER=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to configure authentication, you must configure the Apache Kafka listeners properly. This container assumes the names below will be used for the listeners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;INTERNAL: used for inter-broker communications.&lt;/li&gt; &#xA; &lt;li&gt;CLIENT: used for communications with clients that are within the same network as Apache Kafka brokers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let&#39;s see an example to configure Apache Kafka with &lt;code&gt;SASL_SSL&lt;/code&gt; authentication for communications with clients, and &lt;code&gt;SSL&lt;/code&gt; authentication for inter-broker communication.&lt;/p&gt; &#xA;&lt;p&gt;The environment variables below should be define to configure the listeners, and the SASL credentials for client communications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SSL,CLIENT:SASL_SSL&#xA;KAFKA_CFG_LISTENERS=INTERNAL://:9093,CLIENT://:9092&#xA;KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,CLIENT://kafka:9092&#xA;KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL&#xA;KAFKA_CLIENT_USERS=user&#xA;KAFKA_CLIENT_PASSWORDS=password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;strong&gt;must&lt;/strong&gt; also use your own certificates for SSL. You can drop your Java Key Stores or PEM files into &lt;code&gt;/opt/bitnami/kafka/config/certs&lt;/code&gt;. If the JKS or PEM certs are password protected (recommended), you will need to provide it to get access to the keystores:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;KAFKA_CERTIFICATE_PASSWORD=myCertificatePassword&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If the truststore is mounted in a different location than &lt;code&gt;/opt/bitnami/kafka/config/certs/kafka.truststore.jks&lt;/code&gt;, &lt;code&gt;/opt/bitnami/kafka/conf/certs/kafka.truststore.pem&lt;/code&gt;, &lt;code&gt;/bitnami/kafka/conf/certs/kafka.truststore.jks&lt;/code&gt; or &lt;code&gt;/bitnami/kafka/conf/certs/kafka.truststore.pem&lt;/code&gt;, set the &lt;code&gt;KAFKA_TLS_TRUSTSTORE_FILE&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;p&gt;The following script can help you with the creation of the JKS and certificates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/confluent-platform-security-tools/master/kafka-generate-ssl.sh&#34;&gt;kafka-generate-ssl.sh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Keep in mind the following notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When prompted to enter a password, use the same one for all.&lt;/li&gt; &#xA; &lt;li&gt;Set the Common Name or FQDN values to your Apache Kafka container hostname, e.g. &lt;code&gt;kafka.example.com&lt;/code&gt;. After entering this value, when prompted &#34;What is your first and last name?&#34;, enter this value as well. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;As an alternative, you can disable host name verification setting the environment variable &lt;code&gt;KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/code&gt; to an empty string.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;When setting up a Apache Kafka Cluster (check &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#setting-up-a-kafka-cluster&#34;&gt;this section&lt;/a&gt; for more information), each Apache Kafka broker and logical client needs its own keystore. You will have to repeat the process for each of the brokers in the cluster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following docker-compose file is an example showing how to mount your JKS certificates protected by the password &lt;code&gt;certificatePassword123&lt;/code&gt;. Additionally it is specifying the Apache Kafka container hostname and the credentials for the client and zookeeper users.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    ports:&#xA;     - &#39;2181:2181&#39;&#xA;    environment:&#xA;      - ZOO_ENABLE_AUTH=yes&#xA;      - ZOO_SERVER_USERS=kafka&#xA;      - ZOO_SERVER_PASSWORDS=kafka_password&#xA;  kafka:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    hostname: kafka.example.com&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - KAFKA_CFG_LISTENERS=SASL_SSL://:9092&#xA;      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_SSL://:9092&#xA;      - KAFKA_ZOOKEEPER_USER=kafka&#xA;      - KAFKA_ZOOKEEPER_PASSWORD=kafka_password&#xA;      - KAFKA_CLIENT_USERS=user&#xA;      - KAFKA_CLIENT_PASSWORDS=password&#xA;      - KAFKA_CERTIFICATE_PASSWORD=certificatePassword123&#xA;      - KAFKA_TLS_TYPE=JKS # or PEM&#xA;    volumes:&#xA;      # Both .jks and .pem files are supported&#xA;      # - &#39;./kafka.keystore.pem:/opt/bitnami/kafka/config/certs/kafka.keystore.pem:ro&#39;&#xA;      # - &#39;./kafka.keystore.key:/opt/bitnami/kafka/config/certs/kafka.keystore.key:ro&#39;&#xA;      # - &#39;./kafka.truststore.pem:/opt/bitnami/kafka/config/certs/kafka.truststore.pem:ro&#39;&#xA;      - &#39;./kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro&#39;&#xA;      - &#39;./kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to get the required credentials to consume and produce messages you need to provide the credentials in the client. If your Apache Kafka client allows it, use the credentials you&#39;ve provided.&lt;/p&gt; &#xA;&lt;p&gt;While producing and consuming messages using the &lt;code&gt;bitnami/kafka&lt;/code&gt; image, you&#39;ll need to point to the &lt;code&gt;consumer.properties&lt;/code&gt; and/or &lt;code&gt;producer.properties&lt;/code&gt; file, which contains the needed configuration to work. You can find this files in the &lt;code&gt;/opt/bitnami/kafka/conf&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Use this to generate messages using a secure setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;export KAFKA_OPTS=&#34;-Djava.security.auth.login.config=/opt/bitnami/kafka/conf/kafka_jaas.conf&#34;&#xA;kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic test --producer.config /opt/bitnami/kafka/conf/producer.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use this to consume messages using a secure setup&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;export KAFKA_OPTS=&#34;-Djava.security.auth.login.config=/opt/bitnami/kafka/conf/kafka_jaas.conf&#34;&#xA;kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic test --consumer.config /opt/bitnami/kafka/conf/consumer.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use other tools to use your Apache Kafka cluster, you&#39;ll need to provide the required information. You can find the required information in the files located at &lt;code&gt;/opt/bitnami/kafka/conf&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h4&gt;InterBroker communications&lt;/h4&gt; &#xA;&lt;p&gt;When configuring your broker to use &lt;code&gt;SASL&lt;/code&gt; or &lt;code&gt;SASL_SSL&lt;/code&gt; for inter-broker communications, you can provide the SASL credentials using these environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_USER&lt;/code&gt;: Apache Kafka inter broker communication user. Deprecated in favor of &lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_PASSWORD&lt;/code&gt;: Apache Kafka inter broker communication password. Deprecated in favor of &lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Apache Kafka client configuration&lt;/h4&gt; &#xA;&lt;p&gt;When configuring Apache Kafka with &lt;code&gt;SASL&lt;/code&gt; or &lt;code&gt;SASL_SSL&lt;/code&gt; for communications with clients, you can provide your the SASL credentials using this environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt;: Apache Kafka client user. Default: &lt;strong&gt;user&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;: Apache Kafka client user password. Default: &lt;strong&gt;bitnami&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Apache Kafka ZooKeeper client configuration&lt;/h4&gt; &#xA;&lt;p&gt;There are different options of configuration to connect a Zookeeper server.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect a Zookeeper server without authentication, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;PLAINTEXT&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to authenticate Apache Kafka against a Zookeeper server with &lt;code&gt;SASL&lt;/code&gt;, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;SASL&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_USER&lt;/code&gt;: Apache Kafka Zookeeper user for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper user password for SASL authentication. No defaults.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to authenticate Apache Kafka against a Zookeeper server with &lt;code&gt;SSL&lt;/code&gt;, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;SSL&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper keystore file password and key password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper truststore file password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME&lt;/code&gt;: Verify Zookeeper hostname on TLS certificates. Defaults: &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to authenticate Apache Kafka against a Zookeeper server with &lt;code&gt;SASL_SSL&lt;/code&gt;, you should provide the environment variables below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PROTOCOL&lt;/code&gt;: &lt;strong&gt;SASL_SSL&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_USER&lt;/code&gt;: Apache Kafka Zookeeper user for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper user password for SASL authentication. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_FILE&lt;/code&gt;: Apache Kafka Zookeeper truststore file location. Set it if the mount location is different from &lt;code&gt;/bitnami/kafka/conf/certs/zookeeper.truststore.pem&lt;/code&gt;, &lt;code&gt;/bitnami/kafka/conf/certs/zookeeper.truststore.jks&lt;/code&gt;, &lt;code&gt;/opt/bitnami/kafka/config/certs/zookeeper.truststore.jks&lt;/code&gt; or &lt;code&gt;/opt/bitnami/kafka/conf/certs/zookeeper.truststore.pem&lt;/code&gt; No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_KEYSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper keystore file password and key password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TRUSTSTORE_PASSWORD&lt;/code&gt;: Apache Kafka Zookeeper truststore file password. No defaults.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME&lt;/code&gt;: Verify Zookeeper hostname on TLS certificates. Defaults: &lt;strong&gt;true&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_TLS_TYPE&lt;/code&gt;: Choose the TLS certificate format to use. Allowed values: &lt;code&gt;JKS&lt;/code&gt;, &lt;code&gt;PEM&lt;/code&gt;. Defaults: &lt;strong&gt;JKS&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: You &lt;strong&gt;must&lt;/strong&gt; also use your own certificates for SSL. You can mount your Java Key Stores (&lt;code&gt;zookeeper.keystore.jks&lt;/code&gt; and &lt;code&gt;zookeeper.truststore.jks&lt;/code&gt;) or PEM files (&lt;code&gt;zookeeper.keystore.pem&lt;/code&gt;, &lt;code&gt;zookeeper.keystore.key&lt;/code&gt; and &lt;code&gt;zookeeper.truststore.pem&lt;/code&gt;) into &lt;code&gt;/opt/bitnami/kafka/conf/certs&lt;/code&gt;. If client authentication is &lt;code&gt;none&lt;/code&gt; or &lt;code&gt;want&lt;/code&gt; in Zookeeper, the cert files are optional.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Setting up a Apache Kafka Cluster&lt;/h3&gt; &#xA;&lt;p&gt;A Apache Kafka cluster can easily be setup with the Bitnami Apache Kafka Docker image using the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECT&lt;/code&gt;: Comma separated host:port pairs, each corresponding to a Zookeeper Server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Create a Docker network to enable visibility to each other via the docker container name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker network create app-tier --driver bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 1: Create the first node for Zookeeper&lt;/h4&gt; &#xA;&lt;p&gt;The first step is to create one Zookeeper instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name zookeeper \&#xA;  --network app-tier \&#xA;  -e ALLOW_ANONYMOUS_LOGIN=yes \&#xA;  -p 2181:2181 \&#xA;  bitnami/zookeeper:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Create the first node for Apache Kafka&lt;/h4&gt; &#xA;&lt;p&gt;The first step is to create one Apache Kafka instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka1 \&#xA;  --network app-tier \&#xA;  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \&#xA;  -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;  -p :9092 \&#xA;  bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Create the second node&lt;/h4&gt; &#xA;&lt;p&gt;Next we start a new Apache Kafka container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka2 \&#xA;  --network app-tier \&#xA;  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \&#xA;  -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;  -p :9092 \&#xA;  bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3: Create the third node&lt;/h3&gt; &#xA;&lt;p&gt;Next we start another new Apache Kafka container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka3 \&#xA;  --network app-tier \&#xA;  -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181 \&#xA;  -e ALLOW_PLAINTEXT_LISTENER=yes \&#xA;  -p :9092 \&#xA;  bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You now have a Apache Kafka cluster up and running. You can scale the cluster by adding/removing slaves without incurring any downtime.&lt;/p&gt; &#xA;&lt;p&gt;With Docker Compose, topic replication can be setup using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;services:&#xA;  zookeeper:&#xA;    image: &#39;bitnami/zookeeper:latest&#39;&#xA;    ports:&#xA;     - &#39;2181:2181&#39;&#xA;    environment:&#xA;     - ALLOW_ANONYMOUS_LOGIN=yes&#xA;  kafka1:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;  kafka2:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;  kafka3:&#xA;    image: &#39;bitnami/kafka:latest&#39;&#xA;    ports:&#xA;      - &#39;9092&#39;&#xA;    environment:&#xA;      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181&#xA;      - ALLOW_PLAINTEXT_LISTENER=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you can create a replicated topic with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;root@kafka1:/# /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --topic mytopic --partitions 3 --replication-factor 3&#xA;Created topic &#34;mytopic&#34;.&#xA;&#xA;root@kafka1:/# /opt/bitnami/kafka/bin/kafka-topics.sh --describe --bootstrap-server localhost:9092 --topic mytopic&#xA;Topic:mytopic   PartitionCount:3        ReplicationFactor:3     Configs:&#xA;        Topic: mytopic  Partition: 0    Leader: 2       Replicas: 2,3,1 Isr: 2,3,1&#xA;        Topic: mytopic  Partition: 1    Leader: 3       Replicas: 3,1,2 Isr: 3,1,2&#xA;        Topic: mytopic  Partition: 2    Leader: 1       Replicas: 1,2,3 Isr: 1,2,3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Full configuration&lt;/h3&gt; &#xA;&lt;p&gt;The image looks for configuration files (server.properties, log4j.properties, etc.) in the &lt;code&gt;/bitnami/kafka/config/&lt;/code&gt; directory, this directory can be changed by setting the KAFKA_MOUNTED_CONF_DIR environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka -v /path/to/server.properties:/bitnami/kafka/config/server.properties bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, your changes will be taken into account in the server&#39;s behaviour.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Run the Apache Kafka image&lt;/h4&gt; &#xA;&lt;p&gt;Run the Apache Kafka image, mounting a directory from your host.&lt;/p&gt; &#xA;&lt;p&gt;Modify the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;...&#xA;services:&#xA;  kafka:&#xA;    ...&#xA;    volumes:&#xA;      - &#39;kafka_data:/bitnami&#39;&#xA;+     - /path/to/server.properties:/bitnami/kafka/config/server.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Edit the configuration&lt;/h4&gt; &#xA;&lt;p&gt;Edit the configuration on your host using your favorite editor.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;vi /path/to/server.properties&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 3: Restart Apache Kafka&lt;/h4&gt; &#xA;&lt;p&gt;After changing the configuration, restart your Apache Kafka container for changes to take effect.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker restart kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose restart kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;The Bitnami Apache Kafka Docker image sends the container logs to the &lt;code&gt;stdout&lt;/code&gt;. To view the logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker logs kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose logs kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can configure the containers &lt;a href=&#34;https://docs.docker.com/engine/admin/logging/overview/&#34;&gt;logging driver&lt;/a&gt; using the &lt;code&gt;--log-driver&lt;/code&gt; option if you wish to consume the container logs differently. In the default configuration docker uses the &lt;code&gt;json-file&lt;/code&gt; driver.&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance&lt;/h2&gt; &#xA;&lt;h3&gt;Backing up your container&lt;/h3&gt; &#xA;&lt;p&gt;To backup your data, configuration and logs, follow these simple steps:&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Stop the currently running container&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker stop kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose stop kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Run the backup command&lt;/h4&gt; &#xA;&lt;p&gt;We need to mount two volumes in a container we will use to create the backup: a directory on your host to store the backup in, and the volumes from the container we just stopped so we can access the data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --rm -v /path/to/kafka-backups:/backups --volumes-from kafka busybox \&#xA;  cp -a /bitnami/kafka:latest /backups/latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --rm -v /path/to/kafka-backups:/backups --volumes-from `docker-compose ps -q kafka` busybox \&#xA;  cp -a /bitnami/kafka:latest /backups/latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Restoring a backup&lt;/h3&gt; &#xA;&lt;p&gt;Restoring a backup is as simple as mounting the backup as volumes in the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -v /path/to/kafka-backups/latest:/bitnami/kafka bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also modify the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;kafka:&#xA;  volumes:&#xA;    - /path/to/kafka-backups/latest:/bitnami/kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upgrade this image&lt;/h3&gt; &#xA;&lt;p&gt;Bitnami provides up-to-date versions of Apache Kafka, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Get the updated image&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you&#39;re using Docker Compose, update the value of the image property to &lt;code&gt;bitnami/kafka:latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Step 2: Stop and backup the currently running container&lt;/h4&gt; &#xA;&lt;p&gt;Before continuing, you should backup your container&#39;s data, configuration and logs.&lt;/p&gt; &#xA;&lt;p&gt;Follow the steps on &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#backing-up-your-container&#34;&gt;creating a backup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Step 3: Remove the currently running container&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker rm -v kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose rm -v kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 4: Run the new image&lt;/h4&gt; &#xA;&lt;p&gt;Re-create your container from the new image, &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#restoring-a-backup&#34;&gt;restoring your backup&lt;/a&gt; if necessary.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name kafka bitnami/kafka:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notable Changes&lt;/h2&gt; &#xA;&lt;h3&gt;Branches rename&lt;/h3&gt; &#xA;&lt;p&gt;Branch 2 has been renamed to 2.8 and branch 3 has been splited into branches 3.0 and 3.1 mirroing the upstream &lt;a href=&#34;https://kafka.apache.org/downloads&#34;&gt;Apache Kafka&#39;s naming policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3.0.0-debian-10-r0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache Kafka 3.0 deprecates the &lt;code&gt;--zookeper&lt;/code&gt; flag in shell commands. Related operations such as topic creation require the use of updated flags. Please, refer to &lt;a href=&#34;https://downloads.apache.org/kafka/3.0.0/RELEASE_NOTES.html&#34;&gt;Apache Kafka&#39;s official release notes&lt;/a&gt; for further information on the changes introduced by this version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.5.0-debian-10-r111&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;KAFKA_CLIENT_USER&lt;/code&gt; AND &lt;code&gt;KAFKA_CLIENT_PASSWORD&lt;/code&gt; have been deprecated in favor of &lt;code&gt;KAFKA_CLIENT_USERS&lt;/code&gt; and &lt;code&gt;KAFKA_CLIENT_PASSWORDS&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.5.0-debian-10-r51&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The environment variables &lt;code&gt;KAFKA_PORT_NUMBER&lt;/code&gt; and &lt;code&gt;KAFKA_CFG_PORT&lt;/code&gt; was deprecated, you can specify the port number in &lt;code&gt;KAFKA_CFG_LISTENERS&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The following environment variables were renamed:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_BROKER_USER&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CLIENT_USER&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_BROKER_PASSWORD&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CLIENT_PASSWORD&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Listeners &amp;amp; advertised listeners must be configured to enable authentication. Check &lt;a href=&#34;https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/#security&#34;&gt;Security section&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.4.1-r38-debian-10&lt;/h3&gt; &#xA;&lt;p&gt;The configuration directory was changed to &lt;code&gt;/opt/bitnami/kafka/config&lt;/code&gt;. Configuration files should be mounted to &lt;code&gt;/bitnami/kafka/config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.1.1-debian-9-r224, 2.2.1-debian-9-r16, 1.1.1-ol-7-r306 and 2.2.1-ol-7-r14&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The following environment variables were beingly wrongly translated into &lt;code&gt;KAFKA_CFG_&lt;/code&gt; environment variables, and therefore they were being wrongly mapped into Apache Kafka keys:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_LOGS_DIRS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_DIRS&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_PORT_NUMBER&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_PORT&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For consistency reasons with previous environment variables, the following &lt;code&gt;KAFKA_&lt;/code&gt; to &lt;code&gt;KAFKA_CFG_&lt;/code&gt; environment variable translations are now supported for mapping into Apache Kafka keys:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_LOG_DIRS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_DIRS&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.1-debian-9-r205, 2.2.0-debian-9-r40, 1.1.1-ol-7-r286, and 2.2.0-ol-7-r53&lt;/h3&gt; &#xA;&lt;p&gt;Configuration changes. Most environment variables now start with &lt;code&gt;KAFKA_CFG_&lt;/code&gt;, as they are now mapped directly to Apache Kafka keys. Variables changed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ADVERTISED_LISTENERS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_BROKER_ID&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_BROKER_ID&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_DEFAULT_REPLICATION_FACTOR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_DEFAULT_REPLICATION_FACTOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_DELETE_TOPIC_ENABLE&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_DELETE_TOPIC_ENABLE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_INTER_BROKER_LISTENER_NAME&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_INTER_BROKER_LISTENER_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LISTENERS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LISTENERS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOGS_DIRS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_DIRS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_FLUSH_INTERVAL_MESSAGES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_FLUSH_INTERVAL_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_FLUSH_INTERVAL_MS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_MESSAGE_FORMAT_VERSION&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_MESSAGE_FORMAT_VERSION&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_RETENTION_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_RETENTION_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_RETENTION_CHECK_INTERVALS_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_LOG_RETENTION_HOURS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_LOG_RETENTION_HOURS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_MAX_MESSAGE_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_MESSAGE_MAX_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_IO_THREADS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_IO_THREADS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_NETWORK_THREADS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_NETWORK_THREADS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_PARTITIONS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_PARTITIONS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_PORT&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_PORT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SEGMENT_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SEGMENT_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SOCKET_RECEIVE_BUFFER_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SOCKET_REQUEST_MAX_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SOCKET_SEND_BUFFER_BYTES&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TRANSACTION_STATE_LOG_MIN_ISR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECT_TIMEOUT_MS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;KAFKA_ZOOKEEPER_CONNECT&lt;/code&gt; -&amp;gt; &lt;code&gt;KAFKA_CFG_ZOOKEEPER_CONNECT&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.0-r41&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration is not persisted anymore. It should be mounted as a volume or it will be regenerated each time the container is created.&lt;/li&gt; &#xA; &lt;li&gt;Dummy certificates are not used anymore when the SASL_SSL listener is configured. These certificates must be mounted as volumes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.10.2.1-r3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The kafka container has been migrated to a non-root container approach. Previously the container run as &lt;code&gt;root&lt;/code&gt; user and the kafka daemon was started as &lt;code&gt;kafka&lt;/code&gt; user. From now own, both the container and the kafka daemon run as user &lt;code&gt;1001&lt;/code&gt;. As a consequence, the configuration files are writable by the user running the kafka process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.10.2.1-r0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New Bitnami release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Branch Deprecation Notice&lt;/h2&gt; &#xA;&lt;p&gt;Apache Kafka&#39;s branch 2.8.x is no longer maintained by upstream and is now internally tagged as to be deprecated. This branch will no longer be released in our catalog a month after this notice is published, but already released container images will still persist in the registries. Valid to be removed starting on: 06-20-2022&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love for you to contribute to this container. You can request new features by creating an &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/issues&#34;&gt;issue&lt;/a&gt;, or submit a &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/pulls&#34;&gt;pull request&lt;/a&gt; with your contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you encountered a problem running this container, you can file an &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-kafka/issues/new&#34;&gt;issue&lt;/a&gt;. For us to provide better support, be sure to include the following information in your issue:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Host OS and version&lt;/li&gt; &#xA; &lt;li&gt;Docker version (&lt;code&gt;docker version&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Output of &lt;code&gt;docker info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Version of this container&lt;/li&gt; &#xA; &lt;li&gt;The command you used to run the container, and any relevant output you saw (masking any sensitive information)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2022 Bitnami&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ophub/amlogic-s9xxx-armbian</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/ophub/amlogic-s9xxx-armbian</id>
    <link href="https://github.com/ophub/amlogic-s9xxx-armbian" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Armbian for Amlogic s9xxx tv box. Support a311d, s922x, s905x3, s905x2, s912, s905d, s905x, s905w, s905, etc. including install to EMMC and update related functions.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Armbian for Amlogic TV Boxes&lt;/h1&gt; &#xA;&lt;p&gt;View Chinese description | &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/README.cn.md&#34;&gt;查看中文说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.armbian.com/&#34;&gt;Armbian&lt;/a&gt; system is a lightweight Linux system based on Debian/Ubuntu built specifically for ARM chips. The Armbian system is lean, clean, and 100% compatible and inherits the functions and rich software ecosystem of the Debian/Ubuntu system. It can run safely and stably in TF/SD/USB and the eMMC of the device.&lt;/p&gt; &#xA;&lt;p&gt;Now you can replace the Android TV system of the TV box with the Amlogic chip with the Armbian system, making it a powerful server. This project builds Armbian system for Amlogic s9xxx TV box. including install to EMMC and update related functions. Support Amlogic s9xxx TV Boxes are &lt;em&gt;&lt;strong&gt;&lt;code&gt;a311d, s922x, s905x3, s905x2, s905l3a, s912, s905d, s905x, s905w, s905&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, etc. such as &lt;em&gt;&lt;strong&gt;&lt;code&gt;Belink GT-King, Belink GT-King Pro, UGOOS AM6 Plus, X96-Max+, HK1-Box, H96-Max-X3, Phicomm-N1, Octopus-Planet, Fiberhome HG680P, ZTE B860H&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, etc. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs&#34;&gt;Armbian Documentation&lt;/a&gt; for the usage method.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of the Armbian firmware can be downloaded in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/releases&#34;&gt;Releases&lt;/a&gt;. Welcome to &lt;code&gt;Fork&lt;/code&gt; and personalize it. If it is useful to you, you can click on the &lt;code&gt;Star&lt;/code&gt; in the upper right corner of the warehouse to show your support.&lt;/p&gt; &#xA;&lt;h2&gt;Armbian Firmware instructions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SoC&lt;/th&gt; &#xA;   &lt;th&gt;Device&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;Optional kernel&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Armbian Firmware&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a311d&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/boards---shields/pp_3008145189226460.html&#34;&gt;Khadas-VIM3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_a311d_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s922x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/RAgZmOM41db&#34;&gt;Beelink-GT-King&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008857542462482.html&#34;&gt;Beelink-GT-King-Pro&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/pHGKXuV41db&#34;&gt;Ugoos-AM6-Plus&lt;/a&gt;, &lt;a href=&#34;https://www.tokopedia.com/search?st=product&amp;amp;q=ODROID-N2&#34;&gt;ODROID-N2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s922x_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/uMaH09s41db&#34;&gt;X96-Max+&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/xhWeQgTuwfb&#34;&gt;HK1-Box&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/KuWvwoYuwfb&#34;&gt;H96-Max-X3&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/duoIXZpdGgb&#34;&gt;Ugoos-X3&lt;/a&gt;, &lt;a href=&#34;https://www.aliexpress.com/item/1005003772717802.html&#34;&gt;TX3&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3002885621272175.html&#34;&gt;X96-Air&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/ByBL45jdGgb&#34;&gt;A95XF3-Air&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905x3_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/HcfLaRzjqeb&#34;&gt;X96Max-4G&lt;/a&gt;, &lt;a href=&#34;https://tokopedia.link/HcfLaRzjqeb&#34;&gt;X96Max-2G&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3008133484979616.html&#34;&gt;MECOOL-KM3-4G&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905x2_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s912&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box/pp_759339.html&#34;&gt;TX9-Pro&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_503486.html&#34;&gt;H96-Pro-Plus&lt;/a&gt;, &lt;a href=&#34;http://www.tanix-box.com/project-view/tanix-tx92-android-tv-box-powered-amlogic-s912/&#34;&gt;Tanix-TX92&lt;/a&gt;, &lt;a href=&#34;http://www.vorke.com/project/vorke-z6-2/&#34;&gt;VORKE-Z6-Plus&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_3005746210753315.html&#34;&gt;Mecool-M8S-PRO-L&lt;/a&gt;, &lt;a href=&#34;https://www.ebay.com/itm/253466003975&#34;&gt;T95Z-Plus&lt;/a&gt;, Octopus-Planet&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s912_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905d&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_629409.html&#34;&gt;MECOOL-KI-Pro&lt;/a&gt;, Phicomm-N1&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905d_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905x&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/HbrIbqQcGgb&#34;&gt;HG680P&lt;/a&gt;, &lt;a href=&#34;https://www.zte.com.cn/global/products/cocloud/201707261551/IP-STB/ZXV10-B860H&#34;&gt;B860H&lt;/a&gt;, &lt;a href=&#34;https://www.tbee.com/product/tbee-box/&#34;&gt;TBee-Box&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_268277.html&#34;&gt;T95&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905x_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905w&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tokopedia.link/ro207Hsjqeb&#34;&gt;X96-Mini&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box/pp_009748238474.html&#34;&gt;TX3-Mini&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;5.15.y&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905w_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_321409.html&#34;&gt;Beelink-Mini-MX-2G&lt;/a&gt;, &lt;a href=&#34;https://www.gearbest.com/tv-box-mini-pc/pp_354313.html&#34;&gt;MXQ-Pro+4K&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;s905l3a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Calmact/e900v22c&#34;&gt;E900V22C/D&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;armbian_aml_s905l3a_*.img&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;💡Tip: The current &lt;em&gt;&lt;strong&gt;&lt;code&gt;s905w&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; series of TV Boxes only support the use of the &lt;code&gt;5.15.y&lt;/code&gt; kernel, Other types of TV Boxes can use optional kernel versions. Currently &lt;em&gt;&lt;strong&gt;&lt;code&gt;s905&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; TV Boxes can only be used in &lt;code&gt;TF/SD/USB&lt;/code&gt;, other types of TV Boxes also support writing to &lt;code&gt;EMMC&lt;/code&gt;. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs/amlogic_model_database.md&#34;&gt;instructions&lt;/a&gt; for dtb and u-boot of each device.&lt;/p&gt; &#xA;&lt;h2&gt;Install to EMMC and update instructions&lt;/h2&gt; &#xA;&lt;p&gt;Choose the corresponding firmware according to your box. Then write the IMG file to the USB hard disk through software such as &lt;a href=&#34;https://rufus.ie/&#34;&gt;Rufus&lt;/a&gt; or &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt;. Insert the USB hard disk into the box. Common for all &lt;code&gt;Amlogic s9xxx TV Boxes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Install Armbian to EMMC&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian (default user: root, default password: 1234) → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The mainline u-boot is installed by default, In order to support the use of 5.10 and above kernels. If you choose not to install, specify it in the &lt;code&gt;1&lt;/code&gt; input parameter, e.g. &lt;code&gt;armbian-install no&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Update Armbian Kernel&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Run as root user (sudo -i)&#xA;# If no other parameters are specified, the following update command will update to the latest version of the current kernel of the same series.&#xA;armbian-update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If there is a set of kernel files in the current directory, it will be updated with the kernel in the current directory (The 4 kernel files required for the update are &lt;code&gt;header-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;boot-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;dtb-amlogic-xxx.tar.gz&lt;/code&gt;, &lt;code&gt;modules-xxx.tar.gz&lt;/code&gt;. Other kernel files are not required. If they exist at the same time, it will not affect the update. The system can accurately identify the required kernel files). If there is no kernel file in the current directory, it will query and download the latest kernel of the same series from the server for update. You can also query the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;optional kernel&lt;/a&gt; version and update the specified version: &lt;code&gt;armbian-update 5.10.100&lt;/code&gt;. The optional kernel supported by the device can be freely updated, such as from 5.10.100 kernel to 5.15.25 kernel. When the kernel is updated, By default, download from &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;stable&lt;/a&gt; kernel version branch, if you download other &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, please specify according to the branch folder name in the &lt;code&gt;2&lt;/code&gt; parameter, such as &lt;code&gt;armbian-update 5.7.19 dev&lt;/code&gt; . The mainline u-boot will be installed automatically by default, which has better support for kernels using versions above 5.10. If you choose not to install, please specify it in the &lt;code&gt;3&lt;/code&gt; input parameter, such as &lt;code&gt;armbian-update 5.10.100 stable no &lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Install Docker Service&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing docker, you can choose whether to install the &lt;code&gt;portainer&lt;/code&gt; visual management panel. Users who intend to use the &lt;code&gt;LAN IP&lt;/code&gt; for management can choose (&lt;code&gt;h&lt;/code&gt;) to install the &lt;code&gt;http://ip:9000&lt;/code&gt; version; Users who intend to use the &lt;code&gt;domain name&lt;/code&gt; for remote management can choose (&lt;code&gt;s&lt;/code&gt;) to install the &lt;code&gt;https://domain:9000&lt;/code&gt; domain name certificate version (Please name the domain name &lt;code&gt;SSL&lt;/code&gt; certificate as &lt;code&gt;portainer.crt&lt;/code&gt; and &lt;code&gt;portainer.key&lt;/code&gt; and upload it to the &lt;code&gt;/etc/ssl/&lt;/code&gt; directory); Users who &lt;code&gt;do not need&lt;/code&gt; to install can choose (&lt;code&gt;n&lt;/code&gt;) to end the installation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Modify Armbian Config&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Create swap for Armbian&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you feel that the memory of the current box is not enough when you are using applications with a large memory footprint such as &lt;code&gt;docker&lt;/code&gt;, you can create a &lt;code&gt;swap&lt;/code&gt; virtual memory partition, Change the disk space a certain capacity is virtualized into memory for use. The unit of the input parameter of the following command is &lt;code&gt;GB&lt;/code&gt;, and the default is &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-swap 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Controlling the LED display&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-led&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Debug according to &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs/led_screen_display_control.md&#34;&gt;LED screen display control instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Use Armbian in TF/SD/USB&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To activate the remaining space of TF/SD/USB, please login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-tf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;According to the prompt, enter &lt;code&gt;e&lt;/code&gt; to expand the remaining space to the current system partition and file system, and enter &lt;code&gt;c&lt;/code&gt; to create a new third partition.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Or manually allocate the remaining space&lt;/summary&gt; &#xA; &lt;h4&gt;View &lt;a href=&#34;https://user-images.githubusercontent.com/68696949/137860992-fbd4e2fa-e90c-4bbb-8985-7f5db9f49927.jpg&#34;&gt;Operation screenshot&lt;/a&gt;&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# 1. Confirm the name of the TF/SD/USB according to the size of the space. The TF/SD is [ `mmcblk` ], USB is [ `sd` ]&#xA;Command: Enter [ fdisk -l | grep &#34;sd&#34; ]&#xA;&#xA;# 2. Get the starting value of the remaining space, Copy and save, used below  (E.g: 5382144)&#xA;Command: Enter [ fdisk -l | grep &#34;sd&#34; | sed -n &#39;$p&#39; | awk &#39;{print $3}&#39; | xargs -i expr {} + 1 ]&#xA;&#xA;# 3. Start allocating unused space (E.g: sda, mmcblk0 or mmcblk1)&#xA;Command: Enter [ fdisk /dev/sda ] Start allocating the remaining space&#xA;Command: Select [ n ] to create a partition&#xA;Command: Select [ p ] to specify the partition type as primary partition&#xA;Command: Set the partition number to [ 3 ]&#xA;Command: The start value of the partition, enter the value obtained in the second step, E.g: [ 5382144 ]&#xA;Command: End value, press [ Enter ] to use the default value&#xA;Command: If there is a hint: Do you want to remove the signature? [Y]es/[N]o: Enter [ Y ]&#xA;Command: Enter [ t ] to specify the partition type&#xA;Command: Enter Partition number [ 3 ]&#xA;Command: Enter Hex code (type L to list all codes): [ 83 ]&#xA;Command: Enter [ w ] to save&#xA;Command: Enter [ reboot ] to restart&#xA;&#xA;# 4. After restarting, format the new partition&#xA;Command: Enter [ mkfs.ext4 -F -L SHARED /dev/sda3 ] to format the new partition&#xA;&#xA;# 5. Set the mount directory for the new partition&#xA;Command: Enter [ mkdir -p /mnt/share ] to Create mount directory&#xA;Command: Enter [ mount -t ext4 /dev/sda3 /mnt/share ] to Mount the newly created partition to the directory&#xA;&#xA;# 6. Add automatic mount at boot&#xA;Command: Enter [ vi /etc/fstab ]&#xA;# Press [ i ] to enter the input mode, copy the following values to the end of the file&#xA;/dev/sda3 /mnt/share ext4 defaults 0 0&#xA;# Press [ esc ] to exit, Input [ :wq! ] and [ Enter ] to Save, Finish.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Backup/restore the original EMMC system&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supports backup/restore of the box&#39;s &lt;code&gt;EMMC&lt;/code&gt; partition in &lt;code&gt;TF/SD/USB&lt;/code&gt;. It is recommended that you back up the Android TV system that comes with the current box before installing the Armbian system in a brand new box, so that you can use it in the future when restoring the TV system.&lt;/p&gt; &#xA;&lt;p&gt;Please login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-ddbr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;According to the prompt, enter &lt;code&gt;b&lt;/code&gt; to perform system backup, and enter &lt;code&gt;r&lt;/code&gt; to perform system recovery.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Compile the kernel in Armbian&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the usage of compiling the kernel in Armbian, see the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel&#34;&gt;compile-kernel&lt;/a&gt; documentation. please login in to armbian → input command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;armbian-kernel -update&#xA;armbian-kernel -d -k 5.10.100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;More instructions for use&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the use of Armbian, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs&#34;&gt;armbian-docs&lt;/a&gt; for some common problems that may be encountered.&lt;/p&gt; &#xA;&lt;h2&gt;Local build instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository to the local. &lt;code&gt;git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-armbian.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the necessary packages (The script has only been tested on x86_64 Ubuntu-20.04/22.04)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;cd amlogic-s9xxx-armbian&#xA;sudo apt-get update -y&#xA;sudo apt-get full-upgrade -y&#xA;# For Ubuntu-22.04&#xA;sudo apt-get install -y $(cat compile-kernel/tools/script/ubuntu2204-build-armbian-depends)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the &lt;code&gt;build/output/images&lt;/code&gt; folder, and upload the Armbian image ( Eg: &lt;code&gt;Armbian_21.11.0-trunk_Odroidn2_current_5.15.25.img&lt;/code&gt; ) to this &lt;code&gt;~/amlogic-s9xxx-armbian/build/output/images&lt;/code&gt; directory. Please keep the release version number (e.g. &lt;code&gt;21.11.0&lt;/code&gt;) and kernel version number (e.g. &lt;code&gt;5.15.25&lt;/code&gt;) in the name of the original Armbian image file, It will be used as the name of the armbian firmware after rebuilding.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter the &lt;code&gt;~/amlogic-s9xxx-armbian&lt;/code&gt; root directory. And run Eg: &lt;code&gt;sudo ./rebuild -d -b s905x3 -k 5.10.100&lt;/code&gt; to build armbian for &lt;code&gt;amlogic s9xxx&lt;/code&gt;. The generated Armbian image is in the &lt;code&gt;build/output/images&lt;/code&gt; directory under the root directory.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Description of localized packaging parameters&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-d&lt;/td&gt; &#xA;   &lt;td&gt;Defaults&lt;/td&gt; &#xA;   &lt;td&gt;Compile all cores and all firmware types.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-b&lt;/td&gt; &#xA;   &lt;td&gt;BuildSoC&lt;/td&gt; &#xA;   &lt;td&gt;Specify the Build firmware type. Write the build firmware name individually, such as &lt;code&gt;-b s905x3&lt;/code&gt; . Multiple firmware use &lt;code&gt;_&lt;/code&gt; connect such as &lt;code&gt;-b s905x3_s905d&lt;/code&gt; . Use &lt;code&gt;all&lt;/code&gt; for all SoC models. You can use these codes: &lt;code&gt;a311d&lt;/code&gt;, &lt;code&gt;s905x3&lt;/code&gt;, &lt;code&gt;s905x2&lt;/code&gt;, &lt;code&gt;s905l3a&lt;/code&gt;, &lt;code&gt;s905x&lt;/code&gt;, &lt;code&gt;s905w&lt;/code&gt;, &lt;code&gt;s905d&lt;/code&gt;, &lt;code&gt;s905d-ki&lt;/code&gt;, &lt;code&gt;s905&lt;/code&gt;, &lt;code&gt;s922x&lt;/code&gt;, &lt;code&gt;s922x-n2&lt;/code&gt;, &lt;code&gt;s912&lt;/code&gt;, &lt;code&gt;s912-m8s&lt;/code&gt; . Note: &lt;code&gt;s922x-reva&lt;/code&gt; is &lt;code&gt;s922x-gtking-pro-rev_a&lt;/code&gt;, &lt;code&gt;s922x-n2&lt;/code&gt; is &lt;code&gt;s922x-odroid-n2&lt;/code&gt;, &lt;code&gt;s912-m8s&lt;/code&gt; is &lt;code&gt;s912-mecool-m8s-pro-l&lt;/code&gt;, &lt;code&gt;s905d-ki&lt;/code&gt; is &lt;code&gt;s912-mecool-ki-pro&lt;/code&gt;, &lt;code&gt;s905x2-km3&lt;/code&gt; is &lt;code&gt;s905x2-mecool-km3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-k&lt;/td&gt; &#xA;   &lt;td&gt;Kernel&lt;/td&gt; &#xA;   &lt;td&gt;Specify the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;kernel version&lt;/a&gt;, Such as &lt;code&gt;-k 5.10.100&lt;/code&gt; . Multiple kernel use &lt;code&gt;_&lt;/code&gt; connection such as &lt;code&gt;-k 5.15.25_5.10.100&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a&lt;/td&gt; &#xA;   &lt;td&gt;AutoKernel&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to automatically adopt the latest version of the kernel of the same series. When it is &lt;code&gt;true&lt;/code&gt;, it will automatically find in the kernel library whether there is an updated version of the kernel specified in &lt;code&gt;-k&lt;/code&gt; such as 5.10.100 version. If there is the latest version of same series, it will automatically Replace with the latest version. When set to &lt;code&gt;false&lt;/code&gt;, the specified version of the kernel will be compiled. Default value: &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v&lt;/td&gt; &#xA;   &lt;td&gt;Version&lt;/td&gt; &#xA;   &lt;td&gt;Specify the &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, Such as &lt;code&gt;-v stable&lt;/code&gt;. The specified name must be the same as the branch directory name. The &lt;code&gt;stable&lt;/code&gt; branch version is used by default.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&lt;/td&gt; &#xA;   &lt;td&gt;Size&lt;/td&gt; &#xA;   &lt;td&gt;Specify the size of the ROOTFS partition in MB. The default is 2748, and the specified size must be greater than 2000. Such as &lt;code&gt;-s 2748&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-t&lt;/td&gt; &#xA;   &lt;td&gt;RootfsType&lt;/td&gt; &#xA;   &lt;td&gt;Set the file system type of the ROOTFS partition of the firmware, the default is &lt;code&gt;ext4&lt;/code&gt; type, and the options are &lt;code&gt;ext4&lt;/code&gt; or &lt;code&gt;btrfs&lt;/code&gt; type. Such as &lt;code&gt;-t btrfs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;CustomName&lt;/td&gt; &#xA;   &lt;td&gt;Set the signature part of the firmware name. The default value is empty. You can add signatures such as &lt;code&gt;_server&lt;/code&gt;, &lt;code&gt;_gnome_desktop&lt;/code&gt; or &lt;code&gt;_ophub&lt;/code&gt; as needed. Do not include spaces when setting custom signatures.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d&lt;/code&gt;: Use the default configuration to pack all TV Boxes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3 -k 5.10.100&lt;/code&gt;: recommend. Use the default configuration, specify a kernel and a firmware for compilation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3_s905d -k 5.15.25_5.10.100&lt;/code&gt;: Use the default configuration, specify multiple cores, and multiple firmware for compilation. use &lt;code&gt;_&lt;/code&gt; to connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3 -k 5.10.100 -s 2748&lt;/code&gt;: Use the default configuration, specify a kernel, a firmware, and set the partition size for compilation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3 -v dev -k 5.7.19&lt;/code&gt;: Use the default configuration, specify the model, specify the version branch, and specify the kernel for packaging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -b s905x3_s905d&lt;/code&gt;: Use the default configuration, specify multiple firmware, use &lt;code&gt;_&lt;/code&gt; to connect. compile all kernels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -k 5.15.25_5.10.100&lt;/code&gt;: Use the default configuration. Specify multiple cores, use &lt;code&gt;_&lt;/code&gt; to connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -k 5.15.25_5.10.100 -a true&lt;/code&gt;: Use the default configuration. Specify multiple cores, use &lt;code&gt;_&lt;/code&gt; to connect. Auto update to the latest kernel of the same series.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo ./rebuild -d -t btrfs -s 2748 -k 5.10.100&lt;/code&gt;: Use the default configuration, set the file system to btrfs format and the partition size to 2748M, and only compile the armbian firmware with the kernel version 5.10.100.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use GitHub Actions to build&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Workflows configuration in &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/.github/workflows/build-armbian.yml&#34;&gt;.yml&lt;/a&gt; files. Set the armbian &lt;code&gt;SOC&lt;/code&gt; you want to build in &lt;code&gt;Rebuild Armbian for amlogic s9xxx&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;New compilation: Select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Build armbian&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; on the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/actions&#34;&gt;Actions&lt;/a&gt; page, According to the OS version officially supported by Armbian, In &lt;a href=&#34;https://docs.armbian.com/Developer-Guide_Build-Options/&#34;&gt;RELEASE&lt;/a&gt;, you can choose Ubuntu series: &lt;code&gt;jammy&lt;/code&gt; / &lt;code&gt;focal&lt;/code&gt;, or Debian series: &lt;code&gt;bullseye&lt;/code&gt; / &lt;code&gt;buster&lt;/code&gt;, and in &lt;code&gt;BOARD&lt;/code&gt;, you can choose &lt;code&gt;odroidn2&lt;/code&gt; / &lt;code&gt;lepotato&lt;/code&gt;, etc., Click the &lt;em&gt;&lt;strong&gt;&lt;code&gt;Run workflow&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile again: If there is an &lt;code&gt;Armbian_.*-trunk_.*.img.gz&lt;/code&gt; file in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/releases&#34;&gt;Releases&lt;/a&gt;, you do not need to compile it completely, you can directly use this file to &lt;code&gt;build armbian&lt;/code&gt; of different soc. Select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Use Releases file to build armbian&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; on the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/actions&#34;&gt;Actions&lt;/a&gt; page. Click the &lt;em&gt;&lt;strong&gt;&lt;code&gt;Run workflow&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt; button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use other Armbian firmware, such as &lt;a href=&#34;https://armbian.tnahosting.net/dl/odroidn2/archive/&#34;&gt;odroidn2&lt;/a&gt; provided by the official Armbian firmware download site &lt;a href=&#34;https://armbian.tnahosting.net/dl/&#34;&gt;armbian.tnahosting.net&lt;/a&gt;, only by introducing the script of this repository in the process control file &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/.github/workflows/rebuild-armbian.yml&#34;&gt;.yml&lt;/a&gt; for Armbian reconstruction, it can be adapted to the use of Amlogic S9xxx series TV Boxes. In the &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/actions&#34;&gt;Actions&lt;/a&gt; page, select &lt;em&gt;&lt;strong&gt;&lt;code&gt;Rebuild armbian&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;, and enter the Armbian network download url such as &lt;code&gt;https://dl.armbian.com/*/Armbian_*.img.xz&lt;/code&gt;, or in the process control file &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/.github/workflows/rebuild-armbian.yml&#34;&gt;.yml&lt;/a&gt;, set the load path of the rebuild file through the &lt;code&gt;armbian_path&lt;/code&gt; parameter. code show as below:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Rebuild the Armbian for Amlogic s9xxx&#xA;  uses: ophub/amlogic-s9xxx-armbian@main&#xA;  with:&#xA;    build_target: armbian&#xA;    armbian_path: build/output/images/*.img&#xA;    armbian_soc: s905d_s905x3_s922x_s905x&#xA;    armbian_kernel: 5.15.25_5.10.100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GitHub Actions Input parameter description&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the related settings of GitHUB RELEASES_TOKEN, please refer to: &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt/raw/main/router-config/README.md#3-fork-repository-and-set-releases_token&#34;&gt;RELEASES_TOKEN&lt;/a&gt;. The relevant parameters correspond to the &lt;code&gt;local packaging command&lt;/code&gt;, please refer to the above description.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Defaults&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_path&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;Set the path of the original Armbian file, support the file path in the current workflow such as &lt;code&gt;build/output/images/*.img&lt;/code&gt;, and also support the use of the network download address such as: &lt;code&gt;https://dl.armbian.com/*/Armbian_*.img.xz&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_soc&lt;/td&gt; &#xA;   &lt;td&gt;s905d_s905x3&lt;/td&gt; &#xA;   &lt;td&gt;Set the &lt;code&gt;SOC&lt;/code&gt; of the packaged TV Boxes, function reference &lt;code&gt;-b&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_kernel&lt;/td&gt; &#xA;   &lt;td&gt;5.15.25_5.10.100&lt;/td&gt; &#xA;   &lt;td&gt;Set kernel &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub/stable&#34;&gt;version&lt;/a&gt;, function reference &lt;code&gt;-k&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;auto_kernel&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to automatically use the latest version of the same series of kernels, function reference &lt;code&gt;-a&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;version_branch&lt;/td&gt; &#xA;   &lt;td&gt;stable&lt;/td&gt; &#xA;   &lt;td&gt;Specify the name of the kernel &lt;a href=&#34;https://github.com/ophub/kernel/tree/main/pub&#34;&gt;version branch&lt;/a&gt;, function reference &lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_size&lt;/td&gt; &#xA;   &lt;td&gt;2748&lt;/td&gt; &#xA;   &lt;td&gt;Set the size of the firmware ROOTFS partition, function reference &lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_fstype&lt;/td&gt; &#xA;   &lt;td&gt;ext4&lt;/td&gt; &#xA;   &lt;td&gt;Set the file system type of the firmware ROOTFS partition, function reference &lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;armbian_sign&lt;/td&gt; &#xA;   &lt;td&gt;no&lt;/td&gt; &#xA;   &lt;td&gt;Set the signature part of the firmware name, function reference &lt;code&gt;-n&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;GitHub Actions Output variable description&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To upload to &lt;code&gt;Releases&lt;/code&gt;, you need to add &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; and &lt;code&gt;GH_TOKEN&lt;/code&gt; to the repository and set &lt;code&gt;Workflow read and write permissions&lt;/code&gt;, see the &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/build-armbian/armbian-docs#2-set-the-privacy-variable-github_token&#34;&gt;instructions for details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;For example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_OUTPUTPATH }}&lt;/td&gt; &#xA;   &lt;td&gt;out&lt;/td&gt; &#xA;   &lt;td&gt;OpenWrt firmware storage path&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_OUTPUTDATE }}&lt;/td&gt; &#xA;   &lt;td&gt;04.13.1058&lt;/td&gt; &#xA;   &lt;td&gt;Packing date(month.day.hour.minute)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;${{ env.PACKAGED_STATUS }}&lt;/td&gt; &#xA;   &lt;td&gt;success&lt;/td&gt; &#xA;   &lt;td&gt;Package status: success / failure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Armbian firmware default information&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default IP&lt;/td&gt; &#xA;   &lt;td&gt;Get IP from the router&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default username&lt;/td&gt; &#xA;   &lt;td&gt;root&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Default password&lt;/td&gt; &#xA;   &lt;td&gt;1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Compile the kernel using GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;For the compilation method of the kernel, see &lt;a href=&#34;https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel&#34;&gt;compile-kernel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Compile the kernel for Amlogic s9xxx&#xA;  uses: ophub/amlogic-s9xxx-armbian@main&#xA;  with:&#xA;    build_target: kernel&#xA;    kernel_version: 5.15.25_5.10.100&#xA;    kernel_auto: true&#xA;    kernel_sign: -ophub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Armbian Contributors&lt;/h2&gt; &#xA;&lt;p&gt;First of all, I would like to thank &lt;a href=&#34;https://github.com/150balbes&#34;&gt;150balbes&lt;/a&gt; for his outstanding contributions and a good foundation for using Armbian in the Amlogic TV Boxes. The &lt;a href=&#34;https://github.com/armbian/build&#34;&gt;armbian&lt;/a&gt; system compiled here directly uses the latest official source code for real-time compilation. The development idea of the program comes from the tutorials of authors such as &lt;a href=&#34;https://www.kflyo.com/howto-compile-armbian-for-n1-box&#34;&gt;ebkso&lt;/a&gt;. Thank you for your dedication and sharing, so that we can use the Armbian system in the Amlogic s9xxx TV Boxes.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;kernel&lt;/code&gt; / &lt;code&gt;u-boot&lt;/code&gt; and other resources used by this system are mainly copied from the project of &lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq/openwrt_packit&lt;/a&gt;, Some files are shared by users in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/pulls&#34;&gt;Pull&lt;/a&gt; and &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/issues&#34;&gt;Issues&lt;/a&gt; of &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-openwrt&#34;&gt;amlogic-s9xxx-openwrt&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian&#34;&gt;amlogic-s9xxx-armbian&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/luci-app-amlogic&#34;&gt;luci-app-amlogic&lt;/a&gt; / &lt;a href=&#34;https://github.com/ophub/kernel&#34;&gt;kernel&lt;/a&gt; and other projects. To thank these pioneers and sharers, From now on (This source code repository was created on 2021-09-19), I have recorded them in &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/CONTRIBUTOR.md&#34;&gt;CONTRIBUTOR.md&lt;/a&gt;. Thanks again everyone for giving new life and meaning to the TV Boxes.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/build&#34;&gt;armbian/build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unifreq&#34;&gt;unifreq/kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kernel.org&#34;&gt;kernel.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The amlogic-s9xxx-armbian © OPHUB is licensed under &lt;a href=&#34;https://github.com/ophub/amlogic-s9xxx-armbian/raw/main/LICENSE&#34;&gt;GPL-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wurstmeister/kafka-docker</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/wurstmeister/kafka-docker</id>
    <link href="https://github.com/wurstmeister/kafka-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerfile for Apache Kafka&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/wurstmeister/kafka&#34; title=&#34;Get your own version badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/version/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/wurstmeister/kafka&#34; title=&#34;Get your own image badge on microbadger.com&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/wurstmeister/kafka.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/wurstmeister/kafka-docker&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/wurstmeister/kafka-docker.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;kafka-docker&lt;/h1&gt; &#xA;&lt;p&gt;Dockerfile for &lt;a href=&#34;http://kafka.apache.org/&#34;&gt;Apache Kafka&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The image is available directly from &lt;a href=&#34;https://hub.docker.com/r/wurstmeister/kafka/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tags and releases&lt;/h2&gt; &#xA;&lt;p&gt;All versions of the image are built from the same set of scripts with only minor variations (i.e. certain features are not supported on older versions). The version format mirrors the Kafka format, &lt;code&gt;&amp;lt;scala version&amp;gt;-&amp;lt;kafka version&amp;gt;&lt;/code&gt;. Initially, all images are built with the recommended version of scala documented on &lt;a href=&#34;http://kafka.apache.org/downloads&#34;&gt;http://kafka.apache.org/downloads&lt;/a&gt;. To list all available tags:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -s https://registry.hub.docker.com/v2/repositories/wurstmeister/kafka/tags\?page_size\=1024 | jq -r &#39;.results[].name&#39; | sort -u | egrep &#39;\d.\d{2}-.*&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everytime the image is updated, all tags will be pushed with the latest updates. This should allow for greater consistency across tags, as well as any security updates that have been made to the base image.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Announcements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;04-Jun-2019&lt;/strong&gt; - Update base image to openjdk 212 (&lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/8u212-relnotes-5292913.html&#34;&gt;Release notes&lt;/a&gt;. Please force pull to get these latest updates - including security patches etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Pre-Requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;install docker-compose &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;modify the &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/wurstmeister/kafka-docker/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; to match your docker host IP (Note: Do not use localhost or 127.0.0.1 as the host ip if you want to run multiple brokers.)&lt;/li&gt; &#xA; &lt;li&gt;if you want to customize any Kafka parameters, simply add them as environment variables in &lt;code&gt;docker-compose.yml&lt;/code&gt;, e.g. in order to increase the &lt;code&gt;message.max.bytes&lt;/code&gt; parameter set the environment to &lt;code&gt;KAFKA_MESSAGE_MAX_BYTES: 2000000&lt;/code&gt;. To turn off automatic topic creation set &lt;code&gt;KAFKA_AUTO_CREATE_TOPICS_ENABLE: &#39;false&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kafka&#39;s log4j usage can be customized by adding environment variables prefixed with &lt;code&gt;LOG4J_&lt;/code&gt;. These will be mapped to &lt;code&gt;log4j.properties&lt;/code&gt;. For example: &lt;code&gt;LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER=DEBUG, authorizerAppender&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; There are several &#39;gotchas&#39; with configuring networking. If you are not sure about what the requirements are, please check out the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki/Connectivity&#34;&gt;Connectivity Guide&lt;/a&gt; in the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Start a cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose up -d &lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add more brokers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose scale kafka=3&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Destroy a cluster:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose stop&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;The default &lt;code&gt;docker-compose.yml&lt;/code&gt; should be seen as a starting point. By default each broker will get a new port number and broker id on restart. Depending on your use case this might not be desirable. If you need to use specific ports and broker ids, modify the docker-compose configuration accordingly, e.g. &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/raw/master/docker-compose-single-broker.yml&#34;&gt;docker-compose-single-broker.yml&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose -f docker-compose-single-broker.yml up&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broker IDs&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the broker id in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_BROKER_ID&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;BROKER_ID_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;BROKER_ID_COMMAND: &#34;hostname | awk -F&#39;-&#39; &#39;{print $$2}&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you don&#39;t specify a broker id in your docker-compose file, it will automatically be generated (see &lt;a href=&#34;https://issues.apache.org/jira/browse/KAFKA-1070&#34;&gt;https://issues.apache.org/jira/browse/KAFKA-1070&lt;/a&gt;. This allows scaling up and down. In this case it is recommended to use the &lt;code&gt;--no-recreate&lt;/code&gt; option of docker-compose to ensure that containers are not re-created and thus keep their names and ids.&lt;/p&gt; &#xA;&lt;h2&gt;Automatically create topics&lt;/h2&gt; &#xA;&lt;p&gt;If you want to have kafka-docker automatically create topics in Kafka during creation, a &lt;code&gt;KAFKA_CREATE_TOPICS&lt;/code&gt; environment variable can be added in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example snippet from &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    environment:&#xA;      KAFKA_CREATE_TOPICS: &#34;Topic1:1:3,Topic2:1:1:compact&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Topic 1&lt;/code&gt; will have 1 partition and 3 replicas, &lt;code&gt;Topic 2&lt;/code&gt; will have 1 partition, 1 replica and a &lt;code&gt;cleanup.policy&lt;/code&gt; set to &lt;code&gt;compact&lt;/code&gt;. Also, see FAQ: &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki#topic-compaction-does-not-work&#34;&gt;Topic compaction does not work&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use multi-line YAML or some other delimiter between your topic definitions, override the default &lt;code&gt;,&lt;/code&gt; separator by specifying the &lt;code&gt;KAFKA_CREATE_TOPICS_SEPARATOR&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;KAFKA_CREATE_TOPICS_SEPARATOR: &#34;$$&#39;\n&#39;&#34;&lt;/code&gt; would use a newline to split the topic definitions. Syntax has to follow docker-compose escaping rules, and &lt;a href=&#34;https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html&#34;&gt;ANSI-C&lt;/a&gt; quoting.&lt;/p&gt; &#xA;&lt;h2&gt;Advertised hostname&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the advertised hostname in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;HOSTNAME_COMMAND: &#34;route -n | awk &#39;/UG[ \t]/{print $$2}&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When using commands, make sure you review the &#34;Variable Substitution&#34; section in &lt;a href=&#34;https://docs.docker.com/compose/compose-file/#variable-substitution&#34;&gt;https://docs.docker.com/compose/compose-file/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;KAFKA_ADVERTISED_HOST_NAME&lt;/code&gt; is specified, it takes precedence over &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For AWS deployment, you can use the Metadata service to get the container host&#39;s IP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HOSTNAME_COMMAND=wget -t3 -T2 -qO-  http://169.254.169.254/latest/meta-data/local-ipv4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reference: &lt;a href=&#34;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&#34;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Injecting HOSTNAME_COMMAND into configuration&lt;/h3&gt; &#xA;&lt;p&gt;If you require the value of &lt;code&gt;HOSTNAME_COMMAND&lt;/code&gt; in any of your other &lt;code&gt;KAFKA_XXX&lt;/code&gt; variables, use the &lt;code&gt;_{HOSTNAME_COMMAND}&lt;/code&gt; string in your variable value, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS=SSL://_{HOSTNAME_COMMAND}:9093,PLAINTEXT://9092&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Advertised port&lt;/h2&gt; &#xA;&lt;p&gt;If the required advertised port is not static, it may be necessary to determine this programatically. This can be done with the &lt;code&gt;PORT_COMMAND&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PORT_COMMAND: &#34;docker port $$(hostname) 9092/tcp | cut -d: -f2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be then interpolated in any other &lt;code&gt;KAFKA_XXX&lt;/code&gt; config using the &lt;code&gt;_{PORT_COMMAND}&lt;/code&gt; string, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://1.2.3.4:_{PORT_COMMAND}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Listener Configuration&lt;/h2&gt; &#xA;&lt;p&gt;It may be useful to have the &lt;a href=&#34;https://kafka.apache.org/documentation/&#34;&gt;Kafka Documentation&lt;/a&gt; open, to understand the various broker listener configuration options.&lt;/p&gt; &#xA;&lt;p&gt;Since 0.9.0, Kafka has supported &lt;a href=&#34;https://issues.apache.org/jira/browse/KAFKA-1809&#34;&gt;multiple listener configurations&lt;/a&gt; for brokers to help support different protocols and discriminate between internal and external traffic. Later versions of Kafka have deprecated &lt;code&gt;advertised.host.name&lt;/code&gt; and &lt;code&gt;advertised.port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;advertised.host.name&lt;/code&gt; and &lt;code&gt;advertised.port&lt;/code&gt; still work as expected, but should not be used if configuring the listeners.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;The example environment below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HOSTNAME_COMMAND: curl http://169.254.169.254/latest/meta-data/public-hostname&#xA;KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094&#xA;KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094&#xA;KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT&#xA;KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will result in the following broker config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;advertised.listeners = OUTSIDE://ec2-xx-xx-xxx-xx.us-west-2.compute.amazonaws.com:9094,INSIDE://:9092&#xA;listeners = OUTSIDE://:9094,INSIDE://:9092&#xA;inter.broker.listener.name = INSIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No listeners may share a port number.&lt;/li&gt; &#xA; &lt;li&gt;An advertised.listener must be present by protocol name and port number in the list of listeners.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Broker Rack&lt;/h2&gt; &#xA;&lt;p&gt;You can configure the broker rack affinity in different ways&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;explicitly, using &lt;code&gt;KAFKA_BROKER_RACK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;via a command, using &lt;code&gt;RACK_COMMAND&lt;/code&gt;, e.g. &lt;code&gt;RACK_COMMAND: &#34;curl http://169.254.169.254/latest/meta-data/placement/availability-zone&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In the above example the AWS metadata service is used to put the instance&#39;s availability zone in the &lt;code&gt;broker.rack&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;h2&gt;JMX&lt;/h2&gt; &#xA;&lt;p&gt;For monitoring purposes you may wish to configure JMX. Additional to the standard JMX parameters, problems could arise from the underlying RMI protocol used to connect&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;java.rmi.server.hostname - interface to bind listening port&lt;/li&gt; &#xA; &lt;li&gt;com.sun.management.jmxremote.rmi.port - The port to service RMI requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to connect to a kafka running locally (assumes exposing port 1099)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  KAFKA_JMX_OPTS: &#34;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099&#34;&#xA;  JMX_PORT: 1099&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Jconsole can now connect at &lt;code&gt;jconsole 192.168.99.100:1099&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker Swarm Mode&lt;/h2&gt; &#xA;&lt;p&gt;The listener configuration above is necessary when deploying Kafka in a Docker Swarm using an overlay network. By separating OUTSIDE and INSIDE listeners, a host can communicate with clients outside the overlay network while still benefiting from it from within the swarm.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the multiple-listener configuration, additional best practices for operating Kafka in a Docker Swarm include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &#34;deploy: global&#34; in a compose file to launch one and only one Kafka broker per swarm node.&lt;/li&gt; &#xA; &lt;li&gt;Use compose file version &#39;3.2&#39; (minimum Docker version 16.04) and the &#34;long&#34; port definition with the port in &#34;host&#34; mode instead of the default &#34;ingress&#34; load-balanced port binding. This ensures that outside requests are always routed to the correct broker. For example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ports:&#xA;   - target: 9094&#xA;     published: 9094&#xA;     protocol: tcp&#xA;     mode: host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Older compose files using the short-version of port mapping may encounter Kafka client issues if their connection to individual brokers cannot be guaranteed.&lt;/p&gt; &#xA;&lt;p&gt;See the included sample compose file &lt;code&gt;docker-compose-swarm.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release process&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/wurstmeister/kafka-docker/wiki/ReleaseProcess&#34;&gt;wiki&lt;/a&gt; for information on adding or updating versions to release to Dockerhub.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://wurstmeister.github.io/kafka-docker/&#34;&gt;http://wurstmeister.github.io/kafka-docker/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>theVakhovskeIsTaken/holoiso</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/theVakhovskeIsTaken/holoiso</id>
    <link href="https://github.com/theVakhovskeIsTaken/holoiso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SteamOS 3 (Holo) archiso configuration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/theVakhovskeIsTaken/holoiso/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build ISO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167457908-07be1a60-7e86-4bef-b7f0-6bd19efd8b24.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;HoloISO&lt;/h1&gt; &#xA;&lt;p&gt;SteamOS 3 (Holo) archiso configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Yes, Gabe. SteamOS functions well on a toaster.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project attempts to bring the Steam Deck&#39;s Holo OS into a generic, installable format, and provide a close-to-official SteamOS experience.&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://t.me/HoloISO&#34;&gt;here&lt;/a&gt; to join &lt;strong&gt;HoloISO&lt;/strong&gt; Telegram update channel;&lt;/p&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://steamdeck.community/forums/holoiso.29/&#34;&gt;here&lt;/a&gt; to visit &lt;strong&gt;HoloISO&lt;/strong&gt; discussion on Steam Deck Community forums&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Common Questions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is this official?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;No, but it may as well be 99% of the way there. The code and packages, are straight from Valve, with zero possible edits, and the ISO is being built on the official Steam Deck recovery image, running inside a QEMU instance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The ISO didn&#39;t boot for me, any solution?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Currently, the ISO only boots if flashed using &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;BalenaEtcher&lt;/a&gt;, &lt;a href=&#34;http://wiki.rosalab.ru/en/index.php/ROSA_ImageWriter&#34;&gt;RosaImageWriter&lt;/a&gt;, &lt;a href=&#34;https://getfedora.org/en/workstation/download/&#34;&gt;Fedora Media Writer&lt;/a&gt;, DD with 4MB block size, or &lt;a href=&#34;https://rufus.ie&#34;&gt;Rufus&lt;/a&gt; with DD mode.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Working stuff:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bootup&lt;/li&gt; &#xA; &lt;li&gt;SteamOS OOBE (Steam Deck UI First Boot Experience)&lt;/li&gt; &#xA; &lt;li&gt;Deck UI (separate session)&lt;/li&gt; &#xA; &lt;li&gt;Deck UI (-gamepadui)&lt;/li&gt; &#xA; &lt;li&gt;TDP/FPS limiting&lt;/li&gt; &#xA; &lt;li&gt;Global FSR&lt;/li&gt; &#xA; &lt;li&gt;Shader Pre-Caching&lt;/li&gt; &#xA; &lt;li&gt;Switch to Desktop from plasma/to plasma without user interference.&lt;/li&gt; &#xA; &lt;li&gt;Valve&#39;s exclusive &lt;em&gt;Vapor&lt;/em&gt; appearance for KDE Plasma&lt;/li&gt; &#xA; &lt;li&gt;Steam Deck pacman mirrors&lt;/li&gt; &#xA; &lt;li&gt;Cool-looking neofetch?&lt;/li&gt; &#xA; &lt;li&gt;System updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Known issues:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NVIDIA GPUs are supported after following this procedure:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Only 9xx+ GPUs are supported. Choose your GPU type while installing HoloISO. If you encounter any issues, reboot to recovery mode, type &lt;code&gt;recoveryinit&lt;/code&gt;, connect to network using &lt;code&gt;nmtui&lt;/code&gt; and install required packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Older GPUs won&#39;t be supported until drivers are opensourced OR Until they support atomic KMS, accelerated Xwayland, and Vulkan DMA-BUF extensions, they simply cannot function properly with HoloISO.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel GPUs/iGPUs require a Gamescope and MESA downgrade in order to boot into Steam Deck session.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Choose your GPU type while installing HoloISO. If you encounter any issues, reboot to recovery mode, type &lt;code&gt;recoveryinit&lt;/code&gt;, connect to network using &lt;code&gt;nmtui&lt;/code&gt; and install required packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation process:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequistes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4GB flash drive&lt;/li&gt; &#xA; &lt;li&gt;AMD RX Vega+/APU iGPU; 4xx/5xx, 5xxx/6xxx GPU or Intel UHD 630+ iGPU or NVIDIA GTX 9xx+ iGPU/GPUs (preferably without Optimus [PRIME])&lt;/li&gt; &#xA; &lt;li&gt;UEFI-enabled device&lt;/li&gt; &#xA; &lt;li&gt;Disabled secure boot&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation types:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;barebones&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An OS-only installation, resembles vanilla Arch Linux installation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gameonly*&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Steam Deck UI only (AMD GPU only; no desktop), as said, this doesn&#39;t ship any DE, and only has the Steam Deck UI installed. *&lt;em&gt;&lt;strong&gt;This part is currently under a renovation.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;deckperience&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Full SteamOS 3 experience, Includes proper session switching, KDE Plasma + media apps, and Chromium pre-installed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash the ISO from &lt;a href=&#34;https://github.com/bhaiest/holoiso/releases/latest&#34;&gt;releases&lt;/a&gt; using &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;BalenaEtcher&lt;/a&gt;, &lt;a href=&#34;https://rufus.ie&#34;&gt;Rufus&lt;/a&gt; with DD mode, or by typing &lt;code&gt;sudo dd if=SteamOS.iso of=/dev/sd(your flash drive) bs=4M status=progress oflag=sync&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Boot into ISO&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;holoinstall&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter drive node, starting from, for example, &lt;code&gt;sda&lt;/code&gt; or &lt;code&gt;nvme0n1&lt;/code&gt; when asked&lt;/li&gt; &#xA; &lt;li&gt;Take your favourite hot beverage, and wait &#39;till it installs :3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upon booting, you&#39;ll be greeted with Steam Deck&#39;s OOBE screen, from where you&#39;ll connect to your network, and login to your Steam account, from there, you can exit to KDE Plasma seamlessly by choosing &lt;em&gt;Switch to desktop&lt;/em&gt; in the power menu, &lt;a href=&#34;https://www.youtube.com/watch?v=smfwna2iHho&#34;&gt;like so&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292656-1679e007-4701-4a3c-89ee-2104b5eb12cd.png&#34; alt=&#34;Screenshot_20220508_133916&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292672-8bc9032d-4a21-4528-ab7e-b9dbc25a0664.png&#34; alt=&#34;Screenshot_20220508_133737&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292722-a68806c1-5768-4790-a8e7-108d7c72bb08.png&#34; alt=&#34;Screenshot_20220508_133746&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292731-86fed590-0260-4c5e-ac13-05d284b5fd24.png&#34; alt=&#34;Screenshot_20220508_133822&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292734-90036b5f-2571-438e-8951-8d731cd4ae93.png&#34; alt=&#34;Screenshot_20220508_134038&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/97450182/167292738-a70d266f-814d-4352-8d38-b920ae3f3381.png&#34; alt=&#34;Screenshot_20220508_134051&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notes:&lt;/h2&gt; &#xA;&lt;p&gt;This configuration includes Valve&#39;s pacman.conf repositories, &lt;code&gt;holoinstall&lt;/code&gt; script and &lt;code&gt;holoinstall&lt;/code&gt; post-installation binaries.&lt;/p&gt; &#xA;&lt;p&gt;This configuration builds a &lt;em&gt;releng-based ISO&lt;/em&gt;, which is the default Arch Linux redistribution flavor.&lt;/p&gt; &#xA;&lt;h2&gt;Building the ISO:&lt;/h2&gt; &#xA;&lt;p&gt;Trigger the build by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -Sy archiso&#xA;git clone https://github.com/bhaiest/holoiso/&#xA;sudo mkarchiso -v holoiso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once it ends, your ISO will be available in the &lt;code&gt;out&lt;/code&gt; folder.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kiddin9/OpenWrt_x86-r2s-r4s-N1</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/kiddin9/OpenWrt_x86-r2s-r4s-N1</id>
    <link href="https://github.com/kiddin9/OpenWrt_x86-r2s-r4s-N1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatic unattended weekly builds of the current OpenWrt development master branch for X86/64, NanoPi R2S, NanoPi R4S, NanoPi R2C, Phicomm N1, NanoPi NEO3, 树莓派 4B, DoorNet1, DoorNet2, 香橙派 Orange Pi R1 Plus, 香橙派 Orange Pi R1 Plus LTS, 红米AX6, 小米AX3600, 小米AX9000, 红米AX6S/小米AX3200, 红米AC2100, 小米AC2100, 小米CR6606/TR606(联通版), CR6608/TR608(移动版), CR6609/T…&lt;/p&gt;&lt;hr&gt;&lt;h4&gt;OpenWrt with NGINX for X86/64, NanoPi R2S, NanoPi R4S, NanoPi R2C, Phicomm N1, NanoPi NEO3, 树莓派 4B, DoorNet1, DoorNet2, 香橙派 Orange Pi R1 Plus, 香橙派 Orange Pi R1 Plus LTS, 红米AX6, 小米AX3600, 小米AX9000, 红米AX6S/小米AX3200, 红米AC2100, 小米AC2100, 小米CR6606/TR606(联通版), CR6608/TR608(移动版), CR6609/TR609(电信版), 小米4, 小米 R3G, 小米R3P, 小娱C5, newifi-d2, H1 Box, 贝壳云 P1 , 我家云 lL Pro, x96 Max, 微加云 V-Plus, 章鱼星球 ZYXQ, GT-King, Odroid N2, MXQ Pro+&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kiddin9/OpenWrt_x86-r2s-r4s-N1/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLV2-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kiddin9/OpenWrt_x86-r2s-r4s.svg?style=flat-square&amp;amp;label=Stars&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/kiddin9/OpenWrt_x86-r2s-r4s.svg?style=flat-square&amp;amp;label=Forks&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/issues/new&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Issues-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;Issue Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/actions&#34;&gt;&lt;img src=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/actions/workflows/Openwrt-AutoBuild.yml/badge.svg?sanitize=true&#34; alt=&#34;AutoBuild&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/opwrts&#34; target=&#34;_blank&#34;&gt;Telegram&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. &lt;strong&gt;特色&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Cutting edge,openwrt官方openwrt-22.03分支版本, Kernel 5.15, 与官方最新源码同步.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;原生极致纯净,固件默认只包含基础上网功能, 后台在线选装插件,系统升级不丢失插件和配置.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自建插件仓库囊括了市面上几乎所有开源插件,插件库日更,系统自动更新所有已安装插件.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在线一键定制固件,可在&lt;a href=&#34;https://supes.top&#34;&gt;supes.top&lt;/a&gt;也可在后台系统定制升级菜单中一键定制, 同时支持github云编译和本地一键编译.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台一键OTA更新固件,省去了每次固件升级都需要找固件,下载固件,上传固件等繁琐操作.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台一键设置旁路由,一键开关IPv6.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持在线安装Kmod内核模块.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重构版SSR-PLUS,国内外智能DNS解析,支持DOH,Trojan-Go等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;替换 Uhttpd 为 Nginx, 支持 反向代理; WebDAV等诸多玩法.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;性能,友好度,易用性,插件,以及针对国内特殊环境等的自定义优化, 开箱即用&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自定制清爽Material风格新主题Edge&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. &lt;strong&gt;固件&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;固件生成有3种方式：在线定制化生成、GitHub编译、本地化编译。&lt;/p&gt; &#xA;&lt;p&gt;可根据需要选择任意一种进行固件生成。&lt;/p&gt; &#xA;&lt;h3&gt;2.1 &lt;strong&gt;在线生成&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;通过浏览器访问&lt;a href=&#34;https://supes.top&#34;&gt;https://supes.top&lt;/a&gt;进行固件定制，等待固件生成结束之后直接下载使用即可。&lt;/p&gt; &#xA;&lt;h3&gt;2.2 &lt;strong&gt;GitHub编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;将仓库进行fork&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按需添加相关环境参数REPO_TOKEN、SCKEY、TELEGRAM_CHAT_ID&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Actions页面选择 Repo Dispatcher 点击 Run workflow&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.3 &lt;strong&gt;GitHub结合浏览器插件编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;请在支持油猴的浏览器中安装 &lt;a href=&#34;https://greasyfork.org/scripts/407616-github-actions-trigger/code/Github%20Actions%20Trigger.user.js&#34;&gt;脚本&lt;/a&gt; ,仓库右上角会出现 x86_64 Actions,K2P Actions等按钮,点击对应按钮即可.更多玩法 &lt;a href=&#34;https://github.com/tete1030/github-repo-dispatcher&#34;&gt;repo-dispatcher&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.4 &lt;strong&gt;本地化编译&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;注意：&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;不&lt;/strong&gt;要用 &lt;strong&gt;root&lt;/strong&gt; 用户 git 和编译！！！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;国内用户编译前请准备好梯子,使用大陆白名单或全局模式&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;请使用Ubuntu 64bit，推荐 Ubuntu 18 或 Ubuntu 20&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;首次编译:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -S openwrt&#xA;bash -c &#34;$(curl -fsSL https://git.io/opbuild.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;二次编译:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;screen -S openwrt&#xA;bash -c &#34;$(curl -fsSL https://git.io/rebuild.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3. &lt;strong&gt;使用&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;3.1 &lt;strong&gt;后台&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;登录地址 op/ 或 10.0.0.1 (若后台无法打开，请尝试插拔交换wan、lan网线顺序。)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认用户 root&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认密码 root&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.2 &lt;strong&gt;快捷访问&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;部分服务需要先自行在软件包中安装并启用，可自行在 /etc/nginx/conf.d/shortcuts.conf 中调整和添加更多快捷访问。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;op/ 可打开 OpenWRT后台 即 lan ip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ql/ 可打开 青龙后台 即 lan ip:5700&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;adg/ 可打开 AdGuardHome管理后台 即 lan ip:3000&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pve/ 可打开 Proxmox VE虚拟机管理 默认为 10.0.0.10:8006&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;by/ 可打开 Bypass插件页面 即 ip/luci/admin/services/bypass&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;pk/ 可打开 Packages插件管理页面 即 ip/luci/admin/system/opkg&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ag/ 可打开 Aria2 Web面板 即 ip/ariang&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ug/ 可打开 固件在线更新页面 即 ip/luci/admin/services/gpsysupgrade&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. &lt;strong&gt;注意事项&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;第一次使用请采用全新安装,避免出现升级失败以及其他一些可能的Bug.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;云编译需要 &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;在此&lt;/a&gt; 创建个token,然后在此仓库Settings-&amp;gt;Secrets中添加个名字为REPO_TOKEN的Secret,填入token值,否者无法触发编译。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中分别添加 PPPOE_USERNAME, PPPOE_PASSWD 可设置默认拨号账号密码.有 &lt;a href=&#34;https://github.com/kiddin9/OpenWrt_x86-r2s-r4s/issues/23&#34;&gt;安全隐患&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中添加 SCKEY 可通过&lt;a href=&#34;http://sc.ftqq.com&#34;&gt;Server酱&lt;/a&gt; 推送编译结果到微信。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在仓库Settings-&amp;gt;Secrets中添加 TELEGRAM_CHAT_ID, TELEGRAM_TOKEN 可推送编译结果到Telegram Bot. &lt;a href=&#34;https://longnight.github.io/2018/12/12/Telegram-Bot-notifications&#34;&gt;教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DIY云编译教程参考: &lt;a href=&#34;https://p3terx.com/archives/build-openwrt-with-github-actions.html&#34;&gt;Read the details in my blog (in Chinese) | 中文教程&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;默认插件包含: Opkg 软件包管理、Bypass 智能过墙、Samba4 文件共享(x86)、UPNP 自动端口转发、Turbo ACC 网络加速。 其他插件请自行在 后台-&amp;gt;软件包 中安装,系统升级不会丢失插件.每次系统升级完成连接网络后,会自动安装所有已自选安装的插件。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. &lt;strong&gt;系统截图展示&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/1.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/3.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://github.com/kiddin9/luci-theme-edge/raw/master/Screenshots/8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For English&lt;/p&gt; &#xA;&lt;p&gt;Build OpenWrt using GitHub Actions&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up for &lt;a href=&#34;https://github.com/features/actions/signup&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fork &lt;a href=&#34;https://github.com/kiddin9/OpenWrt&#34;&gt;this GitHub repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;click the &lt;code&gt;Star&lt;/code&gt; button, and the build will starts automatically.Progress can be viewed on the Actions page.&lt;/li&gt; &#xA; &lt;li&gt;When the build is complete, click the &lt;code&gt;Artifacts&lt;/code&gt; button in the upper right corner of the Actions page to download the binaries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/openwrt&#34;&gt;OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;Lean&#39;s OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P3TERX/Actions-OpenWrt/raw/master/LICENSE&#34;&gt;P3TERX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openwrt/asu&#34;&gt;aparcar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unifreq/openwrt_packit&#34;&gt;unifreq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Boos4721/openwrt&#34;&gt;Boos4721&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>WSA-Community/WSAGAScript</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/WSA-Community/WSAGAScript</id>
    <link href="https://github.com/WSA-Community/WSAGAScript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scripts to install Google Apps into a WSA image. Plus optional root&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/WSA-Community/WSAGAScript&#34;&gt;WSA GApps Script&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#required-warnings&#34;&gt;Required Warnings&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#youtube-tutorial&#34;&gt;YouTube Tutorial&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#installation-procedure&#34;&gt;Installation procedure&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#uninstallation-procedure&#34;&gt;Uninstallation procedure&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/WSA-Community/WSAGAScript/main/#gaining-root-access&#34;&gt;Gaining Root Access&lt;/a&gt; • &lt;a href=&#34;https://t.me/WSA_Community&#34;&gt;Telegram Group&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Required Warnings&lt;/h1&gt; &#xA;&lt;h2&gt;This project is Work-In-Progress&lt;/h2&gt; &#xA;&lt;p&gt;This project is being updated without schedule (though frequently). This README might not be completely clear right now, it will be fixed ASAP.&lt;/p&gt; &#xA;&lt;p&gt;As for potential questions - please open Discussions instead of Issues.&lt;br&gt; Issues are needed in cases if you have an &lt;strong&gt;actual&lt;/strong&gt; issue that &lt;strong&gt;prevents&lt;/strong&gt; you from &lt;strong&gt;using&lt;/strong&gt; this project.&lt;/p&gt; &#xA;&lt;h2&gt;Legal Warnings&lt;/h2&gt; &#xA;&lt;p&gt;By using the tools (scripts, but not limited to) provided by this project, you agree with the terms of &lt;a href=&#34;https://github.com/WSA-Community/WSAGAScript/raw/main/LICENSE&#34;&gt;Unlicense License&lt;/a&gt;, which states that &#34;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;To end user this serves as a warning, though we currently don&#39;t have any explicit confirmations - such way of installing Google Services and Google Play Store may potentially be in a legal gray area.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright notices&lt;/h2&gt; &#xA;&lt;p&gt;Any product or trademark referenced in this document (or project as whole) belongs to their respective owners. No copyright infringement is intended.&lt;/p&gt; &#xA;&lt;h1&gt;YouTube Tutorial&lt;/h1&gt; &#xA;&lt;p&gt;As a temporary measure and additional information (especially if README remains unclear, &lt;a href=&#34;https://github.com/ADeltaX&#34;&gt;@ADeltaX&lt;/a&gt; provides a video-tutorial hosted on YouTube&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=rIt00xDp0tM&#34; title=&#34;How to install Google Apps (Play Store) on WSA (Windows Subsystem Android)&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/rIt00xDp0tM/0.jpg&#34; alt=&#34;How to install Google Apps (Play Store) on WSA (Windows Subsystem Android)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Click on the image to see the video&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation procedure&lt;/h1&gt; &#xA;&lt;h2&gt;Install Windows Subsystem for Linux (Version 2)&lt;/h2&gt; &#xA;&lt;h3&gt;Q &amp;amp; A for WSL Installation&lt;/h3&gt; &#xA;&lt;p&gt;If you have never used WSL, please do check the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must be running Windows 10 version 2004 and higher (Build 19041 and higher) or Windows 11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Fastest way to check your build version is to run &lt;code&gt;winver&lt;/code&gt; command in Windows Search or via &#34;Run...&#34; (Right-click the Start button to access &#34;Run...&#34;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why do I need that &#34;WSL&#34;?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Because of the way Android as an operating system is built - specific tools to do the modifications that we are doing are only available on Linux-based OSes. The fastest way to get access to these tools is via WSL.&lt;/p&gt; &#xA;&lt;h3&gt;How to install WSL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open Windows PowerShell as an Administrator&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;wsl --install&lt;/code&gt;: this will install Ubuntu 20.04 LTS in WSL (Version 2) and all necessary components required to run as it is default (this is recommended)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your PC may restart several times when downloading and installing required components. After that - follow installation wizard instructions to proceed. If you have any questions, official documentation from Microsoft for WSL will help you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check with &lt;code&gt;wsl --list --verbose&lt;/code&gt; to be sure that you have a Linux Distro installed with WSL2 version. If for some reason you have receieved WSL1 kernel (or you have trouble running this command in general) - follow instructions in the section below to perform conversion.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;Microsoft Docs: Installing WSL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/setup/environment&#34;&gt;Microsoft Docs: Set up and best practices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to convert WSL1 to WSL2 (and manual installation)&lt;/h3&gt; &#xA;&lt;p&gt;If you have trouble installing WSL2 with &lt;code&gt;wsl --install&lt;/code&gt; in general - follow this instruction from Microsoft.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-manual&#34;&gt;Microsoft Docs: Manual installation steps for older versions of WSL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have already used WSL, have trouble installing with &lt;code&gt;wsl --install&lt;/code&gt; or for some reason have received a WSL1 version installation, this section is for you.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download WSL2 kernel for manual installation. Use the Microsoft Docs link above (Manual Installation) and check Step 4 to receive the kernel package.&lt;/li&gt; &#xA; &lt;li&gt;Open Windows PowerShell as Administrator and run: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsl --shutdown&lt;/code&gt; to stop all WSL related processes (if any are running).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the kernel package from the step above.&lt;/li&gt; &#xA; &lt;li&gt;Return to Windows PowerShell and run: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsl --list --verbose&lt;/code&gt; to get your installed distribution name. In case of Ubuntu, it most likely will look like &lt;code&gt;Ubuntu-20.04&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsl --set-version &amp;lt;distribution name&amp;gt; 2&lt;/code&gt;, replace &#xA;    &lt;distribution name&gt;&#xA;      with the one that you have.&#xA;    &lt;/distribution&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Optional: if you would like to automatically install only WSL2 version builds in future. &lt;code&gt;wsl --set-default-version 2&lt;/code&gt;. To be sure about the difference, check &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/compare-versions&#34;&gt;Microsoft Docs: WSL - Compare versions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install unzip, lzip&lt;/h2&gt; &#xA;&lt;p&gt;For now, we are assuming that you have went with default installation (Ubuntu), terminal commands will be provided for Ubuntu. Commands provided for the most part will work for other Linux Distributions but there may be some that use other package managers. Check how to correctly install applications for your chosen distribution on the internet.&lt;/p&gt; &#xA;&lt;p&gt;Run following in the &lt;strong&gt;WSL Terminal&lt;/strong&gt; (If you are unsure what is WSL Terminal, refer to the video, Microsoft Docs, or search Ubuntu in your start menu to be sure):&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention!&lt;/strong&gt; For new users who have never used Linux Terminals - when you are being asked for your password (which you&#39;ve set up when installed WSL) - it will &lt;strong&gt;NOT&lt;/strong&gt; be displayed in the terminal as part of security measures. You should enter it blindly and then press enter. If password was entered incorrectly system will give you two more attempts, after which you will need to run the command again and try entering password again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install unzip lzip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have checked availability of updates and requested installation of two packages which are required for execution of scripts provided by this project. They may be already present at your installation, but it is better to check anyway.&lt;/p&gt; &#xA;&lt;h2&gt;Prepare folder structure&lt;/h2&gt; &#xA;&lt;p&gt;For the sake of simplicity, create a folder in the root of C Drive, so you will have &lt;code&gt;C:\WSA\&lt;/code&gt;. You may use other location if you would like, be sure to adjust commands below for new location.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention!&lt;/strong&gt; The folder where you will place the files which we will be downloading is going to become an installation folder. &lt;strong&gt;DO NOT&lt;/strong&gt; delete that folder!&lt;br&gt; &lt;strong&gt;Attention!&lt;/strong&gt; At the time of last update for this README, attempt to run scripts if they are located in path that contains spaces (like &#34;Zulu Storage&#34; in &lt;code&gt;D:\Zulu Storage\WSA&lt;/code&gt;) will result in an error. Be sure to use paths with no spaces as long as fix have not been implemented.&lt;/p&gt; &#xA;&lt;p&gt;Hint: You can also open any folder (even those that are located within Linux WSL Filesystem, by typing &lt;code&gt;explorer.exe .&lt;/code&gt; (Yes, with the dot) in the WSL Terminal, to move files around.&lt;/p&gt; &#xA;&lt;h2&gt;Download Windows Subsystem for Android™️ Installation Package&lt;/h2&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;As we need to modify installation files, we cannot download WSA from the Microsoft Store. To download it directly we will use this &lt;a href=&#34;https://store.rg-adguard.net/&#34;&gt;service&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ProductID: 9P3395VX91NR&lt;/li&gt; &#xA; &lt;li&gt;Ring: Fast&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Click the checkmark, and locate file which has size of approx. ~1.3GB (usually at the bottom of the page) and has &lt;code&gt;.msixbundle&lt;/code&gt; extension.&lt;/p&gt; &#xA;&lt;p&gt;Click the filename to begin downloading (or copy the download link). You may be warned by your web-browser that &#34;The file cannot be downloaded securely&#34;. Disregard the warning and force the download (use buttons like &#34;Keep anyway&#34; or similar, depending on your web-browser)&lt;/p&gt; &#xA;&lt;p&gt;Save the file at our prepared directory &lt;code&gt;C:\WSA\&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extract&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download 7zip or a similar archival program and use it to extract downloaded file. Do not mind that this file does not bear any archival extensions (like .zip).&lt;/li&gt; &#xA; &lt;li&gt;After extraction open &lt;code&gt;C:\WSA\MicrosoftCorporationII.WindowsSubsystemForAndroid_versionnumber_neutral___identifier\&lt;/code&gt;. This folder will contain a lot of &lt;code&gt;.msix&lt;/code&gt; files, use &#34;Sort by size&#34; to locate two biggest files.&lt;/li&gt; &#xA; &lt;li&gt;Extract the one that is valid for your architecture, like this one &lt;code&gt;WsaPackage_1.8.32822.0_x64_Release-Nightly.msix&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open the extracted folder&lt;/li&gt; &#xA; &lt;li&gt;Locate and delete files &lt;code&gt;AppxBlockMap.xml&lt;/code&gt;, &lt;code&gt;AppxSignature.p7x&lt;/code&gt; and &lt;code&gt;\[Content_Types\].xml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Locate and delete &lt;code&gt;AppxMetadata&lt;/code&gt; folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do not close this folder - we will return here to collect *.img files.&lt;/p&gt; &#xA;&lt;h2&gt;Download &#34;GApps&#34; via OpenGApps Project&lt;/h2&gt; &#xA;&lt;p&gt;To install Play Store, we need to get it from somewhere. Use &lt;a href=&#34;https://opengapps.org/&#34;&gt;OpenGApps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Platform: x86_64 if you are running Windows on a traditional laptop/PC, otherwise choose ARM64&lt;/li&gt; &#xA; &lt;li&gt;Android: 11.0&lt;/li&gt; &#xA; &lt;li&gt;Variant: Pico (at the time of writing this README, only minimal functionality with Pico variant have been confirmed working).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the time being save the .zip file at &lt;code&gt;C:\WSA\gapps-zip-file-name.zip&lt;/code&gt;. Do &lt;strong&gt;not&lt;/strong&gt; extract it.&lt;/p&gt; &#xA;&lt;h2&gt;Clone this repository and populate the directories&lt;/h2&gt; &#xA;&lt;p&gt;As we have used &lt;code&gt;C:\WSA&lt;/code&gt;, you will be able to use Windows Explorer to move files around.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Reminder: commands provided are for Ubuntu&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention!&lt;/strong&gt; To be sure that you can access your Windows filesystem from inside of WSL, you can run &lt;code&gt;cd FolderName&lt;/code&gt; to change to another directory and &lt;code&gt;ls&lt;/code&gt; to list what files and folders you have there. Typically, Windows Filesystem is available by &#34;/mnt/$DriveLetter/&#34;, so &lt;code&gt;/mnt/c/Users&lt;/code&gt; will be your Windows &lt;code&gt;C:\Users&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /mnt/c/WSA&#xA;git clone https://github.com/WSA-Community/WSAGAScript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wait for the command to finish running.&lt;/p&gt; &#xA;&lt;p&gt;At the &lt;strong&gt;Extract&lt;/strong&gt; step (in Download Windows Subsystem for Android™️ Installation Package) of this Guide we have got a folder that contains four *.img files which are product, system, system_ext and vendor. Move those files into &lt;code&gt;C:\WSA\WSAGAScript\#IMAGES&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also have &lt;code&gt;C:\WSA\gapps-zip-file-name.zip&lt;/code&gt;. Copy this .zip file into &lt;code&gt;C:\WSA\WSAGAScript\#GAPPS&lt;/code&gt;. Do not &lt;strong&gt;extract&lt;/strong&gt; it, just move the file.&lt;/p&gt; &#xA;&lt;h2&gt;Final preparations&lt;/h2&gt; &#xA;&lt;h3&gt;Change architecture&lt;/h3&gt; &#xA;&lt;p&gt;If you are using this project on a device with ARM architecture (e.g., Qualcomm Snapdragon), please edit &lt;code&gt;VARIABLES.sh&lt;/code&gt; and set the correct architecture. Hint is in the file.&lt;/p&gt; &#xA;&lt;h3&gt;Set executable permissions for the scripts&lt;/h3&gt; &#xA;&lt;p&gt;You should still be in the same directory within the WSL Terminal, if not use &lt;code&gt;cd /mnt/c/WSA/WSAGAScript&lt;/code&gt; to get back. Set executable permissions for the scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x *.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that your scripts are executable by running &lt;code&gt;ls -l&lt;/code&gt; and checking that you have &lt;code&gt;-rwxrwxrwx&lt;/code&gt; at the start of lines that contain files: &lt;code&gt;VARIABLES.sh&lt;/code&gt;, &lt;code&gt;apply.sh&lt;/code&gt;, &lt;code&gt;extend_and_mount_images.sh&lt;/code&gt;, &lt;code&gt;extract_gapps_pico.sh&lt;/code&gt;, &lt;code&gt;unmount_images.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running the scripts&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you&#39;re in the same directory as in the step before, the run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./extract_gapps_pico.sh&#xA;sudo ./extend_and_mount_images.sh&#xA;sudo ./apply.sh&#xA;sudo ./unmount_images.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copy the edited images&lt;/h2&gt; &#xA;&lt;p&gt;After successful execution, you can now copy edited images from &lt;code&gt;C:\WSA\WSAGAScript\#IMAGES&lt;/code&gt; back to &lt;code&gt;C:\WSA\MicrosoftCorporationII.WindowsSubsystemForAndroid_1.8.32822.0_neutral___8wekyb3d8bbwe\WsaPackage_1.8.32822.0_x64_Release-Nightly&lt;/code&gt; (example, the folder from where you have taken the images).&lt;/p&gt; &#xA;&lt;h2&gt;Registering the edited Windows Subsystem for Android™️ Installation Package&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Windows Search to find &#34;Developer Settings&#34;, when PC Settings app opens, enable &#34;Developer Mode&#34; on that page.&lt;/li&gt; &#xA; &lt;li&gt;Uninstall any other installed versions of WSA (if you had any, uninstall exactly the main WSA app, all Android apps that have been added to Start Menu will be removed automatically)&lt;/li&gt; &#xA; &lt;li&gt;Open Windows PowerShell as Administrator and run &lt;code&gt;Add-AppxPackage -Register path-to-extracted-msix\AppxManifest.xml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Where &lt;code&gt;path-to-extracted-msix&lt;/code&gt;, use path from &#34;Copy the edited images&#34; section (right above) as example.&lt;/p&gt; &#xA;&lt;p&gt;WSA will install with GApps, &lt;strong&gt;make sure to sign in to Play Store and install &#34;Android System WebView&#34;&lt;/strong&gt; or most apps will crash without that component.&lt;/p&gt; &#xA;&lt;h1&gt;Uninstallation procedure&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Locate Windows Subsystem for Android™️ in your Start Menu, right-click, uninstall. This will uninstall Android and all Android Apps will vanish from Start as they are just shortcuts wired in from the WSA. You don&#39;t need to uninstall all Android Apps one-by-one beforehand.&lt;/li&gt; &#xA; &lt;li&gt;Locate the directory where you have placed the files (in the example of this README it would be &lt;code&gt;C:\WSA&lt;/code&gt;) - remove it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Done.&lt;/p&gt; &#xA;&lt;h1&gt;Gaining Root Access&lt;/h1&gt; &#xA;&lt;p&gt;You can get root access by replacing the kernel. (This step is no longer required to sign in GApps.)&lt;/p&gt; &#xA;&lt;h2&gt;(ADB SHELL ROOT WITH su)&lt;/h2&gt; &#xA;&lt;p&gt;Copy the kernel file from this repo (in &lt;code&gt;misc&lt;/code&gt; folder) and replace the kernel file inside the &lt;code&gt;Tools&lt;/code&gt; folder of your extracted msix (make sure WSA is not running, use Stop button inside WSA Settings, and close settings).&lt;/p&gt; &#xA;&lt;p&gt;Kernel files inside &lt;code&gt;misc&lt;/code&gt; are named for their respective architectures, do not forget to rename the file you took to &lt;code&gt;kernel&lt;/code&gt; before placing it back into &lt;code&gt;Tools&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This will allow you to use &lt;code&gt;su&lt;/code&gt; inside the &lt;code&gt;adb shell&lt;/code&gt;. Enter into the &lt;code&gt;adb shell&lt;/code&gt; and run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;su&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You are now root.&lt;/p&gt; &#xA;&lt;h2&gt;Kernel source&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WSA-Community/WSA-Linux-Kernel&#34;&gt;WSA-Community/WSA-Linux-Kernel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Currently known issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WSA-Community/WSAGAScript/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>raycast/script-commands</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/raycast/script-commands</id>
    <link href="https://github.com/raycast/script-commands" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script Commands let you tailor Raycast to your needs. Think of them as little productivity boosts throughout your day.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Raycast Logo&#34; src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/logo.png&#34; height=&#34;240&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/commands&#34;&gt; &lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/badge/dynamic/json?style=flat&amp;amp;color=DF6D66&amp;amp;label=Script%20Commands&amp;amp;query=$.totalScriptCommands&amp;amp;url=https:%2F%2Fraw.githubusercontent.com%2Fraycast%2Fscript-commands%2Fmaster%2Fcommands%2Fextensions.json&amp;amp;logo=data:image%2Fpng%3Bbase64,iVBORw0KGgoAAAANSUhEUgAAAFgAAABYCAIAAAD%2B96djAAAIC0lEQVR4nOybW2zb1hmADynqLsuWRFLOBVmTpqkVy5LlpkgfDGRdnSvcdSiKIUWHosO8lwDtw4Bge1pRYMAw9KXAgAxYMiTNGjRZt%2B5plxQIkCzpNjduZMmJnMRpt7WR7NgSJYqULFISNUQ8pikpKVLpkOwDP%2BQhUajj40%2F%2Ff3j%2Bn0fEY1sfByYA4EZP4JuCKQJiioCYIiCmCIgpAmKKgJgiIKYIiCkCYoqAmCIgpgiIKQJiioCYIiDGi9jidIQ8bqNnYbSIkNv9h7HY%2B7HRXf39xs7ESBFbnc5To5Gg3d5vtf4uMhLu8xg4GSNF7BroJ202%2Be9eK3EmNvr0gGFxYRnw%2BY362SmeL1Rrzwb8AMMAAHYc30%2BSl3JMtlrVfzJGigAAJDguXRH2kQHowmJ5Phi8kmeWRVHnmegt4gmXa7vLlRYE5ZUUz%2BertT0BPwZd4JNBejpfWFJdowO6itjssJ8bix3euGGGZdOV9d8zwXFtOXKQoi4yuayoX47oJ2Kzw%2FHuaHSz00ng%2BH6K%2BpjJ31PFf4Lj%2BHp93O9T4mKCJC8zTE6v9UI%2FEc8M9B%2FeuNGy9plPBulrrXERLxbvVip7SVJ24SGIFwaDuuWIfiI%2BK68u8KVDNIUpLmi6LUfm%2BVJnjuizduq6RnxWLmcqwgQZkF0QOH6Aoq51rBeda%2BelnObrhbYiQm73bt%2FAQqmsvJLi%2BYVSaS9Fyjlia8bFbLH4ZaWiXJPgOLWvtdgpZrTMEQ1FbHU634tFX9wwmCxy%2F11dBQAMEMSugX6x0ahJjRFvn3wZgeOHaGpREAI22xanU%2F7D1%2Bsei2W7GxZjDovlgMY5gml0LCDkcZ%2BKRmi7HQAgStKRuRsXcrlxv%2B%2F3o9GuxyzWalPJuasFFulMIVrVGttcrsBaHWHD8Z9sewzreUwvQZwYCYfcmtTsWon4y%2FLKVGJOlCQAwE2OfyWeaKAY1mu1nh2LaVGnalh9XmSYI3M3Uhz3cny2UKuhGlauU2NeL6oBZVCK2Oyw7yNJ9SsXcrnJq58itCDjJYhT0cgQ0r4WMhHyDvrX4Z37qRYXSDJCZjpfkBpwPK%2BVOBmN7HC7UA2ORsQTLtefnoptc7lsOH4sPPzShkEkw7ZxbnHx6PxNxcWg3f7BU2OocgSNCJ%2FV6iUIOCKG%2FWroyYOtcYGKD5fuvXX7DlDiopkjSNZONCI%2BYdnXEklubS3AMeyd4Z0auTidTr95%2B446R87ERnvvgyNbI6YL7A%2FiCcWFDcdf3rQR1eBtnE6nfzp%2FS1LFRe998O5FbHU6v9%2B6FiQ57sfJuUq93suEHpE%2FLi39YmE9R3rvg3cpIuRxnx0b%2FeXQk69u2qR%2BfbpwP0d41PdLGWUZkjl59wE50nUfvJuia4vDcSY2GrTbMQx7NuBPV4QUzyv%2Fm64I11h2kqYzgvDnpXstb3Q6Xxzs%2FobyzMBAosh90VqnouqDdxMRbovFga%2B9EcPeDj0gLqY0yBGHxXI8Et7d%2BpmfTqePzt9ScsSK457WwHlEuomIbLU6w7IHaMou68CwPQF%2FoVpLcJxyzZeVyr8LbLnVRY8R8bBejtIHFyTp9RupK%2Fl8FyN32Y%2FICMIVhpmkabsFb6q4nyN8vR4vFpVryh0R0bsIpZfT2QdnxOq76fQ%2FmG4s9NSYWRbFT1l2P0XaLRbQlDHu992tVOb50sPegkSEHBedffAkx6nbXF%2BXnvYRV1n2cHy2qNpHvR0aalsvEPL35RW5rgcA9BHEe7HobnTPSnvdUM3zpVfis8Xquou3dmzXyMVH2ewb11PK%2FbKvub9G5QLBzvI6x7%2BWSCpxATDszR3bX0KRAp2cz2bVe0r5lolkZGQ9yyGP%2B2Q0MthsUgIApEbj57cWzmQy6msom23c7%2Bv6R8wUWHkVOEiR7wzvXK3Xp5JzM2yx57kDxM3bHW7XB2NjXiu8jV9mmFdnk6gGb%2BMQRS2LAioLiDtUt0vllhxBhBXDjkfCzwUC6hf%2FurKC0AL6nmW8WFSvnb1jxbDfjAxPkOSxkeHvBDR8FoW%2BeXud4w9fi7OInmIfCw8%2F1%2ByD2nD8t5GR7wVpJMN2okkXe75UmkrOIcmRs5lFZe9QlSROsxpfqyddAADaZjvyrS191vUS6JM8e25xUX2NlyB%2B9vg2eZ8uc345%2B1E2q77m237%2FiehIVZJ%2BlJz7Z76g0Ww1FAEAeLq%2F%2F0Qk7LVa5X9KjcbR%2BZsfttbm4z7f8UjYIe%2FTm88H37iROr%2FS4uK7QbpUq1%2FI5bSbqrZPwzOCcIlhng8G5W0PhmF7SbKtTv2iUrlfy1KUrXmNBcMO0VRGaOlx3CqV%2FtN8jKwdmp%2BPyIrVzjo13%2BpC6eUQa74myMBCqXSnXNZ0bmr0OCiyLIrThcLB1v5FpqOvNXO%2FlqXWY4ciPy%2BX1WcrNEWnEzNLgnAxl5sgSbl9JH%2FmXK02W2yJi4%2BZ%2FGSQll3wtdr7mYymh0PU6Hd0KCtWLzPMC8GgkiN7%2FO05ck8U5RypNRo%2FTCTR7h2%2FGl3PUOWq1c4cKXSsFzMs%2B7eVlX9pcyDkYeh98nbpQT2%2Bzj74%2F1a77zV1hwFnsZdF8VIuNxmkHWs9vn1koC1H9MeYQ%2BkP7IMzYjVpnAvDvq8xw7bUqaIkfb6q366hEyO%2FpqD0wSUAXr%2Be6roTjwRta41HIeRxewhCo0ODj043T8fQ8hXPQfTE%2BK87fkMwRUBMERBTBMQUATFFQEwREFMExBQBMUVATBEQUwTEFAExRUBMERBTBOT%2FAQAA%2F%2F98wKt7wQJ9rAAAAABJRU5ErkJggg%3D%3D&amp;amp;labelColor=202123&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://twitter.com/raycastapp&#34;&gt; &lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/raycastapp?style=flat&amp;amp;color=5C9BA1&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Raycast Script Commands&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raycast.com/&#34;&gt;Raycast&lt;/a&gt; lets you control your tools with a few keystrokes and installing script commands makes it possible to execute commands from anywhere on your desktop. They are a great way to speed up every-day tasks such as converting data, opening bookmarks or triggering dev workflows. This repository contains some example scripts as well as links to our community commands and documentation to write your own ones.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;✨ Looking to build richer extensions?&lt;/strong&gt; Check out the Extensions API &lt;a href=&#34;https://github.com/raycast/extensions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;🚨 For anything that is not related to script commands, please &lt;a href=&#34;mailto:feedback@raycast.com&#34;&gt;send us an email&lt;/a&gt;, use the feedback command within Raycast, or join the &lt;a href=&#34;https://www.raycast.com/community&#34;&gt;Slack community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/screenshots/script-commands-readme-header.png&#34; alt=&#34;Script Command Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Install Script Commands from this repository&lt;/h2&gt; &#xA;&lt;p&gt;To install new commands, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose a script from the &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/commands#apps&#34;&gt;community repo&lt;/a&gt; and save it into a new directory.&lt;/p&gt; &lt;p&gt;Scripts containing the word &lt;code&gt;.template.&lt;/code&gt; in the filename require some values to be set (check &lt;a href=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/#troubleshooting-and-faqs&#34;&gt;the troubleshouting section&lt;/a&gt; for more information).&lt;/p&gt; &lt;p&gt;Alternatively, instead of creating a new directory you can reuse the repo&#39;s &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/_enabled-commands&#34;&gt;&lt;code&gt;_enable-commands&lt;/code&gt; folder&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the Extensions tab in the Raycast preferences&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the plus button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;code&gt;Add Script Directory&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select directories containing your Script Commands&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;💡 Hint:&lt;/strong&gt; We recommend that you don&#39;t directly load the community script directories into Raycast to avoid potential restructuring and new script commands suddenly appearing in Raycast.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/screenshots/add-directory.png&#34; alt=&#34;Add directory&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Create your own Script Commands&lt;/h2&gt; &#xA;&lt;p&gt;To write your own custom Script Commands, go over the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;Create Script Command&lt;/code&gt; functionality in Raycast&lt;/li&gt; &#xA; &lt;li&gt;Write and edit your script using your favourite code editor&lt;/li&gt; &#xA; &lt;li&gt;Run your Script Command from the Raycast root search&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;💡 Hint:&lt;/strong&gt; If you choose to write your script in &lt;code&gt;Bash&lt;/code&gt;, we highly recommend using the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=timonwong.shellcheck&#34;&gt;Shellcheck&lt;/a&gt; linter as this will ensure smooth running of your script. All scripts uploaded to GitHub will need to have been run through ShellCheck.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/screenshots/Create-Script-Command.png&#34; alt=&#34;Create Script Command&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Metadata&lt;/h3&gt; &#xA;&lt;p&gt;These parameters are available for you to customize your Script Command in Raycast. For practical examples of how these should be used, as well as best practices and supported languages, please browse our templates and community-built scripts.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;App Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;schemaVersion&lt;/td&gt; &#xA;   &lt;td&gt;Schema version to prepare for future changes in the API. Currently there is only version 1 available.&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;Display name of the Script Command that is shown as title in the root search.&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mode&lt;/td&gt; &#xA;   &lt;td&gt;Specifies how the script is executed and how the output is presented. &lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/documentation/OUTPUTMODES.md&#34;&gt;Details of the options for this parameter can be viewed here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;packageName&lt;/td&gt; &#xA;   &lt;td&gt;Display name of the package that is shown as subtitle in the root search. When not provided, the name will be inferred from the script directory name.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;icon&lt;/td&gt; &#xA;   &lt;td&gt;Icon that is displayed in the root search. Can be an emoji, a file path (relative or full) or a remote URL (only https). Supported formats for images are PNG and JPEG. Please make sure to use small icons, recommended size - 64px.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iconDark&lt;/td&gt; &#xA;   &lt;td&gt;Same as &lt;code&gt;icon&lt;/code&gt;, but for dark theme. If not specified, then &lt;code&gt;icon&lt;/code&gt; will be used in both themes.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;1.3.0+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;currentDirectoryPath&lt;/td&gt; &#xA;   &lt;td&gt;Path from which the script is executed. Default is the path of the script.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;needsConfirmation&lt;/td&gt; &#xA;   &lt;td&gt;Specify &lt;code&gt;true&lt;/code&gt; if you would like to show confirmation alert dialog before running the script. Can be helpful with destructive scripts like &#34;Quit All Apps&#34; or &#34;Empty Trash&#34;. Default value is &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.30+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;refreshTime&lt;/td&gt; &#xA;   &lt;td&gt;Specify a refresh interval for inline mode scripts in seconds, minutes, hours or days. Examples: 10s, 1m, 12h, 1d. Note that the actual times can vary depending on how the OS prioritises scheduled work. The minimum refresh interval is 10 seconds. If you have more than 10 inline commands, only the first 10 will be refreshed automatically; the rest have to be manually refreshed by navigating to them and pressing &lt;code&gt;return&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.31+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;argument[1...3]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/documentation/ARGUMENTS.md&#34;&gt;Custom arguments, see Passing Arguments page&lt;/a&gt; for detail of how to use this field&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;1.2.0+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;author&lt;/td&gt; &#xA;   &lt;td&gt;Define an author name to be part of the script commands documentation&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;authorURL&lt;/td&gt; &#xA;   &lt;td&gt;Author social media, website, email or anything to help the users to get in touch&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description&lt;/td&gt; &#xA;   &lt;td&gt;A brief description about the script command to be presented in the documentation&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Output Mode&lt;/h3&gt; &#xA;&lt;p&gt;You can use the standard output to present messages in Raycast. Depending on the &lt;code&gt;mode&lt;/code&gt;, the standard output of your scripts is differently presented.&lt;code&gt;fullOutput&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; modes support ANSI Escape codes allowing to color generated output by changing its background and foreground color. &lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/documentation/OUTPUTMODES.md&#34;&gt;You can view the different output mode options as well as their various forms and color options here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Error Handling&lt;/h3&gt; &#xA;&lt;p&gt;If the script exits with a status code not equal to 0, Raycast interprets it as failed and shows a toast that the script failed to run. If this script has inline or compact mode, the last line of the output will be used as an error message. Consider this example for a bash script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if ! [[ $value =~ $regex ]] ; then&#xA;  echo &#34;Invalid value provided&#34;&#xA;  exit 1&#xA;else&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting and FAQs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why isn&#39;t my script appearing in Raycast?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Ensure the filename doesn&#39;t contain &lt;code&gt;.template.&lt;/code&gt; string&lt;/li&gt; &#xA;  &lt;li&gt;Check that all required metadata parameters are provided. See the table above which parameters are required.&lt;/li&gt; &#xA;  &lt;li&gt;Ensure you use either &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; comments for metadata parameters&lt;/li&gt; &#xA;  &lt;li&gt;If nothing helps, try to go step by step from a &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/templates&#34;&gt;template&lt;/a&gt; Script Command or use one of the examples in this repo.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why isn&#39;t my Shell script working?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Ensure the filename doesn&#39;t contain &lt;code&gt;.template.&lt;/code&gt; string&lt;/li&gt; &#xA;  &lt;li&gt;Run your code through &lt;a href=&#34;https://www.shellcheck.net/&#34;&gt;ShellCheck&lt;/a&gt; to check for syntax errors or unexpected characters&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can I build in a non-login shell?&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;We only allow Script Commands that run in a non-login shell in this repository as agreed on in our &lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;, due to any dependencies.&lt;/strong&gt; However, if you need to run your local script as login-shell, you can specify an argument after shebang, e.g. &lt;code&gt;#!/bin/bash -l&lt;/code&gt; for bash. We also append &lt;code&gt;/usr/local/bin&lt;/code&gt; to &lt;code&gt;$PATH&lt;/code&gt; variable so you can use your local shell commands without any additional steps. If this is not enough, you can always extend &lt;code&gt;$PATH&lt;/code&gt; by adding &lt;code&gt;export PATH=&#39;/some/extra/path:$PATH&#39;&lt;/code&gt; at the top of your script.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re always looking for new Script Commands or other ways to improve Raycast. If you have anything cool to show, please send us a pull request. If we screwed something up, please report a bug. Join our &lt;a href=&#34;https://www.raycast.com/community&#34;&gt;Slack community&lt;/a&gt; to brainstorm ideas with like-minded folks.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getsentry/self-hosted</title>
    <updated>2022-05-31T02:21:54Z</updated>
    <id>tag:github.com,2022-05-31:/getsentry/self-hosted</id>
    <link href="https://github.com/getsentry/self-hosted" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sentry, feature-complete and packaged up for low-volume deployments and proofs-of-concept&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Self-Hosted Sentry nightly&lt;/h1&gt; &#xA;&lt;p&gt;Official bootstrap for running your own &lt;a href=&#34;https://sentry.io/&#34;&gt;Sentry&lt;/a&gt; with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker 19.03.6+&lt;/li&gt; &#xA; &lt;li&gt;Compose 1.28.0+&lt;/li&gt; &#xA; &lt;li&gt;4 CPU Cores&lt;/li&gt; &#xA; &lt;li&gt;8 GB RAM&lt;/li&gt; &#xA; &lt;li&gt;20 GB Free Disk Space&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To get started with all the defaults, simply clone the repo and run &lt;code&gt;./install.sh&lt;/code&gt; in your local check-out. Sentry uses Python 3 by default since December 4th, 2020 and Sentry 21.1.0 is the last version to support Python 2.&lt;/p&gt; &#xA;&lt;p&gt;During the install, a prompt will ask if you want to create a user account. If you require that the install not be blocked by the prompt, run &lt;code&gt;./install.sh --skip-user-prompt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thinking of not managing this yourself? Check out the &lt;a href=&#34;https://docs.sentry.io/product/sentry-basics/migration/&#34;&gt;SaaS migration docs&lt;/a&gt; or &lt;a href=&#34;https://sentry.io/from/self-hosted&#34;&gt;contact us&lt;/a&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://develop.sentry.dev/self-hosted/&#34;&gt;our documentation&lt;/a&gt; for everything else.&lt;/p&gt; &#xA;&lt;h3&gt;Customize DotEnv (.env) file&lt;/h3&gt; &#xA;&lt;p&gt;Environment specific configurations can be done in the &lt;code&gt;.env.custom&lt;/code&gt; file. It will be located in the root directory of the Sentry installation.&lt;/p&gt; &#xA;&lt;p&gt;By default, there exists no &lt;code&gt;.env.custom&lt;/code&gt; file. In this case, you can manually add this file by copying the &lt;code&gt;.env&lt;/code&gt; file to a new &lt;code&gt;.env.custom&lt;/code&gt; file and adjust your settings in the &lt;code&gt;.env.custom&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Please keep in mind to check the &lt;code&gt;.env&lt;/code&gt; file for changes, when you perform an upgrade of Sentry, so that you can adjust your &lt;code&gt;.env.custom&lt;/code&gt; accordingly, if required.&lt;/p&gt; &#xA;&lt;h3&gt;Enhance Sentry image&lt;/h3&gt; &#xA;&lt;p&gt;To install plugins and their dependencies or make other modifications to the Sentry base image, copy &lt;code&gt;sentry/enhance-image.example.sh&lt;/code&gt; to &lt;code&gt;sentry/enhance-image.sh&lt;/code&gt; and add necessary steps there. For example, you can use &lt;code&gt;apt-get&lt;/code&gt; to install dependencies and use &lt;code&gt;pip&lt;/code&gt; to install plugins.&lt;/p&gt; &#xA;&lt;p&gt;After making modifications to &lt;code&gt;sentry/enhance-image.sh&lt;/code&gt;, run &lt;code&gt;./install.sh&lt;/code&gt; again to apply them.&lt;/p&gt; &#xA;&lt;h2&gt;Tips &amp;amp; Tricks&lt;/h2&gt; &#xA;&lt;h3&gt;Event Retention&lt;/h3&gt; &#xA;&lt;p&gt;Sentry comes with a cleanup cron job that prunes events older than &lt;code&gt;90 days&lt;/code&gt; by default. If you want to change that, you can change the &lt;code&gt;SENTRY_EVENT_RETENTION_DAYS&lt;/code&gt; environment variable in &lt;code&gt;.env&lt;/code&gt; or simply override it in your environment. If you do not want the cleanup cron, you can remove the &lt;code&gt;sentry-cleanup&lt;/code&gt; service from the &lt;code&gt;docker-compose.yml&lt;/code&gt;file.&lt;/p&gt; &#xA;&lt;h3&gt;Installing a specific SHA&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install a specific release of Sentry, use the tags/releases on this repo.&lt;/p&gt; &#xA;&lt;p&gt;We continuously push the Docker image for each commit made into &lt;a href=&#34;https://github.com/getsentry/sentry&#34;&gt;Sentry&lt;/a&gt;, and other services such as &lt;a href=&#34;https://github.com/getsentry/snuba&#34;&gt;Snuba&lt;/a&gt; or &lt;a href=&#34;https://github.com/getsentry/symbolicator&#34;&gt;Symbolicator&lt;/a&gt; to &lt;a href=&#34;https://hub.docker.com/u/getsentry&#34;&gt;our Docker Hub&lt;/a&gt; and tag the latest version on master as &lt;code&gt;:nightly&lt;/code&gt;. This is also usually what we have on sentry.io and what the install script uses. You can use a custom Sentry image, such as a modified version that you have built on your own, or simply a specific commit hash by setting the &lt;code&gt;SENTRY_IMAGE&lt;/code&gt; environment variable to that image name before running &lt;code&gt;./install.sh&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SENTRY_IMAGE=getsentry/sentry:83b1380 ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this may not work for all commit SHAs as this repository evolves with Sentry and its satellite projects. It is highly recommended to check out a version of this repository that is close to the timestamp of the Sentry commit you are installing.&lt;/p&gt; &#xA;&lt;h3&gt;Using Linux&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Linux and you need to use &lt;code&gt;sudo&lt;/code&gt; when running &lt;code&gt;./install.sh&lt;/code&gt;, make sure to place the environment variable &lt;em&gt;after&lt;/em&gt; &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo SENTRY_IMAGE=us.gcr.io/sentryio/sentry:83b1380 ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where you replace &lt;code&gt;83b1380&lt;/code&gt; with the sha you want to use.&lt;/p&gt;</summary>
  </entry>
</feed>