<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-14T02:04:13Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>raycast/script-commands</title>
    <updated>2023-05-14T02:04:13Z</updated>
    <id>tag:github.com,2023-05-14:/raycast/script-commands</id>
    <link href="https://github.com/raycast/script-commands" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script Commands let you tailor Raycast to your needs. Think of them as little productivity boosts throughout your day.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Raycast Logo&#34; src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/logo.png&#34; height=&#34;240&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/commands&#34;&gt; &lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/badge/dynamic/json?style=flat&amp;amp;color=DF6D66&amp;amp;label=Script%20Commands&amp;amp;query=$.totalScriptCommands&amp;amp;url=https:%2F%2Fraw.githubusercontent.com%2Fraycast%2Fscript-commands%2Fmaster%2Fcommands%2Fextensions.json&amp;amp;logo=data:image%2Fpng%3Bbase64,iVBORw0KGgoAAAANSUhEUgAAAFgAAABYCAIAAAD%2B96djAAAIC0lEQVR4nOybW2zb1hmADynqLsuWRFLOBVmTpqkVy5LlpkgfDGRdnSvcdSiKIUWHosO8lwDtw4Bge1pRYMAw9KXAgAxYMiTNGjRZt%2B5plxQIkCzpNjduZMmJnMRpt7WR7NgSJYqULFISNUQ8pikpKVLpkOwDP%2BQhUajj40%2F%2Ff3j%2Bn0fEY1sfByYA4EZP4JuCKQJiioCYIiCmCIgpAmKKgJgiIKYIiCkCYoqAmCIgpgiIKQJiioCYIiDGi9jidIQ8bqNnYbSIkNv9h7HY%2B7HRXf39xs7ESBFbnc5To5Gg3d5vtf4uMhLu8xg4GSNF7BroJ202%2Be9eK3EmNvr0gGFxYRnw%2BY362SmeL1Rrzwb8AMMAAHYc30%2BSl3JMtlrVfzJGigAAJDguXRH2kQHowmJ5Phi8kmeWRVHnmegt4gmXa7vLlRYE5ZUUz%2BertT0BPwZd4JNBejpfWFJdowO6itjssJ8bix3euGGGZdOV9d8zwXFtOXKQoi4yuayoX47oJ2Kzw%2FHuaHSz00ng%2BH6K%2BpjJ31PFf4Lj%2BHp93O9T4mKCJC8zTE6v9UI%2FEc8M9B%2FeuNGy9plPBulrrXERLxbvVip7SVJ24SGIFwaDuuWIfiI%2BK68u8KVDNIUpLmi6LUfm%2BVJnjuizduq6RnxWLmcqwgQZkF0QOH6Aoq51rBeda%2BelnObrhbYiQm73bt%2FAQqmsvJLi%2BYVSaS9Fyjlia8bFbLH4ZaWiXJPgOLWvtdgpZrTMEQ1FbHU634tFX9wwmCxy%2F11dBQAMEMSugX6x0ahJjRFvn3wZgeOHaGpREAI22xanU%2F7D1%2Bsei2W7GxZjDovlgMY5gml0LCDkcZ%2BKRmi7HQAgStKRuRsXcrlxv%2B%2F3o9GuxyzWalPJuasFFulMIVrVGttcrsBaHWHD8Z9sewzreUwvQZwYCYfcmtTsWon4y%2FLKVGJOlCQAwE2OfyWeaKAY1mu1nh2LaVGnalh9XmSYI3M3Uhz3cny2UKuhGlauU2NeL6oBZVCK2Oyw7yNJ9SsXcrnJq58itCDjJYhT0cgQ0r4WMhHyDvrX4Z37qRYXSDJCZjpfkBpwPK%2BVOBmN7HC7UA2ORsQTLtefnoptc7lsOH4sPPzShkEkw7ZxbnHx6PxNxcWg3f7BU2OocgSNCJ%2FV6iUIOCKG%2FWroyYOtcYGKD5fuvXX7DlDiopkjSNZONCI%2BYdnXEklubS3AMeyd4Z0auTidTr95%2B446R87ERnvvgyNbI6YL7A%2FiCcWFDcdf3rQR1eBtnE6nfzp%2FS1LFRe998O5FbHU6v9%2B6FiQ57sfJuUq93suEHpE%2FLi39YmE9R3rvg3cpIuRxnx0b%2FeXQk69u2qR%2BfbpwP0d41PdLGWUZkjl59wE50nUfvJuia4vDcSY2GrTbMQx7NuBPV4QUzyv%2Fm64I11h2kqYzgvDnpXstb3Q6Xxzs%2FobyzMBAosh90VqnouqDdxMRbovFga%2B9EcPeDj0gLqY0yBGHxXI8Et7d%2BpmfTqePzt9ScsSK457WwHlEuomIbLU6w7IHaMou68CwPQF%2FoVpLcJxyzZeVyr8LbLnVRY8R8bBejtIHFyTp9RupK%2Fl8FyN32Y%2FICMIVhpmkabsFb6q4nyN8vR4vFpVryh0R0bsIpZfT2QdnxOq76fQ%2FmG4s9NSYWRbFT1l2P0XaLRbQlDHu992tVOb50sPegkSEHBedffAkx6nbXF%2BXnvYRV1n2cHy2qNpHvR0aalsvEPL35RW5rgcA9BHEe7HobnTPSnvdUM3zpVfis8Xquou3dmzXyMVH2ewb11PK%2FbKvub9G5QLBzvI6x7%2BWSCpxATDszR3bX0KRAp2cz2bVe0r5lolkZGQ9yyGP%2B2Q0MthsUgIApEbj57cWzmQy6msom23c7%2Bv6R8wUWHkVOEiR7wzvXK3Xp5JzM2yx57kDxM3bHW7XB2NjXiu8jV9mmFdnk6gGb%2BMQRS2LAioLiDtUt0vllhxBhBXDjkfCzwUC6hf%2FurKC0AL6nmW8WFSvnb1jxbDfjAxPkOSxkeHvBDR8FoW%2BeXud4w9fi7OInmIfCw8%2F1%2ByD2nD8t5GR7wVpJMN2okkXe75UmkrOIcmRs5lFZe9QlSROsxpfqyddAADaZjvyrS191vUS6JM8e25xUX2NlyB%2B9vg2eZ8uc345%2B1E2q77m237%2FiehIVZJ%2BlJz7Z76g0Ww1FAEAeLq%2F%2F0Qk7LVa5X9KjcbR%2BZsfttbm4z7f8UjYIe%2FTm88H37iROr%2FS4uK7QbpUq1%2FI5bSbqrZPwzOCcIlhng8G5W0PhmF7SbKtTv2iUrlfy1KUrXmNBcMO0VRGaOlx3CqV%2FtN8jKwdmp%2BPyIrVzjo13%2BpC6eUQa74myMBCqXSnXNZ0bmr0OCiyLIrThcLB1v5FpqOvNXO%2FlqXWY4ciPy%2BX1WcrNEWnEzNLgnAxl5sgSbl9JH%2FmXK02W2yJi4%2BZ%2FGSQll3wtdr7mYymh0PU6Hd0KCtWLzPMC8GgkiN7%2FO05ck8U5RypNRo%2FTCTR7h2%2FGl3PUOWq1c4cKXSsFzMs%2B7eVlX9pcyDkYeh98nbpQT2%2Bzj74%2F1a77zV1hwFnsZdF8VIuNxmkHWs9vn1koC1H9MeYQ%2BkP7IMzYjVpnAvDvq8xw7bUqaIkfb6q366hEyO%2FpqD0wSUAXr%2Be6roTjwRta41HIeRxewhCo0ODj043T8fQ8hXPQfTE%2BK87fkMwRUBMERBTBMQUATFFQEwREFMExBQBMUVATBEQUwTEFAExRUBMERBTBOT%2FAQAA%2F%2F98wKt7wQJ9rAAAAABJRU5ErkJggg%3D%3D&amp;amp;labelColor=202123&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://twitter.com/raycastapp&#34;&gt; &lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/raycastapp?style=flat&amp;amp;color=5C9BA1&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Raycast Script Commands&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raycast.com/&#34;&gt;Raycast&lt;/a&gt; lets you control your tools with a few keystrokes and installing script commands makes it possible to execute commands from anywhere on your desktop. They are a great way to speed up every-day tasks such as converting data, opening bookmarks or triggering dev workflows. This repository contains some example scripts as well as links to our community commands and documentation to write your own ones.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;✨ Looking to build richer extensions?&lt;/strong&gt; Check out the Extensions API &lt;a href=&#34;https://github.com/raycast/extensions&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;🚨 For anything that is not related to script commands, please &lt;a href=&#34;mailto:feedback@raycast.com&#34;&gt;send us an email&lt;/a&gt;, use the feedback command within Raycast, or join the &lt;a href=&#34;https://www.raycast.com/community&#34;&gt;Slack community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/screenshots/script-commands-readme-header.png&#34; alt=&#34;Script Command Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Install Script Commands from this repository&lt;/h2&gt; &#xA;&lt;p&gt;To install new commands, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose a script from the &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/commands#apps&#34;&gt;community repo&lt;/a&gt; and save it into a new directory.&lt;/p&gt; &lt;p&gt;Scripts containing the word &lt;code&gt;.template.&lt;/code&gt; in the filename require some values to be set (check &lt;a href=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/#troubleshooting-and-faqs&#34;&gt;the troubleshooting section&lt;/a&gt; for more information).&lt;/p&gt; &lt;p&gt;Alternatively, instead of creating a new directory you can reuse the repo&#39;s &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/_enabled-commands&#34;&gt;&lt;code&gt;_enable-commands&lt;/code&gt; folder&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the Extensions tab in the Raycast preferences&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the plus button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;code&gt;Add Script Directory&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select directories containing your Script Commands&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;💡 Hint:&lt;/strong&gt; We recommend that you don&#39;t directly load the community script directories into Raycast to avoid potential restructuring and new script commands suddenly appearing in Raycast.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/screenshots/add-directory.png&#34; alt=&#34;Add directory&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Create your own Script Commands&lt;/h2&gt; &#xA;&lt;p&gt;To write your own custom Script Commands, go over the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;Create Script Command&lt;/code&gt; functionality in Raycast&lt;/li&gt; &#xA; &lt;li&gt;Write and edit your script using your favourite code editor&lt;/li&gt; &#xA; &lt;li&gt;Run your Script Command from the Raycast root search&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;💡 Hint:&lt;/strong&gt; If you choose to write your script in &lt;code&gt;Bash&lt;/code&gt;, we highly recommend using the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=timonwong.shellcheck&#34;&gt;Shellcheck&lt;/a&gt; linter as this will ensure smooth running of your script. All scripts uploaded to GitHub will need to have been run through ShellCheck.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/script-commands/master/images/screenshots/Create-Script-Command.png&#34; alt=&#34;Create Script Command&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Metadata&lt;/h3&gt; &#xA;&lt;p&gt;These parameters are available for you to customize your Script Command in Raycast. For practical examples of how these should be used, as well as best practices and supported languages, please browse our templates and community-built scripts.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;App Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;schemaVersion&lt;/td&gt; &#xA;   &lt;td&gt;Schema version to prepare for future changes in the API. Currently there is only version 1 available.&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;Display name of the Script Command that is shown as title in the root search.&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mode&lt;/td&gt; &#xA;   &lt;td&gt;Specifies how the script is executed and how the output is presented. &lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/documentation/OUTPUTMODES.md&#34;&gt;Details of the options for this parameter can be viewed here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;packageName&lt;/td&gt; &#xA;   &lt;td&gt;Display name of the package that is shown as subtitle in the root search. When not provided, the name will be inferred from the script directory name.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;icon&lt;/td&gt; &#xA;   &lt;td&gt;Icon that is displayed in the root search. Can be an emoji, a file path (relative or full) or a remote URL (only https). Supported formats for images are PNG and JPEG. Please make sure to use small icons, recommended size - 64px.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iconDark&lt;/td&gt; &#xA;   &lt;td&gt;Same as &lt;code&gt;icon&lt;/code&gt;, but for dark theme. If not specified, then &lt;code&gt;icon&lt;/code&gt; will be used in both themes.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;1.3.0+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;currentDirectoryPath&lt;/td&gt; &#xA;   &lt;td&gt;Path from which the script is executed. Default is the path of the script.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.29+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;needsConfirmation&lt;/td&gt; &#xA;   &lt;td&gt;Specify &lt;code&gt;true&lt;/code&gt; if you would like to show confirmation alert dialog before running the script. Can be helpful with destructive scripts like &#34;Quit All Apps&#34; or &#34;Empty Trash&#34;. Default value is &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.30+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;refreshTime&lt;/td&gt; &#xA;   &lt;td&gt;Specify a refresh interval for inline mode scripts in seconds, minutes, hours or days. Examples: 10s, 1m, 12h, 1d. Note that the actual times can vary depending on how the OS prioritises scheduled work. The minimum refresh interval is 10 seconds. If you have more than 10 inline commands, only the first 10 will be refreshed automatically; the rest have to be manually refreshed by navigating to them and pressing &lt;code&gt;return&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;0.31+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;argument[1...3]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/documentation/ARGUMENTS.md&#34;&gt;Custom arguments, see Passing Arguments page&lt;/a&gt; for detail of how to use this field&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;1.2.0+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;author&lt;/td&gt; &#xA;   &lt;td&gt;Define an author name to be part of the script commands documentation&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;authorURL&lt;/td&gt; &#xA;   &lt;td&gt;Author social media, website, email or anything to help the users to get in touch&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;description&lt;/td&gt; &#xA;   &lt;td&gt;A brief description about the script command to be presented in the documentation&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Output Mode&lt;/h3&gt; &#xA;&lt;p&gt;You can use the standard output to present messages in Raycast. Depending on the &lt;code&gt;mode&lt;/code&gt;, the standard output of your scripts is differently presented.&lt;code&gt;fullOutput&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; modes support ANSI Escape codes allowing to color generated output by changing its background and foreground color. &lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/documentation/OUTPUTMODES.md&#34;&gt;You can view the different output mode options as well as their various forms and color options here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Error Handling&lt;/h3&gt; &#xA;&lt;p&gt;If the script exits with a status code not equal to 0, Raycast interprets it as failed and shows a toast that the script failed to run. If this script has inline or compact mode, the last line of the output will be used as an error message. Consider this example for a bash script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if ! [[ $value =~ $regex ]] ; then&#xA;  echo &#34;Invalid value provided&#34;&#xA;  exit 1&#xA;else&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting and FAQs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why isn&#39;t my script appearing in Raycast?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Ensure the filename doesn&#39;t contain &lt;code&gt;.template.&lt;/code&gt; string&lt;/li&gt; &#xA;  &lt;li&gt;Check that all required metadata parameters are provided. See the table above which parameters are required.&lt;/li&gt; &#xA;  &lt;li&gt;Ensure you use either &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; comments for metadata parameters&lt;/li&gt; &#xA;  &lt;li&gt;If nothing helps, try to go step by step from a &lt;a href=&#34;https://github.com/raycast/script-commands/tree/master/templates&#34;&gt;template&lt;/a&gt; Script Command or use one of the examples in this repo.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why isn&#39;t my Shell script working?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Ensure the filename doesn&#39;t contain &lt;code&gt;.template.&lt;/code&gt; string&lt;/li&gt; &#xA;  &lt;li&gt;Run your code through &lt;a href=&#34;https://www.shellcheck.net/&#34;&gt;ShellCheck&lt;/a&gt; to check for syntax errors or unexpected characters&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can I build in a non-login shell?&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;We only allow Script Commands that run in a non-login shell in this repository as agreed on in our &lt;a href=&#34;https://github.com/raycast/script-commands/raw/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;, due to any dependencies.&lt;/strong&gt; However, if you need to run your local script as login-shell, you can specify an argument after shebang, e.g. &lt;code&gt;#!/bin/bash -l&lt;/code&gt; for bash. We also append &lt;code&gt;/usr/local/bin&lt;/code&gt; to &lt;code&gt;$PATH&lt;/code&gt; variable so you can use your local shell commands without any additional steps. If this is not enough, you can always extend &lt;code&gt;$PATH&lt;/code&gt; by adding &lt;code&gt;export PATH=&#39;/some/extra/path:$PATH&#39;&lt;/code&gt; at the top of your script.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re always looking for new Script Commands or other ways to improve Raycast. If you have anything cool to show, please send us a pull request. If we screwed something up, please report a bug. Join our &lt;a href=&#34;https://www.raycast.com/community&#34;&gt;Slack community&lt;/a&gt; to brainstorm ideas with like-minded folks.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>QiuChenly/MyMacsAppCrack</title>
    <updated>2023-05-14T02:04:13Z</updated>
    <id>tag:github.com,2023-05-14:/QiuChenly/MyMacsAppCrack</id>
    <link href="https://github.com/QiuChenly/MyMacsAppCrack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MacBook 自用软件破解（macOS Intel）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;macOS Apps Inject Plugin&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;K&#39;ed By QiuChenly(秋城落叶)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;为我的Mac独奏MVP凯歌&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Powered By 青海摇&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;更新日期 2023.05.12&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/QiuChenly/MyMacsAppCrack/raw/main/CN.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/QiuChenly/MyMacsAppCrack/raw/main/EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;版权申明/免责声明&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Proclaim &amp;amp; Announcement&lt;/summary&gt; &#xA; &lt;p&gt;本项目仅交流学习软件安全技术使用，不会发布任何形式的成品App，不收任何人钱，各位谨防受骗。&lt;/p&gt; &#xA; &lt;p&gt;本项目主要目的是为了证明macOS上软件安全漏洞，在此致谢开发这些软件的厂商，如果您认为这侵犯了您的合法权益，我将会删除与您相关的任何代码。&lt;/p&gt; &#xA; &lt;p&gt;不要将本项目研究成果进行&lt;strong&gt;传播&lt;/strong&gt;破坏软件公司的利益，所有法律责任由传播者独自承担，作者从未为任何破解软件传播组织提供过任何形式的技术支持，不支持不赞同不理解传播盗版软件这种违法行为。&lt;/p&gt; &#xA; &lt;p&gt;因使用者传播者传播破解软件导致的任何法律责任与包括但不仅限于引起系统故障 财产损失等问题作者概不负责。&lt;/p&gt; &#xA; &lt;p&gt;如果您觉得作者侵犯了您的合法权益，请致信********@qq.com此邮箱地址，我将删除与您利益相关的代码和文件，不要上来就发律师函威胁我，我用于研究学习不盈利，问心无愧，谢谢。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;p align=&#34;center&#34;&gt;查询作者的成分&lt;/p&gt;&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;点击查看作者的精神状态&lt;/summary&gt; &#xA; &lt;p&gt;女👊主义者，爱狗人士，高技术力舔狗。&lt;/p&gt; &#xA; &lt;p&gt;b站抽象小鬼，烂梗之王，话题终结者。&lt;/p&gt; &#xA; &lt;p&gt;贴吧黄牌老东西，v8元老，孙笑川吧老东西。&lt;/p&gt; &#xA; &lt;p&gt;柯洁铁粉，七海娜娜米结晶人，冬雪莲男友粉，Otto棍孝子。&lt;/p&gt; &#xA; &lt;p&gt;顶级雏草姬，举办塔菲喵，举办塔菲谢谢喵。&lt;/p&gt; &#xA; &lt;p&gt;火星包包孝子，引流之主EQQA炮车没🐎。&lt;/p&gt; &#xA; &lt;p&gt;青海社会摇2023代传人，但是不穿豆豆鞋紧身衣。&lt;/p&gt; &#xA; &lt;p&gt;西安摇强劲对手，苏南张诗尧，青海摇集大成者。&lt;/p&gt; &#xA; &lt;p&gt;U R B B R,G R O U GAY!&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;p align=&#34;center&#34;&gt;点击上方的中文/英文查看具体使用方法,或者翻到本页面下面查看我编写的使用说明&lt;/p&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;每次github文件更新后要及时下载更新, 我希望看到的是大家愉快的使用我的智慧成果而不是有小可爱拿旧版本文件问我为什么激活不了新版本，那我倒是要问问你，为什么不下载新的补丁文件？&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;然后还有Dinner加群专门问我为什么不能激活新版本的App，你拿着清朝的剑斩本朝的官我都懒得喷你了。&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&amp;nbsp;都用破解软件了连SIP都不会关的dinner滚一边，有不要脸还来问我SIP怎么关的我上来就骂。你可以不知道怎么关但是连百度都不会用那确实低能，这种人我建议你别用macOS了，你不适合用电脑。&lt;/p&gt; &#xA;&lt;h1&gt;&#xA; &lt;center&gt;&#xA;  注入补丁支持的App列表一览 &#xA; &lt;/center&gt;&lt;/h1&gt; &#xA;&lt;p&gt;数字上标可点击查看注入方法 下载链接点击会跳转到官方下载链接.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;关于不要Codesign App和关闭SIP的说明&lt;/summary&gt; &#xA; &lt;pre&gt;&#xA;本补丁支持的所有app只需要注入进去即可，不要自作聪明去Codesign破坏原始app的完整签名，这样会丢失App的权限和功能缺失。&#xA;&lt;p&gt;最简单的例子：CleanMyMac X多少人自作聪明注入完我的补丁然后去codesign整个App？最后无限弹出权限请求，还有状态栏组件不解锁？然后还认为是我的问题，我只能说，脑子不需要可以捐了。本篇使用说明通篇tmd就没叫你们codesign过！&lt;/p&gt;&#xA;&lt;p&gt;注入完补丁打不开App提示崩溃的自己先看看关没关macOS SIP再来提issues。大部分App必须关闭SIP才能在注入后正常运行，很多人不关SIP还想用破解软件我只能说你在脱裤子放屁。老子利用的就是nmd关掉SIP后动态注入了App内存修改的激活代码，不然你tm以为老子怎么做到的？不关SIP老子怎么注入进App内存？怎么修改代码？动动脑子行吗各位。&lt;/p&gt;&#xA;&lt;p&gt;苹果做了一个SIP机制就奉为圭臬，完全不考虑SIP到底是什么作用。对这种人我实在是心累。&#xA;&lt;/p&gt;&lt;/pre&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App名称&lt;/th&gt; &#xA;   &lt;th&gt;支持的版本&lt;/th&gt; &#xA;   &lt;th&gt;下载链接&lt;/th&gt; &#xA;   &lt;th&gt;破解原因&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Omi 录屏专家[^omi_recording_pro]&lt;/td&gt; &#xA;   &lt;td&gt;v1.2.4(2023020802)&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Omi NTFS 磁盘专家 Pro[^omi_ntfs]&lt;/td&gt; &#xA;   &lt;td&gt;v1.2.3 (2023020701)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cdn.zh.okaapps.com/resource/download/NTFS-Pro-Installer.pkg&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fig Player[^fig_player]&lt;/td&gt; &#xA;   &lt;td&gt;v1.2.3(2023032401)&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bandizip365[^bandizip365]&lt;/td&gt; &#xA;   &lt;td&gt;v7.22&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/bandizip-365-%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9/id1596426184?mt=12&#34;&gt;MacAppStore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Macs Fan Control[^macs_fan_control]&lt;/td&gt; &#xA;   &lt;td&gt;v1.5.15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://crystalidea.com/downloads/macsfancontrol.zip&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Record it Pro[^record_it_pro]&lt;/td&gt; &#xA;   &lt;td&gt;v1.7.6&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PlistEdit Pro[^plistedit_pro]&lt;/td&gt; &#xA;   &lt;td&gt;v1.10b1&lt;/td&gt; &#xA;   &lt;td&gt;Here&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sublime Text Dev[^sublimetext]&lt;/td&gt; &#xA;   &lt;td&gt;v4149&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://download.sublimetext.com/sublime_text_build_4149_mac.zip&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CleanMyMac X[^cmm]&lt;/td&gt; &#xA;   &lt;td&gt;v4.13.4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl.devmate.com/com.macpaw.CleanMyMac4/CleanMyMacX.dmg&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;App Cleaner &amp;amp; Uninstaller[^app_cleaner_uninstaller]&lt;/td&gt; &#xA;   &lt;td&gt;v8.1.3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://download.nektony.com/download/app-cleaner-uninstaller/app-cleaner-uninstaller.dmg&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PopClip&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/PopClip&#34;&gt;^popclip&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v2022.12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pilotmoon.com/downloads/PopClip-2022.12.zip&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MWeb Pro[^mwebpro]&lt;/td&gt; &#xA;   &lt;td&gt;v4.4.4 - 直接通杀后续版本&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mweb-1256924220.cos.accelerate.myqcloud.com/MWebPro441.dmg&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ulysses&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/Ulysses&#34;&gt;^ulysses&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v29.4&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iShot[^ishot]&lt;/td&gt; &#xA;   &lt;td&gt;v2.3.3&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;国产App之光，谨此致敬🫡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AutoSwitchInput&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/AutoSwitchInput&#34;&gt;^autoswitch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v2.2.1&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SuperRightKey&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/iRightMouse&#34;&gt;^irightmouse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v2.2.3&lt;/td&gt; &#xA;   &lt;td&gt;MacAppStore&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;解优2&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/%E8%A7%A3%E4%BC%982&#34;&gt;^bestzip2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v1.6.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/%E8%A7%A3%E4%BC%98-%E4%B8%93%E4%B8%9A%E7%9A%84-rar-7z-zip-%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7/id1450246547?mt=12&#34;&gt;MacAppStore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UI 很好看&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OmniPlayer&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/OmniPlayer&#34;&gt;^omniPlayer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v2.0.19 (2023032801)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/omni-player-%E9%AB%98%E6%B8%85%E5%BD%B1%E9%9F%B3%E6%92%AD%E6%94%BE%E5%99%A8/id1470926410?mt=12&#34;&gt;MacAppStore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UI 很好看&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Filmage Screen&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/FilmageScreen&#34;&gt;^FilmageScreen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v1.4.7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pdfreaderpro.oss-cn-shanghai.aliyuncs.com/downloads/FilmageScreen.dmg&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;那天正好比较无聊而已&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Xmind&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/Xmind&#34;&gt;^xmind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;v22.11.3656&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dl2.xmind.cn/Xmind-for-macOS-22.11.3656.dmg&#34;&gt;官方下载链接&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;随便破破&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Navicat Premium[^Navicat]&lt;/td&gt; &#xA;   &lt;td&gt;v16.1.10 - 直接通杀后续版本&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/navicat-premium-16/id1594061654?mt=12&#34;&gt;MacAppStore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Navicat重度用户表示不破不立&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infuse Pro[^Infuse]&lt;/td&gt; &#xA;   &lt;td&gt;v7.5.2 (7.5.4410)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/infuse-%E6%99%BA%E8%83%BD%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8/id1136220934&#34;&gt;MacAppStore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;App做的很好 但下一秒正版授权就是我的了&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft Office 365 Excel/PowerPoint/Word[^excel365]&lt;/td&gt; &#xA;   &lt;td&gt;v16.72&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.apple.com/cn/app/microsoft-excel/id462058435?mt=12&#34;&gt;MacAppStore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;全球最牛逼的产品&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Adobe PhotoShop CC[^photosp]&lt;/td&gt; &#xA;   &lt;td&gt;v24.4.1/v24.2.0&lt;/td&gt; &#xA;   &lt;td&gt;官方Creative Cloud中下载&lt;/td&gt; &#xA;   &lt;td&gt;设计领域最牛逼的产品&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Adobe 全系破解&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;官方Creative Cloud中下载&lt;/td&gt; &#xA;   &lt;td&gt;设计领域最牛逼的产品，补丁支持的解锁版本在下面有说明&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;指南&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;对非专业IT人士&lt;/summary&gt; &#xA; &lt;p&gt;我一点都没学过软件，你说的操作步骤我根本看不懂啊！&lt;/p&gt; &#xA; &lt;p&gt;好，那我就在此认认真真的跟你讲一遍怎么用.&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;下载zip压缩包: &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819809573287.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;解压得到: &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819809983900.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;找到某个目标app,查看注入位置: &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819811321427.jpg&#34; alt=&#34;&#34;&gt; 跳转到对应说明 &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819810903366.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;这里iShot举例，第一步根据上面Copy后面的文件路径复制一份原文件备用，macOS会自动加&#34;_副本&#34;这三个字在后面，这里的PTHotkey文件被复制到PTHotkey_副本。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;第二步打开终端输入: &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819812468264.jpg&#34; alt=&#34;&#34;&gt; 输入sudo+空格+拖入insert_dylib文件+空格+拖入dylib文件+空格。注意是全路径！！不是文件名！！ 最后看起来如下所示： &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819815456397.jpg&#34; alt=&#34;&#34;&gt; 错误示范: &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819815924314.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;鼠标按图示的顺序把第一步复制好的文件拖到终端里,如下: &lt;img src=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/media/16819818525680.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;p&gt;“_副本”结尾的文件放在前面，然后后面加上空格再跟上原文件。&lt;/p&gt; &lt;p&gt;按下回车重新打开App即可。所有操作的文件全都是完整路径，下方注入说明写的不详细请参考这里。&lt;/p&gt; &lt;p&gt;一定要用鼠标拖入到终端上，而不要偷懒自作聪明复制文件路径粘贴到终端上去！&lt;/p&gt; &lt;p&gt;楼主看到这种自作聪明的小可爱都笑嘻了。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;有些app文件名有空格&lt;/strong&gt;你单纯复制路径是不会自动转义的！ 千万要记住是 &lt;strong&gt;直!接!用!&lt;/strong&gt; 鼠标拖动文件到终端上！他会自动加上空格！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;对IT专业人士&lt;/summary&gt; 搞技术的终端都会用吧？ &#xA; &lt;pre&gt;&lt;code&gt;sudo insert_dylib文件完整路径 libInlineInjectPlugin.dylib文件完整路径 /Appxxx/xxx/xxx副本 /Appxxx/xxx/xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;回车并重新打开app即可。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;补充说明&lt;/summary&gt; 写这么多跟技术有关的一句没有，全在解决跟技术无关的操作问题。你要是实在用不了就别用了，自己dinner不要觉得别人跟你一样dinner。 &#xA; &lt;p&gt;还有，版本更新快不快取决于我能不能第一时间发现新版本并patch，如果我没有更新你就别升级，升级完了我都没发布升级补丁，有什么用？&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;注入补丁是否安全?&lt;/h3&gt; &#xA;&lt;p&gt;至少比你下的TNT破解版安全。 部分破解过程可以看过来:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/QiuChenly/MyMacsAppCrack/main/howtocrack.md&#34;&gt;How To Crack Macs Fan Control?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.52pojie.cn/forum.php?mod=forumdisplay&amp;amp;fid=5&amp;amp;filter=typeid&amp;amp;typeid=377&#34;&gt;52破解论坛&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;怎么破解?&lt;/h3&gt; &#xA;&lt;p&gt;点击App名称上面的数字上标1,2...17----然后看下方的提示.&lt;/p&gt; &#xA;&lt;p&gt;如何体验正版?表格中的app右侧上方有数字上标，点击可查看对应的体验办法。&lt;/p&gt; &#xA;&lt;h1&gt;QQ吹牛群&lt;/h1&gt; &#xA;&lt;p&gt;群号已经删除 别找了 避免被说成引流&lt;/p&gt; &#xA;&lt;p&gt;【烟Distance】 靠近我一点，别理我那么远～oh～ 可是雪～豹～已失联～&lt;/p&gt; &#xA;&lt;h1&gt;Adobe 全系破解&lt;/h1&gt; &#xA;&lt;p&gt;省流:&lt;/p&gt; &#xA;&lt;p&gt;除了Adobe XD，其他App都是找到App文件里面的AdobeAGM.framework/Versions/A/AdobeAGM这个文件注入进去。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Adobexxxxx.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&#xA;&#xA;意思就是让你去App目录下找到这个文件所在的位置，一般都在Frameworks里面.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;下方没有列出来的版本表示暂不支持。&lt;/p&gt; &#xA;&lt;p&gt;另外，补丁只支持Intel Mac，M1/M2电脑据群友反馈说打开Rosseta可以运行，你们自己测试吧。&lt;/p&gt; &#xA;&lt;p&gt;参考注入代码:&lt;/p&gt; &#xA;&lt;p&gt;看不懂的换个脑子就好了&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo insert_dylib的全路径 libInlineInjectPlugin.dylib的全路径 Adobexxxxx.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM副本 Adobexxxxx.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Adobe全家桶中具体支持解锁的App版本和注入说明&lt;/summary&gt; &#xA; &lt;h2&gt;Adobe XD 版本 56.1.12.1&lt;/h2&gt; &#xA; &lt;p&gt;注入文件: /Applications/Adobe\ XD/Adobe\ XD.app/Contents/Frameworks/nanopb.framework/Versions/A/nanopb&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;sudo insert_dylib /Users/qiuchenly/你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Adobe\ XD/Adobe\ XD.app/Contents/Frameworks/nanopb.framework/Versions/A/nanopb_副本 /Applications/Adobe\ XD/Adobe\ XD.app/Contents/Frameworks/nanopb.framework/Versions/A/nanopb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Adobe Audition 2023 23.3&lt;/h2&gt; &#xA; &lt;p&gt;注入文件: /Applications/Adobe\ Audition\ 2023/Adobe\ Audition\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;sudo insert_dylib /Users/qiuchenly/你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Adobe\ Audition\ 2023/Adobe\ Audition\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM_副本 /Applications/Adobe\ Audition\ 2023/Adobe\ Audition\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Adobe Illustrator 27.5.0&lt;/h2&gt; &#xA; &lt;p&gt;注入文件: AdobeAGM.framework/Versions/A/AdobeAGM 文件和注入方式跟Adobe Audition 2023一样，略。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe Dreamweaver 2021 21.3.0.15593&lt;/h2&gt; &#xA; &lt;p&gt;同上。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe AfterEffects 23.4&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo /你的文件完整路径/insert_dylib /你的文件完整路径/libInlineInjectPlugin.dylib /Applications/Adobe\ After\ Effects\ 2023/Adobe\ After\ Effects\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM_副本 /Applications/Adobe\ After\ Effects\ 2023/Adobe\ After\ Effects\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;同上。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe PremierePro 23.4&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo /你的文件完整路径/insert_dylib /你的文件完整路径/libInlineInjectPlugin.dylib /Applications/Adobe\ Premiere\ Pro\ 2023/Adobe\ Premiere\ Pro\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM_副本 /Applications/Adobe\ Premiere\ Pro\ 2023/Adobe\ Premiere\ Pro\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;同上。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe Animate 2023 23.0.1&lt;/h2&gt; &#xA; &lt;p&gt;同上。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe Media Encoder 2023 23.4&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo /你的文件完整路径/insert_dylib /你的文件完整路径/libInlineInjectPlugin.dylib /Applications/Adobe\ Media\ Encoder\ 2023/Adobe\ Media\ Encoder\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM_副本 /Applications/Adobe\ Media\ Encoder\ 2023/Adobe\ Media\ Encoder\ 2023.app/Contents/Frameworks/AdobeAGM.framework/Versions/A/AdobeAGM&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;同上。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe Lightroom Classic 12.3&lt;/h2&gt; &#xA; &lt;p&gt;同上。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe PhotoShop 24.4.1&lt;/h2&gt; &#xA; &lt;p&gt;同上。也可以注入到AdobeARE文件里面，都行。&lt;/p&gt; &#xA; &lt;h2&gt;Adobe Acrobat 23.001.20143&lt;/h2&gt; &#xA; &lt;p&gt;同上。 注意这个App有一个Adobe Acrobat Distiller 应用程序，Distiller这个App里面同样的文件注入进去即可使用。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;注入小贴士&lt;/h1&gt; &#xA;&lt;p&gt;[^photosp]: Adobe PhotoShop Creative Cloud Edition 0. 从官方Adobe CC工具中下载官方正版，别从不知名的地方下。 1. Copy /Applications/Adobe\ Photoshop\ 2023/Adobe\ Photoshop\ 2023.app/Contents/Frameworks/AdobeARE.framework/Versions/A/AdobeARE to /Applications/Adobe\ Photoshop\ 2023/Adobe\ Photoshop\ 2023.app/Contents/Frameworks/AdobeARE.framework/Versions/A/AdobeARE_副本 2. sudo insert_dylib /Users/qiuchenly/你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Adobe\ Photoshop\ 2023/Adobe\ Photoshop\ 2023.app/Contents/Frameworks/AdobeARE.framework/Versions/A/AdobeARE_副本 /Applications/Adobe\ Photoshop\ 2023/Adobe\ Photoshop\ 2023.app/Contents/Frameworks/AdobeARE.framework/Versions/A/AdobeARE 3. ok.&lt;/p&gt; &#xA;&lt;p&gt;[^excel365]: Office Excel 365/Office PowerPoint 365/Office Word 365 1. Copy /Applications/Microsoft Excel.app/Contents/Frameworks/FluentUI.framework/Versions/A/FluentUI to /Applications/Microsoft Excel.app/Contents/Frameworks/FluentUI.framework/Versions/A/FluentUI的副本 2. sudo insert_dylib /Users/qiuchenly/你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Microsoft\ Excel.app/Contents/Frameworks/FluentUI.framework/Versions/A/FluentUI的副本 /Applications/Microsoft\ Excel.app/Contents/Frameworks/FluentUI.framework/Versions/A/FluentUI 3. ok.&lt;/p&gt; &#xA;&lt;p&gt;[^Infuse]: Infuse Pro 1. Copy /Applications/Infuse.app/Contents/Frameworks/GZIP.framework/Versions/A/GZIP to /Applications/Infuse.app/Contents/Frameworks/GZIP.framework/Versions/A/GZIP的副本. 2. sudo insert_dylib /你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Infuse.app/Contents/Frameworks/GZIP.framework/Versions/A/GZIP的副本 /Applications/Infuse.app/Contents/Frameworks/GZIP.framework/Versions/A/GZIP 3. ok.&lt;/p&gt; &#xA;&lt;p&gt;[^Navicat]: Navicat Premium 1. Copy /Applications/Navicat Premium.app/Contents/Frameworks/NAVTabBarView.framework/Versions/A/NAVTabBarView to /Applications/Navicat Premium.app/Contents/Frameworks/NAVTabBarView.framework/Versions/A/NAVTabBarView的副本. 2. sudo insert_dylib /你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Navicat\ Premium.app/Contents/Frameworks/NAVTabBarView.framework/Versions/A/NAVTabBarView的副本 /Applications/Navicat\ Premium.app/Contents/Frameworks/NAVTabBarView.framework/Versions/A/NAVTabBarView 3. ok.&lt;/p&gt; &#xA;&lt;p&gt;1. Copy /Applications/Filmage Screen.app/Contents/Frameworks/KMDrawViewSDK_Mac.framework/Versions/A/KMDrawViewSDK_Mac to /Applications/Filmage Screen.app/Contents/Frameworks/KMDrawViewSDK_Mac.framework/Versions/A/KMDrawViewSDK_Mac的副本 2. sudo insert_dylib /你的文件夹路径！！！不要直接复制本Shell！！！/libInlineInjectPlugin.dylib /Applications/Filmage\ Screen.app/Contents/Frameworks/KMDrawViewSDK_Mac.framework/Versions/A/KMDrawViewSDK_Mac的副本 /Applications/Filmage\ Screen.app/Contents/Frameworks/KMDrawViewSDK_Mac.framework/Versions/A/KMDrawViewSDK_Mac 3. ok.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/OmniPlayerStore.app/Contents/Frameworks/XADMaster.framework/Versions/A/XADMaster to /Applications/OmniPlayerStore.app/Contents/Frameworks/XADMaster.framework/Versions/A/XADMaster的副本&#xA;2. sudo insert_dylib /Users/qiuchenly/...YOUR...FILE...PATH...!!!.../libInlineInjectPlugin.dylib /Applications/OmniPlayerStore.app/Contents/Frameworks/XADMaster.framework/Versions/A/XADMaster的副本 /Applications/OmniPlayerStore.app/Contents/Frameworks/XADMaster.framework/Versions/A/XADMaster&#xA;3. ok.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;这是一个我接触MacBook就开始眼馋的App。因为当时刚出来一代的时候AppStore霸榜第一的实力足以让我垂涎欲滴。&#xA;1. Copy the file /Applications/BestZip 2.app/Contents/Frameworks/JSONModel.framework/Versions/A/JSONModel to /Applications/BestZip 2.app/Contents/Frameworks/JSONModel.framework/Versions/A/JSONModel的副本&#xA;2. ```sudo insert_dylib /Users/qiuchenly/...YOUR...PATH...!!!!.../libInlineInjectPlugin.dylib /Applications/BestZip\ 2.app/Contents/Frameworks/JSONModel.framework/Versions/A/JSONModel的副本 /Applications/BestZip\ 2.app/Contents/Frameworks/JSONModel.framework/Versions/A/JSONModel```&#xA;3. Ok.Open it and read activation&#39;s from Preference.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/UlyssesMac.app/Contents/Frameworks/KissXML.framework/Versions/A/KissXML to /Applications/UlyssesMac.app/Contents/Frameworks/KissXML.framework/Versions/A/KissXML\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. modify some javascript.&#xA;2. about crack the app more infomation pls read it: https://www.52pojie.cn/thread-1695324-1-1.html.&#xA;3. The asar file so big, i can&#39;t upload it.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^app_cleaner_uninstaller]: App Cleaner &amp;amp; Uninstaller&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/App Cleaner 8.app/Contents/Frameworks/NektonyFallManager.framework/Versions/A/NektonyFallManager to /Applications/App Cleaner 8.app/Contents/Frameworks/NektonyFallManager.framework/Versions/A/NektonyFallManager\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^mwebpro]: MWeb Pro&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/MWeb Pro.app/Contents/Frameworks/Sparkle.framework/Versions/B/Sparkle to /Applications/MWeb Pro.app/Contents/Frameworks/Sparkle.framework/Versions/B/Sparkle\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/PopClip.app/Contents/Frameworks/ShortcutRecorder.framework/Versions/A/ShortcutRecorder to /Applications/PopClip.app/Contents/Frameworks/ShortcutRecorder.framework/Versions/A/ShortcutRecorder\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^ishot]: iShot Pro&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/iShot.app/Contents/Frameworks/PTHotKey.framework/Versions/A/PTHotKey to /Applications/iShot.app/Contents/Frameworks/PTHotKey.framework/Versions/A/PTHotKey\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/AutoSwitchInput.app/Contents/Frameworks/PTHotKey.framework/Versions/A/PTHotKey to /Applications/AutoSwitchInput.app/Contents/Frameworks/PTHotKey.framework/Versions/A/PTHotKey\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy /Applications/iRightMouse.app/Contents/MacOS/iRightMouse to /Applications/iRightMouse.app/Contents/MacOS/iRightMouse\_副本&#xA;2. ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^omi_recording_pro]: Omi 录屏专家&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Clear Permission: tccutil reset ScreenCapture com.mac.utility.screen.recorder&#xA;2. Download App from Mac App Store.&#xA;3. copy /Applications/OmniRecorder.app/Contents/MacOS/OmniRecorder to /Applications/OmniRecorder.app/Contents/MacOS/OmniRecorder\_副本.&#xA;4. Execute the code:&#xA;   ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;   &amp;lt;your*xxx*副本*file&amp;gt; is /Applications/OmniRecorder.app/Contents/MacOS/OmniRecorder*副本&#xA;   &amp;lt;your_xxx_file&amp;gt; is /Applications/OmniRecorder.app/Contents/MacOS/OmniRecorder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^record_it_pro]: Record it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. extract app from &#34;Record it.zip&#34;&#xA;2. copy to application folder.&#xA;3. codesign yourself.&#xA;   sudo codesign -f -s - --timestamp=none /Applications/Record it.app&#xA;&#xA;4. if you won&#39;t get Recording Screen Permission, Terminate execute:&#xA;   tccutil reset ScreenCapture&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^bandizip365]: Bandizip365 Crack&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Download App from Mac App Store.&#xA;2. Copy the file /Applications/Bandizip365.app/Contents/MacOS/Bandizip365 to /Applications/Bandizip365.app/Contents/MacOS/Bandizip365\_副本.&#xA;3. Execute the code:&#xA;   ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;   &amp;lt;your*xxx*副本*file&amp;gt; is /Applications/Bandizip365.app/Contents/MacOS/Bandizip365*副本&#xA;   &amp;lt;your_xxx_file&amp;gt; is /Applications/Bandizip365.app/Contents/MacOS/Bandizip365&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^plistedit_pro]: PlistEdit Pro&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. In Terminal execute the code for your self sign:&#xA;   `bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;sudo codesign -f -s - --timestamp=none /Applications/PlistEdit Pro.app ` YOU CAN USE IT:&#34;PlistEdit Pro v1.10b1.zip&#34; extract copy to &#34;Applications&#34; and &#34;codesign -f -s - --timestamp=none /Applications/PlistEdit Pro.app&#34;, you get it!&lt;/p&gt; &#xA;&lt;p&gt;[^macs_fan_control]: Macs Fan Control&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. copy &#34;/Applications/Macs Fan Control.app/Contents/Frameworks/QtMacExtras.framework/Versions/5/QtMacExtras&#34; file to &#34;/Applications/Macs Fan Control.app/Contents/Frameworks/QtMacExtras.framework/Versions/5/QtMacExtras\_副本&#34;.&#xA;2. in Terminal execute the code for your self sign:&#xA;   ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib /Applications/Macs Fan Control.app/Contents/Frameworks/QtMacExtras.framework/Versions/5/QtMacExtras_副本 /Applications/Macs Fan Control.app/Contents/Frameworks/QtMacExtras.framework/Versions/5/QtMacExtras&#xA;   ```&#xA;3. Crack Over!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^sublimetext]: Sublime Text Dev v4148 Crack&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Target File: /Applications/Sublime Text.app/Contents/MacOS/sublime_text&#xA;&#xA;Crack Point: `verify_signature(std::__1::basic_string&amp;lt;char, std::__1::char_traits&amp;lt;char&amp;gt;, std::__1::allocator&amp;lt;char&amp;gt;&amp;gt; const&amp;amp;, std::__1::basic_string&amp;lt;char, std::__1::char_traits&amp;lt;char&amp;gt;, std::__1::allocator&amp;lt;char&amp;gt;&amp;gt; const&amp;amp;, std::__1::basic_string&amp;lt;char, std::__1::char_traits&amp;lt;char&amp;gt;, std::__1::allocator&amp;lt;char&amp;gt;&amp;gt; const&amp;amp;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;_&lt;em&gt;Z16verify_signatureRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_S7&lt;/em&gt; proc near`&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Copy And Backup the file.&#xA;2. Open &#39;sublime_text&#39; file use &#39;Hex Friends&#39;,find:&#xA;    0249FFC6 EBE15B41 5C415E41 5F5DC355 4889E5&#xA;3. Replace The Hashcode with: &#xA;    0249FFC6 EBE15B41 5C415E41 5F5DC36A 0158C3&#xA;&#xA;    ![](./Sublime%20Text%204147.png)&#xA;    &#xA;4. Open Sublime Text v4147, input the fake Licence get activation:&#xA;&#xA;    ```&#xA;    ----- BEGIN LICENSE -----&#xA;    秋城落叶@52pojie.com&#xA;    Unlimited User License&#xA;    EA7E-8888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    88888888888888888888888888888888&#xA;    ------ END LICENSE ------&#xA;    ```&#xA;5. [Maybe Not Need]in Terminal execute the code for your self sign&#xA;   ```bash&#xA;   sudo codesign -f -s - --timestamp=none /Applications/Sublime\ Text.app&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^cmm]: Clean My Mac Crack&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. First copy the Announcements to Announcements\_副本&#xA;2. Download app from website, normal install, open and upgrade to latest test version.&#xA;3. just run command in Terminal:&#xA;   ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;   &amp;lt;your*xxx*副本*file&amp;gt; is /Applications/CleanMyMac\ X.app/Contents/Frameworks/Announcements.framework/Versions/A/Announcements*副本&#xA;   &amp;lt;your_xxx_file&amp;gt; is /Applications/CleanMyMac\ X.app/Contents/Frameworks/Announcements.framework/Versions/A/Announcements&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^omi_ntfs]: Omi NTFS 磁盘专家&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. First copy the /Applications/OmniRecorder.app/Contents/MacOS/OmniRecorder to /Applications/OmniRecorder.app/Contents/MacOS/OmniRecorder\_副本&#xA;2. Download app from website, normal install, open and upgrade to latest test version.&#xA;3. just run command in Terminal:&#xA;   ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[^fig_player]: Fig Player&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. First copy the /Applications/PotPlayerX.app/Contents/Frameworks/XADMaster.framework/Versions/A/XADMaster to /Applications/PotPlayerX.app/Contents/Frameworks/XADMaster.framework/Versions/A/XADMaster\_副本&#xA;2. Download app from website, normal install, open and upgrade to latest test version.&#xA;3. just run command in Terminal:&#xA;   ```bash&#xA;   sudo insert_dylib libInlineInjectPlugin.dylib &amp;lt;your_xxx_副本_file&amp;gt; &amp;lt;your_xxx_file&amp;gt;&#xA;   ```&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>armbian/build</title>
    <updated>2023-05-14T02:04:13Z</updated>
    <id>tag:github.com,2023-05-14:/armbian/build</id>
    <link href="https://github.com/armbian/build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Armbian Linux Build Framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#build-framework&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/armbian/build/main/.github/armbian-logo.png&#34; alt=&#34;Armbian logo&#34; width=&#34;144&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;strong&gt;Armbian Linux Build Framework&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h3&gt; $${\color{black}NEXT\space \color{red}gen}$$ &lt;/h3&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#what-this-project-does&#34;&gt;What this project does?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#compare-with-industry-standards&#34;&gt;Compare with industry standards&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#download-prebuilt-images&#34;&gt;Download prebuilt images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#project-structure&#34;&gt;Project structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#armbian-partners&#34;&gt;Partners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What this project does?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Builds custom kernel, image or a distribution optimized for low resource hardware,&lt;/li&gt; &#xA; &lt;li&gt;Include filesystem generation, low-level control software, kernel image and bootloader compilation,&lt;/li&gt; &#xA; &lt;li&gt;Provides a consistent user experience by keeping system standards across different platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Basic requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;x86_64 or aarch64 machine with at least 2GB of memory and ~35GB of disk space for a virtual machine, &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL2&lt;/a&gt;, container or bare metal installation&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu Jammy 22.04.x amd64 or aarch64 for native building or any Docker capable amd64 / aarch64 Linux for containerised&lt;/li&gt; &#xA; &lt;li&gt;Superuser rights (configured sudo or root access).&lt;/li&gt; &#xA; &lt;li&gt;Make sure all your system components are up-to-date. Outdated Docker binaries for example can cause troubles.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Simply start with the build script&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get -y install git&#xA;git clone --depth=1 --branch=main https://github.com/armbian/build&#xA;cd build&#xA;./compile.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/armbian/build/main/#how-to-build-an-image-or-a-kernel&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/armbian/build/main/.github/README.gif&#34; alt=&#34;Armbian logo&#34; width=&#34;100%&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Interactive graphical interface.&lt;/li&gt; &#xA; &lt;li&gt;The workspace will be prepared by installing the necessary dependencies and sources.&lt;/li&gt; &#xA; &lt;li&gt;It guides the entire process until a kernel package or ready-to-use image of the SD card is created.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build parameter examples&lt;/h3&gt; &#xA;&lt;p&gt;Show work in progress areas in interactive mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./compile.sh EXPERT=&#34;yes&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build minimal CLI Armbian Focal image for Orangepi Zero. Use modern kernel and write image to the SD card:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./compile.sh \&#xA;BOARD=orangepizero \&#xA;BRANCH=current \&#xA;RELEASE=focal \&#xA;BUILD_MINIMAL=yes \&#xA;BUILD_DESKTOP=no \&#xA;KERNEL_ONLY=no \&#xA;KERNEL_CONFIGURE=no \&#xA;CARD_DEVICE=&#34;/dev/sdX&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Developer-Guide_Build-Preparation/&#34;&gt;Building Armbian&lt;/a&gt; — how to start, how to automate;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Developer-Guide_Build-Options/&#34;&gt;Build options&lt;/a&gt; — all build options;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Developer-Guide_User-Configurations/&#34;&gt;User configuration&lt;/a&gt; — how to add packages, patches and override sources config;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download prebuilt images&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;quarterly released &lt;strong&gt;supported&lt;/strong&gt; builds — &lt;a href=&#34;https://www.armbian.com/download&#34;&gt;https://www.armbian.com/download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;weekly released &lt;strong&gt;unsupported&lt;/strong&gt; community builds — &lt;a href=&#34;https://github.com/armbian/community&#34;&gt;https://github.com/armbian/community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;upon code change &lt;strong&gt;unsupported&lt;/strong&gt; development builds — &lt;a href=&#34;https://github.com/armbian/build/releases&#34;&gt;https://github.com/armbian/build/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compare with industry standards&lt;/h2&gt; &#xA;&lt;p&gt;Check similarity, advantages and disadvantages compared with leading industry standard build software.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Armbian&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Yocto&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Buildroot&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Target&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;general purpose&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;embedded&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;embedded / IOT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;U-boot and kernel&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;compiled from sources&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;compiled from sources&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;compiled from sources&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Board support maintenance &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;complete&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;outside&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;outside&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Root file system&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Debian or Ubuntu based&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;custom&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;custom&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Package manager&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;APT&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;none&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Configurability&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;limited&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;large&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;large&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Initramfs support&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Getting started&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;quick&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;very slow&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;slow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Cross compilation&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;├── cache                                Work / cache directory&#xA;│&amp;nbsp;&amp;nbsp; ├── aptcache                         Packages&#xA;│&amp;nbsp;&amp;nbsp; ├── ccache                           C/C++ compiler&#xA;│&amp;nbsp;&amp;nbsp; ├── docker                           Docker last pull&#xA;│&amp;nbsp;&amp;nbsp; ├── git-bare                         Minimal Git&#xA;│&amp;nbsp;&amp;nbsp; ├── git-bundles                      Full Git&#xA;│&amp;nbsp;&amp;nbsp; ├── initrd                           Ram disk&#xA;│&amp;nbsp;&amp;nbsp; ├── memoize                          Git status&#xA;│&amp;nbsp;&amp;nbsp; ├── patch                            Kernel drivers patch&#xA;│&amp;nbsp;&amp;nbsp; ├── pip                              Python&#xA;│&amp;nbsp;&amp;nbsp; ├── rootfs                           Compressed userspaces&#xA;│&amp;nbsp;&amp;nbsp; ├── sources                          Kernel, u-boot and other sources&#xA;│&amp;nbsp;&amp;nbsp; ├── tools                            Additional tools like ORAS&#xA;│&amp;nbsp;&amp;nbsp; └── utility&#xA;├── config                               Packages repository configurations&#xA;│&amp;nbsp;&amp;nbsp; ├── targets.conf                     Board build target configuration&#xA;│&amp;nbsp;&amp;nbsp; ├── boards                           Board configurations&#xA;│&amp;nbsp;&amp;nbsp; ├── bootenv                          Initial boot loaders environments per family&#xA;│&amp;nbsp;&amp;nbsp; ├── bootscripts                      Initial Boot loaders scripts per family&#xA;│&amp;nbsp;&amp;nbsp; ├── cli                              CLI packages configurations per distribution&#xA;│&amp;nbsp;&amp;nbsp; ├── desktop                          Desktop packages configurations per distribution&#xA;│&amp;nbsp;&amp;nbsp; ├── distributions                    Distributions settings&#xA;│&amp;nbsp;&amp;nbsp; ├── kernel                           Kernel build configurations per family&#xA;│&amp;nbsp;&amp;nbsp; ├── sources                          Kernel and u-boot sources locations and scripts&#xA;│&amp;nbsp;&amp;nbsp; ├── templates                        User configuration templates which populate userpatches&#xA;│&amp;nbsp;&amp;nbsp; └── torrents                         External compiler and rootfs cache torrents&#xA;├── extensions                           Extend build system with specific functionality&#xA;├── lib                                  Main build framework libraries&#xA;│&amp;nbsp;&amp;nbsp; ├── functions&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── artifacts&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── bsp&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── cli&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── compilation&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── configuration&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── general&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── host&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── image&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── logging&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── main&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── rootfs&#xA;│&amp;nbsp;&amp;nbsp; └── tools&#xA;├── output                               Build artifact&#xA;│&amp;nbsp;&amp;nbsp; └── deb                              Deb packages&#xA;│&amp;nbsp;&amp;nbsp; └── images                           Bootable images - RAW or compressed&#xA;│&amp;nbsp;&amp;nbsp; └── debug                            Patch and build logs&#xA;│&amp;nbsp;&amp;nbsp; └── config                           Kernel configuration export location&#xA;│&amp;nbsp;&amp;nbsp; └── patch                            Created patches location&#xA;├── packages                             Support scripts, binary blobs, packages&#xA;│&amp;nbsp;&amp;nbsp; ├── blobs                            Wallpapers, various configs, closed source bootloaders&#xA;│&amp;nbsp;&amp;nbsp; ├── bsp-cli                          Automatically added to armbian-bsp-cli package&#xA;│&amp;nbsp;&amp;nbsp; ├── bsp-desktop                      Automatically added to armbian-bsp-desktopo package&#xA;│&amp;nbsp;&amp;nbsp; ├── bsp                              Scripts and configs overlay for rootfs&#xA;│&amp;nbsp;&amp;nbsp; └── extras-buildpkgs                 Optional compilation and packaging engine&#xA;├── patch                                Collection of patches&#xA;│&amp;nbsp;&amp;nbsp; ├── atf                              ARM trusted firmware&#xA;│&amp;nbsp;&amp;nbsp; ├── kernel                           Linux kernel patches&#xA;|   |&amp;nbsp;&amp;nbsp; └── family-branch                Per kernel family and branch&#xA;│&amp;nbsp;&amp;nbsp; ├── misc                             Linux kernel packaging patches&#xA;│&amp;nbsp;&amp;nbsp; └── u-boot                           Universal boot loader patches&#xA;|       ├── u-boot-board                 For specific board&#xA;|    &amp;nbsp;&amp;nbsp; └── u-boot-family                For entire kernel family&#xA;├── tools                                Tools for dealing with kernel patches and configs&#xA;└── userpatches                          User: configuration patching area&#xA;    ├── lib.config                       User: framework common config/override file&#xA;    ├── config-default.conf              User: default user config file&#xA;    ├── customize-image.sh               User: script will execute just before closing the image&#xA; &amp;nbsp;&amp;nbsp; ├── atf                              User: ARM trusted firmware&#xA; &amp;nbsp;&amp;nbsp; ├── kernel                           User: Linux kernel per kernel family&#xA; &amp;nbsp;&amp;nbsp; ├── misc                             User: various&#xA; &amp;nbsp;&amp;nbsp; └── u-boot                           User: universal boot loader patches&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🙌 Contribution&lt;/h2&gt; &#xA;&lt;h3&gt;You don&#39;t need to be a programmer to help!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The easiest way to help is by &#34;Starring&#34; our repository - it helps more people find our code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/staffapplications/&#34;&gt;Check out our list of volunteer positions&lt;/a&gt; and choose what you want to do ❤️&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/topic/4198-seed-our-torrents/&#34;&gt;Seed torrents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Help with &lt;a href=&#34;https://forum.armbian.com/topic/12631-help-on-forum-moderating/&#34;&gt;forum moderating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/forum/39-armbian-project-administration/&#34;&gt;Project administration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.armbian.com/donate&#34;&gt;Donate&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Want to become a maintainer?&lt;/h3&gt; &#xA;&lt;p&gt;Please review the &lt;a href=&#34;https://docs.armbian.com/Board_Maintainers_Procedures_and_Guidelines/&#34;&gt;Board Maintainers Procedures and Guidelines&lt;/a&gt; and if you can meet the requirements as well as find a board on the &lt;a href=&#34;https://docs.armbian.com/Release_Board-Maintainers/&#34;&gt;Board Maintainers&lt;/a&gt; list which has less than 2 maintainers, then please apply using the linked form.&lt;/p&gt; &#xA;&lt;h3&gt;Want to become a developer?&lt;/h3&gt; &#xA;&lt;p&gt;If you want to help with development, you should first review the &lt;a href=&#34;https://docs.armbian.com/Development-Code_Review_Procedures_and_Guidelines/&#34;&gt;Development Code Review Procedures and Guidelines&lt;/a&gt; and then you can review the pre-made Jira dashboards and additional resources provided below to find open tasks and how you can assist:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/build/pulls?q=is%3Apr+is%3Aopen+review%3Arequired&#34;&gt;pull requests that needs a review&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;dashboard for &lt;a href=&#34;https://armbian.atlassian.net/jira/dashboards/10000&#34;&gt;junior&lt;/a&gt; and &lt;a href=&#34;https://armbian.atlassian.net/jira/dashboards/10103&#34;&gt;seniors&lt;/a&gt; developers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.armbian.com/Process_CI/&#34;&gt;continuous integration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Support is provided in one of two ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For commercial or prioritized assistance: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;book a an hour of &lt;a href=&#34;https://calendly.com/armbian/consultation&#34;&gt;professional consultation&lt;/a&gt;,&lt;/li&gt; &#xA;   &lt;li&gt;consider becoming a project partner. Reach us out at &lt;a href=&#34;https://armbian.com/contact&#34;&gt;https://armbian.com/contact&lt;/a&gt;,&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Alternatively free support is provided via &lt;a href=&#34;https://www.armbian.com/search&#34;&gt;general project search engine&lt;/a&gt;, &lt;a href=&#34;https://docs.armbian.com&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://forum.armbian.com/&#34;&gt;community forums&lt;/a&gt; or &lt;a href=&#34;https://docs.armbian.com/Community_IRC/&#34;&gt;IRC/Discord&lt;/a&gt;. Keep in mind this is mostly provided by our awesome community members in a &lt;strong&gt;best effort&lt;/strong&gt; manner and therefore there are no guaranteed solutions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com&#34;&gt;Forums&lt;/a&gt; for Participate in Armbian&lt;/li&gt; &#xA; &lt;li&gt;IRC: &lt;code&gt;#armbian&lt;/code&gt; on Libera.chat&lt;/li&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://discord.gg/armbian&#34;&gt;https://discord.gg/armbian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://twitter.com/armbian&#34;&gt;@armbian&lt;/a&gt; on Twitter, &lt;a href=&#34;https://fosstodon.org/@armbian&#34;&gt;Fosstodon&lt;/a&gt; or &lt;a href=&#34;https://www.linkedin.com/company/armbian&#34;&gt;LinkedIn&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bugs: &lt;a href=&#34;https://github.com/armbian/build/issues&#34;&gt;issues&lt;/a&gt; / &lt;a href=&#34;https://armbian.atlassian.net/jira/dashboards/10000&#34;&gt;JIRA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Office hours: &lt;a href=&#34;https://calendly.com/armbian/office-hours&#34;&gt;Wednesday, 12 midday, 18 afternoon, CET&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed Armbian!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/armbian/build/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=armbian/build&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Also&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/armbian/build/graphs/contributors&#34;&gt;Current and past contributors&lt;/a&gt;, our families and friends.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/members/2-moderators/&#34;&gt;Support staff&lt;/a&gt; that keeps forums usable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://armbian.com/authors&#34;&gt;Friends and individuals&lt;/a&gt; who support us with resources and their time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/&#34;&gt;The Armbian Community&lt;/a&gt; that helps with their ideas, reports and &lt;a href=&#34;https://www.armbian.com/donate&#34;&gt;donations&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Armbian Partners&lt;/h2&gt; &#xA;&lt;p&gt;Armbian&#39;s partnership program helps to support Armbian and the Armbian community! Please take a moment to familiarize yourself with our Partners:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://armbian.com/partners&#34;&gt;Click here to visit our Partners page!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.armbian.com/subscriptions&#34;&gt;How can I become a Partner?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#armbian/build&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=armbian/build&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is published under the GPL-2.0 License license.&lt;/p&gt;</summary>
  </entry>
</feed>