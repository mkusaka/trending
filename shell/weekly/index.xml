<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-10T02:05:14Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CISOfy/lynis</title>
    <updated>2023-09-10T02:05:14Z</updated>
    <id>tag:github.com,2023-09-10:/CISOfy/lynis</id>
    <link href="https://github.com/CISOfy/lynis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lynis - Security auditing tool for Linux, macOS, and UNIX-based systems. Assists with compliance testing (HIPAA/ISO27001/PCI DSS) and system hardening. Agentless, and installation optional.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxsecurity.expert/tools/lynis/&#34;&gt;&lt;img src=&#34;https://badges.linuxsecurity.expert/tools/ranking/lynis.svg?sanitize=true&#34; alt=&#34;Linux Security Expert badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/CISOfy/lynis&#34;&gt;&lt;img src=&#34;https://travis-ci.org/CISOfy/lynis.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/96&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/96/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cisofy.com/documentation/lynis/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Do you like this software? &lt;strong&gt;Star the project&lt;/strong&gt; and become a &lt;a href=&#34;https://github.com/CISOfy/lynis/stargazers&#34;&gt;stargazer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;lynis&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Lynis - Security auditing and hardening tool, for UNIX-based systems.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Lynis is a security auditing tool for systems based on UNIX like Linux, macOS, BSD, and others. It performs an &lt;strong&gt;in-depth security scan&lt;/strong&gt; and runs on the system itself. The primary goal is to test security defenses and &lt;strong&gt;provide tips for further system hardening&lt;/strong&gt;. It will also scan for general system information, vulnerable software packages, and possible configuration issues. Lynis was commonly used by system administrators and auditors to assess the security defenses of their systems. Besides the &#34;blue team,&#34; nowadays penetration testers also have Lynis in their toolkit.&lt;/p&gt; &#xA;&lt;p&gt;We believe software should be &lt;strong&gt;simple&lt;/strong&gt;, &lt;strong&gt;updated on a regular basis&lt;/strong&gt;, and &lt;strong&gt;open&lt;/strong&gt;. You should be able to trust, understand, and have the option to change the software. Many agree with us, as the software is being used by thousands every day to protect their systems.&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;p&gt;The main goals are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automated security auditing&lt;/li&gt; &#xA; &lt;li&gt;Compliance testing (e.g. ISO27001, PCI-DSS, HIPAA)&lt;/li&gt; &#xA; &lt;li&gt;Vulnerability detection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The software (also) assists with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration and asset management&lt;/li&gt; &#xA; &lt;li&gt;Software patch management&lt;/li&gt; &#xA; &lt;li&gt;System hardening&lt;/li&gt; &#xA; &lt;li&gt;Penetration testing (privilege escalation)&lt;/li&gt; &#xA; &lt;li&gt;Intrusion detection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Audience&lt;/h3&gt; &#xA;&lt;p&gt;Typical users of the software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;System administrators&lt;/li&gt; &#xA; &lt;li&gt;Auditors&lt;/li&gt; &#xA; &lt;li&gt;Security officers&lt;/li&gt; &#xA; &lt;li&gt;Penetration testers&lt;/li&gt; &#xA; &lt;li&gt;Security professionals&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are multiple options available to install Lynis.&lt;/p&gt; &#xA;&lt;h3&gt;Software Package&lt;/h3&gt; &#xA;&lt;p&gt;For systems running Linux, BSD, and macOS, there is typically a package available. This is the preferred method of obtaining Lynis, as it is quick to install and easy to update. The Lynis project itself also provides &lt;a href=&#34;https://packages.cisofy.com/&#34;&gt;packages&lt;/a&gt; in RPM or DEB format suitable for systems systems running: &lt;code&gt;CentOS&lt;/code&gt;, &lt;code&gt;Debian&lt;/code&gt;, &lt;code&gt;Fedora&lt;/code&gt;, &lt;code&gt;OEL&lt;/code&gt;, &lt;code&gt;openSUSE&lt;/code&gt;, &lt;code&gt;RHEL&lt;/code&gt;, &lt;code&gt;Ubuntu&lt;/code&gt;, and others.&lt;/p&gt; &#xA;&lt;p&gt;Some distributions may also have Lynis in their software repository: &lt;a href=&#34;https://repology.org/project/lynis/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/lynis.svg?sanitize=true&#34; alt=&#34;Repology&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: Some distributions don&#39;t provide an up-to-date version. In that case it is better to use the CISOfy software repository, download the tarball from the website, or download the latest GitHub release.&lt;/p&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;p&gt;The very latest developments can be obtained via git.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone or download the project files (&lt;strong&gt;no compilation nor installation&lt;/strong&gt; is required) ;&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CISOfy/lynis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Execute:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; cd lynis &amp;amp;&amp;amp; ./lynis audit system&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want to run the software as &lt;code&gt;root&lt;/code&gt; (or sudo), we suggest changing the ownership of the files. Use &lt;code&gt;chown -R 0:0&lt;/code&gt; to recursively alter the owner and group and set it to user ID &lt;code&gt;0&lt;/code&gt; (&lt;code&gt;root&lt;/code&gt;). Otherwise Lynis will warn you about the file permissions. After all, you are executing files owned by a non-privileged user.&lt;/p&gt; &#xA;&lt;h3&gt;Enterprise Version&lt;/h3&gt; &#xA;&lt;p&gt;This software component is also part of an enterprise solution. Same quality, yet with more functionality.&lt;/p&gt; &#xA;&lt;p&gt;Focus areas include compliance (&lt;code&gt;PCI DSS&lt;/code&gt;, &lt;code&gt;HIPAA&lt;/code&gt;, &lt;code&gt;ISO27001&lt;/code&gt;, and others). The Enterprise version comes with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a web interface;&lt;/li&gt; &#xA; &lt;li&gt;dashboard and reporting;&lt;/li&gt; &#xA; &lt;li&gt;hardening snippets;&lt;/li&gt; &#xA; &lt;li&gt;improvement plan (based on risk);&lt;/li&gt; &#xA; &lt;li&gt;commercial support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation: &lt;a href=&#34;https://cisofy.com/documentation/lynis/&#34;&gt;https://cisofy.com/documentation/lynis/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;If you want to create your own tests, have a look at the &lt;a href=&#34;https://github.com/CISOfy/lynis-sdk&#34;&gt;Lynis software development kit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;We participate in the &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/96&#34;&gt;CII best practices&lt;/a&gt; badge program of the Linux Foundation.&lt;/p&gt; &#xA;&lt;h2&gt;Media and Awards&lt;/h2&gt; &#xA;&lt;p&gt;Lynis is collecting some awards along the way and we are proud of that.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;2016&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.infoworld.com/article/3121251/open-source-tools/bossie-awards-2016-the-best-open-source-networking-and-security-software.html#slide13&#34;&gt;Best of Open Source Software Awards 2016&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Article by TechRepublic, considering Lynis a &#34;must-have&#34; tool: &lt;a href=&#34;http://www.techrepublic.com/article/how-to-quickly-audit-a-linux-system-from-the-command-line/&#34;&gt;How to quickly audit a Linux system from the command line&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.toolswatch.org/2017/02/2016-top-security-tools-as-voted-by-toolswatch-org-readers/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/toptools/2016.svg?sanitize=true&#34; alt=&#34;ToolsWatch Best Tools (top 10)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2015&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.toolswatch.org/2016/02/2015-top-security-tools-as-voted-by-toolswatch-org-readers/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/toptools/2015.svg?sanitize=true&#34; alt=&#34;ToolsWatch Best Tools (second place)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.idgenterprise.com/news/press-release/infoworld-announces-the-2015-best-of-open-source-software-awards/&#34;&gt;Best of Open Source Software Awards 2015&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2014&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.toolswatch.org/2015/01/2014-top-security-tools-as-voted-by-toolswatch-org-readers/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/toptools/2014.svg?sanitize=true&#34; alt=&#34;ToolsWatch Best Tools (third place)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2013&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.toolswatch.org/2013/12/2013-top-security-tools-as-voted-by-toolswatch-org-readers/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/toptools/2013.svg?sanitize=true&#34; alt=&#34;ToolsWatch Best Tools (sixth place)&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We love contributors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Do you have something to share? Want to help out with translating Lynis into your own language? Create an issue or pull request on GitHub, or send us an e-mail: &lt;a href=&#34;mailto:lynis-dev@cisofy.com&#34;&gt;lynis-dev@cisofy.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More details can be found in the &lt;a href=&#34;https://github.com/CISOfy/lynis/raw/master/CONTRIBUTING.md&#34;&gt;Contributors Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also simply contribute to the project by &lt;em&gt;starring&lt;/em&gt; the project and show your appreciation that way.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;GPLv3&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>mdn/curriculum</title>
    <updated>2023-09-10T02:05:14Z</updated>
    <id>tag:github.com,2023-09-10:/mdn/curriculum</id>
    <link href="https://github.com/mdn/curriculum" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MDN front-end developer curriculum&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the MDN front-end developer curriculum&lt;/h1&gt; &#xA;&lt;p&gt;The MDN front-end developer curriculum is intended to provide an up-to-date industry recommendation for the key fundamental skills and knowledge that a front-end web developer should have, including the mindset and attitude required for securing a job and for long-term success in this field. This repository has been created to give the web community an understanding of the curriculum&#39;s purpose and target audience, an early preview of its content, and a chance to give &lt;a href=&#34;https://raw.githubusercontent.com/mdn/curriculum/main/#providing-feedback&#34;&gt;feedback&lt;/a&gt; on it. Please let us know what you think!&lt;/p&gt; &#xA;&lt;h2&gt;Rationale&lt;/h2&gt; &#xA;&lt;p&gt;The curriculum is an outcome of a research project conducted by the MDN team in early 2023. We asked students, new web developers, technical hiring managers, and web education professionals about their expectations around learning front-end web development — on MDN and elsewhere. The key outcomes of this research were:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Students expect more structured guidance on what topics to learn and when.&lt;/li&gt; &#xA; &lt;li&gt;All groups cited a lack of &#34;soft skills&#34; (like teamwork, research, and critical thinking) and knowledge of best practices (such as accessibility and privacy) in potential new hires as key problems in the industry.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Part of our focus for 2023 is on making MDN a resource where people can learn new skills, as well as look up reference material. Back in 2019, we launched the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn&#34;&gt;Learning Area&lt;/a&gt; on MDN to help people learn the basics of front-end development. With a lot of useful content published to date, this part of MDN has proven to be successful — it averages around 10% of MDN page views. However, we feel that it needs to be supplemented with stronger guidance on what new front-end devs should learn, and in what order, to be successful in the web industry. The curriculum represents a first step towards this goal.&lt;/p&gt; &#xA;&lt;h2&gt;Target audience and purpose&lt;/h2&gt; &#xA;&lt;p&gt;We believe the curriculum is useful to several different groups of people, from students wanting to learn web development to educators wanting to put together courses to teach it. Head over to the &lt;a href=&#34;https://raw.githubusercontent.com/mdn/curriculum/main/curriculum&#34;&gt;curriculum introduction&lt;/a&gt; to read more about its target audience and purpose.&lt;/p&gt; &#xA;&lt;h2&gt;Curriculum structure&lt;/h2&gt; &#xA;&lt;p&gt;We have structured the curriculum as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdn/curriculum/main/curriculum/1-precursor&#34;&gt;Precursor knowledge&lt;/a&gt;: Topics that are not, strictly speaking, web development topics but do constitute useful topics for anyone wanting to learn front-end web development. This includes soft skills and knowledge of a typical development environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdn/curriculum/main/curriculum/2-core&#34;&gt;Core modules&lt;/a&gt;: Topics that we feel every web developer should have a good grounding in. This includes all the information they need to design and build a basic, accessible website/app that follows modern best practices, and manage and deploy their code using a tool like GitHub.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mdn/curriculum/main/curriculum/3-extensions&#34;&gt;Optional extension modules&lt;/a&gt;: These &#34;extension&#34; topics constitute useful additional skills to learn as web developers start to expand their knowledge and develop specialisms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get started by heading over to the main &lt;a href=&#34;https://raw.githubusercontent.com/mdn/curriculum/main/TOC.md&#34;&gt;table of contents&lt;/a&gt; to see a granular overview of the included topics, and start exploring the content.&lt;/p&gt; &#xA;&lt;h2&gt;Providing feedback&lt;/h2&gt; &#xA;&lt;p&gt;We would love to hear your feedback regarding our curriculum. To do so, please open an issue — &lt;a href=&#34;https://github.com/mdn/curriculum/issues/new/choose&#34;&gt;leave your feedback under General feedback or Topic coverage&lt;/a&gt;. When doing so, think about the following questions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does our curriculum contain all the fundamental knowledge a front-end web developer needs? If not, what topics are we missing? We are interested in high-level concerns (for example, &#34;this whole area is missing&#34;) as well as lower-level feedback (for example, specific CSS or JavaScript topic omissions).&lt;/li&gt; &#xA; &lt;li&gt;Do you think the curriculum is helpful to its key target audiences, for example, students wanting to learn front-end development and teachers wishing to create courses based on it? If not, why not?&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>angristan/openvpn-install</title>
    <updated>2023-09-10T02:05:14Z</updated>
    <id>tag:github.com,2023-09-10:/angristan/openvpn-install</id>
    <link href="https://github.com/angristan/openvpn-install" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Set up your own OpenVPN server on Debian, Ubuntu, Fedora, CentOS or Arch Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openvpn-install&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/angristan/openvpn-install/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt; &lt;img src=&#34;https://github.com/angristan/openvpn-install/workflows/Lint/badge.svg?sanitize=true&#34; alt=&#34;Lint&#34;&gt; &lt;a href=&#34;https://saythanks.io/to/angristan&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg?sanitize=true&#34; alt=&#34;Say Thanks!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN installer for Debian, Ubuntu, Fedora, CentOS, Arch Linux, Oracle Linux, Rocky Linux and AlmaLinux.&lt;/p&gt; &#xA;&lt;p&gt;This script will let you setup your own secure VPN server in just a few seconds.&lt;/p&gt; &#xA;&lt;p&gt;You can also check out &lt;a href=&#34;https://github.com/angristan/wireguard-install&#34;&gt;wireguard-install&lt;/a&gt;, a simple installer for a simpler, safer, faster and more modern VPN protocol.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;First, get the script and make it executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh&#xA;chmod +x openvpn-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./openvpn-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to run the script as root and have the TUN module enabled.&lt;/p&gt; &#xA;&lt;p&gt;The first time you run it, you&#39;ll have to follow the assistant and answer a few questions to setup your VPN server.&lt;/p&gt; &#xA;&lt;p&gt;When OpenVPN is installed, you can run the script again, and you will get the choice to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a client&lt;/li&gt; &#xA; &lt;li&gt;Remove a client&lt;/li&gt; &#xA; &lt;li&gt;Uninstall OpenVPN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In your home directory, you will have &lt;code&gt;.ovpn&lt;/code&gt; files. These are the client configuration files. Download them from your server and connect using your favorite OpenVPN client.&lt;/p&gt; &#xA;&lt;p&gt;If you have any question, head to the &lt;a href=&#34;https://raw.githubusercontent.com/angristan/openvpn-install/master/#faq&#34;&gt;FAQ&lt;/a&gt; first. Please read everything before opening an issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PLEASE do not send me emails or private messages asking for help.&lt;/strong&gt; The only place to get help is the issues. Other people may be able to help and in the future, other users may also run into the same issue as you. My time is not available for free just for you, you&#39;re not special.&lt;/p&gt; &#xA;&lt;h3&gt;Headless install&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s also possible to run the script headless, e.g. without waiting for user input, in an automated manner.&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;AUTO_INSTALL=y ./openvpn-install.sh&#xA;&#xA;# or&#xA;&#xA;export AUTO_INSTALL=y&#xA;./openvpn-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A default set of variables will then be set, by passing the need for user input.&lt;/p&gt; &#xA;&lt;p&gt;If you want to customise your installation, you can export them or specify them on the same line, as shown above.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;APPROVE_INSTALL=y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;APPROVE_IP=y&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IPV6_SUPPORT=n&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PORT_CHOICE=1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PROTOCOL_CHOICE=1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DNS=1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPRESSION_ENABLED=n&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CUSTOMIZE_ENC=n&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CLIENT=clientname&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PASS=1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the server is behind NAT, you can specify its endpoint with the &lt;code&gt;ENDPOINT&lt;/code&gt; variable. If the endpoint is the public IP address which it is behind, you can use &lt;code&gt;ENDPOINT=$(curl -4 ifconfig.co)&lt;/code&gt; (the script will default to this). The endpoint can be an IPv4 or a domain.&lt;/p&gt; &#xA;&lt;p&gt;Other variables can be set depending on your choice (encryption, compression). You can search for them in the &lt;code&gt;installQuestions()&lt;/code&gt; function of the script.&lt;/p&gt; &#xA;&lt;p&gt;Password-protected clients are not supported by the headless installation method since user input is expected by Easy-RSA.&lt;/p&gt; &#xA;&lt;p&gt;The headless install is more-or-less idempotent, in that it has been made safe to run multiple times with the same parameters, e.g. by a state provisioner like Ansible/Terraform/Salt/Chef/Puppet. It will only install and regenerate the Easy-RSA PKI if it doesn&#39;t already exist, and it will only install OpenVPN and other upstream dependencies if OpenVPN isn&#39;t already installed. It will recreate all local config and re-generate the client file on each headless run.&lt;/p&gt; &#xA;&lt;h3&gt;Headless User Addition&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s also possible to automate the addition of a new user. Here, the key is to provide the (string) value of the &lt;code&gt;MENU_OPTION&lt;/code&gt; variable along with the remaining mandatory variables before invoking the script.&lt;/p&gt; &#xA;&lt;p&gt;The following Bash script adds a new user &lt;code&gt;foo&lt;/code&gt; to an existing OpenVPN configuration&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;export MENU_OPTION=&#34;1&#34;&#xA;export CLIENT=&#34;foo&#34;&#xA;export PASS=&#34;1&#34;&#xA;./openvpn-install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installs and configures a ready-to-use OpenVPN server&lt;/li&gt; &#xA; &lt;li&gt;Iptables rules and forwarding managed in a seamless way&lt;/li&gt; &#xA; &lt;li&gt;If needed, the script can cleanly remove OpenVPN, including configuration and iptables rules&lt;/li&gt; &#xA; &lt;li&gt;Customisable encryption settings, enhanced default settings (see &lt;a href=&#34;https://raw.githubusercontent.com/angristan/openvpn-install/master/#security-and-encryption&#34;&gt;Security and Encryption&lt;/a&gt; below)&lt;/li&gt; &#xA; &lt;li&gt;OpenVPN 2.4 features, mainly encryption improvements (see &lt;a href=&#34;https://raw.githubusercontent.com/angristan/openvpn-install/master/#security-and-encryption&#34;&gt;Security and Encryption&lt;/a&gt; below)&lt;/li&gt; &#xA; &lt;li&gt;Variety of DNS resolvers to be pushed to the clients&lt;/li&gt; &#xA; &lt;li&gt;Choice to use a self-hosted resolver with Unbound (supports already existing Unbound installations)&lt;/li&gt; &#xA; &lt;li&gt;Choice between TCP and UDP&lt;/li&gt; &#xA; &lt;li&gt;NATed IPv6 support&lt;/li&gt; &#xA; &lt;li&gt;Compression disabled by default to prevent VORACLE. LZ4 (v1/v2) and LZ0 algorithms available otherwise.&lt;/li&gt; &#xA; &lt;li&gt;Unprivileged mode: run as &lt;code&gt;nobody&lt;/code&gt;/&lt;code&gt;nogroup&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Block DNS leaks on Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Randomised server certificate name&lt;/li&gt; &#xA; &lt;li&gt;Choice to protect clients with a password (private key encryption)&lt;/li&gt; &#xA; &lt;li&gt;Many other little things!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The script supports these Linux distributions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AlmaLinux 8&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Amazon Linux 2&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CentOS 7&lt;/td&gt; &#xA;   &lt;td&gt;✅ 🤖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CentOS Stream &amp;gt;= 8&lt;/td&gt; &#xA;   &lt;td&gt;✅ 🤖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian &amp;gt;= 10&lt;/td&gt; &#xA;   &lt;td&gt;✅ 🤖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fedora &amp;gt;= 35&lt;/td&gt; &#xA;   &lt;td&gt;✅ 🤖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oracle Linux 8&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rocky Linux 8&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu &amp;gt;= 18.04&lt;/td&gt; &#xA;   &lt;td&gt;✅ 🤖&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To be noted:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The script is regularly tested against the distributions marked with a 🤖 only. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It&#39;s only test on &lt;code&gt;amd64&lt;/code&gt; architecture.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;It should work on older versions such as Debian 8+, Ubuntu 16.04+ and previous Fedora releases. But versions not in the table above are not officially supported. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It should also support versions between the LTS versions, but these are not tested.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The script requires &lt;code&gt;systemd&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fork&lt;/h2&gt; &#xA;&lt;p&gt;This script is based on the great work of &lt;a href=&#34;https://github.com/Nyr/openvpn-install&#34;&gt;Nyr and its contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since 2016, the two scripts have diverged and are not alike anymore, especially under the hood. The main goal of the script was enhanced security. But since then, the script has been completely rewritten and a lot a features have been added. The script is only compatible with recent distributions though, so if you need to use a very old server or client, I advise using Nyr&#39;s script.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;More Q&amp;amp;A in &lt;a href=&#34;https://raw.githubusercontent.com/angristan/openvpn-install/master/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Which provider do you recommend?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I recommend these:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vultr.com/?ref=8948982-8H&#34;&gt;Vultr&lt;/a&gt;: Worldwide locations, IPv6 support, starting at $5/month&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hetzner.cloud/?ref=ywtlvZsjgeDq&#34;&gt;Hetzner&lt;/a&gt;: Germany, Finland and USA. IPv6, 20 TB of traffic, starting at 4.5€/month&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://m.do.co/c/ed0ba143fe53&#34;&gt;Digital Ocean&lt;/a&gt;: Worldwide locations, IPv6 support, starting at $4/month&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Which OpenVPN client do you recommend?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If possible, an official OpenVPN 2.4 client.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows: &lt;a href=&#34;https://openvpn.net/index.php/download/community-downloads.html&#34;&gt;The official OpenVPN community client&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Linux: The &lt;code&gt;openvpn&lt;/code&gt; package from your distribution. There is an &lt;a href=&#34;https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos&#34;&gt;official APT repository&lt;/a&gt; for Debian/Ubuntu based distributions.&lt;/li&gt; &#xA; &lt;li&gt;macOS: &lt;a href=&#34;https://tunnelblick.net/&#34;&gt;Tunnelblick&lt;/a&gt;, &lt;a href=&#34;https://www.sparklabs.com/viscosity/&#34;&gt;Viscosity&lt;/a&gt;, &lt;a href=&#34;https://openvpn.net/client-connect-vpn-for-mac-os/&#34;&gt;OpenVPN for Mac&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=de.blinkt.openvpn&#34;&gt;OpenVPN for Android&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/us/app/openvpn-connect/id590379981&#34;&gt;The official OpenVPN Connect client&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Am I safe from the NSA by using your script?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Please review your threat models. Even if this script has security in mind and uses state-of-the-art encryption, you shouldn&#39;t be using a VPN if you want to hide from the NSA.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Is there an OpenVPN documentation?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Yes, please head to the &lt;a href=&#34;https://community.openvpn.net/openvpn/wiki/Openvpn24ManPage&#34;&gt;OpenVPN Manual&lt;/a&gt;, which references all the options.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;More Q&amp;amp;A in &lt;a href=&#34;https://raw.githubusercontent.com/angristan/openvpn-install/master/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;One-stop solutions for public cloud&lt;/h2&gt; &#xA;&lt;p&gt;Solutions that provision a ready to use OpenVPN server based on this script in one go are available for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AWS using Terraform at &lt;a href=&#34;https://github.com/dumrauf/openvpn-terraform-install&#34;&gt;&lt;code&gt;openvpn-terraform-install&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Terraform AWS module &lt;a href=&#34;https://registry.terraform.io/modules/paulmarsicloud/openvpn-ephemeral/aws/latest&#34;&gt;&lt;code&gt;openvpn-ephemeral&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h2&gt;Discuss changes&lt;/h2&gt; &#xA;&lt;p&gt;Please open an issue before submitting a PR if you want to discuss a change, especially if it&#39;s a big one.&lt;/p&gt; &#xA;&lt;h3&gt;Code formatting&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;shellcheck&lt;/a&gt; and &lt;a href=&#34;https://github.com/mvdan/sh&#34;&gt;shfmt&lt;/a&gt; to enforce bash styling guidelines and good practices. They are executed for each commit / PR with GitHub Actions, so you can check the configuration &lt;a href=&#34;https://github.com/angristan/openvpn-install/raw/master/.github/workflows/push.yml&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security and Encryption&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; This has not been updated for OpenVPN 2.5 and later.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;OpenVPN&#39;s default settings are pretty weak regarding encryption. This script aims to improve that.&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN 2.4 was a great update regarding encryption. It added support for ECDSA, ECDH, AES GCM, NCP and tls-crypt.&lt;/p&gt; &#xA;&lt;p&gt;If you want more information about an option mentioned below, head to the &lt;a href=&#34;https://community.openvpn.net/openvpn/wiki/Openvpn24ManPage&#34;&gt;OpenVPN manual&lt;/a&gt;. It is very complete.&lt;/p&gt; &#xA;&lt;p&gt;Most of OpenVPN&#39;s encryption-related stuff is managed by &lt;a href=&#34;https://github.com/OpenVPN/easy-rsa&#34;&gt;Easy-RSA&lt;/a&gt;. Defaults parameters are in the &lt;a href=&#34;https://github.com/OpenVPN/easy-rsa/raw/v3.0.7/easyrsa3/vars.example&#34;&gt;vars.example&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Compression&lt;/h3&gt; &#xA;&lt;p&gt;By default, OpenVPN doesn&#39;t enable compression. This script provides support for LZ0 and LZ4 (v1/v2) algorithms, the latter being more efficient.&lt;/p&gt; &#xA;&lt;p&gt;However, it is discouraged to use compression since the &lt;a href=&#34;https://protonvpn.com/blog/voracle-attack/&#34;&gt;VORACLE attack&lt;/a&gt; makes use of it.&lt;/p&gt; &#xA;&lt;h3&gt;TLS version&lt;/h3&gt; &#xA;&lt;p&gt;OpenVPN accepts TLS 1.0 by default, which is nearly &lt;a href=&#34;https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.0&#34;&gt;20 years old&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;With &lt;code&gt;tls-version-min 1.2&lt;/code&gt; we enforce TLS 1.2, which the best protocol available currently for OpenVPN.&lt;/p&gt; &#xA;&lt;p&gt;TLS 1.2 is supported since OpenVPN 2.3.3.&lt;/p&gt; &#xA;&lt;h3&gt;Certificate&lt;/h3&gt; &#xA;&lt;p&gt;OpenVPN uses an RSA certificate with a 2048 bits key by default.&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN 2.4 added support for ECDSA. Elliptic curve cryptography is faster, lighter and more secure.&lt;/p&gt; &#xA;&lt;p&gt;This script provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ECDSA: &lt;code&gt;prime256v1&lt;/code&gt;/&lt;code&gt;secp384r1&lt;/code&gt;/&lt;code&gt;secp521r1&lt;/code&gt; curves&lt;/li&gt; &#xA; &lt;li&gt;RSA: &lt;code&gt;2048&lt;/code&gt;/&lt;code&gt;3072&lt;/code&gt;/&lt;code&gt;4096&lt;/code&gt; bits keys&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It defaults to ECDSA with &lt;code&gt;prime256v1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN uses &lt;code&gt;SHA-256&lt;/code&gt; as the signature hash by default, and so does the script. It provides no other choice as of now.&lt;/p&gt; &#xA;&lt;h3&gt;Data channel&lt;/h3&gt; &#xA;&lt;p&gt;By default, OpenVPN uses &lt;code&gt;BF-CBC&lt;/code&gt; as the data channel cipher. Blowfish is an old (1993) and weak algorithm. Even the official OpenVPN documentation admits it.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The default is BF-CBC, an abbreviation for Blowfish in Cipher Block Chaining mode.&lt;/p&gt; &#xA; &lt;p&gt;Using BF-CBC is no longer recommended, because of its 64-bit block size. This small block size allows attacks based on collisions, as demonstrated by SWEET32. See &lt;a href=&#34;https://community.openvpn.net/openvpn/wiki/SWEET32&#34;&gt;https://community.openvpn.net/openvpn/wiki/SWEET32&lt;/a&gt; for details. Security researchers at INRIA published an attack on 64-bit block ciphers, such as 3DES and Blowfish. They show that they are able to recover plaintext when the same data is sent often enough, and show how they can use cross-site scripting vulnerabilities to send data of interest often enough. This works over HTTPS, but also works for HTTP-over-OpenVPN. See &lt;a href=&#34;https://sweet32.info/&#34;&gt;https://sweet32.info/&lt;/a&gt; for a much better and more elaborate explanation.&lt;/p&gt; &#xA; &lt;p&gt;OpenVPN&#39;s default cipher, BF-CBC, is affected by this attack.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Indeed, AES is today&#39;s standard. It&#39;s the fastest and more secure cipher available today. &lt;a href=&#34;https://en.wikipedia.org/wiki/SEED&#34;&gt;SEED&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Camellia_(cipher)&#34;&gt;Camellia&lt;/a&gt; are not vulnerable to date but are slower than AES and relatively less trusted.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Of the currently supported ciphers, OpenVPN currently recommends using AES-256-CBC or AES-128-CBC. OpenVPN 2.4 and newer will also support GCM. For 2.4+, we recommend using AES-256-GCM or AES-128-GCM.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;AES-256 is 40% slower than AES-128, and there isn&#39;t any real reason to use a 256 bits key over a 128 bits key with AES. (Source: &lt;a href=&#34;http://security.stackexchange.com/questions/14068/why-most-people-use-256-bit-encryption-instead-of-128-bit&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;http://security.stackexchange.com/questions/6141/amount-of-simple-operations-that-is-safely-out-of-reach-for-all-humanity/6149#6149&#34;&gt;2&lt;/a&gt;). Moreover, AES-256 is more vulnerable to &lt;a href=&#34;https://en.wikipedia.org/wiki/Timing_attack&#34;&gt;Timing attacks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;AES-GCM is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Authenticated_encryption&#34;&gt;AEAD cipher&lt;/a&gt; which means it simultaneously provides confidentiality, integrity, and authenticity assurances on the data.&lt;/p&gt; &#xA;&lt;p&gt;The script supports the following ciphers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AES-128-GCM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AES-192-GCM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AES-256-GCM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AES-128-CBC&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AES-192-CBC&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AES-256-CBC&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And defaults to &lt;code&gt;AES-128-GCM&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN 2.4 added a feature called &#34;NCP&#34;: &lt;em&gt;Negotiable Crypto Parameters&lt;/em&gt;. It means you can provide a cipher suite like with HTTPS. It is set to &lt;code&gt;AES-256-GCM:AES-128-GCM&lt;/code&gt; by default and overrides the &lt;code&gt;--cipher&lt;/code&gt; parameter when used with an OpenVPN 2.4 client. For the sake of simplicity, the script set both the &lt;code&gt;--cipher&lt;/code&gt; and &lt;code&gt;--ncp-cipher&lt;/code&gt; to the cipher chosen above.&lt;/p&gt; &#xA;&lt;h3&gt;Control channel&lt;/h3&gt; &#xA;&lt;p&gt;OpenVPN 2.4 will negotiate the best cipher available by default (e.g ECDHE+AES-256-GCM)&lt;/p&gt; &#xA;&lt;p&gt;The script proposes the following options, depending on the certificate:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ECDSA: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;RSA: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It defaults to &lt;code&gt;TLS-ECDHE-*-WITH-AES-128-GCM-SHA256&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Diffie-Hellman key exchange&lt;/h3&gt; &#xA;&lt;p&gt;OpenVPN uses a 2048 bits DH key by default.&lt;/p&gt; &#xA;&lt;p&gt;OpenVPN 2.4 added support for ECDH keys. Elliptic curve cryptography is faster, lighter and more secure.&lt;/p&gt; &#xA;&lt;p&gt;Also, generating a classic DH keys can take a long, looong time. ECDH keys are ephemeral: they are generated on-the-fly.&lt;/p&gt; &#xA;&lt;p&gt;The script provides the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ECDH: &lt;code&gt;prime256v1&lt;/code&gt;/&lt;code&gt;secp384r1&lt;/code&gt;/&lt;code&gt;secp521r1&lt;/code&gt; curves&lt;/li&gt; &#xA; &lt;li&gt;DH: &lt;code&gt;2048&lt;/code&gt;/&lt;code&gt;3072&lt;/code&gt;/&lt;code&gt;4096&lt;/code&gt; bits keys&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It defaults to &lt;code&gt;prime256v1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;HMAC digest algorithm&lt;/h3&gt; &#xA;&lt;p&gt;From the OpenVPN wiki, about &lt;code&gt;--auth&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Authenticate data channel packets and (if enabled) tls-auth control channel packets with HMAC using message digest algorithm alg. (The default is SHA1 ). HMAC is a commonly used message authentication algorithm (MAC) that uses a data string, a secure hash algorithm, and a key, to produce a digital signature.&lt;/p&gt; &#xA; &lt;p&gt;If an AEAD cipher mode (e.g. GCM) is chosen, the specified --auth algorithm is ignored for the data channel, and the authentication method of the AEAD cipher is used instead. Note that alg still specifies the digest used for tls-auth.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The script provides the following choices:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SHA256&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SHA384&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SHA512&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It defaults to &lt;code&gt;SHA256&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;tls-auth&lt;/code&gt; and &lt;code&gt;tls-crypt&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;From the OpenVPN wiki, about &lt;code&gt;tls-auth&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Add an additional layer of HMAC authentication on top of the TLS control channel to mitigate DoS attacks and attacks on the TLS stack.&lt;/p&gt; &#xA; &lt;p&gt;In a nutshell, --tls-auth enables a kind of &#34;HMAC firewall&#34; on OpenVPN&#39;s TCP/UDP port, where TLS control channel packets bearing an incorrect HMAC signature can be dropped immediately without response.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;About &lt;code&gt;tls-crypt&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Encrypt and authenticate all control channel packets with the key from keyfile. (See --tls-auth for more background.)&lt;/p&gt; &#xA; &lt;p&gt;Encrypting (and authenticating) control channel packets:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;provides more privacy by hiding the certificate used for the TLS connection,&lt;/li&gt; &#xA;  &lt;li&gt;makes it harder to identify OpenVPN traffic as such,&lt;/li&gt; &#xA;  &lt;li&gt;provides &#34;poor-man&#39;s&#34; post-quantum security, against attackers who will never know the pre-shared key (i.e. no forward secrecy).&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;So both provide an additional layer of security and mitigate DoS attacks. They aren&#39;t used by default by OpenVPN.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tls-crypt&lt;/code&gt; is an OpenVPN 2.4 feature that provides encryption in addition to authentication (unlike &lt;code&gt;tls-auth&lt;/code&gt;). It is more privacy-friendly.&lt;/p&gt; &#xA;&lt;p&gt;The script supports both and uses &lt;code&gt;tls-crypt&lt;/code&gt; by default.&lt;/p&gt; &#xA;&lt;h2&gt;Say thanks&lt;/h2&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://saythanks.io/to/angristan&#34;&gt;say thanks&lt;/a&gt; if you want!&lt;/p&gt; &#xA;&lt;h2&gt;Credits &amp;amp; Licence&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to the &lt;a href=&#34;https://github.com/Angristan/OpenVPN-install/graphs/contributors&#34;&gt;contributors&lt;/a&gt; and Nyr&#39;s original work.&lt;/p&gt; &#xA;&lt;p&gt;This project is under the &lt;a href=&#34;https://raw.githubusercontent.com/Angristan/openvpn-install/master/LICENSE&#34;&gt;MIT Licence&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#angristan/openvpn-install&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=angristan/openvpn-install&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>