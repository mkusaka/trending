<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Shell Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-28T01:42:08Z</updated>
  <subtitle>Weekly Trending of Shell in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alibaba-damo-academy/FunClip</title>
    <updated>2024-04-28T01:42:08Z</updated>
    <id>tag:github.com,2024-04-28:/alibaba-damo-academy/FunClip</id>
    <link href="https://github.com/alibaba-damo-academy/FunClip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A video clipping tool based on FunASR open-source models and Gradio || 一款基于FunASR高准确率开源语音识别模型的智能视频剪辑工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FunClip🎥&lt;/h1&gt; &#xA;&lt;h2&gt;「&lt;a href=&#34;https://raw.githubusercontent.com/alibaba-damo-academy/FunClip/main/README_zh.md&#34;&gt;简体中文&lt;/a&gt; | English」&lt;/h2&gt; &#xA;&lt;p&gt;FunClip is a fully open-source, locally deployed automated video editing tool. It leverages Alibaba DAMO Academy&#39;s open-source &lt;a href=&#34;https://github.com/alibaba-damo-academy/FunASR&#34;&gt;FunASR&lt;/a&gt; Paraformer series models to perform speech recognition on videos. Then, users can freely choose text segments or speakers from the recognition results and click the trim button to obtain the video corresponding to the selected segments (&lt;a href=&#34;https://modelscope.cn/studios/iic/funasr_app_clipvideo/summary&#34;&gt;Quick Experience&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;On top of the basic features mentioned above, FunClip has the following highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FunClip integrates Alibaba&#39;s open-source industrial-grade model &lt;a href=&#34;https://modelscope.cn/models/iic/speech_paraformer-large_asr_nat-zh-cn-16k-common-vocab8404-pytorch/summary&#34;&gt;Paraformer-Large&lt;/a&gt;, which is one of the best-performing open-source Chinese ASR models available, with over 13 million downloads on Modelscope. It can also accurately predict timestamps in an integrated manner.&lt;/li&gt; &#xA; &lt;li&gt;FunClip incorporates the hotword customization feature of &lt;a href=&#34;https://modelscope.cn/models/iic/speech_seaco_paraformer_large_asr_nat-zh-cn-16k-common-vocab8404-pytorch/summary&#34;&gt;SeACo-Paraformer&lt;/a&gt;, allowing users to specify certain entity words, names, etc., as hotwords during the ASR process to enhance recognition results.&lt;/li&gt; &#xA; &lt;li&gt;FunClip integrates the &lt;a href=&#34;https://modelscope.cn/models/iic/speech_campplus_sv_zh-cn_16k-common/summary&#34;&gt;CAM++&lt;/a&gt; speaker recognition model, enabling users to use the auto-recognized speaker ID as the target for trimming, to clip segments from a specific speaker.&lt;/li&gt; &#xA; &lt;li&gt;The functionalities are realized through Gradio interaction, offering simple installation and ease of use. It can also be deployed on a server and accessed via a browser.&lt;/li&gt; &#xA; &lt;li&gt;FunClip supports multi-segment free clipping and automatically returns full video SRT subtitles and target segment SRT subtitles, offering a simple and convenient user experience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;re welcome to try it out, and we look forward to any requests and valuable suggestions you may have about subtitle generation or speech recognition~&lt;/p&gt; &#xA;&lt;h2&gt;Support Us🌟&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#alibaba-damo-academy/FunClip&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=alibaba-damo-academy/FunClip&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s New🚀&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2024/03/06 Fix bugs in using FunClip with command line.&lt;/li&gt; &#xA; &lt;li&gt;2024/02/28 &lt;a href=&#34;https://github.com/alibaba-damo-academy/FunASR&#34;&gt;FunASR&lt;/a&gt; is updated to 1.0 version, use FunASR1.0 and SeACo-Paraformer to conduct ASR wit hotword customization.&lt;/li&gt; &#xA; &lt;li&gt;2023/10/17 Fix bugs in multiple periods chosen, used to return video with wrong length.&lt;/li&gt; &#xA; &lt;li&gt;2023/10/10 FunClipper now supports recognizing with speaker diarization ability, choose &#39;yes&#39; button in &#39;Recognize Speakers&#39; and you will get recognition results with speaker id for each sentence. And then you can clip out the periods of one or some speakers (e.g. &#39;spk0&#39; or &#39;spk0#spk3&#39;) using FunClipper.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install🔨&lt;/h2&gt; &#xA;&lt;h3&gt;Python env install&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# clone funclip repo&#xA;git clone https://github.com/alibaba-damo-academy/FunClip.git&#xA;cd FunClip&#xA;# install Python requirments&#xA;pip install -r ./requirments.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;imagemagick install (Optional)&lt;/h3&gt; &#xA;&lt;p&gt;If you want to clip video file with embedded subtitles&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ffmpeg and imagemagick is required&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Ubuntu&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apt-get -y update &amp;amp;&amp;amp; apt-get -y install ffmpeg imagemagick&#xA;sed -i &#39;s/none/read,write/g&#39; /etc/ImageMagick-6/policy.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On MacOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install imagemagick&#xA;sed -i &#39;s/none/read,write/g&#39; /usr/local/Cellar/imagemagick/7.1.1-8_1/etc/ImageMagick-7/policy.xml &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Download font file to funclip/font&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget https://isv-data.oss-cn-hangzhou.aliyuncs.com/ics/MaaS/ClipVideo/STHeitiMedium.ttc -O font/STHeitiMedium.ttc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use FunClip&lt;/h2&gt; &#xA;&lt;h3&gt;A. Use FunClip as local Gradio Service&lt;/h3&gt; &#xA;&lt;p&gt;You can establish your own FunClip service which is same as &lt;a href=&#34;https://modelscope.cn/studios/iic/funasr_app_clipvideo/summary&#34;&gt;Modelscope Space&lt;/a&gt; as follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python funclip/launch.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then visit &lt;code&gt;localhost:7860&lt;/code&gt; you will get a Gradio service like below and you can use FunClip following the steps: &lt;img src=&#34;https://raw.githubusercontent.com/alibaba-damo-academy/FunClip/main/docs/images/demo_en.png&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step1: Upload your video file (or try the example videos below)&lt;/li&gt; &#xA; &lt;li&gt;Step2: Copy the text segments you need to &#39;Text to Clip&#39;&lt;/li&gt; &#xA; &lt;li&gt;Step3: Adjust subtitle settings (if needed)&lt;/li&gt; &#xA; &lt;li&gt;Step4: Click &#39;Clip&#39; or &#39;Clip and Generate Subtitles&#39;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;B. Experience FunClip in Modelscope&lt;/h3&gt; &#xA;&lt;p&gt;You can try FunClip in modelscope space: &lt;a href=&#34;https://modelscope.cn/studios/iic/funasr_app_clipvideo/summary&#34;&gt;link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;C. Use FunClip in command line&lt;/h3&gt; &#xA;&lt;p&gt;FunClip supports you to recognize and clip with commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# step1: Recognize&#xA;python funclip/videoclipper.py --stage 1 \&#xA;                       --file examples/2022云栖大会_片段.mp4 \&#xA;                       --output_dir ./output&#xA;# now you can find recognition results and entire SRT file in ./output/&#xA;# step2: Clip&#xA;python funclip/videoclipper.py --stage 2 \&#xA;                       --file examples/2022云栖大会_片段.mp4 \&#xA;                       --output_dir ./output \&#xA;                       --dest_text &#39;我们把它跟乡村振兴去结合起来，利用我们的设计的能力&#39; \&#xA;                       --start_ost 0 \&#xA;                       --end_ost 100 \&#xA;                       --output_file &#39;./output/res.mp4&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;On Going🌵&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FunClip will support Whisper model for English users, coming soon.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Communication🍟&lt;/h2&gt; &#xA;&lt;p&gt;FunClip is firstly open-sourced bu FunASR team, any useful PR is welcomed.&lt;/p&gt; &#xA;&lt;p&gt;You can also scan the following DingTalk group or WeChat group QR code to join the community group for communication.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DingTalk group&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;WeChat group&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;left&#34;&gt;&#xA;     &lt;img src=&#34;https://raw.githubusercontent.com/alibaba-damo-academy/FunClip/main/docs/images/dingding.png&#34; width=&#34;250&#34;&gt;&#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba-damo-academy/FunClip/main/docs/images/wechat.png&#34; width=&#34;215&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Find Speech Models in FunASR&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba-damo-academy/FunASR&#34;&gt;FunASR&lt;/a&gt; hopes to build a bridge between academic research and industrial applications on speech recognition. By supporting the training &amp;amp; finetuning of the industrial-grade speech recognition model released on ModelScope, researchers and developers can conduct research and production of speech recognition models more conveniently, and promote the development of speech recognition ecology. ASR for Fun！&lt;/p&gt; &#xA;&lt;p&gt;📚FunASR Paper: &lt;a href=&#34;https://arxiv.org/abs/2305.11013&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Arxiv-2305.11013-orange&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📚SeACo-Paraformer Paper: &lt;a href=&#34;https://arxiv.org/abs/2308.03266&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Arxiv-2308.03266-orange&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🌟Support FunASR: &lt;a href=&#34;https://github.com/alibaba-damo-academy/FunASR/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/alibaba-damo-academy/FunASR.svg?style=social&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zardus/ctf-tools</title>
    <updated>2024-04-28T01:42:08Z</updated>
    <id>tag:github.com,2024-04-28:/zardus/ctf-tools</id>
    <link href="https://github.com/zardus/ctf-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Some setup scripts for security research tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ctf-tools&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/zardus/ctf-tools&#34;&gt;&lt;img src=&#34;https://travis-ci.org/zardus/ctf-tools.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://webchat.freenode.net/?channels=#ctf-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/freenode-%23ctf--tools-green.svg?sanitize=true&#34; alt=&#34;IRC&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a collection of setup scripts to create an install of various security research tools. Of course, this isn&#39;t a hard problem, but it&#39;s really nice to have them in one place that&#39;s easily deployable to new machines and so forth. The install-scripts for these tools are checked regularly, the results can be found on &lt;a href=&#34;https://raw.githubusercontent.com/zardus/ctf-tools/master/_buildstatus/index.md&#34;&gt;the build status page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installers for the following tools are included:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://lcamtuf.coredump.cx/afl/&#34;&gt;afl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;State-of-the-art fuzzer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://angr.io&#34;&gt;angr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Next-generation binary analysis engine from Shellphish.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/programa-stic/barf-project&#34;&gt;barf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Binary Analysis and Reverse-engineering Framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bitbucket.org/mihaila/bindead/wiki/Home&#34;&gt;bindead&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A static analysis tool for binaries.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.capstone-engine.org&#34;&gt;capstone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi-architecture disassembly framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/slimm609/checksec.sh&#34;&gt;checksec&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check binary hardening settings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trailofbits/codereason&#34;&gt;codereason&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Semantic Binary Code Analysis Framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://crosstool-ng.org/&#34;&gt;crosstool-ng&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cross-compilers and cross-architecture tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://kozos.jp/books/asm/asm.html&#34;&gt;cross2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A set of cross-compilation tools from a Japanese book on C.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.muppetlabs.com/~breadbox/software/elfkickers.html&#34;&gt;elfkickers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A set of utilities for working with ELF files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.elfparser.com/&#34;&gt;elfparser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quickly determine the capabilities of an ELF binary through static analysis.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.mathstat.dal.ca/~selinger/md5collision/&#34;&gt;evilize&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tool to create MD5 colliding binaries&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.gnu.org/software/gdb/&#34;&gt;gdb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Up-to-date gdb with python2 bindings.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rogerhu/gdb-heap&#34;&gt;gdb-heap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;gdb extension for debugging heap issues.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hugsy/gef&#34;&gt;gef&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enhanced environment for gdb.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/honggfuzz&#34;&gt;hongfuzz&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A general-purpose, easy-to-use fuzzer with interesting analysis options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.keystone-engine.org&#34;&gt;keystone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lightweight multi-architecture assembler framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cloudburst/libheap&#34;&gt;libheap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;gdb python library for examining the glibc heap (ptmalloc)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lief.quarkslab.com/&#34;&gt;lief&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Library to Instrument Executable Formats.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cea-sec/miasm&#34;&gt;miasm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reverse engineering framework in Python.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/david942j/one_gadget&#34;&gt;one_gadget&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Magic gadget search for libc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/moyix/panda&#34;&gt;panda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Platform for Architecture-Neutral Dynamic Analysis.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/codelion/pathgrind&#34;&gt;pathgrind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path-based, symbolically-assisted fuzzer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/longld/peda&#34;&gt;peda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enhanced environment for gdb.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zardus/preeny&#34;&gt;preeny&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A collection of helpful preloads (compiled for many architectures!).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zachriggle/pwndbg&#34;&gt;pwndbg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enhanced environment for gdb. Especially for pwning.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Gallopsled/pwntools&#34;&gt;pwntools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Useful CTF utilities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/blankwall/Python_Pin&#34;&gt;python-pin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python bindings for pin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://qemu.org&#34;&gt;qemu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Latest version of qemu!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://qira.me&#34;&gt;qira&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Parallel, timeless debugger.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.radare.org/&#34;&gt;radare2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some crazy thing crowell likes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yrp604/rappel&#34;&gt;rappel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A linux-based assembly REPL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sashs/Ropper&#34;&gt;ropper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Another gadget finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/0vercl0k/rp&#34;&gt;rp++&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Another gadget finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://rr-project.org&#34;&gt;rr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Record and Replay Debugging Framework&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pfalcon/ScratchABit&#34;&gt;scratchabit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Easily retargetable and hackable interactive disassembler&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/pfalcon/ScratchABlock&#34;&gt;scratchablock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yet another crippled decompiler project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/david942j/seccomp-tools&#34;&gt;seccomp-tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides powerful tools for seccomp analysis&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/reyammer/shellnoob&#34;&gt;shellnoob&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shellcode writing helper.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/b3mb4m/shellsploit-framework&#34;&gt;shellsploit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Shellcode development kit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yegord/snowman&#34;&gt;snowman&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cross-architecture decompiler.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wmkhoo/taintgrind&#34;&gt;taintgrind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A valgrind taint analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.unicorn-engine.org&#34;&gt;unicorn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Multi-architecture CPU emulator framework.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://valgrind.org&#34;&gt;valgrind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Dynamic Binary Instrumentation framework with some built-in tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wapiflapi/villoc&#34;&gt;villoc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Visualization of heap operations.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/antoniobianchi333/virtualsocket&#34;&gt;virtualsocket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A nice library to interact with binaries.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/endrazine/wcc&#34;&gt;wcc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Witchcraft Compiler Collection is a collection of compilation tools to perform binary black magic on the GNU/Linux and other POSIX platforms.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acama/xrop&#34;&gt;xrop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Gadget finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trailofbits/manticore&#34;&gt;manticore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Manticore is a prototyping tool for dynamic binary analysis, with support for symbolic execution, taint analysis, and binary instrumentation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/devttys0/binwalk.git&#34;&gt;binwalk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Firmware (and arbitrary file) analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.hsc.fr/ressources/outils/dislocker/&#34;&gt;dislocker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tool for reading Bitlocker encrypted partitions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kholia/exetractor-clone&#34;&gt;exetractor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unpacker for packed Python executables. Supports PyInstaller and py2exe.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.google.com/p/firmware-mod-kit/&#34;&gt;firmware-mod-kit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tools for firmware packing/unpacking.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;apt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://foremost.sourceforge.net/&#34;&gt;foremost&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File carver.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://blog.didierstevens.com/programs/pdf-tools/&#34;&gt;pdf-parser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tool for digging in PDF files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jesparza/peepdf&#34;&gt;peepdf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Powerful Python tool to analyze PDF documents.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gist.github.com/bcse/1834878&#34;&gt;scrdec&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A decoder for encoded Windows Scripts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forensics&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.cgsecurity.org/wiki/TestDisk&#34;&gt;testdisk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Testdisk and photorec for file recovery.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhondta/python-codext&#34;&gt;codext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python codecs extension featuring CLI tools for encoding/decoding anything including AI-based guessing mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/SpiderLabs/cribdrag&#34;&gt;cribdrag&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Interactive crib dragging tool (for crypto).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.win.tue.nl/hashclash/&#34;&gt;fastcoll&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An md5sum collision generator.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ALSchwalm/foresight&#34;&gt;foresight&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tool for predicting the output of random number generators. To run, launch &#34;foresee&#34;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nccgroup/featherduster&#34;&gt;featherduster&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An automated, modular cryptanalysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://web.eecs.utk.edu/~plank/plank/papers/CS-07-593&#34;&gt;galois&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A fast galois field arithmetic library/toolkit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gat3way/hashkill&#34;&gt;hashkill&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hash cracker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bwall/HashPump&#34;&gt;hashpump&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tool for performing hash length extension attaacks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mheistermann/HashPump-partialhash&#34;&gt;hashpump-partialhash&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hashpump, supporting partially-unknown hashes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.google.com/p/hash-identifier/source/checkout&#34;&gt;hash-identifier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Simple hash algorithm identifier.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/niklasb/libc-database&#34;&gt;libc-database&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a database of libc offsets to simplify exploitation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/devttys0/littleblackbox&#34;&gt;littleblackbox&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Database of private SSL/SSH keys for embedded devices.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://sourceforge.net/projects/msieve/&#34;&gt;msieve&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Msieve is a C library implementing a suite of algorithms to factor large integers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nonce-disrespect/nonce-disrespect&#34;&gt;nonce-disrespect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Nonce-Disrespecting Adversaries: Practical Forgery Attacks on GCM in TLS.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/robertdavidgraham/pemcrack&#34;&gt;pemcrack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL PEM file cracker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.unix-ag.uni-kl.de/~conrad/krypto/pkcrack.html&#34;&gt;pkcrack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PkZip encryption cracker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mwielgoszewski/python-paddingoracle&#34;&gt;python-paddingoracle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Padding oracle attack automation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://reveng.sourceforge.net/&#34;&gt;reveng&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CRC finder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jjyg/ssh_decoder&#34;&gt;ssh_decoder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A tool for decoding ssh traffic. You will need &lt;code&gt;ruby1.8&lt;/code&gt; from &lt;code&gt;https://launchpad.net/~brightbox/+archive/ubuntu/ruby-ng&lt;/code&gt; to run this. Run with &lt;code&gt;ssh_decoder --help&lt;/code&gt; for help, as running it with no arguments causes it to crash.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/droe/sslsplit&#34;&gt;sslsplit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSL/TLS MITM.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hellman/xortool&#34;&gt;xortool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;XOR analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crypto&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://sourceforge.net/projects/yafu/&#34;&gt;yafu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automated integer factorization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://portswigger.net/burp&#34;&gt;burpsuite&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web proxy to do naughty web stuff.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/stasinopoulos/commix&#34;&gt;commix&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Command injection and exploitation tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://dirb.sourceforge.net/&#34;&gt;dirb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web path scanner.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maurosoria/dirsearch&#34;&gt;dirsearch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web path scanner.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mitmproxy.org/&#34;&gt;mitmproxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CLI Web proxy and python library.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://sqlmap.org/&#34;&gt;sqlmap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SQL injection automation engine.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TheRook/subbrute&#34;&gt;subbrute&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A DNS meta-query spider that enumerates DNS records, and subdomains.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;web&lt;/td&gt; &#xA;   &lt;td&gt;Library&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhondta/webgrep&#34;&gt;webgrep&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;grep&lt;/code&gt; for Web pages, with JS deobfuscation, CSS unminifying and OCR on images.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;apt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/+source/pngtools&#34;&gt;pngtools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PNG&#39;s analysis tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.sonicvisualiser.org/&#34;&gt;sound-visualizer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Audio file visualization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.caesum.com/handbook/stego.htm&#34;&gt;steganabara&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Another image stenography solver.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhondta/stegano-tools&#34;&gt;stegano-tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A collection of text and image steganography tools (incl LSB, PVD, PIT).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.outguess.org/&#34;&gt;stegdetect&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stenography detection/breaking tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Docker&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DominicBreuker/stego-toolkit&#34;&gt;stego-toolkit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A docker image with dozens of steg tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.caesum.com/handbook/stego.htm&#34;&gt;stegsolve&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Image stenography solver.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AngelKitty/stegosaurus&#34;&gt;stegosaurus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A steganography tool for embedding arbitrary payloads in Python bytecode (pyc or pyo) files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stego&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zed-0xff/zsteg&#34;&gt;zsteg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;detect stegano-hidden data in PNG &amp;amp; BMP.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dsniff&lt;/td&gt; &#xA;   &lt;td&gt;apt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.monkey.org/~dugsong/dsniff/&#34;&gt;dsniff&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Grabs passwords and other data from pcaps/network streams.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ibotpeaches.github.io/Apktool/&#34;&gt;apktool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dissect, dis-assemble, and re-pack Android APKs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://developer.android.com/sdk&#34;&gt;android-sdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The android SDK (adb, emulator, etc).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://git.kali.org/gitweb/?p=packages/xspy.git;a=summary&#34;&gt;xspy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tiny tool to spy on X sessions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3&#34;&gt;z3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Theorem prover from Microsoft Research.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://jd.benow.ca/&#34;&gt;jdgui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java decompiler.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codisec.com/veles/&#34;&gt;veles&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Binary data analysis and visualization tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;misc&lt;/td&gt; &#xA;   &lt;td&gt;Directory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://yt-dl.org/&#34;&gt;youtube-dl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Latest version of the popular youtube downloader.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;There are also some installers for non-CTF stuff to break the monotony!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Tool&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C magic&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zwimer/C-bind&#34;&gt;C-bind&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A library used to enable function binding in C!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;game&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.bay12games.com/dwarves/&#34;&gt;Dwarf Fortress&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Something to help you relax after a CTF!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pyvmmonitor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.pyvmmonitor.com/&#34;&gt;pyvmmonitor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PyVmMonitor is a profiler with a simple goal: being the best way to profile a Python program.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;library collection&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nothings/single_file_libs&#34;&gt;single_file_libs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A large collection of useful single file include libraries written for C/C++&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dolphin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sudolph.in/&#34;&gt;sudolphin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If your friend ever leaves their laptop unlocked, &lt;code&gt;curl -sSL sh.sudolph.in | sh&lt;/code&gt; then wait and see!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tor-browser&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.torproject.org/projects/torbrowser.html.en&#34;&gt;tor-browser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Useful when you need to hit a web challenge from different IPs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set up the path&#xA;/path/to/ctf-tools/bin/manage-tools setup&#xA;source ~/.bashrc&#xA;&#xA;# list the available tools&#xA;manage-tools list&#xA;&#xA;# install gdb, allowing it to try to sudo install dependencies&#xA;manage-tools -s install gdb&#xA;&#xA;# install pwntools, but don&#39;t let it sudo install dependencies&#xA;manage-tools install pwntools&#xA;&#xA;# install qemu, but use &#34;nice&#34; to avoid degrading performance during compilation&#xA;manage-tools -n install qemu&#xA;&#xA;# uninstall gdb&#xA;manage-tools uninstall gdb&#xA;&#xA;# uninstall all tools&#xA;manage-tools uninstall all&#xA;&#xA;# search for a tool&#xA;manage-tools search preload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where possible, the tools keep the installs very self-contained (i.e., in to tool/ directory), and most uninstalls are just calls to &lt;code&gt;git clean&lt;/code&gt; (&lt;strong&gt;NOTE&lt;/strong&gt;, this is &lt;strong&gt;NOT&lt;/strong&gt; careful; everything under the tool directory, including whatever you were working on, is blown away during an uninstall). One exception to this are python tools, which are installed using the &lt;code&gt;pip&lt;/code&gt; package manager if possible. A &lt;code&gt;ctftools&lt;/code&gt; virtualenv is created during the &lt;code&gt;manage-tools setup&lt;/code&gt; command and can be accessed using the command &lt;code&gt;workon ctftools&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help!&lt;/h2&gt; &#xA;&lt;p&gt;Something not working? I didn&#39;t write (almost) any of these tools, but hit up &lt;a href=&#34;http://webchat.freenode.net/?channels=#ctf-tools&#34;&gt;#ctf-tools on freenode&lt;/a&gt; if you&#39;re desperate. Maybe some kind soul will help!&lt;/p&gt; &#xA;&lt;h2&gt;Docker (version 1.7+)&lt;/h2&gt; &#xA;&lt;p&gt;By popular demand, a Dockerfile has been included. You can build a docker image with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zardus/ctf-tools&#xA;cd ctf-tools&#xA;docker build -t ctf-tools .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it ctf-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The built image will have ctf-tools cloned and ready to go, but you will still need to install the tools themselves (see above).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can also pull ctf-tools (with some tools preinstalled) from dockerhub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it zardus/ctf-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vagrant&lt;/h2&gt; &#xA;&lt;p&gt;You can build a Vagrant VM with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/zardus/ctf-tools/master/Vagrantfile&#xA;vagrant plugin install vagrant-vbguest&#xA;vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And connect to it via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vagrant ssh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Kali Linux&lt;/h2&gt; &#xA;&lt;p&gt;Kali Linux (Sana and Rolling), due to manually setting certain libraries to not use the latest version available (sometimes being out of date by years) causes some tools to not install at all, or fail in strange ways. AFL and Panda comes to mind, in fact any tool that uses QEMU 2.30 will probably fail during compilation under Kali. Overriding these libraries breaks other tools included in Kali so your only solution is to either live with some of Kali&#39;s tools being broken, or running another distribution separately such as Ubuntu.&lt;/p&gt; &#xA;&lt;p&gt;Most tools aren&#39;t affected though.&lt;/p&gt; &#xA;&lt;h2&gt;Adding Tools&lt;/h2&gt; &#xA;&lt;p&gt;To add a tool (say, named &lt;em&gt;toolname&lt;/em&gt;), do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;toolname&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Create an &lt;code&gt;install&lt;/code&gt; script.&lt;/li&gt; &#xA; &lt;li&gt;(optional) if special uninstall steps are required, create an &lt;code&gt;uninstall&lt;/code&gt; script.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Install Scripts&lt;/h3&gt; &#xA;&lt;p&gt;The install script will be run with &lt;code&gt;$PWD&lt;/code&gt; being &lt;code&gt;toolname&lt;/code&gt;. It should install the tool into this directory, in as contained a manner as possible. Ideally, full uninstallation should be possible with a &lt;code&gt;git clean&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The install script should create a &lt;code&gt;bin&lt;/code&gt; directory and put its executables there. These executables will be automatically linked into the main &lt;code&gt;bin&lt;/code&gt; directory for the repo. They could be launched from any directory, so don&#39;t make assumptions about the location of &lt;code&gt;$0&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The individual tools are all licensed under their own licenses. As for ctf-tools itself, it is licensed under BSD 2-Clause License. If you find it useful, star it on github (&lt;a href=&#34;https://github.com/zardus/ctf-tools&#34;&gt;https://github.com/zardus/ctf-tools&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Good luck!&lt;/p&gt; &#xA;&lt;h1&gt;See Also&lt;/h1&gt; &#xA;&lt;p&gt;There&#39;s a curated list of CTF tools, but without installers, here: &lt;a href=&#34;https://github.com/apsdehal/aWEsoMe-cTf&#34;&gt;https://github.com/apsdehal/aWEsoMe-cTf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a Vagrant config with a lot of the bigger frameworks here: &lt;a href=&#34;https://github.com/thebarbershopper/epictreasure&#34;&gt;https://github.com/thebarbershopper/epictreasure&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rockerbacon/modorganizer2-linux-installer</title>
    <updated>2024-04-28T01:42:08Z</updated>
    <id>tag:github.com,2024-04-28:/rockerbacon/modorganizer2-linux-installer</id>
    <link href="https://github.com/rockerbacon/modorganizer2-linux-installer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An easy-to-use Mod Organizer 2 installer for Linux&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This project aims to make modding and playing Bethesda games on Linux as easy as possible. It does that by providing installers which automatically setup a working experience for the user.&lt;/p&gt; &#xA;&lt;p&gt;While these installers may be available on Lutris.net, users are always recommended to use the latest stable release from this repository. The testers and maintainers of this project have little control over the content on Lutris and cannot assure that the installers available there are up to date nor that they haven&#39;t been incorrectly modified.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Mod Organizer 2&lt;/h2&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;You may need to manually install the following programs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;7z&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Should be readily available in your distribution&#39;s package manager&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;protontricks&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Steam Deck users&lt;/strong&gt;: Protontricks must be installed through the Discover app.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Other distributions&lt;/strong&gt;: carefully read through the &lt;a href=&#34;https://github.com/Matoking/protontricks#installation&#34;&gt;available install methods&lt;/a&gt; to ensure you&#39;re using an up-to-date version of the program.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following requirements should be available out-of-the-box in most systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;bash&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;either &lt;em&gt;curl&lt;/em&gt; or &lt;em&gt;wget&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;zenity&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;protontricks-launcher&lt;/em&gt;: should be available after installing &lt;code&gt;protontricks&lt;/code&gt; already, if not see &lt;a href=&#34;https://github.com/Matoking/protontricks#desktop&#34;&gt;this&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installation steps&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the game you want to play on Steam;&lt;/li&gt; &#xA; &lt;li&gt;Download the the latest stable release &lt;a href=&#34;https://github.com/rockerbacon/modorganizer2-linux-installer/releases/download/4.6.1/mo2installer-4.6.1.tar.gz&#34;&gt;here&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Extract the downloaded file;&lt;/li&gt; &#xA; &lt;li&gt;Open the extracted folder in a terminal and execute &lt;code&gt;./install.sh&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;The installer will start and guide you through the rest of the process;&lt;/li&gt; &#xA; &lt;li&gt;Run the game on Steam and Mod Organizer 2 should start;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/rockerbacon/modorganizer2-linux-installer/master/post-install.md&#34;&gt;post-install instructions&lt;/a&gt; for recommended additional steps;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The installer will automatically configure game-specific workarounds and install the script extender for your game of choice. Java binaries are also made available at &lt;code&gt;C:\java&lt;/code&gt; for running Proc Patchers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Avoid using ENBoost&lt;/strong&gt; with Skyrim: DXVK and Wine have their own better working memory patches, both properly enabled with this installer.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;The following is a small overview of the current state of each supported game:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;GAME&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;GAMEPLAY&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;SCRIPT EXTENDER&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;ENB&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fallout 3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not tested&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fallout 4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/rockerbacon/lutris-skyrimse-installers/issues/32&#34;&gt;some plugins might not work&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ENB v0.393 or older, disabling &#34;EnablePostPassShader&#34; might be necessary&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fallout New Vegas&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;fullscreen only&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Morrowind&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not tested&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not tested&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not tested&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Oblivion&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/rockerbacon/lutris-skyrimse-installers/issues/63#issuecomment-643690247&#34;&gt;some plugins might require manual setup&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not tested&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skyrim&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Skyrim Special Edition&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;working&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;not tested&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For known bugs and necessary workarounds, please refer to the &lt;a href=&#34;https://github.com/rockerbacon/lutris-skyrimse-installers/issues?q=is:issue+is:open+label:bug+&#34;&gt;issues page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please, help to keep this table up to date by &lt;a href=&#34;https://github.com/rockerbacon/lutris-skyrimse-installers/issues/new/choose&#34;&gt;opening issues&lt;/a&gt; on any successes or problems you have experienced.&lt;/p&gt; &#xA;&lt;h2&gt;Updating Mod Organizer 2&lt;/h2&gt; &#xA;&lt;p&gt;It is highly recommended to backup your existing installation before updating.&lt;/p&gt; &#xA;&lt;h4&gt;From 4.0.0 and above&lt;/h4&gt; &#xA;&lt;p&gt;You can update by simply following the install instructions again.&lt;/p&gt; &#xA;&lt;h4&gt;From 3.1.0 and below&lt;/h4&gt; &#xA;&lt;p&gt;You can update by simply following the install instructions again.&lt;/p&gt; &#xA;&lt;p&gt;If you have multiple instances installed, you&#39;ll need to update all of them for Nexus integration to work.&lt;/p&gt; &#xA;&lt;h4&gt;From 2.8.6 and below (old Lutris installer)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to where Mod Organizer was installed and rename the folder &#34;ModOrganizer2&#34; to &#34;modorganizer2&#34; (all lowercase);&lt;/li&gt; &#xA; &lt;li&gt;Follow the install instructions in this readme;&lt;/li&gt; &#xA; &lt;li&gt;If you have multiple instances installed, you&#39;ll need to update all of them for Nexus integration to work;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installing Vortex&lt;/h2&gt; &#xA;&lt;p&gt;The Vortex installer was created before Wine had builtin support for Mod Organizer 2. It should only be used for games which Mod Organizer 2 does not support.&lt;/p&gt; &#xA;&lt;p&gt;The Vortex installer does not apply any configurations to the games themselves. Make sure they are working, using Lutris or another method, before modding. GAMES SHOULD NOT BE LAUNCHED FROM WITHIN VORTEX.&lt;/p&gt; &#xA;&lt;p&gt;The Vortex installer is not under active development/maintenance at the moment.&lt;/p&gt; &#xA;&lt;p&gt;To install Vortex, you first need the &lt;code&gt;vortex.yml&lt;/code&gt; installer from the &lt;a href=&#34;https://github.com/rockerbacon/lutris-skyrimse-installers/releases/tag/1.9.3&#34;&gt;latest release which included it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use the installer with the following terminal command, remember to change the path if the file was downloaded to another location:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lutris -i &#34;$HOME/Downloads/vortex.yml&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remember to follow all instructions during installation, some manual steps are required for Vortex to work properly.&lt;/p&gt; &#xA;&lt;p&gt;After installing Vortex and following all instructions, manually add the game you want to mod.&lt;/p&gt; &#xA;&lt;h4&gt;Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The old Skyrim Special Edition and SKSE64 installers have been deprecated as the Mod Organizer 2 installer replaces both&lt;/li&gt; &#xA; &lt;li&gt;Advanced instructions for using Vortex can be found on &lt;a href=&#34;https://github.com/rockerbacon/lutris-skyrimse-installers/tree/0203cd1fdc9832152ae1d87c488c7492ea3ecc61&#34;&gt;older versions of this README&lt;/a&gt;. They were removed since they are only applicable to games supported by the Mod Organizer 2 installer&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>