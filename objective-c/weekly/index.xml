<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-03T01:45:33Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>square/SquarePointOfSaleSDK-iOS</title>
    <updated>2024-11-03T01:45:33Z</updated>
    <id>tag:github.com,2024-11-03:/square/SquarePointOfSaleSDK-iOS</id>
    <link href="https://github.com/square/SquarePointOfSaleSDK-iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple library for letting Point of Sale take in-store payments for your app using the Point of Sale API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Square Point of Sale SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/square/SquarePointOfSaleSDK-iOS&#34;&gt;&lt;img src=&#34;https://travis-ci.org/square/SquarePointOfSaleSDK-iOS.svg?branch=master&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/carthage-%E2%9C%93-e2c245.svg?sanitize=true&#34; alt=&#34;Carthage Compatibility&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/SquarePointOfSaleSDK&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/SquarePointOfSaleSDK.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/SquarePointOfSaleSDK&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/SquarePointOfSaleSDK.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/SquarePointOfSaleSDK&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/SquarePointOfSaleSDK.svg?sanitize=true&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Square Point of Sale SDK lets you quickly and easily add support to your application for completing in-store payments using Square Point of Sale.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://squareup.com/signup?v=developers&#34;&gt;Square developer account&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Xcode 12.0 or later.&lt;/li&gt; &#xA; &lt;li&gt;iOS 12 or later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is not currently possible to process a fake credit card payment with the Point of Sale API. If you are testing your integration, you can process small card payments (as low as $1) and then &lt;a href=&#34;https://squareup.com/help/us/en/article/5060&#34;&gt;issue refunds from Square Point of Sale&lt;/a&gt;. Please visit &lt;a href=&#34;https://www.squareup.com/activate&#34;&gt;squareup.com/activate&lt;/a&gt; to ensure your account is enabled for payment processing.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Add the SDK to your project&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;platform :ios, &#39;12.0&#39;&#xA;pod &#39;SquarePointOfSaleSDK&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to call &lt;code&gt;pod update&lt;/code&gt; and use &lt;code&gt;pod install --repo-update&lt;/code&gt; to ensure you have the most recent version of the SDK installed.&lt;/p&gt; &#xA;&lt;p&gt;Drag Pods/SquarePointOfSaleSDK.xcodeproj to your project, and add SquarePointOfSaleSDK as a build dependency.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;Square/SquarePointOfSaleSDK-iOS&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;SPM&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;To add the SquarePointOfSaleSDK package to your Xcode project, select File &amp;gt; Swift Packages &amp;gt; Add Package Dependency and enter&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;https://github.com/square/SquarePointOfSaleSDK-iOS&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Update your Info.plist&lt;/h3&gt; &#xA;&lt;p&gt;To get started with the Square Point of Sale SDK, you&#39;ll need to configure your &lt;code&gt;Info.plist&lt;/code&gt; file with a few changes.&lt;/p&gt; &#xA;&lt;p&gt;First, navigate to your project&#39;s settings in Xcode and click the &#34;Info&#34; tab. Under &lt;code&gt;Custom iOS Target Properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add a new entry with key &lt;code&gt;LSApplicationQueriesSchemes&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set the &#34;Type&#34; to &lt;code&gt;Array&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add the value &lt;code&gt;square-commerce-v1&lt;/code&gt; to the array.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Next, create a &lt;a href=&#34;https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Inter-AppCommunication/Inter-AppCommunication.html#//apple_ref/doc/uid/TP40007072-CH6-SW1&#34;&gt;URL scheme&lt;/a&gt; so that Square Point of Sale can re-open your app after a customer finishes a transaction. If your app already has a URL scheme, you can use that.&lt;/p&gt; &#xA;&lt;p&gt;Finally, open the &#34;URL Types&#34; section and click the &#34;+&#34; to add a new URL type. Set the values to the following:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Identifier&lt;/td&gt; &#xA;   &lt;td&gt;Square&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;URL Schemes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;Your URL Scheme&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Role&lt;/td&gt; &#xA;   &lt;td&gt;Editor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;It should look like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/square/SquarePointOfSaleSDK-iOS/master/Resources/README/url-scheme.png&#34; alt=&#34;URL Scheme&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Register your app with Square&lt;/h3&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://connect.squareup.com/apps&#34;&gt;Square Developer Portal&lt;/a&gt; and create a new application.&lt;/p&gt; &#xA;&lt;p&gt;Under the &lt;code&gt;Point of Sale API&lt;/code&gt; tab, add your app&#39;s &lt;a href=&#34;https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/ConfiguringYourApp/ConfiguringYourApp.html#//apple_ref/doc/uid/TP40012582-CH28-SW16&#34;&gt;bundle identifier&lt;/a&gt; and &lt;a href=&#34;https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Inter-AppCommunication/Inter-AppCommunication.html#//apple_ref/doc/uid/TP40007072-CH6-SW1&#34;&gt;URL scheme&lt;/a&gt;, then click &#34;Save&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/square/SquarePointOfSaleSDK-iOS/master/Resources/README/api.png&#34; alt=&#34;Point of Sale API&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get your &lt;code&gt;Application ID&lt;/code&gt; from the &lt;code&gt;Credentials&lt;/code&gt; tab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/square/SquarePointOfSaleSDK-iOS/master/Resources/README/credentials.png&#34; alt=&#34;Credentials&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Swift&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Import Declaration:&lt;/strong&gt; &lt;code&gt;import SquarePointOfSaleSDK&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Replace with your app&#39;s URL scheme.&#xA;let callbackURL = URL(string: &#34;&amp;lt;# Your URL Scheme #&amp;gt;://&#34;)!&#xA;&#xA;// Your client ID is the same as your Square Application ID.&#xA;// Note: You only need to set your client ID once, before creating your first request.&#xA;SCCAPIRequest.setApplicationID(&#34;&amp;lt;# Application ID #&amp;gt;&#34;)&#xA;&#xA;do {&#xA;    // Specify the amount of money to charge.&#xA;    let money = try SCCMoney(amountCents: 100, currencyCode: &#34;USD&#34;)&#xA;&#xA;    // Create the request.&#xA;    let apiRequest =&#xA;        try SCCAPIRequest(&#xA;                callbackURL: callbackURL,&#xA;                amount: money,&#xA;                userInfoString: nil,&#xA;                locationID: nil,&#xA;                notes: &#34;Coffee&#34;,&#xA;                customerID: nil,&#xA;                supportedTenderTypes: .all,&#xA;                clearsDefaultFees: false,&#xA;                returnsAutomaticallyAfterPayment: false,&#xA;                disablesKeyedInCardEntry: false,&#xA;                skipsReceipt: false&#xA;        )&#xA;&#xA;    // Open Point of Sale to complete the payment.&#xA;    try SCCAPIConnection.perform(apiRequest)&#xA;&#xA;} catch let error as NSError {&#xA;    print(error.localizedDescription)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, implement the UIApplication delegate method as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func application(_ app: UIApplication, open url: URL, options: [UIApplicationOpenURLOptionsKey : Any] = [:]) -&amp;gt; Bool {&#xA;    guard SCCAPIResponse.isSquareResponse(url) else {&#xA;        return true&#xA;    }&#xA;&#xA;    do {&#xA;        let response = try SCCAPIResponse(responseURL: url)&#xA;&#xA;        if let error = response.error {&#xA;            // Handle a failed request.&#xA;            print(error.localizedDescription)&#xA;        } else {&#xA;            // Handle a successful request.&#xA;        }&#xA;&#xA;    } catch let error as NSError {&#xA;        // Handle unexpected errors.&#xA;        print(error.localizedDescription)&#xA;    }&#xA;&#xA;    return true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Objective C&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Import Declaration:&lt;/strong&gt; &lt;code&gt;@import SquarePointOfSaleSDK;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;// Replace with your app&#39;s callback URL.&#xA;NSURL *const callbackURL = [NSURL URLWithString:@&#34;&amp;lt;#Your URL Scheme#&amp;gt;://&#34;];&#xA;&#xA;// Specify the amount of money to charge.&#xA;SCCMoney *const amount = [SCCMoney moneyWithAmountCents:100 currencyCode:@&#34;USD&#34; error:NULL];&#xA;&#xA;// Your client ID is the same as your Square Application ID.&#xA;// Note: You only need to set your client ID once, before creating your first request.&#xA;[SCCAPIRequest setClientID:&amp;lt;#Client ID#&amp;gt;];&#xA;&#xA;SCCAPIRequest *request = [SCCAPIRequest requestWithCallbackURL:callbackURL&#xA;                                                        amount:amount&#xA;                                                userInfoString:nil&#xA;                                                    locationID:nil&#xA;                                                         notes:@&#34;Coffee&#34;&#xA;                                                    customerID:nil&#xA;                                          supportedTenderTypes:SCCAPIRequestTenderTypeAll&#xA;                                             clearsDefaultFees:NO&#xA;                               returnAutomaticallyAfterPayment:NO&#xA;                                                         error:&amp;amp;error];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you&#39;re ready to charge the customer, bring Point of Sale into the foreground to complete the payment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[SCCAPIConnection performRequest:request error:&amp;amp;error];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, implement the relevant UIApplication delegate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (BOOL)application:(UIApplication *)application openURL:(NSURL *)URL options:(NSDictionary&amp;lt;NSString *,id&amp;gt; *)options;&#xA;{&#xA;    if ([SCCAPIResponse isSquareResponse:url]) {&#xA;        SCCAPIResponse *const response = [SCCAPIResponse responseWithResponseURL:URL error:&amp;amp;decodeError];&#xA;        ...&#xA;        return YES;&#xA;    }&#xA;    return NO;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We’re glad you’re interested in Square Point of Sale SDK, and we’d love to see where you take it. Please read our &lt;a href=&#34;https://raw.githubusercontent.com/square/SquarePointOfSaleSDK-iOS/master/Contributing.md&#34;&gt;contributing guidelines&lt;/a&gt; prior to submitting a Pull Request.&lt;/p&gt; &#xA;&lt;h2&gt;Releasing&lt;/h2&gt; &#xA;&lt;p&gt;First create a new tag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git tag XYZ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Push the tag to Github&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push --tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a new release on Github.com and upload an archive of the binary using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec pod gen &amp;amp;&amp;amp;  carthage build --no-skip-current --platform ios --use-xcframeworks &amp;amp;&amp;amp; carthage archive SquarePointOfSaleSDK &amp;amp;&amp;amp; bundle exec pod trunk push SquarePointOfSaleSDK.podspec --allow-warnings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you are having trouble with using this SDK in your project, please create a question on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/square-connect&#34;&gt;Stack Overflow&lt;/a&gt; with the &lt;code&gt;square-connect&lt;/code&gt; tag. Our team monitors that tag and will be able to help you. If you think there is something wrong with the SDK itself, please create an issue.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2021 Square, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>