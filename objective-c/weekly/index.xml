<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T02:18:29Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>noah-nuebling/mac-mouse-fix</title>
    <updated>2022-08-14T02:18:29Z</updated>
    <id>tag:github.com,2022-08-14:/noah-nuebling/mac-mouse-fix</id>
    <link href="https://github.com/noah-nuebling/mac-mouse-fix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mac Mouse Fix - A simple way to make your mouse better.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/40808343/112161606-9814af80-8beb-11eb-9d2e-3105b4486bab.png&#34; alt=&#34;gh-header-v2&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- # Mac Mouse Fix --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/noah-nuebling/mac-mouse-fix/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mac Mouse Fix is a simple way to make your mouse better.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://noah-nuebling.github.io/mac-mouse-fix-website&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases&#34;&gt;Releases&lt;/a&gt; | &lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/issues/new/choose&#34;&gt;Help &amp;amp; Feedback&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/noah-nuebling/mac-mouse-fix/releases/tag/2.0.0&#34;&gt;&lt;strong&gt;Mac Mouse Fix 2&lt;/strong&gt;&lt;/a&gt; brings cool new features!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OneSignal/OneSignal-iOS-SDK</title>
    <updated>2022-08-14T02:18:29Z</updated>
    <id>tag:github.com,2022-08-14:/OneSignal/OneSignal-iOS-SDK</id>
    <link href="https://github.com/OneSignal/OneSignal-iOS-SDK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OneSignal is a free push notification service for mobile apps. This plugin makes it easy to integrate your native iOS app with OneSignal. https://onesignal.com&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://media.onesignal.com/cms/Website%20Layout/logo-red.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;OneSignal iOS SDK&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/OneSignal&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/OneSignal.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?sanitize=true&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goo.gl/E01ufX&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SwiftPM-Compatible-brightgreen.svg?sanitize=true&#34; alt=&#34;SwiftPM Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/OneSignal/OneSignal-iOS-SDK&#34;&gt;&lt;img src=&#34;https://travis-ci.org/OneSignal/OneSignal-iOS-SDK.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.onesignal.com&#34;&gt;OneSignal&lt;/a&gt; is a free email, sms, push notification, and in-app message service for mobile apps. This plugin makes it easy to integrate your native iOS app with OneSignal.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://app.onesignal.com/images/ios_10_notification_image.gif&#34; width=&#34;400&#34; alt=&#34;iOS Notification&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;p&gt;See OneSignal&#39;s &lt;a href=&#34;https://documentation.onesignal.com/docs/ios-sdk-setup&#34;&gt;iOS Native SDK Setup Guide&lt;/a&gt; for documentation.&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;p&gt;See OneSignal&#39;s &lt;a href=&#34;https://documentation.onesignal.com/docs/ios-native-sdk&#34;&gt;iOS Native SDK API&lt;/a&gt; page for a list of all available methods.&lt;/p&gt; &#xA;&lt;h4&gt;Change Log&lt;/h4&gt; &#xA;&lt;p&gt;See this repository&#39;s &lt;a href=&#34;https://github.com/OneSignal/OneSignal-iOS-SDK/releases&#34;&gt;release tags&lt;/a&gt; for a complete change log of every released version.&lt;/p&gt; &#xA;&lt;h4&gt;Support&lt;/h4&gt; &#xA;&lt;p&gt;Please visit this repository&#39;s &lt;a href=&#34;https://github.com/OneSignal/OneSignal-iOS-SDK/issues&#34;&gt;Github issue tracker&lt;/a&gt; for feature requests and bug reports related specifically to the SDK. For account issues and support please contact OneSignal support from the &lt;a href=&#34;https://onesignal.com&#34;&gt;OneSignal.com&lt;/a&gt; dashboard.&lt;/p&gt; &#xA;&lt;h4&gt;Supports:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift and Objective-C Projects&lt;/li&gt; &#xA; &lt;li&gt;Supports iOS 9 to iOS 15&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>facebookincubator/SocketRocket</title>
    <updated>2022-08-14T02:18:29Z</updated>
    <id>tag:github.com,2022-08-14:/facebookincubator/SocketRocket</id>
    <link href="https://github.com/facebookincubator/SocketRocket" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A conforming Objective-C WebSocket client library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SocketRocket&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/SocketRocket.svg?style=flat&#34; alt=&#34;Platforms&#34;&gt; &lt;a href=&#34;https://github.com/facebook/SocketRocket/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD-lightgrey.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/SocketRocket&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/SocketRocket.svg?sanitize=true&#34; alt=&#34;Podspec&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/SocketRocket/main/carthage-link&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/facebook/SocketRocket/branches&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/facebook/SocketRocket/master.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A conforming WebSocket (&lt;a href=&#34;https://tools.ietf.org/html/rfc6455%3E&#34;&gt;RFC 6455&lt;/a&gt;) client library for iOS, macOS and tvOS.&lt;/p&gt; &#xA;&lt;p&gt;Test results for SocketRocket &lt;a href=&#34;http://facebook.github.io/SocketRocket/results/&#34;&gt;here&lt;/a&gt;. You can compare to what modern browsers look like &lt;a href=&#34;http://autobahn.ws/testsuite/reports/clients/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;SocketRocket currently conforms to all core ~300 of &lt;a href=&#34;http://autobahn.ws/testsuite/%3E&#34;&gt;Autobahn&lt;/a&gt;&#39;s fuzzing tests (aside from two UTF-8 ones where it is merely &lt;em&gt;non-strict&lt;/em&gt; tests 6.4.2 and 6.4.4).&lt;/p&gt; &#xA;&lt;h2&gt;Features/Design&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TLS (wss) support, including self-signed certificates.&lt;/li&gt; &#xA; &lt;li&gt;Seems to perform quite well.&lt;/li&gt; &#xA; &lt;li&gt;Supports HTTP Proxies.&lt;/li&gt; &#xA; &lt;li&gt;Supports IPv4/IPv6.&lt;/li&gt; &#xA; &lt;li&gt;Supports SSL certificate pinning.&lt;/li&gt; &#xA; &lt;li&gt;Sends &lt;code&gt;ping&lt;/code&gt; and can process &lt;code&gt;pong&lt;/code&gt; events.&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous and non-blocking. Most of the work is done on a background thread.&lt;/li&gt; &#xA; &lt;li&gt;Supports iOS, macOS, tvOS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;There are a few options. Choose one, or just figure it out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;SocketRocket&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;pod install&lt;/code&gt;, and you are all set.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/carthage/carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add the following line to your Cartfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;facebook/SocketRocket&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt;, and you should now have the latest version of &lt;code&gt;SocketRocket&lt;/code&gt; in your &lt;code&gt;Carthage&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using SocketRocket as a sub-project&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can also include &lt;code&gt;SocketRocket&lt;/code&gt; as a subproject inside of your application if you&#39;d prefer, although we do not recommend this, as it will increase your indexing time significantly. To do so, just drag and drop the &lt;code&gt;SocketRocket.xcodeproj&lt;/code&gt; file into your workspace.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;SRWebSocket&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The Web Socket.&lt;/p&gt; &#xA;&lt;h4&gt;Note:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;SRWebSocket&lt;/code&gt; will retain itself between &lt;code&gt;-(void)open&lt;/code&gt; and when it closes, errors, or fails. This is similar to how &lt;code&gt;NSURLConnection&lt;/code&gt; behaves (unlike &lt;code&gt;NSURLConnection&lt;/code&gt;, &lt;code&gt;SRWebSocket&lt;/code&gt; won&#39;t retain the delegate).&lt;/p&gt; &#xA;&lt;h4&gt;Interface&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;@interface SRWebSocket : NSObject&#xA;&#xA;// Make it with this&#xA;- (instancetype)initWithURLRequest:(NSURLRequest *)request;&#xA;&#xA;// Set this before opening&#xA;@property (nonatomic, weak) id &amp;lt;SRWebSocketDelegate&amp;gt; delegate;&#xA;&#xA;// Open with this&#xA;- (void)open;&#xA;&#xA;// Close it with this&#xA;- (void)close;&#xA;&#xA;// Send a Data&#xA;- (void)sendData:(nullable NSData *)data error:(NSError **)error;&#xA;&#xA;// Send a UTF8 String&#xA;- (void)sendString:(NSString *)string error:(NSError **)error;&#xA;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;SRWebSocketDelegate&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You implement this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;@protocol SRWebSocketDelegate &amp;lt;NSObject&amp;gt;&#xA;&#xA;@optional&#xA;&#xA;- (void)webSocketDidOpen:(SRWebSocket *)webSocket;&#xA;&#xA;- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessageWithString:(NSString *)string;&#xA;- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessageWithData:(NSData *)data;&#xA;&#xA;- (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error;&#xA;- (void)webSocket:(SRWebSocket *)webSocket didCloseWithCode:(NSInteger)code reason:(nullable NSString *)reason wasClean:(BOOL)wasClean;&#xA;&#xA;@end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Included are setup scripts for the python testing environment. It comes packaged with vitualenv so all the dependencies are installed in userland.&lt;/p&gt; &#xA;&lt;p&gt;To run the short test from the command line, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run all the tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  make test_all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The short tests don&#39;t include the performance tests (the test harness is actually the bottleneck, not SocketRocket).&lt;/p&gt; &#xA;&lt;p&gt;The first time this is run, it may take a while to install the dependencies. It will be smooth sailing after that.&lt;/p&gt; &#xA;&lt;p&gt;You can also run tests inside Xcode, which runs the same thing, but makes it easier to debug.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choose the &lt;code&gt;SocketRocketTests&lt;/code&gt; target&lt;/li&gt; &#xA; &lt;li&gt;Make sure your running destination is either your Mac or any Simulator&lt;/li&gt; &#xA; &lt;li&gt;Run the test action (&lt;code&gt;⌘+U&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TestChat Demo Application&lt;/h3&gt; &#xA;&lt;p&gt;SocketRocket includes a demo app, TestChat. It will &#34;chat&#34; with a listening websocket on port 9900.&lt;/p&gt; &#xA;&lt;h4&gt;TestChat Server&lt;/h4&gt; &#xA;&lt;p&gt;The sever takes a message and broadcasts it to all other connected clients.&lt;/p&gt; &#xA;&lt;p&gt;It requires some dependencies though to run. We also want to reuse the virtualenv we made when we ran the tests. If you haven&#39;t run the tests yet, go into the SocketRocket root directory and type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will set up your &lt;a href=&#34;https://pypi.python.org/pypi/virtualenv&#34;&gt;virtualenv&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now, in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source .env/bin/activate&#xA;pip install git+https://github.com/tornadoweb/tornado.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the same terminal session, start the chatroom server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python TestChatServer/py/chatroom.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s also a Go implementation (with the latest weekly) where you can:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd TestChatServer/go&#xA;go run chatroom.go&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Chatting&lt;/h4&gt; &#xA;&lt;p&gt;Now, start TestChat.app (just run the target in the Xcode project). If you had it started already you can hit the refresh button to reconnect. It should say &#34;Connected!&#34; on top.&lt;/p&gt; &#xA;&lt;p&gt;To talk with the app, open up your browser to &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt; and start chatting.&lt;/p&gt; &#xA;&lt;h2&gt;WebSocket Server Implementation Recommendations&lt;/h2&gt; &#xA;&lt;p&gt;SocketRocket has been used with the following libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tornadoweb/tornado&#34;&gt;Tornado&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go&#39;s &lt;a href=&#34;https://godoc.org/golang.org/x/net/websocket&#34;&gt;WebSocket package&lt;/a&gt; or Gorilla&#39;s &lt;a href=&#34;http://www.gorillatoolkit.org/pkg/websocket&#34;&gt;version&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://autobahn.ws/testsuite/&#34;&gt;Autobahn&lt;/a&gt; (using its fuzzing client).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Tornado one is dirt simple and works like a charm. (&lt;a href=&#34;http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html&#34;&gt;IPython notebook&lt;/a&gt; uses it too). It&#39;s much easier to configure handlers and routes than in Autobahn/twisted.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We’re glad you’re interested in SocketRocket, and we’d love to see where you take it. Please read our &lt;a href=&#34;https://github.com/facebook/SocketRocket/raw/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; prior to submitting a Pull Request.&lt;/p&gt;</summary>
  </entry>
</feed>