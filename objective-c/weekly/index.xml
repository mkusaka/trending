<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-05T01:57:40Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jspahrsummers/libextobjc</title>
    <updated>2023-11-05T01:57:40Z</updated>
    <id>tag:github.com,2023-11-05:/jspahrsummers/libextobjc</id>
    <link href="https://github.com/jspahrsummers/libextobjc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Cocoa library to extend the Objective-C programming language.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;The Extended Objective-C library extends the dynamism of the Objective-C programming language to support additional patterns present in other programming languages (including those that are not necessarily object-oriented).&lt;/p&gt; &#xA;&lt;p&gt;libextobjc is meant to be very modular – most of its classes and modules can be used with no more than one or two dependencies.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;libextobjc currently includes the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Safe categories&lt;/strong&gt;, using EXTSafeCategory, for adding methods to a class without overwriting anything already there (identifying conflicts for you).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Concrete protocols&lt;/strong&gt;, using EXTConcreteProtocol, for providing default implementations of the methods in a protocol.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simpler and safer key paths&lt;/strong&gt;, using EXTKeyPathCoding, which automatically checks key paths at compile-time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compile-time checking of selectors&lt;/strong&gt; to ensure that an object declares a given selector, using EXTSelectorChecking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easier use of weak variables in blocks&lt;/strong&gt;, using &lt;code&gt;@weakify&lt;/code&gt;, &lt;code&gt;@unsafeify&lt;/code&gt;, and &lt;code&gt;@strongify&lt;/code&gt; from the EXTScope module.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scope-based resource cleanup&lt;/strong&gt;, using &lt;code&gt;@onExit&lt;/code&gt; in the EXTScope module, for automatically cleaning up manually-allocated memory, file handles, locks, etc., at the end of a scope.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Algebraic data types&lt;/strong&gt; generated completely at compile-time, defined using EXTADT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Synthesized properties for categories&lt;/strong&gt;, using EXTSynthesize.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Block-based coroutines&lt;/strong&gt;, using EXTCoroutine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;EXTNil, which is like &lt;code&gt;NSNull&lt;/code&gt;, but behaves much more closely to actual &lt;code&gt;nil&lt;/code&gt;&lt;/strong&gt; (i.e., doesn&#39;t crash when sent unrecognized messages).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lots of extensions&lt;/strong&gt; and additional functionality built on top of &lt;code&gt;&amp;lt;objc/runtime.h&amp;gt;&lt;/code&gt;, including extremely customizable method injection, reflection upon object properties, and various functions to extend class hierarchy checks and method lookups.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/jspahrsummers/libextobjc/tree/experimental&#34;&gt;experimental&lt;/a&gt; branch contains additional features that may be interesting, but are not considered stable or safe for production use. Check out the headers for more information.&lt;/p&gt; &#xA;&lt;h1&gt;Running tests&lt;/h1&gt; &#xA;&lt;p&gt;To execute libextobjc&#39;s tests, first run &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to bring in the &lt;a href=&#34;https://github.com/jspahrsummers/xcconfigs&#34;&gt;xcconfigs&lt;/a&gt; submodule, then open the project file and choose the desired test target.&lt;/p&gt; &#xA;&lt;h1&gt;Adding to your project&lt;/h1&gt; &#xA;&lt;p&gt;If you want to add libextobjc as a dependency to an &lt;strong&gt;application&lt;/strong&gt;, add the repository as a &lt;a href=&#34;http://git-scm.com/book/en/Git-Tools-Submodules&#34;&gt;submodule&lt;/a&gt;, then include the source files you care about in your Xcode project.&lt;/p&gt; &#xA;&lt;p&gt;If you want to add libextobjc as a dependency to a &lt;strong&gt;framework or library&lt;/strong&gt;, prefer &lt;a href=&#34;http://git-scm.com/book/en/Git-Tools-Subtree-Merging&#34;&gt;subtree merging&lt;/a&gt;, which will allow you to rename symbols to avoid conflicts, and make any tweaks you need to for your library.&lt;/p&gt; &#xA;&lt;p&gt;To create a libextobjc subtree:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git remote add libextobjc https://github.com/jspahrsummers/libextobjc.git&#xA;$ git fetch libextobjc&#xA;$ git read-tree --prefix=External/ -u libextobjc/master&#xA;$ git reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rename any symbols or change whatever you want, &lt;code&gt;git add&lt;/code&gt; the specific files that you want in your library, and then add them to your Xcode project.&lt;/p&gt; &#xA;&lt;p&gt;To bring in upstream changes later:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git fetch -p libextobjc&#xA;$ git merge -Xsubtree=External/ libextobjc/master&#xA;$ git reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, again, just add the changes you want.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Released under the MIT License. See the &lt;a href=&#34;https://github.com/jspahrsummers/libextobjc/raw/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;libextobjc must be built with ARC enabled, and many of its macros require ARC in the calling files as well. MRR usage is not supported.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zendesk/sdkconfigurations_sdk_ios</title>
    <updated>2023-11-05T01:57:40Z</updated>
    <id>tag:github.com,2023-11-05:/zendesk/sdkconfigurations_sdk_ios</id>
    <link href="https://github.com/zendesk/sdkconfigurations_sdk_ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zendesk SDKConfigurations SDK&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;em&gt;Use of this software is subject to important terms and conditions as set forth in the License file&lt;/em&gt; &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Zendesk SDKConfigurations SDK for iOS&lt;/h1&gt; &#xA;&lt;p&gt;Zendesk SDKConfigurations SDK for mobile. The SDKConfigurations SDK is a shared library among the Zendesk product SDKs. It is used to share some common configuration components among our product SDKs.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find our documentation on &lt;a href=&#34;https://developer.zendesk.com/embeddables&#34;&gt;https://developer.zendesk.com/embeddables&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature requests and issues&lt;/h2&gt; &#xA;&lt;p&gt;All feature requests and issues are welcomed. Please see our &lt;a href=&#34;https://raw.githubusercontent.com/zendesk/sdkconfigurations_sdk_ios/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to find out how to contact us.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and license&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2020 Zendesk&lt;/p&gt; &#xA;&lt;p&gt;By downloading or using the Zendesk SDKConfigurations SDK, You agree to the Zendesk Master Subscription Agreement &lt;a href=&#34;https://www.zendesk.com/company/customers-partners/#master-subscription-agreement&#34;&gt;https://www.zendesk.com/company/customers-partners/#master-subscription-agreement&lt;/a&gt; and Application Developer and API License Agreement &lt;a href=&#34;https://www.zendesk.com/company/customers-partners/#application-developer-api-license-agreement&#34;&gt;https://www.zendesk.com/company/customers-partners/#application-developer-api-license-agreement&lt;/a&gt; and acknowledge that such terms govern Your use of and access to the SDKConfigurations SDK.&lt;/p&gt; &#xA;&lt;p&gt;If You make any Contributions (defined below) to the Zendesk SDKConfigurations SDK, You hereby grant Zendesk a royalty-free, worldwide, transferable, sub-licensable, irrevocable and perpetual license to incorporate into the Service or the Zendesk API or otherwise use and commercially exploit any Contributions. “Contribution” shall mean any work of authorship, including any modifications or additions to the Mobile SDK or derivative works thereof, that is submitted to Zendesk by You.&lt;/p&gt;</summary>
  </entry>
</feed>