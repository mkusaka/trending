<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T02:00:30Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mapbox/mapbox-events-ios</title>
    <updated>2023-12-10T02:00:30Z</updated>
    <id>tag:github.com,2023-12-10:/mapbox/mapbox-events-ios</id>
    <link href="https://github.com/mapbox/mapbox-events-ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mapbox Events Framework for iOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üéü Mapbox Mobile Events&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bitrise.io/app/63d52d847cdb36db&#34;&gt;&lt;img src=&#34;https://app.bitrise.io/app/63d52d847cdb36db/status.svg?token=DDdEMfpVR8emhdGSgToskA&amp;amp;branch=master&#34; alt=&#34;Bitrise&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://codecov.io/gh/mapbox/mapbox-events-ios/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Mapbox Mobile Events SDK collects &lt;a href=&#34;https://www.mapbox.com/telemetry/&#34;&gt;anonymous data&lt;/a&gt; about the map and device location to continuously update and improve your maps.&lt;/p&gt; &#xA;&lt;h3&gt;üì¶ Client Frameworks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/mapbox-gl-native/&#34;&gt;Mapbox Maps SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/mapbox-navigation-ios/&#34;&gt;Mapbox Navigation SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/mapbox-vision-ios&#34;&gt;Mapbox Vision SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mapbox/react-native-mapbox-gl&#34;&gt;Mapbox ReactNative SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üèé Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;If you are using another Mapbox SDK, you should not need to do any special setup to use Mapbox Mobile Events.&lt;/p&gt; &#xA;&lt;p&gt;If you are integrating Mapbox Mobile Events into an application which does not use another Mapbox SDK you will need to include &lt;code&gt;MapboxMobileEvents.framework&lt;/code&gt; in your application, and in the application delegate&#39;s &lt;code&gt;‚Ä¶didFinishLaunching‚Ä¶&lt;/code&gt; method, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;MMEEventsManager *manager = [MMEventsManager.sharedManager &#xA;    initializeWithAccessToken:@&#34;your-mapbox-token&#34; &#xA;    userAgentBase:@&#34;user-agent-string&#34;&#xA;    hostSDKVersion:@&#34;1.0.0&#34;];&#xA;[manager sendTurnstileEvent];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, in Swift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let eventsManager = MMEEventsManager.sharedManager().initialize(&#xA;    withAccessToken: &#34;your-mapbox-token&#34;, &#xA;    userAgentBase: &#34;user-agent-string&#34;, &#xA;    hostSDKVersion: &#34;1.0.0&#34;)&#xA;eventsManager.sendTurnstileEvent()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üéü Sending Events&lt;/h3&gt; &#xA;&lt;p&gt;The preferred API for creating and sending an events uses the private method &lt;code&gt;-MMEEventManager pushEvent:&lt;/code&gt; if you think your application needs to send events please contact your Technical Account Manager or open an issue in this repository with details.&lt;/p&gt; &#xA;&lt;h3&gt;üí£ Debugging&lt;/h3&gt; &#xA;&lt;p&gt;Usually when running the Mobile Events SDK in the Emulator it does not send events or emit debug messages, you can enable these by setting keys in the &lt;code&gt;Info.plist&lt;/code&gt; of your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MMEDebugLogging: YES&#xA;MMECollectionEnabledInSimulator: YES&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üó∫ Foreground and Background Location Collection&lt;/h3&gt; &#xA;&lt;p&gt;The MapboxMobileEvents frameworks collect location data to help us improve the map. We strive to maintain a low power and network usage profile for this collection and take great care to anonymize all data in accordance with our &lt;a href=&#34;https://www.mapbox.com/legal/privacy&#34;&gt;privacy policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The use of Mapbox SDKs and APIs on mobile devices are governed by our&lt;br&gt; &lt;a href=&#34;https://www.mapbox.com/legal/tos#%5BMomMom%5D&#34;&gt;Terms of Service&lt;/a&gt; which requires your app not interfere with or limit the data that the Mapbox SDK sends to us, whether by modifying the SDK or by other means. If your application requires different terms, please contact &lt;a href=&#34;https://www.mapbox.com/contact/sales/&#34;&gt;Mapbox Sales&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Background Location in iOS 13&lt;/h4&gt; &#xA;&lt;p&gt;If your application enables background location, the MapboxMobileEvents framework collects telemetry in the background using a passive method which allows for very low power usage. If your application does not use background location, make sure that the permissions keys for it are removed in the &lt;code&gt;Info.plist&lt;/code&gt;: &lt;code&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/code&gt;, &lt;code&gt;NSLocationAlwaysUsageDescription&lt;/code&gt;, as well as the &lt;code&gt;UIBackgroundMode&lt;/code&gt; &lt;code&gt;location&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;‚ö†Ô∏è Error and Exception Handling and Reporting&lt;/h3&gt; &#xA;&lt;p&gt;The MapboxMobileEvents frameworks strives to contain all internal exceptions and errors in an effort to prevent errors from directly impacting the end users of applications which use the framework. The framework will attempt to report them to our backend, in a redacted form, for analysis by Mapbox.&lt;/p&gt; &#xA;&lt;p&gt;Applications and frameworks which embed &lt;code&gt;MapboxMobileEvents.framework&lt;/code&gt; can implement the &lt;code&gt;MMEEventsManagerDelegate&lt;/code&gt; method after setting &lt;code&gt;MMEEVentsManager.sharedManager.delegate&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;- (void)eventsManager:(MMEEventsManager *)eventsManager &#xA;    didEncounterError:(NSError *)error;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to be informed of any &lt;code&gt;NSError&lt;/code&gt;s or &lt;code&gt;NSException&lt;/code&gt;s the framework encounters. &lt;code&gt;NSException&lt;/code&gt;s are reported wrapped in an &lt;code&gt;NSError&lt;/code&gt; with the error code &lt;code&gt;MMEErrorException&lt;/code&gt; and the exception included in the user info dictionary under the key &lt;code&gt;MMEErrorUnderlyingExceptionKey&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If a framework wishes to report errors via the mobile events API two convenience methods are provided on &lt;code&gt;MMEEventsManager&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;NSError *reportableError = nil;&#xA;// make a call with an **error paramater&#xA;[MMEEventsManager.sharedManager reportError:reportableError];&#xA;&#xA;@try {&#xA;    // do something dangerous&#xA;}&#xA;@catch (NSException *exceptional) {&#xA;    [MMEEventsManager.sharedManager reportException:exceptional];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üß™ Testing&lt;/h3&gt; &#xA;&lt;p&gt;Some legacy test cases are written using &lt;a href=&#34;https://github.com/cedarbdd/cedar&#34;&gt;Cedar&lt;/a&gt;, to run the test in &lt;code&gt;Xcode&lt;/code&gt; using &lt;code&gt;Command-U&lt;/code&gt; you&#39;ll need to unzip the framework located in the &lt;code&gt;Carthage/Build/iOS/&lt;/code&gt; to run these tests.&lt;/p&gt;</summary>
  </entry>
</feed>