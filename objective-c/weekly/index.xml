<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-30T01:48:56Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SmileZXLee/IpaDownloadTool</title>
    <updated>2022-10-30T01:48:56Z</updated>
    <id>tag:github.com,2022-10-30:/SmileZXLee/IpaDownloadTool</id>
    <link href="https://github.com/SmileZXLee/IpaDownloadTool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;输入下载页面链接自动解析ipa下载地址，支持本地下载，支持蒲公英和fir及其他所有自定义下载页面(由于是通过拦截webView的itms-services://请求获取plist文件，因此理论上可无视所有的请求加密、校验措施，支持各类企业版、内测包ipa下载)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IpaDownloadTool&lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;http://www.zxlee.cn/IpaDownloadToolLogo.png&#34; width=&#34;150&#34; height=&#34;150&#34;&gt; &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SmileZXLee/IpaDownloadTool/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/SmileZXLee/IpaDownloadTool?style=flat&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apple.com/nl/ios/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-iOS%209.0%2B%20-blue.svg?style=flat&#34; alt=&#34;Support&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/skx926/KSPhotoBrowser/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?style=flat&#34; alt=&#34;License MIT&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;Release版本(当前版本v2.0.1)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://static.ifafu.cn/IpaDownloadTool.ipa&#34;&gt;点击此处直接下载最新IPA提取器安装包&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;反馈qq群：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=vU2fKZZH&#34;&gt;790460711&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;功能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;此工具用来快捷下载/储存第三方来源的ipa&lt;/li&gt; &#xA; &lt;li&gt;支持蒲公英、fir下载页面拦截ipa地址、ipa下载&lt;/li&gt; &#xA; &lt;li&gt;支持其他网站自定义h5页面拦截ipa地址、ipa下载&lt;/li&gt; &#xA; &lt;li&gt;支持网址&amp;amp;二维码扫描方式录入网址&lt;/li&gt; &#xA; &lt;li&gt;支持下载历史记录列表，可以本地储存任意数量的ipa，无需担心下载页面失效导致ipa丢失&lt;/li&gt; &#xA; &lt;li&gt;支持ipa本地下载，分享给朋友或隔空投送发送至电脑&lt;/li&gt; &#xA; &lt;li&gt;不支持App Store ipa下载&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;使用须知&lt;/h3&gt; &#xA;&lt;p&gt;“IPA提取器”是一个用于提取第三方网页中的ipa并进行测试的应用程序，仅限用于学习交流，不得将“IPA提取器”或其衍生版本用于任何违法违规的用途，不得用于提取任何违法违规的ipa！由于违规使用导致的任何后果开发者不承担任何责任！&lt;/p&gt; &#xA;&lt;h3&gt;预览&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;操作演示&lt;/th&gt; &#xA;   &lt;th&gt;应用详情&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;http://www.zxlee.cn/IpaDownloadToolDemo.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/17729343-ab4b953d0a0696a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;项目中使用的第三方:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexleutgoeb/ALToastView&#34;&gt;ALToastView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kingsic/SGQRCode&#34;&gt;SGQRCode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onegray/UIViewController-BackButtonHandler&#34;&gt;BackButtonHandler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ninjinkun/NJKWebViewProgress&#34;&gt;NJKWebViewProgress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SmileZXLee/ZXTableView&#34;&gt;ZXTableView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SmileZXLee/ZXDataHandle&#34;&gt;ZXDataHandle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;更新日志&lt;/h3&gt; &#xA;&lt;h4&gt;2022.10.17(v2.0.1)&lt;/h4&gt; &#xA;&lt;p&gt;1.【新增】支持直接下载网页中的ipa文件。&lt;br&gt; 2.【新增】IPA提取器主页添加网页前进、后退、重新加载操作。&lt;br&gt; 3.【新增】ipa提取历史支持根据时间或文件名排序。&lt;br&gt; 4.【新增】网页浏览历史页面支持编辑网页标题。&lt;br&gt; 5.【新增】支持数据导入导出。&lt;br&gt; 6.【修复】当网址中包含中文时，网页加载失败的问题。&lt;br&gt; 7.【修复】plist文件下载失败时，应用闪退的问题。&lt;br&gt; 8.【修复】网页历史记录中网站logo不展示的问题。&lt;br&gt; 9.【修复】横屏时网页加载进度条错位的问题。&lt;br&gt; 10.【修复】修复在iPad中，点击应用详情中的：点击分享/重新下载项时闪退的问题。&lt;br&gt; 11.【优化】提取ipa信息成功后可直接跳转到详情。&lt;br&gt; 12.【优化】删除下载中断的文件。&lt;br&gt; 13.【优化】ipa提取规则&amp;amp;细节。&lt;br&gt; 14.【优化】APP重新打开自动加载最近一次加载的网页。&lt;br&gt; 15.【优化】分享的文件名显示原名，而非显示md5之后的密文。&lt;/p&gt; &#xA;&lt;h4&gt;2022.09.27(v1.0.3)&lt;/h4&gt; &#xA;&lt;p&gt;1.修复在iOS15+系统中，导航栏变黑的问题；&lt;br&gt; 2.修复在iOS15+系统中，tableView顶部有一段间隙的问题；&lt;br&gt; 3.修复在某些情况下，网页历史记录中网址记录不全的问题；&lt;br&gt; 4.已下载页面支持侧滑删除所下载的ipa；&lt;br&gt; 5.添加版本号相关信息&lt;/p&gt; &#xA;&lt;h4&gt;2021.01.16(v1.0.2)&lt;/h4&gt; &#xA;&lt;p&gt;1.支持蒲公英超级签名(eucoming.com)及类似平台，新增对安装描述文件的检测和提示；&lt;br&gt; 2.新增打开App自动从剪切板读取并询问是否加载；&lt;br&gt; 3.支持修改本地应用名称，在ipa解析历史列表和下载列表中添加版本号的展示；&lt;br&gt; 4.支持长按【网页】按钮查看访问的网页历史，单击打开对应网页；&lt;br&gt; 5.体验优化。&lt;/p&gt; &#xA;&lt;h4&gt;2019.11.14(v1.0.1)&lt;/h4&gt; &#xA;&lt;p&gt;修复在iOS13中重签名之后无法正常下载ipa的问题，感谢&lt;a href=&#34;https://github.com/ningQAQ&#34;&gt;@ningQAQ&lt;/a&gt;的帮助。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>insoxin/imaotai</title>
    <updated>2022-10-30T01:48:56Z</updated>
    <id>tag:github.com,2022-10-30:/insoxin/imaotai</id>
    <link href="https://github.com/insoxin/imaotai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;i茅台app 每日自动预约 抢茅台&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;imaotai&lt;/h1&gt; &#xA;&lt;p&gt;i茅台app 每日自动预约 抢茅台&lt;/p&gt; &#xA;&lt;p&gt;软件免费,无任何盈利 不要相信任何收费.唯一更新地址&lt;a href=&#34;https://github.com/insoxin/imaotai/&#34;&gt;https://github.com/insoxin/imaotai/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;使用方法&lt;/h1&gt; &#xA;&lt;h2&gt;1.拉取镜像&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;docker pull insoxin/imaotai:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2.创建容器&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;docker run -dit --name imaotai -p 1499:1499 -v $PWD/imaotai/config:/go/src/imaotai/config --restart unless-stopped insoxin/imaotai:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3.配置参数&lt;/h2&gt; &#xA;&lt;h3&gt;配置config.json&lt;/h3&gt; &#xA;&lt;p&gt;下载下载&lt;a href=&#34;https://github.com/insoxin/imaotai/raw/main/config/config.json&#34;&gt;https://github.com/insoxin/imaotai/blob/main/config/config.json&lt;/a&gt; 至本地 /root/imaotai/config/config.json&lt;/p&gt; &#xA;&lt;p&gt;修改本地/root/imaotai/config/config.json参数&lt;/p&gt; &#xA;&lt;p&gt;User-Agent,Client_Secret,Cookie.必填&lt;/p&gt; &#xA;&lt;p&gt;还有经纬度不要默认(APP数据以高德地图为准) 程序会就近预约最近距离店铺 若不想预约太远店铺,可设置GeoKM参数 默认0无限制&lt;/p&gt; &#xA;&lt;p&gt;其他配置不懂的默认即可&lt;/p&gt; &#xA;&lt;p&gt;默认每天九点执行(淘宝时间库),预约抢购页面获取到的前四个商品.&lt;/p&gt; &#xA;&lt;h3&gt;配置sendNotify.js 通知&lt;/h3&gt; &#xA;&lt;p&gt;下载&lt;a href=&#34;https://github.com/insoxin/imaotai/raw/main/config/sendNotify.js&#34;&gt;https://github.com/insoxin/imaotai/blob/main/config/sendNotify.js&lt;/a&gt; 至本地/root/imaotai/config/sendNotify.js&lt;/p&gt; &#xA;&lt;p&gt;sendNotify.js是通知文件按需修改&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;Main&#34;: {&#xA;    &#34;Title&#34;: &#34;insoxin/imaotai&#34;,&#xA;    &#34;Open&#34;: &#34;1,2,3,4&#34;,&#xA;    &#34;cron&#34;: &#34;0 0 9 * * *&#34;,&#xA;    &#34;Tzone&#34;: &#34;http://api.m.taobao.com/rest/api3.do?api=mtop.common.getTimestamp&#34;,&#xA;    &#34;MT-APP-Version&#34;: &#34;1.0.0&#34;,&#xA;    &#34;GeoN&#34;: &#34;26.598194&#34;,&#xA;    &#34;GeoE&#34;: &#34;106.707410&#34;,&#xA;    &#34;GeoKM&#34;:&#34;0&#34;,&#xA;    &#34;sendNotify&#34;: &#34;/config/sendNotify.js&#34;,&#xA;    &#34;oksendNotify&#34;: &#34;true&#34;&#xA;  },&#xA;  &#34;user&#34;: {&#xA;    &#34;Cookie&#34;: &#34;&#34;,&#xA;    &#34;Origin&#34;: &#34;https://h5.moutai519.com.cn&#34;,&#xA;    &#34;Client_Secret&#34;: &#34;aaa&#34;,&#xA;    &#34;User-Agent&#34;: &#34;Mozilla/5.0 (iPhone; CPU iPhone OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 moutaiapp/1.0.6 device-id/insoxin/imaotai&#34;&#xA;  },&#xA;  &#34;Notice&#34;: &#34;通知中的标题&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;4.重启 imaotai&lt;/h2&gt; &#xA;&lt;h2&gt;5.点个star 再进 &lt;a href=&#34;https://github.com/insoxin/&#34;&gt;https://github.com/insoxin/&lt;/a&gt; 点follow 关注一下 项目被ban了 我会第一时间更新 新项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://blog.isoyu.com/wp-content/uploads/2022/04/2022040300072260.jpg&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>headkaze/Hackintool</title>
    <updated>2022-10-30T01:48:56Z</updated>
    <id>tag:github.com,2022-10-30:/headkaze/Hackintool</id>
    <link href="https://github.com/headkaze/Hackintool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Swiss army knife of vanilla Hackintoshing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hackintool&lt;/h1&gt; &#xA;&lt;p&gt;The Swiss army knife of vanilla Hackintoshing&lt;/p&gt; &#xA;&lt;h1&gt;WARNING!&lt;/h1&gt; &#xA;&lt;p&gt;Hackintool is not an automated patching tool that does all the work for you. Knowledge is required on how to patch before using it. Please read the Intel Framebuffer patching using WhateverGreen guide before you download this tool! I also recommend reading @jaymonkey&#39;s An iDiot&#39;s Guide To Lilu and its Plug-ins and @CaseySJ&#39;s General Framebuffer Patching Guide using Hackintool.&lt;/p&gt; &#xA;&lt;h1&gt;Mojave, Lilu + WhateverGreen&lt;/h1&gt; &#xA;&lt;p&gt;You cannot use the Clover&#39;s KextsToPatch for framebuffer patching in Mojave for Skylake and above&lt;/p&gt; &#xA;&lt;h1&gt;Framebuffer Dumps&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are a few ways to dump your framebuffer data (the second two require WhateverGreen + Lilu debug versions) to read in Hackintool:&lt;/li&gt; &#xA; &lt;li&gt;Use the Framebuffer-&amp;gt;macOS 10.13.6 / Framebuffer-&amp;gt;macOS 10.14 menu to create patches without a framebuffer dump&lt;/li&gt; &#xA; &lt;li&gt;Use the -igfxdump boot flag to dump IGPU framebuffer kext to /AppleIntelFramebuffer_X_Y (root of your boot drive) and then File-&amp;gt;Open menu&lt;/li&gt; &#xA; &lt;li&gt;Use the -igfxfbdump boot flag to dump native and patched framebuffer table to ioreg and then File-&amp;gt;Import-&amp;gt;IOReg Dump menu&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports Sandy Bridge, Ivy Bridge, Haswell, Broadwell, Skylake, Kaby Lake, Coffee Lake, Cannon Lake and Ice Lake generations&lt;/li&gt; &#xA; &lt;li&gt;Create All, Connectors or VRAM patches&lt;/li&gt; &#xA; &lt;li&gt;Detect Changes for auto patch creation&lt;/li&gt; &#xA; &lt;li&gt;Create Clover patches in hex, base64 or Devices/Properties formats&lt;/li&gt; &#xA; &lt;li&gt;Displays native GPU and Model identifiers&lt;/li&gt; &#xA; &lt;li&gt;Display and edit Memory Info such as Stolen, Framebuffer, VRAM, Cursor etc.&lt;/li&gt; &#xA; &lt;li&gt;Roll over some items for additional info (Tooltips)&lt;/li&gt; &#xA; &lt;li&gt;Reads &#34;live&#34; data directly from Framebuffer kexts (if available; see Mojave note below)&lt;/li&gt; &#xA; &lt;li&gt;File-&amp;gt;Open framebuffer file generated by WhateverGreen&#39;s -igfxdump boot flag&lt;/li&gt; &#xA; &lt;li&gt;File-&amp;gt;Export-&amp;gt;Clover config.plist / File-&amp;gt;Export-&amp;gt;Framebuffer.txt file&lt;/li&gt; &#xA; &lt;li&gt;Patch audio layout id&lt;/li&gt; &#xA; &lt;li&gt;Add USB port limit patch&lt;/li&gt; &#xA; &lt;li&gt;Plug and unplug USB2 / USB3 devices and set port connector types then generate a USBPorts.kext&lt;/li&gt; &#xA; &lt;li&gt;Advanced patching options (DVMT pre-alloc 32 MB, VRAM 2048 MB, Disable eGPU, Enable HDMI20 (4K), DP -&amp;gt; HDMI, GfxYTile Fix, Reboot Fix, USB port Limit, Spoof Audio Device Id, FB Port Limit, Spoof Gfx Device Id)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits &amp;amp; Contributions&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;vit9696 for WhateverGreen (full credits), Lilu (full credits), AppleALC (full credits), original USBPorts.kext and additional help&lt;/li&gt; &#xA; &lt;li&gt;vit9696 for IntelFramebuffer.bt with additional work by bcc9, Piker-Alpha and joevt&lt;/li&gt; &#xA; &lt;li&gt;daliansky for Intel Core Platform ID and SMBIOS Quick Reference&lt;/li&gt; &#xA; &lt;li&gt;Clover Development Team for various technical info&lt;/li&gt; &#xA; &lt;li&gt;vandroiy2013 for audio id data from AppleALC&lt;/li&gt; &#xA; &lt;li&gt;RehabMan for the all data patching method, ioreg framebuffer dump and other contributions&lt;/li&gt; &#xA; &lt;li&gt;EDID injection (Andy Vandijck / Marchrius)&lt;/li&gt; &#xA; &lt;li&gt;USB power injection (corpnewt)&lt;/li&gt; &#xA; &lt;li&gt;HDA controllers / codec lists by the VoodooHDA project&lt;/li&gt; &#xA; &lt;li&gt;System Configs compilation (CaseySJ)&lt;/li&gt; &#xA; &lt;li&gt;Clover downloader (Kozlek / JrCs / slice)&lt;/li&gt; &#xA; &lt;li&gt;Kext compiler &amp;amp; installer (Sascha Lamprecht / Gengik84 / LAbyOne)&lt;/li&gt; &#xA; &lt;li&gt;Atheros &amp;amp; SATA kexts (Sascha Lamprecht)&lt;/li&gt; &#xA; &lt;li&gt;DPCIManager (phpdev32 / MuntashirAkon)&lt;/li&gt; &#xA; &lt;li&gt;AppleIntelInfo (Pike R. Alpha)&lt;/li&gt; &#xA; &lt;li&gt;gfxutil (mcmatrix)&lt;/li&gt; &#xA; &lt;li&gt;VDADecoderChecker (Andy Breuhan)&lt;/li&gt; &#xA; &lt;li&gt;iMessageDebug (ElNono / mdmwii / flux84 / sugarface / pokenguyen)&lt;/li&gt; &#xA; &lt;li&gt;macserial (vit9696 / MacInfoPkg team)&lt;/li&gt; &#xA; &lt;li&gt;Model data (everymac.com)&lt;/li&gt; &#xA; &lt;li&gt;Translations: French (Matgen84), German (al6042), Korean (zisqo), Russian / Ukrainian (ctich), Chinese (daliansky, Bat.bat, penghubingzhou)&lt;/li&gt; &#xA; &lt;li&gt;Sparkle framework by Andy Matuschak&lt;/li&gt; &#xA; &lt;li&gt;Icon &amp;amp; UI updates by ultratiem&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>