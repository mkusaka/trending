<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-16T02:01:03Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sureJiang/MSCrashProtector</title>
    <updated>2023-04-16T02:01:03Z</updated>
    <id>tag:github.com,2023-04-16:/sureJiang/MSCrashProtector</id>
    <link href="https://github.com/sureJiang/MSCrashProtector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Global protection scheme..&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MSCrashProtector&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apple.com/nl/ios/&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/YYKit.svg?style=flat&#34; alt=&#34;platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JZJJZJ/MSCrashProtector/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?style=flat&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JZJJZJ/MSCrashProtector.git&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/AFNetworking.svg?sanitize=true&#34; alt=&#34;CocoaPods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JZJJZJ/MSCrashProtector.git&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/badges/shields.svg?style=social&amp;amp;logo=github&amp;amp;label=Stars&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An Global protection scheme..&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Cocoapods(Recommended)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;pod &#39;MSCrashProtector&#39;&lt;/code&gt; to your Podfile.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pod install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add all files under &lt;code&gt;MSCrashProtector&lt;/code&gt; to your project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 5.0 and greater&lt;/li&gt; &#xA; &lt;li&gt;ARC/MRC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;h3&gt;Objective-C&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;&#xA;    #import &#34;MSCrashProtector.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;        &#xA;    //NSArray&#xA;    NSArray* arr = @[@&#34;1&#34;];&#xA;    [arr objectAtIndexSafe:10];&#xA;    id obj = [arr objectAtIndex:0 kindOfClass:[NSString class]];&#xA;    NSLog(@&#34;%@&#34;,obj);&#xA;    &#xA;    //NSMutableArray&#xA;    NSMutableArray* marr = [NSMutableArray array];&#xA;    [marr addObjectSafe:nil];&#xA;    [marr removeObjectAtIndexInBoundary:100];&#xA;    [marr insertObject:@111 atIndexInBoundary:100];&#xA;&#xA;    &#xA;    //NSDictionary&#xA;    NSDictionary* dic = [NSDictionary dictionary];&#xA;    [dic objectForKey:nil defaultValue:@&#34;test&#34;];&#xA;&#xA;    //NSMutableDictionary&#xA;    NSMutableDictionary* mdic = [NSMutableDictionary dictionary];&#xA;    [mdic setObjectSafe:nil forKey:nil];&#xA;    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MSCrashProtector is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mattt/InflectorKit</title>
    <updated>2023-04-16T02:01:03Z</updated>
    <id>tag:github.com,2023-04-16:/mattt/InflectorKit</id>
    <link href="https://github.com/mattt/InflectorKit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Efficiently Singularize and Pluralize Strings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;InflectorKit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mattt/InflectorKit/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;InflectorKit is a port of the string inflection functionality from &lt;a href=&#34;https://github.com/rails/rails/raw/master/activesupport/lib/active_support/inflector/inflections.rb&#34;&gt;Rails ActiveSupport&lt;/a&gt; for Swift and Objective-C.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;InflectorKit joins &lt;a href=&#34;https://github.com/mattt/FormatterKit&#34;&gt;FormatterKit&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/mattt/TransformerKit&#34;&gt;TransformerKit&lt;/a&gt; in providing well-designed APIs for manipulating user-facing content.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Swift&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import InflectorKit&#xA;&#xA;for singular in [&#34;person&#34;, &#34;tomato&#34;, &#34;matrix&#34;, &#34;octopus&#34;, &#34;fish&#34;] {&#xA;    print(&#34;\(singular) → \(singular.pluralized)&#34;)&#xA;}&#xA;/*&#xA;Prints:&#xA;person → people&#xA;tomato → tomatoes&#xA;matrix → matrices&#xA;octopus → octopi&#xA;fish → fish&#xA;*/&#xA;&#xA;// You can also add pluralization rules,&#xA;// including irregular and uncountable words:&#xA;&#xA;let inflector = StringInflector.default&#xA;inflector.addPluralRule(#&#34;^i(Pod|Pad)( Mini)?$&#34;#, replacement: #&#34;i$1s$2&#34;#)&#xA;inflector.addIrregular(singular: &#34;lol&#34;, plural: &#34;lolz&#34;)&#xA;inflector.addUncountable(&#34;Herokai&#34;)&#xA;&#xA;for singular in [&#34;iPad Mini&#34;, &#34;lol&#34;, &#34;Herokai&#34;] {&#xA;    print(&#34;\(singular) → \(singular.pluralized)&#34;)&#xA;}&#xA;/*&#xA;Prints:&#xA;iPad Mini → iPads Mini&#xA;lol → lolz&#xA;Herokai → Herokai&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Objective-C&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;#import &#34;NSString+InflectorKit.h&#34;&#xA;&#xA;for (NSString *singular in @[@&#34;person&#34;, @&#34;tomato&#34;, @&#34;matrix&#34;, @&#34;octopus&#34;, @&#34;fish&#34;]) {&#xA;  NSLog(@&#34;%@ → %@&#34;, singular, [singular pluralizedString]);&#xA;}&#xA;&#xA;/*&#xA;Prints:&#xA;person → people&#xA;tomato → tomatoes&#xA;matrix → matrices&#xA;octopus → octopi&#xA;fish → fish&#xA;*/&#xA;&#xA;// You can also add pluralization rules,&#xA;// including irregular and uncountable words:&#xA;&#xA;TTTStringInflector *inflector = [TTTStringInflector defaultInflector];&#xA;[inflector addPluralRule:@&#34;^i(Pod|Pad)( Mini)?$&#34; withReplacement:@&#34;i$1s$2&#34;];&#xA;[inflector addIrregularWithSingular:@&#34;lol&#34; plural:@&#34;lolz&#34;];&#xA;[inflector addUncountable:@&#34;Herokai&#34;];&#xA;&#xA;for (NSString *singular in @[@&#34;iPad Mini&#34;, @&#34;lol&#34;, @&#34;Herokai&#34;]) {&#xA;  NSLog(@&#34;%@ → %@&#34;, singular, [singular pluralizedString]);&#xA;}&#xA;&#xA;/*&#xA;Prints:&#xA;iPad Mini → iPads Mini&#xA;lol → lolz&#xA;Herokai → Herokai&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Add the InflectorKit package to your target dependencies in &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;import PackageDescription&#xA;&#xA;let package = Package(&#xA;  name: &#34;YourProject&#34;,&#xA;  dependencies: [&#xA;    .package(&#xA;        url: &#34;https://github.com/mattt/InflectorKit&#34;,&#xA;        from: &#34;1.0.0&#34;&#xA;    ),&#xA;  ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the &lt;code&gt;swift build&lt;/code&gt; command to build your project.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;InflectorKit&lt;/code&gt; via CocoaPods, by adding the following line to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;InflectorKit&#39;, &#39;~&amp;gt; 1.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the &lt;code&gt;pod install&lt;/code&gt; command to download the library and integrate it into your Xcode project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Mattt (&lt;a href=&#34;https://twitter.com/mattt&#34;&gt;@mattt&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>urbanairship/ios-library</title>
    <updated>2023-04-16T02:01:03Z</updated>
    <id>tag:github.com,2023-04-16:/urbanairship/ios-library</id>
    <link href="https://github.com/urbanairship/ios-library" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Urban Airship iOS SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Airship iOS SDK&lt;/h1&gt; &#xA;&lt;p&gt;The Airship SDK for iOS provides a simple way to integrate Airship services into your iOS applications.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipCore&#34;&gt;AirshipCore Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipBasement/&#34;&gt;AirshipBasement Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipAccengage&#34;&gt;AirshipAccengage Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipAutomation&#34;&gt;AirshipAutomation Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipChat&#34;&gt;AirshipChat Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipExtendedActions&#34;&gt;AirshipExtendedActions Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipLocation&#34;&gt;AirshipLocation Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipMessageCenter&#34;&gt;AirshipMessageCenter Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipPreferenceCenter&#34;&gt;AirshipPreferenceCenter Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipNotificationServiceExtension&#34;&gt;AirshipNotificationServiceExtension Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipNotificationContentExtension&#34;&gt;AirshipNotificationContentExtension Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://docs.airship.com/platform/ios/&#34;&gt;Getting started guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/urbanairship/ios-library/main/Documentation/Migration/README.md&#34;&gt;Migration Guides&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/urbanairship/ios-library/main/Sample/README.md&#34;&gt;Sample Quickstart Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/urbanairship/ios-library/main/SwiftSample/README.md&#34;&gt;Swift Sample Quickstart Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Xcode 13.0+ is required to use the Airship SDK.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have the &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt; dependency manager installed. You can do so by executing the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gem install cocoapods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The primary Airship pod includes the standard feature set and is advisable to use for most use cases. The standard feature set includes Push, Actions, In-App Automation, and Message Center&lt;/p&gt; &#xA;&lt;p&gt;Example podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;# Airship SDK&#xA;target &#34;&amp;lt;Your Target Name&amp;gt;&#34; do&#xA;  pod &#39;Airship&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Airship&lt;/code&gt; pod also contains several subspecs that can be installed independently and in combination with one another when only a particular selection of functionality is desired:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/Core&lt;/code&gt; : Push messaging features including channels, tags, named user and default actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/MessageCenter&lt;/code&gt; : Message center&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/Automation&lt;/code&gt; : Automation and in-app messaging&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/Location&lt;/code&gt; : Location including geofencing and beacons&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/ExtendedActions&lt;/code&gt; : Extended actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/PreferenceCenter&lt;/code&gt; : Preference center&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Airship/Chat&lt;/code&gt; : Live chat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;target &#34;&amp;lt;Your Target Name&amp;gt;&#34; do&#xA;  pod &#39;Airship/Core&#39;&#xA;  pod &#39;Airship/MessageCenter&#39;&#xA;  pod &#39;Airship/Automation&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pod install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to take advantage of notification attachments, you will need to create a notification service extension alongside your main application. Most of the work is already done for you, but since this involves creating a new target there are a few additional steps. First create a new &#34;Notification Service Extension&#34; target. Then add AirshipExtensions/NotificationService to the new target:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;# Airship SDK&#xA;target &#34;&amp;lt;Your Service Extension Target Name&amp;gt;&#34; do&#xA;  pod &#39;AirshipServiceExtension&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pod install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then delete all the dummy source code for the new extension and have it inherit from UANotificationServiceExtension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import AirshipServiceExtension&#xA;&#xA;class NotificationService: UANotificationServiceExtension {&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other Installation Methods&lt;/h3&gt; &#xA;&lt;p&gt;For other installation methods, see the - &lt;a href=&#34;http://docs.airship.com/platform/ios.html#installation&#34;&gt;Getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;An Important Note about Location&lt;/h3&gt; &#xA;&lt;p&gt;In Spring 2019, Apple began rejecting applications that use, or appear to use, Core Location services without supplying usage descriptions in their &lt;code&gt;Info.plist&lt;/code&gt; files. In Airship SDK 11, all references to CoreLocation have been removed from the core library and placed in a separate location framework. Developers with no need for location services can continue to use Airship as before, but for those who have been using the &lt;code&gt;UALocation&lt;/code&gt; class, see the &lt;a href=&#34;https://docs.airship.com/platform/ios/location/&#34;&gt;Location&lt;/a&gt; sections for updated setup instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;As of SDK 10.2 and Apple&#39;s current App Store review policies, apps building against Airship without location usage descriptions in &lt;code&gt;Info.plist&lt;/code&gt; are likely to be rejected. The easiest way to avoid this, if location services are not needed, is to use Airship SDK 11 or greater. If building against previous Airship SDKs, you will need to add add usage description strings to your &lt;code&gt;Info.plist&lt;/code&gt; file under the &lt;code&gt;NSLocationAlwaysUsageDescription&lt;/code&gt;, &lt;code&gt;NSLocationWhenInUseUsageDescription&lt;/code&gt;, and &lt;code&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/code&gt; keys.&lt;/p&gt; &#xA;&lt;h3&gt;Capabilities&lt;/h3&gt; &#xA;&lt;p&gt;Enable Push Notifications and Remote Notifications Background mode under the capabilities section for the main application target.&lt;/p&gt; &#xA;&lt;h3&gt;Adding an Airship Config File&lt;/h3&gt; &#xA;&lt;p&gt;The library uses a .plist configuration file named &lt;code&gt;AirshipConfig.plist&lt;/code&gt; to manage your production and development application profiles. Example copies of this file are available in all of the sample projects. Place this file in your project and set the following values to the ones in your application at &lt;a href=&#34;http://go.urbanairship.com&#34;&gt;http://go.urbanairship.com&lt;/a&gt;. To view all the possible keys and values, see the &lt;a href=&#34;https://docs.airship.com/reference/libraries/ios/latest/AirshipCore/Classes/Config.html&#34;&gt;Config class reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also edit the file as plain-text:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;    &amp;lt;!DOCTYPE plist PUBLIC &#34;-//Apple//DTD PLIST 1.0//EN&#34; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&amp;gt;&#xA;    &amp;lt;plist version=&#34;1.0&#34;&amp;gt;&#xA;    &amp;lt;dict&amp;gt;&#xA;      &amp;lt;key&amp;gt;detectProvisioningMode&amp;lt;/key&amp;gt;&#xA;      &amp;lt;true/&amp;gt;&#xA;      &amp;lt;key&amp;gt;developmentAppKey&amp;lt;/key&amp;gt;&#xA;      &amp;lt;string&amp;gt;Your Development App Key&amp;lt;/string&amp;gt;&#xA;      &amp;lt;key&amp;gt;developmentAppSecret&amp;lt;/key&amp;gt;&#xA;      &amp;lt;string&amp;gt;Your Development App Secret&amp;lt;/string&amp;gt;&#xA;      &amp;lt;key&amp;gt;productionAppKey&amp;lt;/key&amp;gt;&#xA;      &amp;lt;string&amp;gt;Your Production App Key&amp;lt;/string&amp;gt;&#xA;      &amp;lt;key&amp;gt;productionAppSecret&amp;lt;/key&amp;gt;&#xA;      &amp;lt;string&amp;gt;Your Production App Secret&amp;lt;/string&amp;gt;&#xA;    &amp;lt;/dict&amp;gt;&#xA;    &amp;lt;/plist&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library will auto-detect the production mode when setting &lt;code&gt;detectProvisioningMode&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Advanced users may add scripting or preprocessing logic to this .plist file to automate the switch from development to production keys based on the build type.&lt;/p&gt; &#xA;&lt;h3&gt;Call Takeoff&lt;/h3&gt; &#xA;&lt;p&gt;To enable push notifications, you will need to make several additions to your application delegate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&amp;gt; Bool {&#xA;    ...&#xA;&#xA;    Airship.takeOff(launchOptions: launchOptions)&#xA;&#xA;    return true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable push later on in your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    // Somewhere in the app, this will enable push (setting it to NO will disable push,&#xA;    // which will trigger the proper registration or de-registration code in the library).&#xA;    Airship.push.userPushNotificationsEnabled = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SDK Development&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have the CocoaPods dependency manager installed. You can do so by executing the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gem install cocoapods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the pods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pod install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open Airship.xcworkspace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ open Airship.xcworkspace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the Samples AirshipConfig by copying&lt;code&gt;AirshipConfig.plist.sample&lt;/code&gt; to &lt;code&gt;AirshipConfig.plist&lt;/code&gt; and update the app&#39;s credentials. You should now be able to build, run tests, and run the samples.&lt;/p&gt; &#xA;&lt;p&gt;The distribution can be generated by running the build.sh script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Continuous integration will run &lt;code&gt;scripts/run_ci_tasks.sh&lt;/code&gt; for every PR submitted.&lt;/p&gt;</summary>
  </entry>
</feed>