<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T01:57:19Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>khanhduytran0/LiveContainer</title>
    <updated>2023-08-06T01:57:19Z</updated>
    <id>tag:github.com,2023-08-06:/khanhduytran0/LiveContainer</id>
    <link href="https://github.com/khanhduytran0/LiveContainer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run unsigned iOS app without actually installing it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LiveContainer&lt;/h1&gt; &#xA;&lt;p&gt;Run unsigned iOS app without actually installing it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allows you to install unlimited apps (10 apps limit of free developer account do not apply here!)&lt;/li&gt; &#xA; &lt;li&gt;Codesigning is entirely bypassed (requires JIT), no need to sign your apps before installing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Unfortunately not all apps work in LiveContainer so we have a &lt;a href=&#34;https://github.com/khanhduytran0/LiveContainer/labels/compatibility&#34;&gt;compatibility list&lt;/a&gt; to tell if there is apps that have issues. If they arent on this list. Then its likely going run. However, if it doesnt work please make a &lt;a href=&#34;https://github.com/khanhduytran0/LiveContainer/issues/new/choose&#34;&gt;github issue&lt;/a&gt; about it.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;export THEOS=/path/to/theos&#xA;git submodule init&#xA;git submodule update&#xA;make package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Requires SideStore; AltStore does not work because it expects the app opened before enabling JIT.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build from source or get prebuilt ipa in &lt;a href=&#34;https://github.com/khanhduytran0/LiveContainer/actions&#34;&gt;the Actions tab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open LiveContainer, tap the plus icon in the upper right hand corner and select IPA files to install.&lt;/li&gt; &#xA; &lt;li&gt;Choose the app you want to open in the next launch.&lt;/li&gt; &#xA; &lt;li&gt;Tap the play icon, it will jump to SideStore and exit.&lt;/li&gt; &#xA; &lt;li&gt;In SideStore, hold down LiveContainer and tap &lt;code&gt;Enable JIT&lt;/code&gt;. If you have SideStore build supporting JIT URL scheme, it jumps back to LiveContainer with JIT enabled and the guest app is ready to use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;h3&gt;Patching guest executable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Patch &lt;code&gt;__PAGEZERO&lt;/code&gt; segment: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;vmaddr&lt;/code&gt; to &lt;code&gt;0xFFFFC000&lt;/code&gt; (&lt;code&gt;0x100000000 - 0x4000&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;vmsize&lt;/code&gt; to &lt;code&gt;0x4000&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Change &lt;code&gt;MH_EXECUTE&lt;/code&gt; to &lt;code&gt;MH_DYLIB&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Patching &lt;code&gt;@executable_path&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Call &lt;code&gt;_dyld_get_image_name(0)&lt;/code&gt; to get image name pointer.&lt;/li&gt; &#xA; &lt;li&gt;Overwrite its content with guest executable path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Patching &lt;code&gt;NSBundle.mainBundle&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This property is overwritten with the guest app&#39;s bundle.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bypassing Library Validation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Derived from &lt;a href=&#34;https://blog.xpnsec.com/restoring-dyld-memory-loading&#34;&gt;Restoring Dyld Memory Loading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;JIT is required to bypass codesigning.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;dlopening the executable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Call &lt;code&gt;dlopen&lt;/code&gt; with the guest app&#39;s executable&lt;/li&gt; &#xA; &lt;li&gt;Find the entry point&lt;/li&gt; &#xA; &lt;li&gt;Jump to the entry point&lt;/li&gt; &#xA; &lt;li&gt;The guest app&#39;s entry point calls &lt;code&gt;UIApplicationMain&lt;/code&gt; and start up like any other iOS apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entitlements from the guest app are not applied to the host app. This isn&#39;t a big deal since sideloaded apps requires only basic entitlements.&lt;/li&gt; &#xA; &lt;li&gt;App Permissions are globally applied.&lt;/li&gt; &#xA; &lt;li&gt;Guest app containers are not sandboxed. This means one guest app can access other guest apps&#39; data.&lt;/li&gt; &#xA; &lt;li&gt;arm64e executable is untested. It is recommended to use arm64 binary.&lt;/li&gt; &#xA; &lt;li&gt;Only one guest app can run at a time. This is much more like 3 apps limit where you have to disable an app to run another (switching between app in LiveContainer is instant).&lt;/li&gt; &#xA; &lt;li&gt;Remote push notification might not work. &lt;del&gt;If you have a paid developer account then you don&#39;t even have to use LiveContainer&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;Querying URL schemes might not work(?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Isolating &lt;code&gt;NSFileManager.defaultManager&lt;/code&gt; and &lt;code&gt;NSUserDefaults.userDefaults&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Auto lock orientation&lt;/li&gt; &#xA; &lt;li&gt;Simulate App Group(?)&lt;/li&gt; &#xA; &lt;li&gt;More(?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/khanhduytran0/LiveContainer/raw/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.xpnsec.com/restoring-dyld-memory-loading&#34;&gt;xpn&#39;s blogpost: Restoring Dyld Memory Loading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pinauten/PatchfinderUtils/raw/master/Sources/CFastFind/CFastFind.c&#34;&gt;LinusHenze&#39;s CFastFind&lt;/a&gt;: &lt;a href=&#34;https://github.com/pinauten/PatchfinderUtils/raw/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/fishhook&#34;&gt;fishhook&lt;/a&gt;: &lt;a href=&#34;https://github.com/facebook/fishhook/raw/main/LICENSE&#34;&gt;BSD 3-Clause license&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/saturngod/1224648&#34;&gt;MBRoundProgressView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;@haxi0 for icon&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hoteltonight/HTCopyableLabel</title>
    <updated>2023-08-06T01:57:19Z</updated>
    <id>tag:github.com,2023-08-06:/hoteltonight/HTCopyableLabel</id>
    <link href="https://github.com/hoteltonight/HTCopyableLabel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HTCopyableLabel&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.github.com/hoteltonight/HTCopyableLabel/master/ht-logo-black.png&#34; alt=&#34;HotelTonight&#34; title=&#34;HotelTonight&#34; style=&#34;display:block; margin: 10px auto 30px auto;&#34;&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;HTCopyableLabel is a subclass of UILabel that makes it easy to allow users to copy a label&#39;s text.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/hoteltonight/HTCopyableLabel/master/demo.gif&#34; alt=&#34;HotelTonight&#34; title=&#34;HTAutocompleteTextField in action&#34; style=&#34;display:block; margin: 10px auto 30px auto; align:center&#34;&gt; &#xA;&lt;p&gt;Read the accompanying &lt;a href=&#34;http://engineering.hoteltonight.com/htcopyablelabel/&#34;&gt;blog post&lt;/a&gt; on the &lt;a href=&#34;http://engineering.hoteltonight.com/&#34;&gt;HotelTonight Engineering Blog&lt;/a&gt;. For an excellent explanation how copying on a UILabel is implemented, be sure to read &lt;a href=&#34;http://nshipster.com/uimenucontroller/&#34;&gt;UIMenuController&lt;/a&gt; on &lt;a href=&#34;http://nshipster.com&#34;&gt;NSHipster&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;With Cocoapods:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;pod &#39;HTCopyableLabel&#39;&lt;/code&gt; to your &lt;code&gt;Podfile&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Without Cocoapods:&lt;/h3&gt; &#xA;&lt;p&gt;Manually add the following files into your project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;HTCopyableLabel.m&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;HTCopyableLabel.h&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart Guide&lt;/h2&gt; &#xA;&lt;p&gt;Create an &lt;code&gt;HTCopyableLabel&lt;/code&gt; instance exactly as as you would &lt;code&gt;UILabel&lt;/code&gt;, or subclass &lt;code&gt;HTCopyableLabel&lt;/code&gt; if you&#39;d like. You can do this or in Interface Builder. Programmatically, this looks like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HTCopyableLabel *copyableLabel = [[HTCopyableLabel alloc] init];&#xA;[self.view addSubview:copyableLabel];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, long pressing on the label will make a UIMenuController appear with a &#34;Copy&#34; option. Pressing &#34;Copy&#34; will copy the label&#39;s &lt;code&gt;text&lt;/code&gt;. Make sure the superview of the label has &lt;code&gt;userInteractionEnabled&lt;/code&gt; set to &lt;code&gt;YES&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;Implementing the &lt;code&gt;HTCopyableLabelDelegate&lt;/code&gt; protocol allows you more fine-tuned control of the &lt;code&gt;UIMenuController&lt;/code&gt;&#39;s position, as well as the actual string that is to be copied.&lt;/p&gt; &#xA;&lt;h3&gt;UIMenuController appearance and position&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;UIMenuController&lt;/code&gt; positions itself according to a frame passed to it by &lt;code&gt;HTCopyableLabel&lt;/code&gt;. By default, &lt;code&gt;HTCopyableLabel&lt;/code&gt; will pass its own bounds. To specify the frame explicitly, implement the following in your &lt;code&gt;HTCopyableLabelDelegate&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (CGRect)copyMenuTargetRectInCopyableLabelCoordinates:(HTCopyableLabel *)copyableLabel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore, &lt;code&gt;UIMenuController&lt;/code&gt; will try to intelligently position itself above, below, or along side the frame you pass it according to its position within the screen. If you wish to override this behavior, you should set &lt;code&gt;[HTCopyableLabel copyMenuArrowDirection]&lt;/code&gt; explicitly.&lt;/p&gt; &#xA;&lt;h3&gt;Specifying the text to be copied&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to specify which string is copied to the pasteboard, implement the following method in your &lt;code&gt;HTCopyableLabelDelegate&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- (NSString *)stringToCopyForCopyableLabel:(HTCopyableLabel *)copyableLabel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Etc.&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use this in your apps whenever you can, particularly email addresses -- your users will appreciate it!&lt;/li&gt; &#xA; &lt;li&gt;Contributions are very welcome.&lt;/li&gt; &#xA; &lt;li&gt;Attribution is appreciated (let&#39;s spread the word!), but not mandatory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use it? Love/hate it?&lt;/h2&gt; &#xA;&lt;p&gt;Tweet the author &lt;a href=&#34;https://twitter.com/jonsibs&#34;&gt;@jonsibs&lt;/a&gt;, and check out HotelTonight&#39;s engineering blog: &lt;a href=&#34;http://engineering.hoteltonight.com&#34;&gt;http://engineering.hoteltonight.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also, check out HotelTonight&#39;s other iOS open source:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hoteltonight/HTAutocompleteTextField&#34;&gt;https://github.com/hoteltonight/HTAutocompleteTextField&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hoteltonight/HTGradientEasing&#34;&gt;https://github.com/hoteltonight/HTGradientEasing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hoteltonight/HTStateAwareRasterImageView&#34;&gt;https://github.com/hoteltonight/HTStateAwareRasterImageView&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hoteltonight/HTDelegateProxy&#34;&gt;https://github.com/hoteltonight/HTDelegateProxy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>