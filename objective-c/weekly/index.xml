<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-24T02:17:15Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>react-native-maps/react-native-maps</title>
    <updated>2022-07-24T02:17:15Z</updated>
    <id>tag:github.com,2022-07-24:/react-native-maps/react-native-maps</id>
    <link href="https://github.com/react-native-maps/react-native-maps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native Mapview component for iOS + Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-maps &lt;a href=&#34;https://www.npmjs.com/package/react-native-maps&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-maps.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;React Native Map components for iOS + Android&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project is being maintained by a small group of people, and any help with issues and pull requests are always appreciated. If you are able and willing to contribute, please read the &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/installation.md&#34;&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/examples-setup.md&#34;&gt;Setup Instructions for the Included Example Project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;react-native-maps&lt;/code&gt; requires &lt;code&gt;react-native &amp;gt;= 0.64.3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Component API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/mapview.md&#34;&gt;&lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/marker.md&#34;&gt;&lt;code&gt;&amp;lt;Marker /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/callout.md&#34;&gt;&lt;code&gt;&amp;lt;Callout /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/polygon.md&#34;&gt;&lt;code&gt;&amp;lt;Polygon /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/polyline.md&#34;&gt;&lt;code&gt;&amp;lt;Polyline /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/circle.md&#34;&gt;&lt;code&gt;&amp;lt;Circle /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/overlay.md&#34;&gt;&lt;code&gt;&amp;lt;Overlay /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/heatmap.md&#34;&gt;&lt;code&gt;&amp;lt;Heatmap /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/geojson.md&#34;&gt;&lt;code&gt;&amp;lt;Geojson /&amp;gt;&lt;/code&gt; Component API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;General Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import MapView from &#39;react-native-maps&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var MapView = require(&#39;react-native-maps&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This MapView component is built so that features on the map (such as Markers, Polygons, etc.) are specified as children of the MapView itself. This provides an intuitive and react-like API for declaratively controlling features on the map.&lt;/p&gt; &#xA;&lt;h3&gt;Rendering a Map with an initial region&lt;/h3&gt; &#xA;&lt;h2&gt;MapView&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;  &amp;lt;MapView&#xA;    initialRegion={{&#xA;      latitude: 37.78825,&#xA;      longitude: -122.4324,&#xA;      latitudeDelta: 0.0922,&#xA;      longitudeDelta: 0.0421,&#xA;    }}&#xA;  /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a MapView while controlling the region as state&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;getInitialState() {&#xA;  return {&#xA;    region: {&#xA;      latitude: 37.78825,&#xA;      longitude: -122.4324,&#xA;      latitudeDelta: 0.0922,&#xA;      longitudeDelta: 0.0421,&#xA;    },&#xA;  };&#xA;}&#xA;&#xA;onRegionChange(region) {&#xA;  this.setState({ region });&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;MapView&#xA;      region={this.state.region}&#xA;      onRegionChange={this.onRegionChange}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rendering a list of markers on a map&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Marker } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;MapView&#xA;  region={this.state.region}&#xA;  onRegionChange={this.onRegionChange}&#xA;&amp;gt;&#xA;  {this.state.markers.map((marker, index) =&amp;gt; (&#xA;    &amp;lt;Marker&#xA;      key={index}&#xA;      coordinate={marker.latlng}&#xA;      title={marker.title}&#xA;      description={marker.description}&#xA;    /&amp;gt;&#xA;  ))}&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rendering a Marker with a custom image&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You need to generate an &lt;code&gt;png&lt;/code&gt; image with various resolution (lets call them &lt;code&gt;custom_pin&lt;/code&gt;) - for more information go to &lt;a href=&#34;https://developer.android.com/studio/write/image-asset-studio#access&#34;&gt;Android&lt;/a&gt;, &lt;a href=&#34;https://developer.apple.com/documentation/xcode/adding-images-to-your-xcode-project&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;put all images in Android drawables and iOS assets dir&lt;/li&gt; &#xA; &lt;li&gt;Now you can use the following code:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Marker&#xA;  coordinate={{ latitude : latitude , longitude : longitude }}&#xA;  image={{uri: &#39;custom_pin&#39;}}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: You can also pass the image binary data like &lt;code&gt;image={require(&#39;custom_pin.png&#39;)}&lt;/code&gt;, but this will not scale good with the different screen sizes.&lt;/p&gt; &#xA;&lt;h3&gt;Rendering a Marker with a custom view&lt;/h3&gt; &#xA;&lt;p&gt;Note: This has performance implications, if you wish for a simpler solution go with a custom image (save your self the head ache)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Marker coordinate={{ latitude : latitude , longitude : longitude }}&amp;gt;&#xA;  &amp;lt;MyCustomMarkerView {...marker} /&amp;gt;&#xA;&amp;lt;/Marker&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rendering a custom Marker with a custom Callout&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Callout } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;Marker coordinate={marker.latlng}&amp;gt;&#xA;  &amp;lt;MyCustomMarkerView {...marker} /&amp;gt;&#xA;  &amp;lt;Callout&amp;gt;&#xA;    &amp;lt;MyCustomCalloutView {...marker} /&amp;gt;&#xA;  &amp;lt;/Callout&amp;gt;&#xA;&amp;lt;/Marker&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Draggable Markers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;MapView initialRegion={...}&amp;gt;&#xA;  &amp;lt;Marker draggable&#xA;    coordinate={this.state.x}&#xA;    onDragEnd={(e) =&amp;gt; this.setState({ x: e.nativeEvent.coordinate })}&#xA;  /&amp;gt;&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a custom Tile Overlay&lt;/h3&gt; &#xA;&lt;h4&gt;Tile Overlay using tile server&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { UrlTile } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;MapView&#xA;  region={this.state.region}&#xA;  onRegionChange={this.onRegionChange}&#xA;&amp;gt;&#xA;  &amp;lt;UrlTile&#xA;    /**&#xA;     * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime&#xA;     * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png&#xA;     */&#xA;    urlTemplate={this.state.urlTemplate}&#xA;    /**&#xA;     * The maximum zoom level for this tile overlay. Corresponds to the maximumZ setting in&#xA;     * MKTileOverlay. iOS only.&#xA;     */&#xA;    maximumZ={19}&#xA;    /**&#xA;     * flipY allows tiles with inverted y coordinates (origin at bottom left of map)&#xA;     * to be used. Its default value is false.&#xA;     */&#xA;    flipY={false}&#xA;  /&amp;gt;&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Android: add the following line in your AndroidManifest.xml&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For IOS: configure &lt;a href=&#34;https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW33&#34;&gt;App Transport Security&lt;/a&gt; in your app&lt;/p&gt; &#xA;&lt;h4&gt;Tile Overlay using local tiles&lt;/h4&gt; &#xA;&lt;p&gt;Tiles can be stored locally within device using xyz tiling scheme and displayed as tile overlay as well. This is usefull especially for offline map usage when tiles are available for selected map region within device storage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { LocalTile } from &#39;react-native-maps&#39;;&#xA;&#xA;&amp;lt;MapView&#xA;  region={this.state.region}&#xA;  onRegionChange={this.onRegionChange}&#xA;&amp;gt;&#xA;  &amp;lt;LocalTile&#xA;   /**&#xA;    * The path template of the locally stored tiles. The patterns {x} {y} {z} will be replaced at runtime&#xA;    * For example, /storage/emulated/0/mytiles/{z}/{x}/{y}.png&#xA;    */&#xA;   pathTemplate={this.state.pathTemplate}&#xA;   /**&#xA;    * The size of provided local tiles (usually 256 or 512).&#xA;    */&#xA;   tileSize={256}&#xA;  /&amp;gt;&#xA;&amp;lt;/MapView&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Android: LocalTile is still just overlay over original map tiles. It means that if device is online, underlying tiles will be still downloaded. If original tiles download/display is not desirable set mapType to &#39;none&#39;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;MapView&#xA;  mapType={Platform.OS == &#34;android&#34; ? &#34;none&#34; : &#34;standard&#34;}&#xA;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Category:Tile_downloading&#34;&gt;OSM Wiki&lt;/a&gt; for how to download tiles for offline usage.&lt;/p&gt; &#xA;&lt;h3&gt;Overlaying other components on the map&lt;/h3&gt; &#xA;&lt;p&gt;Place components that you wish to overlay &lt;code&gt;MapView&lt;/code&gt; underneath the &lt;code&gt;MapView&lt;/code&gt; closing tag. Absolutely position these elements.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return (&#xA;    &amp;lt;MapView&#xA;      region={this.state.region}&#xA;    /&amp;gt;&#xA;    &amp;lt;OverlayComponent&#xA;      style={{position: &#34;absolute&#34;, bottom: 50}}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customizing the map style&lt;/h3&gt; &#xA;&lt;p&gt;Create the json object, or download a generated one from the &lt;a href=&#34;https://mapstyle.withgoogle.com/&#34;&gt;google style generator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// The generated json object&#xA;mapStyle = [ ... ]&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;MapView&#xA;      region={this.state.region}&#xA;      onRegionChange={this.onRegionChange}&#xA;      customMapStyle={mapStyle}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For iOS, in addition to providing the &lt;code&gt;mapStyle&lt;/code&gt; you will need to do the following&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MapView, { PROVIDER_GOOGLE } from &#39;react-native-maps&#39;&#xA;&#xA;// ...&#xA;&#xA;&amp;lt;MapView&#xA;  provider={PROVIDER_GOOGLE}&#xA;  customMapStyle={MapStyle}&#xA;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add the AirGoogleMaps directory:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/react-native-maps/react-native-maps/raw/1e71a21f39e7b88554852951f773c731c94680c9/docs/installation.md#ios&#34;&gt;https://github.com/react-native-maps/react-native-maps/blob/1e71a21f39e7b88554852951f773c731c94680c9/docs/installation.md#ios&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An unofficial step-by-step guide is also available at &lt;a href=&#34;https://gist.github.com/heron2014/e60fa003e9b117ce80d56bb1d5bfe9e0&#34;&gt;https://gist.github.com/heron2014/e60fa003e9b117ce80d56bb1d5bfe9e0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MapView Events&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component and its child components have several events that you can subscribe to. This example displays some of them in a log as a demonstration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UBpncYQASu2WTW8.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77YdviLqtjaecRYA.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tracking Region / Location&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UBoPSLlIKQ2dv7q.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77XWjqECvdgjx9oA.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Programmatically Changing Region&lt;/h3&gt; &#xA;&lt;p&gt;One can change the mapview&#39;s position using refs and component methods, or by passing in an updated &lt;code&gt;region&lt;/code&gt; prop. The component methods will allow one to animate to a given position like the native API could.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UB7poyB6YJ0KPWU.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77Yc4wK3pzZusEbm.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Changing the style of the map&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/a9WqCL6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Arbitrary React Views as Markers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UBcsCLoLQtksJxe.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/3o6UB1qGEM9jYni3KM.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using the MapView with the Animated API&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component can be made to work with the Animated API, having the entire &lt;code&gt;region&lt;/code&gt; prop be declared as an animated value. This allows one to animate the zoom and position of the MapView along with other gestures, giving a nice feel.&lt;/p&gt; &#xA;&lt;p&gt;Further, Marker views can use the animated API to enhance the effect.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77XMw9IwS6QAv0nC.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/3o6UBdGQdM1GmVoIdq.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Issue: Since android needs to render its marker views as a bitmap, the animations APIs may not be compatible with the Marker views. Not sure if this can be worked around yet or not.&lt;/p&gt; &#xA;&lt;p&gt;Markers&#39; coordinates can also be animated, as shown in this example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xTcnTelp1OwGPu1Wh2.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xTcnT6WVpwlCiQnFW8.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Polygon Creator&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o6UAZWqQBkOzs8HE4.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77XVBRErNZl3zyWQ.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other Overlays&lt;/h3&gt; &#xA;&lt;p&gt;So far, &lt;code&gt;&amp;lt;Circle /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Polygon /&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Polyline /&amp;gt;&lt;/code&gt; are available to pass in as children to the &lt;code&gt;&amp;lt;MapView /&amp;gt;&lt;/code&gt; component.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77XZCH8JpEhzVcNG.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77XZyA0aYeOX5jsA.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gradient Polylines (iOS MapKit only)&lt;/h3&gt; &#xA;&lt;p&gt;Gradient polylines can be created using the &lt;code&gt;strokeColors&lt;/code&gt; prop of the &lt;code&gt;&amp;lt;Polyline&amp;gt;&lt;/code&gt; component.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/P7UeqAm.png?1&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Default Markers&lt;/h3&gt; &#xA;&lt;p&gt;Default markers will be rendered unless a custom marker is specified. One can optionally adjust the color of the default marker by using the &lt;code&gt;pinColor&lt;/code&gt; prop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77Y0pWKmUUnguHK0.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/3o6UBfk3I58VIwZjVe.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Callouts&lt;/h3&gt; &#xA;&lt;p&gt;Callouts to markers can be completely arbitrary react views, similar to markers. As a result, they can be interacted with like any other view.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can fall back to the standard behavior of just having a title/description through the &lt;code&gt;&amp;lt;Marker /&amp;gt;&lt;/code&gt;&#39;s &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; props.&lt;/p&gt; &#xA;&lt;p&gt;Custom callout views can be the entire tooltip bubble, or just the content inside of the system default bubble.&lt;/p&gt; &#xA;&lt;p&gt;To handle press on specific subview of callout use &lt;code&gt;&amp;lt;CalloutSubview /&amp;gt;&lt;/code&gt; with &lt;code&gt;onPress&lt;/code&gt;. See &lt;code&gt;Callouts.js&lt;/code&gt; example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/xT77XNePGnMIIDpbnq.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/xT77YdU0HXryvoRqaQ.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Image-based Markers&lt;/h3&gt; &#xA;&lt;p&gt;Markers can be customized by just using images, and specified using the &lt;code&gt;image&lt;/code&gt; prop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/mzrOjTR.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Draggable Markers&lt;/h3&gt; &#xA;&lt;p&gt;Markers are draggable, and emit continuous drag events to update other UI during drags.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/l2JImnZxdv1WbpQfC.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/l2JIhv4Jx6Ugx1EGI.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lite Mode ( Android )&lt;/h3&gt; &#xA;&lt;p&gt;Enable lite mode on Android with &lt;code&gt;liteMode&lt;/code&gt; prop. Ideal when having multiple maps in a View or ScrollView.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/qZ2lAf18s89na.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;On Poi Click (Google Maps Only)&lt;/h3&gt; &#xA;&lt;p&gt;Poi are clickable, you can catch the event to get its information (usually to get the full detail from Google Place using the placeId).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3480VsCKnHr31uCLU3/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Animated Region&lt;/h3&gt; &#xA;&lt;p&gt;The MapView can accept an &lt;code&gt;AnimatedRegion&lt;/code&gt; value as its &lt;code&gt;region&lt;/code&gt; prop. This allows you to utilize the Animated API to control the map&#39;s center and zoom.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MapView, { AnimatedRegion, Animated } from &#39;react-native-maps&#39;;&#xA;&#xA;getInitialState() {&#xA;  return {&#xA;    region: new AnimatedRegion({&#xA;      latitude: LATITUDE,&#xA;      longitude: LONGITUDE,&#xA;      latitudeDelta: LATITUDE_DELTA,&#xA;      longitudeDelta: LONGITUDE_DELTA,&#xA;    }),&#xA;  };&#xA;}&#xA;&#xA;onRegionChange(region) {&#xA;  this.state.region.setValue(region);&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;Animated&#xA;      region={this.state.region}&#xA;      onRegionChange={this.onRegionChange}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Animated Marker Position&lt;/h3&gt; &#xA;&lt;p&gt;Markers can also accept an &lt;code&gt;AnimatedRegion&lt;/code&gt; value as a coordinate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import Mapview, { AnimatedRegion, MarkerAnimated } from &#39;react-native-maps&#39;;&#xA;&#xA;getInitialState() {&#xA;  return {&#xA;    coordinate: new AnimatedRegion({&#xA;      latitude: LATITUDE,&#xA;      longitude: LONGITUDE,&#xA;    }),&#xA;  };&#xA;}&#xA;&#xA;componentWillReceiveProps(nextProps) {&#xA;  const duration = 500&#xA;&#xA;  if (this.props.coordinate !== nextProps.coordinate) {&#xA;    if (Platform.OS === &#39;android&#39;) {&#xA;      if (this.marker) {&#xA;        this.marker.animateMarkerToCoordinate(&#xA;          nextProps.coordinate,&#xA;          duration&#xA;        );&#xA;      }&#xA;    } else {&#xA;      this.state.coordinate.timing({&#xA;        ...nextProps.coordinate,&#xA;        useNativeDriver: true, // defaults to false if not passed explicitly&#xA;        duration&#xA;      }).start();&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;MapView initialRegion={...}&amp;gt;&#xA;      &amp;lt;MarkerAnimated&#xA;        ref={marker =&amp;gt; { this.marker = marker }}&#xA;        coordinate={this.state.coordinate}&#xA;      /&amp;gt;&#xA;    &amp;lt;/MapView&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Take Snapshot of map&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MapView, { Marker } from &#39;react-native-maps&#39;;&#xA;&#xA;getInitialState() {&#xA;  return {&#xA;    coordinate: {&#xA;      latitude: LATITUDE,&#xA;      longitude: LONGITUDE,&#xA;    },&#xA;  };&#xA;}&#xA;&#xA;takeSnapshot () {&#xA;  // &#39;takeSnapshot&#39; takes a config object with the&#xA;  // following options&#xA;  const snapshot = this.map.takeSnapshot({&#xA;    width: 300,      // optional, when omitted the view-width is used&#xA;    height: 300,     // optional, when omitted the view-height is used&#xA;    region: {..},    // iOS only, optional region to render&#xA;    format: &#39;png&#39;,   // image formats: &#39;png&#39;, &#39;jpg&#39; (default: &#39;png&#39;)&#xA;    quality: 0.8,    // image quality: 0..1 (only relevant for jpg, default: 1)&#xA;    result: &#39;file&#39;   // result types: &#39;file&#39;, &#39;base64&#39; (default: &#39;file&#39;)&#xA;  });&#xA;  snapshot.then((uri) =&amp;gt; {&#xA;    this.setState({ mapSnapshot: uri });&#xA;  });&#xA;}&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;View&amp;gt;&#xA;      &amp;lt;MapView initialRegion={...} ref={map =&amp;gt; { this.map = map }}&amp;gt;&#xA;        &amp;lt;Marker coordinate={this.state.coordinate} /&amp;gt;&#xA;      &amp;lt;/MapView&amp;gt;&#xA;      &amp;lt;Image source={{ uri: this.state.mapSnapshot.uri }} /&amp;gt;&#xA;      &amp;lt;TouchableOpacity onPress={this.takeSnapshot}&amp;gt;&#xA;        Take Snapshot&#xA;      &amp;lt;/TouchableOpacity&amp;gt;&#xA;    &amp;lt;/View&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Zoom to Specified Markers&lt;/h3&gt; &#xA;&lt;p&gt;Pass an array of marker identifiers to have the map re-focus.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3o7qEbOQnO0yoXqKJ2.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://i.giphy.com/l41YdrQZ7m6Dz4h0c.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zoom to Specified Coordinates&lt;/h3&gt; &#xA;&lt;p&gt;Pass an array of coordinates to focus a map region on said coordinates.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1627824/18609960/da5d9e06-7cdc-11e6-811e-34e255093df9.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;h4&gt;My map is blank&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure that you have &lt;a href=&#34;https://raw.githubusercontent.com/react-native-maps/react-native-maps/master/docs/installation.md&#34;&gt;properly installed&lt;/a&gt; react-native-maps.&lt;/li&gt; &#xA; &lt;li&gt;Check in the logs if there is more informations about the issue.&lt;/li&gt; &#xA; &lt;li&gt;Try setting the style of the MapView to an absolute position with top, left, right and bottom values set.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have enabled Google Maps API in &lt;a href=&#34;https://console.developers.google.com/apis/library&#34;&gt;Google developer console&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const styles = StyleSheet.create({&#xA;  map: {&#xA;    ...StyleSheet.absoluteFillObject,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;MapView&#xA;  style={styles.map}&#xA;  // other props&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Inputs don&#39;t focus&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When inputs don&#39;t focus or elements don&#39;t respond to tap, look at the order of the view hierarchy, sometimes the issue could be due to ordering of rendered components, prefer putting MapView as the first component.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Bad:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;View&amp;gt;&#xA;  &amp;lt;TextInput/&amp;gt;&#xA;  &amp;lt;MapView/&amp;gt;&#xA;&amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Good:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;View&amp;gt;&#xA;  &amp;lt;MapView/&amp;gt;&#xA;  &amp;lt;TextInput/&amp;gt;&#xA;&amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Children Components Not Re-Rendering&lt;/h4&gt; &#xA;&lt;p&gt;Components that aren&#39;t declared by this library (Ex: Markers, Polyline) must not be children of the MapView component due to MapView&#39;s unique rendering methodology. Have your custom components / views outside the MapView component and position absolute to ensure they only re-render as needed. Example: Bad:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;  &amp;lt;View style={StyleSheet.absoluteFillObject}&amp;gt;&#xA;    &amp;lt;MapView style={StyleSheet.absoluteFillObject}&amp;gt;&#xA;      &amp;lt;View style={{ position: &#39;absolute&#39;, top: 100, left: 50 }}/&amp;gt;&#xA;    &amp;lt;/MapView&amp;gt;&#xA;  &amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Good:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;  &amp;lt;View style={StyleSheet.absoluteFillObject}&amp;gt;&#xA;    &amp;lt;MapView style={StyleSheet.absoluteFillObject} /&amp;gt;&#xA;    &amp;lt;View style={{ position: &#39;absolute&#39;, top: 100, left: 50 }}/&amp;gt;&#xA;  &amp;lt;/View&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://github.com/react-native-maps/react-native-maps/issues/1901&#34;&gt;https://github.com/react-native-maps/react-native-maps/issues/1901&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Crashing with EXC_BAD_ACCESS on iOS when switching apps&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;MapView&amp;gt;&lt;/code&gt; using Apple Maps in &lt;code&gt;mapType: &#34;standard&#34;&lt;/code&gt; will sometimes crash when you background the app or switch into another app. This is only an issue in XCode using Metal API Validation, and won&#39;t happen in production. To eliminate this problem even while debugging in XCode, go to &lt;code&gt;Edit Scheme... -&amp;gt; Run (Debug) -&amp;gt; Diagnostics&lt;/code&gt; and uncheck &lt;code&gt;Metal -&amp;gt; API Validation&lt;/code&gt;. (h/t &lt;a href=&#34;https://github.com/Simon-TechForm&#34;&gt;@Simon-TechForm&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;https://github.com/react-native-maps/react-native-maps/issues/3957#issuecomment-924161121&#34;&gt;https://github.com/react-native-maps/react-native-maps/issues/3957#issuecomment-924161121&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; Copyright (c) 2017 Airbnb&#xA;&#xA; Licensed under the The MIT License (MIT) (the &#34;License&#34;);&#xA; you may not use this file except in compliance with the License.&#xA; You may obtain a copy of the License at&#xA;&#xA;    https://raw.githubusercontent.com/airbnb/react-native-maps/master/LICENSE&#xA;&#xA; Unless required by applicable law or agreed to in writing, software&#xA; distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; See the License for the specific language governing permissions and&#xA; limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>firebase/firebase-ios-sdk</title>
    <updated>2022-07-24T02:17:15Z</updated>
    <id>tag:github.com,2022-07-24:/firebase/firebase-ios-sdk</id>
    <link href="https://github.com/firebase/firebase-ios-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firebase iOS SDK&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/Firebase.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/Firebase.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Firebase&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/Firebase.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Firebase Apple Open Source Development&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains all Apple platform Firebase SDK source except FirebaseAnalytics.&lt;/p&gt; &#xA;&lt;p&gt;Firebase is an app development platform with tools to help you build, grow and monetize your app. More information about Firebase can be found on the &lt;a href=&#34;https://firebase.google.com&#34;&gt;official Firebase website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See the subsections below for details about the different installation methods. Where available, it&#39;s recommended to install any libraries with a &lt;code&gt;Swift&lt;/code&gt; suffix to get the best experience when writing your app in Swift.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#standard-pod-install&#34;&gt;Standard pod install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#swift-package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#installing-from-github&#34;&gt;Installing from the GitHub repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/#carthage-ios-only&#34;&gt;Experimental Carthage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Standard pod install&lt;/h3&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://firebase.google.com/docs/ios/setup&#34;&gt;https://firebase.google.com/docs/ios/setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; support can be found at &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/SwiftPackageManager.md&#34;&gt;SwiftPackageManager&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Installing from GitHub&lt;/h3&gt; &#xA;&lt;p&gt;These instructions can be used to access the Firebase repo at other branches, tags, or commits.&lt;/p&gt; &#xA;&lt;h4&gt;Background&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://guides.cocoapods.org/syntax/podfile.html#pod&#34;&gt;the Podfile Syntax Reference&lt;/a&gt; for instructions and options about overriding pod source locations.&lt;/p&gt; &#xA;&lt;h4&gt;Accessing Firebase Source Snapshots&lt;/h4&gt; &#xA;&lt;p&gt;All of the official releases are tagged in this repo and available via CocoaPods. To access a local source snapshot or unreleased branch, use Podfile directives like the following:&lt;/p&gt; &#xA;&lt;p&gt;To access FirebaseFirestore via a branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FirebaseCore&#39;, :git =&amp;gt; &#39;https://github.com/firebase/firebase-ios-sdk.git&#39;, :branch =&amp;gt; &#39;master&#39;&#xA;pod &#39;FirebaseFirestore&#39;, :git =&amp;gt; &#39;https://github.com/firebase/firebase-ios-sdk.git&#39;, :branch =&amp;gt; &#39;master&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access FirebaseMessaging via a checked out version of the firebase-ios-sdk repo do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;FirebaseCore&#39;, :path =&amp;gt; &#39;/path/to/firebase-ios-sdk&#39;&#xA;pod &#39;FirebaseMessaging&#39;, :path =&amp;gt; &#39;/path/to/firebase-ios-sdk&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage (iOS only)&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for the experimental Carthage distribution are at &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/Carthage.md&#34;&gt;Carthage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Firebase from a Framework or a library&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/docs/firebase_in_libraries.md&#34;&gt;Using Firebase from a Framework or a library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To develop Firebase software in this repository, ensure that you have at least the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 13.3.1 (or later)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CocoaPods is still the canonical way to develop, but much of the repo now supports development with Swift Package Manager.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Install&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CocoaPods 1.10.0 (or later)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/cocoapods-generate&#34;&gt;CocoaPods generate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the pod that you want to develop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod gen Firebase{name here}.podspec --local-sources=./ --auto-open --platforms=ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If the CocoaPods cache is out of date, you may need to run &lt;code&gt;pod repo update&lt;/code&gt; before the &lt;code&gt;pod gen&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Note: Set the &lt;code&gt;--platforms&lt;/code&gt; option to &lt;code&gt;macos&lt;/code&gt; or &lt;code&gt;tvos&lt;/code&gt; to develop/test for those platforms. Since 10.2, Xcode does not properly handle multi-platform CocoaPods workspaces.&lt;/p&gt; &#xA;&lt;p&gt;Firestore has a self contained Xcode project. See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/Firestore/README.md&#34;&gt;Firestore/README&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h4&gt;Development for Catalyst&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pod gen {name here}.podspec --local-sources=./ --auto-open --platforms=ios&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the Mac box in the App-iOS Build Settings&lt;/li&gt; &#xA; &lt;li&gt;Sign the App in the Settings Signing &amp;amp; Capabilities tab&lt;/li&gt; &#xA; &lt;li&gt;Click Pods in the Project Manager&lt;/li&gt; &#xA; &lt;li&gt;Add Signing to the iOS host app and unit test targets&lt;/li&gt; &#xA; &lt;li&gt;Select the Unit-unit scheme&lt;/li&gt; &#xA; &lt;li&gt;Run it to build and test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively disable signing in each target:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to Build Settings tab&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Add User-Defined Setting&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;CODE_SIGNING_REQUIRED&lt;/code&gt; setting with a value of &lt;code&gt;NO&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To enable test schemes: &lt;code&gt;./scripts/setup_spm_tests.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;open Package.swift&lt;/code&gt; or double click &lt;code&gt;Package.swift&lt;/code&gt; in Finder.&lt;/li&gt; &#xA; &lt;li&gt;Xcode will open the project &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Choose a scheme for a library to build or test suite to run&lt;/li&gt; &#xA;   &lt;li&gt;Choose a target platform by selecting the run destination along with the scheme&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adding a New Firebase Pod&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/AddNewPod.md&#34;&gt;AddNewPod&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Managing Headers and Imports&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/HeadersImports.md&#34;&gt;HeadersImports&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h3&gt;Code Formatting&lt;/h3&gt; &#xA;&lt;p&gt;To ensure that the code is formatted consistently, run the script &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/raw/master/scripts/check.sh&#34;&gt;./scripts/check.sh&lt;/a&gt; before creating a PR.&lt;/p&gt; &#xA;&lt;p&gt;GitHub Actions will verify that any code changes are done in a style compliant way. Install &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;mint&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install clang-format@14&#xA;brew install mint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Unit Tests&lt;/h3&gt; &#xA;&lt;p&gt;Select a scheme and press Command-u to build a component and run its unit tests.&lt;/p&gt; &#xA;&lt;h3&gt;Running Sample Apps&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the sample apps and integration tests, you&#39;ll need a valid &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; file. The Firebase Xcode project contains dummy plist files without real values, but can be replaced with real plist files. To get your own &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; files:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://console.firebase.google.com/&#34;&gt;Firebase Console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a new Firebase project, if you don&#39;t already have one&lt;/li&gt; &#xA; &lt;li&gt;For each sample app you want to test, create a new Firebase app with the sample app&#39;s bundle identifier (e.g. &lt;code&gt;com.google.Database-Example&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Download the resulting &lt;code&gt;GoogleService-Info.plist&lt;/code&gt; and add it to the Xcode project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Coverage Report Generation&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/scripts/code_coverage_report/README.md&#34;&gt;scripts/code_coverage_report/README&lt;/a&gt; Markdown file.&lt;/p&gt; &#xA;&lt;h2&gt;Specific Component Instructions&lt;/h2&gt; &#xA;&lt;p&gt;See the sections below for any special instructions for those components.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Auth&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re doing specific Firebase Auth development, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebaseAuth/Tests/Sample/README.md&#34;&gt;the Auth Sample README&lt;/a&gt; for instructions about building and running the FirebaseAuth pod along with various samples and tests.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Database&lt;/h3&gt; &#xA;&lt;p&gt;The Firebase Database Integration tests can be run against a locally running Database Emulator or against a production instance.&lt;/p&gt; &#xA;&lt;p&gt;To run against a local emulator instance, invoke &lt;code&gt;./scripts/run_database_emulator.sh start&lt;/code&gt; before running the integration test.&lt;/p&gt; &#xA;&lt;p&gt;To run against a production instance, provide a valid GoogleServices-Info.plist and copy it to &lt;code&gt;FirebaseDatabase/Tests/Resources/GoogleService-Info.plist&lt;/code&gt;. Your Security Rule must be set to &lt;a href=&#34;https://firebase.google.com/docs/database/security/quickstart&#34;&gt;public&lt;/a&gt; while your tests are running.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Performance Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re doing specific Firebase Performance Monitoring development, see &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebasePerformance/README.md&#34;&gt;the Performance README&lt;/a&gt; for instructions about building the SDK and &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebasePerformance/Tests/TestApp/README.md&#34;&gt;the Performance TestApp README&lt;/a&gt; for instructions about integrating Performance with the dev test App.&lt;/p&gt; &#xA;&lt;h3&gt;Firebase Storage&lt;/h3&gt; &#xA;&lt;p&gt;To run the Storage Integration tests, follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebaseStorageInternal/Tests/Integration/FIRStorageIntegrationTests.m&#34;&gt;FIRStorageIntegrationTests.m&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Push Notifications&lt;/h4&gt; &#xA;&lt;p&gt;Push notifications can only be delivered to specially provisioned App IDs in the developer portal. In order to actually test receiving push notifications, you will need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change the bundle identifier of the sample app to something you own in your Apple Developer account, and enable that App ID for push notifications.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll also need to &lt;a href=&#34;https://firebase.google.com/docs/cloud-messaging/ios/certs&#34;&gt;upload your APNs Provider Authentication Key or certificate to the Firebase Console&lt;/a&gt; at &lt;strong&gt;Project Settings &amp;gt; Cloud Messaging &amp;gt; [Your Firebase App]&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ensure your iOS device is added to your Apple Developer portal as a test device.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;iOS Simulator&lt;/h4&gt; &#xA;&lt;p&gt;The iOS Simulator cannot register for remote notifications, and will not receive push notifications. In order to receive push notifications, you&#39;ll have to follow the steps above and run the app on a physical device.&lt;/p&gt; &#xA;&lt;h2&gt;Building with Firebase on Apple platforms&lt;/h2&gt; &#xA;&lt;p&gt;Firebase 8.9.0 introduced official beta support for macOS, Catalyst, and tvOS. watchOS continues to be community supported. Thanks to community contributions for many of the multi-platform PRs.&lt;/p&gt; &#xA;&lt;p&gt;At this time, most of Firebase&#39;s products are available across Apple platforms. There are still a few gaps, especially on watchOS. For details about the current support matrix, see &lt;a href=&#34;https://firebase.google.com/docs/ios/learn-more#firebase_library_support_by_platform&#34;&gt;this chart&lt;/a&gt; in Firebase&#39;s documentation.&lt;/p&gt; &#xA;&lt;h3&gt;watchOS&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to contributions from the community, many of Firebase SDKs now compile, run unit tests, and work on watchOS. See the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/Example/watchOSSample&#34;&gt;Independent Watch App Sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that watchOS is not officially supported by Firebase. While we can catch basic unit test issues with GitHub Actions, there may be some changes where the SDK no longer works as expected on watchOS. If you encounter this, please &lt;a href=&#34;https://github.com/firebase/firebase-ios-sdk/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;During app setup in the console, you may get to a step that mentions something like &#34;Checking if the app has communicated with our servers&#34;. This relies on Analytics and will not work on watchOS. &lt;strong&gt;It&#39;s safe to ignore the message and continue&lt;/strong&gt;, the rest of the SDKs will work as expected.&lt;/p&gt; &#xA;&lt;h4&gt;Additional Crashlytics Notes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;watchOS has limited support. Due to watchOS restrictions, mach exceptions and signal crashes are not recorded. (Crashes in SwiftUI are generated as mach exceptions, so will not be recorded)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Combine&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to contributions from the community, &lt;em&gt;FirebaseCombineSwift&lt;/em&gt; contains support for Apple&#39;s Combine framework. This module is currently under development, and not yet supported for use in production environments. Fore more details, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/FirebaseCombineSwift/README.md&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; for more about the Firebase Apple SDK Open Source plans and directions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-ios-sdk/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more information on contributing to the Firebase Apple SDK.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The contents of this repository are licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, version 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your use of Firebase is governed by the &lt;a href=&#34;https://firebase.google.com/terms/&#34;&gt;Terms of Service for Firebase Services&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zendesk/commonui_sdk_ios</title>
    <updated>2022-07-24T02:17:15Z</updated>
    <id>tag:github.com,2022-07-24:/zendesk/commonui_sdk_ios</id>
    <link href="https://github.com/zendesk/commonui_sdk_ios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zendesk CommonUI SDK&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;em&gt;Use of this software is subject to important terms and conditions as set forth in the License file&lt;/em&gt; &lt;span&gt;⚠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Zendesk CommonUI SDK for iOS&lt;/h1&gt; &#xA;&lt;p&gt;Zendesk CommonUI SDK for mobile. The CommonUI SDK is a shared library among the Zendesk product SDKs. It is used to shared core UI components among our product SDKs.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find our documentation on &lt;a href=&#34;https://developer.zendesk.com/embeddables&#34;&gt;https://developer.zendesk.com/embeddables&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature requests and issues&lt;/h2&gt; &#xA;&lt;p&gt;All feature requests and issues are welcomed. Please see our &lt;a href=&#34;https://raw.githubusercontent.com/zendesk/commonui_sdk_ios/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to find out how to contact us.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and license&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2020 Zendesk&lt;/p&gt; &#xA;&lt;p&gt;By downloading or using the Zendesk CommonUI SDK, You agree to the Zendesk Master Subscription Agreement &lt;a href=&#34;https://www.zendesk.com/company/customers-partners/#master-subscription-agreement&#34;&gt;https://www.zendesk.com/company/customers-partners/#master-subscription-agreement&lt;/a&gt; and Application Developer and API License Agreement &lt;a href=&#34;https://www.zendesk.com/company/customers-partners/#application-developer-api-license-agreement&#34;&gt;https://www.zendesk.com/company/customers-partners/#application-developer-api-license-agreement&lt;/a&gt; and acknowledge that such terms govern Your use of and access to the CommonUI SDK.&lt;/p&gt; &#xA;&lt;p&gt;If You make any Contributions (defined below) to the Zendesk CommonUI SDK, You hereby grant Zendesk a royalty-free, worldwide, transferable, sub-licensable, irrevocable and perpetual license to incorporate into the Service or the Zendesk API or otherwise use and commercially exploit any Contributions. “Contribution” shall mean any work of authorship, including any modifications or additions to the Mobile SDK or derivative works thereof, that is submitted to Zendesk by You.&lt;/p&gt;</summary>
  </entry>
</feed>