<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:47:46Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SDWebImage/SDWebImageWebPCoder</title>
    <updated>2022-11-06T01:47:46Z</updated>
    <id>tag:github.com,2022-11-06:/SDWebImage/SDWebImageWebPCoder</id>
    <link href="https://github.com/SDWebImage/SDWebImageWebPCoder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A WebP coder plugin for SDWebImage, use libwebp&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SDWebImageWebPCoder&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/SDWebImage/SDWebImageWebPCoder&#34;&gt;&lt;img src=&#34;http://img.shields.io/travis/SDWebImage/SDWebImageWebPCoder.svg?style=flat&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/SDWebImageWebPCoder&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/SDWebImageWebPCoder.svg?style=flat&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/SDWebImageWebPCoder&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/l/SDWebImageWebPCoder.svg?style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoapods.org/pods/SDWebImageWebPCoder&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/p/SDWebImageWebPCoder.svg?style=flat&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SwiftPM-compatible-brightgreen.svg?style=flat&#34; alt=&#34;SwiftPM compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageWebPCoder&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/SDWebImage/SDWebImageWebPCoder&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/SDWebImage/SDWebImageWebPCoder/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Starting with the SDWebImage 5.0 version, we moved the WebP support code and &lt;a href=&#34;https://github.com/webmproject/libwebp&#34;&gt;libwebp&lt;/a&gt; from the Core Repo to this stand-alone repo.&lt;/p&gt; &#xA;&lt;p&gt;SDWebImageWebPCoder supports both WebP decoding and encoding, for Static WebP or Animated WebP as well.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 9.0&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.11&lt;/li&gt; &#xA; &lt;li&gt;tvOS 9.0&lt;/li&gt; &#xA; &lt;li&gt;watchOS 2.0&lt;/li&gt; &#xA; &lt;li&gt;Xcode 11.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;SDWebImageWebPCoder is available through &lt;a href=&#34;http://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;. To install it, simply add the following line to your Podfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;SDWebImageWebPCoder&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;SDWebImageWebPCoder is available through &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;SDWebImage/SDWebImageWebPCoder&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Swift Package Manager (Xcode 11+)&lt;/h4&gt; &#xA;&lt;p&gt;SDWebImageWebPCoder is available through &lt;a href=&#34;https://swift.org/package-manager&#34;&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let package = Package(&#xA;    dependencies: [&#xA;        .package(url: &#34;https://github.com/SDWebImage/SDWebImageWebPCoder.git&#34;, from: &#34;0.3.0&#34;)&#xA;    ]&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Add Coder&lt;/h3&gt; &#xA;&lt;p&gt;Before using SDWebImage to load WebP images, you need to register the WebP Coder to your coders manager. This step is recommended to be done after your App launch (like AppDelegate method).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// Add coder&#xA;SDImageWebPCoder *webPCoder = [SDImageWebPCoder sharedCoder];&#xA;[[SDImageCodersManager sharedManager] addCoder:webPCoder];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Add coder&#xA;let WebPCoder = SDImageWebPCoder.shared&#xA;SDImageCodersManager.shared.addCoder(WebPCoder)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Modify HTTP Accept Header&lt;/h3&gt; &#xA;&lt;p&gt;Some of image server provider may try to detect the client supported format, by default, SDWebImage use &lt;code&gt;image/*,*/*;q=0.8&lt;/code&gt; for &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept&#34;&gt;Accept&lt;/a&gt;. You can modify it with the &lt;code&gt;image/webp&lt;/code&gt; as well.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;[[SDWebImageDownloader sharedDownloader] setValue:@&#34;image/webp,image/*,*/*;q=0.8&#34; forHTTPHeaderField:@&#34;Accept&#34;];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;SDWebImageDownloader.shared.setValue(&#34;image/webp,image/*,*/*;q=0.8&#34;, forHTTPHeaderField:&#34;Accept&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Loading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// WebP online image loading&#xA;NSURL *webpURL;&#xA;UIImageView *imageView;&#xA;[imageView sd_setImageWithURL:webpURL];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// WebP online image loading&#xA;let webpURL: URL&#xA;let imageView: UIImageView&#xA;imageView.sd_setImage(with: webpURL)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Progressive Animation Loading (0.5.0+)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// WebP progressive loading for animated image&#xA;NSURL *webpURL;&#xA;SDAnimatedImageView *imageView;&#xA;imageView.shouldIncrementalLoad = YES;&#xA;[imageView sd_setImageWithURL:webpURL placeholderImage:nil options:SDWebImageProgressiveLoad];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// WebP progressive loading for animated image&#xA;let webpURL: URL&#xA;let imageView: SDAnimatedImageView&#xA;imageView.shouldIncrementalLoad = true&#xA;imageView.sd_setImage(with: webpURL, placeholderImage: nil, options: [.progressiveLoad])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Decoding&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// WebP image decoding&#xA;NSData *webpData;&#xA;UIImage *image = [[SDImageWebPCoder sharedCoder] decodedImageWithData:webpData options:nil];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// WebP image decoding&#xA;let webpData: Data&#xA;let image = SDImageWebPCoder.shared.decodedImage(with: data, options: nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Thumbnail Decoding (0.4.0+)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// WebP thumbnail image decoding&#xA;NSData *webpData;&#xA;CGSize thumbnailSize = CGSizeMake(300, 300);&#xA;UIImage *thumbnailImage = [[SDImageWebPCoder sharedCoder] decodedImageWithData:webpData options:@{SDImageCoderDecodeThumbnailPixelSize : @(thumbnailSize}];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// WebP thumbnail image decoding&#xA;let webpData: Data&#xA;let thumbnailSize = CGSize(width: 300, height: 300)&#xA;let image = SDImageWebPCoder.shared.decodedImage(with: data, options: [.decodeThumbnailPixelSize: thumbnailSize])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Encoding&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-c&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// WebP image encoding&#xA;UIImage *image;&#xA;NSData *webpData = [[SDImageWebPCoder sharedCoder] encodedDataWithImage:image format:SDImageFormatWebP options:nil];&#xA;// Encode Quality&#xA;NSData *lossyWebpData = [[SDImageWebPCoder sharedCoder] encodedDataWithImage:image format:SDImageFormatWebP options:@{SDImageCoderEncodeCompressionQuality : @(0.1)}]; // [0, 1] compression quality&#xA;NSData *limitedWebpData = [[SDImageWebPCoder sharedCoder] encodedDataWithImage:image format:SDImageFormatWebP options:@{SDImageCoderEncodeMaxFileSize : @(1024 * 10)}]; // v0.6.0 feature, limit output file size &amp;lt;= 10KB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// WebP image encoding&#xA;let image: UIImage&#xA;let webpData = SDImageWebPCoder.shared.encodedData(with: image, format: .webP, options: nil)&#xA;// Encode Quality&#xA;let lossyWebpData = SDImageWebPCoder.shared.encodedData(with: image, format: .webP, options: [.encodeCompressionQuality: 0.1]) // [0, 1] compression quality&#xA;let limitedWebpData = SDImageWebPCoder.shared.encodedData(with: image, format: .webP, options: [.encodeMaxFileSize: 1024 * 10]) // v0.6.0 feature, limit output file size &amp;lt;= 10KB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Thumbnail Encoding (0.6.1+)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;// WebP image thumbnail encoding&#xA;UIImage *image;&#xA;NSData *thumbnailWebpData = [[SDImageWebPCoder sharedCoder] encodedDataWithImage:image format:SDImageFormatWebP options:@{SDImageCoderEncodeMaxPixelSize : @(CGSizeMake(200, 200)}]; // v0.6.1 feature, encoding max pixel size&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// WebP image thumbnail encoding&#xA;let image: UIImage&#xA;let thumbnailWebpData = SDImageWebPCoder.shared.encodedData(with: image, format: .webP, options: [.encodeMaxPixelSize: CGSize(width: 200, height: 200)]) // v0.6.1 feature, encoding max pixel size&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See more documentation in &lt;a href=&#34;https://github.com/SDWebImage/SDWebImage/wiki/Advanced-Usage#custom-coder-420&#34;&gt;SDWebImage Wiki - Coders&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Advanced WebP codec options (0.8+)&lt;/h3&gt; &#xA;&lt;p&gt;The WebP codec &lt;a href=&#34;https://developers.google.com/speed/webp/docs/api&#34;&gt;libwebp&lt;/a&gt; we use, supports some advanced control options for encoding/decoding. You can pass them to libwebp by using the wrapper top level API:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Objective-C&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objective-c&#34;&gt;UIImage *image;&#xA;SDImageCoderOptions *options = @{SDImageCoderEncodeWebPMethod: @(0), SDImageCoderEncodeWebPAlphaCompression: @(100)};&#xA;NSData *data = [SDImageWebPCoder.sharedCoder encodedDataWithImage:image format:SDImageFormatWebP options:options];&#xA;// Will translate into:&#xA;// config-&amp;gt;method = 0;&#xA;// config-&amp;gt;alpha_quality = 100;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let image: UIImage&#xA;let options = [.encodeWebPMethod: 0, .encodeWebPAlphaCompression: 100]&#xA;let data = SDImageWebPCoder.shared.encodedData(with: image, format: .webP, options: options)&#xA;// Will translate into:&#xA;// config-&amp;gt;method = 0;&#xA;// config-&amp;gt;alpha_quality = 100;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;To run the example project, clone the repo, and run &lt;code&gt;pod install&lt;/code&gt; from the root directory first. Then open &lt;code&gt;SDWebImageWebPCoder.xcworkspace&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a demo to show how to use &lt;code&gt;WebP&lt;/code&gt; and animated &lt;code&gt;WebP&lt;/code&gt; images via &lt;code&gt;SDWebImageWebPCoderExample&lt;/code&gt; target.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SDWebImage/SDWebImageWebPCoder/master/Example/Screenshot/WebPDemo.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;p&gt;These WebP images are from &lt;a href=&#34;https://developers.google.com/speed/webp/gallery1&#34;&gt;WebP Gallery&lt;/a&gt; and &lt;a href=&#34;http://littlesvr.ca/apng/gif_apng_webp.html&#34;&gt;GIF vs APNG vs WebP&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bpoplauschi&#34;&gt;Bogdan Poplauschi&lt;/a&gt; &lt;a href=&#34;https://github.com/dreampiggy&#34;&gt;DreamPiggy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SDWebImageWebPCoder is available under the MIT license. See &lt;a href=&#34;https://github.com/SDWebImage/SDWebImageWebPCoder/raw/master/LICENSE&#34;&gt;the LICENSE file&lt;/a&gt; for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wix/react-native-navigation</title>
    <updated>2022-11-06T01:47:46Z</updated>
    <id>tag:github.com,2022-11-06:/wix/react-native-navigation</id>
    <link href="https://github.com/wix/react-native-navigation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A complete native navigation solution for React Native&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://vshymanskyy.github.io/StandWithUkraine&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg?sanitize=true&#34; alt=&#34;SWUbanner&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wix/react-native-navigation/master/.logo.png&#34;&gt;&lt;br&gt; React Native Navigation &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-navigation&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/react-native-navigation.svg?style=flat-square&#34; alt=&#34;NPM downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-navigation&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-navigation/latest.svg?style=flat-square&#34; alt=&#34;NPM latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-navigation&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-navigation/snapshot.svg?style=flat-square&#34; alt=&#34;NPM snapshot version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jenkins-oss.wixpress.com/job/multi-react-native-navigation-master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-react-native-navigation-master.svg?style=flat-square&#34; alt=&#34;NPM snapshot version&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/reactnativenav&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/reactnativenav.svg?style=flat-square&amp;amp;colorA=1da1f2&amp;amp;colorB=&amp;amp;label=Follow%20us%20on%20Twitter&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/DhkZjq2&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/242515947020222464.svg?color=%237289da&amp;amp;label=Chat%20on%20Discrd&amp;amp;style=flat-square&#34; alt=&#34;Chat on Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/wix-react-native-navigation&#34;&gt;&lt;img src=&#34;https://img.shields.io/stackexchange/stackoverflow/t/wix-react-native-navigation.svg?style=flat-square&#34; alt=&#34;StackExchange&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;React Native Navigation provides 100% native platform navigation on both iOS and Android for React Native apps. The JavaScript API is simple and cross-platform - just install it in your app and give your users the native feel they deserve. Ready to get started? Check out the &lt;a href=&#34;https://wix.github.io/react-native-navigation/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Quick Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wix.github.io/react-native-navigation/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wix/react-native-navigation/raw/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/wix-react-native-navigation&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/DhkZjq2&#34;&gt;Chat with us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wix.github.io/react-native-navigation/docs/meta-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;Apps using React Native Navigation may target iOS 11 and Android 5.0 (API 21). You may use Windows, macOS or Linux as your development operating system.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;As &lt;code&gt;react-native-navigation&lt;/code&gt; is a native navigation library - integrating it into your app will require editing native files. Follow the installation guides in the &lt;a href=&#34;https://wix.github.io/react-native-navigation/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>