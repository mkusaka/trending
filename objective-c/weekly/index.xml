<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Objective-C Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T02:03:28Z</updated>
  <subtitle>Weekly Trending of Objective-C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Sequel-Ace/Sequel-Ace</title>
    <updated>2022-08-21T02:03:28Z</updated>
    <id>tag:github.com,2022-08-21:/Sequel-Ace/Sequel-Ace</id>
    <link href="https://github.com/Sequel-Ace/Sequel-Ace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MySQL/MariaDB database management for macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sequel Ace &lt;img alt=&#34;Logo&#34; src=&#34;https://sequel-ace.com/images/appIcon-1024.png&#34; align=&#34;right&#34; height=&#34;80&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crowdin.com/project/sequel-ace&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/sequel-ace/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sequel Ace is the &#34;sequel&#34; to the longtime macOS tool Sequel Pro. Sequel Ace is a fast, easy-to-use Mac database management application for working with MySQL &amp;amp; MariaDB databases.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to sponsor Sequel Ace, please check out our &lt;a href=&#34;https://opencollective.com/sequel-ace&#34;&gt;Open Collective&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS:&lt;/strong&gt; &amp;gt;= 10.13 *&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Processor:&lt;/strong&gt; Intel &amp;amp; Apple Silicon&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MySQL:&lt;/strong&gt; &amp;gt;= 5.7&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MariaDB:&lt;/strong&gt; &amp;gt;= 10.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: An &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/releases/tag/production%2F3.5.2-20033&#34;&gt;older version of Sequel Ace (version 3.5.2)&lt;/a&gt; is available to download for macOS versions 10.12 or for MySQL 5.6 support.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: An &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/releases/tag/production%2F2.3.2-2121&#34;&gt;older version of Sequel Ace (version 2.3.2)&lt;/a&gt; is available to download for macOS versions 10.10 and 10.11.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;* To run Sequel Ace on Mac OS X 10.13-10.14.4, you need to install Apple&#39;s Swift Standard Libraries for the app to work as expected. You can download this support package free of charge from &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/raw/main/Scripts/&#34;&gt;here (this repository)&lt;/a&gt; or &lt;a href=&#34;https://support.apple.com/kb/DL1998?locale=en_GB&#34;&gt;here (Apple directly)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Mac AppStore &lt;a href=&#34;https://apps.apple.com/us/app/sequel-ace/id1518036000?ls=1&#34;&gt;&lt;img alt=&#34;Download on the Mac AppStore&#34; src=&#34;https://sequel-ace.com/images/download_on_mas.png&#34; align=&#34;right&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Download Sequel Ace today from the &lt;a href=&#34;https://apps.apple.com/us/app/sequel-ace/id1518036000?ls=1&#34;&gt;macOS App Store&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;MAS CLI&lt;/h3&gt; &#xA;&lt;p&gt;To install via &lt;code&gt;mas&lt;/code&gt; &lt;a href=&#34;https://github.com/mas-cli/mas&#34;&gt;MAS CLI&lt;/a&gt; use Sequel Ace id &lt;code&gt;1518036000&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mas install 1518036000 # Sequel Ace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;To install an unofficial community maintained &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask&#34;&gt;Cask&lt;/a&gt; of the &lt;a href=&#34;https://github.com/sequel-ace/sequel-ace/releases&#34;&gt;GitHub Release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install --cask sequel-ace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Moving Saved Connections from Sequel Pro&lt;/h2&gt; &#xA;&lt;p&gt;To migrate your favorites, please check the &lt;a href=&#34;https://sequel-ace.com/get-started/migrating-from-sequel-pro.html&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/raw/main/Guides/Contributing.md&#34;&gt;this&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to help with translations, please sign up for Crowdin and join our &lt;a href=&#34;https://crowdin.com/project/sequel-ace&#34;&gt;Crowdin project&lt;/a&gt; to translate Sequel Ace into supported languages. Also, if you want to add a new language, please &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/issues/new/choose&#34;&gt;create a new issue&lt;/a&gt;, and we will be happy to enable that language for you to translate!&lt;/p&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;If you would like to help with code and development, please see either our &lt;a href=&#34;https://github.com/sequel-ace/sequel-ace/projects&#34;&gt;projects page&lt;/a&gt; or &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/issues/new/choose&#34;&gt;issues&lt;/a&gt; with relevant labels such as &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/issues?q=is%3Aopen+is%3Aissue+label%3A%22Help+wanted%22&#34;&gt;Help Wanted&lt;/a&gt;, &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/issues?q=is%3Aopen+is%3Aissue+label%3ABug&#34;&gt;Bug&lt;/a&gt;, &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/labels/Feature%20Request&#34;&gt;Feature Request&lt;/a&gt;, and &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/labels/PR%20Welcome&#34;&gt;PR Welcome&lt;/a&gt;. These lists contain the issues where we would most like your help. There are both challenging and straightforward tasks there, so new contributors should be able to get started. For more technical information see &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/raw/main/Guides/Developing.md&#34;&gt;the developer guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;main: Main is our active development branch. All contribution PRs should be pointed at main!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tags &amp;amp; Releases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;production/ tags represent submissions to the macOS App Store. These are marked as &#34;Pre-Release&#34; until approved by Apple and officially released by the team. Both release candidates and final releases use production/ tags. Release candidates will have RC or Release Candidate in their title.&lt;/li&gt; &#xA; &lt;li&gt;beta/ tags represent pre-release versions of Sequel Ace intended to test new features and bug fixes. The downloadable app in a beta/ tag has a different name and identifier (Sequel Ace Beta), meaning you can install it side-by-side with the latest App Store release. Beta releases also have increased logging turned on to help us identify critical issues.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please refer &lt;a href=&#34;https://github.com/Sequel-Ace/Sequel-Ace/raw/main/Guides/Code_of_conduct.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2020-2022 Moballo, LLC. All rights reserved. Forked from Sequel Pro: Copyright (c) 2002-2019 Sequel Pro &amp;amp; CocoaMySQL Teams. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Sequel Ace is free and open-source software licensed under &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;. See &lt;a href=&#34;https://github.com/sequel-ace/sequel-ace/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for complete details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>QMUI/LookinServer</title>
    <updated>2022-08-21T02:03:28Z</updated>
    <id>tag:github.com,2022-08-21:/QMUI/LookinServer</id>
    <link href="https://github.com/QMUI/LookinServer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free macOS app for iOS view debugging.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.lookin.work/public/style/images/independent/homepage/preview_en_1x.jpg&#34; alt=&#34;Preview&#34; title=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;You can inspect and modify views in iOS app via Lookin, just like UI Inspector in Xcode, or another app called Reveal.&lt;/p&gt; &#xA;&lt;p&gt;Official Website：&lt;a href=&#34;https://lookin.work/&#34;&gt;https://lookin.work/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Integration Guide&lt;/h1&gt; &#xA;&lt;p&gt;To use Lookin macOS app, you need to integrate LookinServer (iOS Framework of Lookin) into your iOS project.&lt;/p&gt; &#xA;&lt;p&gt;Warning: Never integrate LookinServer in Release building configuration.&lt;/p&gt; &#xA;&lt;h2&gt;via CocoaPods:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pod &#39;LookinServer&#39;, :configurations =&amp;gt; [&#39;Debug&#39;]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;via Swift Package Manager:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;https://github.com/QMUI/LookinServer/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Repository&lt;/h1&gt; &#xA;&lt;p&gt;LookinServer: &lt;a href=&#34;https://github.com/QMUI/LookinServer&#34;&gt;https://github.com/QMUI/LookinServer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;macOS app: &lt;a href=&#34;https://github.com/hughkli/Lookin/&#34;&gt;https://github.com/hughkli/Lookin/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;Unfortunately, it&#39;s hard for me to spend much time on this free open-source side project.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ll try my best to fix bug &amp;amp; feature issues, but I cannot give a timetable. Sorry for that.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;简介&lt;/h1&gt; &#xA;&lt;p&gt;Lookin 可以查看与修改 iOS App 里的 UI 对象，类似于 Xcode 自带的 UI Inspector 工具，或另一款叫做 Reveal 的软件。&lt;/p&gt; &#xA;&lt;p&gt;官网：&lt;a href=&#34;https://lookin.work/&#34;&gt;https://lookin.work/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;安装 LookinServer Framework&lt;/h1&gt; &#xA;&lt;p&gt;如果这是你的 iOS 项目第一次使用 Lookin，则需要先把 LookinServer 这款 iOS Framework 集成到你的 iOS 项目中。&lt;/p&gt; &#xA;&lt;p&gt;记得不要在 AppStore 模式下集成 LookinServer。&lt;/p&gt; &#xA;&lt;h2&gt;通过 CocoaPods：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;pod &#39;LookinServer&#39;, :configurations =&amp;gt; [&#39;Debug&#39;]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;通过 Swift Package Manager:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;https://github.com/QMUI/LookinServer/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;源代码仓库&lt;/h1&gt; &#xA;&lt;p&gt;iOS 端 LookinServer：&lt;a href=&#34;https://github.com/QMUI/LookinServer&#34;&gt;https://github.com/QMUI/LookinServer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;macOS 端软件：&lt;a href=&#34;https://github.com/hughkli/Lookin/&#34;&gt;https://github.com/hughkli/Lookin/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;开发节奏&lt;/h1&gt; &#xA;&lt;p&gt;由于在公司里的正职实在是太忙了，导致我很难在这个开源免费项目上花费太多时间和精力。&lt;/p&gt; &#xA;&lt;p&gt;所以 Bug 修复可能较慢，请见谅。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CocoaLumberjack/CocoaLumberjack</title>
    <updated>2022-08-21T02:03:28Z</updated>
    <id>tag:github.com,2022-08-21:/CocoaLumberjack/CocoaLumberjack</id>
    <link href="https://github.com/CocoaLumberjack/CocoaLumberjack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast &amp; simple, yet powerful &amp; flexible logging framework for Mac and iOS&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/LumberjackLogo.png&#34; title=&#34;Lumberjack logo&#34; float=&#34;left&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;CocoaLumberjack&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/CocoaLumberjack/CocoaLumberjack/workflows/Unit%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit Tests&#34;&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/CocoaLumberjack/&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/v/CocoaLumberjack.svg?style=flat&#34; alt=&#34;Pod Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&#34; alt=&#34;Carthage compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cocoadocs.org/docsets/CocoaLumberjack/&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/p/CocoaLumberjack.svg?style=flat&#34; alt=&#34;Pod Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://opensource.org/licenses/BSD-3-Clause&#34;&gt;&lt;img src=&#34;http://img.shields.io/cocoapods/l/CocoaLumberjack.svg?style=flat&#34; alt=&#34;Pod License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/CocoaLumberjack/CocoaLumberjack&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/CocoaLumberjack/CocoaLumberjack/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-cocoalumberjack-cocoalumberjack-master&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/840b714a-c8f3-4936-ada4-363473cd4e6b&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CocoaLumberjack&lt;/strong&gt; is a fast &amp;amp; simple, yet powerful &amp;amp; flexible logging framework for macOS, iOS, tvOS and watchOS.&lt;/p&gt; &#xA;&lt;h2&gt;How to get started&lt;/h2&gt; &#xA;&lt;p&gt;First, install CocoaLumberjack via &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;, &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;, &lt;a href=&#34;https://swift.org/package-manager/&#34;&gt;Swift Package Manager&lt;/a&gt; or manually. Then use &lt;code&gt;DDOSLogger&lt;/code&gt; for iOS 10 and later, or &lt;code&gt;DDTTYLogger&lt;/code&gt; and &lt;code&gt;DDASLLogger&lt;/code&gt; for earlier versions to begin logging messages.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;platform :ios, &#39;9.0&#39;&#xA;&#xA;target &#39;SampleTarget&#39; do&#xA;  use_frameworks!&#xA;  pod &#39;CocoaLumberjack/Swift&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;Swift&lt;/code&gt; is a subspec which will include all the Obj-C code plus the Swift one, so this is sufficient. For more details about how to use Swift with Lumberjack, see &lt;a href=&#34;https://github.com/CocoaLumberjack/CocoaLumberjack/issues/405&#34;&gt;this conversation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Objective-C use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;platform :ios, &#39;9.0&#39;&#xA;&#xA;target &#39;SampleTarget&#39; do&#xA;    pod &#39;CocoaLumberjack&#39;&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Carthage&lt;/h3&gt; &#xA;&lt;p&gt;Carthage is a lightweight dependency manager for Swift and Objective-C. It leverages CocoaTouch modules and is less invasive than CocoaPods.&lt;/p&gt; &#xA;&lt;p&gt;To install with Carthage, follow the instruction on &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;Carthage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cartfile&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;github &#34;CocoaLumberjack/CocoaLumberjack&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Swift Package Manager&lt;/h3&gt; &#xA;&lt;p&gt;As of CocoaLumberjack 3.6.0, you can use the Swift Package Manager as integration method. If you want to use the Swift Package Manager as integration method, either use Xcode to add the package dependency or add the following dependency to your Package.swift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;.package(url: &#34;https://github.com/CocoaLumberjack/CocoaLumberjack.git&#34;, from: &#34;3.7.0&#34;),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that you may need to add both products, &lt;code&gt;CocoaLumberjack&lt;/code&gt; and &lt;code&gt;CocoaLumberjackSwift&lt;/code&gt; to your target since SPM sometimes fails to detect that &lt;code&gt;CocoaLumerjackSwift&lt;/code&gt; depends on &lt;code&gt;CocoaLumberjack&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install manually&lt;/h3&gt; &#xA;&lt;p&gt;If you want to install CocoaLumberjack manually, read the &lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/GettingStarted.md#manual-installation&#34;&gt;manual installation&lt;/a&gt; guide for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Usage&lt;/h3&gt; &#xA;&lt;p&gt;Usually, you can simply &lt;code&gt;import CocoaLumberjackSwift&lt;/code&gt;. If you installed CocoaLumberjack using CocoaPods, you need to use &lt;code&gt;import CocoaLumberjack&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;DDLog.add(DDOSLogger.sharedInstance) // Uses os_log&#xA;&#xA;let fileLogger: DDFileLogger = DDFileLogger() // File Logger&#xA;fileLogger.rollingFrequency = 60 * 60 * 24 // 24 hours&#xA;fileLogger.logFileManager.maximumNumberOfLogFiles = 7&#xA;DDLog.add(fileLogger)&#xA;&#xA;...&#xA;&#xA;DDLogVerbose(&#34;Verbose&#34;)&#xA;DDLogDebug(&#34;Debug&#34;)&#xA;DDLogInfo(&#34;Info&#34;)&#xA;DDLogWarn(&#34;Warn&#34;)&#xA;DDLogError(&#34;Error&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Obj-C usage&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using Lumberjack as a framework, you can &lt;code&gt;@import CocoaLumberjack;&lt;/code&gt;. Otherwise, &lt;code&gt;#import &amp;lt;CocoaLumberjack/CocoaLumberjack.h&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;[DDLog addLogger:[DDOSLogger sharedInstance]]; // Uses os_log&#xA;&#xA;DDFileLogger *fileLogger = [[DDFileLogger alloc] init]; // File Logger&#xA;fileLogger.rollingFrequency = 60 * 60 * 24; // 24 hour rolling&#xA;fileLogger.logFileManager.maximumNumberOfLogFiles = 7;&#xA;[DDLog addLogger:fileLogger];&#xA;&#xA;...&#xA;&#xA;DDLogVerbose(@&#34;Verbose&#34;);&#xA;DDLogDebug(@&#34;Debug&#34;);&#xA;DDLogInfo(@&#34;Info&#34;);&#xA;DDLogWarn(@&#34;Warn&#34;);&#xA;DDLogError(@&#34;Error&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Objective-C ARC Semantic Issue&lt;/h3&gt; &#xA;&lt;p&gt;When integrating Lumberjack into an existing Objective-C it is possible to run into &lt;code&gt;Multiple methods named &#39;tag&#39; found with mismatched result, parameter type or attributes&lt;/code&gt; build error.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;code&gt;#define DD_LEGACY_MESSAGE_TAG 0&lt;/code&gt; before importing CocoaLumberjack or add &lt;code&gt;#define DD_LEGACY_MESSAGE_TAG 0&lt;/code&gt; or add &lt;code&gt;-DDD_LEGACY_MESSAGE_TAG=0&lt;/code&gt; to &lt;em&gt;Other C Flags&lt;/em&gt;/&lt;em&gt;OTHER_CFLAGS&lt;/em&gt; in your Xcode project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/apple/swift-log&#34;&gt;swift-log&lt;/a&gt; backend&lt;/h2&gt; &#xA;&lt;p&gt;CocoaLumberjack also ships with a backend implementation for &lt;a href=&#34;https://github.com/apple/swift-log&#34;&gt;swift-log&lt;/a&gt;. Simply add CocoaLumberjack as dependency to your SPM target (see above) and also add the &lt;code&gt;CocoaLumberjackSwiftLogBackend&lt;/code&gt; product as dependency to your target.&lt;/p&gt; &#xA;&lt;p&gt;You can then use &lt;code&gt;DDLogHandler&lt;/code&gt; as backend for swift-log, which will forward all messages to CocoaLumberjack&#39;s &lt;code&gt;DDLog&lt;/code&gt;. You will still configure the loggers and log formatters you want via &lt;code&gt;DDLog&lt;/code&gt;, but writing log messages will be done using &lt;code&gt;Logger&lt;/code&gt; from swift-log.&lt;/p&gt; &#xA;&lt;p&gt;In your own log formatters, you can make use of the &lt;code&gt;swiftLogInfo&lt;/code&gt; property on &lt;code&gt;DDLogMessage&lt;/code&gt; to retrieve the details of a message that is logged via swift-log.&lt;/p&gt; &#xA;&lt;p&gt;To use swift-log with CocoaLumberjack, take a look the following code snippet to see how to get started.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Import necessary packages&#xA;import CocoaLumberjackSwift&#xA;import CocoaLumberjackSwiftLogBackend&#xA;import Logging&#xA;&#xA;// In your application&#39;s entry point (e.g. AppDelegate):&#xA;DDLog.add(DDOSLogger.sharedInstance) // Configure loggers&#xA;LoggingSystem.bootstrapWithCocoaLumberjack() // Use CocoaLumberjack as swift-log backend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;read the &lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/GettingStarted.md&#34;&gt;Getting started&lt;/a&gt; guide, check out the &lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/FAQ.md&#34;&gt;FAQ&lt;/a&gt; section or the other &lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/&#34;&gt;docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;if you find issues or want to suggest improvements, create an issue or a pull request&lt;/li&gt; &#xA; &lt;li&gt;for all kinds of questions involving CocoaLumberjack, use the &lt;a href=&#34;https://groups.google.com/group/cocoalumberjack&#34;&gt;Google group&lt;/a&gt; or StackOverflow (use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/lumberjack&#34;&gt;#lumberjack&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CocoaLumberjack 3&lt;/h2&gt; &#xA;&lt;h3&gt;Migrating to 3.x&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To be determined&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Lumberjack is Fast &amp;amp; Simple, yet Powerful &amp;amp; Flexible.&lt;/h3&gt; &#xA;&lt;p&gt;It is similar in concept to other popular logging frameworks such as log4j, yet is designed specifically for Objective-C, and takes advantage of features such as multi-threading, grand central dispatch (if available), lockless atomic operations, and the dynamic nature of the Objective-C runtime.&lt;/p&gt; &#xA;&lt;h3&gt;Lumberjack is Fast&lt;/h3&gt; &#xA;&lt;p&gt;In most cases it is an order of magnitude faster than NSLog.&lt;/p&gt; &#xA;&lt;h3&gt;Lumberjack is Simple&lt;/h3&gt; &#xA;&lt;p&gt;It takes as little as a single line of code to configure lumberjack when your application launches. Then simply replace your NSLog statements with DDLog statements and that&#39;s about it. (And the DDLog macros have the exact same format and syntax as NSLog, so it&#39;s super easy.)&lt;/p&gt; &#xA;&lt;h3&gt;Lumberjack is Powerful:&lt;/h3&gt; &#xA;&lt;p&gt;One log statement can be sent to multiple loggers, meaning you can log to a file and the console simultaneously. Want more? Create your own loggers (it&#39;s easy) and send your log statements over the network. Or to a database or distributed file system. The sky is the limit.&lt;/p&gt; &#xA;&lt;h3&gt;Lumberjack is Flexible:&lt;/h3&gt; &#xA;&lt;p&gt;Configure your logging however you want. Change log levels per file (perfect for debugging). Change log levels per logger (verbose console, but concise log file). Change log levels per xcode configuration (verbose debug, but concise release). Have your log statements compiled out of the release build. Customize the number of log levels for your application. Add your own fine-grained logging. Dynamically change log levels during runtime. Choose how &amp;amp; when you want your log files to be rolled. Upload your log files to a central server. Compress archived log files to save disk space...&lt;/p&gt; &#xA;&lt;h2&gt;This framework is for you if:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;re looking for a way to track down that impossible-to-reproduce bug that keeps popping up in the field.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re frustrated with the super short console log on the iPhone.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re looking to take your application to the next level in terms of support and stability.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re looking for an enterprise level logging solution for your application (Mac or iPhone).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/GettingStarted.md&#34;&gt;Get started using Lumberjack&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/XcodeTricks.md&#34;&gt;Different log levels for Debug and Release builds&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/PerLoggerLogLevels.md&#34;&gt;Different log levels for each logger&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/XcodeColors.md&#34;&gt;Use colors in the Xcode debugging console&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/CustomFormatters.md&#34;&gt;Write your own custom formatters&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/FAQ.md&#34;&gt;FAQ&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/Performance.md&#34;&gt;Analysis of performance with benchmarks&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/ProblemSolution.md&#34;&gt;Common issues you may encounter and their solutions&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/AppCode-support.md&#34;&gt;AppCode support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/&#34;&gt;Full Lumberjack documentation&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The current version of Lumberjack requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 12 or later&lt;/li&gt; &#xA; &lt;li&gt;Swift 5.3 or later&lt;/li&gt; &#xA; &lt;li&gt;iOS 9 or later&lt;/li&gt; &#xA; &lt;li&gt;macOS 10.10 or later&lt;/li&gt; &#xA; &lt;li&gt;watchOS 3 or later&lt;/li&gt; &#xA; &lt;li&gt;tvOS 9 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Backwards compatibility&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for Xcode 11 and Swift up to 5.2, use the 3.6.2 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 10 and Swift 4.2, use the 3.5.2 version&lt;/li&gt; &#xA; &lt;li&gt;for iOS 8, use the 3.6.1 version&lt;/li&gt; &#xA; &lt;li&gt;for iOS 6, iOS 7, OS X 10.8, OS X 10.9 and Xcode 9, use the 3.4.2 version&lt;/li&gt; &#xA; &lt;li&gt;for iOS 5 and OS X 10.7, use the 3.3 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 8 and Swift 3, use the 3.2 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 7.3 and Swift 2.3, use the 2.4.0 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 7.3 and Swift 2.2, use the 2.3.0 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 7.2 and 7.1, use the 2.2.0 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 7.0 or earlier, use the 2.1.0 version&lt;/li&gt; &#xA; &lt;li&gt;for Xcode 6 or earlier, use the 2.0.x version&lt;/li&gt; &#xA; &lt;li&gt;for OS X &amp;lt; 10.7 support, use the 1.6.0 version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;need help&lt;/strong&gt;, use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/lumberjack&#34;&gt;Stack Overflow&lt;/a&gt;. (Tag &#39;lumberjack&#39;)&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to &lt;strong&gt;ask a general question&lt;/strong&gt;, use &lt;a href=&#34;https://stackoverflow.com/questions/tagged/lumberjack&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt;, open an issue.&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Collection Practices&lt;/h2&gt; &#xA;&lt;p&gt;Per &lt;a href=&#34;https://developer.apple.com/app-store/app-privacy-details/&#34;&gt;App privacy details on the App Store&lt;/a&gt;, Apple is requesting app developers to provide info about their data collection, us SDK maintainers must provide them with the same data.&lt;/p&gt; &#xA;&lt;h3&gt;Data collection by the framework&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;By default, CocoaLumberjack does NOT collect any data on its own.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cocoalumberjack.github.io/DataCollection/index.html&#34;&gt;See our Data Collection Practices list.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Indirect data collection through the framework&lt;/h3&gt; &#xA;&lt;p&gt;CocoaLumberjack is a logging framework which makes it easy to send those logs to different platforms.&lt;/p&gt; &#xA;&lt;p&gt;This is why collecting data might happen quite easily, if app developers include any sensitive data into their log messages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important note: app developers are fully responsible for any sensitive data collected through our logging system!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In consequence, you must comply to the Apple&#39;s privacy details policy (mentioned above) and document the ways in which user data is being collected. Since the number of scenarios where data might be indirectly collected through CocoaLumberjack is quite large, it&#39;s up to you, as app developers, to properly review your app&#39;s code and identify those cases. What we can do to help is raise awareness about potential data collection through our framework.&lt;/p&gt; &#xA;&lt;p&gt;Private data includes but isn&#39;t limited to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;user info (name, email, address, ...)&lt;/li&gt; &#xA; &lt;li&gt;location info&lt;/li&gt; &#xA; &lt;li&gt;contacts&lt;/li&gt; &#xA; &lt;li&gt;identifiers (user id, device id, ...)&lt;/li&gt; &#xA; &lt;li&gt;app usage data&lt;/li&gt; &#xA; &lt;li&gt;performance data&lt;/li&gt; &#xA; &lt;li&gt;health and fitness info&lt;/li&gt; &#xA; &lt;li&gt;financial info&lt;/li&gt; &#xA; &lt;li&gt;sensitive info&lt;/li&gt; &#xA; &lt;li&gt;user content&lt;/li&gt; &#xA; &lt;li&gt;history (browsing, search, ...)&lt;/li&gt; &#xA; &lt;li&gt;purchases&lt;/li&gt; &#xA; &lt;li&gt;diagnostics&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Example&lt;/em&gt;: &lt;code&gt;DDLogInfo(&#34;User: \(myUser)&#34;)&lt;/code&gt; will add the &lt;code&gt;myUser&lt;/code&gt; info to the logs, so if those are forwarded to a 3rd party or sent via email, that may qualify as data collection.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robbiehanson&#34;&gt;Robbie Hanson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Love the project? Wanna buy me a coffee? (or a beer :D) &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=UZRA26JPJB3DA&#34;&gt;&lt;img src=&#34;http://www.paypal.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;donation&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Collaborators&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rivera-ernesto&#34;&gt;Ernesto Rivera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dvor&#34;&gt;Dmitry Vorobyov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bpoplauschi&#34;&gt;Bogdan Poplauschi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaddTheSane&#34;&gt;C.W. Betts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sushichop&#34;&gt;Koichi Yokota (sushichop)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nrbrook&#34;&gt;Nick Brook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ffried&#34;&gt;Florian Friedrich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/diederich&#34;&gt;Stephan Diederich&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ksuther&#34;&gt;Kent Sutherland&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lolgear&#34;&gt;Dmitry Lobanov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hhanesand&#34;&gt;Hakon Hanesand&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CocoaLumberjack is available under the BSD 3 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/LICENSE&#34;&gt;LICENSE file&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bugfender/BugfenderSDK-CocoaLumberjack&#34;&gt;BugfenderSDK-CocoaLumberjack&lt;/a&gt; A Bugfender logger for CocoaLumberjack&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s4nchez/LogIO-CocoaLumberjack&#34;&gt;LogIO-CocoaLumberjack&lt;/a&gt; A log.io logger for CocoaLumberjack&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xced/XCDLumberjackNSLogger&#34;&gt;XCDLumberjackNSLogger&lt;/a&gt; CocoaLumberjack logger which sends logs to NSLogger&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CocoaLumberjack/CocoaLumberjack/master/Documentation/CocoaLumberjackClassDiagram.png&#34; title=&#34;CocoaLumberjack class diagram&#34;&gt; &lt;/p&gt;</summary>
  </entry>
</feed>